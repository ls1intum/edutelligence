<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.tum.cit.aet.edutelligence</groupId>
    <artifactId>hyperion</artifactId>
    <version>1.1.0</version>
    <packaging>jar</packaging>

    <name>Hyperion Java gRPC Client</name>
    <description>Java gRPC client library for Edutelligence's Hyperion</description>
    <url>https://github.com/ls1intum/edutelligence</url>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>ls1intum</id>
            <name>AET TUM</name>
            <organization>Applied Educational Technologies</organization>
            <organizationUrl>https://aet.cit.tum.de/</organizationUrl>
        </developer>

        <developer>
            <id>felixtjdietrich</id>
            <name>Felix T.J. Dietrich</name>
            <organization>Applied Educational Technologies</organization>
            <organizationUrl>https://aet.cit.tum.de/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/ls1intum/edutelligence.git</connection>
        <developerConnection>scm:git:ssh://github.com/ls1intum/edutelligence.git</developerConnection>
        <url>https://github.com/ls1intum/edutelligence</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <grpc.version>1.73.0</grpc.version>
        <protobuf.version>3.25.5</protobuf.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.7.1</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <phase>install</phase>
                        <goals><goal>install</goal></goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-proto-files</id>
                        <phase>initialize</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.basedir}/src/main/proto"/>
                                <copy file="${project.basedir}/../app/protos/hyperion.proto"
                                      todir="${project.basedir}/src/main/proto"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>show-usage-info</id>
                        <phase>install</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <target>
                                <echo message="🚀 ========================================"/>
                                <echo message="   HYPERION JAVA CLIENT INSTALLED!"/>
                                <echo message="========================================"/>
                                <echo message=""/>
                                <echo message="✅ Installed version: ${install.version}"/>
                                <echo message=""/>
                                <echo message="📝 To use in Artemis, add this dependency:"/>
                                <echo message='   implementation "de.tum.cit.aet:hyperion:${install.version}"'/>
                                <echo message=""/>
                                <echo message="💡 Need different version behavior?"/>
                                <echo message="   mvn install -DskipLocalVersioning=true"/>
                                <echo message="========================================"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.12.1</version>
                <configuration>
                    <release>17</release>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <goals><goal>jar-no-fork</goal></goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.6.3</version>
                <configuration>
                    <doclint>none</doclint>
                    <quiet>true</quiet>
                </configuration>
                <executions>
                    <execution>
                        <goals><goal>jar</goal></goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <keyname>${gpg.keyname}</keyname>
                    <passphrase>${gpg.passphrase}</passphrase>
                    <gpgArguments>
                        <arg>--batch</arg>
                        <arg>--no-tty</arg>
                        <arg>--pinentry-mode</arg>
                        <arg>loopback</arg>
                    </gpgArguments>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals><goal>sign</goal></goals>
                        <configuration>
                            <skip>${gpg.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.7.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>central</publishingServerId>
                    <autoPublish>true</autoPublish>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>central</id>
            <url>https://central.sonatype.com/repository/maven-snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>central</id>
            <url>https://central.sonatype.com/</url>
        </repository>
    </distributionManagement>

    <profiles>
        <!-- Profile for local development with dynamic versioning -->
        <profile>
            <id>local</id>
            <activation>
                <property>
                    <name>!skipLocalVersioning</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>set-branch-version</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>-c</argument>
                                        <argument>
                                            BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "unknown")
                                            SANITIZED_BRANCH=$(echo "$BRANCH" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
                                            echo "Using branch snapshot version for branch: $BRANCH (sanitized: $SANITIZED_BRANCH)"
                                            mkdir -p ${project.build.directory}
                                            echo "install.version=${project.version}-$SANITIZED_BRANCH-SNAPSHOT" > ${project.build.directory}/branch.properties
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <executions>
                            <execution>
                                <id>read-branch-properties</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>${project.build.directory}/branch.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <version>3.1.2</version>
                        <executions>
                            <execution>
                                <id>default-install</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>install-with-dynamic-version</id>
                                <phase>install</phase>
                                <goals><goal>install-file</goal></goals>
                                <configuration>
                                    <file>${project.build.directory}/${project.artifactId}-${project.version}.jar</file>
                                    <sources>${project.build.directory}/${project.artifactId}-${project.version}-sources.jar</sources>
                                    <javadoc>${project.build.directory}/${project.artifactId}-${project.version}-javadoc.jar</javadoc>
                                    <pomFile>${project.basedir}/pom.xml</pomFile>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${install.version}</version>
                                    <packaging>${project.packaging}</packaging>
                                    <generatePom>false</generatePom>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile for skipping GPG signing during development -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <gpg.skip>true</gpg.skip>
            </properties>
        </profile>

        <!-- Profile for releasing (with GPG signing) -->
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <gpg.skip>false</gpg.skip>
            </properties>
        </profile>

        <!-- Profile for GitHub Packages -->
        <profile>
            <id>github</id>
            <properties>
                <gpg.skip>true</gpg.skip>
            </properties>
            <distributionManagement>
                <repository>
                    <id>github</id>
                    <name>GitHub Packages</name>
                    <url>https://maven.pkg.github.com/ls1intum/edutelligence</url>
                </repository>
                <snapshotRepository>
                    <id>github</id>
                    <name>GitHub Packages</name>
                    <url>https://maven.pkg.github.com/ls1intum/edutelligence</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
    </profiles>
</project>
