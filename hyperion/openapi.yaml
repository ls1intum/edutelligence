components:
  responses:
    UnauthorizedError:
      content:
        application/json:
          schema:
            properties:
              detail:
                type: string
            type: object
      description: Authentication failed - API key is missing or invalid
  schemas:
    ComponentHealth:
      description: Health status of an individual system component.
      properties:
        details:
          nullable: true
      required:
      - status
      title: ComponentHealth
      type: object
    ConsistencyCheckRequest:
      description: Request model for consistency checking.
      properties:
        exercise:
          $ref: '#/components/schemas/ProgrammingExercise'
          description: The programming exercise to check for consistency
      required:
      - exercise
      title: ConsistencyCheckRequest
      type: object
    ConsistencyCheckResponse:
      description: Response model for consistency checking.
      properties:
        issues:
          description: List of consistency issues found
          items:
            $ref: '#/components/schemas/ConsistencyIssue'
          title: Issues
          type: array
        status:
          default: success
          description: Status of the consistency check
          title: Status
          type: string
        summary:
          default: ''
          description: A summary of all consistency issues
          title: Summary
          type: string
      title: ConsistencyCheckResponse
      type: object
    ConsistencyIssue:
      description: Data model representing a consistency issue found in the exercise.
      properties:
        description:
          description: Description of the consistency issue
          title: Description
          type: string
        file_path:
          description: Path to the file with consistency issue
          title: File Path
          type: string
      required:
      - file_path
      - description
      title: ConsistencyIssue
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HealthCheck:
      description: Response model for system health information.
      example:
        components:
          system:
            details:
              platform: macOS-14.3.1-arm64
            status: OK
        status: OK
        timestamp: '2025-03-06T12:00:00'
        uptime_seconds: 3600
        version: 1.0.0
      properties:
        components:
          additionalProperties:
            $ref: '#/components/schemas/ComponentHealth'
          description: Status of individual components
          title: Components
          type: object
        status:
          description: Overall system status
          title: Status
          type: string
        timestamp:
          description: Time when health check was performed
          format: date-time
          title: Timestamp
          type: string
        uptime_seconds:
          description: Application uptime in seconds
          title: Uptime Seconds
          type: integer
        version:
          description: Application version
          title: Version
          type: string
      required:
      - status
      - version
      - uptime_seconds
      title: HealthCheck
      type: object
    ProgrammingExercise:
      description: Data model representing a programming exercise with problem statement
        and repository files.
      properties:
        problem_statement:
          description: The description of the exercise containing tasks
          title: Problem Statement
          type: string
        solution_repository:
          additionalProperties:
            type: string
          description: Files in the solution repository, mapping file paths to content
          title: Solution Repository
          type: object
        template_repository:
          additionalProperties:
            type: string
          description: Files in the template repository, mapping file paths to content
          title: Template Repository
          type: object
      required:
      - problem_statement
      - template_repository
      - solution_repository
      title: ProgrammingExercise
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    ApiKeyAuth:
      description: API key authentication
      in: header
      name: X-API-Key
      type: apiKey
info:
  contact:
    email: felixtj.dietrich@tum.de
    name: Felix T.J. Dietrich
  description: Hyperion is an AI-powered FastAPI microservice that empowers instructors
    by generating and refining programming exercises. By integrating with modern learning
    management systems and CI build agents, Hyperion delivers context-aware suggestions
    and code stubs to enhance educational content.
  title: Hyperion
  version: 0.1.0
openapi: 3.1.0
paths:
  /consistency-check/check:
    post:
      description: Check for consistency issues in a programming exercise
      operationId: check_consistency_consistency_check_check_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencyCheckRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencyCheckResponse'
          description: Successful Response
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal server error
      summary: Check Consistency
      tags:
      - consistency-check
  /health:
    get:
      description: "## Perform a Health Check\n\nEndpoint to perform a health check\
        \ on the service. This endpoint can be used by:\n\n- Container orchestrators\
        \ like Docker or Kubernetes to ensure service health\n- Load balancers to\
        \ determine if the service should receive traffic\n- Monitoring tools to track\
        \ service availability\n\nThe endpoint returns information about system health\
        \ including uptime and version.\n\nReturns:\n    HealthCheck: Health status\
        \ information"
      operationId: get_health_health_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: Return HTTP Status Code 200 (OK) with system health information
      security: []
      summary: Perform a Health Check
      tags:
      - healthcheck
  /health/live:
    get:
      description: 'Simple liveness check endpoint that returns 200 OK when the service
        is running.

        This endpoint is lightweight and can be called frequently by infrastructure.'
      operationId: get_liveness_health_live_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Simple liveness check that always returns OK if service is
            running
      security: []
      summary: Liveness Check
      tags:
      - healthcheck
  /run:
    get:
      operationId: run_run_get
      parameters:
      - in: query
        name: query
        required: true
        schema:
          title: Query
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Run Run Get
                type: string
          description: Successful Response
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Run
security:
- ApiKeyAuth: []
