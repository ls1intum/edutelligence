services:
  hyperion:
    image: "ghcr.io/ls1intum/edutelligence/hyperion:${IMAGE_TAG}"
    env_file:
      - .env  # Load environment variables from .env file
    environment:
      # Production defaults (can be overridden by .env file)
      API_KEY_HEADER: ${API_KEY_HEADER:-X-API-Key}
      API_KEY: ${API_KEY}
      DISABLE_AUTH: ${DISABLE_AUTH:-false}
      MODEL_NAME: ${MODEL_NAME}
      
      # Note: All other environment variables (AI providers, tracing, etc.)
      # are loaded from .env file via the env_file directive above
    restart: unless-stopped
    ports:
      - '8000'
    networks:
      - shared-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.http-application-server.entryPoints=http"
      - "traefik.http.routers.http-application-server.middlewares=redirect-to-https"
      - "traefik.http.routers.http-application-server.rule=Host(`${APP_HOSTNAME}`) && PathPrefix(`/`)"
      - "traefik.http.routers.https-application-server.entryPoints=https"
      - "traefik.http.routers.https-application-server.rule=Host(`${APP_HOSTNAME}`) && PathPrefix(`/`)"
      - "traefik.http.routers.https-application-server.tls.certresolver=letsencrypt"
      - "traefik.http.routers.https-application-server.tls=true"
      - "traefik.http.routers.http-application-server.priority=5"
      - "traefik.http.routers.https-application-server.priority=10"

networks:
  shared-network:
    name: shared-network
    driver: bridge
