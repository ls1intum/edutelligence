services:
  hyperion-dev:
    image: python:3.13-alpine
    working_dir: /app/hyperion
    command: >
      sh -c "
        apk update && 
        apk add --no-cache gcc musl-dev postgresql-dev rust cargo curl &&
        pip install poetry==2.1.1 &&
        cd /app/hyperion &&
        poetry install --no-root &&
        poetry run fastapi dev app/main.py --host 0.0.0.0 --port 8000 --reload
      "
    environment:
      # Core FastAPI settings
      PYTHONPATH: /app/hyperion:/app
      PYTHONUNBUFFERED: 1
      
      # Development defaults (can be overridden by .env file)
      API_KEY_HEADER: ${API_KEY_HEADER:-X-API-Key}
      API_KEY: ${API_KEY:-local-development-key}
      DISABLE_AUTH: ${DISABLE_AUTH:-true}
      
      # All other environment variables (AI providers, tracing, etc.) 
      # are automatically passed through from .env file
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for hot reloading
      - ../../shared:/app/shared:ro
      - ..:/app/hyperion
      # Cache poetry dependencies to speed up rebuilds
      - hyperion-poetry-cache:/root/.cache/pypoetry
    networks:
      - hyperion-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  hyperion-poetry-cache:
    driver: local

networks:
  hyperion-dev:
    driver: bridge
