"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ProgrammingLanguage:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ProgrammingLanguageEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _ProgrammingLanguage.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    EMPTY: _ProgrammingLanguage.ValueType  # 0
    JAVA: _ProgrammingLanguage.ValueType  # 1
    PYTHON: _ProgrammingLanguage.ValueType  # 2

class ProgrammingLanguage(
    _ProgrammingLanguage, metaclass=_ProgrammingLanguageEnumTypeWrapper
): ...

EMPTY: ProgrammingLanguage.ValueType  # 0
JAVA: ProgrammingLanguage.ValueType  # 1
PYTHON: ProgrammingLanguage.ValueType  # 2
global___ProgrammingLanguage = ProgrammingLanguage

class _ProjectType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ProjectTypeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProjectType.ValueType],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PLAIN: _ProjectType.ValueType  # 0
    PLAIN_MAVEN: _ProjectType.ValueType  # 1
    PLAIN_GRADLE: _ProjectType.ValueType  # 2

class ProjectType(_ProjectType, metaclass=_ProjectTypeEnumTypeWrapper): ...

PLAIN: ProjectType.ValueType  # 0
PLAIN_MAVEN: ProjectType.ValueType  # 1
PLAIN_GRADLE: ProjectType.ValueType  # 2
global___ProjectType = ProjectType

@typing.final
class RepositoryFile(google.protobuf.message.Message):
    """BREAKING CHANGES in v2:
    - ProgrammingLanguage enum reduced from 21 to 3 values (EMPTY, JAVA, PYTHON)
    - ProjectType enum reduced from multiple values to 3 (PLAIN, MAVEN, GRADLE)
    - Removed deprecated enum values for unsupported languages and project types
    - Clients should handle unknown enum values gracefully by treating them as EMPTY/PLAIN

    Represents a file in a repository with content
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    path: builtins.str
    content: builtins.str
    def __init__(
        self,
        *,
        path: builtins.str = ...,
        content: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["content", b"content", "path", b"path"]
    ) -> None: ...

global___RepositoryFile = RepositoryFile

@typing.final
class Repository(google.protobuf.message.Message):
    """Represents a collection of files that form a repository"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILES_FIELD_NUMBER: builtins.int
    @property
    def files(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___RepositoryFile
    ]: ...
    def __init__(
        self,
        *,
        files: collections.abc.Iterable[global___RepositoryFile] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["files", b"files"]) -> None: ...

global___Repository = Repository

@typing.final
class ProgrammingExercise(google.protobuf.message.Message):
    """Represents a programming exercise with all associated data"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    PROGRAMMING_LANGUAGE_FIELD_NUMBER: builtins.int
    PACKAGE_NAME_FIELD_NUMBER: builtins.int
    PROJECT_TYPE_FIELD_NUMBER: builtins.int
    TEMPLATE_REPOSITORY_FIELD_NUMBER: builtins.int
    SOLUTION_REPOSITORY_FIELD_NUMBER: builtins.int
    TEST_REPOSITORY_FIELD_NUMBER: builtins.int
    PROBLEM_STATEMENT_FIELD_NUMBER: builtins.int
    id: builtins.int
    """Unique identifier for the exercise"""
    title: builtins.str
    """Title of the exercise"""
    programming_language: global___ProgrammingLanguage.ValueType
    """Programming language used"""
    package_name: builtins.str
    """Package name for the exercise"""
    project_type: global___ProjectType.ValueType
    """Type of project (e.g., Maven, Gradle)"""
    problem_statement: builtins.str
    """Problem statement describing the exercise requirements"""
    @property
    def template_repository(self) -> global___Repository:
        """Repository containing template files"""

    @property
    def solution_repository(self) -> global___Repository:
        """Repository containing solution files"""

    @property
    def test_repository(self) -> global___Repository:
        """Repository containing test files (optional)"""

    def __init__(
        self,
        *,
        id: builtins.int = ...,
        title: builtins.str = ...,
        programming_language: global___ProgrammingLanguage.ValueType = ...,
        package_name: builtins.str = ...,
        project_type: global___ProjectType.ValueType = ...,
        template_repository: global___Repository | None = ...,
        solution_repository: global___Repository | None = ...,
        test_repository: global___Repository | None = ...,
        problem_statement: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "solution_repository",
            b"solution_repository",
            "template_repository",
            b"template_repository",
            "test_repository",
            b"test_repository",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "id",
            b"id",
            "package_name",
            b"package_name",
            "problem_statement",
            b"problem_statement",
            "programming_language",
            b"programming_language",
            "project_type",
            b"project_type",
            "solution_repository",
            b"solution_repository",
            "template_repository",
            b"template_repository",
            "test_repository",
            b"test_repository",
            "title",
            b"title",
        ],
    ) -> None: ...

global___ProgrammingExercise = ProgrammingExercise

@typing.final
class CreateSolutionRepositoryRequest(google.protobuf.message.Message):
    """********************
    **   Messages    ***
    *******************

    Request for creating solution repository
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROGRAMMING_LANGUAGE_FIELD_NUMBER: builtins.int
    PROJECT_TYPE_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    PROBLEM_STATEMENT_FIELD_NUMBER: builtins.int
    programming_language: global___ProgrammingLanguage.ValueType
    project_type: global___ProjectType.ValueType
    title: builtins.str
    problem_statement: builtins.str
    def __init__(
        self,
        *,
        programming_language: global___ProgrammingLanguage.ValueType = ...,
        project_type: global___ProjectType.ValueType = ...,
        title: builtins.str = ...,
        problem_statement: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "problem_statement",
            b"problem_statement",
            "programming_language",
            b"programming_language",
            "project_type",
            b"project_type",
            "title",
            b"title",
        ],
    ) -> None: ...

global___CreateSolutionRepositoryRequest = CreateSolutionRepositoryRequest

@typing.final
class CreateSolutionRepositoryResponse(google.protobuf.message.Message):
    """Response from creating solution repository"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REPOSITORY_FIELD_NUMBER: builtins.int
    @property
    def repository(self) -> global___Repository: ...
    def __init__(
        self,
        *,
        repository: global___Repository | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing.Literal["repository", b"repository"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing.Literal["repository", b"repository"]
    ) -> None: ...

global___CreateSolutionRepositoryResponse = CreateSolutionRepositoryResponse

@typing.final
class InconsistencyCheckRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROBLEM_STATEMENT_FIELD_NUMBER: builtins.int
    SOLUTION_REPOSITORY_FIELD_NUMBER: builtins.int
    TEMPLATE_REPOSITORY_FIELD_NUMBER: builtins.int
    TEST_REPOSITORY_FIELD_NUMBER: builtins.int
    problem_statement: builtins.str
    @property
    def solution_repository(self) -> global___Repository: ...
    @property
    def template_repository(self) -> global___Repository: ...
    @property
    def test_repository(self) -> global___Repository: ...
    def __init__(
        self,
        *,
        problem_statement: builtins.str = ...,
        solution_repository: global___Repository | None = ...,
        template_repository: global___Repository | None = ...,
        test_repository: global___Repository | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "solution_repository",
            b"solution_repository",
            "template_repository",
            b"template_repository",
            "test_repository",
            b"test_repository",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "problem_statement",
            b"problem_statement",
            "solution_repository",
            b"solution_repository",
            "template_repository",
            b"template_repository",
            "test_repository",
            b"test_repository",
        ],
    ) -> None: ...

global___InconsistencyCheckRequest = InconsistencyCheckRequest

@typing.final
class InconsistencyCheckResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INCONSISTENCIES_FIELD_NUMBER: builtins.int
    inconsistencies: builtins.str
    def __init__(
        self,
        *,
        inconsistencies: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["inconsistencies", b"inconsistencies"]
    ) -> None: ...

global___InconsistencyCheckResponse = InconsistencyCheckResponse

@typing.final
class RewriteProblemStatementRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    text: builtins.str
    def __init__(
        self,
        *,
        text: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["text", b"text"]) -> None: ...

global___RewriteProblemStatementRequest = RewriteProblemStatementRequest

@typing.final
class RewriteProblemStatementResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REWRITTEN_TEXT_FIELD_NUMBER: builtins.int
    rewritten_text: builtins.str
    def __init__(
        self,
        *,
        rewritten_text: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["rewritten_text", b"rewritten_text"]
    ) -> None: ...

global___RewriteProblemStatementResponse = RewriteProblemStatementResponse
