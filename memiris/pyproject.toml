[tool.poetry]
name = "memiris"
version = "0.1.1"
description = ""
authors = ["Timor Morrien <timor.morrien@tum.de>"]
readme = "README.MD"
packages = [
    {include = "memiris", from = "src"},
    {include = "memiris_tests", from = "tests"}
]
include = ["src/memiris/py.typed"]

[tool.poetry.dependencies]
python = ">=3.12,<4.0.0"
weaviate-client = "^4.17.0"
jinja2 = "^3.1.6"
ollama = "^0.6.0"
cachetools = "^6.2.1"
pylint-per-file-ignores = "^3.1.0"
langfuse = "^3.8.1"
langchain = "^0.3.27"
langchain-core = "^0.3.79"
langchain-community = "^0.3.31"
langchain-ollama = "^0.3.10"
langgraph = "^1.0.1"

[tool.poetry.group.dev.dependencies]
mypy = "^1.18.2"
pylint = "^4.0.2"
black = "^25.9.0"
isort = "^7.0.0"
yamllint = "^1.35.1"
bandit = "^1.8.6"
pytest = "^8.4.2"
coverage = "^7.11.0"
detect-secrets = "^1.5.0"
prettier = "^0.0.7"
pre-commit = "^4.3.0"
types-cachetools = "^6.2.0.20251022"
testcontainers = {extras = ["weaviate"], version = "^4.13.2"}
pytest-mock = "^3.15.1"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B311"]

[tool.mypy]

[[tool.mypy.overrides]]
module = "langfuse.*"
ignore_missing_imports = true

[tool.pylint."MESSAGES CONTROL"]
disable = ["not-context-manager"]

[tool.coverage.run]
branch = true
source = ["src"]
dynamic_context = "test_function"

[tool.coverage.report]
show_missing = true
# fail_under = 80
# omit = ["tests/*", "your_module_name/__init__.py"]

[tool.coverage.html]
directory = "htmlcov"

[virtualenvs]
create = true
in-project = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
