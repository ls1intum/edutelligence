syntax = "proto3";

package memiris;

message Memory {
  // Unique identifier (UUID as string)
  string id = 1;

  // The user-visible title.
  string title = 2;

  // Concise content that was learned.
  string content = 3;

  // Learning object IDs that this memory came from (UUID strings).
  repeated string learnings = 4;

  // IDs of other Memory objects this one is connected to.
  repeated string connections = 5;

  // True once the memory has been “slept on.”
  bool slept_on = 7;

  // Soft-delete flag.
  bool deleted = 8;
}

message Learning {
  // Unique identifier (UUID as string)
  string id = 1;

  // Short human-readable label
  string title = 2;

  // Full text that was learned.
  string content = 3;

  // Source reference for the learning (e.g., iris session, communication thread, etc.).
  string reference = 4;

  // IDs of Memory objects created from this Learning.
  repeated string memories = 5;
}

enum ConnectionType {
  RELATED = 0; // general relation
  CONTRADICTS = 1; // conflicting information
  SAME_TOPIC = 2; // same theme, not duplicates
  DUPLICATE = 3; // redundant information
  CREATED_FROM = 4; // derived memory
}

message MemoryConnection {
  // Unique identifier (UUID as string).
  string id = 1;

  // Type of relationship between memories.
  ConnectionType connection_type = 2;

  // IDs of the Memory objects participating in the relationship.
  repeated string memories = 3;

  // Free-text description of the connection.
  string description = 4;

  // Confidence / strength in [0.0 – 1.0].
  double weight = 6;
}
