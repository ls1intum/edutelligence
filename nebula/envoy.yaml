static_resources:
  listeners:
    # HTTP listener (for services like FastAPI)
    - name: listener_http
      address:
        socket_address: { address: 0.0.0.0, port_value: 8000 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: http_route
                  virtual_hosts:
                    - name: fastapi
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/transcribe" }
                          route: { cluster: transcriber }

                        # Add new HTTP service routes here if needed
                        # - match: { prefix: "/another-api" }
                        #   route: { cluster: another_http_service }

                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

    # gRPC listener on port 50051
    - name: listener_grpc
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 50051
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_grpc
                route_config:
                  name: grpc_route
                  virtual_hosts:
                    - name: grpc_services
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/faqservice.FAQService/"
                          route:
                            cluster: faq

                        # Add a new gRPC service route by its fully-qualified service name
                        # - match:
                        #     prefix: "/lectureservice.LectureService/"
                        #   route:
                        #     cluster: lecture

                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    # Cluster for the FastAPI-based transcriber service
    - name: transcriber
      connect_timeout: 0.5s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: transcriber
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: transcriber
                      port_value: 5000

    # Cluster for the FAQ gRPC service
    - name: faq
      connect_timeout: 0.5s
      type: logical_dns
      lb_policy: round_robin
      http2_protocol_options: {}  # Required for gRPC
      load_assignment:
        cluster_name: faq
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: nebula-faq
                      port_value: 50052

    # Add a new gRPC cluster for another microservice (e.g., lecture)
    # - name: lecture
    #   connect_timeout: 0.5s
    #   type: logical_dns
    #   lb_policy: round_robin
    #   http2_protocol_options: {}  # Required for gRPC
    #   load_assignment:
    #     cluster_name: lecture
    #     endpoints:
    #       - lb_endpoints:
    #           - endpoint:
    #               address:
    #                 socket_address:
    #                   address: nebula-lecture  # Docker container name or DNS
    #                   port_value: 50052        # Port used by the lecture gRPC server

admin:
  access_log_path: /tmp/envoy_admin.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901