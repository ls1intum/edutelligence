name: Hyperion Java Client - Publish Snapshots

on:
  push:
    branches: [main, develop]
    paths:
      - 'hyperion/java-client/**'
      - 'hyperion/app/protos/**'
  pull_request:
    branches: [main]
    paths:
      - 'hyperion/java-client/**'
      - 'hyperion/app/protos/**'
  workflow_dispatch:
    inputs:
      force_publish:
        description: 'Force publish (even on PR)'
        required: false
        default: 'false'

jobs:
  validate:
    name: Validate and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'eclipse-temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper
          
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2
        
      - name: Build and test
        working-directory: hyperion/java-client
        run: ./gradlew build --no-daemon --parallel
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts
          path: |
            hyperion/java-client/build/libs/
            hyperion/java-client/build/reports/
          retention-days: 7

  publish-snapshot:
    name: Publish Snapshot to GitHub Packages
    needs: validate
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.force_publish == 'true')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'eclipse-temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper
          
      - name: Set snapshot version
        working-directory: hyperion/java-client
        run: |
          # Extract current version and append timestamp for uniqueness
          CURRENT_VERSION=$(grep "^version = " build.gradle | sed "s/version = '\(.*\)'/\1/")
          TIMESTAMP=$(date -u +"%Y%m%d%H%M%S")
          COMMIT_SHA=${GITHUB_SHA:0:7}
          
          if [[ "$CURRENT_VERSION" == *"-SNAPSHOT" ]]; then
            # Remove existing -SNAPSHOT and add our own with timestamp
            BASE_VERSION=${CURRENT_VERSION%-SNAPSHOT}
            NEW_VERSION="${BASE_VERSION}-${TIMESTAMP}-${COMMIT_SHA}-SNAPSHOT"
          else
            NEW_VERSION="${CURRENT_VERSION}-${TIMESTAMP}-${COMMIT_SHA}-SNAPSHOT"
          fi
          
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "Publishing version: ${NEW_VERSION}"
          
          # Update version in build.gradle
          sed -i "s/version = '.*'/version = '${NEW_VERSION}'/" build.gradle
          
      - name: Publish to GitHub Packages
        working-directory: hyperion/java-client
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: ./gradlew publishToGitHubPackages --no-daemon
        
      - name: Create release summary
        run: |
          echo "## ðŸ“¦ Package Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package:** \`de.tum.cit.aet.edutelligence:hyperion:${{ env.NEW_VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** [GitHub Packages](https://github.com/ls1intum/edutelligence/packages)" >> $GITHUB_STEP_SUMMARY
