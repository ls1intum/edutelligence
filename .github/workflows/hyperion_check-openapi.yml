name: Hyperion - OpenAPI

on:
  pull_request:
    types: [opened, synchronize, labeled, reopened]
    paths:
      - 'hyperion/**'
      - '.github/workflows/hyperion_check-openapi.yml'
  push:
    paths:
      - 'hyperion/**'
      - '.github/workflows/hyperion_check-openapi.yml'
    branches: [main]
  workflow_dispatch:

jobs:
  generate-api-client:
    name: Verify API Specs (add hyperion:autocommit-openapi label to PR to auto-commit changes)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python 3.13
        uses: actions/setup-python@v2
        with:
          python-version: 3.13

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        working-directory: hyperion
        run: poetry lock && poetry install --no-interaction --no-root

      - name: Generate API specs
        working-directory: hyperion
        run: poetry run openapi

      - name: Check for changes in the API
        id: check_changes
        run: |
          echo "Checking for changes..."
          git add .
          if git diff --cached --quiet; then
            echo "No changes detected in the API client directory."
            echo "NO_CHANGES_DETECTED=true" >> $GITHUB_ENV
          else
            echo "Changes detected in the API client directory."
            echo "NO_CHANGES_DETECTED=false" >> $GITHUB_ENV
            exit 1
          fi

      - name: Commit files
        if: ${{ always() && contains(github.event.pull_request.labels.*.name, 'hyperion:autocommit-openapi') }}
        run: |
          echo "Committing and pushing changes..."
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git commit -a -m "chore: update API specs and client"

      - name: Push changes
        if: ${{ always() && contains(github.event.pull_request.labels.*.name, 'hyperion:autocommit-openapi') }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_PAT }}
          branch: ${{ github.event.pull_request.head.ref  }}

      - name: Remove hyperion:autocommit-openapi label
        if: ${{ always() && contains(github.event.pull_request.labels.*.name, 'hyperion:autocommit-openapi') }}
        run: |
          echo "Removing the hyperion:autocommit-openapi label..."
          curl --silent --fail-with-body -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels/hyperion:autocommit-openapi