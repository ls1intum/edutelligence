name: Nebula - Build

on:
  pull_request:
    paths:
      - "nebula/**"
      - ".github/workflows/nebula_build-and-push-docker.yml"
      - "!nebula/README.md"
  push:
    branches:
      - main
    paths:
      - "nebula/**"
      - ".github/workflows/nebula_build-and-push-docker.yml"
      - "!nebula/README.md"
  release:
    types:
      - created

jobs:
  compute-tag:
    name: Compute tag
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'ls1intum/edutelligence' }}
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.compute-tag.outputs.result }}
      is_release: ${{ steps.compute-tag.outputs.is_release }}
      release_tag: ${{ steps.compute-tag.outputs.release_tag }}
    steps:
      - name: Compute Tag
        uses: actions/github-script@v7
        id: compute-tag
        with:
          result-encoding: string
          script: |
            function stripVPrefix(tag) {
              return tag.startsWith('v') ? tag.substring(1) : tag;
            }

            if (context.eventName === "pull_request") {
              core.setOutput("is_release", "false");
              return "pr-" + context.issue.number;
            }
            if (context.eventName === "release") {
              const cleanTag = stripVPrefix(context.payload.release.tag_name);
              core.setOutput("is_release", "true");
              core.setOutput("release_tag", cleanTag);
              return "latest";
            }
            if (context.eventName === "push") {
              core.setOutput("is_release", "false");
              if (context.ref.startsWith("refs/tags/")) {
                const tag = context.ref.slice(10);
                return stripVPrefix(tag);
              }
              if (context.ref === "refs/heads/main") {
                return "latest";
              }
            }
            core.setOutput("is_release", "false");
            return "FALSE";

  build-and-push:
    name: Build and Push to GitHub Container Registry (${{ matrix.service }})
    needs: [ compute-tag ]
    strategy:
      fail-fast: false
      matrix:
        service: [faq, transcriber]
    uses: ls1intum/.github/.github/workflows/build-and-push-docker-image.yml@main
    with:
      image-name: ghcr.io/ls1intum/edutelligence/nebula-${{ matrix.service }}
      docker-file: ./nebula/docker/${{ matrix.service }}/Dockerfile
      docker-context: .
      tags: ${{ needs.compute-tag.outputs.is_release == 'true' && format('ghcr.io/ls1intum/edutelligence/nebula-{0}:latest,ghcr.io/ls1intum/edutelligence/nebula-{0}:{1}', matrix.service, needs.compute-tag.outputs.release_tag) || format('ghcr.io/ls1intum/edutelligence/nebula-{0}:{1}', matrix.service, needs.compute-tag.outputs.result) }}
