{
  "id": 6787,
  "meta": {},
  "type": "text",
  "title": "H03E01 Bumpers Nonfunctional Requirements (SS22)",
  "course_id": 169,
  "max_points": 6,
  "submissions": [
    {
      "id": 1281975,
      "meta": {},
      "text": "-Usability:\n\t-It shouldn't take more than 4 mouse clicks for the player to start playing the game\n\t-There should be no delay with the steering of the car, meaning after one mouseclick the direction of the car \t\t \n          the player controls should change in less than 0.1 seconds\n\t-The position of the specific buttons the player controls to start/stop the game and to choose his collision \n          type should always be the same\n-Reliability:\n\t-The game should not crash when the user enters a wrong input (e.g pressing space instead of using the \t \n          mouse to steer the car)\n-Performance:\n\t-The game should not use more than 250MB of RAM\n-Supportability:\n\t-The game should be able to be remotely updated to e.g support new type of collisions or add new cars",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282085,
      "meta": {},
      "text": "NFR1 Speed Change: the user can speed up his car with a double click (usability)\nNFR2 Game Start: the game starts automatically when the player chooses car type\nNFR3 Mouse Disconnection: the game pauses automatically if the mouse gets disconnected(reliability)\nNFR4 Storage of last winning collision: the game stores  a gif file of the player's last winning collision(performance)\nNFR5 Winner collision selection: the type of winner collision is defined at the begging of the game in less than 2 s(performance)\nNFR6 Collision Type: new type of collision can be added to the system (supportability)",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284391,
      "meta": {},
      "text": "Performance: The program has to run fluent including 500 cars. It has to run at least on a HP Laptop 15s-eq2755ng with no lags. \n\nMaintainability: The program shall be implemented in Java code. All developers should stick to the Standard Java Naming Conventions so it's easier to keep an overview over the whole program.\n\nSafety: In traffic there is safety first so the program needs to defend against cheaters. The developers should include basic anti cheat software like ABC AntiCheat or AntiCheatReloaded.\n\nUsability: It's important that the program is easy to use and it doesn't take more then 2-3 clicks to start a game. \n\nReliability: The program should not contain complex algorithms, single methods shouldn't be longer than 20 lines of code. Therefore helping methods can be implemented. Also the error and exception handling should not be neglected. These are two methods to prevent potential application failures and to increase the reliability. \n\nAdaptability: The program should be flexible to integrate new features such as new car types or other new ideas and add ons that make the game more fun. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284431,
      "meta": {},
      "text": "The respective URPS attribute is written in brackets beneath the non-functional requirement.\n\n- The user controlls the car with a mouse\n-> [U]\n\n- The game must be playable at at least 60fps \n-> [P] Response Time\n\n- Steering should be comfortably controllable (not to fast, not to small) \n-> [P] Accuracy\n\n- The system design should be easily extensible \n-> [S] Adaptability, [S] Maintainability (-> Easy extensibility keeps the source code more structured in the first place)\n\n- The game should be cross plattform\n-> [S] Portability\n\n- Cars should not glitch when colliding\n-> [R] Robustness (as in the game works properly)",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284730,
      "meta": {},
      "text": "Quality requirements:\n\nUsability:\nMit maximal zwei Klicks startet das Spiel.\nDas Spiel kann nach 5 min. Übung das erste Mal durchgespielt werden.\n\nReliability:\nZentrale Spieldaten besitzen einen Hash, welcher vor dem Start abgeglichen wird und können deshalb nicht abgeändert werden.\n\nPerformance:\nDas Spiel hält die eingestellte Tick- bzw. Framerate von 25 fps.\nDas Spiel unterstützt bis zu 6 Entitys gelichzeitig auf dem Feld.\n\nSupportability:\nNeue Autos können aufgrund eines interfaces in nur 10 min. eingebunden werden. \n\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1286406,
      "meta": {},
      "text": "NFR1 Usability: \nIn terms of usability, the app could include a simple tutorial on how to play the game, which would be a part of the sub-category learnability.\n\nNFR2 Performance: \nThe app should be performant enough to render at least 30 frames per second in order to appear smooth to the user of the app.\n\nNFR3 Performance: \nTo be accurate enough, the collisions of cars shall not be evaluated thorugh the use of rectangles, but rather more complex polygons. This is believed to improve the user experience.\n\nNFR4 Reliability: \nThe game should be efficient enough to support a big GameBoard with a resonably high number of cars still delivering stable and high frame rates.\n\nNFR5 Supportability:\nThe software shall be designed in a way to easily create new types of cars or collisions. In general, the game should be designed modular for coming features.\n\nNFR6: Supportability:\nThe game should be portable and therefore accessible on all (good) popular platforms (Linux, (Windows), Android) in order to reach a broad userbase.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287010,
      "meta": {},
      "text": "Usability:\n\t+ Users interact only with a mouse\n\t+ Users should take atmost 3 clicks to choose all their preferences and to start the game\n\t+ Game tells user how to play the game\nReliability:\n\tSafety:\n\t\t+  Game handles Bugs in a way where its not crashing\nPerformance:\n\tResponse Time:\n\t\t+ The game adds upmost 2f (1/30th of a second) of inputlag\nSupportability:\n\tAdaptability:\n\t\t+ Software runs the same on all the different supported platforms \n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280640,
      "meta": {},
      "text": "Usability:\n\t-The movement direction of the vehicles should be changable by at most one degree at a time.\n\t-All on screen text should have a font size of at least 12pt, to be readable.\n\nReliability:\n\t-The program should continue to function, even as it's window is moved or resized on the screen.\n\nPerformance:\n\t-The game should run with at least 60 fps.\n\t-The response time to a user input should never be greater than 20ms, from the input being passed to the program and the first frame that reflects the change being rendered.\n\nSupportability:\n\t-The program should be easily serviceable, so the code should always be formated by an automated tool for improved readability after every change at least.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281603,
      "meta": {},
      "text": "1) The delay between the mouse movment of the player and the reaction of the car, should be less then 10ms\n2) By starting the game, the visual interface should be at least 100 pixel high\n3) The system should handel a mouse speed up to 80.000 px/s\n4) There should be a chance of more than 95%, that the game starts correct \n5) The user interface schould automaticlly changes his size depending on the screen size, by screens with a hight and lenght more than 800 pixel\n6) To implement a new Car typ, the developer dousnt need to implement more than one additional class",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281650,
      "meta": {},
      "text": "Usability:\n1. The player needs to use the mouse to control the car. When the mouse changes direction, the car must also change direction\n2. The player can play without an internet connection\n\nRealizability:\n1. The game does not need to network, installation and use when there will be no network virus invasion\n\nPerformance:\n1. The system can simultaneously determine the impact patterns of different cars\n2. The system can simultaneously control the speed and direction of the NPC car\n\nSupportability:\n1. The game should be platform independent, users can use it in different processors\n ",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283747,
      "meta": {},
      "text": "usability:\n1.Large and clear graphics of the car\n2.The screen can show the current direction of your mouse control\nreliability:\n3.Set the maximum number of hours you can play per day to prevent damage to your eyesight\n4.There is a lock button to change the speed to prevent accidentally pressing the number and changing the speed\nperformance:\n5.Up to 3 players at the same time\nAvailability：\n 6.the availability of the system is at least 90%",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284008,
      "meta": {},
      "text": "1. \"Players need at most 4 seconds to start using/understand the controls of the game.\" -> this is a usability requirement for the ease of use. As there isn't any explanation of how the controls work, they should be intuitive.\n\n2. \"Players cannot use the change of collision type to gain an advantage.\" -> this should ensure a good user experience that ensures adherence to the game rules. It is rather subjective if players enjoy \"cheating\", but this NFR should also be fulfilled as a security requirement.\n\n3. \"The game can handle up to 4 inputs per second on the keyboard.\" -> this checks the robustness and performance of the system when played aggressively.\n\n4. \"99.9% of player inputs should lead to a correct move in the game.\" -> this should ensure that the game can be played accurately.\n\n5. \"The game can be played on at least macOS, Windows and Linux operating systems.\" -> as the problem statement requires the game to be platform independent, this checks the adaptability of the game.\n\n6. \"The cars are controllable with a mouse and trackpad.\" -> this also checks the adaptability of the game as well as the usability.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287037,
      "meta": {},
      "text": "The 6 non-functional requirements are : supportability, reliability, performance, maintainability, security, and usability.\n\nUsability is the design of the game itself. This is where the human factor comes into play. Perhaps something with the GUI, with inputs from the human, or maybe the aesthetics of the game design or background, or music, is where the usability in the bumpers game will play a part.\n\nPerformance is how the game runs, will it has good enough speed that it won't be disturbing the user's experience, is the code efficient enough, so that it doesn't require more space to download and to run? That is all about performance in the game.\n\nSupportability is how the game will be available. Is it dependent on the operating system, is it easy to install? Will it support different types of computers, or even ported to smartphones? Is it also easy to test? This is what supportability means in the game, how the game is being \"spread\" to users.\n\nReliability defines the probability of the game working without failure for a specific number of time. If the game runs smoothly 1998/2000 times, it has good reliability. \n\nMaintainability is a feature, which indicates the average time and ease and rapidity with which a system can be restored after a failure. This is where the developers of the bumpers game come in. Can they react fast enough, that they can patch a bug or a gamebreaking glitch in a short matter of time?\n\nSecurity is how the game protects itself from harmful data or any sabotage or espionage. Basically this is how the developers hide the game code, in itself protecting the user from any unintended results, that come from changing the code or someone changing the code.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287401,
      "meta": {},
      "text": "The four big categories of non-functional requirements are Usability, Reliability, Performance and Supportability.\nthe following are example requirements based on the Bumpers problem statement.\n\n1. Usability:\nExample: User only requires minimal and singular mouse movements to control the direction of his car\n\n2. Reliability:\nExample: The game can be ran on various operating systems such as MacOS or Windows\n\n3. Performance:\nExample: Crash sound will play less than 10 milliseconds after the crash occurs\n\n4. Supportability:\nExample: Different possible collision effects depending on the circumstances of the collision, f.e. if the car has one collision so far, it won't get crunched in the \"doublecollision\" option\n\n5. Performance:\nExample: Game will boot up within 50 milliseconds of launching the application\n\n6. Reliability:\nExample: The game can be played with benchmark requirements of 4gb ram",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1287444,
      "meta": {},
      "text": "\nNFR1 Usability: The game should start at most 3 clicks.\nNFR2 Reliability: When the olayer press a random button, game should not break or stop.\nNFR3 Performance: The game should be %99 of the time runnable without any problems.\nNFR4 Supportability:  The game should be playable on Windows and MacOS computers.\nNFR5 Usability: The user should be able to difference the car his/her steering.\nNFR6 Usability: The player should be able to stop the game music whenever he/she want.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287478,
      "meta": {},
      "text": "Usability: \n\tThe pixels of the car should match its hitbox\n\tThe change of collision winner should be a smooth action with max. 2 steps in the menu included\n\nReliability:\n\tRobustness: There should be not a single interaction in the game itself where it could crash\n\nPerformance:\n\tResponse Time: The game should work in an exact way where the player really feels like he is controling the car and is influencing its movements and there should be no input lag hindering the gameplay\n\t\n\tAccuracy: The crash system should be design so exactly that the visuals and the actions should be aligned and the player is not irritated by differences between both things\n\t\n\nSupportability:\n\tAdabtability: The game should work the same on any device and there should be not any differences between devices that gives some players an edge ingame",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280800,
      "meta": {},
      "text": "Usability: -The user should be able to choose a collision type after every loss or victory\nReliability: -When the user does not choose a collision Type the DefaultType will be used during the Game.\n\t\t -When the user does so many mouse-clicks in one spot the system should be able to tolerate that\nPerformance: -The change of direction of the car after the mouse-click (the users Input), should be excuted in less \t\t\t \t\t\t\t\t\t \n \t\t\tthan half a second.\n\t\t      - The availability of the Game is 99.9% as long as the user has all hardware requirements.  \nSupportability: -The Game is developped and structured in a way to better cope with requirement changes, \t \n \t\t\t  updates or bugfixes.\n ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281382,
      "meta": {},
      "text": "Usability: The user can start the game with one click and stopit with two clicks.\n\nSupportability: The player can change the collision type (-> who wins the collision?) during the game and the game still has to work correctly\n\nSupportability: The game should work indepentent on the platform the user is using.\n\nPerformance: The game should be able to display the outcome of the game within 0,1s after the game has ended.\n\nReliability:  Only mouse clicks should be able to impact the players car, start or stop the game. Other inputs should not impact the game in any way nor should a mouse click be able to change something on a car that it not the players car.\n\nUsability: Different variables of the players car, like the location or speed should be displayed for the user.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282542,
      "meta": {},
      "text": "The first quality requirement in terms of usability could be that the player only needs one click to start or stop the game.\nThe second requirement in terms of reliability could be that the game still works even if the computer runs other applications while also running the game.\nThe third requirement in terms of performance could be that the game has a response time of at least 200 ms in order to maintain a fluent gameplay.\nThe fourth requirement in terms of supportability could be that the game is designed in a way that a developer is able to implement a new car with a new car image in less than 2 hours.\nThe fifth requirement in terms of usability could be that the game does not add more danger for the computer to be hacked. In this case, the game should work properly without deactivating the firewall of the computer.\nThe sixth requirement in terms of performance could be that the game should withstand at least 20 clicks per second from the mouse while still working properly.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282819,
      "meta": {},
      "text": "Usability: - der Spieler soll mit maximal 2 Knöpfen sein Auto steuern und die Geschwindigkeit ändern können\n\t       - die Autos müssen mindestens 1cmx1cm sein damit man sie gut erkennen kann   \nReliability: - das System darf nicht abstürzen, wenn Tasten gedrückt werden die nicht zur Steuerung gehören\nPerformance: - das System muss in jeder Millisekunde den Zustand der Fahrzeuge updaten\n                      - das System muss in jeder Millisekunde berechenen ob es zu einer Collison kommt \nSupportability: -das System muss es zulassen, das regelmäßig updates für das Spiel kommen mit neuen Autos oder Collisions ohne das das Spiel nochmal komplett neu programmiert werden muss",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1283088,
      "meta": {},
      "text": "Usability:\n\t* The control scheme should be properly conveyed to the player, so that he knows how to play the game\n\t* The control scheme should NOT be too complex, inorder to keep gameplay \"easy to learn\" and \"easy to \t \n  \t   memorize\"\nRobustness:\n\t* The game should properly handle \"wrong\" and invalid inputs (at all stages of the game)\n\t* The game should also handle potential exploits and misuse of the inputs\nPerformance:\n\t* The game should inhabit multiple AI cars AND the player car simultaneously, without slowing \t\t\t \t\t\t\t \t \n     \t   down/crashing\n\t* Game should accomodate for the specific hardware of the (current) user\nMaintainability:\n\t* There should be an option to add new (i.e.) types of collision in the future\n\t* Potential future bug fixes should also be possible (updates and hotfixes)\nAdaptability:\n\t* As the game is platform independant, the game needs to be able all sorts of platforms and their inputs\n\t\t(--> mouse for pc, touch for phones, and so on)\n\t* The game should also be able to handle different types of hardware (i.e. less AI cars for slower computers)\nSatisfaction:\n\t* Considering that this is a game, the user should have a good time while playing it\n\t* Everything must be lay out in such a way that the player would have no difficulties playing the game itself\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284948,
      "meta": {},
      "text": "NFR 1 Usability : the player can steer the car with just moving the mouse into the wanted direction.\nNFR2 User Experience : throughout the game the player can enjoy a music , plus a special sound effect when there is a collision.\nNFR3 Performance : the game handles a lot of information , for example it visulize different parameters of the car, e.g. the speed, consumption and location of the car.\nNFR4 Adaptability : the game is platform independant , so it can work with different softwares.\nNFR5 Maintanibility : you can change easily the determination of the collison winner during the gameplay , by changing for example \nNFR6 Supportability : the game supports different collisions",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285846,
      "meta": {},
      "text": "- The single icons (e.g. for the cars) shall not be smaller than 35x35 pixels to ensure that they aren't too small to see [Usability]\n- The game shall at least have a framerate of 30fps to ensure a fluent game experience [Performance]\n- The classes shall provide interface methods that allows precise unit testing of all functionalitites [Supportability]\n- The Game shall in no case crash nor freeze due to any user input. In very few edge cases error messages are allowed. [Reliablity]\n- The game shall start up in less than 1 second [Performance]\n- The contrast ratio between the whole edge of any item to every point of the background shall be at least 2.5:1 to ensure good visibility of all cars [Usability]",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286637,
      "meta": {},
      "text": "NFR1 Usability:  \t- The Player always starts in the top-left corner \n                          \t- Fast cars are red and slow cars are blue\n                         \t- It takes one click to start the game and and two clicks to stop the game \n                         \t- The direction and speed of the car can be changed with one mouse click \n                           \t- After the game has been stopped the collsion type is changable with two \t\t\t\t \n                 \t\t  clicks\n                                - The user can see his speed and consumption in the top right corner.\n       \t\t\t\t- The player knows he hit a car when a crash sound plays\n\nNFR2 Robustness: \t- When the user tries to drive out of the screen the car bounces from the \n                                  wall\n\t\t\t\t- If the user doesn't select a collsion type the deafult collsion is used\n\nNFR3 Performance: - Each collision should be evaluated in less than 0.5 seconds \n                                - Only one player can play at a time\n\nNFR4 Availability:   - The availability of the game should be at least 99.5% \n                              -> ~ 44 hours of downtime a year, therfore every week on monday there will \n                                 be a maintanence period of at most 50 minutes\n\nNFR5 Safety: \t       - Every 5 seconds the progress of the game is saved \n                               - The save state can be loaded if an unexpected gamecrash occurs\n\nNFR6 Maintainability: - Updates can be applied during the 50 minute downtime every week\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286950,
      "meta": {},
      "text": "Usability:\n\t- Users need one klick to start and stop the game\n\t- The cars speed, type and number of won collisions shall be displayed at all times on the users screen\n\t- The game shall support a keyboard shortcut for changing collision winners\nReliability:\n\t- The game can still evaluate collisions correctly after the collision winner is changed by the user during \t\t \n           gameplay\nPerformance:\n\t- The game shall be able to support 1000 concurrent users \nSupportability:\n\t- The game shall work on pc, tablet, as well as on smartphones",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287585,
      "meta": {},
      "text": "Usability: - The user can start and stop the game with two clicks. He can also change the collision type with 2 clicks. \n- To move the car the user just needs to click the mouse in the direction in which he wants to move\n- The user can change the car's speed with mouse.\n\nReliability: The game can create a lot of cars(max: 15) simultaneously without any delays.\n\nPerformance: - Number of simultaneous users supported = 1\n- Stopping the music or collision change should take not more than 1 second. \n- The user should receive a notifaction about Win/Lose in collision in not more than 1 second.\n\nSupportability: Available on any platform - Linux/Mac/Windows etc.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287870,
      "meta": {},
      "text": " 1) Reliability:\n   When there is an unexpected move in the game( when the player arrive to the corner), there shouldn't be an error. In fact within the look of the game rules it should be defined ,what will happen next and the player should be able to continue his game.\n 2) Maintainability (supportability):\n  When the game has some defaults and defects, it should be able to fix the code and it should be able to      make some updates and fix the bugs( e.g. a car's direction upwards has problem and can not be controlled with the help of the mouse, so the this bug should be able to fixed).\n  3) Usability:\n    The color of player's car and the color of the other cars should be different, so the player can identify his own car and move according to it.\n 4)  Usability:\n    When two cars collide, there should be either a sound or visual effect. That is how the player can understand the collision.\n 5) Performance:\n    The runtime of the game should be precise, so  the game can come to an end and have winner/losers.\n 6) Performance:\n    When the game has come to a conclusion (when the winner is precise), the winner of the game should be set on within 0,2 seconds.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1288053,
      "meta": {},
      "text": "Usabiliy - the game should start in 1 click\nSatisfaction - music should be played\nPerformance - the game should be able to suppord different colisions and bumper cars at the same time \nMaintainability - the game should be maintainable\nConformance to guidelines - the game should conform to usability guidelines\nExtensibility - the game should allow new updates",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281832,
      "meta": {},
      "text": "Usability: \nThe player is able to start the game within 4 clicks after opening the game.\n\nRealibility: \nThe game responds to the respective player-input in the correct way by 100%.\nThe game is at least 99,95 % not susceptible to intended changes by the user (e.g. that the player car always wins a collision).\n\nPerformance: \nInput lag from the mouse should be below 25 milliseconds.\n\nSupportability: \nNew features as for example new collision types or new car types can be integrated within a period of one week. \nBugs - as for example collisions that evaluate in a wrong way - can be corrected within 2 days by the developers.\n\n\n//Note - some of the NFRs are derived from my solution for last years exercise - Thomas Schuhbeck (ga84xoc)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282394,
      "meta": {},
      "text": "Usability\t\t\t: The Bumper game should be intuitive to use. The mouse input has to run smoothly and to play the game, the player has to at least click at max 5 times.\n\nAccuracy and Reliability\t: Bugs and error will only happen once in 100 games. A wrong winner/loser evaluation will only happen once in 150 games. \n\nTarget platform\t: The Bumper game has to be developed in Java with the GUI framework JavaFX\n\nPerformance\t\t: The processing of choosing cars, winning condition, and collision should each take less than 1 second. The game should support (detect and evaluate) at maximum 10 collisions at once. The game will support 20 cars optimally, but can be maxed out until 30 cars.\n\nMaintainability\t: Once the Bumper game is down due to unknown bugs and errors, it has to be able to operate again after 3 hours. During the maintenance process, however, the game cannot be played.\n\nExtensibility\t\t: The Bumper game must be designed in a way that allows adding, removing, or balancing certain aspects in the game, such as: collision, cars, and winning condition to avoid the game to be boring and keep the game healthy to be played. This process should not lead to error, but if an error happens right after the extension, refer to the \"maintainability\" point above.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285609,
      "meta": {},
      "text": "Usability:\n1) Users can start/ stop the game at any time by clicking the respective labeled start/ stop button.\n2) Images representing cars should be photos of cars from the real world to be clearly recognizable as cars for the user.\n\nPerformance:\n3) It takes less than a second to react to the user's steering and make the car move in the desired direction 99% of the time.\n4) The availability of the system (the game) is always 100%.\n\nReliability:\n5) The game should not be able to be accessed by two users at the same time.\n\nSupportability:\n6) A new car or crash type can be added to the existing system within 30 minutes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285854,
      "meta": {},
      "text": "Usability:\n\t-The game should be stoppable with only one mouseclick\n\t-The directions on how to control the car in the game should be shown when starting the game but can be skipped with one click for more experienced players\n\t-The directions on how to play the game can be read again while playing by clicking a big yellow button with \"Instructions\" on it\n\nReliability:\n\t-When the user uses a wrong input (e.g. keyboard instead of mouse to steer) there should be an error message displayed which explains what input was wrong\n\t\nPerformance:\n\t-The refresh rate of the game is stable at 24FPS\n\nSupportability:\n\t-The game works the same no matter what device the player is on (e.g Android Smartphone, Apple Computer, Tablet, Windows Laptop)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286181,
      "meta": {},
      "text": "Usability: \n- enjoyable but easy interface, clear start button and winning animation\n\nReliability: \n- should handle fast mouse movements \n- should delete last \"game\" every time, so the game will not take up much storage and can be played on a full \t       computer as well\n\nPerformance: \n- each restart should take lass than 2 seconds \n\nSupportability \n- easy change of car image and music \n- should support every file type for new car images or music ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287036,
      "meta": {},
      "text": "First of all, the game needs to be easy to use regarding usability. This means that it has an intuitive game design. Starting and stopping should be accessible through one click. Furthermore, it should not crash in any circumstance (-> every possible car crash and clicking event needs to be covered) in order to fulfill the reliability requirement. Regarding performance, the game needs to be very responsive. Changes in direction should happen immediately. Also movement should be fluent. There should be no stutter or flickering while driving around. Clicking on the screen should provide an accurate change of direction and not only an estimate (-> creating 360 (circle) directions). The car classes should be should be designed in a way so that it is easy to add new cars. Maybe we want to add a function later that allows the user to do so. Also the code should always adhere to the principles of object oriented programming so it is easy to maintain. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287260,
      "meta": {},
      "text": "NFR1: The sprites chosen for the cars should all be drawn in the same art-style, without any glaring differences (e.g. 8bit vs. photorealistic).\nNFR2: The chosen Music must have a bitrate of at least 128kb/s but should also be compressed to preserve file size\nNFR3: The game should not be any larger than 100mb\nNFR4: In case of a system failure, the user should be able to restart the game quickly (within 5 seconds) without having to close the game window.\nNFR5: The game should be able to run with very minimal hardware requirements (Integrated graphics should suffice).\nNFR6: The game should be easily expandable by adding new cars and collisions, without having to modify the core program.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287413,
      "meta": {},
      "text": "Usability: The player should start the game (including choosing the car type or choosing the type of collision) within maximum 7 clicks.\nReliability: Rubustness example: the game should also work if the mouse sensitivity is very slow ( > 3)\nPerformance: \n1. 99,5% collisions should be evaluated in less than 0.1s.\n2. The game should be not availiable to players in less than 15 minutes a week.\nSupportability:\n1. The game performance and speed should not change when the user will zoom the screen out.\n2. The new collision type could be added to the game and the game could be available again in less than 10 minutes.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287573,
      "meta": {},
      "text": "NFR1: Usability: The player controls the car via the mouse.\n\nNFR2: Reliability: The game will not crash during gameplay in 99% of cases.\n\nNFR3: Performance: The game should run with at least 60 FPS on a modern laptop (reference: MacBook Air 2020).\n\nNFR4: Performance: The game should respond to game inputs in a maximum time of 100 ms.\n\nNFR5: Supportability: A newly created car type should be able to be plugged into the existing system in fewer than 20 lines of code (Maintainability).\n \nNFR6: Usability: The UI should visualise different car parameters like speed, consumption and location.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287749,
      "meta": {},
      "text": "a)Performance Time \n\t1. Response time: As the car moves according to the mouse, it is really important for the game to work as it is planned. The mouses's moves should be dependent on the game. Therefore, the response time is playing a huge role. For example, according to the movement of the mouse in the system immediately, the car needs to go in the same direction.\n\t2. Availability: As given in the slides, availability counts as 'The ratio of the expected uptime of a system to the sum of the expected uptime and downtime'. Therefore, the system should be accessible for the user and for that it also needs to count the error time. Such as it should not be a problem when there is more than one player in the game.\n\nb) Usability \n\t3. Learnability: In order to play the game properly, first, it is necessary to learn every detail of the game. For this reason, the game should not be explained in a very complex way. For this, a simple and understandable instruction should be given.\n\t4. Satisfaction: Besides learning about the game, the user should also have some fun while playing the game. Such as winning the game or being too fast could make the user satisfied. \n\nc) Reliability\n\t5. Robustness : As given in the slides: 'the ability of a system to maintain a function' Because it is a video game, there is a huge possibility that the user might be playing for a very long period. Therefore, the durability of the system is very important.\n\nd) Supportability \n\t6. Adaptability: While playing the game, multiple settings are working at the same time and are changed according to the players. Therefore, the system has very limited time to adapt to the new movements. For this reason, it is important that the system can easily adapt to changes. For example, while changing the steering wheel of the player's car, it can increase its speed, slow down or have an accident.... It must be able to perform all of these at the same level.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287818,
      "meta": {},
      "text": "The first non-functional requirement is that that the game should be programmed in a way that at least 80% of all 16 year can learn how to play the game within 30 minutes. (Usability Requirement) That is the case because we believe that 16 year olds are our main customer group.\n\nThe second is that the game is allowed only show the high score to the individual player  (Reliability Requirement). We do not want players to compete with each other, but only with themselves.\n\nThird, the game should be played by 10000 at the same time. (Performance Requirement)\nWe expect such a number of users at maximum and don't want the users to have bad user experience when the game crashes.\n\nFourth, the game should be able to be played on IOS and Android. (Supportability Requirement)\nWe think that most of our customers will have one of those.\n\nFifth, the user should be able to start the game within 20 seconds. (Usability Requirement)\nWe are convinced that if the game is not started after 20 seconds the user will loose intrest.\n\nLastly, the game should not be able to be played between midnight and 7 am every day. (Performance Requirement). The reason is we do not want kids to play at night.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287879,
      "meta": {},
      "text": "1.Usability:\nDer Nutzer sollte das Spiel mit nur einem Klick starten koennen. \nAlle Informationen sollten auf einer Seite darstellbar sein (d.h. Informationen sind nicht auf mehrere Seiten \t\t\t \n      Verteilt durch die man durchschalten muss).\nNeben der Maus soll der Spieler maximal drei weitere Tasten benutzen muessen.\nAlle Informationen wie Geschwindigkeit, Verbrauch und Ort des Fahzeugs sollen mit einer Schriftgroesse von  \n       mindstens 20 oder in einer vergleichbaren  Darstellung visualisiert werden.\nDer Nutzer sollte immer sehen welcher Typ von Kollision gerade angewaeglt ist.\n2.Reliability:\nAlle anderen Eingaben ausser fuer Steuerung des Autos, Geschwindigkeitswechse und Kollisionswechsel sollten        \n    vom Programm ignoriert werden und des Spielverlauf nicht stoeren.\nSollte der Spieler das Programm mit dem Mauszeiger verlassen oder dieses minimieren sollte das Spiel ohne \n     Unterbrechung weiterlaufen.  \n3.Performance\nJede Mauseingabe vom Spieler soll bis zu einer Rate von 10HZ soll fehlerfrei erkannt werden und zu einer \n     passenden Richtungsaenderung fuehren.\nDie Eingabe von mehreren Befehlen gleichzeitig(d.h. z.B. das Wechseln der Richtung mit der Maus und ein \n    gleichzeitiges Aendern der Geschwindigkeit mit der Tastatur) soll vom Spiel ohne Probleme erkannt werden.\n4.Supportability\nDas Spiel sollte auf den Betriebssystemen Windows, Mac Os und Linux Mint  ohne Probleme laufen\nDas Fenster sollte sich anpassen wenn man dessen Groesse veraendert und zwar so, dass das Spielfeld unabhaengig von der Groesse immer zentriert im Fenseter erscheint",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1281224,
      "meta": {},
      "text": "1) The game should be platform independent, which means that it should work problemlessly in each possible computer brand that the player might want to play the game in. (Supportability)\n\n2) The game should not stop or crash, in case of the player hitting any keys on the keyboard. (Reliability -> Robustness)\n\n3) The mouse pressing must be processed and shown in the game in less than a second. (Performance -> Response Time)\n\n4) The player should be able to start the game with a maximum of 3 clicks. (Usability -> Efficiency)\n\n5) The texts in the game should at least be 12 point size for the player to read it easily. (Usability)\n\n6) In case of a collision, the game should give the correct result according to the problem statement in terms of whether the player has won or lost the game. (Performance -> Accuracy) ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281575,
      "meta": {},
      "text": "Usability\nNF1: The user needs at most 2 clicks to start or stop the game \nReliability\nNF2:  If the player accidentally makes invalid inputs during the game, the system shouldn't crash \n99.9% of the time. \nPerformance\nNF3: The System should react to every mouse click of the user within 0,1 seconds and change the direction of the player car.\nNF4:  The system should checks if a collision happens every 0,05 seconds.\nSupportability\nNF5:  The system should support at least 3 collision types.\nNF6: The System should evaluate the collision correctly during different collision types.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282561,
      "meta": {},
      "text": "I am going to outline 6 nonfunctional requirements spread across the 4 categories usability, reliability , performance and supportability. In our case I identifyed usability and performance as especially important criteria for the quality of bumpers.\n\n1.Usability: The user should need one click to start the game\n2.Usability: The game should be easy to learn. There has to be a button to start a tutorial.\n3.Reliability: The game should be robust.  Therefore it needs to be able to support a gameboard with at least 15 cars at the same time.\n4. Performance: The game needs to provide at least 60 frames per second.\n5.Performance: The game needs to process the inputs accurately. So it has to support changes of direction by the player car with the accuracy of one degree.\n6.Supportability: The game should be built so the developers can add new types of cars fairly easily.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284228,
      "meta": {},
      "text": "NFR1 (Usability) :\nThe settings (e.g. the collision type) of the game should be accessible with 2 clicks from within any situation in the game. \n\nNFR2 (Reliability) : \nAny input from the user except adjusting the settings or steering the car through clicks has to be ignored by the game. For example pressing keys should not trigger anything in the game.\n\nNFR3 (Performance) :\nThe game has to be able to process the input of one user while simultaneously managing the cars not steered by the user without lagging. \n\nNFR4 (Supportability) : \nPlayers should be able to steer the car with an external mouse or with a trackpad in case they use a laptop.\n\nNFR5 (Usability) :\nAfter a game has finished a user should be able to start a new game with just one click. \n\nNFR6 (Supportability) :\nThe window in which the game is played has to be scalable, meaning the user can make it bigger or smaller with the the car size scaling accordingly. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284828,
      "meta": {},
      "text": "1. In order to make it clear when the game ends, when the player's car crashes or other cars crash the game should stop the game immediately to show a popup message telling whether you won the game or not.\n\n2. The various parameters of the cars such as the speed, should be clearly visible to the player.\n\n3. A maximum number of 30 cars should be able to be added without causing any problems.\n\n4. All cars should have a bounding box surrounding them so that collision can be detected. An appropriate shape should be chosen so that the shape/size of the bounding box is as close as possible to the shape/size of the car\n\n5. The music should loop itself as long as the game is still going on to prevent no music from playing when the track ends\n\n6. The players should at most need 3 clicks to start the game and just one click to stop the game.\n\n7. The multiple collision engine should be able to function with at least 3 different types of collision at the same time without any issues.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287427,
      "meta": {},
      "text": "#NFR 1 Usability and Learnability of the game:\n - The system should include a tutorial for the user to be able to understand the game, where the rules and exact functionalities are explained on text. This tutorial should be reachable with one click from the starting screen.\n\n#NFR 2 Robustness of the game:\n - If any kind of unwanted input induces an error or an exception at runtime, the system should be able to continue anyways and should not stop working. A game can be interrupted, but the apllication should keep running.\n\n#NFR 3 Performance of the game:\n - The Frame Rate of the game should be at any time over 30 Frames per second.\n\n#NFR 4 Adaptability and Portability of the game:\n - The game should be independant of the platform and the environment it is in and should be able to perform all functionalities on any platform. Supported platfroms are Windows, MacOs and Linux systems. \n\n#NFR 5 Usability and user experience:\n- If the User wants to change the determination of the collision winner, this option should be instantly reachable from the screen (one click exactly). In order to avoid that this action would inflence the game, the gameplay has to be paused while the change of the collision type.\n\n#NFR 6 Maintainability and Organization of the Code:\n - In order to be maintainable and easily changeabe and extendable, the sourcecode of the shoud be divided in as independant components as possible. To ensure the cohesion of these components, the LCOM score of the source code should be at most at 20. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287455,
      "meta": {},
      "text": "Usability: \nPlayers start and stop the game using the enter button on the keyboard and steer the car with their mouse.\nWith the \"space\" key on the keyboard, the players car of choice can perform a special skill (for example, become 3x faster for a certain duration).\n\nReliability: \nThe game will run at minimum 60 FPS and will not crash and cause overheating when new things are added.\n\nPerformance: \nThe game will not take longer than three seconds to load and start.\nThe game will not crash or freeze if there are more than 200 cars on the game board.\n\nSupportability: \nThe game will support the addition of new car types and be able to run with every new JDK update.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287878,
      "meta": {},
      "text": "1. The game should be able to run on almost every machine/computer made in the last 10 years with great performance (no lag, good response, no excessive load time)\n\n2. The UI of the game has to be consistent, and easy enough to understand, so most new people to the game understand it easy enough. It also has to be responsive and look consistent with the style of the game.\n\n3. The game requires no connection to the internet, so it should be as available as possible to be playable whenever. Not being restricted to any platform and making it available to Windows, Mac and Linux. \n\n4. The game should have at least 5 different cars, that can differentiate each other with at least 3 different stats like Speed, Resistance and Acceleration.\n\n5. Every Collision should be able to be winnable by the player, so making it that the player is able to win every single game. This does not mean that all those collisions are easy to win.\n\n6. All the music and sound effects (example: Car Crash) should be original and not reused from other soruces. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287929,
      "meta": {},
      "text": "Nonfunctional Requirements\nUsability\n-The car can be moved into the direction of the cursor just by clicking the left mouse button once, the car will continuously move into that direction without stopping\n-The game can be started or stopped with a single click on one of the corresponding buttons\nReliability\n-When the start button is pressed again, even though the game is already running, nothing should change/happen, and the game should continue normally\nPerformance\n-can support one single player\n-can support between 0 and 25 bots (computer cars), otherwise there are too many on one screen\nSupportability\n-The game can be played on any platform",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281217,
      "meta": {},
      "text": "Usability:Players interact with the computer screen.\nReliability: The availability of the game is at least 99.5% and the game must be opened in 0.05 seconds.\nSupportability:The game can be played on windows and ios etc.\nPerformance:After the collision is detected and evaluated,the player must be told whether he wins or loses in 0.1 seconds.\nMaintainability:The system implementation can be improved at any time by the developers.\nSecurity:The game has no PIN and players always have access to the game .\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281256,
      "meta": {},
      "text": "1.  Usability: The game system must show timely updates about the different parameters of the car which includes speed, consumption and location of cars during gameplay.\n2.  Reliability: The system must be robust when the user enters a wrong input such as not restarting the game when the player clicks the \"start\" button twice\n3. Performance: The software must support the simulation of the non-player cars moving around the game board\n4. Availability: There must be a very low downtime especially during the game play. This means that functions of the game, like music and visualisation, must be available about 99.5% of the time.\n5. Supportability: The game system must be adaptive when the player change the direction of the car with the mouse which will result in change of calculations during collision due to changes in orientation\n6. Supportability: The game system must be able to be modified by a developer to correct bugs on a timely basis and supported in all operating systems",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281419,
      "meta": {},
      "text": "Supportability:\t\t- It is clearly stated that the game should be platform independent\nPerformance:\t\t- A program as simple as this one should be able to run on a CPU with less than\n\t\t\t\t  1GHz of processing power and not take up more than 1GB of RAM (although this too affects\n\t\t\t\t  supportability, it is easily seperatable from the software aspect of platform independence\n\t\t\t\t  and therefore can be tested and evaluated independently)\n\t\t\t\t- The rotation of the cars should be at least as accurate as 360°\nUsability:\t\t\t- Starting and stopping the game should require one and two user interactions\n\t\t\t\t  respectively (since there is no need for further user input other than a confirmation when\n\t\t\t\t  stopping the game, making the user take any additional steps to start the experience is\n\t\t\t\t  unnecessary)\n\t\t\t\t- Adjustments to the speed of the player's car should take exactly one user\n\t\t\t\t  interaction, since any more would break the flow and immersion of the gameplay and\n\t\t\t\t  ruin the experience\nReliability:\t\t- The colission logic has to constistantly match with the visual representation of the scene, no\n\t\t\t\t  matter what speed or collision type the player selects. If the car images overlap, there has to\n\t\t\t\t  be a corresponding collision.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1286804,
      "meta": {},
      "text": "\nUsability: \n-No matter the state of the game, the user should be able to start a new game within 3 mouse clicks.\n- At any point in time the user should know what the state of his/her game is(Stopped, Won, Lost, playing etc.)\n\nReliability: \n-  In user testing the probability of system failure should be less than 1% (if a 1000 users test it less than 10 should have problems running the game)\n\nPerformance: \n- The system should be able to handle up to 100 cars at a time while using less than 1GB Ram and at the same time still being able to support 30+ frames per second.\n\nSupportability:\n- The game should run on at least the tree major computer(desktop) systems (Linux, Windows, MacOS) and the two major operating systems for phones (Android and IOS).\n-The game runs and is displayed correctly independent of the position of other GUI Elements(e.g. Buttons, pop ups etc.)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286850,
      "meta": {},
      "text": "NFR1 Usability - Memorability: The game should have intuitive controls and easy-to-learn systems, so that users that haven't played for a longer period of time can easily remember how to play quickly get up to speed.\n\nNFR2 Usability - Responsiveness: The game should feel responsive to the inputs of the users. There should be no delay between the button press and the game response.\n\nNFR3 Reliability - Availability: In case of a failure, the user should be able to start playing as soon as possible.\n\nNFR4 Performance - Resource Consumption: A simple racing game shouldn't be demanding to the system on which it is played, so it should be made in such a way, so that it uses as little as possible from the CPU, RAM, GPU, Memory and other components of the computer.\n\nNFR5 Performance - Scalability: The game should support new additions, such as new cars, collision types, models, and modes without breaking old ones.\n\nNFR6 Supportability - Maintainability: The game should be easy to maintain in the long-term, so that it can be made playable on newer systems and prolong it's life on older ones.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287269,
      "meta": {},
      "text": "  Usability:\n    - Mit insgesamt nicht mehr als fünf Mausklicks können Fahrzeug- und Kollisionstyp ausgewählt\n      sowie anschließend das Spiel gestartet werden.\n\n    - Jeder Text in der graphischen Benutzeroberfläche ist durch ein passendes Symbol veranschaulicht.\n    \n    - Alle Funktionen des Spiels sind auch dann für den/die Nutzer*in erreichbar, wenn das Spiel\n      ausschließlich mit der Maus bedient wird.\n\n  Robustness:\n    - Alle Elemeente der graphischen Benutzeroberfläche sollen auf Bildschirmen mit verschiedenen DPI-Werten\n      stets in der gleichen Größe angezeigt werden.\n\n  Performance:\n    - Bumpers kann mindestens 200 gleichzeitig fahrende Fahrzeuge simulieren.\n\n  Maintainability:\n    - Durch Austauschen von Bilddateien kann das Aussehen der Fahrzeuge ohne Veränderung des Codes\n      abgeändert werden.\n",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1281270,
      "meta": {},
      "text": "NFR-1 (Usability):\nThe User interacts with the game via mouse only\n\nNFR-2 (Reliability):\nThe game should ignore non-defined User-inputs like keystrokes. The only way to interact with the came are mouse-klicks in the game-board to steer and klicks on Start / Stop or X to close / start / stop the application.\n\nNFR-3 (Performance):\nThe delay between the players klick on the screen and the turning of the car should be below 0,1 sec. \n\nNFR-4 (Performance):\nThe game is a single-player game, hence it should only support one user at a time.\n\nNFR-5 (Supportability):\nThe images of the car and the sound-effects have to be changeable only in one spot and it mustn't need more than 2 Minutes.\n\nNFR-6(Portability):\nThe game should run on MacOS, Windows, Android & iOS\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281376,
      "meta": {},
      "text": "1. The player car should change its direction when the player clicks his mouse (Usability)\n2. The game should be platform independent (Performance)\n3. New car types and collision types can be changed easy by the player (Usability)\n4. The game still works if the collision type is changed during the game play (Reliability)\n5. The different paramaters (speed, consumption, location) are visualized clearly to the player (Usability)\n6. Bugs in the game are easily fixed by a developer (Supportability)",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1281904,
      "meta": {},
      "text": "1. Usability:\n\tthe player should be able to start the game in, at least, 5 clicks.\n\nReliability\n\t2. Safety: \t\n\t\t\tthey shouldn't be more than 10 Cars, due to the unplayable behaviour.\n\t\t\t(Player get insta killed, if to much cars are on the board)\n\n\t3. Security: \n\t\t\tBumpers shouldn't be open Source to prevent unfair behaviour , through changes of the code, \t\t\t\n\t\t\tamong the players.\n\n4.  Performance\n\tthe Evaluation time for the collisions should, for 95% of the time, take less then 0.01 sec.\n\nSupportability\n\t5. Maintainability\n\t\t\tCar types should be changeable in less then 5 min.\n\t\n6. Usability\n\tThe Cars should be 64x64 pixels in a 500x500 pixel gameboard.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282888,
      "meta": {},
      "text": "NFR 1 (Performance/Response Time): The system should be able to react to user inputs within 20 ms\nNFR 2 (Robustness): Wrong user inputs should have no effect on the system\nNFR 3 (Usability): The User needs at most 2 clicks to start the game\nNFR 4 (Maintainability): The system can be easily updated once every 3 months\nNFR 5 (Portability):  The game should playable on Windows, MacOS and Linux\nNFR 6 (Availability): The system should be available for 99.8% of the time",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282983,
      "meta": {},
      "text": "- player need maximum 4 clicks to setup the game (usability)\n- the game outcome( e.g you lost) appears in a seperated pink window with words writte in red colour (usability)\n- the game is not accessible from outside of the players computer ( safety/Reliability)\n- the game can be played by 2 players at the same time (performance)\n- the game can be played via an online environment and therfore changes its design ( adaptability/ supportability)\n- the background of the game can be changed with 5 clicks ( maintainability/ supportability)\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284381,
      "meta": {},
      "text": "Usability:\n1. The user/player needs exactly one click for each to start and stop the game.\n\nReliability:\n2. The game schould continue working without any problems if another game is started on the same computer simultaneously.\n\nPerformance:\n3. The player car should respond within 20 ms, this means start moving in the direction of the \"click\" within 20 ms (Response time).\n4. The player car should move to the \"clicked area\" with a precision of maximum 1mm deviation from the \"clicked pixel\".\n5. The availabilty of the system is at least 99%, that means the downtime is at most 36 seconds per hour.\n\nSupportability:\n6. The game should function without any problems on Linus, Windows and MacOS.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284437,
      "meta": {},
      "text": "Usability:\n\tRegulate loudness: The game should support changing the audio playback loudness in the range of -40db to 0db. The user can then decide to not go deaf, by reducing the volume.\n\n\tDisplay speed: The game should display the speed the player car currently has, in an easy-to-read manner, eg. from 0 to 100 percent.\n\nReliability:\n\tIgnore bad inputs: The game should ignore bad inputs from the keyboard, eg. it must not change any action by pressing a key.\n\nPerformance:\n\tPlay fluently: The game should be playable with at least 30fps average.\n\tPlay with many cars: The game should be able to handle up to 20 cars, without delaying steering input from the user.\n\nSupportability:\n\tChange operating system: The game should be playable on any operation system, by using the same code on another system, and only by installing needed prerequisites, eg. jvm.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285824,
      "meta": {},
      "text": "Usability: \n1. The player only needs one click to start or stop the game. \n2. Additionally the player only needs one click to change the direction of his car.\n\nReliability: \n3. The game should encounter in 100 games played at maximum 1 critical failure.\n\nPerformance:\n4. The average response time between click and reaction must be less than 0.5 seconds.\n5. The loading time of the Bumpers game must be smaller than 4 seconds.\n\nSupportability:\n6. The code written for the game must be maintainable and therefore if a bug appears it should be fixable in max. \n    1 hour.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286063,
      "meta": {},
      "text": "NFR1 Reliability: The music should be played every time the player starts the game. \n\nNFR2 Supportability: The game should run on every machine supporting Java. \n\nNFR3 Usability: The player can start the game with only one click. \n\nNFR4 Performance: the response time from the players car should be at least 1ms, if not better. \n\nNFR5 Performance: There should be no downtime because its a local game. \n\nNFR6 Usability: The player only needs his mouse to steer his car.  \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287065,
      "meta": {},
      "text": "-> Usability\n\t- The User interacts with the mouse click\n\t- There shall be one car which can be controlled by the user\n-> Reliability\n\t- The system should tolerate different parameters of the car, e.g. different speed, consumption and location\n-> Performance\n\t- The collisions shall be evaluated within 1ms\n\t   (Important because more cars may collide almost at the same time)\n\t- The sound effect shall be played within 1ms after a collision\n-> Supportability\n\t- The system should support a changeable collision-winner determination during the game\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287774,
      "meta": {},
      "text": "Quality requirements:\n\nUsability:\n    - Players need at most 2 clicks to start the game.\n    - The game has no learning curve for the player and it can be learned within 2 minutes of playing it for the first time.\n   - Players interact with a mouse or a keyboard.\n\nReliability:\n    - The system can withstand five consecutive clicks within 1 second.\n\nPerformance:\n    - The crashes should be shown within 0.01 seconds.\n\nSupportability:\n   - The system can support different platforms(i.e. windows, mac)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287793,
      "meta": {},
      "text": "1. Benutzer interagieren mit einer Maus. (Usability)\n2. Benutzer benötigen höchstens zwei Klicks, um das Spiel zu starten. (Usability)\n3. Das System kann unnötige Klicks auf der Tastatur tolerieren. (Robustness)\n4. Das System kann bis zu 10 Kollisionen gleichzeitig tolerieren. (Performance)\n5. Der Spieler kann die Richtung des Autos steuern und gleichzeitig seine Geschwindigkeit ändern. (Performance)\n6. Das System darf die Gewinner nicht an unbefugte Benutzer weitergeben. (Security)\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1281019,
      "meta": {},
      "text": "- clear button for change in collision and exit\n- same Interface on every platform\n- support at least 100 cars at the same time\n- clear destinction between player and system cars\n- set maximum speed\n- the game can be played on a sellphone",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282059,
      "meta": {},
      "text": "Usability: The car's parameters should always be visualized in a single big box in the upper right corner. Speed, consumption and location are each written in a different color. (Usability aspects: easy to learn and memorize, efficient). \n\nReliability: When the mouse that steers the player’s car is disconnected (e.g. Bluetooth connection breaks) the game is paused automatically and can be resumed once the mouse is reconnected. (Reliability aspect: safety). \n\nPerformance: The response time between the player's mouse actions and a change of direction of his car should be less than 0.2 seconds independent of all chosen variables like speed or collision type and independent of what is happening in the game, like crashes being processed. (Performance aspect: response time).\n\nPerformance: The game doesn't need to transform mouse actions into movement perfectly. Dependent on the input, it is enough for the game to differentiate between 12 directions in which the car can move. For a game that simple, more than 12 directions can be considered an overkill. (Performance aspect: accuracy).\n\nSupportability: The game offers a documentation with a UML class diagram that shows how the classes are structured and related. This makes it easier to add new car Types, music or collision types as the developers know where to find them. (Supportability aspect: Maintainability).\n\nSupportability: The game should be available independent of device type and operating system as a web application. (Supportability aspect: portability).\n\nAll formulated NFRs adhere to the general NFR requirements as shown on lecture slide 20 (independent, testable, etc.)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282186,
      "meta": {},
      "text": "1. Usability: The user should be able to only use their mouse to control the entire program, and have to click only thrice throughout the whole experience (Start game, Exit, and Stop). This encourages learnability from the game nearly immediately \"The user only has to drag their mouse to control the car\". \n2. Reliability: The program will only have one winner for each collision (not 0 or 2 winners, or unintended outcomes)(safety).\n3. Performance: There should be no frame drops with the number of cars generated, always a minimum of 60fps-- the program should be optimized for multiple vehicles driving around on the screen at once even for limited hardware. \n4. Supportability: The program must update and support changing conditions that emerge during the runtime, such as visualizing the different parameters of the car, e.g. the speed, consumption and location of the car (adaptability) even with different monitors and screen resolutions. \n5. Reliability: The program should be able to run on the 3 main OS's (Linux, Windows, Mac) and a variety of CPU clock speeds (0.8Ghz to 5.2Ghz) and maintain functionality and intended gameplay loop (Robustness).\n6. Supportability: The code should always compile in <15 seconds, so that debugging happens quickly and allows extensibility into the future. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284883,
      "meta": {},
      "text": "Usability:\n- The game has a very simplistic UI. The game can be paused/started in 2 clicks.\n- The player always knows in which state the game currently is.\nReliability:\n- The player can't, with no combination of inputs or actions, bring the application to crash.\nPerformance:\n- The game runs in a matter, that the movement of the cars looks smooth: It has at least 25FPS.\n- The input lag is as low as possible. The player doesn't notice a delay between clicking on the canvas and the car moving in the new direction.\nSupportability:\n- The game can be played on all kinds of PCs. This includes PCs which run on Mac or Linux.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285000,
      "meta": {},
      "text": "1. Usability: The game can be played in all platforms including windows, mac, android, iOS and Linux. It should have at least 4 cars in the game board and the user can control only one of them. The game should also visualize different parameters of the car, e.g. the speed, consumption and location of the car. \n2. Usability: The player can start and stop the game with the start and stop button with 1 click each. The music is played when the start button is pressed.\n3. Usability: The game should visualize different parameters of car which includes: speed, consumption, and location of the car. The player can control the car's direction with mouse movement and change the speed of the car with right click. \n4. Reliability: There should be at least two cars on the game board except from the player car, otherwise the game cannot be played.\n5. Reliability: The IO error for mouse should be handled, and a pop-up should display an appropriate message about the problem.\n6. Supportability: The game should have 2 types of collisions. One should be normal collision in the real world, second one should be split collision which splits the cars in two. The game should be able to handle different types of collision (split and normal), and determine the winner based on the type of collision.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285001,
      "meta": {},
      "text": "Usability : - The player can steer and change the direction of the car with one mouse click\n\t\t - The player can start the game and the music with only one click on the start button on the game\n\nReliability : - The player still can play the game ( the game doesn't trigger any bug or delay), although he accidentally presses the keyboard or clicks the wrong side of the mouse\n\nPerformance : - The evaluation of a crash and a winner during the game shouldn't take more than 2 seconds\n\t\t        - The bumpers game can be played with at most 1 second delay , although there are 50 cars that driving around randomly and simultaneously on the game\n\nSupportability : - The bumpers game can be played on different platforms ( Windows, MacOS, and Linux)  ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286564,
      "meta": {},
      "text": "Usability: Every Icon, Option and all Information related to game should be clearly visible during start, which sum \n                up to make game more easy to use and understand. Max 3 clicks to start the game and max 2 clicks to  \n                restart the game.\n\nPerformance: Every Click during game should performe the respective task within 0.5msec. Just after the \n                      collision within 0.5msec the loser car should stop and the crash sound should be played.   \n\nReliability: If game stops due to any reason in the middle of the game. Then the game should give option to the \n                 Player resume the game from the same place. If the game is played Online, no Player data should be \n                 stored.\n\nSupportability: Game should be supported on Mac, Windows System and can be played Online in the web \n                        Browser. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287926,
      "meta": {},
      "text": "USABILITY:\n\t- after opening the application, the player should be able to start the game with one click\n\nRELIABILITY\n\t- the game should have an anti-cheating detection, so the rules of game apply to every player in  every instance (Security)\n\n\t- the parameters of the car, like speed, should always be accurate and easy to see for the player (Safety)\n\nPERFORMANCE:\n\t- a collision should be detected in less than half a second\n\n\t- since the game is offline, the game should be available at every time unless the player proceeds to install an update ( Availability)\n\nSUPPORTABILITY:\n\t- the game should be modifiable by the developers, for example if the game seems unbalanced, attributes like car speed should be easy to change or other cars should be easy to add to the game (Maintainability)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280756,
      "meta": {},
      "text": "NFR1(Usability) : The rules of Bumpers should be intuitive to the players.\nNFR2(Usability) : The driving of cars should be smooth.\nNFR3(Reliability) : The system should not crush in the 90% of working time.\nNFR4(Performance) : The system should support at most 20 players simultaneously playing the game.\nNFR5(Availability) : The downtime is at most 30 minutes per week.\nNFR6(Supportability) : The type of cars can be changed with different velocities.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1282880,
      "meta": {},
      "text": "NFR1 (usability) : \nThe Interface should be intuitive to use. That means there should be well-visible buttons for starting and stopping the game. \n\nNFR5 (usability) : \nThe game should be easy to learn and easy to memorize. The only thing the user needs to know is to click where the car should drive. \n\nNFR6 (usability) :\nThe user interface should be enjoyable to use and errors should easily be able to be recovered. That means when cars crash, they should make a sound and there should be music that fits into the theme. There should exist a stop button to restart the game in case an error occurs.\n\nNFR2 (reliability) : \nOur system should be reliable. The user should not be able to enter the wrong input as this is a simple game where he can only press start, stop and click on the board. Our system should be robust and not have dependencies that are not used.\n\nNFR3 (performance) : \nOur game should run smoothly without lags on all computers which are up to five years old.\n \nNFR4 (supportability) : \nOur system should be lightweight and easy to maintain. That means that we should easily be able to add new features and functionalites in a few hours.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283053,
      "meta": {},
      "text": "Usability:\n\t* The player should be able to start a game within less than 5 seconds after booting the game\n\t* The player HUD should be in  font that is easy to read even if colorblind and/or dyslexic\n\t* Controls should be changable by the player in case of different keyboard/mouse layout\nReliability:\n\t* If the game becomes unresponsive, it should never capture the users mouse\nPerformance:\n\t* The game should run in at least 30 fps even on machines that are 5-10 years old\nSupportability:\n\t* The programm allows new car types to be added by simply writing a config for the new car ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283335,
      "meta": {},
      "text": "- The game should be intuitive thus the player must be able to understand the basic gameplay within 5 minutes\n- The game should not crash the program under any circumstances\n- The game should be performant enough to be played on any modern device with 4GB of RAM with atleast 30 fps\n- The game should have a good documentation and thus be easily maintainable by any developer even those, not having been part of the develeopment proccess\n- The game should behave the same on any device running on Windows, MacOS, iOS, Android, Linux\n- The game should look modern and aesthetic by todays standards",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284589,
      "meta": {},
      "text": "1)Usability\n-The steering through mouse should be as easy and painless as possible.\n\n-Visibility (whether the game is stopped or going or is the player has won a collision or the game) should be as easy to recognize as possible. Whether a car is fast or slow should be also made clear through different assets.\n\n-Satisfaction in such a collision based game comes from the effect. Every collision should be as real as possible meaning the animation and sound effects should be suitable for the collision.\n\n2)Reliability\n-The changeability of the collusions should work properly as intended and one should be careful that no game-breaking bugs occur because of such a change.(Making the car invincible/always winning)\n\n3)Performance\n-The performance of a single player is calculated through the FPS(Frames per Second) and the response time of given inputs. Response of time should take maximum one frame. The minimum fps in such an 8 bit game is for me 24.\n\n4)Supportability \n-The most important aspect in this category is that the game must be platform independent.\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285020,
      "meta": {},
      "text": "Usability:\nAls Benutzer kann man mit einem Klick auf den Startknopf das Spiel starten. Es ist daher einfach zu lernen, führt schnell zum Ergebnis und ist daher auch recht einfach zu merken.\n\nRobustness:\nDie Fähigkeit eines Systems dauerhaft auch bei falschen Eingaben auch weiterhin zuverlässig zu laufen. Auch diese Kategorie wird von Bumpers erfüllt. So ist es nicht möglich das Spiel durch bugs oder Falsche eingaben zum Abstürzen zu bringen.\n\nPerformance:\nDie Fähigkeit eines System auf mehrere Eingaben, Nutzer etc. ohne Probleme zu reagieren. Mit egal wie vielen Informationen und egal welcher Last innerhalb der Umgebung umgehen zu können. Bumpers erfüllt auch diese Kategorie, da das Game ohne Lags etc. bei crashes oder schnellen Eingaben mit der Maus umgehen kann.\n\nAvailability:\nBeschreibt wie oft ein System für den Nutzer erreichbar ist. Man kann herausfinden wie erreichbar eine Anwendung ist indem man die Anzahl der Zeit die das System erreichbar ist mit der Zeit vergleicht, bei der es nicht erreichbar ist. Bumpers ist ein offline game und daher dauerhaft erreichbar\n\nAdaptability:\nDie Fähigkeit eines Systems sich an unterschiedliche Umstände und unterschiedliche Konditionen anzupassen. Sowie sein Verhalt bei diesen Veränderten Konditionen entsprechend anzupassen.\n\nMaintainability:\nDie Fähigkeit eines Systems von den Entwicklern weiter entwickelt zu werden. Entwickler es also einfach haben die Application bei Bugs, neuen Anforderungen oder einer veränderten Umgebung ohne Probleme zu verändern und oder weiter Entwickeln können. Hier gelenzt Bumpers, da die Code umgebung sehr einfach zu verstehen ist und dementsprechend ohne viel knowhow nach belieben weiter entwickelt werden kann. \n\n\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1285765,
      "meta": {},
      "text": "Quality Requirements:\n- Usability:\n\t- Der Benutzer darf höchsten 3 Klicks brauchen, um das Spiel zu starten, nachdem er die Anwendung geöffnet hat\n- Reliabilty:\n\t- Das Spiel sollte gegen dekompilieren geschützt werden, bevor es veröffentlich wird (zum Beispiel durch unkenntlich machen des Codes (mehrdeutige Variablennamen oder Methodennamen, etc.), bevor man ihn verbreitet)\n- Performance:\n\t- Das Spiel sollte innerhalb von 10 Sekunden geladen sein (gemessen auf einer 4-Kern CPU der letzten 8 Jahre)\n\t- Die Richtung des Spielerautos darf von der wirklichen Mausposition maximal um 10 Pixel abweichen\n- Supportability:\n\t- Der Benutzer sollte die Anwendung auf allen großen Betriebssystemen benutzen können (vor allem Windows, MacOS und Linux)\n\t- Der Development Code sollte möglichst leicht verständlich, gut kommentiert sein und einfachen Regeln folgen, sodass jeder neue Programmierer sich schnell einlesen kann und sich dem Programmierstil anpassen kann.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1286788,
      "meta": {},
      "text": "Usability:\nYou should be able to play the game using the keyboard instead of just mouse.\nPerformance: \n-Accurate Hitboxes for the bumpers that match the shape of the car instead of just rectangles.\n-Game should be running at 60fps.\nReliability:\nThe game should not have any unexpected bugs.\nSupportability:\nThe game should be playable on both PC and mobile devices\nThe game should support the importing of different types of cars from outside.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1286874,
      "meta": {},
      "text": "\nUsability:  1. User should be able to start the car by one click on the car once entering the game main page, be able to speedup or slowdown the car by pressing two specific keys, be able to stop the car by one click on the car when the car is already running and be able to stop the game by clicking one specific button.\n\nUsability: 2. This game should be available on all common operating system(Windows11/Windows10/Windows7/Windows8/Windows XP)(Ubuntu/Debian/CentOs/MacOs).\n\nReliability :3. The system should pop up correct prompts when the user client end is under weak network condition or no network condition. The system should preserve the user's car state if user suddenly encounters weak network or no network situation and should be able to recover user's car state from the breaking point.\n\nReliability: 4. The game should be able to support at least 100 online players at the same time, which means the racing page could show at least 100 cars driven by 100 online players. The game support at most 5 cars colliding together where only the right most cars win.\n\nPerformance: 5. Frames per second of this game should be 75 FPS.\n\nSupportability:  6. The game should leave the contact information in one page, which allow users to give feedbacks. Developers should reply to these feedbacks within 24 hours.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280267,
      "meta": {},
      "text": "Usability:\n- The game should not have more than 3 buttons in the menu.\n- The player can do all actions in the game with only the mouse.\n- The different car types in the game posses different visualizations.\n\nReliability\n- The game can handle up to 100 cars without losing performance or crashing.\n\nPerformance:\n- The game is ready to play in less than 5 seconds.\n\nSupportability:\n- The game is platform independent.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280620,
      "meta": {},
      "text": "1. Usability: The game should visualize the speed, consumption and location of the car\n2. Reliability: The game system should be able to prevent virus attacks\n3. Performance: Up to thirty minutes of downtime per week\n4. Supportability: The game should work on MacOS, Linux and Windows\n5. Performance: Each mouse click of the player should respond within 0.1 seconds\n6. Usability: There should be an introductory game tutorial when entering the game for the first time",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281451,
      "meta": {},
      "text": "- NFR1 Satisfaction/ user experience (Usability):\nThe music at the beginning of the game and the sound effects shouldn't be so loud that the user instantly turns down the volume.\n\n- NFR2 Learnability (Usability):\nThe steering of the car should be intuitive. The car should drive in the direction of the click and not the other way around. Also, the Buttons at the top should be at least 1 cm high so that they can be read easily.\n\n- NFR3 Security (Reliability):\nThe Bumpers game shall not share any private information from the computer to the outside world. Furthermore, there may not be a memory leak and the game should be able to run also if the computer does not have much RAM. That is a robustness requirement.\n\n-NFR4 Availability (Performance): \nThe game should run independently of any operating system, that means it can run on f.e Windows, Linux, macOS etc.\n\n- NFR5 Response time & Accuracy (Performance): \nThe response time must be low enough that there is no visible delay between mouse movement and mouse clicks and the steering of the car. The game should run fast without stutters also when a collision happens.\n\n-NFR6 Maintainability (Supportability):\nDevelopers must be able to fix bugs fast and efficiently. The source code of the came should be written according to clean code standards. The code should especially stick to the naming conventions.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281526,
      "meta": {},
      "text": "The Bumpers game has the 6 following quality requirements that cover the four URPS categories:\nUSABILITY\n-Learnability: the player steers the car with its mouse -> the user interface is easy to learn\n-Satisfaction/user experience: music plays, visualises different parameters of the car (speed, consumption, location), sound effects\nRELIABILITY\n-the game should be platform independent, it works separately from the other computer processes\nPERFORMANCE\n-Amount of information handled: the game should support different collisions\n-Availability: the player should be able to start and stop the game whenever he wants\nSUPPORTABILITY\n-Adaptability: the determination of the collision winner should be changeable during gameplay\n",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1282077,
      "meta": {},
      "text": "Usability:\nDer Spieler kann nur die Geschwindigkeit und Richtung des Autos kontrollieren, also handelt sich um eine simple Steuerung mit nur 2 Mechaniken zum lernen.\n\nDas User Interface enthält nur wenige Informationen und ist somit überschaubar und leicht lernbar.\n\nReliability: \nDas Spiel hat eine wohldefiniertes Regelwerk dass wenig Platz für unvorhergesehene Interaktionen zulässt.\n\nPerformance:\nDas Spiel unterstütz nur einen Spieler mit einer Handvoll Bots, die auf trivialem Code basieren. Es sollte auf allen kompatiblen System problemlos flüssig laufen können.\n\nSupportability:\nDa es sich um simplen Java Code und einer einfachen Steuerung handelt, sollte das Spiel sogar auf verschiedenen Systemen ohne größere Anpassungen nutzbar sein.\n\nDer simple Code lässt jederzeit neue Erweiterungen und Innovationen zu.",
      "score": 25,
      "language": "GERMAN"
    },
    {
      "id": 1282272,
      "meta": {},
      "text": "Bedienbarkeitsanforderung: \nJeder, der Bumpers spielen möchte, soll nach einer kurzen Einführung dazu in der Lage sein.\n\nZuverlässigkeitsanforderung:\nBumpers soll idealerweise ohne Probleme laufen. Sollte es dennoch zu Problemen kommen, sollen diese effektiv gefunden und behoben werden.\nAußerdem soll der Spielstand beim Absturz gespeichert und beim Neustart geladen werden. \n\nAnpassungsfreundlichkeit:\nDas Spiel soll an neue Anforderungen, wie das Verändern von Autotypen oder das Ändern von Kollisionen, ohne große Probleme anpassbar sein. \n\nImplementierungsanforderung:\nBumpers soll, bzw. ist, in Java zu schreiben. \n\nInternationalisierung: \nBumpers soll in verschiednen Sprachen wie Deutsch und Englisch spielbar sein. \n\nPortabilität: \nBumpers soll mit verschiedenen Betriebssystemen kompatibel sein. ",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1283115,
      "meta": {},
      "text": "Usability: Player can change direction by clicking mouse once easily \nPlayer can choose car type what they like\nSafety: Car tires need at least 5mm profile, otherwise players are not allowed to drive\nPerformance: When the game is started, music is played in less than 1 second\nAvailability: The availability of the game system is at least 99.5%\nAdaptability: The car can be driven normally in different track positions\n ",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284157,
      "meta": {},
      "text": "USABILITY:\n1. The start and stop button must be labeled with \"start\" and \"stop\" so that the player can directly read their corresponding functionality.\n\n2 The game outcome is automatically displayed at the end of the game in a pop up window marked as \"Meldung\" either stating that the player won or lost. This way the outcome of the game is known to the player without him having to learn another step to the game (which could make learning the game more complicated).\n\nRELIABILITY:\n3. The possible inputs made by the player are very limited. He can start and stop the game, as well as steer the car and change its speed through for example mouse movements. This way wrong inputs are avoided as he only has a very small choice of action. If a key, which is not defined as an input in the game, is hit by the player, no chnages to the game are made and it continues running normally. Inputs such as a car being steered against a boarding wall are handled by the system by making the car rebound towards the middle of the game board.\n\nPERFORMANCE:\n4. The game should be able to open in less than 10 seconds and commands such as car movements, \"start\" and \"stop\" should be processed in a maximum of one second.\n\nSUPPORTABILITY:\n5. The game should be accessible to players on different end devices, such as a smartphone or laptop for example.\n\nCONSTRAINTS:\n6. The game system must be written in Java.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284645,
      "meta": {},
      "text": "Usability:\n- The user can switch between different collision types in the start menu for a superior user experience\n- The player can steer the direction of the car with only one mouse click for a better learnability\n\nReliability:\n- Every user must create a user account with two-factor authentication to store their game scores with a better security\n- The user must be 12 years or older to play the game. This should prevent young people for game addicition\n\nPerformance:\n- The game should have 99,8% of the time more ore equal 60 frames per secound\n\nSupportability:\n- The game can be played on Linux, Windows and macOS with no disadvantages. This leads to a better  Adaptability.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284892,
      "meta": {},
      "text": "1. User interacts only with mouse. (Usability)\n2. To start a game user must do maximal 3 steps (Usability)\n3. Program must be cross platform. (Supportability) \n4. Adding a new car type or/and new collision type must make maximal 10 min. (Supportability) \n5. Program must prevent user from accidentally closing or stopping application (Reliability)\n6.  70% of all collisions must be evaluated in 0,1 second (Performance)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285162,
      "meta": {},
      "text": "1. The players only need 3 clicks to start the game, i.e. one for choosing car type, one for choosing collision type, and one for starting the game. \n2. The car should change its direction within 0.00001 second after the mouse is clicked.\n3. The system should be able to sense the next mouse-click within 0.0001 second after a click. \n4. This bumpers game should be able to perform on devices with Windows, Mac Os, and Linux.\n5. The system should be able to operate when about 100,000 users play this game online simultaneously.\n6. The system can also be downloaded and installed in the uses' devices, and can operate offline.\n7. The system can still operate when the CPU usage value of the users' devices is 80%.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285725,
      "meta": {},
      "text": "1- Satisfaction/user experience (Usability)\nThe game is designed to be entertaining for the player to use and the number of times the player has won is displayed on the screen.\n\n2- Learnability (Usability)\nThe game's rules should be basic and described in brief sentences so it will be easy to learn.\n\n3- Memorability (Usability)\nThe game rules should be basic and simple to remember.\n\n4- Security (Reliability)\nUnder no circumstances could the game cause a virus or disclose the player's information.\n\n5- Availability (Performance)\nThe Player should have access to the game at all times and should be able to play it 24/7. \n\n6- Adaptability (Supportability)\nA developer can easily alter the gaming system to correct flaws or defects (bug fixes).\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286574,
      "meta": {},
      "text": "Usabilty - > Learnability -> Nelson's 2 heuristic: Match between System and the Real World: The buttons for \n                                            starting and stoping the game have to be named \"start \" and \"stop\".\n\nUsability -> Efficiency -> The Player should be able to start the game with only one click and to stop it with one \n                                         click as well. The controlls should only consist of mouse movement and clicks -  one \n                                         click changes the direction.\n\nReliability -> Robustness -> the program only responds to mouse clicks, so it would not develop a bug or \n                                              break when any other button ist pressed: \"wrong inputs\" are handled. Excessive \n                                              number of mouse clicks also would not damage the flow of the game as it treats \n                                              every single click separately.\n\nPerformance -> The program should be able to support up to 30 differnt cars on the field at the same time and \n                          evaluate up to 3 collisions at the same time .\n\nSupportability -> Compatability -> The program should run successfully on all desktop operation systems - \n                                                         Windows, macOS, Unix and support all the implemented features.\n\nSupportability -> Maintainability -> The program should be written in clean and understandable code - it \n                                                          should alse include comments about the  structure and the  functionality. \n                                                          The structure should be well separated according to the laws of \n                                                          inheritance, abstraction and encapsulation, so an introduction of a change, \n                                                          fixing a bug/problem or an addition of new components is managable \n                                                          in a appropiate time period and does not require too much work.\n\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286656,
      "meta": {},
      "text": "1) Player can start the game with one click. \n2) The game shall prevent unlimited speeds.\n3) 100% of the players controls shall be executed by the game.\n4) Player can change the speed of his/her car during the game. \n5) Players control the game via mouse clicks. \n6) A message shall appear after the game ends, informing the player whether he/she won or lost. ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286687,
      "meta": {},
      "text": "\n- The game should be playable on windows, Linux and macOS.\n\n\n- It should be 99% precise when it calculates if the car crashed\n\n\n- The game should be developed that new types of collisions and cars can be implemented within one hour.\n- The game should have as little as possible cohesion.\n\n\n- The game should be within two clicks back at the start menu.\n- The game should be able to be played within one click of a button.\n\n\n- When the game has started it should sustain playability even if the window of the app gets resized from the user.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1288082,
      "meta": {},
      "text": "-The first nonfunctional requirement is usability in the bumpers game. Usability explains the comfort and ease of actors using a system. In the bumpers game players only need the mouse to steer the direction of the car and change its speed and that is why it is efficient.\n\n-The bumpers game is reliable due to its robustness. Bumpers game could still maintain its function if the platform is changed. because as stated the game should be designed as platform-independent.\n\n-The performance of the game is high because much information like sound effects during a collision or the speed of a car is handled by the system. The system is also available because there are not many errors or downtime in the bumpers game, which affects its availability.\n\n- Finally, the bumpers game supportability is fine. The ability of the game to respond to different collision types and generate different outcomes from different collisions proves its adaptability. And the game is maintainable, which means a developer could build on it, fix bugs or modify the game. If a collision does not work properly for example, a developer has the chance in the bumpers game to fix it.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282004,
      "meta": {},
      "text": "1) Usability: Der Spieler soll mit höchstens 2 Klicks das Spiel starten können.\n\n2) Reliability: Das Spiel funktioniert angemessen, also ohne Bugs etc. in 999 von 1000 Fällen.\n\n3) Response Time (Performance): Das Spiel sollte innerhalb von zehn Millisekunden auf die Richtungswechsel-Clicks des Users reagieren und das Auto in die entsprechende Richtung lenken.\n\n4) Performance: Es sollen bis zu 30 vom Computer gesteuerte Autos gleichzeitig auf dem Gameboard unterstützt werden.\n\n5) Maintainability (Supportability): Es soll möglich sein eine neue Collision-Art innerhalb von einer halben Stunde hinzuzufügen.\n\n6) Usability: Das Gameboard sollte mindestens eine Höhe von 12cm und eine Breite von 10cm haben, damit der Spieler auch genug Platz zum Ausweichen und Rumfahren hat.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1283744,
      "meta": {},
      "text": "Usability:\nZwei Parameter können verändert werden, Car und Collision, sodass das Spiel innerhalb von höchstens drei Schritten gestartet werden kann. Das Spiel kann auch schon in der ersten Einstellung gestartet werden, wobei die Parameter des letzten Spiels übernommen werden.\nDer Start- oder der Stop-Button befindet sich in jeder Einstellung gut sichtbar in der linken oberen Ecke (je nachdem, ob gerade ein Spiel läuft).\n\nReliability:\nWegen der Einfachheit des Spiels sind falsche Eingaben nur schwer möglich. Bei der Auswahl von Car und Collision ist jede Zusammensetzung möglich, während eines Spiels ist sicherzustellen, dass Cars nicht aus dem Spielfeld herausfahren können.\nWährend einer Collision kann der Collision Type nicht mehr verändert werden, um Eindeutigkeit zu gewährleisten.\n\nPerfomance:\nDas Car kann mit der Maus gesteuert werden, wobei die Latenz unter 0,5 Sekunden liegt. Auf Performance wird kein großer Wert gelegt, wenn das Spiel noch nicht gestartet ist.\n\nSupportability:\nDas Spiel ist plattformunabhängig.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1284075,
      "meta": {},
      "text": "Usability : The player needs at most  two clicks to start the game . \nUsability : The most player needs only at most ten seconds to learn how to steer the car.\nReliability :  - Robustness :The game will not crash if the user give the wrong input (for example, messing with the keyboard ) .\nPerformance : The system can supports more than one hundred cars to exist at the same time .\nPerformance : The system allows more than one hundred types of collisions happend at the same time.\nSupportability :  - Maintainablity :  It would be easy for the developer to maintain the game , because the whole system is great organized and not complicated . \n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284574,
      "meta": {},
      "text": "NFR1 :\nJede simple Interaktion ist in unter 5 Schritten ausführbar. Die Anwendung soll intuitiv verständlich sein und auch ohne Erklärung nutzbar sein.\n\nNFR2:\nDie Anwendung sollte die 10 Usability Heuristics für das Design befolgen.\n\nNFR3gegne\nDie Anwendung sollte durchgehend erreichbar sein und fehlerfrei funktionieren. Das Verhalten ist vorhersagbar.\n\nNFR4:\nDie Anwendung hat eine über 90%ige Testabdeckung und ist leicht zu warten und zu erweitern.\n\nNR5:\nDie Anwendung läuft flüssig und ohne Lags.\n\nFR1:\nMan kann mit seinem Auto andere Autos crunchen. Wenn man alle anderen Autos erwischt hat man gewonnen. Wenn ein anderes Auto das eigene erwischt, hat man verloren.\n",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1284725,
      "meta": {},
      "text": "Usability:\n1. The Player can start the game within 3 touches.\n2. The player can use a mouse or a touch screen to play the game.\n\nRobustness:\n3. The player can add up to 50 cars onto a game board without the game crash.\n\nSecurity:\n4. The game data will save into a file and the player can't change it.\n\nPerformance:\n5. Two players can play on a game board, and the game's response to player commands should be less than 50ms.\n\nAdaptability:\n6. The game can be played on Android, Windows, and Linux.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285149,
      "meta": {},
      "text": "Usability:\n•\tDas Spiel soll mit der Maus gesteuert werden, d.h. das Spieler-Auto ändert seine Bewegungsrichtung auf die Position des letzten erfolgten Mausklick.\n\nReliability:\n•\tSecurity: Das Spiel sollte mit vor ungewollten Kopien geschützt werden. Dazu muss jedes verkaufte Spiel mit einem Produktschlüssel auf der Firmenwebsite vom Käufer freigeschaltet werden. Jeder Spielekopie liegt genau ein Produktschlüssel bei.\n•\tRobustness: Das Spiel soll das Mausklicken außerhalb des Programm Fensters ignorieren und nicht die Bewegungsrichtung des Spielerfahrzeuges ändern, um das Spiel vor falschen Eingaben zu schützen.\n\nPerformance:\n•\tDas Spiel sollte innerhalb von 100ms auf eine neue Spieleingabe, also auf den Mausklick zur Richtungsänderung des Spielerfahrzeugs, reagieren und die Bewegungsrichtung des Spielerfahrzeugs anpassen.\n•\tDas Spiel sollte auf dem Mittelklasse-Referenzsystem mit mindestens 30 Bildern pro Sekunde (FPS) laufen. Das Mittelklasse-Referenzsystem ist mit folgenden Komponenten ausgestattet: Intel Core i5-11600K CPU und Nvidia RTX 3060.\n\nSupportability:\n•\tDie Updates für das Spiel sollen über das Internet ausgeliefert werden. Dazu überprüft das Spiel vor jedem Start, ob die neueste Version installiert ist und lädt eine aktuelle Version automatisch herunter. Somit wird gewährleistet, dass Bug-Fixes und neue Inhalte schnell und problemlos bei den Spielern ankommen.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1285721,
      "meta": {},
      "text": "Usability: The learnability of the game is very simple since the player can only perform 3 actions in the whole game by only using the mouse. One can steer the car by moving the mouse, one can stop and start the game by clicking the given buttons.\n\nReliability: The game should not crash or give errors while playing.\n\nPerformance: The game should play music directly when starting the game or when two cars crash. The game should also react to the steering with the mouse at the same moment. Which means that the response time should be very fast. Another point is the accuracy: The players and cars should only crash when they hit each other. There should not be a gap when this happens.\n\nSupportability: The game is supposed to be platform independent. The portability should also be good, which means that the game should not require to much space on the computer.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286027,
      "meta": {},
      "text": "1. Usability: The game should be intuitive to use and the graphical user interface should be easy to understand. The player need at most 3 clicks to start the game.\n\n2. Reliability: Robustness: the game should be able to deal with at least 80 cars in one game, still running with at least 30FPS.\n\n3. Performance: the car direction needs to be set according to the mouseclick within at most 0.05 seconds.\n\n4. Supportability: Maintainability: defects (bugfixes) can be corrected within 1 hour and there should be an update of the game at least every second month to deal with new requirements.\n\n5. Supportability: Adaptability: the game should adapt its view to the darkmode of the operation system automatically.\n\n6. Usability: The game should support high contrast mode for people with visual impairment.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286252,
      "meta": {},
      "text": "Usability: \n\t1. Memorability: All elements of the user interface should be at the same positions on all plattforms,\n\t    so the user can easily change platforms.\n\t2. User Experience: The text on the start and stop button should be at least half a centimeter high.\n\nReliability:\n\t3. Robustness: When the user enter a wrong input, like a key on the keyboard, \n\t    that has no function in game, the system should not react to it.\n\nPerfomance: \n\t4. The delay of user mouse input and the car going into a different direction should take at most half a second.\n\t5. There should 20 cars be visualized simulateously without having the framework drop below 30 FPS.\n\nSupportability:\n\t6. Maintainability: The game should automatically check online for new updates once when it is started.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286255,
      "meta": {},
      "text": "Usability: Das Spiel ist einfach zu verstehen, da es nur einen Start- und einen Stopknopf gibt. Danach steuert der Spieler das Auto mit Mausklicks auf dem Spielfeld (Learnability). Das System ist auch schnell in der Benutzung.  Wenn man beispielsweise gewinnt oder verliert, dann öffnet sich lediglich ein Fenster mit eben dieser Information und wenn man dieses geschlossen hat, kann man durch einen erneuten klick auf \"Start\" direkt eine neue Runde starten (Efficiency).\n\nReliability: Das Spiel ist auf Fehleingaben abgesichert und läuft ohne Probleme weiter (Robustness).  Ebenso sind zufällige Vorfälle ausgeschlossen, da das Spiel immer eine klare Linie bzgl.  Gewinner-Verlierer hat und es so keine ausnahmen gibt (Safety).\n\nPerformance: Da es sich hier um sehr einfach Software handelt, ist die Geschwindigkeit sehr hoch.  Man klickt an die Stelle, in welche sich das eigene Fahrzeug bewegen soll und binnen weniger Millisekunden geschieht das auch (Response time). Außerdem ist das Spiel zu jeder Zeit verfügbar, da es keine Internetverbindung oder mehrere Nutzer vorsieht, die das System ausbremsen könnten (Availability).\n\nSupportability: Ein Programmierer kann unter Umständen einfach Dateien austauschen und so das grafische Design des Spiels schnell verändern (Adaptability). Die Code-Struktur ist sehr übersichtlich gestaltet, weshalb man im Falle einer Veränderung in der Laufzeitumgebung die dadurch entstehenden Fehler sehr leicht beheben kann (Maintainability).",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1286820,
      "meta": {},
      "text": "Usability: \n\tUsers interact with a Mouse\n\tThey need one screen to play the game\nRobustness:\n\tIf more than one mouse is connected the game still only recognizes one of them\nPerformance:\n\tThe system should handle up to 300 cars at once\nAdaptability:\n\tDifferent crash types should be added easily, without rewriting the whole game\nAccuracy:\n\tA crash is calculated with the accuracy of 98%\nMaintainability:\n\tBugs is the crash detection should be fixed within a few days",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287068,
      "meta": {},
      "text": "Usability:\nDas Programm sollte mit höchstens vier Klicks das Spiel starten und mit höchstens zwei Klicks das Spiel neustarten.\n\nReliability:\nDas Spiel sollte nicht abstürzen, wenn der Spieler unerwartete Eingaben betätigt, wie z. B. mehrmals auf \"Start\" zu drücken.\n\nPerformance:\nDas Spiel sollte innerhalb von 10 Sekunden starten, da es kein kompliziertes Spiel ist. \n\nEs soll innerhalb von 100 Millisekunden auf Mauseingaben zum Steuern des Fahrzeugs reagieren.\n\nEin Neustart sollte nicht länger als 5 Sekunden dauern.\n\nSupportability:\nDas Spiel soll auf Windows laufen",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1282286,
      "meta": {},
      "text": "1. Usability: The player can start and stop the game with one click.\n2. Usability: The player can steer the direction of the car with the mouse and change its speed.\n3. Accuracy: When the game is started, music should be played automatically.\n4. Accuracy: It should be accurate who wins collision (\"right-before-left\" rule or \"left-before-right\" rule or something else)\n5. Adaptability: The determination of the collision winner should adapt to new collision type and hence should be changeable during gameplay.\n6. Safety: The size of a car should not be bigger than the size of the gameboard.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283083,
      "meta": {},
      "text": "NFR1: Frame rate / Animation performance\nThe game should run at no less than 30 FPS.\n\nNFR2: UI/UX efficiency\nAll windows and menu items should be accessible with at most 2 clicks from the start menu.\n\nNFR3: Adaptability to screen size\nThe core game functionality remains intact with any and all screen resolutions.\n\nNFR4: Audio performance\nAudio cues should be responsive; for each event with an audio cue (example: collision), a sound >= 50dB must be heard within 300ms of the event occurrence.\n\nNFR5: UX error handling\nInvalid inputs such as keyboard presses during gameplay trigger an audio cue informing the user that the action has failed.\n\nNFR6: Data privacy / security\nUser data should be hidden in the game files, encrypted, and not stored in plaintext.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283799,
      "meta": {},
      "text": " Usability\n\n- The player can steer the car with one mouseclick in the direction he wants the car to go\n- All cars should have the same size\n\n Reliability\n\n- the game should not take longer than 10 minutes\n- the user should only be able to steer his car\n\nPerformance\n\n- The time loss between the mouseclick and the response time should be lower that 2ms\n\nSupportability\n\n- the game should be platform independent",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284089,
      "meta": {},
      "text": "NFRs: \nUsability:\n1. The player can start and stop the game. \n2. There is one car controlled by the player. \n3. The player can steer the direction of the car with the mouse and change its speed. \nReliability:\n4. The game should support different collisions. \nPerformance: \n5. When the game is started, music is played.\nSupportability:\n6. The determination of the collision winner should be changeable during gameplay. ",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1285171,
      "meta": {},
      "text": "Usability:\n\n1) All settings and configurations can be reached within one single press from the home screen and the player can apply changes at any given time \n\n2) The player can easily change the directions of his car at will without any restrictions or problems within the gameboard with a touch from his mousepad or touchscreen.\n\nPerformance:\n\n3) The game is ready within 3 seconds of opening it and the player can press start and stop game whenever they want without lag time.\n\n4) The player receives a note immediately stating if he wins or loses the game. After the note, the player can start a new game within one click\n\nReliability:\n\n5) The game can sustain up to 30 different entities on the gameboard without lagging. If the player chooses a bigger amount, the player will be notified about the maximum amount \n\nSupportability:\n\n6) The game should be platform independent and should support different car types and collisions that are changeable during gameplay",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285745,
      "meta": {},
      "text": "NFR1 Usability: The game should be able to started and stopped in one click.\n\nNFR2 Performance: The game should run at at least 30 frames per second, and the collision checks should not slow this down.\n\nNFR3 Adaptability: The game should work for both mouse users and touchscreen users.\n\nNFR4 Extensiblity: The game has to be made in a way that is extendable using parent and child classes.\n\nNFR5 User experience: The sound effects should be satisfactory for the player to make them enjoy playing.\n\nNFR6 Reliability: The game should not freeze if the player clicks too often\n\nOut of the six quality requirements, the first one is in the category \"usability\". I have given a measureable requirement of being able to start and stop a game in a single click. The second one is a performance requirement, which details the minimum required performance in a measurable way. Third is adaptability, which is a part of supportability, this one specifies the input devices the game should support. The fourth is extensibility, which is under supportability, specifying that the game should be easy to extend. Fifth one is, again, a part of usability, namely user satisfaction and enjoyment. The last one is reliability, when a player is trying really hard to win they could press the mouse very often which could lag the game if the implementation is bad.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286129,
      "meta": {},
      "text": "Quality requirements:\n\nUsability:\n- the player should be able to steer the car by simply clicking in the direction he wants the car to go\n\nReliability:\n- user inputs other than the clicks of a mouse should be ignored by the game\n\nPerformance:\n-the car should change direction without delay after new user input\n-the user interface should display the movements of the cars at all times so that there are no lags\n-the direction of the car should change exactly to the point of the mouseclick so that the player can control the \n car as accurately as possible\n\nSupportability:\n-the game should be supported on all type of platforms",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287043,
      "meta": {},
      "text": "Usability: the app should show the rules of the game before starting the game (the rules should not have abstruse words, limit - 100 words) and the game should be started in four klicks by the player. The player should have the opportunity to stop and then to resume the game at any moment.\n\nUser experience: the user should have an opportunity to give a feedback about the app through the form, that the app should have in a separate section.\n\nRobustness: the user should receive a notification from installer, if the user does not have enough space on the memory card / disk and the game cannot be installed. \n\nConformance to guidelines: the design of the app should adjust and conform to the operation system and platform using by the player.\n\nPerformance: the game should register every user's click in less than a 0,5 second. The full game should take up no more than one gigabyte of the memory of system.\n\nExtensibility:  The app must be designed in a way that allows adding and removing new types of cars and new\ntypes of the collisions, also new images for them and new background should be also able to be changed.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287271,
      "meta": {},
      "text": "Usability: \n\t1-Players should be able to start the game in less than 3 clicks.\n\t2-The instructions on how to play the game should be given to the user each time. (Recognition rather than recall)\n\t3-There might be experienced players, therefore, there should be the option of closing the instructions infinitely. (Flexibility and efficiency of use)\n\nReliability: \n\t4- The game should be free of cheats such as manipulation of the speed, or gameoutcome. (security)\n\nPerformance:\n\t5- The fps of the game should be greater than 30. \n\nSupportability: \n\t6- Game shall be opened from different operating systems such as MacOs, Linux, Windows or Android. (portability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280419,
      "meta": {},
      "text": "Usability:\n1. the average user can find out how to play the game in about 20 seconds, given he has the appropriate input devices \n2. the user can visually see when cars collide\n3. there should be only two buttons - start and stop\n4. there should only be one way to change the direction of the car\n5. if the game crashes, it should not freeze the whole screen\n6. the parameters of the car are visible and understandable for an average ten year old\n\nReliability:\n1. game maintains its function when the user hits keys that have no use for the game\n2. game can be played ten hours in a row without crashing\n3. game doesn't crash even when there are 100 cars on the screen\n4. game doesn't crash even when there are 10 mouse clicks to different locations on the screen in one second\n5. rules of the game that are not intended to be modified by the user should not be modifiable on purpose or by accident\n6. game doesn't crash when there is a loud sound from the outside\n\nPerformance:\n1. one user at a time is supported\n2. up to 10 left mouse clicks for direction changes can be processed per second\n3. the movements of up to 100 cars on the screen are lag-free (>30fps)\n4. car collisions are visibly processed instantly (<0.1s)\n5. when the start button is pressed, the game starts instantly (<0.1s)\n6. when the stop button is pressed, the game stops instantly (<0.1s)\n\nSupportability:\n1. new pictures for cars can be added in 2 minutes by a programmer\n2. the sound of a crash can be changed in 2 minutes by a programmer\n3. the game runs Windows 10 downto Windows 7\n4. the game runs on MacOS\n5. the game runs on Android Phones and iOS\n6. the collision type of a car can be changed in one hour by a programmer\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282300,
      "meta": {},
      "text": "Nonfunctional Requirements\n\nUsability\n1. Players need at most 1 click to start the game.\n2. The backgroung must be a light color so that the cars are easily identifiable.\nReliability\n3. The system supports up to 20 mouse clicks per second.\nPerformance\n4. 90% of the steering direction changes are processes in less than 1 secod.\n5. 95% of changes in speed muct be effective within 1 second.\nSupportability\n6.The sytem supports multiple sound effects \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283075,
      "meta": {},
      "text": "Non-functional requirements: Bumpers\n\nUsability\n\tSteering of the car in the game is very easy to learn and understand – the player can move the car simply by placing and clicking his mouse in the required direction.\n\tThe game has a simple rule: if you wish to win the game, you have to win all collisions with all other cars.\n\tCollisions are unmistakably marked by a collision sound effect.\nReliability\n\tThe user shouldn’t have an issue with starting and stopping the game, since there is always a visible start and stop button at his disposal.\nPerformance\n\tSince the game is made for only one user and the other cars in the game are automated, there will be no lagging in the game and user doesn’t have to worry about his internet connection.\nSupportability\n\tThe game can be used without any issues on whichever platform the user chooses to have, it is platform independent.\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283681,
      "meta": {},
      "text": "Usability: \n- players need at most 4 clicks to start the game (choose car, choose collision, start game)\n- players need at most 10 minutes to start the game while using it for the first time (explanation/tipps/introduction should be provided when startet at first)\n\nReliability\n- players should not be able to change number of cars which they are controlling\n- players should not be able to enter a wrong input -> no input required, only choices to be made which are all working (example: not be able to choose collision which is not working with the chosen car, no reaction to input given from the keyboard)\n\nPerformance\n-the system is supposed to work while three players are playing the game without any downtime\n\nSupportability\n- in case of a downtime, the game should be running within 5 minutes ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283761,
      "meta": {},
      "text": "- The player can play the game by using only the mouse. (Usability)\n- The player can stop at anytime the game (even if unwanted action in the game happens)  (Reliability)\n- The game should be able to evaluate many collisions simultaneously. (Performance)\n- Background music and crash music can be at anytime changed. (Supportability: Maintainability)\n- the speed change should be immediately conspicuous to the naked eye. (Performance)\n- The player can change the speed of his car. (Maintainability)",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283852,
      "meta": {},
      "text": "Usability:\n1) Players need at maximum 3 clicks from opening the program to start the game;\n2) Restarting the game should only require 1 click;\n\nReliability:\n3) The game should be able to be played more than 100 times in a row without crashing / overheating;\n\nPerformance:\n4) The game should be 100% of the time available (no downtimes), except for downloads of updated versions;\n\nSupportability:\n5) The game should be able to be run on any operating system (Windows, Mac OS, etc);\n6) Errors in the game should be able to be fixed and sent back to the customer within 30 minutes;\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284192,
      "meta": {},
      "text": "1) Usability\n1.1 Learnability: the user should need a maximum of 2 tries to understand the steering of the car and handling of the other objects\n1.2 Satisfaction/ User experience: the layout is designed with only one menu bar including at most 3 buttons, so that no irrelevant information might distract the user from the relevant/necessary information\n\n2) Reliability\n2.1 Robustness: the system can handle 10 runs in a row without any complication\n\n3) Performance\n3.1 Response time: the game shouldn't need more than 5 seconds to start the game once the user has clicked the start-button\n3.2 Number of users: the game should be able to handle 10 users playing the game simultaneously\n\n4) Supportability\n4.1 Maintainability: a new car-type can be implemented in less than 30 minutes (including design and functionality)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284624,
      "meta": {},
      "text": "Nonfunctional requirements for Bumpers:\n\n- (Performance) The game must respond quickly to user input (≤5ms)\n- (Performance) Cars must go in the exact direction given by the user\n- (Usability) A user should be able to learn all the commands to control the car in less than 1 minute\n- (Reliability) Pressing wrong keys should be ignored by the system\n- (Supportability) a developer can understand the codebase in less than 30 minutes\n- (Robustness) the game should run at constant 60 fps",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284707,
      "meta": {},
      "text": "//hello, parts are from my solution last year :)\n\n\n\n\n\nRealiability: Safety and Security:\n- The game requires no personal data (or any type of data) of the players and so can not give the information to unauthorized users. \n\nUsability: \n-It needs at most 3 clicks by the user to be able to start the game, therefore it is very easy. Players use the mouse to steer the car. ( and also optionally the keyboard)\n\nPerformance:\n- The game is not a single player game (it is a multiple player game), in other words each game must support at least two player simultaneasouly. (2- in order to be possible a collision between them)\n\n -Performance: Availability: The availability of the system is at least 99.8 % per week. That means that the downtime is at most 20 minutes per week.\n\nSupportability: Maintainability(+Adaptability) :The game is very adaptive, because it can be played on different platforms and systems, on different devices also - smartphone, laptop, computer, ipad, tablet. It can be played online in browser or in other case it can be downloaded. It should be launched on Windows and MacOS.\n\nReliability: Robustness - the ability of a system to maintain a function when there are changes - for example when there are different new types of cars and new types of collision or when the player for example make a wrong input - click the wrong button with the mouse.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285104,
      "meta": {},
      "text": "1) User interacts with a Computer or Laptop with mouse connected.\n2) User should read and know all the  various collisions methods, and should read about how to steer the car perfectly with the mouse .\n3) To win the game user's car should win all the collisions.\n4)Game does not engage with any external source and is free from any possible file corruption(i.e virus free).\n5)Game supports only one user ,there is no multi user option.\n6)Game supports different collisions methods and user can change them as per requirement during Gameplay.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285920,
      "meta": {},
      "text": "usability:\n- player steers with mouse\n- player can increase/decrease the speed with the mouse\n- player can start and stop the game\nsupportability:\n- game should be platform independent\nperformance:\n-visualization should be smooth\nreliability:\n-game should not crash",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287241,
      "meta": {},
      "text": "Usability:\n\t- Es sollen folgende Informationen über das Auto, dem Nutzer angezeigt werden: Geschwindigkeit, Verbrauch und Position\n\nReliability:\n\t- Es soll vermieden werden, dass das Programm ohne Fehlermeldung abstürzt \n\nPerformance:\n\t- Für ein angenehmes Spielerlebnis soll das Spiel mit einer durchschnittlichen Framerate von 30 FPS     laufen\n\t- Das Starten des Programms soll nicht länger als 5 Sekunden dauern\n\nSupportability:\n\t- Das Spiel soll auf den Betriebssystemen Windows, Linux und MacOS funktionieren\n\t- Der Projekt-Code sollte so strukturiert sein, dass einfach neue Collision-Typen hinzugefügt werden können\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1287695,
      "meta": {},
      "text": "1. Usability: The  Game should be usable, as the interface is pretty easy to learn, as there aren't many clicks that need to be learned.  There are 2 buttons for the user to start and stop the game, and then clicking the board where the user wants the car to go. It's fast to use and also quite memorizable. The system can be stopped if some error happens, and started again. The user experience is subjective, but the interface is rather simple to use. \n2.  Response Time: The Interface doesn't have a long waiting time, when a user bumps into another car, the results are updated immediately and the winner is declared, it doesn't handle much information at once per se, but it does constantly check for crashes between the cars.\n3. Portability: The game is platform independent, meaning it was designed to run on multiple types of hardware and multiple operating systems.\n4. Maintainability: Time required to find a solution or increase performance, shouldn't be too long, as it is a simple game that doesn't have much code to work with.  \n5. Robustness: the game is robust, as it is quite adaptable to the environment and the platform as well as the fact that there aren't many input options for the user, and the few input options that do exist are binary. \n6. Accuracy: The system is accurate about the parameters it displays, such as the car's speed, consumption and location of the cars when they crash. It also needs to accurately determine if and when the cars collide.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287846,
      "meta": {},
      "text": "Performance: Simultanoeus actions supported i.e. game is started, music is played. So there is no time difference between the start of the game and the start of the music.\n\nUsability: The player can steer the direction of the car with the mouse without using specific keys on the keyboard.\n\nSafety(Reliability): The keyboard is locked when playing the game. Only the mouse can be used.\n\nMaintanability( Supportability): The game can add more players to the game if necessary.\n\nAvailability(Performance): 98% of the mouse Clicks should be processed in less than 1 second\n\nAdaptability( Supportability): the determination of the collision winner should be changeable during gameplay.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281124,
      "meta": {},
      "text": "Portability: Bumpers Game can be used by android or IOS.\nUsability: Bumpers need to be understood easily(without reading the manual of usage).\nReliability: Bumpers should not crash more than 0.1% out of 100% of executions. \nPerformance:  The car direction should be changeable within 1 second after steering.\nMaintainability:  Bumpers must be modifiable.\nAdaptability: Bumpers game must support metric and imperial systems.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282160,
      "meta": {},
      "text": "usability --> the user is able to start the game with one click of a button\nusability --> the user is able to pause the game\nrobustiness --> the game doesn't let the user increase the speed of his car above the maximum even if he tries to\nperformance --> the game runs smooth in every system (not heavy)\nadaptiability --> the game runs the same for every type of collision the user chooses\nmaintainability --> attributes (max speed, photo , etc) can be changed easily in the source code",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282912,
      "meta": {},
      "text": "The usability of the game is pretty easy and supports the Learnability: It is easy to understand as there aren’t a lot of rules. But because of the less variety, the user stays not satisfied for too long and gets bored after some time. Thus, the code isn’t too long and complex, so the maintainability of the category supportability is good . \nDefects are “easy” to correct and the game can deal with new requirements and a different environment. Thus, the user is for example able to change his car type or the speed etc. and the developer can easily add a new functionality. \nAn example for reliability is that there are various redundancies.\nIn the category Performance, the availability obviously is constant: Since there is no time limit, the user can play whenever he wants to. The response time of the game is okay: It takes about a few seconds to get it started. \n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283867,
      "meta": {},
      "text": "Usability:\nLooking at the Usability of the game it is to say that players only need to click one button to start the game. Also playing the game the user only needs to click into the field to steer the direction of the car. \nAnd players only need to click one or no button to end the game.\n\nReliability:\nConsidering the reliability of the game there are only two ways for the player to stop the game: either loose or click the stop button.\n\nPerformance:\nThe game has 100% chance of working properly (without any bugs) which displays the performance of the game.\n\nSupportability:\nThe game shows good supportability as it  is independent of the platform used.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284603,
      "meta": {},
      "text": "Usability: \n(Satisfaction) The player should be satisfied with the design, namely car pictures, background. He should enjoy controlling his car.\n(Learnability) The game is intuitive and suitable for all beginners. Bumpers should be a fast learning game.\nReliability:\n(Robustness) Unexpected errors shouldn't emerge frequently. Everything has to work fast and predictable(as expected).\nPerformance:\n(Availability) It has to be able for the user to play the game. It should be available any time he wants to play.\n(Response time) The program should be loaded fast. On average it should take not longer than 30 seconds to open it.\nSupportability:\n(Adaptability) The user can choose the car. He can also change the car later. ",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286412,
      "meta": {},
      "text": "\nUsability: \n1)Player controls only one car. \n2)Users only need a mouse or Trackpad to play the game. (Learnability)\nReliability:\n3)Prevention from intended viruses and attacks. (Security)\nPerformance:\n4) the game will launch at most after 50ms. (Response time)\n5) the game will always define deserving winner (Accuracy)\nSupportability:\n6)The game is platform independent. (Portability)\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287618,
      "meta": {},
      "text": "Supportability :The game should be platform independent.\nUsability: The player change the car speed with one click  \nPerformance :   response time  when player steer car direction shouldn't exceed 0.5 seconds\nAvailability :game should be available 95% of the time\nReliability : game shouldn't leak player personal informations\nPerformace : game supports low bandwith connection\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280336,
      "meta": {},
      "text": "Usability: \n1. Users interact with the mouse.\n2. It should be clear for the user what car he is controlling.\n3. The size of the car should be at least 0.5cmx1cm.\n\nReliability:\n4. The game should be platform-independent.\n\nPerformance: \n5. The game can be played all the time.\n\nSupportability:\n6. The game can be easily modified by the developer. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1280347,
      "meta": {},
      "text": "Usabilty:\n1. The different parameters of the car like speed, consumption and location of the car should be visualized (this gives the user realtime feedback for his performed action)\n\n2. The cars should be at least 100 pixel big and the player car should have a diffent color than the rest of the cars\n(makes it easier to see and understand which car is yours and where you are on the gameboard)\n\nReliability:\n3. The game should have a maximal failure/crash rate of 1 failure/crash per 1000 plays. That means only 0.1% of all plays should encounter a crash of the system.\n\nPerformance:\n4. When the player presses start game the processing of the cars and the gameboard should be finished within one second, so the game is ready to play, cars are moving after one second.  \n\n5. A collision should be detected, evaluated and the corresponding effects, like playing a crash sound or crunching the losers car, performed in less then one second.\n\nSupportability:\n6. The pictures of the cars shall be changeable within two minutes by a developer.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283429,
      "meta": {},
      "text": "NFR1: The user drives one car which can crash with others 6 cars on a game board\nNFR2: The game board has 2 bottoms which the user can press to start or stop the game\nNFR3: There is only 1 winner car in the collision and must follow the \"right before left\" rule to win the collision\nNFR4: The game should visualize the car's speed, consumption, and location.\nNFR5: The game should support different collisions\nNFR6: The collision's winner should be changeable during gameplay",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1284649,
      "meta": {},
      "text": "1. Es sollte nicht mehr als 5 \"Klicks\" benötigen um das Spiel zu starten.\n2. Auch wenn keine Auswahl für Auto und Kollision getroffen wurde, soll das Spiel nicht abstürzen beim Start\n3. Das Auto sollte innerhalb von 5 ms auf eine Richtungsänderung reagieren\n4. Das Spiele sollte 99,5% der Zeit verfügbar sein\n5. Das Spiel muss so programmiert werden, dass es einfach ist neue Kollisonsarten und Autos hinzuzufügen\n6. Die UI soll sich problemlos an unterschiedliche große Monitore und deren Auflösung anpassen",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1285733,
      "meta": {},
      "text": "Usibility:\n\t• Das Spiel sollte mit maximal fünf Tastatur Tasten und der Maus spielbar sein (einfache Learnability)\nReliability:\n\t• Das Spiel soll mehrmals hintereinander ausführbar sein ohne das Spiel dadurch zu verändern oder Fehler zu erzeugen.\nPerformance:\n\t• Das Spiel darf maximal 250MB Ram verbrauchen\n\t• Die Bildrate des Programms soll minderstens 45 Bilder pro Sekunde betragen.\nSupportability:\n\t• Der Quellcode muss einen Kommentar zu jeder Funktion enthalten, der die Parameter, den Rückgabewert und die Aufgabe der Funktion beschreibt.\n\t• Zu dem Spiel gibt es eine Dokumentation die alle Features beschreibt",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1285844,
      "meta": {},
      "text": "1. The game should run fluidly (i. e. with more than 50fps on an average machine). (Performance)\n2. The game should be platform independent. (Supportability/Portability)\n3. The game should be able to handle several cars at once, even when using different collisions. (Performance)\n4. The player should be able to play the game by using only controls native to the platform (no special hardware should be necessary). (Usability)\n5. The system should be able to handle a change of the used collision while the game is running. (Reliability/Robustness)\n6. When the game is started or cars crash, there should not be a delay of more than 100ms between the event and the start of the sound effects/music. (Performance/Response time)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287717,
      "meta": {},
      "text": "Usability : \nNFR1 - The game interface should be clear to the player from the first run.\nNFR2 - To start the game, the player needs to make no more than 1 click.\nReliability :\nNFR3 - In 90% of cases of gameplay, there should be no critical failures\nNFR4 - In case of multiple collisions within a short time, the game should not cause errors that overload the system.\nPerfomance :\nNFR5 - Loading the game should not last more than a minute\nSupportability : \nNFR6 - The game should be platform independent",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280670,
      "meta": {},
      "text": "1. The player can control the speed by clicking the mouse at most once.\n2. The player can control the direction by simply moving the mouse.\n3. The game runs independently of the platform, thus greatly reducing the interference of other factors.\n4. Sound effect in 0.1 seconds when collision occurs.\n5. The game can support different collision types and respond whenever any collision is emitted.\n6. Users can easily view the parameters of the vehicle at any time.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281545,
      "meta": {},
      "text": "Usability - \n   You need at most 2 clicks to start the game.\n   (if you need to choose the collision type)\nUsability -\n   The player can pause the game by clicking only one button while mid game/playing.\n\nReliability:\nRobustness -\n   the game can convert up to 10 mouse klicks per second and change the direction of the players car \n   according to them\nSecurity -\n   the player can save a high score under his/her name\n\nPerformance:\n   the loser car should disappear in under 0.5 seconds after the collision\n\n   the system only supports one player \n\nSupportability:\nMaintainability -\n   a multiplayer game mode could be added to the game within a day\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281779,
      "meta": {},
      "text": "1. Quality Requirement - Usability\nAdter opening the game Players need at most 3 clicks to start a new level.\n\n2. Quality Requirement - Reliability \nErrors should occur in maximum than 1 of 10000 game initializations.\n\n3. Quality Requirement - Performance\nThe response time after user input must be less than 1 second.\n\n4.. Quality Requirement Supportability\nThe Bumber game should accept upgrades over the air that a user van download.\n\n5.. Quality Requirement - Usability\nThe game bumpers game can be played with just a mouse for the user input.\n\n6.. Quality Requirement - Performance\nThe Bumpers Game should support a minimum of three different difficulty levels.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282537,
      "meta": {},
      "text": "NFR1 Supportability(Robustness) :  When user presses a button on a keyboard, which is not defined in a game, game should not stop working. \n\nNFR2 Reliability(Adaptability) :  New types of cars/collisions should be easily added to the game and should not affect the game's behavior. \n\nNFR3 Usability(Learnability) : The user needs to play at most 3 games to understand how everything works.\n\nNFR4 Performance(Response time) : After the game outcome is evaluated, it should be shown on the display within 1 second.\n\nNFR5 Usability(Memorability): There should be not more than 7 different action that user can do.\n\nNFR6  Performance(Availability):  The availability of the system should be at least 94.6%",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283934,
      "meta": {},
      "text": "NFR1: There should be a pop up when the game start warning the user to move the mouse (a pop up with an explanation would be unremarkable and easy to forget, better to learn on the fly)\nNFR2: The game should support up to 20 cars without having appreciable delay (more than 1s) on the controls for the user (relates to Performance)\nNFR3: The game should allow developers to simply extend existing car entity to create new car types (relates to Maintainability)\nNFR4: The game shouldn't run for more than 5 minutes, otherwise it is clear the movement of the cars is not conducive to a finishing state (Robustness)\nNFR5: The game should only crash/close unexpectedly in 2% of the cases (availability)\nNFR6: The game should work without artifacts for any desktop size within 360p and 1080p (adaptability)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284448,
      "meta": {},
      "text": "[usability]\nNFR 1: The player should be able to identify the option to start and stop a game within one minute of opening the game window.\nNFR 2: The player should be able to start a round of the game with one single interaction once the game window is open.\n[reliability]\nNFR 3: In order to avoid unwanted interactions and as a safety measure, the game should enter pause mode when the window becomes inactive while a round is ongoing.\n[performance]\nNFR 4: The game board should be able to handle up to 100 cars without freezing.\nNFR 5: The player car should have a response time of less than 10 ms.\n[supportability]\nNFR 6: All functions that are part of the interface of their subsystem should have documentation explaining their function and parameters.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285243,
      "meta": {},
      "text": "Usability: The player should be able to start the game by pressing one button.\n\nUsability: The player should be able to change the direction if the car by one mouse click.\n\nReliablity/Robustness: The game should tolerate the user pressing the key board, (no crash should happen, the game should not close itself). \n\nPerfomance/Accuracy: The system calculates the correct winner in at least 99,9% of all cases. \n\nPerformance/response time: It shouldn´t take more than 0,01 seconds for the player car to change directions when a change of direction is indicated by a mouse click.\n\nSupportability/Adaptability: The system should be able to detect a collision correctly even if the speed of the player car changes.  \n\t(This is regarding to adaptability as changed speeds result in a changes environment for eveluating the collision)\n\n\n\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285877,
      "meta": {},
      "text": "NFR1: The game should be intuitive to start. It should require only one click to start the game. (Usability)\nNFR2: The Game should run robustly with a maximum of 1 crash for 100 games played. (Performance - Availability)\nNFR3: Under no circumstances, the high score database should be able to be hacked. (Reliability)\nNFR4: The maximal response time of the game from user input to game reaction should be 300ms. (Performance)\nNFR5: The system should be able to be adapted through by adding new collision-classes which should have no effect on the rest of the game. (Supportability)\nNFR6: The game should be designed with high contrast so that visual-impaired people have no problems playing it. (Usability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285995,
      "meta": {},
      "text": "1. The player only needs the mouse to control the game. (Usability)\n2. The system restarts the game and returns an error message to the user, if an error occurs. (Usability)\n4. The cars are spawned away from the players car with a distance of 50 px, when the game starts. (Reliability)\n4. The system can handle a minimum of 30 cars. (Performance)\n5. The refreshing time of the game image for the relocation of the car should be less than 10 times per second (Performance)\n6. The game can be played on every operating system. (Supportability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287521,
      "meta": {},
      "text": "1. non-functional requirement:\nThe game should be start- and stoppable in one click.\n2. non-functional requirement:\nThe user should always be able to see the current game state. It should be obviouse if the player has won or lost the collision and if the game is running or won/lost.\n3. non-functional requirement:\nThe user should not be able to crash the game or cause unintended behavior by pressing buttons or keyboard/mouse input. Eg pressing the start button twice.\n4. non-functional requirement:\nThe game should be responsive. The time for one game tick can be 33ms at most, so the user sees a smooth image. (30 Frames per Second)\n5. non-functional requirement:\nThe player should be able to easily destinguish fast and slow cars and know where his own car is.  Speed and direction of the car should be easily recognisable.\n6. non-functional requirement:\nThe game should support all features on all platforms and bugfixes and updates should be available on all platforms at the same time.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287622,
      "meta": {},
      "text": "Usability: Bumpers can be played without pre-knowledge from the player and it is easy to learn it \nPerformance: The frame should be constantly refreshed so the game would be faster to the user \nMaintainability: Bumpers must be updated and treated from all bugs and failures\nAdaptability: the Bumpers game should be available in all servers all around the market to satisfy the demand\n Portability: Bumpers can be moved from Android to iOS \nPerformance: The game should cover all direction in as hort amount of time ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287751,
      "meta": {},
      "text": "Reliability-> The game should not freeze more often than 1 in 100000 games\nSafety->Cars that have not been \"unlocked\" yet are not available to the user (car types can be bought or won in games)\nSecurity-> Bumpers is password protected with a minimum length password of 12 characters including caps, numbers, and symbols\nUsability-> A bumper game should be playable without the need for any instructions\nPerformance-> The game should run at 60 FPS\nPortability-> Bumpers runs on Windows, macOS, Linex",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280252,
      "meta": {},
      "text": "Usability:  1. User should be able to start the game, after he/she selected the car. \n\t\t2. The User should only see the GUI with his car's and the oppenent's and no other features, so he/she \n\t\t    focus on the game.\n\nReliability: 1. The user should be able to adapt the size of GUI and the GUI elements should adopt accordingly.\n\nPerformance: 1.  The game should be able to be played by a least 1000 players simultaneously.\n\t\t      2. The game should be available on multiple servers, so our downtime is below 15 min a year.\n\nSupportability: 1. The platform should support the ability to insert new car types as the customer demands it.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1281246,
      "meta": {},
      "text": "Usability:\n- the player should be able to quit the game with at most 3 clicks\n\nReliability:\n- the game shall under no circumstances end if the user does not wish so. The rate of games ending/crashing without the player's wish should be less than 1%\n- every game should end with a clear winner. The rate of games without a winner for any reason should be less than 1%\n\nPerformance:\n- there should be no noticeable lag (under 100ms) between the player's input controls and the steering of the car\n- starting a new game should take less than 5 seconds of loading time\n\nSupportability:\n- the game should be playable on all major computing platforms (e.g. Mac, Windows, Linux)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281787,
      "meta": {},
      "text": "Usability: \n - able to start the game with one click, steer with only 3 keys and and end the game with only one click. \n - able to adjust the master volume of the game, also during gameplay. \n\nReliability:\n -Safety: the game runs on several redundancies.\n\nPerformance: \n - the game can run with at least 5 different types of collisions occuring at the same time.\n\nSupportability: \n - Adaptability: the game can be run on different operating systems. \n - Maintainability: the game is programmed with clean code so that any bugs can easily be fixed and colleague developers can easily adapt to and understand the code. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282367,
      "meta": {},
      "text": "NFR1: The game will show players the instruction and game rules for their first time playing.\nNFR2: The game needs to be crash safe in 99% of its runtime.\nNFR3: The response time between the click and reaction should be less than 0.5 second.\nNFR4: The game can be run in both windows and Mac OS.\nNFR5: The game has to show player the relevant information of their car, like velocity and position of the car\nNFR6: The game has to support two different car type.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283172,
      "meta": {},
      "text": "Usability: Player can steer the direction of the car from 1 click to right or left by clicking right or left of the mouse. Player can change the speed by clicking the speed limit what he needs in the speedometer displayed in the interface. The interface should present speed, consumption and location of the car at the right top of the screen with bold letters to denote high visibility. \n\nReliability:  A player should have the access to only one car. In any case, another player should not have the access to control other's cars (Security).\n\nPerformance: All the players who starts the game should have the access to play at the same time. The winning car should be notified after a collision within a second. The availability of the game should be 99.9% per day. There should be unique music for each car. When the play starts the car, music should be played within a millisecond. The system should track speed, consumption and location of the 99.9% correctly for a started car. When a car gets crashed, the sound effect should come within a second. The game should support each of the collision type 100%.\n\nSupportability: The game should support in any platforms in the same manner (Should be platform independent).\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283539,
      "meta": {},
      "text": "Requirements define the constraints of a system and can be divided into two discrete categories: \n\t- functional requirements\n\t- non-functional requirements \n\nNon-functional requirements describe the conditions and restrictions for software: \n\t- Usability: \n\t\tdescribes the ease of use for users. For our Bumpers game, a usability \n\t\trequirement can be as following: when cars crash, there has to be a sound effect. \n\t\tBy this sound effect, a user can easily identify a car crash. \n\t\n\t- Reliability: \n\t\tcan be categorized into three main sections: robustness, safety and security \n\n\t\tRobustness defines the boundary condition of a system maintenance. Defining this \t\t\n\t\taccording to our Bumpers game, the statement shall be:  if the program is for use\n\t\ton personal computers with Windows operating system, the bumper car game can \n\t\tbe run by operating systems starting form Windows 8. \n\n\t\tSafety determines the prevention of unwanted incidents such as: when you leave \t\n\t\tthe game, information about the state of your session shall be saved automatically. \n\n\t- Performance: \n\t\teach transaction of a game should take less than 1s\n\n\t- Supportability \n\t\tcan be divided into two categories: adaptability and maintainability \n\t\t\n\t\tAdaptability describes the level of the system to adapt to changed environments, \n\t\te.g. the bumpers game shall be platform independent. \n\nTherefore, the fulfilment of these requirements lead to high utility value of a system. \nAccording to the problem statement, in total 6 quality requirements for the Bumpers game shall be elaborated by placing an emphasis on defining non-functional requirements. \n\n\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285265,
      "meta": {},
      "text": "Usabilty: - The user needs at most 3 clicks to start playing the game one to start game, one to choose car types and a last one to choose collision types.\n- The player's car has to be highlighted at the beginning so that the player knows which car is his. \n-The game will implement a pause button so the player can pause the game. \nRelability: The game should only stop if the player wins or looses, if the game crashes it should send a clear message to the user. \nPerformance: The response time when the mouse clicks to where the car turns should be in less than 100ms. \nSupportability: The game should be supported on Linux, Windows and Mac with no significant differences. \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286015,
      "meta": {},
      "text": "Usability: Set up of the Game should be ready to play with under 5 clicks.\n\nReliability: Every player should read and agree with the terms and conditions of the game after downloading the game.\n\nReliability: The system can tolerate temperatures up to 70°C\n\nPerformance: The loading of the game should take less than 5 seconds.\n\nSupportability (Maintainability): The developer should do a survey at least every 3 weeks and correct any defects.\n\nSupportability: The developer should be able to adapt to software updates from user's devices \n\n(partly taken from my last year's answer)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287887,
      "meta": {},
      "text": "NFR(Learnability): The controls or how to play the game should be stated in a help sector and should be similar to other games, making them easy to learn.\n\nNFR(Security): The server of the system should include the newest version of an anti-virus program and thus not allowing to have any viruses implemented and therefore being able to sneak the virus into the users pc.\n\n NFR(Accuracy): The graphics should be able to display every movement, even if there are rapid changing ones, in a time that the human eye+brain can process it and have a smooth graphical environment.\n\nNFR(Adaptability): The game should be accessible not only from your computer, but also from mobile devices and therefore adjust its functions and especially the graphical interface to a smaller touchscreen for the user to be able to play it on his smartphone.\n\nNFR(Performance): The server and all the processes overlooking the functions of the game should be capable of handling around 1000 users and all their inputs at the same time, so even in times this game is played by a lot of people at once there should be no errors for the users or server downtimes due to too many users.\n\nNFR(Error handling and robustness): If nevertheless an error occurs, the system should be able to either solve the problem lying behind the error on its own or if this is not possible in a quick solution on the one hand start the system new and let the users use the game as fast as possible again and on the other hand contact the employees who will be able to work on the error and solve it.\n\n\nSome parts are based on my last year: https://artemis.ase.in.tum.de/courses/121/text-exercises/4099/participate/784095 and more requirements added.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280792,
      "meta": {},
      "text": "Usability:\n\t- Players need at most 3 Clicks to start the game up.\n\t- Players need at most 2 Clicks to end the game, at any time they are currently playing it.\nReliability: \n\t- The game shall utilize a maximum of 1 GB of RAM at any given point.\n\t- Anti-Virus Software in compliance with the Windows Operating System.\n\nPerformance:\n\t- The Game should run at a minimum of 30 FPS 98% of the time.\n\nSupportability:\n\t- The Game can be restarted at any given time within 100 seconds.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281392,
      "meta": {},
      "text": "1. Usability: Starting and Stoping the Game can be done with a single click of a button each\n2. Reliability: The Game has to be robust enough to not suddenly crash.\n3. Performance: The Game has to be able to handle enough Collisionchecks, so that each Collision is registered. If the System had a multi second delay between checks, their outcome would be too irregular.\n4. Supportability: All Collisions are Subclasses of the Collision-Class, so that new Collisions can be added, without the need for other Classes, that need Collisions, to be changed.\n5. Usability: The lernability should be improved, so that the User can learn the Controlling of the car without prior knowledge. (For example knowledge, that he has to use the mouse, to controll the car)\n6. Usability: Sound hints should give the Player clear information about if a Collision happened or not.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283993,
      "meta": {},
      "text": "-NFR1 Usability: Bumpers should be playable without an instruction manual for the user.\n-NFR2 Reliability : The game should have an execution crash rate of maximum 0,02%.\n-NFR3 Performance: The game should not drop in average under 20 frames per second.\n-NFR4 Performance: The mouse response time should be less than 1/10th of a second.\n-NFR5 Maintainability : The game two-weekly updates should take less than 5 min.\n-NFR6 Portability : Bumpers can run on Windows , iOS and Android.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284300,
      "meta": {},
      "text": "1. (Usability): The player should be able to start the game with only one click on a prominent button.\n2. (Reliability): The player's car should not drive out of the game board when the player does a mouse click outside the game board.\n3. (Performance): The cars should drive fluently (without visible bucking), even when the player has 5 other applications opened at the same time.\n4. (Supportability): Changing the default velocities of the different car types should be performed by the developers within a minute.\n5. (Usability): The different car types should have different colours, so that the car types can be distinguished.\n6. (Performance): The application should not crash when the player clicks on the game board several (at least 3) times per second.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284672,
      "meta": {},
      "text": "Usability (User experience): The car should not be faster than 50cm/sec to avoid that the game ends to quickly or becomes uncontrollable by the user.\n\nUsability (Learnability): The user should be able to set up the game in not more than 3 clicks. Furthermore, the game should end in under 2 min after the game has started and the car steered by the user started moving.\n\nReliability (Robustness): The car should only move based on the required mouse movements and on no other occasion.\n\nPerformance: It should only be one user be supported for the game. It is not a multi-player game.\n\nPerformance (response time): The car should move at least 5ms after the user pressed the relevant key on the keyboard.\n\nSupportability (Adaptability): If the user changes his or her car there will be different features like size, speed or propensity to crash that need to change instantly.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284776,
      "meta": {},
      "text": "usability: \n1.The player can start and stop the game.\n2.The player can steer the direction of the car with the mouse and change its speed.\n\n\nreliability:\n1.The game should be platform independent.\n\n\nperformance:\n1.It should visualize different parameters of the car, e.g. the speed, consumption and location of the car.  (Amount of information)\n\n\nsupportability:\n1.The game should support different collisions.\n2.The determination of the collision winner should be changeable during gameplay.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285124,
      "meta": {},
      "text": "Usability: \nThe user needs only two clicks to start the game \nThe user needs only one click to close the game\n\nReability:\nthe system shall under no circumstances allow the user to install mods \nthe system shall under no circumstances allow the user to cheat\n\nPerfomace:\nThe game has to start max. after 0.5 second after opening it\nThe game has to process the users input in less then 0.05 seconds\nThe game has to support at least 150 cars \t\n\nSupportability:\nThe game has to support 3 differeten operation systems: Unix, MacOS and windows",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285936,
      "meta": {},
      "text": "- the game should run smoothly, even when there are a lot of cars\n- the game should start and stop properly when the button is pressed\n- the game should run smoothly on different platforms\n- it should be easy to make changes and it shouldn't take long to make these changes to all the platforms\n- the UI should be easy to understand and shouldn't change too much\n- the game should handle wrong input correctly",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287399,
      "meta": {},
      "text": "\nLearnability:\nDue to the good design of the game, the user does not need more than 2 clicks to start the game, so it is very easy to use and learn.\n\nMemorability:\nSince the player has to only steer the car and try to not collide with another one, the functionalities are easy for the user to learn and memorize.\n\nResponse time:\nIf the Player opens the game, it should not take long to start. A maximum of 5 seconds and then the gameshould be ready to play\n\nAvailability: \nThe game should be available 99,5%, meaning the downtime of the game must not be more than 50 minutes a week.\n\nAdaptability:\nThe game adapts to the current developments in the games market and continues to develop accordingly. In the course of this, existing bugs will of course also be fixed and new functions will be added.\n\nSecurity:\nThanks to a very good programmer, the  game is hard to hack so there are no danger (e.g virus) when installing the game.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282189,
      "meta": {},
      "text": "Usability: \nThe user should require only a mouse on pc or a finger in the phone to play the game.  Steering works with clicking or touching in the direction in which you want to drive. The manuel is displayed at every start of the game but can be blocked permanently if wanted. \nThe game is limiting flashing light in order to prevent epilepsy, thus creating a chilling environment. All objects are large in size, not hindering people with bad eyes sight to play the game.\nReliability:\nThe game should have a car limit of 15. This prevents any sort of lag due to the maybe bad pc or phone loading to many entities and then crashing the game. A second plausible advantage of this setting is perma crashing of cars is prohibited which would have cause a bad gaming experience.\nPerformance:\nThe game shall be played at anytime of the day. The updates can be downloaded and applied when the user wants. The game additionally is only playable offline, which eliminates the possibility of a server downtime, thus creating a game that can be played all week except 3 minutes when updating. \nSupportability:\nThe coding style should be clean. Multiple used classes should be inspected and maybe turned in an abstract class with subclasses. Classes should use easy to understand naming. Attribute names should start with a small letter. \nThe code should be put on the Git. This creates easiness for all the developer in the team to push and update to the newest code. A high transparency of the code for all the developers also requires notes in the code as well as a signature, in case you need to ask another developer about the code.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282533,
      "meta": {},
      "text": "Usability: 1) The player uses a mouse to control the car. The mouse/touchpad is an integral part of any PC, therefore is available and familiar for every user. Furthermore, the mouse is very user friendly and comfortable way to control a character, since the character directly follows the movement of the hand. 2) In addition to this, the game contains variable visualisation, which makes the game more user-friendly,  since it is very intuitive.\n\nReliability: 3) The game is platform independent, therefore can be ran on different devices and be available for various users. 3.5) Another example could be the following: for the game to be reliable, it must be able to handle errors correctly and efficiently, so that it does not affect the smooth flow of the game. For instance, a wrong user input, could be handled in the following way: when some button is pressed and it is undefined in the context of the game, ignore the input and play some sound.\n\nPerformance: 4) The game should be able to rapidly check the position of each car in relation to each other and the borders to visualise the game. 5) And calculate whether a collision took place and which type it was, since the according sound must be played immediately.\n\nSupportability: 6) \"The determination of the collision winner should be changeable during gameplay.\" This is an example of adaptivity which is a component of the supportability, since the system adapts to the changes during the runtime.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1283288,
      "meta": {},
      "text": "NFR1: A player should be able to start the game within 2 clicks. (Usability)\nNFR2: Users can interact with a mouse. (Usability)\nNFR3: The Visualization of different parameters of the car shall take up 1 / 4 of the gamescreen.(Usability)\nNFR4:  The system should do nothing if some key on the keyboard is pressed to avoid wrong input (Reliability)\nNFR5: The game should react to clicks within 10 ms (Performance) on all Desktop PCs.\nNFR6: There is an 80% chance that bugs are fixed within 2 hours. (Supportability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283931,
      "meta": {},
      "text": "NFR1 Usability: The player can change the direction of the car with one click.\nNFR2 Usability:  The user interface is designed in the way that more than 99% player can find the start/stop button, the parameters of the car and the button to change the collision winner during gameplay within 30 seconds.\nNFR3 Reliability: The game can prevent virus in 95% of running time.\nNFR4 Performance: At least 1 million players can play the Bumpers at the same time.\nNFR5 Performance: The collision can be detected within 1 second.\nNFR6 Supportability: New Requirement like adding a new type of car can be implemented in 3 days.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284138,
      "meta": {},
      "text": "Usability:\n\t- The player needs less then 5 clicks to choose a collision type and start the game.\n\t- Cars shall be displayed as distinct one centimeter by one centimeter icons\nReliability:\n\t- The system should take left and right mouse-input as a car steering command.\n\t- The game should be platform independant.\nPerformance:\n\t- The game should run on 30 frames per second, therefore the game board has to be updated 30 times\n\tper second.\nSupportability:\n\t- The collision-type can be changed before each round\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286609,
      "meta": {},
      "text": "NFR1 Usablility: Players can still play it even without reading the manual \n\nNFR2 Conformance to guidelines: The design of the game should conform to the usability guidelines for the operating system. \nNFR3 Reliability: There cannot be more than one crash every 500 executions. \n\nNFR4 Performance: Car can be updated and run within 0.1 second after the player operates. \n\nNFR5 Supportability: The game should be maintainable and adapt to different platforms. \nNFR6 Adaptability: Bumpers should support iOS and Android. ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286748,
      "meta": {},
      "text": "Usability:\n\n- Type: Satisfaction / Userexperience\n   \"The player can influence the characters driving direction only by clicking the mouse within the gameboard.\"\n- Type: Learnability\n   \"The player needs at most two clicks to either start or stop the game.\"\n\nReliability:\n \n- Type: Robustness:\n  \"When the player steers outside the gameboard, the player will automatically bounce back.\"\n\nPerformance\n\n- \"When steering the car into another direction, the change should be considered within 50ms.\"\n\n- \"When a collision takes place, the loser has to stop within 60ms.\"\n\n(Of course I don't know exact values, due to my lack of knowledge. So these are example values.)\n\nSupportability\n\n- Type: Adaptability\n  \"Because the game is platform independent, it should be able to change it's event handling (steering) for  \n   other platforms like an android mobile version.\"",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287138,
      "meta": {},
      "text": "NFR1 Usability: The game background must be larger than 5*5 cm in order to let the player operate.\nNFR2 Usability: Players can leave the game at any time when the system is not functioning properly.\nNFR3 Usability: When the players want to operate the car, they must double-click the mouse.\nNFR4 Security: Under no circumstances shall the system leak players'  information such as IP address to unauthorized users.\nNFR5 Performance: After the players' operation, the system shall response in less than 0.01 seconds in 95% of the cases.\nNFR6 Adaptability: The system shall support IOS, Android , windows operating system.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287159,
      "meta": {},
      "text": "Usability:\n 1. The User should always be able to start the game in less than 3 clicks.\n2. The average user should be able to understand the game in less than 2 minutes.\n\nReliability: \n3. The game should not crash if the user presses a Key with no intedet function.\n\nPerformance: \n4. The game should claculate the position of the cars at least 24 times a second.\n\n Supportability: \n5. The maintenae of the program should take less than 2 hours a month.\n6. To add a new collision type should on average less than 5 hours.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280253,
      "meta": {},
      "text": "Usability: \n- Player is able to play only with mouse and the letters \"WASD\"\n- There should be a noticeable button to exit the game\n- There should be different difficulties to play\n- Different cars should be available to play\n- The sound of the game should fit the atmosphere and be remarkable\n- There should be different backgrounds to choose(e.g. desert, downtown, etc.)\n\nReliability:\n- Tabbing out of the game should not have any impact on the game\n- If the player presses by accident different keys on the gameboard, this should not have any impacts on the game\n- If the pc turns off the game should be safed and the player is able to continue where he left the game\n- playing online should be fluent and without lags\n- the game should be safe against cheating\n- the game should be working on older PCs\n\nPerformance:\n- it should be possible that two local players can play on one pc against each other\n- playing online sould be available\n- the availability of the game should be 99%\n- pressing keys in rapid succession should not have a negative effect on the game\n- the game should even be fluent when the player plays in on low battery mode\n- the game should not take much of the CPU\n\nSupportability:\n- the game should work when the user updates his pc-software\n- the game should work on windows, IOS and Linux\n- size of updates should not be so big\n- there should be often updated new cars and backgrounds\n- if a bug is found it should be fixes asap\n- the game should be adjusted all the time to the feedback of the player",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1283301,
      "meta": {},
      "text": "Usability: The game can be understood without an introduction/manual after 3 rounds of playing. (to be even more specific: 90/100 players must be able to explain how to win the game after having played 3 rounds without a prior introduction to the rules)\nUsability: For visibility purposes, the cars shall appear in at least a 37.8px by 37.8px format.\nReliability: The game should not crash more than once in every 500 executions.\nPerformance: The game board must update at 30fps.\nPerformance: The car has to change its direction within 50ms after the mouse was moved/clicked.\nSupportability: The documentation of Bumpers must be available in German and English for an international community of developers to be able to add to the game.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283328,
      "meta": {},
      "text": "Usability in the case of Bumbers could be that the user needs at most 5 clicks for the game setup (e.g. choose his car type) to click on startGame to play the game. \nAnother usability example is that the system recovers in less that 60 seconds if an error occurs so the player can continue playing.\n\nReliability when the system is able to continue functioning although surrounding conditions may change e.g. when Bumpers can also be played on a laptop in the Sahara as much as it can be played on a laptop in Antarctica as it tolerates temperature differences. \nAnother reliability requirement (safety) could be that the game is safe for children above 12, and therefore it does not include disturbing pictures or sounds and the player is asked to confirm the age before playing the game.\n\nThe performance of Bumpers is that 99% of all crashs are processed in less than one second and have no delays.\n\nSupportability (adaptability) is when Bumpers can be played on different operating systems such as Windows, MacOS or Linux and can be played using either a mousepad or external mouse to steer the cars. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283710,
      "meta": {},
      "text": "The Nonfunctional Requirements: (URPS)\n\n1.1.usability: Player should be able to control the direction of the car through moving mouse up or down. And they could also change the speed by clicking the mouse button( for example there are five gears total for the speed and player could click the left mouse button one time each time to speed the car up for one gear( which has a original speed gear as one). Just like it, player could also lower its speed by clicking the right button).\n\n1.2.The system should always follow when the player controls the direction of the vehicle's movement by moving the mouse\n\n3..Reliability(Robustness): The response to multiple clicks per unit time should be guaranteed to be normal. For example, the player clicks the left mouse button three times in a second to increase the speed of the car.\n\n4.Performance: Collision detection should be done within a second, or even further, half a second. To prevent the follow-up collision from being unable to feedback in time due to too long time.\n\n5.Availability: The availability of the system is at least 90%.\n\n6.Maintainability: If there is a problem with the game system line, it should be possible to complete the maintenance within five minutes.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284301,
      "meta": {},
      "text": "Usability:\n1) The user shall only be required to configure the settings once. If the user chooses to start the game again, the last settings should be active. Otherwise, the user can change the settings in a settings menu.\n\nReliability:\n\t- Robustness:\n\t\t2) The game should also run on a CPU with little computing power. It should maximally require a 1GHz CPU (One could argue that this would be a performance requirement, yet I see this as a robustness requirement since the developer cannot control the users CPU)\n\t- Security:\n\t\t3) The game should not be granted root access to the computer. It should also only be able to edit one configuration file at most, to prevent malicious attackers from exploiting the game.\n\n Performance:\n\t4) The game should always maintain a framerate above 30 frames/s\n\nSupportability:\n\t- Adaptability:\n\t\t5) The game should support an in-game switch from mouse steering to keyboard steering\n\t- Maintainability:\n\t\t6) Every class and every single method of said class should be documented with at least a title, a short summary, parameters, return types and a short usage demonstartion",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284314,
      "meta": {},
      "text": "usability: players need at most 4 clicks to choose the car and collision type they want.\n\nreliability: the system can tolerate number of cars up to 25.\n\nperformance: 95% of the crash and crash sound shall be processed in less than 1 second\n\navailability: the availability of the system should be at least 99.7% in order to ensure an uninterrupted play.\n\nadaptability:different vehicle types shall be worked for the game and types of the vehicle should not change the system.\n\nmaintainability: background voice can be changed within 5 min. Therefore, players can listen to different music while they're still playing the game.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284817,
      "meta": {},
      "text": "- The crash sound is timed perfectly so that the crash feedback feels natural and satisfies the user.\n- The game is platform independent which makes it more available for every user\n- The car's location is always visible for the user which is a fundamental requirement for him/her to keep track \n- If the player clicks out of the game board the game will continue running but the action will not be recognized so that cars cannot leave the game board which prevents bugs.\n-  The player can see the parameters of e.g. speed etc. to make the game easier to understand.\n- The game starts within 1 ms after the start button is pressed\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286205,
      "meta": {},
      "text": "1. Sobald man das Programm auf deinen Computer geöffnet hat sollte man innerhalb von 3 Interaktionen ein spiel starten können\n(Usability -> Efficiency)\n\n2. Wenn man länger als eine stunde, spielt soll eine Warnung, in Form eines Pop Up-Fensters aufkommen die den Spieler vor sucht, Gefahr schützen soll\n(Reliability -> Safety)\n\n3. Das Spiel sollte auch auf einem Laptop* immer mit mindestens 30FPS laufen\n(Performance -> Response time)\n\n4. Das Spiel soll sowohl auf Windows, Apple als auch IOS laufen\n(Supportability -> Portability)\n\n5. Fehler und Bugs müssen innerhalb einer Woche behoben werden, und Gamebreaking Bugs innerhalb von 24 Stunden\n(Supportability -> Maintainability)\n\n6. Updates für das Spiel dürfen auf einen Laptop* durchschnittlich nicht länger als 3 Minute zum Installieren brauchen\n(Supportability -> Maintainability)",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1286670,
      "meta": {},
      "text": "Usability: \nIn the Bumpers Game the Player should be able to steer the car with the mouse and start and stop the game and change its speed.\n\nRobustness:\nThe Game can handle up to 13 mouse clicks per seconds. If for example auto clicker is used it does not crash.\n\nSafety:\nThe Game is safe against bugs and viruses and the Game won't crash.\n\nPerformance:\nThe Game should be only playable by one player at a time,and  99% of the Information shall be processed in less than a second.\n\nAdaptability:\nThe Game should be supported by all operating systems and should work on every device.\n\nMaintainability:\nThe Programm code should be intuitive to understand and logically structured.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286916,
      "meta": {},
      "text": "NFRs:\n\n1. The player must be able to play the game within maximal 3 user interactions and all those user interactions must be of the same type, meaning they are either mouse clicks or keyboard presses, depending on the platform. (usability)\n\n2. The game must not display heavily flashing images for more than 2 seconds in order to protect player with sensitivities towards those kinds of interactions. (reliability, safety)\n\n3. The game should automatically be paused if it detects more than 20 UI interactions in a second during a game, as this might be a sign of a player cheating or intentionally wanting to crash the game. (reliability, security)\n\n4. The game must be able to display minimum 10 cars and maximum 25 cars at the same time on the \nscreen. (performance, throughput)\n\n5. The change of direction of the player's car after an interaction must take less than a third of a second. (performance, response time)\n\n6. The game must be able to adapt to different screen resolutions, from big TV screens to smartphone screens. (supportability, adaptability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287547,
      "meta": {},
      "text": "1. Users need at most 3 clicks to start a game.\n2. Each button has at most 3 words on it.\n3. Prevention of the not-allowed direct change of car speed from users.\n4. 99% of the transactions shall be processed in less than 1 second.\n5. The downtime should be at most 1%.\n6. New car type can be added within an hour.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287592,
      "meta": {},
      "text": "Usability:\n- The player should be made aware of the things he can control (direction, speed).\n- The buttons to restart / stop the game should require two interactions to avoid accidental use\n\nReliability:\n- There should always be a default collision present, even if the player doesn't actively choose one / bypasses the choice somehow.\n- The music / sound shouldn't violate copyright so that the game has a consistent soundtrack (that doesn't have to be changed)\n\nPerformance:\n- Collisions shouldn't add >0.5s of lag for average users.\n\nSupportability:\n- Cars should be implemented in a way that the default functionality expected from a car doesn't have to be reimplemented for new types of cars.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287907,
      "meta": {},
      "text": "Usability: Player needs one click to start or stop the game. Another click to choose the collision type. One click to choose the car and another click to stop the game. \n\nPerformance:  99% of the transactions shall be processed in less than 0.5s. One User supported. \n\nAvailability: The game is up at least 99.99%.  \n\nMaintainability: Bug Fixes and modifications are easily done by a developer. \n\nRobustness: System can easily tolerate errors of player, since there are only single choice to be done (e.g. one choice for the car, one for the collision). There is literally no room for errors of the player. \n\nSecurity:  The Safety requirement makes sure that all data inside the system will be protected against malware attacks or unauthorized access. Thus, Private data and potential in game payments must be privacy and PCI DSS compliant. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1288090,
      "meta": {},
      "text": "\n-the game can be started within 3 clicks\n\n\n-the game can be played by 10000 people at the same time\n\n-the game is at most 2 hours a week unavailable due to updates\n\n-the game can be played on different operating systems\n\n-the game supports controllers\n\n-the game uses non-copyright music",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281155,
      "meta": {},
      "text": "NFR1 Usability: Player can choose car and start playing in 3 clicks in total.\nNFR2 Reliability: When player accidentally clicks stop, system gets confirmation if player really want to stop the game.\nNFR3 Performance: 95% of collusions are evaluated in 1 second.\nNFR4 Supportability: The game should be platform independent.\nNFR5 Performance: Crash sound effect starts in at most 1/3 second after collusion.\nNFR6 Usability: Each car steer requires only one click.\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283174,
      "meta": {},
      "text": "Usability:\n\tThe program should include an introduction to the game that can be read in less than a minute.\nA new user should not need more than 4 minutes to play the game without any problems.\n\nReliability:\n\tOnly one in ten users should experience a crash when using the program.\n\nPerformance:\n\tThe Application should launch in less than a second.\n\tThe game should run on all desktop computers after 2018 with at least 15 frames per second.\n\nSupportability:\n\tThere should be an e-mail address for technical questions in the documentation.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283233,
      "meta": {},
      "text": "Usability: \n\t-\tIt should be possible to switch the collision mode while playing with at most two clicks (UX)\n\t-\tAt all times, the game must provide a help button in the upper right corner that gives contextual advice on how to navigate the main menu or on how to play a specific game mode (Help and documentation)\n\nReliability:\n\t-\tThe game should go into pause mode when the player shifts the focus to another window (robustness)\n(Note: since the player is steering with the mouse, this should help to avoid losing by accidentally clicking outside the game window)\n\nPerformance:\n\t-\tThe game must support a fluid experience (no lagging) with at least 25 fps for up to 50 bot cars on an Intel i3-9100 Processor (response time)\n\nSupportability:\n\t- \tWith a development effort of at most 8 hours in total, it must be possible to introduce new car types with different visual appearance, different driving behaviour, and a different hitbox for the collisions (maintainability)\n\t-\tThe game should be platform independent both for desktop as well as mobile operating systems (portability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283793,
      "meta": {},
      "text": "Thank you for correcting all the submissions, you deserve more money than you're being paid right now :blobcuddle:",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1283947,
      "meta": {},
      "text": "Usability: \n- \"The player can steer the direction of the car with the mouse and change its speed\"\n- No button-bloat: The number of buttons displayed on the HUD should be limited to the essentials (e. g.    quitting the game, returning to the menu where a new car or collision type can be selected.\n- the unique parameters of a given car should be immediately apparent to the user (e.g. the image of a racing car representing a car with a higher speed value, the image of a truck to represent high consumption).\n\nReliability:\nThe car is steered using a computer mouse but random keyboard input should not interfere with the program, though there are exceptions like Alt-F4 for example and certain functions could be mapped to buttons, like pressing Escape to quit the game.\n\nPerformance: \n- the game should respond to user input ASAP. It would harm the gameplay greatly if a car were to respond to input with a significant delay.\n- Updates of the game boar should happen in an instant so that the gameplay isn't stalled.\n\nSupportability:\nThe game should be compatible with all common sorts of systems and setups.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285963,
      "meta": {},
      "text": "- Usability:\n\t- The player must be able to start the game with 3 clicks at most\n\t- The options to stop and start the game should be located on the top left corner of the UI \n\n- Reliability:\n\t- When inputs other than left click on the mouse are given, the game should not react.\n\n- Performance:\n\t-The game should be able to run 12 cars in addition to the player's car\n\t-Collisions with other cars, even with multiple at once, should not slow down the game and drop the \tframerate\n\n- Supportability:\n\t- The game  should allow  new car- and collision types to be added in the future",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287265,
      "meta": {},
      "text": "Usability\n\t1) Players need at most 5 clicks to start the game.\n\nReliability\n\t2) The game should not crash when a player tries to drive beyond the walls. (Robustness)\n\t3) If the player doesn't select a specific collision type, the game should start with the default collision since the game must have a collision type in order to run without problems. (Robustness)\n\nPerformance\n\t4) The game should be opened in under 5 seconds.\n\t5) The game should not make the player wait when the collision type changes during the gameplay.\n\nSupportability\n\t6) The game should be easy to optimize and easy to add new features. (Maintainability)",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287762,
      "meta": {},
      "text": "1. The user‘s car should be different to the computer‘s cars so that the player know where‘s his car.\n2. The game should easily be played regardless of platforms.\n3. The information on the player‘s car should be large enough so that it‘s not difficult to check while playing, but in a place that won‘t obstruct the view.\n4. The Sound Effect of the car crash for the crash between player‘s and computer‘s  should be different from that between 2 computer‘s.\n5.Any reported bugs must be dealt with not after 3 days.\n6. There should be an option for tutorial when at the start menu of the game and when the player pauses. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280494,
      "meta": {},
      "text": "[Usability]\n- Players need at most 3 clicks to choose the setting of the game by the mouse or the keyboard.\n\n[Reliability]\n- Robustness: When a user enters a wrong or unexpected input, the game doesn't freeze and can guide the player by showing the message telling what the player can/should input.\n\n[Performance]\n- 200,000 players can play the game at the same time.\n- Availability: The game is available except for 30 minutes of maintenance per month.\n\n[Supportability]\n- Adaptability: The game can be played on both Mac and Windows PCs.\n- Maintainability: The implementation (codes) of the game is as simple as it can be modified in 30 minutes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281183,
      "meta": {},
      "text": "-Usability: \n\tA game should be able to start in less than 2 clicks. \n\tThe buttons should be big, have a large (0.5cm+) and clear (Calibri) text to explain their function and be placed on a top bar.\n\tThe different parameters of the car should be displayed as soon as the game starts in the top right corner of the scene.\n\tErrors should appear as a new window and allow the user to start a new game.\n\tA button should be there to display how the game works and the rules in a new window.\n\tA button should be there to pause the game.\n-Reliability:\n\tIf the user clicks on the close button, it should prompt the user if they are sure they want to close the system to prevent accidentally exiting a running game.\n-Performance:\n\tThe game should be able to run with more than 30fps on at least 95% of all currently sold systems.\n-Supportability:\n\tThe game should be playable on MacOS, Windows 10 and Linux.\n\tThe code should follow the guidelines of the book \"Clean Code\" to be as easy to understand and maintain as possible.\n\t\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1281350,
      "meta": {},
      "text": "Nonfunctional Requirements\n\n1. the delay between user input and in-game action should be of less then 1s.\n\n2. the game should run on windows and mac, Linux is not necessary.\n\n3. the user should not be able to mess with internal variables of the game except if the option is given to them through the UI.\n\n4. the user should be able to start a game in three or less clicks\n\n5. if an error were to occur during the game, it should be able to handle it without crashing the whole program.\n\n6. the program should be able to adapt to the inputs of the following kind: mouse-only, keyboard-only, controller, touchscreen.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281973,
      "meta": {},
      "text": "Usability:\n\tUsers interract with a mouse. \n\tUsers need atmost 1 click to start or stop the game and to steer the car.\nSecurity\n\tThe game should be able to detect tampering attempts of the source code to prevent players to \n\tgain infair advantages in the game.\nAvailability\n\tThe availability of the game should be at least 99.7%.\nMaintainability\n\tAdding new cars types to the game can be done through a GUI without code.\nAdaptability\n\tThe Game should be able to also receive input from alternate mice like mouth-based control mice for the \n\tphysically impaired. \nPortability\n\tThe Game should be able to run on any operating system (macos, windows, linux).\n\n\t",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284046,
      "meta": {},
      "text": "Usability:\n1. The player needs at most one click to start or stop the game.\n2. The player can easily distinguish which car belongs to him/her.\nReliability:\n3. The game should be able to restart at any time in the game.\nPerformance:\n4. the availability of the game is at least 99.9%.\nSupportability:\n5. the car's driving direction should exactly correctly follow the player's mouse clicks.\n6. the crashed cars should immediately disappear from the gameboard.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284646,
      "meta": {},
      "text": "Usability \nPlayer should be able to see the different parameters (speed, consumption and location of the car) at all times on screen during the game. \nPlayer can steer the direction of the car with the mouse.\n\nReliability \nThe game should run without failure during 95% of its runtime. \n\nPerformance\nThe loading time of the game should be less than 10 s.   \nThe game should play the crash sound effect 2 s after every collision.  \n\nSupportability \nThe game should support two types of cars: fast and slow.  \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284870,
      "meta": {},
      "text": "The game should meet following requirements:\n- The player shouold be able to start and stop the game with a single click.\n- The player should be able  to control their car with a single click / keystroke.\n\n- If two cars collide the same way, the result of the collision should always play out the same way.\n\n- Starting and stopping the game should take no more than 500ms each.\n- The game itself should run at least 60 frames per second.\n\n- The developers should be able to easily add new car and collision types",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287270,
      "meta": {},
      "text": "-Usability:\n\t-Efficiency:\n\t\t -Man braucht nur einmal das Spiel zu starten um die Benutzeroberfläche zu erlernen.\n\t-Aesthetic and minimalist design (Nielsen's 10 heuristics):\n\t\t-Das Interface des Spiels hat nur die wichtigsten Elemente und keine irrelevante Informationen.\n\t-Help and Documentation (Nielsen's 10 heuristics):\n\t\t-Das Spiel wird ein FAQ haben, wo man die am häufigsten gestellten Fragen finden kann.\n\n-Reliability:\n\t-Security:\n\t\t -Das Spiel weder braucht noch speichert persönliche Informationen des Benutzers.\n\n-Performance: \n\t-Availability:\n\t\t-Die Verfügbarkeit des Spiels beträgt 100%.\n\t        (es hat etwas damit zu tun, dass das Spiel ein offline Spiel ist, die Updates sind manuell zuinstallieren)\n\n-Supportability:\n\t-Maintainability:\n\t\t-Fehler können sehr leicht vom Entwickler behoben werden, die neue Version modifiziert das Spiel.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1281079,
      "meta": {},
      "text": "1. U: The user shall be able to see the status of the game (e.g. setup/playing/over) and be able to easily transition from setup to playing and from over to setup/playing with a click.\n2. R: False inputs/inputs from sources that are not the muse shall not interrupt the game.\n3. P: There shall be no or unnoticable lag/delay after the input and the execution of the command.\n4. S: The system shall be easy to upgrade: It should be easy to add new cars, types of collisions.\n5. U: The window size shall default to 1/4 of the screen and be adjustable by the user.\n6. P: Generating the cars and their position shall take less than 5 sec.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281175,
      "meta": {},
      "text": "NFR1 (Usability): The player can stop the game within two clicks.\n\nNFR2 (Reliability - Robustness): The system can withstand a hit on the keyboard, when more than 5 buttons are pressed.\n\nNFR3 (Performance - Response time): The system should renew player's car location within 1 second, when the mouse cursor is moved.\n\nNFR4 (Performance): The system supports only a single player at a time.\n\nNFR5 (Supportability - Portability): The systems runs on Windows OS, Linux, MacOS.\n\nNFR6 (Supportability - Maintainability): The game should be available regardless of the internet connection.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281997,
      "meta": {},
      "text": "Usability:\n\tafter a game is ended, new one can be started immediately\n\tthe collisions should be precise, meaning that they should only happen when the exact cars are touching not the rectangular areas around them\n\t\nPerformance:\n\tthe direction of the player's car is changed immediately after a mouse click (no latency)\n\tthe game is able to handle at least 25 cars without errors or latency (performance)\n\nSupportability:\n\tif the height or the width of the game window is changed, the game should be adapted to the new parameters (adaptability)\n\nMaintainability:\n\ta new car type can be easily added to the game, and an old one can be easily changed or deleted ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282039,
      "meta": {},
      "text": "1. (Usability) der Spieler kann mit maximal 4 clicks die Autoart und die Kollisionsart ändern\n2. (Reliability): Angriffe auf die Software werden Verhindert oder abgewehrt\n3. (Performance):  Die Software kann mit 1.000.000 gleichzeitigen Zugriffen umgehen\n4. (Performance-Availability):  In einem Monat (730 Stunden) ist das System maximal einen Tag (24 Stunden) offline. Damit ist das System mindestens 96,7% der Zeit online (706/730)\n5. (Supportability-Adaptability): Die Software läuft auch auf anderen (allgemein bekannten) Betriebssystemen \n6. (Supportability-Maintainability): Softwarefehler werden innerhalb von 4 Stunden behoben \n",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1284961,
      "meta": {},
      "text": "1. Usability: the player should need at most 2 clicks to start the game (open application, click start game)/ 4 if you include choosing a car and collision type\n\n2. Usability: application window should be big enough that user can clearly see what is going on and not accidentally click outside of the window (i.e. have a similar size window to other computer games that use the mouse for movement)\n\n3. Usability: give the player's car a slightly different image to other cars on the board, so that the player will not get confused about which car is his\n\n4. Reliability: handle exceptional user input cases, e.g. the car should not disappear if the player steers it against the border of the playing field, it should either bounce back or appear again on the other side \n\n5. Performance: the game should be able to support at least 25 cars on the playing field at the same time\n\n6. Supportability: each function in the code should only have up to 10 lines, to make sure the code is clear and understandable to anyone, thus making it maintainable for future updates",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285089,
      "meta": {},
      "text": "Usability: the start screen shouldn't have more than 3 options for selection\nUsability2: the game should have a how-to-play pop up at the launch screen\n\nReliability: the game shouldn't crash in more than %2 of the launches\n\nPerformance: the game should start in less than 2 seconds\nPerformance2: the game should support multithreading\n\nSupportability: the game should support multiple platforms, i. e. windows, macOS, linux\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285378,
      "meta": {},
      "text": "Usability : \n1. Player can hear a sound effect when there is a collision.\n2. Player's car is distinguishable from other cars. \n3. Notification appears at the middle of the screen. \n\nReliability\n4. The game is played smoothly and should not being unexpectedly crushed. \n\nPerformance \n5. Notification about the result of player's collision appears within 1 second. \n\nSupportability\n6. The game can be played on different computers with different operating systems. \n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286156,
      "meta": {},
      "text": "NFRs for the \"Bumpers\" Game:\n\n[usability]\n<> user interaction is via the computer's pointer (\"click\" event)\n<> the game's \"Start\" button should be visible right upon launch and it should take a maximum of 2 user interactions (\"acceptable\" are e.g. skipping through the presentation of the Game's Rules or the ability to Manage the appearance) for the game to begin after clicking \"Start\"\n<> readability: any font size should be at least 11pt\n\n[reliability]\n<> constant clicking the mouse and/or other mouse buttons (e.g. optional buttons as the scroll wheel) should not affect the application or lead to undefined behaviour, but simply either...\n\tA) lead to the same result as default clicks \n\tB) be ignored.\n<> the application should operate entirely in offline mode (i.e. →security in terms of avoiding online connectivity)\n\n[performance]\n<> it should take a maximum of 1s for the new direction input (via the mouse) to take effect on the car\n\n[supportability]\n<> all appearance-related configurations (most notably: cars' livery, sounds) should be able to be altered only by changing a central file-path attribute in the respective class(es)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287637,
      "meta": {},
      "text": "1. The car that wins all collisions is the winner of the game. (Usability)\n2. There is one car controlled by the player. (Maintainability Supportability)\n3. The player can steer the direction of the car with the mouse and change its speed. (Usability)\n4. The game should visualize different parameters of the car, e.g. the speed, consumption, and location of the car. (Performance)\n5. When cars crash, there has to be a sound effect. (Performance)\n6. The game should be platform-independent. (Robustness Reliability)\n\n\n\n",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287880,
      "meta": {},
      "text": "NFR1 Usability: There is a 5 minute Tutorial to explain all the basic functionalities, like steering the car as well as collisions, to the user.\nNFR2 Reliability: Bumpers can tolerate temperatures between -10°C and 80°C.\nNFR3 Performance: Bumpers can handle at least 500000 users simulatniously.\nNFR4 Supportability: It should take 30 minutes or less per week to maintain Bumpers \nNFR5 Availabilty: Bumpers must be online 99% of the time.\nNFR6 Performance: Each interaction with Bumpers should take less than 3s. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1288106,
      "meta": {},
      "text": "Usability: \n- player need at most 3 clicks to start a game\n\n- it should be at most 6 buttons visible on the screen during a game\n\n\nReliability:\n- Security: prevention of attacks on the target,  planned inclusion of viruses \n\nPerformance:\n- 95% of the player actions shall be processed in less than 1 second\n- the game should support up to 100.000 simultaneous players \n\nSupportability:\n\n- game can be updated within 15 min ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280277,
      "meta": {},
      "text": "Usability:\n\n\t- the game should be started in at least 4 clicks  \n\nReliability:\n\n\t- the user should be at least 6 six years old\n\nPerformance:\n\n\t- the movement of the mouse must be converted in less than 100ms\n\t- the availability of the game in the first hour is at least 99%\n\t- the game must be ready within 3 seconds\n\nSupportability:\n\n\t- the game can also be played with a console controller",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280320,
      "meta": {},
      "text": "-NFR1 Reliability (Robustness):\n\t-  Whenever the user hits a key that is not defined by the game code, the game must still run \n\t    without interruption and only react to the defined commands.\n\n-NFR2 Performance (Response time):\n\t-  If user clicks to steer the car there should be a maximum delay of 5 ms for the car to react.\n\n-NFR3 Usability : The player can start and stop the game with at least one click.\n\n-NFR4 Supportability ( Maintainability):\n \t- For every method there should be at least 1 line of comments to explain the functionality \n\n-NFR5 Supportability (Adaptability) : \n\t-The game should visualize different parameters of the car, e.g. the speed, consumption and location of \t\t \n \tthe car.\n\n-NFR6 Supportability (Adaptability):\n\t-The dimension of the game board view should work and adapted for small monitor size and big size.\n\n\n\n\n\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282010,
      "meta": {},
      "text": "Non-functional Requirements: (Partial Reuse from own submission Summer Semester 21)\n\nUsability:\n1. The instructions to play the game should be part of the Start page (should be part of the UI) to increase the Learnability of the User. \n2. The Game Interface implementation should follow a predefined Design Style Guide to ensure an aesthetic User Experience (Nielsen: \"Aesthetic and Minimalist Design\")\n3. The actual game board (after starting the game) should contain an \"Exit\" - Icon to ensure that the player can easily stop the game and return to the main screen -> User Experience (Nielsen: \"User Control and Freedom\"). For this interaction a shortcut should be enabled as well. -> Efficiency (Nielsen: \"Flexibility and Efficiency of Use\")\n\nReliability: \n4. Security: If the Bumpers Game Application is opened via web, it always runs via a secure connection.  \n\nPerformance: \n5. Response time: The game should load and start in under 1,5 seconds \n\nSupportability: \n6. Maintainability: The game should run on all operating systems that were released after 2008.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283846,
      "meta": {},
      "text": "Usability: It should take the player at most 3 clicks to start the game.\n\nUsability: The Gameboard UI should only include the 'start' and 'stop' buttons.\n\nReliability -> Robustness: The system can handle at least 3 car collisions at the same time without crashing\n\nPerformance -> Response time: 98% of steering commands should be processed in less than 0.2 seconds.\n\nSupportability -> Portability: The game should be supported by iOS and Android devices\n\nPerformance -> Accuracy: The deviation of the final steering direction from the desired steering direction should not be greater than 5 pixels.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284299,
      "meta": {},
      "text": "The Bumpers game should cover the following four URPS categories:\n\nUsability:\nThe game should be easy to play without any complicated steps by the user. So the user should be able to start/stop the game simply by pressing a \"start/stop game\" button without navigating through a complicated menu. \nOne thing about usability is keeping the user informed about what happens/ what is going on, so Bumpers should display a timer, that the game started or notify the player that the game started by starting the game music.\n\nReliability:\nBumpers should be robust, i.e. maintain its function even if the user for example tries to use the keyboard for steering the car (then nothing should happen, especially no error).\nThe game should also be safe and secure, so when the user e.g. crashes two cars at the same time, that these edge cases are thought of and don´t lead to an error in the system. \n\nPerformance:\nAlso Bumpers should have a decent performance, so the user can play the game without any lags or unwanted delays between actions (when the user clicks the mouse the players car should move \"immediately\" to its new direction).\nIt should also be available, i.e. not crash unexpectedly to leave the user without a game to play.\n\nSupportability:\nThe Bumpers game should also be adaptive, i.e. be platform independent and therefore also be maintainable, so it can be modified flexible given different circumstances. So it should work on mobile phones, tablets and desktops.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284716,
      "meta": {},
      "text": "NFR1: Usability: The game controls should be simple and easy to learn. The interface should include a brief explaination of the game controls that automatically pops up before every start of the game.\nNFR2: Reliability and Robustness: The game function and behaviour should not be impaired by the pressing of keyboard and mouse buttons not used for steering.\nNFR3: Performance and Availability: Out of 1000 games played, there should not be more than 1 game unexpectedly ending due to bugs.\nNFR4: Performance and Response time: The game should successfully handle and process up to 10 mouse clicks per second while not dropping below a value of 30 Frames per second.\nNFR5: Performance minimum: The game should not dropping below a value of 30 Frames per second for up to 10 cars on the playing field.\nNFR6: Supportability and Portability: The game should be playable on Windows, MacOS and Linux.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285121,
      "meta": {},
      "text": "- Usability\n\t• during gameplay the player should always be able to get information on the current location, speed and consumption of the car with the use of visual indicators\n- Reliability\n\t• the player should always be able to reset the car and collision type to a bug-free default state in case of game-breaking bugs in newer additions\n- Performance\n\t• the game should run at a minimum of 30 fps on all platforms\n- Supportability\n\t• the game should at least be able to support 10 different car and explosion types\n\t• the player should be able to report bugs in the game to the developers\n\t• a develepor only requires to change the code in one subpackage to fix a bug (no overhauling of the whole system needed)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285278,
      "meta": {},
      "text": "Usability: \n This system is usable. Because\n- The cars drive on a game board and can crash each other. \n- The player can start and stop the game. \n- There is one car controlled by the player. \n- The player can steer the direction of the car with the mouse and change its speed. \n\t\n\tThe instructions are clear and the interface is easy to learn. So this system is learnable\n\tThere are not too much and complicated actions, thus a player can easily memorize the actions.\n\tAnd since it is not complicated it is fast to use even for a new player, it shows the efficiency of the game. \n\nReliability\nThis system is robust because it is platform-independent. It visualizes different parameters of the car, e.g. the speed, consumption, and location of the car. It shows the system's ability to maintain its functions when there are changes in the environment. \n\t\nPerformance\nThe fact that the car that wins all collisions is the winner of the game, shows the system's performance. It explains how the winning process happens in the game, thus how the information is handled in the system. \n\nSupportability:\n\tThis game is supportable because it is adaptable. The determination of the collision winner is changeable during gameplay. When the circumstances change, the game adapts to the changed circumstances.\n\t The game supports different collisions, thus the system is maintainable. It gives the developer a chance to easily create a system that can cope with a changed situation. \n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287127,
      "meta": {},
      "text": "- allow the user to control the application with conventional and commonly available hardware (i.e. keyboards, mouse)\n- sign the application jar to prevent fraudulent distribution of software\n- keep the application frame-rate above 60 frames per second on systems that fullfil the minimum system requirements\n- seasonal updates involving special car skins during the year\n- open source interface for internal & community developers to allow easy changes to the game\n- elaborate documentation in an easy-to-understand language involving examples",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287855,
      "meta": {},
      "text": "Usability: User needs just couple clicks on mouse to steer the game.\n\nReliability: Security: Bumpers game is secured against the hackers, robustness: it doesnt matter how long u play the game, i won't crash.\n\nPerformance: Bumpers should support mouse movements within 1 second. That means after clicking on mouse, car should move within 1 second\n\nSupportability: Adaptablity: Bumpers should support every system updates. When a new version of MacOS is already it should still work globally, all over the world.\n\nMaintainability: It should be easy to redesign the function of Bumpers by coding work. New Architecture should be easy to implement.\n\nConstraint: Implementation requirements: Bumpers should be programmed in Python.\n\nLegal requirements: The Bumpers should conform the european digitalization rights.\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1281563,
      "meta": {},
      "text": "Usability:\n1. It should take less than five clicks to start a match or to restart the match.\n2. The status of the current game should always be visible on the screen. When the game is running, the number of remaining cars and the information that the game is currently running should be displayed.\n\nReliability:\n3. The released version of the game should stop running when a debugger is attached in order to prevent cheating.\n\nPerformance:\n4. The frame rate should be at least 30 frames per second in 95% of the time on a typical computer. It should not drop below 10 frames per second at any time during the game.\n5. The time from the launch of the application until a match can be started should not exceed 10 seconds.\n\n\nSupportablility:\n6. It should be possible to add new cars without significant changes to the existing code.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282014,
      "meta": {},
      "text": "NFR 1 Usability: The game's rules and controls have to be easily understandable.\nNFR 2: Reliability: The game can be played without it crashing 99% of the time.\nNFR 3: Performance: The program is started within 5 seconds.\nNFR 4: Adaptability: The game works on different operating systems and different versions.\nNFR 5: Maintainability: Updates take no longer than 20 minutes.\nNFR 6: Safety: Players need a pin to play on their account.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282963,
      "meta": {},
      "text": "1-NFR1 Usability:\n       *The interface should be attractive, user-friendly, and it should contain at most 3 colors. \n       *The player should be start playing after at most 3 clicks. \n       \n2-NFR2 Reliability: \n       * If the internet connection drops, the game should wait for connection for at least 5 seconds, before it \n         collapse. \n3-NFR3 Performance:\n       * when the player steers the car, the lag between the click and the change in the direction should be 5 \n         milliseconds at most.\n       * After pressing the start button, the game should start in at most one second. \n4-NFR4 Supportability:\n       * if the player rotates the phone, the screen should rotate as well. \n       * The screen should be adjustable. The user should be able to make it bigger or smaller \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283242,
      "meta": {},
      "text": "Usability: the game should have an enjoyable user interface and user should be able to start the game with 4 clicks. \n\nReliability: the game should be secure against various viruses such as trojan horses.\n\nPerformance: Response time should be very good. i.e right after the crash, the sound effect must be generated within 1 ms.\n\nSupportability: the game should be platform-independent i.e it should be supported by different platforms.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284708,
      "meta": {},
      "text": "Usability:\n1) The user should be able to start the Game without having to manouver through a lot of start screens. He shouldn't press more than 5 Buttons to configure the Game. \n2) The Player should also easily start and stop the Game. Therefore the start and Stop Button should be pretty big, e.g. 350x350 Pixels, and easy to find (centered).\n\nReliability:\n3) The User shouldn't be able to cheat, for instance changing the Player Car (fast Car) to an Overkill Car which is much faster shouldn't be possible. \n4) Furthermore the Player shouldn't have Access to the database, which is saving the Highscores of, e.g. smashed Cars, so that he cannot change the highscore. \n5) Additionally, the system shouldnt have any Problems with false input of the user. \n\nPerformance:\n6) After the Player pressed the Mouse in Order to Change the direction of the Car, the Change of direction should be visible after max. 350ms. It shouldn't Take more than 500ms to start the Game after Pressing the start Button.\n\nSupportability:\n7) It should be easy to adapt the Car/ Collision Types and maybe add a few more ones in the Future, which have new Features. Furthermore it would be great If the system was Divided Info different Subsystems, which Makes the maintenance of the Software much easier.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284727,
      "meta": {},
      "text": "Usability: the player should be able to play the game only using his mouse.\nUsability: the different car types should be represented by appropriate images in order to make them clearly distinguishable, for example for colourblind people purple and yellow cars are much better to recognize than green and red ones.\nReliability: the user should not be able to break down the system by wrong inputs, for example by typing things on the keyboard.\nPerformance: the game should support at least 20 cars driving around at the same time without breaking down the system.\nPerformance: the game should respond almost in real time, meaning the latency to be less than 50 milliseconds.\nSupportability: updates to the game should be possible in remote, meaning every device equipped with the game should receive updates (new car type for example) automatically.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284811,
      "meta": {},
      "text": "Usabilty: Start/stop and change in direction/speed/collision type should be intuitive to understand and use\n\nRobustness: All collision types should work for all combinations of cars and positions without crashing\n\nResponse time: The delay from click to execution should be less than 20ms\n\nAvailabilty: It's an offline game, so once downloaded it should be 99% available, with bugs as downtime\n\nThroughput: Subsequent games/rounds should make use of the first games setup and avoid as many redundant calculations as possible\n\nMaintainability: The code must not only be maintainable by the original developers, so the code has to be clean and understanable",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286878,
      "meta": {},
      "text": "usability :\n-It should take a maximum of 4 clicks to get into the game.\n-It should take at most 2 minutes to understand how the game works.\nreliability: \n-If the game crashes the user should be able to continue at the point before the game crashed. \n-If the user uses his phone to play he must have over 20% of his battery charged. \nperformance: \n-The game should run with 60 frames per second. \n-No lagging when player is in game. \nsupportability:\n-(Portability)The game should be playable on ios, android and pc. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286895,
      "meta": {},
      "text": "Bumpers Nonfunctional Requirements:\n\nUsability:\n\t1.) The player can start and stop the game.\n\t2.) The player can steer the direction of the car with the mouse and change its speed.\n\t3.) It should visualize different parameters of the car, e.g. the speed, consumption and\n\t     location of the car.\nReliability:\n\t4.) In each collision, there is a winning car. \nPerformance:\n\t5.) The determination of the collision winner should be changeable during gameplay and\n\t     and therefore must not crash the game during the change.\nSupportability:\n\t6.) The game should be platform independent.\n\n\n\t",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287103,
      "meta": {},
      "text": "NFR 1 Usability: The game can be started via just one click on a respective button.\n\nNFR 2 Reliability (Robustness): Even when handeling multiple car types with different functionalities, the game should not crash\n\nNFR 3 Performance (Response Time) : The change of direction of the player car, after receiving an input from the player, should be displayed within 5 frames after receiving the input.\n\nNFR 4 Performance (Accuracy): Player control inputs should only influence the movement of the player car.\n\nNFR 5 Supportability (Maintainability): Even after adding new collision types, the game should still work as intended\n\nNFR 6 Supportability (Portability): The player controls should work regardless of the platform, thus steering should be possible via touch on a screen (when not using a mouse).",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1281292,
      "meta": {},
      "text": "Usability:\n- The player should have the ability to stop and start the game.\n- The player should be able to steer the car with his mouse and influence its speed and direction.\n\nReliability:\n- The game should still function when the player enters a wrong input, e.g. here: any key on the keyboard.\n\nPerformance:\n-  The game should work smoothly without any long term freezes or crashes of the game..\n\nSupportability:\n- The game should support different collisions and car types.\n- The game should be platform independent which means that the player should be able to play the game on any platform.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1282118,
      "meta": {},
      "text": "1.Regarding Usability, the game implements a simple control system, where the car, controlled by the player, simply follows the mouse-clicks on the playing field.\n2. Except for the Mouse-Steering, there is no input by the player to protect the system against unwanted or undefined input. Even the mouse-steering should only register left-clicks, while everything else (right-click, side-buttons) is ignored by the game.\n3. The game is played in single-Player and should be always playable. As there is no need for an internet/ server connection, the player should be able to play the game 100% of the time.\n4. It should be possible to add new cars and functionalities by extending the current structure and adding the new classes to the respective parent classes\n5. The game should run on every machine, that has Java installed or is able to execute jar-files\n6. From starting the game to playing the first match, the player shouldn't have to perform more than 2 clicks with his mouse (1. start the game-file, 2. press start, to begin playing)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282317,
      "meta": {},
      "text": "Useability:\n1. When the player starts the game for the first time he/she should instantly be able to steer the car and he/she should not have to learn in a long process how this actually works. It should be intuitive to learn.\n2. To increase user satisfaction by error handling cars should not get stuck in between other cars or in the border of the game.\n3. At every point of the game the user has to able to exit the game because nobody wants to get stuck in there.\n\nReliability:\n1. The system should not react to unspecified user input to not do something it was not intended for.\n\nPerformance:\n1. The game should not take up much of the computing power of the computer of the user so that the user can still run other applications while playing the game.\n\nSupportability:\n1. The game should be able to run on Windows, Linux and Mac systems.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283300,
      "meta": {},
      "text": "1) Das Spiel soll Plattform unabhängig sein, das bedeutet, dass das Spiel Auf Windows, MAC, Android und IOS\nspielbar sein soll.\n2) Da das Spiel auf dem Smartphone sowie auf dem Computer spielbar sein soll, soll das Spiel Menu sowie zusätliche Tasten, wie zum lenken, für das Smartphone angepasst und hinzugefügt werden. \n3) Das spiel soll konstant eine mindest Anzahl von 30fps halten, weil ein flüssiges Spiel sehr wichtig für ein gutes Spielgefühl bei Bumpers ist\n4)Das Spiel sollte dem Nutzer 95% der Zeit voll funktionsfähig zur verfügung stehen\n5)Das Spiel soll individuel erweiterbar sein für den Nutzerm  z.b durch eigene Skins für die Autos.\n6)Die Reaktionszeit der eingabe, beispielsweise das nach rechts lenken, soll maximal sein ms betragen",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1284174,
      "meta": {},
      "text": "Usability:\n(1)Das Spiel soll ein Interface haben, das für User leicht zu verstehen und navigieren ist. User soll sofort verstehen, wie das Spiel zu starten und zu beenden ist, sowohl z.B. wie das Spiel auf die Pause gestellt werden kann.\n(2)Das Fenster vom Spiel soll skallierbar sein, damit das Spiel sowohl im Window-Modus, als auch im Fullscreen-Modus gespielt werden kann.\n(3)Um das Ziel des Spieles zu verstehen, was soll man machen, um gewinnen zu können, oder auch damit User einfach die Regeln des Spieles kennt, soll das Spiel in klarer Weise Informationen dazu in Verfügung bereitstellen.\n\nReliability:\n-Robustness: Das Spiel soll die Kompatibilität zu dem Environment oder/und Device, auf dem das Spiel gespielt werden soll, prüfen zu können und z.B. im Falle potentiellen Kompatibilitätproblemen eine entsprechende Warnung für User bereitstellen.\n\nPerformance:\nDas Anschalten des Spiels und die Laden vom Spielfeldes soll höchstens 20 Sekunden in Anspruch nehmen. Anzahl von FPS soll ständig nahe 60 oder mehr sein.\n\nSupportability:\n-Adaptability: Das Spiel soll sich an die Leistungsfähigkeit des Devices anpassen können, um im Falle eines \"schwachen\" Devisces z.B. die Grafikqaulität niedrieger machen zu können, damit das Spiel komfortabel und ohne Freezes zu zocken ist.\n-Portability: Das Spiel soll auf allen populären Betriebsystemen laufen können, insbesondere auf Windows (8.1, 10, 11), MacOS, Linux etc.\n \n\n",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1284917,
      "meta": {},
      "text": "There are 6 different quality requirements for the Bumpers game. One of the quality requirements is the Usability which is in this case of the Bumpers game the very easy operation of the game, especially your players car. You only have to start and stop the game and in between while playing you only have to control one car by changing its direction with the mouse and its speed. Another requirement is the Robustness which describes what happens if you for example make a wrong or undefined input. \nThe Performance in this game is always the same because it is a singleplayer game so only one person is controling a car and the others are NPCs. Another requirement what belongs to the Performance is the  Availability which is given when the game is platform independent. Last but not least there is the Adaptability which is for example the ability to change the the collision winner while playing the game.\nThe maintainability in the Bumpers game is right now given because it is possible to change or adapt things like sound effects in the game which does not really take so long.\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286096,
      "meta": {},
      "text": "Quality requirements:\n1. The game should be platform independent(Supportability)\n2. The game should support different types of collisions(Supportability, because it can be taken as though the game needs to be adaptable to different types of collisions)\n3. The player should be able to start and restart the game in three or less clicks(Usability)\n4. The game is single player and stores the minimum amount of personal data, therefore the game is secure(Reliability)\n5. The game should be able to run between 30 to 60 frames per second(Performance)\n6. The game only consists of a few clicks and then steering with the mouse, so a player can not enter a wrong input, thus the system is robust(Reliability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286645,
      "meta": {},
      "text": "Non-functional requirements for the following problem statement are: \n1) Usability: \n\t1.1) The player should be able to start the game by single click on the start button. \n\t1.2) The player can move steer the car simply by clicking on the game board, in the direction he wishes to \t\t \t \n               travel. \n2) Reliability: \t\n\t2.1) Robustness: The game does not use more than 15% of the device memory to prevent any system \t\t \n                                   failures. \n\t2.2) Security: The game has a well-written code that makes it secure against  trojan horses and other \t\t \n  \t\t\t     intrusions that might end up intruding the computer. \n3) Performance: \n\t3.1) Response time: The car used by the player steers within 50ms when the player clicks on the board. \n                                         Also the game  turns the music on and off within 10ms as the game starts and stops \n                               \t\trespectively.  \n4) Supportability: \n\t4.1) Adaptability: The game has the ability to add more cars like the fast and slow cars for the \n                                    improvement of the game.  \n                                    \t \n                            ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286647,
      "meta": {},
      "text": "NFR 1  Portability: The game runs on the three major desktop operating systems.\n\nNFR 2 Visual design: Images of real world cars are used to represent the in-game car so that the user can see where the car is. Animated icons visualize the speed and fuel consumption of the car.\n\nNFR 3 Font size: The fonts used in the game are at least 14pt\n\nNFR 4 Audio: The game plays music during the game and a winning or losing sound depending on whether the player has won or not.\n\nNFR 5 Wrong inputs: The car can only be controlled by the mouse and the menu can only be navigated by the space bar, the enter key and the keyboard arrows. Other inputs are ignored.\n\nNFR 6 Loading time: The loading time of the game is below 0.5 seconds on consumer laptops that aren't older than 5 years.\n ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287092,
      "meta": {},
      "text": "Usability:\nThe player needs at most 4 clicks to start a game\n\nReliability:\nThe game mustn't crash when the player changes their car type\nThe game mustn't crash when the player changes the collision type\n\nPerformance:\nThe player's input shall be processed in less than 200ms\nThe game can only be played by one player at the same time\n\nSupportability:\nNew car types can be implemented within 15 min",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287905,
      "meta": {},
      "text": "Usability: \n- the player can start and stop the game using a keyboard shortcut\n- the player can change the determination of collision winner (even during gameplay) using a keyboard shortcut AND through the menu option\n- the start menu should should show all the available car types and allow the user to pick one or to choose randomly\n\nReliability: \n- the game should have an auto-save function in case the user accidentally close the application\n\nPerformance: \n- the game should be able to handle at least 15 simultaneous car crashes\n\nSupportability:\n- the game should allow the players and/or developers to change to a previous version of the game (e.g because the new version have more car types, but the collision takes 0.2s more to be detected / new version tend to lag)",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280658,
      "meta": {},
      "text": "- Usability: There are only two buttons in the game window. Both are clearly labled.\n- Robustness: \n\t- The game will pause while the game window is not selected. \n\t- It will only react to mouse inputs on the game board and button presses. Keyboard inputs are ignored.\n- Performance: \n- Adaptability: ",
      "score": 41.7,
      "language": null
    },
    {
      "id": 1282020,
      "meta": {},
      "text": "usability:  -player can start and stop the game\n                - the player controls one car\n                - the player can steer the direction of the car with the mouse\nsupportability: \n                - game should be platform independent\nperformance:\n                - the game should run smoothly\nReliability:\n               - game should not give out errors",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282576,
      "meta": {},
      "text": "NFR1 Target platform: The game should be playable on Mac (iOS) as well as Windows OS.\nNFR2 Usability: Every feature should be reached in maximum 3 clicks.\nNFR3 Performance: The game should open in under 10 seconds after the user clicks it.\nNFR4 Maintainability: Each feature of the game must be documented. Another programmer should give his ok to the documentation.\nNFR5 Conformance to guidelines: The game should have conformance to the usability guidelines for the operating system chosen.\nNFR6 Availability: The user can use the app 99.9% of the time.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283560,
      "meta": {},
      "text": "Usability:\n- Bumpers should have a short tutorial or an overview over the steering to introduce the controls to the end user\n- The game needs to have an intuitive control, which is used by most car games, so the user doesn't have problem learning the controls and memorizing it\nReliability:\n- The game should not crash and all edgecases, that would potentially reveal an exception must be covered\nPerformance:\n- The game mustn't have big input delay, so the player can react to potential crashes and dodge them in real time\nSupportability:\n- The game should limit itself to the lowest amount of disc space, since it is a small application (Under 25 Mb)\n- The game musn't be played on one operating system only. It should be playable on multiple platforms\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284407,
      "meta": {},
      "text": "Usability: There should be no more than 5 different inputs.\nUsability: Every direction input steers the player's car into exactly the pressed direction.\nReliability: It is impossible to get out of the gameboard's bounds, no matter what input you use.\nPerformance: The delay between input and result is less than 0.25 seconds.\nPerformance: The game is offline and therefore available 100% of the time.\nSupportability: The game is platform independent.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284441,
      "meta": {},
      "text": "1) Usability: Bumpers can be played based on very few simple instructions in the beginning.\n2) Usability: Whenever the player has questions concerning different aspects about  the game, they can click on a question icon at the top right corner of the frame(example:there can be links for the faq ).\n3) Reliability: The game should maintain a maximum number of code executions and if the wrong input is given(example: this number is passed), it terminates.\n4) Performance: Instead of being single-threaded ,Bumpers can be multithreaded(example:a game thread and a render thread), so as to prevent a slow loading of the game on a device.\n5) Adaptability: The system can be changed, so the game becomes more specifically related to certain users--the mechanisms \"adapt\" to the players behavior .(For example, when a car is being hit three times in the same position by another one, it recognizes the pattern and raises up a shield where it is being hit). \n6) Supportability(internationalization): Bumpers can be easily modified, to meet the needs of users in many countries(In Settings->Language the language of the game can be changed based on the requirements,nationality of the users).",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284573,
      "meta": {},
      "text": "NFR 1: The car should be able to be controlled using only one mouse button.\n\t\t(-> Usability)\nNFR 2: Only two button clicks are required to restart the game.\n\t\t(-> Usability)\nNFR 3: The program should be able to register and handle multiple mouse inputs from different mice at once. \n\t\t(-> Reliability)  \nNFR 4: The program should run at a minimum of 30 frames per seconds on all desktop computers.\n\t\t(-> Performance)\nNFR 5: The program should be able to handle multiple collisions at once.\n\t\t(-> Performance)\nNFR 6: The application should be supported and able to run on Linux, Windows and MacOS.\n\t\t(-> Supportability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284914,
      "meta": {},
      "text": "NFR1: Usability: The player can change the colllision type in under 3 clicks.\n\nNFR2: Robustness: Clicking outside the gameboard does not influence the steering of the car.\n\nNFR3: Response Time: After pressing start, the game starts in less than 1s. \n\nNFR4: Adaptability: The game music can be played on different audio devices like speakers or headphones.\n\nNFR5: Performance: The game can calculate 5 direction changes per second. \n\nNFR6: Maintainability: New collision types can be added in under 10 minutes",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285587,
      "meta": {},
      "text": "Usability (Learnability): \"The user shouldn't need previous knowledge to learn to play. He should be able to learn while playing.\"\nUsability (Satisfaction): \"The car images should be attractive and driving the car should be satisfying.\nReliability (Robustness): 99% of the time, the game should work as fast and smooth as expected.\nPerformance (Response time): The average loading time of the game should be below 20 seconds.\nPerformance (Availability): The user should be able to play Bumpers whenever he pleases.\nSupportability (Adaptability): The user should be able to change the car type he plays with.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285599,
      "meta": {},
      "text": "-Usability : The game should be easy to use and the player should have no problem remembering how to play it.The game doesn't support so many instructions (you have only to move the mouse and click on it that's all.).\n-Performance : The system should be able to move cars so quickly after player mouse steering.\n-Maintainability : The game should be able to support updates and adding new characters(I mean here new type of cars with new characteristics) or new Collision types .\n-Portability: The game can be moved from one OS to another one.\n-Reliability: The game can tolerate when the player enter a wrong input. (ignore Keyboord keys)\n-Performance : Bumpers must be able to crash simultaneously.\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286618,
      "meta": {},
      "text": "1. Usability: Bumpers can be played without reading an instruction, is easy to learn\n2. Reliability: Bumpers should not crash in more than 1 out of 1000 executions\n3. Performance: The game board should support an update of 30 frames per second.\n4. Performance: The cars direction should be changeable within 1/15 sec after steering.\n5. Maintainability: Bumpers must be re-designable to a client-server architecture.\n6. Portability: Bumpers can be moved from Windows to IOS and Android\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286626,
      "meta": {},
      "text": "1. Usability\n1.1. \tThe game can be started in less than 10 clicks, including the configuration of all possbile game settings.\n1.2. \tTo change the settings of the game, no typing is required and all the functions/settings can be \t\t\t\n\tactivated/deactivated thorugh mouseclicks.\n\n2. Reliability\n2.1. \tUsers are only able to enter a username containing characters from a to z (no special characters like \"/\") or \t\t\n\tdigits to avoid malfunctions in the database.\n2.2.\tUsers have to save their account with a password which has to be at least 10 digits long. \n\n3. Performance\n3.1. \tThe delay between clicking on the screen and the resulting reaction is alsways below 1 second.\n\n4. Sustainability\n4.1.\tA new graphic design for the entire game can be integrated in less than 10 minutes by a developer. \n\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286821,
      "meta": {},
      "text": "- The user should be able to start and stop the game within one click (Usability)\n- At the end of the game the user should be notified about whether he lost or won the game (Usability-> \"Visibility of system status\", in Nielsen's 10 heuristics)\n- The response time for a car steering click in game shouldn't be higher than 500 milliseconds (Performance)\n- The game should be able to be expanded by new car and collision types (Supportability)\n- The game should be able to hold a minimum of 25 frames per second while there are up to 20 cars on the gameboard (Performance)\n- Only left clicks on the gameboard should be registered as direction steering clicks of the car (Reliability)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287005,
      "meta": {},
      "text": "Usability:\n1. User can control the car by clicking the mouse with different frequency\nReliability:\n2. The core function's classes should be invisible for unauthorized edit-operation.\n3. Game can run on windows 2000.\nPerformance:\n4. The crash can give back result within 0.01 second.\n5. The collision can detect the winner in 99% of crash cases\nSupportability:\n6.The extension of collision type can be finished in 30 Minutes.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287853,
      "meta": {},
      "text": "The game should fulfill criteria from the categories:\n1. Usability: The game should be easy to learn, that means there needs to be a short tutorial that explains the mechanics of the game in less than 5 minutes\n\n2. Reliability: The game should be able to detect more then 99% of the collisions\n\n3. Performance: The game should load in less than 2 seconds\n\n4. Supportability: The code needs to be documented so that its wasy to modify it later and add addititional functionality",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1281060,
      "meta": {},
      "text": "Usability:\n- Any user who is playing the game has, in case of a crash, a clear idea of who has won the crash.\n- After a game is finished the player can choose to play again without having to restart the program.\n- Other cars cannot spawn inside a 100-pixel radius of the player's car so that the player cannot get spawn trapped by the computer-driven cars.\n- The start-up of the game should not take longer than 5 seconds.\n\nReliability:\n- The game can handle different user input than the intended one without crashing (e.g. Keyboard-Input).\n- The number of times the program crashes per 1000 uses should be less than 10.\n\nPerformance:\n- The game can support multiple sound effects at once e.g. background music + crash sound\n- The game reacts to user input in less than 13ms (which is the lower bound for latency recognizable by a human).\n- On mobile devices, the app should, after one hour of playing, not use more than 50% of a fully loaded device's battery percentage.\n\nSupportability:\n- Weekly or biweekly updates (e.g. to support new cars) and bug fixes can be made by the developers with a downtime of fewer than 30 minutes per week.\n- The user should have the opportunity to make a bug report with less than 5 klicks so that the developers can get notifications of existing bugs.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1281295,
      "meta": {},
      "text": "1) Usability Category:\n- Player is able to steer his car using at most 1 control mechanism, either a mouse or his laptop's touchpad.\n- Player has at most 2 control buttons, the start & the stop buttons, to control the status of the game. \n\n2) Reliability Category:\n- Any computer system with the code and code dependencies installed should be able to run the game.\n- The game should not run any parallel thread requesting access to any local folder in the player's machine such that no private information on the player is leaked.\n\n3) Performance Category:\n- The game supports 1 player at a time.\n\n4)  Supportability Category:\n- The game should be developed in a mainstream programming language (e.g. Java) such that the maintainability of the project is enhanced.\n\nObservation: Some of these requirements come from a similar questions from my last year's answer.\n(Reference: https://artemis.ase.in.tum.de/courses/121/text-exercises/4099/participate/776333)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281468,
      "meta": {},
      "text": "1) start game\n2) stop game\n3) player should win all collision to win the game\n4) cars should drive on a game board\n5) only one car is steer by the player\n6) the player are able to change the speed of the car",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1282513,
      "meta": {},
      "text": "Usability:\nThe player needs at most 6 inputs to start the game.\nReliability:\nThe crash sound is played in at least 5 consecutive car collisions.\nThe speed indicator of the player car is correctly updated 2 times in a row when the player changes the speed.\nPerformance:\nThere are at least 60 frames per second when playing the game.\nThe time between the player colliding with another car and the winner of that collision being determined is at most 100 milliseconds.\nSupportability:\nThe game works on Windows and Linux systems.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282601,
      "meta": {},
      "text": "NFR1 Usability: The user must be able to complete the game tutorial within 5 mouse clicks \nNFR2 Maintainability: The game can be maintained using at most 30 minutes each week\nNFR3 Performance: The game must be able to run with 50 users at the same time.\nNFR4 Availability: The availability of the system is at least 99.7%\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1282633,
      "meta": {},
      "text": "NFR1 Usability: When played on a smartphone the game must start in landscape form.\n\nNFR2 Usability: The player should be able to start the game in 1 click.\n\nNFR3 Reliability: The game should not need more than 100MB of the RAM to run properly.\n\nNFR4 Performance: The game should start in 40ms ±10ms.\n\nNFR5 Supportability: The game should have a monthly update that takes no longer than 3min \n\nNFR6 Supportability: The game should run properly on Windows, Mac, IOS and Android.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283070,
      "meta": {},
      "text": "Usability: \n1. The interface should have high signal-to-nosie ratio and only contain the important infomation clearly such as slowcar image, fastcar image, stop button, start button. All interactions should be completed in less than 2 clicks.\n2. The player should get infomation if they win the collision or not after each collision and notifications when they win or lose the game. The speed of the user's car should be viusalized on the gameboard, for example a car dashboard.\n3. The player should get small descriptions which less than 30 word about the new cat type, when they frist time drive them.\n\nReliability:\n4. The car which can drive on the gameboard should have maximal speed and minimal speed. Every car include user's car cant exceed the speed limit.\n\nPerformance:\n5. All the cars move on the gameboard 25 times in a second and the collsions will be detect also with 25fps. \n\nSupportablility:\nMaintainability:\n6. The user should get a interface which can change their car type and collision type. The change of car type or collision type cant take more than 1 minute.\n\n\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285306,
      "meta": {},
      "text": "Usability:\n - The player only needs one click to steer the car in another direction.\n -The game can be started with one click.\n\nReliability:\n(Safety)\n-The game can only be played if the player clicks slower than 12 clicks per second \n-The game can be played offline\n\n\nPerformance:\n-The Game can support up to 20 different collisions per second.\n(availability)\n-The Game can be assed at 100% as it can be played offline and therefore has no expected downtime\n(adaptability)\n-The game is platform-independent and can therefore adapt to any Board size or Platform.\n\nSupportability:\n- The Game is Platform indented it can be installed on:\n       +Windows 10,11\n       +IOS 13,14,15\n       +Android 10,11\n       +Mac OS 10,11,12\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286232,
      "meta": {},
      "text": "Non functional requirements: \n\nUsability: - the player is always able to start or stop the game with the click of one button\n\t       - the game plays a sound and shows a visual effect when two cars crash\n\t       \n\nReliability: - it is impossible to drive the player car out of the gameboards bounds\n\nPerformance: - if the player changes the speed of his car mid gameplay the delay of that change is below 0.25   seconds\n                    - the game is always available\n\nSupportability: - the game is platform-independent",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1286966,
      "meta": {},
      "text": "Usability: The player should be able to start the game immediately with a single mouse click, after opening the game.\n\nThe player car should not need multiple mouse clicks in order to be steered, but this should be done through a single one.\n\nReliability: Wrong user inputs, such as moving the mouse outside of the game board should not be recognised and not crash the game.\n\nPerformance: The game should be able to handle up to at least 10 cars on the game board and still manage to identify collisions effectively.\n\nSupportability: The game should be easily maintainable. Hence classes should be assigned to appropriate     \t\t\t\t\tpackages and named intuitively.  \n\nThe code should make clever use of inheritance, in order to make it easy to integrate new requirements into the code. For example the introduction of a new type of car or collision. Inheritance will in this case help minimise code duplication and make the process of adaption a lot quicker.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287056,
      "meta": {},
      "text": "- Usability: Visualize speed, consumption and location of the car\n- Usability: The player should be able to easily start & stop the game.\n- Usability: There should be a background music, indicating the game is currently running.\n- Reliability: The game should support different collision types and be able to dynamically switch between them without breaking.\n- Performance: Player should be able to control their car accurately and immediately see their action take place.\n- Supportability: The game should be platform independent.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287540,
      "meta": {},
      "text": "Non formal requirements\nUsability:\nThe user should be able to start the game within 5 clicks.\nThe user must be able to find a manual of the game within the game.\nReliability:\nIf the user presses the right click of the mouse while playing the game it should detect it as a request where the car should go and it shouldn´t show the menu which appears normally when pressing the right click.\nAfter completing one game the player must be able to start the game again.\nPerformance:\nThe game should react to a mouse click of the user within 50 ms.\nSupport ability:\nThe Software must be delivered as a mobile app into the Google Play Store.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281574,
      "meta": {},
      "text": "-the Game should be easy to understand and not be complicated.\n\n- You should quickly see what you have to do and where to click in the menu\n\n- the game souldnt tolerate any game bugs or infinity loops\n\n- the game shouldnt be lagging and have a fast response time if you interact with the game\n\n- the game should be platform independent to play it on every device\n\n- the game should always work the same, so that the player ahs the ability to improve his playstyle",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282295,
      "meta": {},
      "text": "Usability:\n-parameter visualisation\n-possibility to change speed\n-possibility to change collision winner\nReliability:\n-game testing (find problematic code that can lead to crashes)\nPerformance:\n-frame rate optimisation (maybe not 8 k textures)\nSupportability:\n-platform independency (even if noone would game on a mac) ",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284524,
      "meta": {},
      "text": "quality requirements (non-functional requirements) for the Bumpers game: \n\nUsability: \n    - After opening the game, it should take the user only one klick (on the start button) to start the game. (This requirement is supposed to simplify the game and make it easy for beginners to get started playing.) \n    - Satisfaction/user experience: At the start and the end of the game there should be a maximum of 15 words displayed on the screen. (This requirement should increase the satisfaction of the user with the game, since he wants to play the game and not spend much time reading.)\n\nReliability: \n    - Security: The game needs to be secured from attacks. Example of an attack from which the game needs to be protected: It should not be possible for a user to hack into another user's game and change the functionality of the game (e.g. evaluation of winner, car speed). \n\nPerformance: \n    - At least 10 000 users should be able to play Bumpers at the same time.\n    - When a crash occurs the crash sound needs to be played within one millisecond. \n\nSupportability: \n   - Maintainability: The system behind the game needs to be easily modified by a developer. (This is especially important due to the fact that Bumpers is a game and games need to be updated from time to time in order to add new features that keep the game interesting for the user.) ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284958,
      "meta": {},
      "text": "Usability:\n- Starting the game from a stopped state should only take one click\n\nSafety:\n- The game should not crash the players computer nor delete any files\n\nResponse time:\n- When the player clicks to change the cars direction, the input lag until the car changes its direction should be less than 40ms\n\nAccuracy:\n- The difference between the direction the player clicked  in and the movement of the players car should be less than two degrees\n- When a collision is detected, the distance between the closest pixels of the cars should be no more than 15 pixels\n\nPortability:\n- The game should run on at least Windows 10 and above, Mac OS 10 and above, and Ubuntu 18.04 and above",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284981,
      "meta": {},
      "text": "1. U - The game can be started and stopped at any time within a maximum of 2 clicks.\n2. R - The cars can tolerate a speed increase of at least 500% and decrease of 50% of the initial speed.\n3. R - The system can tolerate at least 10 clicks / inputs per second by the user.\n4. P - The visualized parameters (speed, location...) are updated at least 10 times per second.\n5. P - The game runs at 30 frames per second or more.\n6. S - The detection of collisions works correctly for every type of collision and at every speed. \n\n\nLegend:\nU.. Usability\nR.. Reliability\nP.. Performance\nS.. Supportability",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285247,
      "meta": {},
      "text": "NFR1 Usability: The start and the stop button will always be displayed at the upper right corner. The start button left to the stop button. (Memorability)\n\nNFR2 Reliability: If the player changes the evaluation method for the determination of the winner of a collision during the game, it should not crash and the new determination should immediately be applied .(Robustness)\n\nNFR3 Performance: If the mouse is pressed, it should at maximum take 2ms for the program to adapt the direction of the car in this direction.\n\nNFR4 Supportability: If the game is played on a smartphone, the program should automatically adapt itself to the new aspect ratio.\n\nNFR5 Usability: The displayed parameters of the car should be adapted to different units, depending on which country the player plays from ( e.g Kmh vs mph, L vs oz,...) (Learnability/user experience)\n\nNFR6 Performance: It should not take longer than 1 ms to start the game, if the player presses the start button.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285320,
      "meta": {},
      "text": "NFR1 : Must have moving cars that move in two different speeds\n\nNFR2 : Cars must crash in each other and be able to collide. They must bounce off the borders by default \n\nNFR3 : If two cars collide, their collision must be evaluated with the right before left rule and a sound must be played. The car at the right wins. The car at the left loses and is crunched (speed set to 0, thus disabling movement). \n\nNFR4 : Player must be able to start and stop the game and steer his car with his mouse and control its speed.\n\nNFR5: There must be different cars and collision types which are interchangeable.\n\nNFR6 : The game must play music and it must start and stop with the game.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1285413,
      "meta": {},
      "text": "1.  The game doesn't freeze or e.g. make the computer freeze. (Reliability)\n2. The music is tasteful and sets the appropriate mood for the game and (possibly) can be muted by the player (Usability- Satisfaction/ User experience)\n3. Multiple independent collisions can take place at the same time (Performance)\n4. The window that opens when the game starts shouldn't be too big for the screen (Supportability) \n5. The game can be played on full-screen (Usability - User experience) This NFR isn't implemented in our current version of Bumpers, but it would be a nice addition for the experience \n6. Player's car isn't too slow, namely it reaches a nearby point that has been clicked to in at most 5 seconds (Performance)",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285989,
      "meta": {},
      "text": "NFR1: Usability: The user should be able to start the game after at most two clicks and stop the game with one click.\n\nNFR2: Conformance to guidelines: The system design should resonate with the usual usabilty guidelines like Nielsen's usability heuristics.\n\nNFR3: Robustness: The system sould not crash, if the user presses a wrong key or mouse button. Neither should the game be stopped.\n\nNFR4: Response Time: When steering the car, the system should respond to a mouse click after at most 50 milliseconds, on a laptop with regular hardware. \n\nNFR5: Maintainability: The system should be easily modified. New car and collision types can be added in a short period of time, depending on the complexity of the new car and collision type.\n\nNFR6: Performance: The game should evaluate collisions every 20 milliseconds at most.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286002,
      "meta": {},
      "text": "- Usability:\n  1. Movement and general game mechanics should be explained when playing for the first time, with the possibility of showing this tutorial at all times on the starting screen. \n- Reliability:\n  1. Players can only start the game with at least 2 cars and a maximum of 100 cars on the playing field. \n- Performance:\n  1. Game has to handle at least 20 cars with 30fps.\n  2. Game has to have no longer than 0,5s loading times on an average 500€ Laptop in 2022. \n- Supportability:\n  1. Developers can implement bugless new car types in one working day(8h). \n  2. Events are logged for the current/last session in a separate log file. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286905,
      "meta": {},
      "text": "Usability:\n- It should be possible to start the game with one click\n- The colors of the cars must be in enough contrast to the background and to each other that they can be clearly distinguished\n\nReliability:\n- The game should run locally and must not rely on any external server\n\nPerformance:\n- Mouse clicks should lead to a visual feedback within 100 milliseconds\n- With 10 cars, the game should still run at 60fps without noticeable stutter\n\nSupportability:\n- The game should be platform independent",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287898,
      "meta": {},
      "text": "* The car steering response time should not exceed 150 milliseconds (Performance)\n* the GUI elements (speedometer, consumption & location UIs) should not overlay the game board elements (the cars) (Usability)\n* The game must support English, French, German and Arabic languages (Supportability)\n*  The game should have automatic checkpoint saving at 20 second interval , to save current progress (Reliability)\n* The game GUI should run at least in 24 Frames per second (Performance)\n* The game should support adding custom game and crash sounds by the player ((Supportability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280654,
      "meta": {},
      "text": "Usability: Start the game with a maximum of 2 interactions by the player.\nThe Player should be able to move the car single handed. \n\nReliability: The game can handle interruptions caused by closing ungracefully. The player should not be able to crash the game by deliberate starting and stopping of the game.\n\nPerformance: The game can handle a minimum of 50 cars on the gameboard.\n\nSupportability: \nA single developer should be able to add new car type with a corresponding collision type within one work day.\n\n-PS: Thanks for reading <3 have a nice Day! (hint: stay hyrdrated)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280933,
      "meta": {},
      "text": "Usability:\n- The user needs one click to start the game\n- The user needs one click to end the game\n\nReliability:\n- The frequency of occurrence of errors in a collision should be 0 percent.\n\nPerformance:\n- After clicking the start button, the application has to start within 5 seconds.\n\tAvailability:\n\t\t- The system is available in 95 % of the time.\nSupportability:\n- New car types can be added when needed.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281275,
      "meta": {},
      "text": "Usability\n-------------\n- Once the main window of the game is open, the user should be able to start a new round with just a single click on the \"start\" button.\n- The size of the game window needs to be changeable by the user.\n\nReliability\n---------------\n- To avoid security issues, the transmission of bug reports should be encrypted.\n\nPerformance\n-------------------\n- The time difference between a mouse click during the game (to change the driving direction) and the actual direction change should not extend 5ms.\n- The amount of crash reports coming from a single user should not exceed 2 / week.\n\nSupportability\n---------------------\n- The game needs to run on Linux, Windows, and MacOS machines in the same way, i.e. with the same buttons and functionalities.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281562,
      "meta": {},
      "text": "Usability\n1. player can steer the direction with the mouse and change its speed \n2. parameters of the car are displayed on the screen, e.g. the speed, consumption, and location of the car.\nReliability\n1. platform-independent\nPerformance\n1. there are different collision types\n2. when the game is started, music is played\nSupportability\n1. determination of the collision winner should be changeable during the gameplay\n\n\n",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283635,
      "meta": {},
      "text": "Usability:\n- The player can change the cars direction with only one click\n- The player car should not be spawned inside another car so that the player looses instantly\n\nReliability:\n- The player should not be able to change the speed to go backwards (negative number)\n\nPerformance:\n- The game should run with at least 60fps 99% of the time\n- Loading into the game should take less than 3 seconds\n\nSupportability:\n- The key which the player uses to steer the car can be remapped with just one parameter change in the source code",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284984,
      "meta": {},
      "text": ". Usability : \n\t- The different parameters of the car (the speed, consumption, and location) should be visualized while playing the game.\n\t- A button for starting the game and another one for stopping the game shall appear in the corner with dimension of at least 20x40 px.\n. Reliability :\n\t- When entering the speed value, it must not accept negative values.\n. Performance :\n\t- The game must support up to 100 cars in a single game.\n\t- A minimum of 30 fps is expected regardless of the user's computer. \n. Supportability :\n\t- The game should be platform independent.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285014,
      "meta": {},
      "text": "NFR1 start game: The user should be able to start the game with on click.\n\nNFR2 recognizing cars: The User should be able to recognize all different cars after three games.\n\nNFR3 min fps: The game should always have a minimum of 25 fps.\n\nNFR4 easy modding: Every java programmer should be able to create a new collison type within an hour.\n\nNFR5 platform independet: The game should run on every platform without minimal adaption.\n\nNFR6 collision change: The user should be able to change the collision type within two clicks.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285176,
      "meta": {},
      "text": "Usability:\n- the user interface should have at most 3 buttons, so it is easy and fast to get familiar with the gui for new players\n\nReliability:\n- it should be possible to play the bumpers game 100 times in a row without crashing and without any error messages\n\nPerformance:\n- the game should work smoothly with atleast 30 FPS with 20 bumper cars or less\n\nSupportability:\n- the game should go into dark mode from 18-6 o'clock\n- the code should be split into at most 10 files, to be able to fix bugs very quickly\n- the game should work on computers with 2+ GB RAM",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285884,
      "meta": {},
      "text": "1) The player can pause the game with a single button key press (not just via an UI button) (Usability)\n2) When the player clicks on the close button (the \"x\" in the top right corner), they are asked for confirmation so they can't accidentially quit the game (Reliability)\n3) The game starts in less than 2 seconds on any machine that was modern 10 years ago (Performance)\n4) CPU utilization on a modern low end CPU is at most 10% (Performance)\n5) The game supports automatically installing updates via the internet (Supportability)\n6) The game supports resizing the window and adjusting resolution as long as the aspect ration is kept (Usability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285983,
      "meta": {},
      "text": "Bumpers Nonfunctional Requirements\n\nUsability:\n•\tUsers can interact with mouse\n•\tStart and Stop buttons shall be at least 2*1 cms^2 big\n•\tCrash and Background music shall be different\nReliability:\n•\tGame outcome shall not be visible to other players\nPerformance:\n•\tWinner shall be displayed on screen within 3 seconds\nSupportability:\n•\tUser can play on any platform with a mouse\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280416,
      "meta": {},
      "text": "1. Usability:\n   the player need at most 5 clicks to start the game.\n2. Usability(Error handling)\n    if error happend, the game will go back to the start-page\n3. Usability:\n     The game should visualize different parameters of the car, e.g. the speed, consumption and location of the car. Text shall appear in letters at least 1cm high.\n4. Reliability(Security):\n   the game shall under no circumstances leak PIN numbers or account information to unauthorized users.\n5. Performance(Response time):\n    when the player steer the direction of the car with the mouse and change its speed, the system shall be reacted in less than 1 second.\n6. Performance(Availability):\n    the downtime is at most 60 minutes per week.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280439,
      "meta": {},
      "text": "Usability requirements\n1) The game should clearly point out which is the car that the player is driving\n2) On the first page there should be a help button, so that if someone has a problem or a specific question for the game they can always check\n\nReliability requirements\n1) The game doesn't lead you to any external links that may damage the user\n2) If there's a need to registration, the game would keep the user's data safe\n\nPerformance requirements \n1) The game won't need more that 1 second to start from the pressing of the start button\n2) When clicking the mouse the respond from the car will be less than one second\n\nSupportability requirements   \n1) When there's a bug in the game, the game developers should get an instant notification, so that the bug can be fixed as fast as possible\n2) There should be an email hotline, so that when an individual player has a problem, their problem can be fixed almost instantly",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280452,
      "meta": {},
      "text": "Usability: \n- it has to be possible to start the game with one click. \n- it hase to be possible to remember the controls after one time playing the game.\n\nReliability:\n- the game should not crash when the user clicks outside the gameboard\n- the game should not crash when the user presses anything other than the mouse\n\nPerformance:\n- The game should always be available to play if it is installed\n\nSupportability:\n- It should be possible to modify the game, for example to add new features ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281599,
      "meta": {},
      "text": "1.After one year the player should still be able to playe the game.\n2.User needs at most 3 attemps to learn a cars behavoirs or a collision rule.\n3.If the pc crashes the Bumper game must be able to continue with the state, where it was before.\n4.The Bumper game should be able to handle at most 6 different car types at the same time (six different car types can be on the gameboard).\n5.The Bumper game should be updated every week , therefore the availability should be at least 99.4%, that means the downtime is at most 60 minutes per week (10020/10080).\n6.The Bumper game can run on all windows computer.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283807,
      "meta": {},
      "text": "Usability:\n\tNFR1: the Car Can be steered with at most 2 buttons and mouse movment\n\tNFR2: the the game can be stopped at any point during the game \nReliability\n\tNFR3: the The game wont crash when the user presses the wrong buttons\nPerformance\n\tNFR5: the the user input should be processed within 70 ms\nSupportability\n\tNFR6: the it should be possible to add a new Collision and Car Type to choose from in less then 30 minutes\n\t\t(if the classes for collision and car type are already written)\n\tNFR7: the the game should run on Windows, Linux and MacOs operating systems.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283976,
      "meta": {},
      "text": "NFR1 Usability: The game should be easy to play and learn, and the player should not need more than 5 keys to play the game.\nNFR2 Usability: All menu options and actions should require a maximum of 3 clicks from the user.\nNFR3 Reliability: The game can be replayed an infinite amount of times without crashing and without forcing the player to restart the game.\nNFR4 Performance: The game should not consume more than 1gb of RAM.\nNFR5 Performance: The game size should be less than 20mb.\nNFR6 Supportability: The game should work on all operating systems (linux-windows-macOS)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284674,
      "meta": {},
      "text": "1. Requirement (Usability): \t\tThe player should be able to steer the car and change the speed only by\n\t\t\t\t\t\t\tusing the mouse.\n2. Requirement (Reliability): \t\tThere should not occur errors of any kind (e.g. endless loops, stack-\n\t\t\t\t\t\t\toverflow or exceptions)\n3. Requirement (Performance): \tThus the player steers the car with mouse, there should not be any delay in \t\t\t\t\n\t\t\t\t\t\t\tthe program.\n4. Requirement (Supportability):\tThe player should be able to stop the game, even when it already started.\n5. Requirement:\t\t\t\tThe program should be runnable on any device and platform \t\t\t\t\n6. Requirement:\t\t\t\tThere should be background music and sound effects ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284770,
      "meta": {},
      "text": "1) There should be no more than 5 interactive elements at any time (buttons, scrollbars, text fields etc.). (usability - learnability)\n2) The player should be able to navigate the game without using the keyboard (usability - learnability)\n3) Current state of the game should not be lost if the game is unexpectedly shut down (reliability - safety)\n4) Reaction of the players car to the players click should take less than 0.01 second. (performance - response time)\n5) The collisions should be pixel-accurate (no space around the car that would cause collisions) (performance - accuracy)\n6) The game should run regardless of connection to the internet. (supportabilty - adaptability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287334,
      "meta": {},
      "text": "1. At the beginning of the game a player can read instructions for the game and especially find out about the collision type used in the game.(Usability)\n2.The game might be unstalled on Laptop and Phone(Supportability Adaptability)\n3. A user can create a profile in this game to save the best score(Usability)\n4. a collision winner should be evaluated within 1 second(Perfomance Response time )\n5.A user should enter the passwort to start the game to avoid a using of the other person's account(reliability security)\n6. A user should be able to reset the passwort only with a verification with e-mail adresse. (reliability security)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287483,
      "meta": {},
      "text": "Usability : \n- Follow conventions of game design so the user interface is intuitive and easy to learn.\n- Game should inform players about the controls appropriately.\n\nReliability\n- Game shouldn't crash randomly\n\nPerformance\n- Game should be able to run at minimum 30FPS at all times.\n- Response time shouldn't be too long, or the game won't be enjoyable to play.\n\nSupportability: \n- Add proper documentation to support the code will help maintainability of the project.\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282479,
      "meta": {},
      "text": "Usability: \t\n\t1. Player can play on diffrent systems or devices, such as PC or mobile phone\n\t2. Player shall get appropriate feedback on current game progress. (Lost or Won)\nReliability: \n\tgame shall not have any kind of lags or unwanted interferance.\nPerformance:\n\t1. Crash sound shall not come too late or too early. \n\t2. the players car shall react almost immedeatly to the players instructions\nSupportability:\n\tnew features should be able to be added to the game without too many problems and complications\n\t\n",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1283336,
      "meta": {},
      "text": "1) A player should be able to get from his home screen into a new bumpers round with a maximum of 5 interactions with his device. An interaction could be a mouse/touch click or to type something on the keyboard.\n\n2) If however an error in the application occurs, the system should try not to show it to the player and not to interrupt or disturb the current round whatsoever. If the system cant handle the error, an understandable error message should be shown.\n\n3) The game should be available to play at all times. If a new update for the application exists, the application should only inform the user about the update but it should still be playable without performing the update.\n\n4) The application should be easily maintainable by a developer so that updates in the games functionality can be implemented easily within a given scrum sprint period. Also if another development team wants to implements a new functionality or fix a bug, it should be able to do so without having to study the source code for hours.\n\n5) The application should be supported on all operating systems. So it should not only be a desktop application for windows, but also for macOS and linux. Furthermore should the game be supported on all smartphones and tables.\n\n6) The game should have no lags so that it feels naturally to use. Therefore there are no unforseen events for the user which will increase the quality of the application. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284101,
      "meta": {},
      "text": "1.) The game should be platform independent, So that the users can install and launch this on all their devices. The category is Supportability.\n2) The play session should has a duration at most two minutes. The category is Usability.\n3) User should use a mouse and a keyboard to interact with a game and control the cars.  The category is Usability.\n4) If the user wants to shut the game down, before closing, the app should show the window with exit confirmation  and save the result. The category is Reliability\n5) The generation of the system's cars should take at most 0.5 sec. The category is Performance\n6) Before the game begins, the player should have a choice with which car he wants to start. The category is Usability",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284209,
      "meta": {},
      "text": "Usability: \n1. The game should only have three buttons: start, stop, explanation. (The more buttons there are, the longer it takes for a player to learn how to use the game.) (learnability)\n2. By clicking on the explanation button, a video should appear, in which the user learns the rules of the game and how to control the car. The length of the video should be under 90 seconds. (An explanation-video is often more enoyable for the user, than having to read a long text, especially for children.) (user experience)\n3. The game should be available in german, english and at least three other languages, the explanation video has to be in the according language as well. (user experience)\n\nReliability:\n4. The system can tolerate up to 100 cars in one game. (The game wouldn't be nice to play, but the system should be able to handle 100 cars at once, without crashing.) (robustness)\n\nPerformance:\n5. By pressing the start button, the cars should start moving in under one second. (Response time)\n\nSupportability:\n6. The game can be played on the operating systems Windows, macOS and Linux.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284768,
      "meta": {},
      "text": "NFR1: Usability : Car icon for slow cars are normal everyday cars and those for fast cars, are race cars\nNFR2: Usability : Just clicks with the mouse and no others comands are needed to play and  configure the game\nNFR3 : Reliability : The game supports a great but reasonable number of cars (up to 12) without crashing \nNFR4 : Reliability : The source code is only accessible by people involved in the development and not by others to avoid modification or corruption of the game for cheating.\nNFR5 : Performance : All parameters of the car shall be updated in less than 0.1 seconds\nNFR6 : Supportability : The game runs perfectly without lost of performance in differents operating systems",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284960,
      "meta": {},
      "text": "Non functional requirements examples (URPS categories) for Bumpers:\n\nUsability: (user experience/learnability) The user should be able to steer the direction of the car with his/her mouse and change the speed (with the keyboard)\n\nUsability: (Memorability) The game must visualize important parameters like speed, location and consumption of the car on the gameboard screen\n\nReliability: (Robustness) Each car collision must have one and only one winner\n\nPerformance: The cars on the gameboard have to move smoothly (with a refresh-rate of at least 25 frames per second)\n\nSupportability: (Adaptability) The game must support changes to the collision type / winner determination of collisions while in-game\n\nSupportability: (Adaptability/Maintainability) The game should be platform-independent, so it should support Windows, macOS and Linux as well as mobile versions like Android and iOS\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285134,
      "meta": {},
      "text": "Usability :\nIntuitiveness - The interface is easy to learn and navigate; buttons, headings and messages are simple to understand\nEfficiency of use - Goals are easy to accomplish quickly with few or no user errors (Example - to change the collision type)\nReliability : \nThe application shouldn't crash in more than 5% of the games.\nPerformance :\nThe app should function at stable 60 frames per second, with up to 50 cars on the game board.\nThe app should open and close in less than one second.\nSupportability : \nThe game should be available/supported both on Windows and macOS.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285289,
      "meta": {},
      "text": " • Usability : \n • The User can Start the Game with only one mouse Click\n• Performance : The Game system should response to the mouse click of the User within a time period of 0.125ms or less ( good click latency)\n• The Game system should not crash when the User collide with more than 1 Car at the same time \n• The Game system can easily tolerate more than 1 click per second  by the user \n• Robustness : the Game system can easily maintain its functions when the player input is wrong (e.g. using keyboard or joystick)\n• Supportability :  The Game should be able to run on different Operating System",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287268,
      "meta": {},
      "text": "1)Usability: The player can steer the car's direction with the mouse and change its speed.\n(Actor \"Player\" can use the function \"steer the direction\" and \"change the speed\")\n2) Robustness:  The game should support different collisions. \n(changes in the environment) \n3) Performance: The game ends when cars crash. \n4) Availability: The game should support different collisions. \n5) Adaptability: The determination of the collision winner should be changeable during gameplay.\n6) Maintainability: The player can steer the car's direction with the mouse and change its speed. ",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287565,
      "meta": {},
      "text": ">Supportability: the game should run on different systems (Linux, Windows)\n>Performance: the game should run fluently without frame drops\n>Usability: the design should be appealing\n>Reliability: low failure frequency, no crashes\n>Maintainability: good documented code, in case we want to update/new (non)functional requirements\n>Readability: similar to  Maintainability, also easier to check for mistakes and our tutor to correct",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280735,
      "meta": {},
      "text": "Usability:\n- User needs only 1 click to start the game\n- The user interface is clearly designed. There are two buttons. One is for starting the game and the other one is to stop the game\n\nReliability:\n- It can handle a game with up to 50 cars and does not crash\n\nPerformance:\n- 99% of the play time you should have more than 60 FPS\n\nSupportability:\n- new cars can be added within 30min\n- The game is platform independent",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281043,
      "meta": {},
      "text": "Usability\nThe game should be user-friendly in the sense of:\n- based on solemnly on pointer interaction <- learnability/memorability\n\nReliability\n- Wrong user input should not break functionality of the system.\n\nPerformance\n- The game should have low-latency, ideally sub 30ms, a maximum of 60ms latency is allowed, on a system that fulfills the minimum requirements for the game\n\nCompatibility\n- platform independent\n\nSupportability\n- The system should support upto 15 cars in the game at the same time\n- The system should be modular such that changes/new-modules can be incorporated into the system without having to change other parts of the system. This does allow for addition of entry points, but other features should be untouched by the change.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281286,
      "meta": {},
      "text": "1. Platform independence (supportability: portability)\n2. Player can steer the direction of the car with the mouse and change its speed (Reliability: robustness to wrong input)\n3. It should visualize different parameters of the car, e.g. the speed, consumption and location of the car. (Performance: accuracy)\n4. The game should support different collisions. (supportability: adaptability)\n5. The determination of the collision winner should be changeable during gameplay. (usability:  Satisfaction / user experience)\n6. When cars crash, there has to be a sound effect. (Performance: response time)",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281426,
      "meta": {},
      "text": "There are functional and non functional requirements.\nFunctional requirements:\n\nThe game must: \n1) play background music \n2) visualize different parameters of the car (incl. speed, consumption, location \n3) have sound effect by crash \n4) support different collisions \n5) eliminate the winner after collision \n\nThe player can:\n1) Start/Stop the game\n2) Steer the dictation of the car \n3) Change the speed of the car \n\nNonfunctional requirements:\n\n1) Usability: 1. Player needs al least 3 clicks to make a collision\n2) Reliability: \n1. Robustness: The game takes not much place and doesn't need a powerful PC\n2. Safe: The game does not contain unnecessary files and safe to install \n3. Security: The game has its own \"Anti-Virus\" \n3) Performance:\n1. Response time is 0,5 seconds \n2. Thoughtput \n3. The availability of the system is at least 99,99%\n4. Accuracy:\n4) Supportability \n1. Adaptability: The game can be played in every PC\n2. Maintainability: The game can be played endless times\n3. Portability: \n\n\n\n\n",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1283067,
      "meta": {},
      "text": "Usability:\n- The player steers his/her car in bumpers by clicking with the mouse\n- The animations in the game must be displayed smoothly by refreshing the game at least 24 times / second\n\nReliability:\n- The game should handle 99% of all collisions correctly\n\nPerformace:\n- The game detects up to 5 inputs per second from the player and changes directions accordingly\n- The game does not drop the framerate when up to 10 cars drive simultaneously\n\nSupportability:\n- To introduce a new collision or car-type, one is required to change one class only\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283211,
      "meta": {},
      "text": "NFR1 : There should be an exit button on the top right corner of the application, which immediately terminates the program, in the case of an error - Usability\nNFR2 : Changing the car type during the game is prohibited and hacks against this area should be protected against -  Reliability\nNFR3 : The game should be able to handle 500 npc cars at the same time without stutter on an Acer Aspire 5. - Performance\nNFR4 : The game should be able to run on all windows version, all macs, as well as all linux's systems - Supportability\nNFR5 : When the game is finished, 2 buttons are present, one to exit the game, and one to start game - Usability\nNFR6 : The game should be able to support 20 different car types during the running of the game - Performance",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283304,
      "meta": {},
      "text": "Usability: The player should be able to start the game within 1 mouse clicks\nUsability: The player should be able to re-start the game after a crash within 2 mouse clicks\nPerformance: The game should enable 5 participants at the same time to play bumpers\nAvailability: The System availability should be at least 95%\nMaintainability: A developer should be able to add a new car within 10 minutes\nSecurity: The user shouldn't be able to manipulate the cars attributes and functions",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285066,
      "meta": {},
      "text": "Usability: \n- player needs respectively one click to start and stop the game\n- only default settings are used\n\nReliability: \n- robustness: many catch statements are implemented to avoid crashes of the game \t\tin case of unforeseen actions\n\nPerformance: \n- Response time: system should response in less than five milliseconds after a mouse click. In addition, implementation of a refresh rate of at least 60 frames per second\n- Availability: the game's availability is 100%. The game is always available and can be played.\n\nSupportability: \n- adaptability: the game looks and works on every operating system the same\nthe game automatically scales to full screen depending on screen sizes\n- maintainability: only classes need to be updated for bugfixes\n- portability: the game can be easily installed on additional computers by coping the gam file\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285200,
      "meta": {},
      "text": "While functional requirements are describing the functionality of a software, Nonfunctional requirments are important to ensure a certain quality standard. These can be classified in 4 categories (FURB), which is an acronym for Usability, Reliability, Performance, Supportability.\nIn the following I will define 6 NFR covering URPS in the context of the Bumpers Game.\n\nUsability:\n\tNFR 1: Users need a maximum of 5 interactions with the system (e.g.: mouse clicks) to start a game\n\tNFR 2: Users are able to exit the game in less than 2 seconds (follwing the third of the 'Jakob's Ten \n                    Usability Heuristics')\n\tNFR 3: New users are presented with instructions to understand the movement and rules \n\nReliability:\n\tNFR 4: the game has an error rate when detecting collisions of at most 0.02%\n\nPerformance:\n\tNFR 5: Game runs smoothly (no lags, min 27 fps) on all devices with minimum 4gb ram\n\nSupportability:\n\tNFR 6: new programmed Collision-types can only be integrated into the game by being implemented as a \n                   sub-class of Collision and changing the relevant variable in Gameboard-class",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285720,
      "meta": {},
      "text": "Usabilty:\nThe player can start the game with two clicks \nThe game should be easy to play even for small children\nReliability:\nThe game doesen`t crash under high temperatures so u can play it outside in summer (tolarates temeratures up to 70 degrees\nPeformace:\nThe game should start within 2 seconds \nThe downtime of the game shouldn´t be more than 1hour per week\nSupportability:\nThe game can be modified easily by a developer",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1286435,
      "meta": {},
      "text": "NFR1 Usability: The GUI should be easy to understand and use. All functions of the system should be reachable in less than 3 clicks.\n\nNFR2 Conformance to Guidelines: The System design should be conform to Nielsen's Ten Usability Heuristics.\n\nNFR3 Reliability: The game should not crash unexpectedly, the only way to close the app is to stop the game and then press quit or close the application using operating system functionality. This must be true to all platforms the game is used on.\n\nNFR4 Performance: The game should support at least 50 cars on the gameboard simultaneously without lagging on average performance devices released in the last 5 years.\n\nNFR5 Response time: The response time of the inputs should be lower then 50ms in-game. Thats important in keeping the results of the inputs predictable.\n\nNFR6 Maintainability: The system should be easily modifiable in order to fix bugs, implement new requirements and keeping it up to date. Therefore, a every part of the software development activities should be in seperate packages and the atomicy of the functions should be fulfilled. This is true for all plaforms the game is used on.\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287220,
      "meta": {},
      "text": "- \"Player can start and stop the game\" (usability), because of Jakob's Ten Usability Heuristics \"User Control and Freedom\"\n- \"determination of the collision winner changeable during gameplay\" (Usability)\n- \"There is one car controlled by the player\" (Performance) number of simltaneous users supported.\n- \"The game schould be platform independent\" (Supportability), because it supports different platforms\n- \"In each collision there is a winning car\" (Reliability or better Safety), it is kind of protection against missunderstood collisions, this can't happen, because there is always one winner in each collision.\n- \"The player can steer the direction of the car with the mouse\" (Usability) it is easy to understand how do drive a car in Bumpers.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287735,
      "meta": {},
      "text": "Usability: \nThe player has to use his mouse in order to steer his controlled car and change the speed.\n\nReliability:\nIn case you misclicked the determination of the collision winner at the beginning, you should still change it during the gameplay\n\nPerformance:\nThe program should be able to transfer the mouse moving immediately (e.g. in order to drive in a certain direction)\n\nSupportability:\nThe game should be platform independent and adapt to changed circumstances (e.g. platform)\n\nFunctionality:\n- The player should be able to start and stop the game\n- The software / program should visualize different parameters of the car during the game",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280622,
      "meta": {},
      "text": "• Usability\n\tThe player must be able to learn and memorize controls without losing the first game.\n\tAll player actions must have perceivable feedback.\n• Reliability\n\tNo Error should be able to influence gameplay (i.e. shouldn't be possible to notice by the end user)\n\tPlayer can't win unless win conditions are truly met / shouldn't be able to cheat.\n• Performance\n\tThe collision determination and evaluation must happen seemlessly, without interrupting the gameplay.\n• Supportability\n\tThe game should be platform independent.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1281455,
      "meta": {},
      "text": "Usability :\n\t- The player can change the direction of the car with a single click : Easy to learn & easy to remember.\n\t- They player can always start the game when the latter is stopped and vice-versa.\nReliability :\n\t- The game should not crash when the player spams a key, or clicks outside the assigned window.\n\t(Robustness)\nPerformance :\n\t- The game should always be either running or not, and never in an undefined state. (Availability)\n\t- The hitboxes of cars should be more or less identical with their respective icons. (Accuracy)\nSupportability :\n\t- A developer should be able to easily add a new car type or a new collision type without having to change too\n\tmany classes. (Maintainability)",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282528,
      "meta": {},
      "text": "Usability:\n1. there should be a maximum of 4 buttons presented at any time (learnability/memorability)\n2. easy game start with maximum 1 click + only single button controls -> no key combinations needed (efficiency)\n\nReliability:\n3. Levels should be restartable (e.g. round timer or button) so if bugs happen, the level can just be reloaded (safety)\n\nPerformance:\n4. the game should run with at least 30 FPS at any time on a the minimum hardware Requirements\n2,0 GHz CPU, 2GB Ram, Resolution 1920x1080 (performance)\n5. there should not be any game downtime unless the user updates the game (availability)  \n\nSupportability:\n6. the game should run on any computer operating system (windows, mac, linux) as well as with keyboard+mouse or controller (adaptability)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283033,
      "meta": {},
      "text": "Useability:\n1. The player can start the game\n2. The player can change the car´s speed with the mouse\n\nReliability:\n3. One player can only steer one car\n\nPerformance:\n4. The game should be platform independent.\n\nMaintainability:\n5. The winner of the game can change during the gameplay\n6. The correct sound effects appear in the respective situation",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1283608,
      "meta": {},
      "text": "Non-functional requirements Bumpers:\nU\nR\nP\nS",
      "score": 0,
      "language": null
    },
    {
      "id": 1284848,
      "meta": {},
      "text": "Non Functional Requirements for the Bumpers Game:\n\nUsability:\n- Visibility of the system status by showing the different parameters of the car\n- Learnability: Player can only change speed and steer the car with a mouseclick -> Easy to learn\n- User-Experience: The game is quick to start and can be played without much thinking, because of easy concept\n\nReliability:\n- Robustness: Wrong User-Inputs have no effect\n\nPerformance:\n- Game is easy to process: Offline Single-Player, 2D Graphics, Small amount of inputs\n\nSupportability: \n- Portability: The game is platform-independent ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284988,
      "meta": {},
      "text": "Usability:\n- The user should have a clear visual indication of what car he should steer (i.e. a red arrow pointing to it)  otherwise it will quickly become difficult not to confuse the cars and limit the efficiency of usage.\n- Different parameters that are displayed on the screen should include visual clues to be easier to understand for the player, so for example if a car runs low on fuel the consumption should flash red or if a car drives on maximum speed, the speed should shine in gold, so the interface is more enjoyable to use.\nReliability:\n- The system should allow users to restart a new game if an error occurs, so that they don't need to close and reopen the game, so the ability to start and stop games should be robust enough to not be impacted by exceptions being thrown inside the game.\n- To increase the game's safety and resistance to random errors, all inputs and parameter like the direction and position of cars should be logged, so that in case of an error it can be tracked back to the source and fixed, to keep it from reappearing in the future.\nPerformance:\n- The discrepancy between user input and it's effect on the game should be kept minimal (<5ms), so that the user can quickly react to the movement of the other cars.\nSupportability:\n-  Since the purpose of the game is to test the keyboard and the mouse of the hardware producer, the game should be playable even if the producer decides to make changes, i.e. it should be possible to change the control buttons, so that for example additional mouse buttons could have a function in the game too, that the keyboard would fulfill otherwise.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286393,
      "meta": {},
      "text": "Usability:\n1) User should be able to start the game at one click once the window is opened\n2) User should be able to exit the game at any moment\n3) The user should confirm his intention to exit or to stop the game to avoid accidental actions\n\nReliability:\n4) The game should ignore pressing of any button on the keyboard except of system keyboard shortcuts\n\nPerformance:\n5) The window should open in less than 10 seconds in 95% of cases\n\nSupportability:\n6) The game should have dark mode and light mode which should match to the system mode",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284873,
      "meta": {},
      "text": "Usability:\n- The player only needs the mouse to control the car.\n- The player can stop the game at any time.\n\nReliability:\n- The audio always stays below critical levels to avoid hearing loss.\n\nPerformance:\n- The game runs on any platform supporting Java executables.\n- The player's input is processed every frame with a minimum of 60 frames per second.\n\nSupportability:\n- The mouse click can be rebound to different keys on other devices.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285426,
      "meta": {},
      "text": "NFR1 Usability: User interacts with the mouse. \n\nNFR2 Usability: The size of the car objects should be at least 1 cm wide and 1 cm high.\n\nNFR3 Robustness: When the user enters a wrong input for example the letter \"p\"  then it shouldn't change \t\t  something on the game.\n\nNFR5 Safety: To play this game you need internet connection, otherwise you are not allowed to play this game.\n\nNFR6 Security: No one except the user should be able to steer the car. It should prevent hacker attacks, so the game is safe to play.\n\nNFR7  Availability: The availability of the game should be 99,3%. There downtime is at most 1 hour per week .\n\nNFR8 Response time: After pressing the start button the game should start under 1 sec.\n\nNFR9 Maintainability: The skin of a car can be changed after each game.\n\nNFR10 Portability: The game should be platform independent so you can play this game on every device.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285817,
      "meta": {},
      "text": "Usability\nPlayers only need to click with the mouse to control the movement of the car.\nPlayers can start or end the game by clicking a button.\nDifferent types of collisions should be available for the player to choose from, click the button to decide.\nReliability\nThe game should be able to accommodate at least 50 cars in addition to the player. And this should be no more than 0.1 second off the response speed at 10 cars.\nPerformance\nPlayers should be notified within 0.1 seconds of winning or losing.\nSupportability\nThe number of non-player vehicles should be easily modifiable, and the attributes of those cars, such as speed, should also be modifiable.\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1286404,
      "meta": {},
      "text": "Usability\n-Efficency: The instructions shall be clear, and the game shall be easy to remember and play once it is learned. \n-Satisfaction: Users shall have fun playing the game. \n\nReliability\n-Robutness: The game can’t be played more than an hour\n-Security: The game prevents viruses\n\nPerformance\n-Availability: The availability of the game shall be over 85%\n\nSupportability\n-Maintainability:  Car type can be changed every 3 minutes.\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286614,
      "meta": {},
      "text": "NFR 1: Usability: \n           Only one user interaction (mouse click) is needed to change the direction of the driving car.\nNFR 2: Reliability/Robustness:\n            No keypress should change the current state of the game (dircetion of the driving cars, speed, number of \n            cars) or crash the game.\nNFR 3: Performence:\n\t   Up to 10 cars should be able to drive simultaneously with at least 35 FPS.\nNFR 4: Performence:\n\t   It should take at most 0.08 seconds to change the direction of the car (after a mouse click).\nNFR 5: Supportability/ Maintainability:\n\t   The used pictures of the car can be changed changing at most 3 lines of code. \nNFR 6: Supportability/Adaptability:\n\t   The game should be portable to other operating Systems (Linux, Windows, Mac OS)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286644,
      "meta": {},
      "text": "1.Usability: -The user should be able to start the game with 1 click\n2. Reliability: -the game should detect cheats and stop the usage of cheats \n3. Performance: -the game should still work even though we have 2000 cars on the gameBoard\n                          -the response of a click on the gameBoard to redirect the car shall not take more than 0.01 sec\n4. Supportability: -the game should be platform independent\n                            - the game should be playable on all kinds of PCs with different hardware. Even PCs with low specs should be able to run the game\n                           ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286651,
      "meta": {},
      "text": "NFR 1: Steer car - users are able to change the direction of the moving car by clicking once at the intended direction of the car.\nNFR 2: no complex knowledge of operating a pc/ laptop required to play the game - players will only need and know how to use a mouse or a touch pad to play the game. \nNFR 3: players are not required to create an account or link an account to play the game. No personal information will be linked to the game in any way.\nNFR 4: updated versions of the game should be available online for download via the same website they downloaded the game. (Only one website)\nNFR 5: displayed text should be at least 0.5cm high and images of the cars should be at least 1.5cm.\nNFR 6: the cars displayed exclusively as player cars have a yellow border around the car image.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286844,
      "meta": {},
      "text": "1) The game must be drawn with at least 30fps (frames-per-second) on every supported platform. [Performance]\n2) The game must be platform independent [Supportability]\n3) The car information (speed, consumption, etc.) should be placed in a corner where it doesn't cover up the gameboard. [Usability]\n4) The user should only need platform-native-controls. [Usability]\n5) The game should handle up to 10 different user-inputs at once. [Reliability]\n6) The game should evaluate collisions under 10ms. [Performance]",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287144,
      "meta": {},
      "text": "Usability:\n- Starting and stopping the game can be achieved from the main screen (or game over/winning screen) with at most 2 button presses.\n- There is a keybord shortcut for starting and stopping the game, which overrides and automatically closes any popup window/prompt regarding starting/stopping the game\n\nReliability:\n- While the game is running, whenever the user clicks outside of the game window, the mouse is caught and set back inside the window; the game window stays on top of other windows during this (while the game is running).\n\nPerformance:\n- Starting the game should take less than 0.5 seconds.\n- Up to 20 cars need to be supported on the Gameboard at once without noticable lag spikes (< 30 fps)\n\nSupportability:\n- The game should run on all of the 3 main PC operating System (Windows/Mac OS/Linux)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287311,
      "meta": {},
      "text": "1-) Starting and stoping the game should be done in two clicks. (Usability)\n2-) Clicking on wrong buttons should not have an effect on the game. (Reliability)\n3-) Opening the game should last less than 1 second. (Permormance)\n4-) Adding and adapting a new car type into game should take less than 10 minutes. (Maintainability)\n5-) The game should be playable without performance issues upto 20 cars on the game board. (Performance) \n6-) No car colour should be red or green so that people with red-green illness also play that game (Usability)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287943,
      "meta": {},
      "text": "Non-Functional requirements:\n\n- Performance: (Response Time) The response time when the player decides for its car should be really quick. The latency should be less than 20ms.\n- Usability: The player should be able to start the game in 3 clicks or less.\n- Reliability (Robustness): The game continues working, when the user enters various different wrong inputs by pressing wrong keys on the mouse or keyboard\n-Adaptability: The system is able to handle changes in the determination of the winner/music/cartype\n-Supportability: The game should be platform independent \n-Security: Only the player can steer the car ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280491,
      "meta": {},
      "text": "Usability:\n1. Game could be played by only using the mouse\n2. Car types should be easily distinguishable \nReliability:\n3. All inputs expect the mouse movement and mouse buttons should be ignored.\nPerformance:\n4. Game should take no more than a second to start\nSupportability:\n5.Game should be platform independent \n6.Game should support different collisions that shoul be changeable during gameplay",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1281326,
      "meta": {},
      "text": "Usability:\n\t- The player can start and stop the game.\n\t- The player can steer the direction of one car and change its speed.\n\nReliability:\n\t- The game should work on every platform.\n\nPerformance:\n\t- The reaction time if the player uses the mouse to steer shouldn't be  longer then 1s.\n\nSupportability:\n\t- The game should support different collisions.\n\t- The determination of the collision winner should be changeable during gameplay.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1282648,
      "meta": {},
      "text": "NFR1 Usability:\no\tThe game can be started with only on click on the START button and can be stopped with one click on the \n         STOP button\no\t There should be a small description on how to steer the car and how to change the speed.\no\tTo better understand the situation of the car at any time, different parameters of the car, e.g. the speed, \n        consumption and location of the car should be visualized in the bottom right corner\no\tThe collision winner type can be changed within 3 clicks\nNFR2 Availability:\no\tThe game should only be unavailable for 30 mins per week when bugfixes or new features are added to \n        the game\nNFR3 Performance:\no\tThe game can handle controls from the Player withing 50 ms\no\tIt can start and stop the game in less than half a second\nNFR4 Adaptability:\no\tThe game should be playable om computers, phones and tablets\no\tIt should be controllable by a mouse, touchpad or touch screen\no\tIt should adapt to the screen size depending on how big the screen is on which the game is played on\nNFR5 Maintainability:\no\tIt should be able to do bugfixes\no\tIt should be possible to add new cars to the game\no\tIt should be possible to add new collision types to the game\nNFR6 Security:\no\tThe game should not leak any personal information about the use, e.g. IP-Address\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283316,
      "meta": {},
      "text": "1.) Usability: The player can start the game with one click and can also stop the game with one click. \n\n2.) Reliability: The player shall never be able to steer the bot-cars \n\n3.) Performance: each game shall not take longer than 3 minutes\n\n4.) Supportability: a new car or collision type can easily be added by a developer \n\n5.) Usability: all functional areas of the game, Start and Stop button as well as the steering of the player car, so the game play itself, are visible on the screen simultaneously to ease Learnability\n\n6.) Performance: there is always only one player at a time ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284204,
      "meta": {},
      "text": "U: Usability \tR: Reliability\tP: Performance\tS: Supportability\n\nU: \tThe player should be able to deactivate the sounds directly on the first menu page when starting the game.\nU:\tThere should be a tutorial guide, which explains all important functionalities.\nU:\tThe font size of the words in the menu should be at least 14.\n\nR:\tWhen entering a username in the menu the player shouldn't be able to use numbers. Therefore a wrong\n\tinput lead to a error message so the player has to enter another name. The functionality of system\n\tmustn't be affected.\n\nP:\tThere should be no delay between mouse movement and the connected steering in the game.\n\nS:\tDue to object-oriented design a developer can easily include a new class within 20 minutes in the system.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285056,
      "meta": {},
      "text": "NFR1: Usability/Conformance to guidelines: The design of the system should follow Nielsen’s usability heuristics for user interface design\nNFR2: Usability: the system should be intuitive to use and easy to perceive visually: the buttons-text and the appearing text during the game should be at least 0,3 cm high\nNFR3: Performance: a system response to a user interaction should be at most 0,5 s long\nNFR4: Reliability/Robustness: the system should have a 90 % robustness. (there’s an 90 % chance that the system won’t experience critical failure)\nNFR5: Performance/Availability: the availability of the system should be at least 99.9% with the downtime of 10 minutes per week \nNFR6: Supportability/Maintainability:  the system should have at least 70 percent maintainability for 24 hours (there is a 70 % chance for a bug to be fixed in 24 hours)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285260,
      "meta": {},
      "text": "Usability:\t\t- It should be possible to start a game within 3 clicks\n\t\t\t- When selecting a collision type, it should not be text-only, but a clipart should demonstrate how \n \t\t\ta winner is chosen in a collision\n\nReliability: \t- The player should not be able to simply change the speed of the car (-> cheat prevention)\n\nPerformance:\t- The loading time of the game should be no longer than 2 seconds\n\t\t\t- It should be possible to have at least 20 cars on the gameboard without major performance \n \t\t\timpacts\n\nSupportability:\n\t\t\t- It should be possible and easy to install updates (especially bugfixes) to the game",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285555,
      "meta": {},
      "text": "U: Every choice/setting should be possible to be done in less than 3 clicks (choose car, difficulty, collision type) \nR: No information needs to be collected by the player for playing the game (age, name, address, credit card) \nP: More than 25 frames per second should be supported\nS: Mobile devices should also be able to run the game\nS: App size shouldn't be greater than 50MB\nU: No in-app-purchases & ads should be accessible",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285768,
      "meta": {},
      "text": "1. Usability\n-player can steer the direction of the car with the mouse and change its speed(control car)\n\n-when the car is controlled to move outward  the game board,  the position of car should appear at the edge side of the gameboard.\n\n\n2.Reliability\nplayer that  has not been registered can not start the game(safety)\n\n3.Performance\nwhen the game start, music is played.\nwhen the collision happens, the system needs to evaluate the collisions in 0.5ms.(responsible time)\n\n\n4.Supportability\nthe game is platform independent( low portability)\n\n\n\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285814,
      "meta": {},
      "text": "NFR 1: The game should be perfromant enough, that there are at least 30 frames per second while playing.\nNFR 2: The system should be resilient against wrong user inputs.\nNFR 3: The parameters of the car should at most take up 10% of the screen, in order to not compete with the relevant gameplay happening.\nNFR 4: Implementing new cars or collisions should be made easy by providing abstract classes for both.\nNFR 5: The player shouldn't be confused why a collision was won/lost for visual clarity. This should be achieved with a message and a reason (e.g playerCar lost the collision because it was to the left of npcCar) in case of a lost collision.\nNFR 6: The response time to user input should be under 5 milliseconds.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286991,
      "meta": {},
      "text": "Usability:\nAt first Bumpers wasn't that complex. But with adding the possibility to choose a car and collision type, both should be limited to one click. So in total, you start the game (click one), the menu to choose the car type opens and you click on the car you like (click two). The car menu closes itself and the collision menu is opened. You choose the collision the same way like the car (click three). The collision menu closes itself as well and the real game menu is shown with a \"Start\" button (click four). So it should not take more than 4 clicks, even with menus, from starting the application to playing Bumpers. \nLearnability is a part of usability as well, so there could be an introduction added to the game, wich explains the mechanics and car/collision types for a player that doesn't know what to expect from the game. \nRobustness:\nFirst, the game should not crash if a key is pressed or anything else the game has not defined. Our game only uses the mouse, but other input should just be ignored. \nAlso our game should not be able to be connected to a network or anything that would make it vulnerable for cyber attacks wich would lead to a security problem. \nPerformance:\nAs our game is not very extensive and the game logic is quite limited, the performance should be very smooth. There is no multiplayer the game has to handle so most of the time the transactions should be handled in under 1 second. Otherwise the game could appear laggy to the player, especially concerning collision. \nSupportability:\nLast but not least the game should be easy to modify. There could be new car types added later on, or new collision types. All those things should be easy to maintain for even new developers. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287305,
      "meta": {},
      "text": "Usability:\n- Users control Bumpers with the mouse\n- There should be a fullscreen and window option\n- cars should be the right size befitting the playfield\n\nReliability:\n\tRobustness:\n\t- the clicking speed nor length should make a difference. The game should always behave the same\n\nPerformance:\n- The game should always run at the same Framerate, even when having up to 50 cars on screen\n\nAdaptability:\n- same overall game behaviour when adding new cars and collision to the game",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280635,
      "meta": {},
      "text": "Usabiliy:\n\tEmergency exit: There should be a button to stop/exit the game\n\tAesthetic and Minimalist Design: The gui only ontains information relevant to the user at each moment\n\nReliability:\n\tThe game mustn´t be stopped by accident\n\nPerformance:\n\tOne user is supported at a time.\n\tThe game should not terminate because of an exception thrown by the system.\n\nSupportability:\n\tThe game should be runnable on PCs only and conform to the according standards",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281312,
      "meta": {},
      "text": "NFR1) Usability -> Learnability\n\tThe user interface is easy to understand. After reading the short game description, the player should be able\n\tto understand how to play the game.\nNFR2) Usability -> Efficiency\n\tThe Player needs at most three clicks to start the game. \nNFR3) Reliability -> Robustness\n\tThe player accidentally made a wrong user input. Instead of clicking the start button, he clicks the stop\n\tbutton. Nothing happens. He realizes his mistake and clicks the start button -> the game starts. \nNFR4) Performance -> Response Time\n\tBumpers loads within 10 seconds and can then be started. \nNFR5) Supportability -> Portability\n\tBumpers is Browser independent, the game is visualized uniformly \nNFR6) Supportability -> Adaptability\n\tDue to the modular design Bumpers is adaptable / can be easily adapted to new software updates or new\n\ttechnologies.\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281341,
      "meta": {},
      "text": "Bumper should have intuitive controls e.g. mouse or arrow keys/WASD to make easier for new and more exoerienced video game players to have a good introduction to the game ad not be frustrated with the controls.\nAt best would be all the controls mentioned.\nFurthermore the game schould be able to have the highset refresh rate possible. A tick in the game shouldn't be longer than 10 micro-secs.. This means a refrash rate of at least 100 ticks/s or more. Another quality requirement would be high FPS to make a smooth and enjoyable playing experience (60+).\nThe collision itself should be true to the shape of the object displayed and not the frame of the image  as this would cause a lot of player frustration. \nThis should be achieved with a stable, long supported GUI framework in a MVC design scheme to enable quick swap of the framework and better the code readability and understandability. The game shouldn't involve too much randomness involving the crashes to create a learnable winning condition and to keep player frustration due to a lost coinflip down.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1281373,
      "meta": {},
      "text": "1. The user can learn the steering and speed changing via mouse in three minutes or less. (Usability -> Learnability)\n2. The game is platfrom independent. (Supportability -> Portability)\n3. The car responds immediately when the user steers it with the mouse. (Performance -> response time)\n4. The game can be restarted without issues after the player stopped it. (Reliability -> robustness)\n5. The visualization of the paramters is clear and neat, so that the player can easily check the data while playing and it isn´t in the way. (A little moree concrete: the parameters are at the edge of the display and they do not take up more than a tenth of it in size.) (Usability -> user satisfaction)\n6. The crash sound plays out immediately after a crash without delay. (Performance -> response time)",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283218,
      "meta": {},
      "text": "Usability: \n- There is one car controlled by the player. The player can steer the direction of the car with one mouse click.\n- The determination of the collision winner is changeable during game-play. \nReliability: \n- there is a limited amount of the slow cars (safety)\nperformance: \n-  In each collision, there is a winning car. (Accuracy)\nSupportability: \n- The game should be platform-independent (Portability)\n-  The game should support different collisions. (Adaptability)",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1285417,
      "meta": {},
      "text": "Usability: \n\t- Satisfaction: das Auto des Spielers soll mindestens 5cm groß abgebildet sein\n\t-Learnability: während des Spiels sollen höchstens 4 Aktionen möglich sein (Steuern durch Mausklick, Geschwindigkeit des Autos verstellen, Einstellungen für Collisiontype-Änderungen, Knopfdruck für Spielstop)\n\nReliability:\n\t- Robustness: durch falsche Eingabe der Geschwindigkeitsregelung (<0 oder >10) soll eine Fehlermeldung (\"Ungültige Eingabe!\") angezeigt werden, das Sytem kann die Geschwindigkeit mindestens bis zu Stufe 10 wiedergeben\n\nPerformance:\n\t- Response time: die Reaktion des Autos auf die Steuerung durch den Mausklick soll höchstens 1ms dauern und das Umstellen des Collisiontypes soll nach höchstens 1s nach Wählen des neuen Types passieren\n\t- Availability: das Spiel soll für mindestens 10.000 Spieler gleichzeitig nutzbar sein\n\nSupportability:\n\t-  Availability: falls das Auto nicht mehr fährt(Bug) soll das Problem durch Schießen und erneutes Öffnen des Spiels vom Spieler behoben werden können",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1285809,
      "meta": {},
      "text": "Usability：It should not take more than 2 clicks to start the game.\n\nReliability：\n• Robustness :  When the player uses the keyboard instead of the mouse to control the car,the direction and the speed of the car will not change\n\n Performance：The game can only be controlled by one player at the same time\n\n Supportability：\n• Maintainability ： New car types can be added within 10 minutes\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285962,
      "meta": {},
      "text": "Usability: the game should be self-explaining so that the player does understand the game principles from the first game start.\n\nReliability: The mouse can withstand more than 100000 clicks within the testing period.\n\nReliability: The keyboard can withstand more than 50000 clicks during the testing period.\n\nPerformance: response speed of their products should be within one standard deviation after 100 game starts\n\nPerformance: accuracy of their products shall be within one standard deviation after 100 game starts\n\nSupportability: The game should be compatible with all relevant platforms and operating systems. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286094,
      "meta": {},
      "text": "1. Usability : The User/Player should be able to start playing the game within 3 clicks. (Including Picking the Car and Collision Type)\n2. Reliability : The Game should crash with unexpected Inputs such as clicking outside the play area etc ,and inputs along these lines should be handled accordingly.\n3. Performance: The game should be able to handle (calculate outcome and respond accordingly, i.e choosing the winner and displaying the graphics for collision along with the sound) a collision among 2 cars within 0.01 secs or less.\n4. Supportability: The Game should be able to handle changes in the future such as (but not limited to) bug fixes, addition of new car variants, additional collision logic etc.\n5. Usability (Satisfaction): The User/Player should be awarded for wins (maybe through messages or other incentives) and should be motivated to try again in case of a loss.\n6. Reliability: The Game should behave normally even if the window is resized and/or moved.  ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1286429,
      "meta": {},
      "text": "- the game game should be at least 99,99% available (Reliability)\n- the game should not react longer than 3 seconds in any reaction. (Performance)\n- the game should be extensible, that is, more cars can be added. (Supportability). \n- the game should be operating system independent (Supportability).\n- the game should be easy to play for average users. (Usability) \n- the game also supports mobile operating system.(Supportability) ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287198,
      "meta": {},
      "text": "Usability\n1. The User needs just the mouse to play the game.\n2. Everywhere in the game the Documentation is just 2 clicks away.\n\nReliability\n3. The game crashes during the start less then 0.1% of the time.\n\nPerformance\n4. The response time between a click and the car changing direction is less then 0.2 seconds\n5. The game can handle 10 players at the same time.\n\nSupportability\n6. The game is open source to give everyone the chance to customize it.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287549,
      "meta": {},
      "text": "- Usability: \n1. The speed, consumption and location of the car are visualised and on display during the game. The application even lets the user know when there is a crash by displaying a message with the evaluation from said collision on the screen, and with a corresponding sound effect (Visibility of System Status)\n2. The player can start and stop the game as they please (User Control and Freedom)\n3. There is a match between the System and the real world in the sense that the applications principle mimics situation the user familiarises with form the real world, such as the ability to control and steer the car. \n\n- Reliability : \n4. The game is platform independent, which speaks of the systems Robustness since it is able to be run (it is able to maintain all of its functions) in different platforms (different environments)\n\n- Performance: \n5. The game supports different types of collisions and different types of cars, which all interact within the game. In other words, the System is able to handle a lot of information. \n\n\n- Supportability :\n6. The determination of the collision winner should be changeable during gameplay. This requirement speaks highly of the Systems supportability, since it means the Systems behaviour can be changed, thus making it open and adaptable.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287968,
      "meta": {},
      "text": "NFR1: the game should be Playable after at most 4 interactions. \nNFR2: the ui should adapt to the OS it is run on\nNFR3: the game should have less downtime than 30 min per month \nNFR4: the game should run with at least 30 fps. \nNFR5: the player should not be able to crash the game wether by acident or on purpose.  \nNFR6: ther should be less than 0.05 input lag. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280272,
      "meta": {},
      "text": "Usability:\nNFR1: Usability: The Player needs at most 2 clicks to start the game.\nNFR2: Short Tutorial: When starting the game for the first time at all, the player can start a tutorial where all important functionalities of the game are explained (e.g. start and stop the game, steer the car and change it's speed, explanation of determination of the collision winner)\n\nReliability:\nNFR3: Security: The user should be prevented from changing the implementation of the game. He can only use the behavior provided by the game. \n\nPerformance:\nNFR4: Performance: The system should be able to update the position of all cars (at most 50) at least 25 times per second and visualize these updates.\n\nSupportability:\nNFR5: Adaptability: If a new car type or collision type is required, those changed requirements should be implemented and tested within 48 hours.\nNFR6: Maintainability: There should be a chance of 75% that bugs can be fixed within 24 hours.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280418,
      "meta": {},
      "text": "1. Usability: User experience: The UI of the game should display not more than 9 buttons at a time.\n2. Usability: Error handleing: In case of a crash the game should generate a \"popup\" message informing the player about the crash and how to proceeed.\n3. Reliability: Robustness: Clicks outside of the game window should not be interpreted as valid input to the game.\n4. Performance: Response time: The game should display the gameboard ready to play after at most 5 seconds after starting the app.\n5. Performance: Accuracy: The clicks around the player car should be interpreted with a error tolerance in degree and length.\n6. Supportability: Portability: The app should be portable to the iOS operation system.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1281230,
      "meta": {},
      "text": "URPS stands for Usability, Reliability(Robustness, Safety, Security), Performance(Response time, Throughput, Availability, Accuracy), Supportability(Adaptability, Maintainability, Portability)\n\n1.Usability: Bumpers can be easily played by customers with mouse klick. Customers need use mouse to control car.\n2.Performance: After customer klick mouse to steer car direction and change its speed, the transactions shall be processed in less than 1 second.\n3.Availability: The availability of the Bumpers is at least 99.7%\n4.Adaptability: If Bumper would like enter the new market like China, the bumper system need adapt language changes.\n5.Maintainability: Bumper need be easy redesigned by a developer \n6.Reliability: Bumper need to have stable operation capability, e.g. run car crushed 1000 times without operation problems",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281788,
      "meta": {},
      "text": "1) Usability: There should be a maximum of four different collision types in order to increase memorability of the different types and increase efficiency when selecting one of them. \n2) Reliability: The system needs to maintain robustness when a great number of cars (over 100) is on the game board. \n3) Performance: The average input latency (response time after user input) should only in less than 1% of all cases surpass 5 milliseconds. \n4) Supportability: A developer should on average not need more than 30 minutes to introduce a new type of collision into the game.\n5) Supportability: The game should adapt to different end user hardware, e.g it should work on apple computers as much as on iPhones or on HP computers.\n6) Usability: The images of the cars should be in good quality, of at least 150x150 pixels. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282665,
      "meta": {},
      "text": "Usability: The game should be easy to learn and understand for the player. A tutorial might be necessary to explain how the rules are in this specific game. Using the arrow keys or WASD might be the best because most players are used to them from other games. \nReliability:  The game should be runnable on every system(macOS, Linux, Windows)  to support as many players as possible. It should be tested by10 individuals for one hour each after it's finished to ensure there isn't a too high failure frequency. \nPerformance: We don't want our game to take too many resources to run on a PC and there shouldn't be too long waiting times for the user. Maybe create an illusion of speed, by rendering things that arent seen yet to a different unseen place on the map to save power while the game itself is running.  \nSupportability:  have a well-documented codebase and every method or attribute that isn't understandable at first sight should be well commented. Elaborate testing because we don't want to deliver a faulty game. Every method should have at least a single test and more complicated methods should have a minimum of 3 tests (+ edge cases)  ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282811,
      "meta": {},
      "text": "Usability:\n\tThe player should be able to start the game within 3 clicks\n\tThe player should be able to remember the core playing concepts after the second game played\nReliability:\n\tRobustness:\n\t\tThe system has to be able to deal with at least 10 simultanious, unexpected inputs\t\nPerformance:\n\tThe system has to be able to handle at least 2 players, playing at the same time.\n\tAvailability:\n\t\tThe game needs to be available (up) 23 hours a day, what leaves a 1 hour maintenance period\nSupportability:\n\tMaintainability:\n\t\tThe game should be easily modifiable, so bugs can be fixed in a period of 30 minutes",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283908,
      "meta": {},
      "text": "Lernability\n\t\tThe only player input device is the mouse, they only have to learn what happens when they click on a \t\t\t\t\t\t \n                 postion on the field.\n\t\tThe only Components of the game are cars with minimal differences in movement.\n\t\nRobustness\n\t\tThe player cannot enter any wrong input, as all possible 'click-positions' are viable.\n\nSecurity\n\t\tCore information, such as car speed and ai movement, are not available to the player, which means \n                they cannot be manipulated unless the underlying code is changed.\n\nPerformance\n\t\tKeep targeted framerate of 25 fps  whenever possible, as to keep the experience the same every \n                playthrough.\n\nAvailability\n\t\tUses ~2Gb RAM at most, therefore as long as the machine has enough RAM \t \n                available it should work.\n\nAdaptability\n\t\tWorks on many different platforms, only constraint being the necessity for java.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284979,
      "meta": {},
      "text": "NFR1 Efficiency of use (Usability): The user can start the game/stop the game/change the collision type each within two clicks.\n\nNFR2 Learnability (Usability): The actions the player can perform (start the game/stop the game/change collision type) are all visible and selectable at any point of time during the game.\n\nNFR3 Reliability (Robustness): The player cannot start the game when it is already running and cannot stop the game when it is currently not running.\n\nNFR4 Response time (Performance): The game starts/stops within 0.5s after the appropriate button has been pressed.\n\nNFR5 Throughput (Performance): The game can handle 30 cars driving simultaneously during a single game.\n\nNFR6 Extensibility (Supportability): The developer can add new car types and collision types to the game within 10 minutes.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283789,
      "meta": {},
      "text": "Usability:\n- Players need at most 3 clicks to start the game.\n- The design of the Bumpers game should conform to the usability guidelines for the chosen operating system.\n\nReliability:\n- The system can tolerate the pressing of wrong buttons. In this case nothing should happen. E.g. when pressing the button \"M\"\n- The system can tolerate different platforms and thus is platform independent. E.g. using different internet pages: Firefox, Safari, Google Chrome, ...\n\nPerformance:\n- The availability of the bumpers game is at least 98 %.\n\nSupportability:\n- The system needs to react to changes regarding the determination of the collision winner during gameplay. E.g. change from LeftMostCollision to RightMostCollision\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284033,
      "meta": {},
      "text": "Usability:\n     - The \"stop Game\" Button should be visible at all times of the game.\n     - The cars should at least have the size of 70x38 so that the users sees them    \n        correctly.\n\nReliability:\n   - The percentage of the probability of failure, so the percentage of times where   \n      the game doesn't start should be below 1%.\n\nPerformance: \n   - The response time of the application to starting the game by clicking on the    \n      \"start Game\" Button should be shorter than 1 second.\n\nSupportability:\n   - Maintainability: The system should be designed in a way that allows dealing with  \n      new requirements, for example adding new features to the gae.\n\nPortability:\n  - The game should be working on all Laptops and Computer systems (Windows, \n     Mac OS..)\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284327,
      "meta": {},
      "text": "Usability:\n1. The player can start the game with one mouseclick.\n2. The player can stop the game with one mouseclick.\nReliability:\n3. The system ignores wrong inputs.\n4. The system will not share any private Data of the user to unauthorized users.\nPerformance:\n5. The system updates at least two times per second.\nSupportability:\n6. The system can be modified within 30 seconds.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284405,
      "meta": {},
      "text": "Usability:\n-Users interact with a mouse, they can prevent delay of 1 second compared with using touch pad.\n-Users can identify whether their cars crash immediately, since there's a crash sound once the cars crash.\n\nReliability:\n-For security reason, the system should be able to prevent the attack of viruses.\n\nPerformance:\n-The dynamic reaction of the car should be less than 1 second.\n-The availability of the game is at least 99.9%, so that the users can play it whenever they want.\n\nSupportability:\n-If they is a bug, the system should have auto detect it and developer should fix it within 15 minutes.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287719,
      "meta": {},
      "text": "1.\tNFR: It should be possible to play the game with just one input device, a mouse, or a touch screen.\n2.\t NFR: The game should not depend on sound design and make information such as speed, crunching, the winning and losing in a collision not only audible but also visible. \n3.\tNFR: Power users should be able to change the collision type and speed with key bindings.\n4.\tNFR: The game should reliable work even after a resize of the window.  \n5.\tNFR: The game should be able to handle up to 15 cars on the gameboard. \n6.\tNFR: It should take less than 30 minutes to add a new collision type.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280712,
      "meta": {},
      "text": "Usability\nYou can play the game using only a mouse; no keyboard inputs needed\nReliability\n• \n• Robustness\n• Safety\n• Security\n\nPerformance\n\tThe car steered by the player moves only in the direction of the last mouse click.\n\nSupportability\n\tThe game should work platform independent.\n\tThe collision type can be changed during gameplay.\n\n",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1281532,
      "meta": {},
      "text": "NFR1 Usability: The user can choose the car and start driving within two clicks.\nNFR2 Usability: The user can stop the game with one click.\n\nNFR3 Reliability: The game pauses when the user clicks outside of the window.\n\nNFR4 Performance: The game can be played by only one user.\n\nNFR5 Supportability: The game can be used on Windows, Mac and Linux.\nNFR6 Supportability: The different Car types have their own classes so that they easily can be changed.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281962,
      "meta": {},
      "text": "NFR1 Usability:\nThe user should preferably be able to play without pressing a single mouse button.\n\nNFR2 Visibility:\nThe game window and every single element should be large enough so that everything is clearly visible and easily distinguishable on every monitor.\n\nNFR3 Throughput:\nThe game should respond to user input in no longer than 0,5 seconds.\n\nNFR4 Minimal requirements:\nThe game should require a mouse or an equally accurate input device and sufficient storage on the computer's memory to run.\n\nNFR5 Adaptibility:\nThe game detects the player's monitor size and resizes the game window depending on the size.\n\nNFR6 Error feedback:\nIn the case of a crash, the game automatically detects the type of error and reports it to the player and the developer.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282560,
      "meta": {},
      "text": "Usability:\n\n1. Das Spiel soll so einfach gehalten werden, dass es innerhalb von 2 min auch ohne Erklärung verstanden/begriffen und gespielt werden kann.\n\n2. Das Spiel soll so ausgelegt werden, dass es sowohl auf einem Touchscreen als auch mit der Maus gespielt werden kann.\n\nReliability:\n\n3. Das Spiel soll gegen invalide Benutzereingaben robust sein und darf auf keinen Fall abstürzen wenn der Spieler eine falsche Eingabe macht. (z.B. die Tastatur statt der Maus benutzt).\n\nPerformance:\n\n4. Das Spiel soll solange nicht mehr als 20 Autos auf dem Spielbrett sind mit einer flüssigen Bildrate von min. 25 Bildern pro Sekunde dargestellt werden\n\n5. Das Spiel soll innerhalb von max. 100 Millisekunden auf die korrekten Eingaben des Benutzers reagieren. \n\nSupportability:\n\n6. Die Implementierung des Spiels soll so einfach gehalten werden, dass es innerhalb einer Stunde möglich ist das komplette Aussehen des Spiels (Autos, Hintergrund, Spieler) und die verwendete Musik (Soundeffekte Hintergrundmusik) auszutauschen. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1282934,
      "meta": {},
      "text": "U: -The player can start the game with 1 click of the start button and can stop the game with one click on the stop button and confirm/cancel this action with another click.\n-The interface should be very minimal. It should have start and stop button. When the game is won or lost a dialogue should pop up, stating such.\nR: - If the game crashes, it realises this and automatically restarts.\nP: - The game should use little resources, so even a PC with low performance (e.g. Raspberry pi) can execute it smoothly.\nS: - The game is able to run on all major operating systems (Windows, MacOS, Linux)\n- Bumpers should be easily extensible using inheritance.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285344,
      "meta": {},
      "text": "Non-functional requirements Bumpers:\n\nUsability: The Buttons for the game should be easy to find and have a very specific text on them that matches their exact functionality. The GUI of the game is also supposed to be kid friendly since this is the target audience for it.\n\nSafety: Since the game is supposed to be platform independent there shall not be any risk to harm any platform that is supposed to be supported by the game. \n\nSecurity: Since the game is supposed to have a Leaderboard with the names of the best achieving gamers, its important that collected data of users is reliably stored and impossible to be stolen.\n\nPerformance: its important that even if the player chooses to play against a high amount of opponents, the game still runs smoothly and is playable.\n\nAdaptability: The game is supposed to be platform independent and should be able to run on any modern device without a problem.\n\nMaintainability: Since the game is only in the beta version it is likely that there will be a lot of different upgrades in the future f.e.: new car types, new collisions...Therefore it is very important that these features are easy to add and also easy to change/remove when they are not wanted anymore.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285880,
      "meta": {},
      "text": "1.  Performance: there must not be a delay in time between the player's control and the moving car. So the car's response time must be short/unnoticeable. \n2. Usability: The sounds must not be too long or too loud to keep the user hooked to the game without boring them at the same time. \n3. Reliability: the game must tolerate a big amount of cars or amount of time it has been played. It must tolerate working a long amount of time without the cars glitching or switching positions randomly. \n4. Performance (Accuracy): the game should support different collisions and detect them accurately and play the correct sounds without messing them up. \n5. Supportability: the car speed can be changed whenever the player wants to during the game. \n6. Performance: It should visualize different parameters of the car, e.g. the speed, consumption and location of the car. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286031,
      "meta": {},
      "text": "1. \tThe game should be platform independent.\n2. \tManeuvering the car uncomplicated.\n3.\tThe goal and functionality of the game is intuitive.\n4.\tThe system is durable and edge cases are handled appropriately. \n5.\tUserinput is handled instantly without lag.\n6.\tAdding new game elements is simple.\n",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1287070,
      "meta": {},
      "text": "- The game should visualize different parameters of the player car, e.g. the speed and direction of the car.\n- The game should handle up to 50 Cars moving at the same time.\n- The game should have a guide explaining how it is played and a documentary explaining the functionality of all the buttons.\n-  The game should be platform independent.\n-  The servers should be available 99.98% everyday between 5 AM UCT and 3 AM UCT the following day and at least 50% during the remaining time(3 AM UCT to 5 AM UCT)\n- small bug fixes should happen at the latest 1 week, after the bug was discovered\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287872,
      "meta": {},
      "text": "1) Usability: player can see all settings in the main menu and shouldn't look for it in the deeper directories of the menu\n2) Reliability: when a player wants to stop the game, the action should be confirmed by the player;\n3) Performance: when player steer auto with a mouse, it should change the direction within 5 ms;\n4) Supportability: the game can be launched on any operating system;\n5) Usability: user can start a new game in three clicks\n6) Performance: the game starts within 1 second after it is launched\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280851,
      "meta": {},
      "text": "Usability:\n-player can start the game with a button click \"start game\".\n\nReliability:\n- the system can tolerate temperature up to 80 degrees.\n- after collision, the car must be stop at once.\n- the fastest speed of car maximal 120 km/h\n\nPerformance:\n- it can support maximal 30 player drive the car on a game board at the same time.\n- the process of the collision until end, it will take less than 2 seconds.\n\nAvailability:\n- the downtime of gameboard is at most 4.32min per day.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281023,
      "meta": {},
      "text": "NFR1 Usability: The game should be intuitive to play and the UI should be easy to understand. The player can get the information about the game result.\nNFR2 User Control Freedom: It is possible for the player to stop the game and exit at any time.\nNFR3 Reliability: The game should ask for confirmation from the player when the player clicks on exit or close button to make sure that is not  an unintentional operation.\nNFR4 Availability: The game should staty open only if the player clicks on exit or close the game.\nNFR5 Response Time: The game should response within 30 ms after the player clicks the mouse to make sure there is no obvious delay.\nNFR6 Maintainability: The bugs existing in the game should be able to be reported to the developer to make them know and fix it in the next update.  ",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282289,
      "meta": {},
      "text": "Requirements:\n\n1. The game should run stable and efficiently on all platforms.\n2. The controls and settings should be easily accessible, additionally an ingame-manual may be provided.\n3. New content should easily be able to be added, e.g. new cars or music.\n4. The game should be ad-free and safe to play (in regards to personal data, viruses etc.).\n5. The graphics should be visually pleasing but not too overdone since it's a 2D game.\n6. The code should be clean and understandable so that any issues and bugs are fixable in a short period of    time. (Ideally it would be completely bug-free but that's probably not a realistic goal.)",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283564,
      "meta": {},
      "text": "1. The game has a simple user interface that consists of two buttons and a game board making it easy to learn. (Usability) \n2. The game is platform independent, users can play the game on any OS. (Usability)\n3.  The game is robust since the player is unable to enter input that will break the system. (Reliability)\n4. The availability of the game once downloaded is 100% since it is stored locally on the users computer. (Performance)\n5. The performance of the game will always max performance, as long as the user machine allows it. This is because only one user at the time is able to play the game locally and there is no need to handle more users at the same time. (Performance)\n6.  The game can be updated by developers and re downloaded by users to easily receive the updated version. (Supportability)\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285115,
      "meta": {},
      "text": "- Usability: \n -> The player can steer the direction of the car with the mouse and change its speed\n -> The car icons should have a size of\n -> When the game is started, music is played\n- Reliability:\n -> When the game is started, music is played\n -> When cars crash, there has to be a sound effect.\n- Performance:\n -> The game can be played by one player\n- Supportability:\n -> The game should be able to be played cross plattform (mac and windows)\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285408,
      "meta": {},
      "text": "1U. Starting the game must be as straightforward as pressing two buttons: for car selection and the Start button\n2P. The game must run without problems on all hardware&software, that technically supports this type of build/executable\n3R. The game must run stable, without any unwanted or unexpected behaviour, like crashing, launching other windows, frame drops, unresponsiveness\n4S. The game must be compact, with all resources and the exectable the game must take no more than 50Mb of disk space\n5U. The game and car stats UI (for speed, location etc.) should not obscure the players vision, nor overlap with any other UI Elements\n6U. The game sounds should be properly adjusted, so that the player can play with speakers, as well as with headphones",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285546,
      "meta": {},
      "text": "NFR1 Visibility of status: The game should visualize the speed, consumption, and location of the car.\n\nNFR2 Frame rate: The game should run with at least 10 refreshs per second on the Rechnerhalle at TUM.\n\nNFR3 Target platform: The game should be supported independent from platforms.\n\nNFR4 Crash resistance: In 100 program launches on 10 different platforms the game should crash at most once.\n\nNFR5 Launch speed: The game should launched in at most 0.5 sec on the Rechnerhalle at TUM.\n\nNFR6 User control: The user should be able to restart the game with only one click.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286102,
      "meta": {},
      "text": "Usability:\n-The user can only operate the game with the mouse\n-The font size of the parameters of the car should be at least 14\n\nReliability:\n-The player can't steer cars other than his own (Robustness)\n-The game should be platform independent, e.g. the game has to work equally on all devices (Safety)\n\nPerformance:\n-The time until the winner is shown after the game ends mustn't be longer than 1 second\n\nSupportability:\n-The game should adapt to different audio systems, the sound should be working at all circumstances (Adaptability)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286368,
      "meta": {},
      "text": "*Maintainability: new Car types or collisions can be added within 10 minutes by the developer.\n*Usability: The game can be started and stopped with only one click\n*Robustness: The game can not be crashed when the user clicks several times (up to 10 times/sec)\n*Adaptability: the game is supported in all operating systems (Windows, Linux, ios..)\n*Performance: The game can support 2 players simultaneously (a player with the mouse and a player with the keyboard)\n*Response Time: the game is launched within 1 ms when the player starts the game.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286690,
      "meta": {},
      "text": "1. The player should be able to use the mouse to steer the car (usability)\n2. The code of the game should be stored protected and only the developers should have access (security)\n3. The game should run without any interruption in >99% of the cases (performance)\n4. The game should be platform independent (adaptability)\n5. The player should be able to start and stop the game (uaability)\n6. The game should support different types of collision (adaptability)",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287773,
      "meta": {},
      "text": "Usability:\n- Single click interaction to control the car\n- Intuitive interaction and dialogs to report current game state to the user (e.g. player wins or loses)\n\nReliability:\n- The game does not crash or enter a state where the behavior is undefined\n\nPerformance:\n- Response times of the hardware to be tested should be calculated and logged, hence the game itself should (ideally) have instantaneous (~1ms) input response times\n\nSupportability:\n- The game should (ideally) be able to be updated during the lifecycle of development to add new features such as new cars, collision types and music\n- The game is lightweight and runs regardless of hardware (to enable testing of a wide array of peripherals)\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281450,
      "meta": {},
      "text": "usability:\n-> music playing in background and when crashing cars -> Enjoyability\n\nsupportability:\n-> the game should be platform independent\n\nperformance:\n-> collisions should be accurate i.e. cars should collide when it looks like they should collide\n-> car controlls should be responsive i.e. fast response time\n-> the game shouldnt lag when played (frames per second should stay consistent)\n\nreliability:\n-> the rules of the game should stay consistent and not be affected by neither bugs in the game\nnor undefined user input",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1281540,
      "meta": {},
      "text": "1) [Usability] Bumpers game must have a \"Quick start\" feature, so the game can be started with one click.\n2) [Usability] The player's car can be controlled with the mouse.\n3) [Reliability] Exceptions thrown in the program should not interrupt the started game.\n4) [Performance] Response time while driving the car should not exceed 10 milliseconds.\n5) [Supportability] The game should be able to be ported to any platform.\n6) [Supportability] All methods in the code must contain comments describing the purpose of these methods.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282076,
      "meta": {},
      "text": "Bumpers Nonfunctional Requirements:\n\n1. usability (efficiency):\nPlayer should need at most 2 clicks to end the game\n\n2. usability (memorability):\ndepending on the speed of the car the car should change its colour. (e.g. the faster the car the darker the color)\n\n3. reliability (Robustness):\nthe game should handle the speed between \"0 km/h and 120km/h\". Meaning there should be a maximum speed and when the speed should be increased further it stay sat the maximum. same with negative speed, then it should stay at 0.\n\n4. performance (response time):\nWhen stopping (e.g. with a mouse click) the game it should take at most 0.2 seconds to recognise that the game stopped. \n\n5. supportability (Adaptability)\nThe music and color scheme has to shift between two different modes at day and night. Meaning at the day there is a more active and light color scheme for the game and at night the music has to quieter and the the color scheme has to be in dark mode. It needs to be attention on what time zone the player is in!",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282683,
      "meta": {},
      "text": "Usability: The player can start and stop the game\n\nRobustness: Music is played when the player starts the game\n\nPerformance: The player can steer the direction of the car with the mouse and change it's speed\n\nAvailability: The game should be platform independent\n\nAdaptability: The game should support different collisions\n\nThe determination of the collision winner should be changeable during gameplay \n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283153,
      "meta": {},
      "text": "-Sollte der Spieler aus dem Spiel klicken, pausiert das Spiel (falls es bereits gestartet wurde).\n-Das spiel beendet die Partie automatisch nach 20 min. Dies soll verhindern das man in einer Partie \"gefangen\"   \n ist.\n-Die Kollisionsabfrage sollten nur zwischen dem Spieler-Auto und den Computergesteuerten Fahrzeugen\n ausgeführt werden.\n-Das Spiel sollte mindestens 200 Kollisionen in unter einer Sekunde verarbeiten können.\n-Das Spiel sollte höchstens 0.01 Sekunden nach der Eingabe einer neuen Zielposition brauchen, um den                 \n Spielercarakter diese anzusteuern zu lassen.\n-Man sollte dazu in der Lage sein, die Anzeigebilder der Autos mit dem umschreiben einer String-Variable \n ändern zu können.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1283900,
      "meta": {},
      "text": "Usability:  1.The user should be able to start and stop the game with only one click.\n2. The user should be able to memorize the control of the car after just one game due to the uncomplexness of the game and the car's movement should respond instantly to the users clicks. There should be no humanly observable delay.\nReliability:  3. The game should handle all of the possible inputs a normal keyboard has.\nPerformance: 4. (availability) the game should require no wifi connection and no heavy system requirements (should work with all machines after 2015 (windows, mac, linux))\n5. The availability should be 100% due to simplicity of the game.\nSupportability: 6. the software should be able to adapt to all normal screen resolutions.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286543,
      "meta": {},
      "text": "6 Quality requirements:\nU = Usability\nR = Reliability\nP = Performance\nS = Supportability\n\n1. U: \"the player can steer the direction of the car [...] and change its speed.\" Using the keys \"f\" for faster and \"s\" for slower would make speed change intuitive, since it mirrors the meaning of the words in real life. This fits Nielsen's Usability heuristic nr 2 (slide 25). \n\n2. U: In a past exercise we defined that there can be multiple types of cars. A NFR could be to use different, distinct icons for each type of car, that express the car's \"identity\" in the real world. Further; the user's car could have a different outline to easily be discernable from the others. This fits Nielsen's Usability heuristic 1 (\"keep users informed where they currently are\") and 2 (\"use concepts familiar to the user\"). \n\n3. R: We want to protect against unwanted incidents (Safety): Thus, a NFR could be to disable all the keys, that are irrelevant to the gameplay so that an unwanted intervention i.e. Cat walks on keyboard) doesn't disturb the gameplay experience significantly\n\n4. R: We want to protect against intended incidents (Security): Modders and hackers can ruin the integrity of the game - we don't want that, even in single player. Therefore, a NFR could be to build or enable systems that block click bots, auto-clickers, auto-macros, and speed hacking. \n\n5. P: As we want players to experience the game on-demand and at all times, we want to limit system downtime - a core tenet to system performance. Ergo, a NFR could be to limit downtime to at most 10 minutes per week. \n\n6. S: As we add new functional requirements on a weekly basis and we work as a team, it is of utmost importance to guarantee the maintainability of the system. Consequently, a NFR could be to STRICTLY adhere to Java Coding conventions and not allow heterogenous code, so that each member can easily pick up where someone else left off and fix bugs quickly. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286719,
      "meta": {},
      "text": "I assumed that adding things to the problem statement is allowed because it is impossible to conclude a performance quality requirement purely out of the problem statement.\n\n- Usability:\n\t- A new game should be started within 5 clicks.\n\t- The game should be stopped within 2 clicks.\n\n- Reliability:\n\t- Player's information should be kept private and not exposed.\n\n- Performance:\n\t- The game should run at 25 frames per second without interruption.\n\t(this comes from the source code)\n\n- Supportability:\n\t- New updates to the game must not deliver game-breaking bugs.\n \t- The game should be platform independent.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286944,
      "meta": {},
      "text": "Usability:\n- Learning steering and controlling the car does not take more than two minutes.\n- The whole game is controllable with a handful of buttons.\n\nReliability:\n- There are no publicly known \"cheat codes\", which causes unintended behaviour.\n\nPerformance:\n- The time for the game to response to inputs is not longer than 100ms.\n- Multiple collisions and other actions at the same time can be handled.\n\nSupportability:\n- Changing the images of the cars is easy - it can be done in a couple of minutes.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287760,
      "meta": {},
      "text": "NFR1 Usability: The interface should be easy to navigate and access pages like game settings. Upon opening the application, it should be a maximum of 3 clicks until starting the game. \n\nNFR2 Security: The application should not store sensitive data like name, address, or location. The user can access the game when the correct account information is given.\n\nNFR3 Compatibility: Application functions on both IOS and Windows devices. \n\nNFR4 Localization: The user can change the geographical localization of the game so features such as language and timezone are compatible with the user. \n\nNFR5  Serviceability: The application should run a software update every 3 months that include changes in the game interface. \n\nNFR6 Speed: The application should start within 5 seconds after opening the application and while running, requests made by the user should be processed within 2 seconds. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280417,
      "meta": {},
      "text": "1. Usability: The player can start and stop a game with one button-click, which makes an easily identifiable and usable user interface\n2. Supportability: The game can adapt to every environment of a computer, so every operating system can run the game\n3. Performance: Each mouse click, which steers the player car, should have close to none response time delay, like a normal mouse click under 50 milliseconds, because the game relies heavily on reaction speed\n4. Reliability: Any user input on the keyboard or elsewhere not needed for game controls should have no influence on the running game to make it robust.\n5. Usability: Because the player only controls steering and speed, the controls are easy to learn and remember\n6. Supportability: Changing the number, speed and hotboxes of cars as well as the gameboard size should all be supported, so the game is able to adapt to such changes.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280766,
      "meta": {},
      "text": "1. NFR: Usability, the efficiency should be so good that a player can be up to 20 per cent faster in the second trial. So the added menues for starting and stopping the game in an application should be intuitive.\n\n2. NFR: Reliability - robustness: the system should accept displayed user input for the different collision types but it should handle false input by printing a visuell message. It might detect maybe numbers and show the player that numbers are forbitten and only letters are allowed.\n\n3. NFR:  Reliability - security: the system should be safe against a virus so that there aren't critical mistakes which stops the application or playing the music and it always runs, and stops only by shutting down the whole system.\n\n4. NFR: Performance: The system should be stable even if there are much more cars with changing effects in very slow speed selected. So the game is not over in seconds but it needs more capacity for the calculation of the program.\n\n5. NFR: Supportability - adaptability: especially by fast user input of the mouse click. The fast changes of direction should not make a difference in detecting the position and the detection of a crash.\n\n6. NFR: Supportability: the maintainability to give the developper a chance to let him create some new features. So the developper should not implement final variables eventhough another should work with these variables for user input. This would make it easier and safe time.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282350,
      "meta": {},
      "text": "1) The game has only three factors that can be influenced by the player, direction of the car, speed of the car and collision type. (Usability)\n2) The game maintains its functionality on different platforms, as it is platform-independent. (Adaptability)\n3) A new car type can be implemented without changing the functionality of the game. (Supportability)\n4) The speed of the players car can be changed with 1 click. (Usability)\n5) The response time of the system for a speed change should be <1sec. (Performance)\n6) The player should not be able to access the program code via the application. (Security)",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282965,
      "meta": {},
      "text": "1. The Game should be startable in less then 5 clicks\n2. The Game should support different platforms\n3: The Game should show all importent parameters of the car\n4. The game should support the usage of different crashes and cars\n5.The Car should be steerable with the mouse\n6.Crash winning conditions should be changable during the game",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284671,
      "meta": {},
      "text": "usability: \n-the player should be able to configure and start the game with a maximum of 4 clicks.\n-the player should be familiar with all the game's functions after three rounds of playing\n\nreliability:\n-the payment information of the customer should be stored in an encrypted manner in case the has a \npremium subscription \n\nperformance:\n-the game should support a minimum of 30 fps at all times\n-the graphics of the game should support an HD standard of 1080p\n\nsupportability:\n-the game should be updatable remotely \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285222,
      "meta": {},
      "text": "Usability:\n- User interacts using the mouse for car steering\n- User gets informed of the different parameters of a car\nReliability:\n- Default car is used if no car is chosen\n- The game is encrypted to prevent viruses.\nPerformance:\n- the game fps should be 60.\nSupportability:\n- The game should be platform independent.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287689,
      "meta": {},
      "text": "We can analyze our Non-functional requirements in the sense of quality crudely in 4 four different categories. Those are : Usability, Reliability,Performance and Supportasbilty. The most important thing here usability must be measurable. For example : Player must click at least 2 times to stop the game after he started it. Reliability ist also important to our system. We can definite the ability of  system. For Bumpers statement : There is an at most one car controlled by the player. Another example: the winning car must win all collisions, otherwise player must lose the game. Distinct example for next case \"Performance\" : the Game must react in 0.3 Seconds if any collisions happen. Our last defination is Supportability. A good system must adapt to new statuses. For instance: The game must be ready for different collisions. It must work with the same conditions although the angles and directions are distinguished. Last example : The Game should can be opened in different platforms. It helps to enhance one of the most important requiremnents \"Adaptability\".\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282361,
      "meta": {},
      "text": "1. Usability)  The start and stop buttons should at the top of the screen where the user can always see and \n                      press.\n                      If the user moves her/his mouse to right, left, up or down , the car moves in the same direction.\n                      The winner should be displayed with a text written in neon green. \n                       \n                      \n2. Reliability)  (safety) Only the users with the role \"game admin\" can change the model of the cars and the background music.\n\n3. Performance) (performance) If a collision happens, it should be noticed in less than 1 second.\n\n4. Supportability) (maintainability) If the game becomes unavailable, it can be under maintenance for approximately 5 hours.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282747,
      "meta": {},
      "text": "I want to sketch down the quality requirements, which I felt needed to be mentioned!\n1. Reliability: In game one user does not have an individual account, so the user should have unique data credentials in order to access the game.\n2. Usability: The game should be able to play with a joystick or keyboard buttons.\n3. Performance: Maximum number of cars in a game should not be more than 15.\nThe car's movement should be proper and avoid glitches.\n4. Supportability:  The random background and the images of cars can be set every time a game starts.\n5. Supportability: The game should ask the user to take a break after playing continuously for a long time.\n6. Usability: The images of the car should have a different color than the background and be properly visible to the user.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284018,
      "meta": {},
      "text": "Usability\n1. NFR Direct : Player needs just 1 click in the screen to steer the direction of the car.\n2. NFR Start Button: the game can start with the Start button or by clicking any part of the screen for simplicity reasons.\nReliability\n3. NFR Automatic save: if the game collapses due to external causes (eg computer crashes), the state of the game will be automatically saved for the player to continue it in the future.\nPerformance\n4. NFR  Number of players: The game  supports one player.\n5.  NFR Speed of response: the car must respond to the direction of the mouse in less than 1 second.\nSupportability.\n6. NFR Platform independance : the classes GameBoard, Car and Collision are independent of JavaFX to ease maintanability in the future.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284662,
      "meta": {},
      "text": "Usability: The interaction with the game should be very intuitive. The player is supposed to find out how to start, stop and play the game without giving it too much thought. \n\nReliability: no errors of any kind. No unwanted endless loops. Every button should do what it is supposed to do. \n\nPerformance: No delay. Smooth animations. Correct representation of the code by the UI\n\nSupportability: The game can be played on any platform flawlessly. Also the code has to be clear and easy to understand in oder to maintain the program. \n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285412,
      "meta": {},
      "text": "Usability:\n\t- Visibility of system status: The game should display the speed of the car, consumption and location\n\t- Sound effects have to be played when needed (crash, during gameplay, etc.)\n\nReliability:\n\t- No matter what the user inputs (random keypresses, etc.) the car should follow the mouse-clicks and the game shouldn't crash in the meantime\n\nPerformance:\n\t- The game should tolerate up to 10 cars on the Board simultaneously without crashing or malfunctioning\n\t- Collision-calculations should not take up more than 0.1 seconds (so the game can run smoothly)\n\nSupportability:\n\t- The game should be able to run no matter the platform (platform independence)",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286789,
      "meta": {},
      "text": "Usability:\n\"Das steuern des eigenen Autos sollte über die Maus gelöst werden. Es sollte möglich sein die Richtung in einem Klick zu verändern.\"\n\n\nReliability:\n\"Alle User-Eingaben die nicht auf dem Spielfeld erfolgen werden ignoriert. Zudem werden alle eingaben ignoriert die nicht mit der Maus erfolgen.\"\n\n\nPerformance:\n\"Das Programm sollte auch bei mehr als 50 Autos flüssig und ohne Delay laufen. Das evaluieren eines Gewinners darf nicht länger dauern als 0,05s.\"\n\n\"Die Verfügbarkeit des Programms sollte bei 99,8% liegen. (~20min pro Woche)\"\n\n\nSupportability:\n\"Das Spiel sollte auf Linux, Windows und MacIOS unterstützt werden.\"\n\n\"Neue Cartypes und/oder Musik sollten in weniger als 20min hinzugefügt werden können\"\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1287607,
      "meta": {},
      "text": "Usability:\nThe User should start and stop the game just with one click. Choosing the cars speed can (but doesn't have to) be done by one click before starting the game.\nChanging the speed should happen just with one buttonclick on display or on keyboard.\nChanging collision type during the game should take not more than two button clicks on keyboard/display.\nThe game should have same control behaviour and design on every platform.\n\nReliability:\nThere should be no problems in all kombinations of platform and collision type.\nOther user input than the defined should be ignored and should not lead to unkown/ unwanted behaviour.\n\nPerformance:\nBecause it's a realtime game, there should be no delay between user input an visualization of the car movement. Also the crash should be calculated immediatly and it's result with all sounds etc. should be visible in realtime.\nThe game is offline, so it should be available at any time.\n\nSupportability:\nThe game should support all platforms.\nTo be as transparent as possible for user and debugger the game should give information about all parameters like speed, consumption and location of the car.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287684,
      "meta": {},
      "text": "Usability\n• Reliability\n• Performance\n• Supportability\n\nUsability\n- Player only needs mouse to play game.\n- Only few information visualized (so player can focus on game and learns quickly how to make use of the visualized information).\n\nReliability\n- Game handles all mouse position input.\n- Game handles different Collisions even when changed within game.\n\nPerformance\n- System can play music while visualizing a Gameboard, additional information and a user interface.\n\nSupportability\n- Game should be platform independent.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287765,
      "meta": {},
      "text": "Usability:\t\tBefore the game starts, the system briefly shows text explaining the rules of the game. After that \t\t\t\t\t the game starts.\n\t\t\t\nRealibility:\t(Robustness) If there is a collision, the game does not crash.\n\nPerfomance:\tThe game supports up to 100 cars participating simultaneously. \n\t\t\t(Availability) The downtime is 15 min per year.\nSupportability:\t(Adaptability) New car and collision types can be added.\n\t\t\t(Maintanability) Bugs in the game can be dealt within 15 minutes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281244,
      "meta": {},
      "text": "Quality requirements consist of the following categories:\nUsability, Reliability, Performance, Supportability. For each category, I will present an example from the text.\n\nUsability:\n\t1. A maximum of one mouse click has to be sufficient to steer the car in a certain direction\n\t2. The music should be balanced in the right way to be able to hear collisions\nReliability:\n\t(1. When the user chooses an unexpected type of collision the system shell be able to handle those \n\t   errors)\n\t1. When entering your user name, the system should be able to maintain a certain logic so that you\n\t    cannot enter wrong or misleading names.\nPerformance:\n\t1. The software should be robust enough to handle a certain amount of cars that the client requests\n\t2. The game should be able to handle a certain amount of mouse-clicked (to steer) when the game is \n\t     running longer than expected\nSupportability:\n\t1. You should be able to update and maintain the software easily, e.g. adapt to new car changes \n\t    requested by the client\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281336,
      "meta": {},
      "text": "Requirement 1: Usability: The players car should be at least 0.5 cm wide and tall for him to see it correctly and have a good experience playing.\n\nRequirement 2: Reliability: The game should be robust enough to handle missing music or sound files and if required, run without sound and music instead of breaking down.\n\nRequirement 3: Performance: The game should be able to support at least 6 car-bots in one game.\n\nRequirement 4: Supportability: The game should run on different platforms.\n\nRequirement 5: Usability: The player needs at most 2 clicks to change the collision type.\n\nRequirement 6: Performance: The game should adjust the player's car's direction in at most 0.2 seconds after the player moves the mouse.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281518,
      "meta": {},
      "text": "The first requirement, which is from the Usability category is that the user can steer his car by using his mouse and therefore only with his right hand, which means there is no left and right hand coordination necesarry.\nBecause of that its very beginner-friendly and also very easy to learn.\n\nThe second requirement, which is also from the Usability category, changes the background of the gameboard every time he starts a new round. This is necesarry beacause otherwise the user will be bored quickly. By changing it each round the player is looking forward to see the next background.\n\nThe third requirement is from the Reliability category. Whenever the user hits any key on his keyboard the game is automaticaly paused and writes a message: \"Please use your mouse only!!!\". This prevents the user from trying to steer his car with his keyboard.\n\nAnother requiremnt from the Reliability category is that whenever a player tabs out of the game, it is immeadiately paused. Otherwise the player might lose the game without any fault. The same applies for a mobile version; whenever a player closes the game, it is automaticaly stopped.\n\nThe time period before a user can start a new game after he played a round should not be longer then two seconds. Otherwise the player might get mad at the game. This requirement is from the Performance category.\n\nThe last requirement, from the Supportability category is that the game will be updated every week to ensure, that potential bugs are fixed and new content is released.\n\n\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282734,
      "meta": {},
      "text": "FR1 : Drive car\n\nFR2 : Evaluate winner\n\nNFR1 : Usability\nPlayers can steer their car through 1 click of the mouse.\n\nNFR2 : Reliability\nThe game is able to maintain all of its function(car steering, collision detection, music playing, winner evaluation) when players change their car type.\n\nNFR3 : Performance\nThe game can detect collision in less than 1s.\n\nNFR4 : Supportability\nThe game functions correctly in different platforms (IOS, Andriod and Microsoft) .",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284452,
      "meta": {},
      "text": "1. Usability\nThe first NFR would be, that the player can steer the car with his mouse & influence the speed & direction by clicking on the game-board.\nAnother requirement for this category would be that the user has the ability to start & stop the game, whenever they like.\n\n2. Reliability\nThe game should be able to sustain wrong inputs from the user. For example the game should not crash when the player uses his arrow keys instead of the mouse to steer the car. \nAnother point would be that the game should always end when the player car has successfully crashed the other cars.\n\n3. Performance\nThe game should be able to run smoothly even if the player has added multiple cars to the game.\n\n4. Supportability\nThe game should feature cross-platform options, meaning the user should be able to play the game on different platforms independently.\nFurthermore the game system should support a variety of different cars, which the user can choose from.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285163,
      "meta": {},
      "text": "Performance:\nNFR1 Performance: 99% of gameticks should be processed in less than 10ms\n\nSupportability:\nNFR2 Operating Systems: The game should work correctly on different operating systems (Linux, Windows, MacOS)\nNFR6 Maintainability: In order to stay maintainable, all code needs to follow the known code standards for each language used (for Java, the code should create no issues when analyzed with the Google Java Style Guide)\n\nUsability:\nNFR3 User Interaction: The user should be able to start the game in one user interaction after sopening the game\nNFR4 Collision Switch: The user should be ablte to switch to a different collision in 2 interactions or less\n\nReliability:\nNFR5 Robustness: Bumpers should be able to work, even if other programs are opened on the user's device (Bumpers should still work if other programs utilize up to 90% of the CPU and up to 80% of the device's RAM)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285751,
      "meta": {},
      "text": "Nonfunctional requirements:\n\tUsability:\n\t\t- \"Players need at most 6 clicks to start the game\"\n\t\t- \"Players need at most 1 click to stop the game\"\n\tReliability:\n\t\t- \"Prevention of attacks on game intern settings like specifications of cars or collision types\"\n\tPerformance:\n\t\t- \"Up to 40 cars simultaneously on the gameboard should be supported\"\n\tSupportability:\n\t\t- \"Specifications of the cars can be changed within 5min\"\n\t\t- \"New car type can be added within 10min\"",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287716,
      "meta": {},
      "text": "1) Usability\n1.1) Learnability: the user interface is easy to learn. “ Bumpers is a game where cars drive on a game board and can crash each other….” The bumpers problem statement covers pretty much what the game is and how the user PlayStation the game.\n1.2) Memorability: as said above, the bumpers problem statement covers it all, which is quite short and thus memorable for the user.\n  \n2) Reliability: the system shall let user stop the game even though the game has no winner/ loser yet.\n\n3)Performance: “ The player can steer the direction of the car with the mouse and change its speed.” The system allows the user to change speed and location and must be able to handle the chosen speed and keep the game going.\n\n4) Supportability: \n4.1)the system of the game should not be dependent on a single platform.\n4.2) the user can change the type of collisions during the gameplay and the system can handle the change.\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280402,
      "meta": {},
      "text": "Usability\n1. Player/User should be able to change either Car-Type or Collision-Type in less than 3 clicks.\n\nReliability\n2. The credits for any photos or audio used from the internet or any external sources for the Bumpers game have to be mentioned in order to avoid legal issues of copyright or similar issues.  For this an extra button is to be created so that the user can check the sources.\n\nPerformance\n3. Bumpers should be able to display a minimum of 7 cars on the gameboard excluding the Player-Car without misfunctioning or changing the defined functions.\n\nSupportability\n4. New sounds, background images, new Car-Types and Collision-Types should be easy to add, without changing any other functionalities of the game. Player/user should be able to select these new options.\n\nUsability\n5. The speed of any car should never be more than 10, so that it is enjoyable and playable for the user. Additionally the steering of the car should be done with mouse clicks and the increasing of the car speed by pressing and holding the space bar.\n\nSupportability\n6. Scaling the gameboard should not lead to blurred images of cars and background. For all gameboard sizes a minimum resolution of Full HD has to be maintained.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280820,
      "meta": {},
      "text": "NFR1 Reliability\n'The game must not break when the player alternates between starting and stopping the game 20 times in rapid succession, as fast as they can click (at most 40.2 clicks per second).'\n\nNFR2 Usability\n'No more than 5 parameters of the car should be visualised at all times.'\n\nNFR3 Usability\n'The player can either click with the left mouse button, right mouse button or click on the mouse wheel - all buttons will steer the car.'\n\nNFR4 Performance\n'The game must run in real-time (i.e. not lag) under each collision type.'\n\nNFR5 Performance\n'After a click, the game must change the player's car's direction in between the time it takes the fastest human to make another click (40.2 clicks per second).'\n\nNFR6 Supportability\n'The game should be platform independent.'\n\nNFR1 is a reliability requirement because it asserts the maintenance of system functions (game starting and stopping) under arbitrary player input. Developers must account for such unreasonable and unpredictable user actions. \n\nNFR2 is a usability requirement because it considers how easily the system functions can be used. The requirement will make it easier for users to not be overloaded by icons and data.\n\nNFR3 is a usability requirement because it increases the convenience of the user. They don't have to memorise or care which mouse button to click, all buttons lead to the same action.\n\nNFR4 is a performance requirement because it limits the throughput of the system. The requirement addresses the concern that extremely sophisticated collision algorithms tend to not be applicable to real-time gaming. There is no chance that the client will accept a laggy, slow game, even though it might evaluate collisions of arbitrary shapes perfectly.\n\nNFR5 is a performance requirement because it demands a task to be executed in a timely manner. The harsh requirement may seem exaggerated, but the user will immediately notice when they click and nothing happens.\n\nNFR6 is a supportability requirement because it concerns the maintenance of the system program. Platform independent programs tend to be more easily maintainable. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283873,
      "meta": {},
      "text": "1. Usability: Players don't need more than 3 clicks to start the game\n2. Reliability: Even with wrong user input the game still functions normally\n3. Performance: The game should be available at least 99.9% of the time\n4. Performance: The game can handle 100.000 players at once \n5. Performance: 99% of all user inputs should be handled in less than 0.1 seconds\n6. Supportability: Bug fixes do not take the developers longer than 1 hour",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284071,
      "meta": {},
      "text": "1. Useability: The game should be intuitive to start/play, and all buttons schould be labeled with their funtionallity, so that the interface is easy to understand. \n2. Useability: All interactions needed to setup and start the game should be completed in less than three clicks.\n3. Reliability: The probability of a crash(game crash not a car colission!!!) should be lower than 0.1% (less than 1 crash in 1000 game runs). \n4. Performance: The game should not consume more than 1gb of ram-memory, so that the player is able to use other applications on his system while playing the game.\n5. Performance: Inputs from the player (to start and play the game) shall be processed in less than 0.5 seconds.\n6. Supportability: The window size of the game should be customizable. There should be a minimum size consuming at most 33% of the screen, which can be scaled up to fullscreen size. The car icons should adapt to the scaling of the game.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284374,
      "meta": {},
      "text": "NFR1: When the game is opened, the gameplay should not instantly start. The user first has to click on the start game button. This is to be consistent with other games and meet the expectations of the user when playing a game (Nielsen Point 4). Additionally, the user can prepare for the game and therefore reach a better score.\n\nNFR2: When the user loses the game, a popup should be displayed saying that the user has lost game. Additionally, it should feature a short description why he lost in regards to the currently selected collision type to prevent miscomprehension by the user.\n\nNFR3: When the player stops the game while currently playing, the game board should be resetted and the player should be able to start a completely new game afterwards with no leftovers of the old game state.\n\nNFR4: The game should be playable with about 25 fps on average, so that the game looks smooth to the end user. This refers to a situation where there are 10 cars on the game board which are moving.\n\nNFR5: When the player does a mouse action (steering or changing the speed), it should not take more than 2 game ticks (less than 0.1s) to actually change the direction of the car or the speed.\n\nNFR6: When changing the collision type (more broadly the environment), the game should use this new collision type for collision detection and winner evaluation instead of the old one.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284585,
      "meta": {},
      "text": "NFR1:\n\nUsability: The pictures of the cars should be well visible to the user.\n\nNFR2:\n\nReliability: The system shouldn’t crash when the user tries steering the car in many different directions in a very short period of time.\n\nNFR3:\n\nPerformance: Every one of the transactions should be processed in less than 100 milliseconds.\n\nNFR4:\n\nSupportability: The system should be able to be modified in such a way that, for example, it can later be published as a phone app, and not only as a desktop application. The developer should not have to change the whole backend of the game, but only modify it so that it can handle the lack of a mouse and fit the phone screen.\n\nNFR5:\n\nUsability: Before starting the game for the first time, there should be a short tutorial on how to play the game. The user should be able to skip this, for example if they have already played the game on a different device.\n\nNFR6:\n\nAvailability: The downtime of the system should at most be 5 minutes a week, which implies the availability of the system should be 99.95% per week.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284809,
      "meta": {},
      "text": "Assumption: At least one requirement per UPRS category\n\nSupportability (Adaptability): Steering the car should be possible with external mouses and trackpads alike (and possibly keyboards when players don't have a mouse)\n\nSupportability (Adaptability): The game can be played on different operating systems with different softwares alike\n\nPerformance (Performance): The player's car shall react to his mouse movements without delay (processing time of input below 1 second)\n\nReliability (Safety): After four hours of playing without break the player is asked to take a break to ensure safety and avoid exhaustion\n\nUsability: Players need at most 10 clicks from beginning to starting the game (selecting parameters for the car and actually starting the game)\n\nUsability (User Experience): When the game is stopped because of an error, the system automatically reboots itself",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284898,
      "meta": {},
      "text": "Quality Requirements\n1. The game should be easily learned by the user and once learned the user should easily memorize how the game is played. All actions in the game can be done only using the mouse. \n2. Changing the settings of the game should be an easy task for every user. The user should be able to change every aspect of the game (collision, car, ...) in less then 4 clicks. \n3. Bumpers should mantain it's function even if the user shows an unexpected behavior. All Input by the User that isn't defined in the game should be ignored.\n4. The gmae should be able to handle many different types of changes in the game in a short period of time. The car of the player could collide with to cars ina period of 1 second and the winner of both collision should be dertermined accordingly.\n5. The User can change the settings of the game and the game should adapt to the new circumstances.\n6. The bumpers game schould be easily mantained and the developer should be able to deal with new requirements by the User. New types of cars and collisions that need to be added to the game should be ready in less then a day. This means the developer can receive a new requirement by the user for a new car and the next day the user should be able to use the new type of car.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286261,
      "meta": {},
      "text": "NFR1: The user only needs a mouse to start and play the game (Usability)\nNFR2: The user needs at most 2 clicks to start the game (Usability)\nNFR3: The app doesn't crash when the user tabs out or clicks outside the game (Reliability)\nNFR4: The app can handle at least 50 vehicles at 20fps (Performance)\nNFR5: The app can run on any major operation system(macOS, Windows and linux) (Supportability)\nNFR6: The app can run on any java with version 7 or higher (Supportability)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286819,
      "meta": {},
      "text": "1. The player can start the game with the default settings after 3 clicks U\n2. The app should use two-factor authentication R\n3. The game should be available 97,4% of the time P\n4. The game should host at least 5 players playing simultaneously P\n5. The app should be compatible with both iOS and Android S\n6. The app should have a respond time of 3 seconds P\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280940,
      "meta": {},
      "text": "1. The player can steer the car's moving direction by clicking the mouse and speed it up with double clicks. (Usability)\n2. At the beginning of the game, the player should choose a game mode, otherwise the game would begin with default settings. (Robustness)\n3. If the player is so exciting that he clicks outside the gameboard, the game would immediately pause and save progress automatically to make sure that the player could still continue the game. (Robustness)\n4. The game could be played by up to four people at the same time. (Performance)\n5. The game has maximum 30 minutes downtime per week. (Performance)\n6. The game should run correctly without Internet access, i.e. playing against the AI players. (Supportability)",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281299,
      "meta": {},
      "text": "Any player who knows how to drive on the game board can crash into each other. [Usability requirement]\n\nIn each collision, there is a winning car. The car that wins all collisions is the winner of the game.[Usability requirement]\n\nThe player can start and stop the game. [Usability requirement]\n\nWhen the game is started, music is played. [Reliability requirement, robustness]\n\nA car can be either fast or slow. [Performance requirement]\n\nPlayers can control one car. [Usability requirement]\n\nThe player can steer the direction of the car with the mouse and change its speed. [Usability requirement]\n\nThe game should be platform independent. It should visualize different parameters of the car, e.g. the speed, consumption and location of the car. [Supportability requirement]\n\nWhen cars crash, there has to be a sound effect. [Reliability requirement, robustness]\n\nThe game should support different collisions. [Supportability requirement, Adaptability] \n\nThe determination of the collision winner should be changeable during gameplay. [Supportability requirement, Maintainability] ",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1282594,
      "meta": {},
      "text": "Usability: The User Interface never has more than 5 Buttons.\nUsability: The Game has no bright lighting effects and no fast or sudden changes in brightness. (bc that can be \t\t\t \n  \t\tproblematic for people with certain illnesses)\n\nReliability: The Game has a Anti-Cheat Software that meets today's standards. \nSecurity: The Player Password and the Users email-adress will not be displayed to other Users or given to third parties.\n\nPerformance (Availability): In-game Items can be purchased at any time of the day.\n\nSupportability: The Game can be installed and played on every platform.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283854,
      "meta": {},
      "text": "Usability:\n- The user can change the collision type with one click\n- After the user stopped the game and starts it again, the whole game is resetted to start (do not continue where the game stopped before)\nReliability:\n - The game still works when the users drives against the wall. The car changes its direction automatically (Robustness)\n- When more than two cars crash, there is still only one winning car\nPerformance:\n- The game is running without loading times after the game starts (the visual never stops visible and just updates the GUI once every second)\nSupportability:\n- The game can be played on Windows and iOS laptops/PCs\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284038,
      "meta": {},
      "text": "Usability:\n\t1) The player starts the game in one click on the button \"START\"\n\t2)The player can steer the direction of the car with the mouse and change its speed\nReliability:\n\t3) If some button, that is not defined to the game  is pressed the system ignores the input and continue the \t \n           game.\n\nPerformance:\n\t4) All response times must be below 3 seconds.\n\t5)Only one player can play this game\nSupportability:\n\t6)The determination of the collision winner should be changeable during gameplay.\n\t7)The game could be played on every device, which supports java\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285144,
      "meta": {},
      "text": "NFR1: The change in direction of the player-controlled car after a left mouse click should occur within 0.25 seconds of the click. (Performance - Response time)\n\nNFR2: The system should be platform-independent, so as a concrete goal, it should run on Windows 8-11, MacOS 8-10.5 and Linux. (Supportability - Adaptability)\n\nNFR3: The game doesn't react to right-clicks or keyboard inputs from the user, and the player can't control other cars. (Reliability - Robustness, Safety and Security)\n\nNFR4: The system should be able to handle at least 25 crashes per second. (Performance - Peak workload)\n\nNFR5: The start and stop buttons, as well as the choose collision and car type dials should remain next to each other in the top left of the window, be at least 40x20 Pixels large, and should be labeled with letters with the minimum font-size of 13. (Usability - User Control and Freedom)\n\nNFR6: If the player doesn't choose a car or collision type, there's a default type selected. (Usability - Error prevention)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285147,
      "meta": {},
      "text": "1)\nThe visualized parameters of the car (e.g. speed, consumption and location) should be displayed in an minimal size and way so that the user has no trouble recognizing and reading them without distracting from or obscuring the gameplay.\n\n2)\nWrong inputs by the user should be ignored during gameplay. If a user fails to use any correct inputs, a hint displaying controls should be shown.\n\n3)\nThe user should not be able to change the winner of the game by cheating or in a way other than playing and winning the game as it is intended.\n\n4)\nThe game should be available at least 99% of the time.\n\n5)\nNew gameplay features like new car or collision types should be able to be easily added in upcoming updates.\n\n6)\nThe sound effects and music should not be louder than 60 db to not impair the users hearing.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285168,
      "meta": {},
      "text": "Usability:\n- Bumpers should allow the player to start the game with at most three clicks.\n- The icons of cars in bumpers should have such colors that are differentiable for red-green color blind people.\nReliability:\n- When playing consecutively for more than 5 hours, the player should be warned about safety for his personal health\nPerformance:\n- Bumpers should be able to display at least 20 different cars at 30 fps.\n- After the player request a direction change of his car, the car should respond within 0.2 seconds\nSupportability:\n- Bumpers should be portable across GNU/Linux and Windows Computers.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285421,
      "meta": {},
      "text": "Usability:\n- The users should be able to learn the game rules in less than 2 minutes\n- Users interact only with the mouse\n\nReliability:\n- If the mouse is outside the game window the game should use the cars last direction as input\n\nPerformance:\n- The game should be able to have up to 50 cars running at the same time\n\nSupportability:\n- The game should be able to be scaled by the user\n- If bluetooth speakers are connected, the game sound should start coming from them",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286065,
      "meta": {},
      "text": "Usability:\n\t- Players need at most 5 clicks to start the game.\n\t_ Players only ever need one click ton stop the game.\nReliability:\n\t- The system should withstand being stopped before being started.\n\t- The game should be able to handle several collisions at once.\nPerformance\n\t- After clicking the start game button, the game should at most take 1 second to start.\nSupportability:\n\t- The sprites for the cars, can be changed within 5 min.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286206,
      "meta": {},
      "text": "Non-functional requirements consist of Usability, Reliability, Performance, Supportability.\nUsability: Player controls the car and changes its speed with mouse.\n               \tPlayer can control only one car.\nRealiability: Only two cars can crush eachother and one of them neccesarily should be player car.\nPerformance: When cars crash, the player should hear a sound effect immediately.\nSupportability: Game should support different collisions.\n                        The determination of the collision winner should be changable during gameplay (adaptability).",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286319,
      "meta": {},
      "text": "Usability:\nThe game should be easy to start. It shouldn't take more than 2 interactions to start playing\n\nThe game should be usable in different countries, which means including at least 4 language option and the possibility to change the speed settings (km/h or mph) in 3 clicks\n\n\nReliability:\nDue to it being a small game, bugs and failures should be kept at a minimum and only 2% of runs should result in failures.\n\n\nPerformance:\nThe game should function smoothly, meaning it shouldn't take longer than 3 seconds loading the game to ensure a nice gameplay.\n\n\nSupportability: \nThe game must be in line with the requirements posted by the App - and Play Store, so it can be published on those platforms\n\nThe game should be usable on different platforms. It should be compatible to the newest versions with Windows macOS IOS and Android \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286643,
      "meta": {},
      "text": "Usability:\n- The System schould be able to play Music.\n- User interact with a mouse.\nSafety:\n- the user schouldnt be able to delet cars during the game \nResponse time:\n- the system sould be able to change the collision winner rules multiple times during a game.\nAccuracy:\n- the system schould always choose the correct winner of the collision\nAdaptability:\n- The game should be able to work on every platform",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286879,
      "meta": {},
      "text": "usability:\n-only one kind of user input required to play game (mouse, no other keys)\n\n-game should be playable with only pressing 3 buttons (start game, button to change collision type, stop game or accept game result notification)\n\nreliability:\n-there's only one user input (action listener event) possible in 100ms so there can't be conflicting input (for example two different directions for the car) and the game won't get slower \n\nperformance:\n-response time to clicks <150ms\n\nsupportability \n-game should run on different operating systems \n\n-everything should be documented (javadocs), explanation for every method except getters/setters\nso it's easier to find out what causes bugs \n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286918,
      "meta": {},
      "text": "- The game only uses a point-and-click mechanic to control their car, making it easy to learn and play (Usability)\n- The game mustn't crash or fail to properly load up at any point (Reliability)\n- The player shouldn't experience any frame drops above 5 fps at any point (Performance)\n- The game needs to run on Windows, aswell as macOS and Linux (Supportability)\n- The game should atleast support 3 different types of collisions\n- The player can restart the game with 1 click",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287174,
      "meta": {},
      "text": "Usability\n•The user can start, stop and play the game using the mouse only.\n\nReliability\n•The game shall continue normally even when the player uses the right mouse button to steer the car.\n\nPerformance\n•The availability of the game is at least 95%.\n•The game shall update with a rate of 25 fps.\n•The game must not take longer than 1 second to show the Message Tab.\n\nSupportability\n•The game should support the same functionalities with different car types and different collisions.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287287,
      "meta": {},
      "text": "- In jedem Programmzustand soll der Benutzer mit einem Mausklick in die Spieleinstellungen gelangen können [Usability]\n- Wenn der Benutzer das Schließen-Symbol des Fensters auswählt, soll, sofern gerade ein aktives Spiel läuft, das Spiel zunächst pausiert werden und eine zusätzliche Abfrage überprüfen, ob das Programm wirklich geschlossen werden soll. So kann vermieden werden, dass ein laufendes Spiel versehentlich geschlossen wird. [Reliability – Robustness]\n- Bei einem Klick auf das Spielfeld, soll das Spieler-Auto nach spätestens 50ms die Richtung ändern. Referenzsystem hierfür ist ein Dual-Core PC mit 4 GB Hauptspeicher. [Performance]\n- Die Ladezeit beim Starten des Spiels darf maximal 2 Sekunden betragen. (Referenzsystem s.o.) [Performance]\n- Als Eingabegeräte müssen sowohl Maus und Touchpad als auch Touch-Bildschirme unterstützt werden. [Supportability - Adaptability]\n- Die Hintergrundgrafik soll durch einen Entwickler innerhalb von 10 Minuten ausgetauscht werden können. Hierfür müssen lediglich die Bilddatei und Variablen für Höhe und Breite geändert werden. Die Größe der Autos passt sich dabei automatisch an die neuen Größenverhältnisse an. [Supportability - Maintainability]",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1287577,
      "meta": {},
      "text": "Nonfunctional Requirements:\n\nUsibility: As the bumper comes up with new versions, there has to be a good documention of the game. A documentation which is easy to understand for the future devolepers. \n\nReliability: The collision must take place accurately. Besides, the game has to continue from the point it was saved.\n\nPerformance: The game should not stuck during the play. Every move should be in the real time.\n\nSupportability: The game should be platform independent. Front end development must be independent of the technologis. Also, the back end must not rely on the front end code. The bumpers must provide friendly user interface.\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280366,
      "meta": {},
      "text": "1.Kategorie: Usability\nAufgrund von einem simplen Aufbau des Spiels ist keine lange Erklärung bzw. ein Lesen der Spielerklärung nötig\n\n\n2.Kategorie: Reliability\nDas Spiel sollte sich direkt an die Größe des jeweiligen Bildschirms anpassen, ohne zu verzerren oder unscharf zu werden.\n Mindestens sollten 414 x 896Pixel unterstützt sein.\n\n3.Kategorie: Performance\nDas Spiel darf nicht mehr als 20% des Speicherplatzes auf dem Endgerät, auf dem es gespielt wird, nutzen\n Damit es möglichst auf allen Endgeräten gespielt werden kann, und auch bei ansonsten hoher Auslastung des Speichers vielen Nutzer zugänglich ist\nDementsprechend sollte 1GB des Speichers den das Spiel benötigt nicht überschritten werden.\n\n\n4.Kategorie: Supportability\nDas Spiel muss auf verschiedenen Sprachen verfügbar sein, damit es weltweit ohne Verständigungsprobleme gespielt werden kann.\n\n Pflicht dabei ist Deutsch, Englisch, Französisch, Spanisch und Mandarin.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1284895,
      "meta": {},
      "text": "NFRs:\n\tUsability:\n\t\t- The users controls must be explained shortly on the same page as the \"start\" button appears.\n\t\t- Each button must be at least 50x50 pixels and clearly labeled.\n\tReliability:\n\t\t- The game must not have cheats available in its vanilla (unnmodded) form.\n\tPerformance:\n\t\t- The game mustrun with at least 30 FPS.\n\t\t- A collision must be detected and it's winner evaluated within 30ms\n\tSupportability:\n\t\t- The game should be able to scale to all resolutions between 720p and ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285643,
      "meta": {},
      "text": "- the user can change the speed of the car\n- the parameters of the player's car have to be visualised\n- the game may not react to mouse clicks outside the game board\n- the game should detect collisions between cars in less than 10 milliseconds\n- the type of collision can be changed during gameplay\n- the game has to run on all platforms that support Java",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286439,
      "meta": {},
      "text": "1. Usability (User experience) : The input from the player when driving is done with the mouse\n2. Reliability (Safety/Security) : No input from the user should cause the game to crash. \n3. Performance  (Response Time)  : It should take the car at most 20ms to respond to the player action\n4. Performance (Accuracy) : The direction in which the car moves should be calculated with a maximum error of 1 degree, from the real direction between the car and the point clicked on the screen\n5 . Supportability (Portability) : The game should be able to run on Windows, Linux and Mac OS\n6. Constraints  : The game should not include any indecent material ( because it will be played by children )\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287960,
      "meta": {},
      "text": "1 - Click to move\n\tThe player is should be able to move him car by clicking on a point, the car goes in that direction\n2 - Collide\n\tThe cars should be able to collide, each collision has a winner\n3 - Play music\n\tWhen the game starts background music is supposed to play\n4 - Platform independency\n\tThe game should be platform independent\n5 - Change collision settings\n\tThe different outcomes of collisions could be changed during gameplay\n6 - Play collision sound\n\tWhen cars collide there is a collision sound",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280510,
      "meta": {},
      "text": "\"The game should be platform independent\" - supportability (portability).\n\"The game should support different collisions\" - supportability (adaptability). The system should be able to change collisions constantly.\n\"The player can steer the direction of the car with the mouse and change its speed\" - usability. Player interacts with the mouse.\n\"The player can start and stop the game\" - reliability(safety). Player can stop the game, before he loses or wins. The game should continue until player wins or loses or clicks the button stop game. This is unwanted incident, if the player want to leave game before he loses or wins.\nCollision should be evaluated as fast as possible - performance.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281504,
      "meta": {},
      "text": "NFR1 Usability: The game should be intuitiv to use, and the interface should be easy to use. To choose type of car or collision, player need no more than 2 clicks. To start and stop the game no more than 1 clicks\nNFR2 Robustness: The max speed is 20.  \nNFR3 Performance: The game should begin in 0.1 second after click and should end in 0.1 second after click.\nNFR4 Maintainability: The new types of cars and collisions can be added in 10 Minutes.\nNFR5 Target platform: all platforms. \nNFR6 Adaptability: The determination of the collision winner should be changeable during gameplay",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284421,
      "meta": {},
      "text": "Usability:\n\n   - Players can start the game in 3 clicks\n   - The car images should have at least the dimensions 1,5 cm * 1,5 cm, so it is clearly visable by the user\n\nReliability:\n\n  - The game should be secure. One should not be able to \"hack\" or manipulate the game, so for instance the        \n    car is much faster than the others or always wins the collisions.\n\nPerformance: \n\n - every speed change should occur under 0,5 seconds\n - after a car crash the collision sound should be heard in less than 1 second\n\nSupportability:\n\n - In case of a game update (new car types or new collisoin sounds available) the update should not last more \n   than 20 minutes\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284832,
      "meta": {},
      "text": "- Starting a game should be possible with two clicks most\n- Direction change has to be performed within 20ms of the click\n- The application size must not exceed 50mb\n- The application must be offline in order to prevent attacks from the internet\n- Up to 20 enemy cars should be supported\n- Starting the application must not take more than 1 second on an average PC",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285411,
      "meta": {},
      "text": "Usability: \nLearnability:\nThe User has to click in order to steer the car into a certain direction, so in order to crush he/she must steer the car into anonther one. Therefore it is quite easy to learn and understand the system, since the user only has to click on certain parts of the field where he/she wants to go.\n\nPerformance:\nResponse time: The amount of time a car shall take to move once the user pressed the part of the map where he/she wants to go(e.g. each move shall take less then 5s to get from i.e.: x1,y1 to x2,y2)\n\nReliabilty :\nRobustness: One can change the environment, by letting more cars enter the game(there ins't really a limit of how many there can be in but if there would be to many the could be an error due to a false input)\nSafety: the reduction of risks in the game/system, in the beginning of a game there shouldn't be a car right in front of your car, 'cause one would instantly lose.\n\nSupportability: \nAdaptability: The existing open system is able to change its when its surroundings changes (e.g. when the speed of the other cars change ones car speed should also change)\n\nMaintainability: A developer can modify a system to survive in a new environment (e.g. the bad cars can go invisible therefore he/she can teleport)\n\n\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285700,
      "meta": {},
      "text": "1 Usability :Bumpers can be played without reading a user manual and Players start the game, wait 3 seconds for the car to start automatically, then use the keyboard up, down, left and right to control the car.（learnability）\n2 Portability: Bumpers can be moved from IOS to Android.\n3 Robustness: When the Bumpers player use the wrong key to steer car (wrong input),they will be notified with Illustrations.\n4 Performance :The game board should support an update of 25 frames per second.\n5 Performance :The cars direction should be changeable within 1/10 sec after steering. \n6 Maintainabiliy: Bumpers must be re-designable to a client-server architecture.This type of architecture has one or more client computers connected to a central server over a network or internet connection.\n7 Adaptability: Bumpers must support different language system according to the default language of players computer.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285985,
      "meta": {},
      "text": "+Usability: 1) according to Nielsen’s 1st heuristic stating that designers should keep the users informed about what's happening in the game through appropriate, timely feedback, in this case, through a sound effect informing the player about a crash -> When cars crash, there has to be a sound effect.\n                 2) the player can control the game, as in his car's speed and direction, and also has the freedom to start and stop the game (Nielsen's 3rd heuristic)->The player can start and stop the game. The player can steer the direction of the car with the mouse and change its speed.\n+Reliability (Robustness): 3) the game system has the ability to maintain the collision function when there are changes in the game environment->in this case when the collision type changes, the determination of the collision winner should be changeable during gameplay as well.\n+Performance: 4) this game supports only one user (player) simultaneously->There is one car controlled by the player.\n                       5) Throughput (the number of collisions that have to be made until the player wins the game)->In each collision, there is a winning car. The car that wins all collisions is the winner of the game.\n+ Supportability: 6) this game has the ability to adapt to other working environments, thus adaptability->The game should be platform-independent.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286313,
      "meta": {},
      "text": "Usability: \n- Within three clicks the user should be able to read the instructions of the game and start the game. \n\nReliability: \n- When the user enters any keyboard clicks or right mouse clicks, the game should not crash. It should handle these inputs as if these inputs never happened. \n\nPerformance: \n- The latency between clicking on the screen to move the car and the car actually moving on the screen should be less than 0,25 seconds. \n- The (running and active) game should take up no more than 0,5 GB of RAM. \n\nAdaptability: \n- The game should be able to run on all kinds of platforms -> It should be platform-independent. The game should run the same on computers running macOS, Linux, or Windows. \n- \"The determination of the collision winner should be changeable during gameplay\". Therefore many collision types have to be implemented. For maintainability and rapid testing/prototyping, it should be able to implement a new collision type in under half an hour by a developer. Concrete: The code needs to be structured in a way that the new collision type extends a \"super\" type and therefore only needs to implement/override a maximum of two methods. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287551,
      "meta": {},
      "text": "Define in total 6 quality requirements (i.e., non-functional requirements) for the Bumpers game, which should cover all the four different URPS categories.\n\nUsability:\n- The game should be started in less than 3 clicks\n- The average playtime is at least 10 seconds\n\nReliability:\n- The system won't break down due to illegal mouse input directions\n\nPerformance:\n- The availability of the system is at least 95%\n\nSupportability:\n- Car icons can be changed in under 5 min\n- The game works for android and ios",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287664,
      "meta": {},
      "text": "1) Usability: The determination of the collision winner has to be changeable during the gameplay within 3 clicks.\n2) Usability: All important information for the player (speed, direction, car type...)  during gameplay has to be visible on the main screen.\n3) Reliability: The gameplay has to be able to continue, even if more than 2 cars collide at the same time and has to choose the best outcome for the player when the collision winner is decided.\n4) Performance: The gameplay has to support 144 fps and the response time to user input has to lie within 1 frame.\n5) Performance: The game has to be playable 100% of the time.\n6) Supportability: The game has to be supported by the 10 most common operating systems. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287741,
      "meta": {},
      "text": "Non-Functional Requirements\n\nUsability\n- Der Spieler braucht weniger als 4 Klicks um das Spiel zu starten. \n- Der Start und Stop Button befinden sich immer oben links am Rand des Gameboards. Der Start Button ist links vom Stop Button\n\nReliabilty\n- Wenn eine ungültige Eingabe von der Tastatur erfolgt, soll das Spiel automatisch beendet werden.\n- The speed of the fastest car should be less than 20.\n\nPeformance\n- Nach einer Collision erhält der Gewinner nach weniger als einer Sekunde eine Nachricht.\n- das Spiel sollte zu 99% geöffnet und gespielt werden können\n\nSupportability\n- Das Spiel kann auf jedem Computer und Laptop mit Trackpad oder Mouse gespielt werden.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1280358,
      "meta": {},
      "text": "Usability: \n- Players need maximum one click to start the Game \n- Players need maximum two clicks to stop the Game \nReliability: \n-The player should be asked by the game after clicking on stop Game, if he really wants to leave to prevent him from unwanted leaving \nPerformance: \n- All games should start within 1 second, after the players click on start Game \n- After the last collision in the game, the winner should get the message within one second \nSupportability: \n-New car types can be developed by the developer within 20min\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281430,
      "meta": {},
      "text": "Non-functional (quality) requirements: URPS\nUsability: inform a player after each collision whether he won the collision or not (visibility of system status);\nbefore ending the game, ask a user to confirm the action (maybe he clicked the 'end game'' button by mistake);\nmake the slow and fast cars easily distinguishable from each other (use for fast cars icons of speed cars).\nReliability: continue the game even if a player does not steer his car.\nPerformance: ability to handle more than one collision simultaneously.\nSupportability: make it easy for developers to change the sound effects of the game if so required by a client/user.\n\n\n\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281665,
      "meta": {},
      "text": "Usability: \nThe application should be easy to learn, 80 out of 100 players should be able to play after 5 mins.\nReliability: \nThe Game-Application should be protected against the user Reading and Writing memory in order to gain an advantage within the game.\nPerformance: \nThe loading time of the Game-Application until it is ready to play must not exceed 5 seconds on 99 in 100 tries.\nThe Game-Application should only crash a maximum of 1 in 1000 games.\nThe game should be available for the user to play each month for 99% of the time, on average.\nSupportability:\nThe Game-Application should at least support 2 different system languages.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282283,
      "meta": {},
      "text": "NFR 1 Learnability: The game should be easy to start in just 3 clicks. \n\nNFR 2 Performance: Bumpers should be playable without lags. That means in particular that the game can be played with more than 60fps on every PC. After starting the game the loading time should be less then 3 seconds.\n\nNFR 3 Maintainability: We should use the newest technologies to keep our game maintainable for a long time. Furthermore, we should stick to \"Clean Code Conventions\" to make our code better readable. \n\nNFR 4 Satisfaction / user experience: Users should feel welcomed when opening Bumpers. Therefore when they open the game for the first time there should be a welcome-screen and a 5 minute tutorial how to play. Furthermore, it's important to save the user's settings that they don't have to be setuped every time you start the game.\n\nNFR 5 Reliability/Availability: The bumpers server should be online more than 99,7% a week. This means there is only a maximal downtime of 30 minutes a week.\n\nNFR 6 Efficience of use: There should be keyboard shortcuts for experienced users and, additionally, settings that the game automatically restarts. Also there should be an option to autostart the game by starting your PC.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282992,
      "meta": {},
      "text": "Usability:\n\n1: The player can start and stop the game with just 1 click.\n2: The parameters of the car have to be displayed with a font at most 2cm high, such that it is not too big.\n\nReliability: \n\nThe game has to work with the same file type when switching the operating system. \nThis is part of the robustness sub-category of reliability, since it means that the system can maintain a function even when the environment (in this case: the OS) changes.\n\nPerformance:\n\n1: The starting and loading of the game has to take less than 5 seconds. \n2: The game has to work 100% fluent even when up to 5 cars crash in he players car   \t simoultainously.\n\nSupportability:\n\nThe game should be programmed in a way, such that it takes less then 8 hours for a developer to fix any bug. This is part of the supportability sub-category. Meaning it defines how \"easy\" the system has to be able to be fixed.\n\n\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283614,
      "meta": {},
      "text": "\n1. It should be possible to close the game within 2 clicks.\n2. There should be a tutorial offered to explain the game.\n3. The game should not crash 99 out of 100 games.\n4. The loading time to start the game should be less than 1 second.\n5. it should take less than 5 minutes to change the start and stop music or an image of a car.\n6. Users should be allowed to change images of the cars themselves",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284118,
      "meta": {},
      "text": "NFR1 Usability: The Bumpers game should have instructions, which is no longer than 250 words and contains all rules necessary to play the game.\nNFR2 Robustness: Bumpers should not crash, regardless of the players in-game actions.\nNFR3 Response time: Car movements should be at maximum 1ms delayed after the players mouse click.\nNFR4 Adaptability: Bumpers works correctly independent of the screen size.\nNFR5 Maintainability: Cars and sounds in the game can be configured within 5 minutes.\nNFR6 Security: Bumpers does not need a running connection to the internet.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284903,
      "meta": {},
      "text": "1. The user should be shown the game controls before the first game (usability).\n2. The game should offer help and documentation for every aspect of the gameplay (usability).\n3. The user should have to use 3 clicks at most to change the collision type and resume gameplay (usability).\n4. The game should be safe against any attacks from the user that may alter its functionality (reliability).\n5. The game should run smoothly on every relevant operating system with a maximum input delay of 10ms for every action (performance).\n6. The game should support future updates for bug fixes and new features (supportability).",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286192,
      "meta": {},
      "text": "Controlling:\n\tThe player controls their car with the mouse.\n\nPlayability:\n\tThe player can play the game on most/all platforms.\n\nFeedback:\n\tThe player knows where they are and if they crashed at all times.\n\nCustomization:\n\tThe player can change the criteria for collision evaluation.\n\nRobustness:\n\tThere are limited possibilities for things to go wrong due to the simplistic nature of the game and limitation of user input.\n\nPerformance:\n\tThe game is expected to run well enough on most machines due to it's simple design.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286497,
      "meta": {},
      "text": "Usability:\n-The game must visualize car parameters that are important for the gameplay: speed, consumption, location, etc. correctly,  rasterized to the screen size.\n-the game must display warning, error and exception messages in a separate notification tab\nReliability:\n-the game must not crash for at least 60 minutes in 99% of uses\nPerformance:\n-the game must be able to run 60 fps and above on at least intel i3 5005U and intel UHD graphics 430\n-the response time of the car must not exceed 1 second on a machine with minimal hardware requirements\nSupportability:\n-The game must support adding new cars and new collision types\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281010,
      "meta": {},
      "text": "(1) Usability - users do not need more than 2 clicks to start the game and users do not need more than 3 clicks to end the game. Moreover, every click is not supposed to load longer than 0.1 seconds! \n\n(2) Reliability - The game is supposed to not save any data about the player, in order to increase the security of the personal data of every player. Moreover, the game should be tested more than 1000 times before release date, with crashes below 1%.\n\n(3) Performance - The game should support at least 50 cars at the same time and the processing time to start the game should be less than 1 second. Furthermore, the availability of the game has to be at least 99.9%.\n\n(4) Supportability - The game should work across different devices regardless of the operating system, meaning it is supposed to run on MacOS, Windows as well as Linux. \n\n(5) Usability - the layout is supposed to have always the exact same look on the screen, so that the user can get used to the interface. More specifically, the menu bar on top should cover at least 15% of the height.\n\n(6) Usability - the pop up window when starting the game should cover at least 50% of the total screen size, in order to provide a pleasant user experience.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281466,
      "meta": {},
      "text": "Usability: (1) \"The player can steer the direction of the car with the mouse and change its speed.\" Steering must be comprehensive and intuitive.\n(2) \"The player can start and stop the game.\" It must be easy to start and stop the game (no command prompts or something like that)\n\nReliability: (3) \"There is one car controlled by the player. \" (safety, because it could theoretically happen that the player steers 2 cars at the same time, that must not happen so that is a safety requirement - protection against unwanted incidents.)\n\nPerformance: (4) \"The determination of the collision winner should be changeable during gameplay.\" That means, that changing the determination of the winner during gameplay must be very performant, so the player does not have to wait for e.g. 5 minutes until it is changed on the server side. Therefore it's a performance req.\n\nSupportability: (5) Adaptibility: \"The game should support different collisions.\" The game needs to be easily adaptable in the future!\n(6) Portability: \"The game should be platform independent.\" That means, the game shall run on MacOS just as fine as on Windows.\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1282159,
      "meta": {},
      "text": "1) Usability - Learnability\nWhen the user first opens the Bumpers game, the user interface design should instantly make the most important program functions clear. This includes how to start and stop the game and how to control/steer the car.\n\n2) Usability - Efficiency\nOnce the user/player has understood how to play the Bumpers game, it should be fast to use. All performed actions should be visible at first sight and accessible via a single mouse click. \n\n3) Reliability - Security\nPlaying the Bumpers game should not put the player at risk of being attacked by viruses or other malware. For that reason, all implemented software should be up-to-date.\n\n4) Performance - Response time\nWhen the player provides an input to start or stop the Bumpers game, it should never take the program longer than a quarter of a second to respond. Steering the car's direction should happen without noticeable delay, requiring an input lag at or below 15 ms. \n\n5) Performance - Accuracy\nThe implementation of collisions should be precise. When performing a collision while playing the Bumpers game, the player should know exactly where the body of his own car ends and the other car's body begins and vice versa. The visually indicated borders should not deviate from the actual borders of a car by more than 3 pixels. \n\n6) Supportability - Portability\nThe program should work platform-independent. Bumpers should be supported by the operating systems Microsoft Windows, Linux and MacOS, provided that they run Java applications. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282827,
      "meta": {},
      "text": "*NFRS*\nUsability:\n+ A player is given 2 buttons: \"Start\" to start to game and \"Stop\" to end the game, which is quite useful because the user doesn't have to learn or remember anything to play the game.\n+ The objective of the player is always to win each collision until there is no car left to collide. Since the player has no other objectives apart from winning collisions, it adds up to the efficiency and memorability of the game.\nReliability:\n+ The outcome of winner car is always reliable despite the changes in collision types. Since the collision outcome of two cars is determined by their X-axises (Right car wins), hence there is no possibility for undetermined collision cases. Let's say, the two cars both have the same x-axis, then there can be no collision because the cars are moving parallel to each other.\nPerformance:\n+ As long as the player is in the game, the player is notified after each collision about the result of the collision. The system writes for example , \"The player's car won the collision!\". Therefore, the outcome of the collision is available immediately after every collision. Since the result of each collision is displayed, the results are always accurate and there is no delay.\n+The steering of the car changes direction precisely by 90 or 270 degrees with each mouse click. Therefore the response time and the accuracy of the direction is critical for the car to drive.\nSupportability:\n+ The collision types changes according to player's preferences. Therefore, with each collision type the determination of winners also change. The adaptability of the collision types show the supportability of the designed system.\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285191,
      "meta": {},
      "text": "- Usability: The player should be able to start and stop the game with only one click (intuitive visible button with respective label that the player has to click on).\n- Reliability: When the player enters a wrong type of speed (e.g. negative speed or letters instead of numbers) the system should just ignore it and maintain the same speed.\n- Performance: When the player changes the direction with the mouse (=moves the mouse in a different direction), the car in the game should change the direction accordingly within less than 0.5 seconds.\n- Supportability: If a bug occurs it should be handled within an hour.\n- Usability: The icons to visualize the different parameters of the car should be chosen with common sense and correspond to the ones used in a car and/or Google Maps.\n- Supportability: The game should run on Windows and macOS devices.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285543,
      "meta": {},
      "text": "Usability:\n1: After winning or losing the game should be restartable within less than 3 clicks.\n\n2:Clear messaging of the winning conditions for the  end-user. (User has to be know that a crash is won if he is more to the right than the other car.)\n\n\n\nReliability:\n\n3:The Game must not crash from edge cases like collisions from above etc.+\n\n4:Load times after game is started/after crashes for music and gameplay can't be over .5 seconds\n\nPerformance:\n\n5: The Game must be able to recognize more than 4 mouse presses per second for clean steering.\n\nSupportability:\n\n6:Car images and Background images have to be changable in one single location each.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285856,
      "meta": {},
      "text": "NFR1 Usability: All relevant information should be visualised directly within the main window.\nNFR2 Reliability: A Player should not be able to change the settings of the Game while a round is active.\nNFR3 Performance: The average game length of a determined player should be one minute at max.\nNFR4 Supportability: The program should be compatible with the addition of up to 3 additional car types, that are planned to be added after the release.\nNFR5 Supportability: The Non-Player-Cars should be slowed down if the last round was lost by the player and vice versa sped up if it was won to provide an adequate challenge.\nNFR6 Reliability: The game window should be paused and obscured if it isn't in focus to counteract miss-clicks outside the window",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286929,
      "meta": {},
      "text": "1) Gamer Experience:\nThe audio and the GUI of the game should be interesting for the user, so he will come back and play our game again.\n 2) How to use the system:\nThe user should start the game with 2 clicks and for playing the game, you should use min. number of key.\n3)Availability:\nThe system should be Available for different platform so our user can start the game on his or her desired device .\n4) Error management:\nThe system should be reliable and handle the Error very well so our system does not clap when the player is playing with the system.\n5) speed and minimum of use of energy:\nThe System should detect collision fast and save energy.\n6) Update:\nWe should update the system with the permission of user and it should just take one click. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287900,
      "meta": {},
      "text": "1. Usability\n- Good visibility of the cars from the backdrop\n\n2. Performance\n- 20 cars can drive at the same time\n- The system should always be available when the game is started\n\n\n3. Robustness\n-  The game does not crash even if the player overflows the system with constant steering\n\n4. Supportability\n- The player can choose his car\n- The player can influence what collision happens for each car",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287921,
      "meta": {},
      "text": "NFR1 Usability: The game should be ready to play in less than four clicks (setting the settings)\nNFR2 Robustness: Bumpers should not crash under any circumstances, all the game code should be formally proven\nNFR3 Performance: The game should never drop below 30 fps due to too much going on.\nNFR4 Maintainability: The code should be written and documented in a way that another new developer can fully understand it in less than a week.\nNFR5 Adaptability: There should be an easy way to configure basic game play, such as icons etc.\nNFR6 Response time: The response time for a mouse click should never take more than 10 ms.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281647,
      "meta": {},
      "text": "Usability\n- In order to start a game, not more than 5 clicks are needed\n- The game can be fully started and played with only a computer mouse\n\nReliability\n- If the user minimizes the game window, the game has to keep going even when it is minimized\n\nPerformance\n- The game has to be able to support a maximum of 20 autonomous cars simultaneously during a game\n- The response time for a mouse click to steer a car in a certain direction should be lower than 30 ms\n\nSupportability\n- New car types can be added completely remotely with a software update of less than 20 MB\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283021,
      "meta": {},
      "text": "Usability:\n- The text showing the car's speed, consumption and location should be at least 0.5cm high.\n- An EXIT GAME botton is clearly displayed in one of the corners of the game window.\n- It is possible to control the volume of the music and sound effects during the game.\n- When a wrong speed digit is entered, an ERROR warning should be displayed.\n\nReliability:\n- The game is designed to prevent cyberattacks and intrusion of viruses or trojan horses.\n\nPerfomance:\n- Response to mouse steering the car should take at most 1s.\n- Only 1 player can control the car at the time.\n\nSupportability:\n- The window size of the game should adjust to the screen's dimensions (mobile, web, tablet).\n- The developer can change the logic for collision winner at any time, by simply modifying/creating the new collision type.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284591,
      "meta": {},
      "text": "In terms of usability we define the following:\n- the user car controls should be intuitively understandable, so that a person which pays the game for the first time immediately understands the basic controls, and will not take more than one or two game cycles to memorize all of them. Therefore the game should not take more than 7 different degrees of input (individual keys, mouse movement degrees etc.)\n- it should not require a user manual all the options should be self explanatory to an unintroduced person\n- it should not take more than 1 mouse click to start the game from main menu\nIn terms of reliability we require that:\n- the game should be able to reliably recognize fast variations of user input and process them: in 500 key strokes or mouse clicks there should be not more than 1 missed input\nIn terms of performance we demand:\n- that the game should require minimal hardware power, so that a minimum framerate of 20 fps can be guaranteed, which is essential for the fast paced flow of the gameplay\nFinally for reasons of long term supportability we want:\n- the basic game design to be restructurable as a web-based application",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285627,
      "meta": {},
      "text": "NFR 1 Performance: The game should run at a minimum of 15 game ticks(ticks = times the cars execute their drive methode per second)\n\nNFR 2 Reliability: The game should not encounter any crashes at all\n\nNFR 3 Confront to guidelines: The programm should conform to the usability guidelines for the chosen operating system\n\nNFR 4 Usability: The design of the Game should allow the average user, to find the play button and understand the way to steer their car within 50 seconds\n\nNFR 5 Supportability: The game should be able to test its most basic Functions in order to make future uptades easier to integrate\n\nNFR 6 Performance: Sounds should play within 0,2 of a second after an event happend, in wich the player will expect a sound\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285816,
      "meta": {},
      "text": "quality requirements for the Bumpers game:\n\nUsability:\n\tThe player controls the car by steering the direction of the car with the mouse.\nReliability\n\tDifferent collisions are supported by the game.\nPerformance\n\tThe player controlls one car.\n\tAt the game start music plays.\nSupportability\n\tThe determination of the collision winner can be changed, even during the gameplay.\n\tThe game should not be dependent on the platform.",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286209,
      "meta": {},
      "text": "1. The player needs at most 5 clicks to start the Game \n2. The game should display the playing time at the end of a game\n3. The Crash sound should not be longer than 3 seconds\n4. The Game should have 3-5 different Car types\n5. The game should also be able to be played in full screen mode\n6. All cars should have different colors",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1280639,
      "meta": {},
      "text": "-> Usability: The player should be able to pause the game by pressing only 1 key.\n\n-> Security: Bumper's application should be able to detect if a player is using a third-party malicious application to exploit the game and gain an unfair advantage.\n\n-> Safety: In case the game crashes, Bumper's application should not corrupt or delete the player's personal files.\n\n-> Performance: Loading and starting the game should take less than 3 seconds.\n\n-> Maintainability: Bumpers must have the option to update the game and accept improvement patches.\n\n-> Availability: The game servers for multiplayer matches should be available between 03:00a.m. and 23:00p.m.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282315,
      "meta": {},
      "text": "Usability\n1. User Control and freedom\nThe player must be able to close the application in one click.\n2. Consistency and Standards\nThe UI must be displayed in English by default.\n\nReliability\n3. Robustness\nThe game must function on less than 200mB RAM.\n4. Security\nThe game must be shipped as a binary, to ensure more safety (e.g. source code must not be visible)\n\nPerformance\n5. Response Time\nThe game must react within 200ms to any valid user input.\n\nSupportability\n6. Maintainability (Test Application shouldnt take too long to get up)\nThe game must have a test-build-version for developing which should not take more than 10 seconds too boot up.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282641,
      "meta": {},
      "text": "NF1: Usability:\n-Efficiency:  \n\t- User should need at most 3 clicks to start the game\n\t- User should need at most 2 clicks to restart the game\n- Error handling: \n\t- The System should be able to recover from error\n\t- If the System cannot recover it self, the user should be able to restart the game easy\nNF2: Reliability:\n- Security: The system should be secure and must not open any security risks for the Users computer\nNF3: Performance:\n-  The Game should at least have 20 Frames per second\n\nNF4:  Supportability:\n- Portability: Should run on all major operating system (such as Windows 7-11, macos, debian)\n- Maintainability: The developer should be able to fix problems/bugs easily\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283755,
      "meta": {},
      "text": "\nUsability: The game must be played with the mouse\n\nRobustness: The game has to continue when the the user watches a livestream on the side\n\nAdaptability : The game is able to adapt to a changeable determination of the collision winner during gameplay\n\nMaintainability: A new sound effect can be implemented in 1 minute\n\nPortability: The game must be platform independent\n\n\nPerformance:  The game can handle 10 cars driving on the gameboard at the same time without a performance drop\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286919,
      "meta": {},
      "text": "- Usability: \n\t- The game is started by launching the application and pressing the start button in the top  left corner of the \t\t\t \n \t   window.\n        - The player car is steered by  pointing the mouse cursor in the direction the player wants to move the car to  \n           and simultaneously pressing the left mousebutton.\n- Reliability: \n\t- Robustness: The system shall not crash with any user input and therefore only responses to left mousebutton, \t\t \n           mouse movement.\n- Performance: \n\t- Response time: The game should run with at least 30 fps.\n- Supportability: \n\t- Portability: The game runs on Linux, Windows and Mac OS.\n        - Maintainability: the Car and Cullision class are abstract to make integrating new types for each class faster.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287380,
      "meta": {},
      "text": "1. The game should not display visual stuttering (i.e. the game engine should not be so slow that individual frames can be seen) (Performance)\n\n2. The User should only have to click a button two times in oder to play the game with default settings. (Usability)\n\n3. The games source code should be structured in a way that makes it easy to change existing car types as well as add new ones (Supportability)\n\n4. The game should not crash in 99.9% of the played games (Reliability)\n\n5. The odds of winning the game should not be able to be manipulated by a user (Security)\n\n6. The game should start up within 4 seconds (Performance)\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287906,
      "meta": {},
      "text": "1. Usability: it must be easy for user, for example there should not be so much Butten for game.\n\n2. succinct guidelines: the guide must be simplified, it should not more than 5 lines\n\n3. Develop Language: java\n\n4. Efficient: the car must execute in at most 30 seconds\n\n5. Maintainability: easy to be repair/maintain\n\n6. Extensibility: Game must be designed in a way that able to add or remove items: like new type of cars or collision effect",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281364,
      "meta": {},
      "text": "Usability:\n1. Der Player kann das Spiel durch einen einzigen Klick auf einen Start- bzw. Stopp-Button starten bzw. stoppen. Die Buttons sind immer sichtbar und an der gleichen Stelle, damit der Klick stattfinden kann. Außerdem sind die Buttons mit einer Schrift in Größe 11 mit \"Start\" bzw. \"Stop\" beschriftet.\n(Learnability, Efficiency und Memorability werden hier befolgt)\n2. Beim Crash ertönt der Crash-Sound innerhalb von weniger als 1/2s, damit der Player den Crash auditiv und nicht nur mit dem Sehsinn wahrnehmen kann. (Begründung: Audio trägt zur Usability des Spiels bei -> Designs sollten User sehr zeitnah darüber informieren, was passiert).\n\nPerformance:\n3. Bei Veränderung der Geschwindigkeit sowie der Steuerung des Autos, muss das System die Änderungen innerhalb von weniger als 1s umsetzen. (Begründung: Sonst käme es zu Verzögerungen im Spiel bzw. das Spiel hätte einen Timelag)\n4. Das Spiel kann nur einen (!) Player-Input verarbeiten, es gibt nur einen (!) Nutzer gleichzeitig, sodass das Informationshandling stark begrenzt ist.\n\nSupportability:\n5. Die Game-Plattform ist plattformunabhängig (Maintainability).\n\nReliability:\n6. Das System kann einen extremen (!) User-Input von 30 Klicks pro Sekunde verarbeiten, ohne dass das Spiel abstürzt oder die Performance (reibungsloser Ablauf) des Spiels darunter leidet (Robustness).\n\nAlle 6 Quality Requirements folgen den vier Kriterien: bounded, independent, measurable und testable. Alle sind kontextspezifisch, unabhängig voneinander, man kann sie messen, da sie konkret formuliert sind und Zahlenwerte beinhalten und sie lassen sich deshalb auch gut testen.\n\n\n\n",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1281805,
      "meta": {},
      "text": "•\tUsability:\n1.\tWe can improve learnability and Memorability, by “reducing the number of Buttons needed to control the game to one button and two sliders”. For example, the start and stop button could be combined in one button which starts the game if the game is currently paused and stops the game if its running. Or the speed of the car could be controlled by a slider instead of multiple buttons.\n\n2.\tIn addition to that Efficiency could be improved, by “adding keyboard shortcuts for every UI Element”, for example pausing and unpausing the game with the space bar, or changing collision type with the arrow keys.\n\n•\tReliability:\n3.\t“There needs to be a radius around the player where no enemy cars can spawn.” Because in the current state of the game enemy cars are spawned randomly around the gameboard with a random direction. This can cause an unwanted incident namely if a car spawns directly next to the player with a direction facing the player. In that case the player has no chance to doge the collision and play the game as intended. \n\n•\tPerformance\n4.\t“The system has to handle the movement and collisions of at least 20 cars.”\n5.\t“The game should be ready to play in less than 5 seconds after starting the program.”\n\n•\tSupportability \n6.\t“Changing car images or the background music shouldn’t take longer than 2 minutes.” New assets and music can be dropped into the resource folder and the corresponding file location has to be updated.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282016,
      "meta": {},
      "text": "Performance\nIt takes less than 1.5 seconds from clicking the run button to starting the game.\nThe availability of the system is at least 99.9%.\n\nUsability\n90% of the players who played this game once should find the game easy play and to learn.\n\nReliability\nThe percentage probability of failure is less than 1%.\n\nSupportability\nthere is 90% maintainability in 12 hours. (when a component doesnt work as it is supposed to do)\nAll requirements should be met egal if in iOS, Windows or Linux.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282335,
      "meta": {},
      "text": "1. The game should provide fewer than five total buttons and keys to control the game.\n2. The game should provide players to steer the direction of the car in one click.\n3. The game should be offline and 100% usable.\n4. The game should visualize the speed and location of cars and support at least three different kinds of collisions.\n5. The game should be able to run on computers with operating systems such as Windows, Linux, and Android.\n6. The game should run smoothly that each process of the game should be responsed in less than 5ms.\n\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285358,
      "meta": {},
      "text": "R1 (usability): The maximal volume of sound effects in the game should not be louder that 55 decibels.\nR2 (usability): The game should be played at max. of 30 fps.\nR3 (reliability): If the game gives no response within 10 seconds, it should be immediately reloaded. \nR4 (performance): Once a player pressed \"start game\", the game should load the game contents within 1.5 seconds.\nR5 (supportability): The game should be available on iOS, Android and Windows. \nR6 (performance): With the internet speed of 42.86 Mbps (US average) the game should be downloadable within 30 seconds.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286768,
      "meta": {},
      "text": "NFR 1: Performance\ndetection of collisions should not take longer than 0.015s \n\nNFR 2: Usability\nThe UI should be intuitiv to use\n\nNFR 3: Usability\nButtons should, when not using text as button lable, show a floating field with a brief description when hovered over by the cursor\n\nNFR 4: Supportability\nThe Game should run on  all Desktop PCs and Laptops that use Windows, Mac or Linux natively.\n\nNFR 5: Performance\nThe Game should run with 60fps with minimum system requirements:\n- 4gb ram\n- i3 2gen\n- intel HD graphics card\n\nNFR 6: Reliability\nThe game should run without any exceptions and only stop after the player presses the stop button \nor terminates the game\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287236,
      "meta": {},
      "text": "Non-functional requirements for Bumpers:\nUsability:\nNFR1 [learnability of user interface]: new users should be able to start the game within 30 seconds after looking at the Bumpers playscreen and more experienced users choosing car and collision type self-dependently should be able to start the game within 1 minute.\n\nReliability:\nNFR2 [robustness to unexpected shutdown]: under normal operating circumstances (meaning expected user behaviour and platform stability) the game should have a inner system defect rate of no more than 3 unexpected game shutdowns for 100 operating hours.\nNFR3 [protection of user data]: external intruders should under no circumstances (meaning in 0% of cases of potential attacks) be able to steal connected user-related data such as user names or high scores. \n\nPerformance:\nNFR4 [response time to user interaction]: the user can interact with the game via clicking functionality buttons and using mouse steering, therefore the response time of Bumpers to this stated user intercations should not exceed 0.5 seconds in 99% of the cases.\n\nSupportability:\nNFR5 [maintainability of bumpers software]: the software code should be written in compliance with the respective code conventions and each code section should be well documented to acheive comprehensibility also for uninvolved developers within one day.\nNFR6 [portability of bumpers software]: the Bumpers game shall be platform independent to the degree that it is executable on the top 2 operating systems' versions at the time point of first game release for at least the following different device types: 1) laptop, 2) tablet and 3) mobile phones.\n\n(taken and adapted from own submission last year H03E01)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282959,
      "meta": {},
      "text": "The Icons for the display of the seed etc. or the change of settings should be in \"standard\" positions (e.g. top right corner).\n\nThe Stop Game button must not be available to e clicked if the game is not running in the first place.\n\nUp to 15 cars including the player car should be supported at the same time.\n\nNext to the settings button there should be a help button which explains the controls in details\n\nThe code it self should be organised in respective packages. With a good inheritance structure which makes it easy to fix/expand the game.\n\nMake sure the exceptions for the mouse reader are all correctly handled so there are no unwantend incidents.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1285957,
      "meta": {},
      "text": "1. NFR (Performance):\nAfter pressing the start button, the music should start within 0.1 seconds and the cars should start to move within 1 second (1 second so the user has time to get ready to move  -> the explanaition is more usability but the whole NFR should be in the Performance category)\n\n2. NFR (Suportability -> Adaptability):\nThe collision should work even if two cars crash into the players car at the same time, from different directions.\n\n3. NFR (Reliablity ->Robustness):\nThe game should continue even if the player tab's out of the application.\n\n4. NFR (Usability):\nThe user should be able to close the \"you won\" or \"you lost\" tab and start a new game within 2 clicks.\n\n5. NFR (Suportability -> Adaptability):\nThe system should be able to choose the right collision during the game depending on the selection the player made.\n\n6. NFR (Usability):\nThe \"start\" and \"stop\" button should be 100px high and 250px wide and be seperated by 20px.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286962,
      "meta": {},
      "text": "NFR1: the game should be startable 2 clicks\nNFR2: the game should ignore clicks that are made outside the interface\nNFR3: the game should run at 30 fps atleast\nNFR4: the game should be the same relative size on every screen\nNFR5: users should not be able to see the source code\nNFR6: the game should have a documentation for the different car and collision types\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287179,
      "meta": {},
      "text": "NFR 1: Usability: The player can steer the direction of the car with the mouse and change its speed.\nNFR 2: Supportability: The game should support different collisions. \nNFR 3: Supportability (Adaptibility): The determination of the collision winner should be changeable during gameplay.\nNFR 4: Reliability (Robustness): When cars crash, there has to be a sound effect.\nNFR 5: Performance: There is one car controlled by the player. \nNFR 6: Reliability (Robustness): When the game is started, music is played.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287188,
      "meta": {},
      "text": "Concerning the usability of the game, the user/player controls one of the cars that are displayed. The user can either start/pause the game by pressing the buttom Start /Stop. The player will be able to steer the direction of the car with the mouse and change its speed. Furthermore they(the player) know when the game is running as music is played during that time.\n\nAs for the reliability of the system, safety and security are requirements that are certainly not important for the Bumpers Game. However, the robustness is quite important as in  once the user enters a wrong input e.g. presses any letter on their keyboard, nothing shall happen as the only way the player can control the game is by using the mouse.\n\nPerformance-wise, the game can be played by anyone simultaneously and it is platform independent.\nAdditionally, it supports different collision type. For instance, I implemented a collision type ConvertibleWins (and I also implemented a subclass Convertible of superclass Car) meaning that if there is exactly one cabrio involved in an accident, it will strictly win and in any other case the \"right before left\" rule will be applied. \n\nLooking at the supportability of the system, the game can deal with new requirements, e.g. it is easily possible to implement a new collision type (as the one I have just mentioned) resulting in a greater flexibility of the whole system. In addition to this, the developer is able to change elements of the GUI such as the background image or the different cars.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287189,
      "meta": {},
      "text": "Quality requirements for Bumbers:\n\n1.\tUsability:\n\t- From starting the game player should be able to start driving in less than four klicks.\n\t- Game should show features of the car (e.g. the speed, consumption) also during the gameplay.\n2.\tReliability:\n\t- Game should not store any information about the player after game is turned off.\n3.\tPerformance:\n\t- Game should evaluate changes in the game board 50 times every second.\n\t- Game should load not more than 2 seconds when started.\n4.\tSupportability:\n\t- User should be able to download game from App store.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287849,
      "meta": {},
      "text": "Usability- The player must be able to start the game with at most 2 clicks.\n\t\tthe player must be able to stop the game with at most 2 clicks\n\nSupportability- The game is compatible on laptop and phone(ios and android)\n\nReliability-  If the game is started but the player has not moved the car,it goes back to the start menu\nPerformance-\tIt allows multiplayer that means many users upto 2 people in one game and it can hanle atleast \n                      \t1500 people playing simultaneously\n\t\t\tthe response time between mouse and the game should be atmost 3ms\n\t\t\tthe availaiblity of the game is atleast 99 %\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280413,
      "meta": {},
      "text": "The Bumpers game should be usable, meaning that it should use intuitive controls, in this case moving the car by clicking at the target position. This results in the game being able to be played with 1 click. The game UI should be minimal (only two buttons and the game board). (Usability)\n\nThe game should also \"be platform independent\". This is achieved by programming it in Java. This is an aspect of adaptability, as it automatically adapts to a different operating system. (Supportability)\n\nIt also should be easily possible for a developer to swap the assets and sounds (e. g. \"When cars crash, there has to be a sound effect.\") to quickly create a different style, so the game has to be maintainable. (Supportability)\n\nSince multiple \"cars drive on a game board\" at once, it also has to be performant. It should not lag, even if many others cars are moving and being displayed at the same time. (Performance)\n\nThe game should also be robust, meaning that there should not be any bugs. For example, the problem statement requires an option to switch the \"determination of the collision winner [...] during gameplay\". All collisions and calculations have to keep working as expected anyway. (Reliability)\n\nThe game should \"visualize different parameters of the car\", which should be done in a visually appealing manner, increasing usability and user experience. A bad solution would be to just show a text of parameters for each car, which would overwhelm the user. A better way is to visually display this with colors and geometry. (Usability)",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281210,
      "meta": {},
      "text": "Usability:\n1. the platform should be independent\n2. the player need to win the collision at least 1 times to win the game\n\nReliability:\n1.The determination of the collision winner should be changeable\n2. this situation,that the game can not output the collision or game result,happens at most once in a thousand attempts \n3. at least 99% of attacks need to be detected in 10s(Security)\n\nPerformance:\n1. one player control one car\n2. in 95% of cases, the game output the result in 3s\n3. the Bumper game can satisfy 1000 user requests at the same time\n\nSupportability: \n1.the game should support different collisions\n2. 95% of bugs modification time do not exceed 1 working day(Maintainability) \n3. When user install new version,the database should be unchanged",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1282007,
      "meta": {},
      "text": "NFR1 Usability: the user needs at most 3 clicks to play the game\nNFR2 Performance: user inputs should be processed in less then 1ms\nNFR3 Reliability: the game should be playable whenever the user chooses to play it \nNFR4 Supportability: developers release bug fixes every month\nNFR5 Usability: the displayed cars should have a width and hight of atleast 20 pixels\nNFR6 Usability: enemy cars should all have the same color so its easier to distingish between the cars",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283348,
      "meta": {},
      "text": "FR1 : Usability : the player can start or stop the game with one click. \nFR2 : Usability : the player is informed when she/he wins.\nFR3 : Usability (learnability/memerability) : the start button is always in the left and the stop button is always in the right. As well as the accept button in the left and cancel button in the right.\n\nFR4 : Reliability (robustness) : the system waits upto 10 seconds for the player. (ths systems supporst if the player does not make a move right away)\nFR5 : Performance: the user can play upto 100 collisions in less than 5min\nFR7 : Performance (availability) : the system recovers and saves data. The availability of the game is 95%\nFR8 : Supportability :  (maintainability) : the speed of the cars can be changed within 2 min\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284253,
      "meta": {},
      "text": "1. NFR: users need to make at most 3 choices before they can start playing the game (usability)\n\n2. NFR: the Bumpers Game can tolerate if someone presses keys on the keyboard that are not required for the game (reliability)\n\n3. NFR: the Bumpers Game should be able to handle up to 40 cars on the screen (performance)\n\n4. NFR: the steering of the car should be visible immediately: if the player changes the direction of the car this should take less than 20 milliseconds (performance)\n\n5. NFR: the application of the Bumpers Game should run on any computer that runs on the latest version of the operating system (e.g. Windows, MacOS and Linux) (supportability)\n\n6. NFR: the system breaks down in less than 0.1% of games played (reliability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284542,
      "meta": {},
      "text": "Usability - Learnability: The game needs to give users the tools to help make the learning process go as smoothly as possible, this includes but is not limited to: a tutorial, a prompt that can pull up commands and keybinds and easy to understand UI elements.\n\nUsability - User experience: The game's UI needs to stay as simple as possible to prevent cluttering as well as any hindrances to the gameplay. Besides this, the gameplay loop needs to have a degree of variation and options of change to ensure longevity of gameplay. \n\nReliability - Robustness: The game needs to still function if a user makes changes to the environment midgame (e.g. attempting to change window size).\n\nPerformance - Response time: The game needs to smoothly respond to any and all inputs by users\n\nPerformance - Performance efficiency: The game needs to run smoothly even when multiple bumpers are in the field interacting with each other. \n\nSupportability - Maintainability: The ease of adding new collision types into the system needs to be guaranteed.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286105,
      "meta": {},
      "text": "- The game has easy to understand controls and offers something to explain them (U)\n- The game won't crash if there are less than 100 cars on the board (R)\n- The input delay of the game is never higher than 0.2 seconds (P)\n- The direction in which the player car moves is always accurate to .01 to the input given (P)\n- The game should offer interfaces that make it easy to expand or modify the game (S)\n- The game should have clear defined rules, so that it is fun to play (U)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287141,
      "meta": {},
      "text": "1. supportability\nthe game should be platform independent, which means it should be available for all different platforms.\n\n2. performance\nwhen user opens interface and starts to playing game, the system should response the request within 1 second.\n\n3.  usability \nafter user decides the type of cars and collisions (2 steps), then user can enter the game board. \n\n4.  reliability\nthe average mean time to failure of the game should less than 3 minutes every year.\n\n5. supportability\nthis game should available for all the operations systems. \n\n6. supportability\nthis game should provide different language versions, for example german version and english version.  \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287161,
      "meta": {},
      "text": "NFR1: The user needs two clicks to start the game. (usability)\nNFR2: The user should be able to operate the game only by pressing the arrow keys on the keyboard.  If any other key is pressed or mouse clicks happen, the game should not be influenced. (robustness)\nNFR3: The game should respond to mouse and keyboard clicks in less than 5 ms. (response time)\nNFR4: The game should work on the 3 operating systems: Windows, macOS, and Linux. (supportability)\nNFR5: It should be possible to carry out any requirement changes by the customer and bug fixes after finishing the implementation. (maintainability)\nNFR6: The game progress should be saved every 5 seconds. In case, the system crashes for some reason, the user should be able to continue playing from their latest status. (reliability)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281398,
      "meta": {},
      "text": "NFR 1 (Usability) the game is easy to learn, because it only requires moving the mouse and clicking to do everything in the app\nNFR 2 (Reliability) the user can use right click and the keyboard, but the game ignores them \nNFR 3 (Perfomance) the game functions with up to 25 npc cars\nNFR 4 (Supporatability) a new car can be added within 5 min\nNFR 5 (Performance) the system has to be endure 120fps\nNFR 6 (Performance) after initilization the game has to be available 90% of the time each day",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283345,
      "meta": {},
      "text": "NFR1: It should be possible to start the game with only one click\n\nNFR2: It should be possible to extend the games functionality in less than 2 hours\n\nNFR3: Starting the game should not take longer than 0.5 seconds\n\nNFR4: Recognizing and evaluation a collision should not take longer than 0.3 seconds\n\nNFR5: It should be possible to learn how to steer the car in less than 30 seconds\n\nNFR6: It should not be possible for the user to modify the game in order to always win\n\n\n\nUsability: NFR1, NFR5\nReliability: NFR6 (Security)\nPerformance: NFR3, NFR4\nSupportability: NFR2",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285105,
      "meta": {},
      "text": "Usability:\n-Player uses the mouse in order to steer his car(clicks on gameboard to change its direction) and changes its speed with the scroll-wheel\n-Player need at most 3 mouse clicks in order to start a game\n\nReliability:\n-The player can play the game for as long as he didn't lose or win and the game is not stopped and the system with which he plays(laptop, phone, gaming console) is still working.\n\nPerformance:\n-When the player plays the game, there should not be any lag and every collision should be recognized under 0,2s.\n\nSupportability:\n- The user game interface should be modifiable, that means the player can put the game in full screen mode or can make it smaller or larger.\n-The game should be platform independent and works on different devices like phone, laptop, gaming console...",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280342,
      "meta": {},
      "text": "Usability: \nThe player can steer the car in multiple directions with his/her mouse. \n\tLearnability: \n\tThe user interface is clear and therefore not confusing\n\tEfficiency: \n\tThe game can be started with two clicks (choosing the car and pressing the start button)\n\tMomorability: The game is simple to understand and always works the same way\n\tError handling and robustness: The game is designed with Exceptions which lead back to the start screen. \n\tSatisfaction: if the user wins the game, winning music will be played\n\nReliability: \n\t Robustness: The system only knows certain inputs like the mouse clicking and the mouse steering and is\n\tnot affected by other inputs. \n\tSafety: The system detects unusual random inputs and breaks the game\n\tSecurity: The system is constructed to block viruses and and other scripting attacks. \n\nPerformance: \n\t Response time: All inputs can be processed in less than 10ms.\n\tAvailability: The system is designed to provide an unlimited runtime. (If no cars crash the game will \n\tcontinue running)\n\tAccuracy: The system translates all user inputs with an error rate of less than 1%. (The car always goes in \n\tthe direction of where the user steer his/her mouse)\n \nSupportability: \n\tAdaptability: The system provides the optimal usage of the hardware and operating system provided\n\tMaintainability: The code for the game provides a clear design and is lucid and changes can be applied \n\twithin less than 10 minutes. \n\tPortability: The game is designed to being platform independent and can be transfered. \n\nI participated EIST last year ",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280860,
      "meta": {},
      "text": "-Usability: 1. The user interface is decorated with a picture of country scenery as background and different pictures of cars.\n\t\t 2. When errors happen, users can click the button \"Fix Problems\" to handle the errors.\n-Reliability 1. The system can tolerate up to 15 cars running at the same time.\n-Performance 1. The system have multi-threads to improve efficiency.\n\t\t\t2. The system can be used both online and offline.\n-Supportability 1. The game should support different keyboards or mouse.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1281596,
      "meta": {},
      "text": "Usability:\n1. The user should be able to change the speed and the collision types with just one mouseclick\n2. The game window should be at least be 15x10 cm big\n\nReliability:\n(Robustness) 1. The game should not fail if more than 2 cars are crashing together.\n\nPerformance:\n1. The application should be able to handle up to 100 cars playing in the game \n2. The game should response (car changes direction) within 50 ms of the mouseclick\n\nSupportibility:\n(Maintainability) 1. The developers should be able to add new cars (new requirements) without coding the whole driving logic again",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281891,
      "meta": {},
      "text": "Im folgenden werden sechs quality requirements des Bumpers Spiels erläutert:\n\nLearnability:\nDas Bumpers Spiel hat eine sehr einfache Steuerung, die lediglich das verschieben der Maus voraussetzt. Es gibt keine komplizierten Tastenkombinationen oder zusätzliche Funktionen, die nicht klar ersichtlich sind.\nDie zwei Buttons in der Menü Zeile sind klar zu verstehen.\nAuch die Collisions sind nicht übermäßig schwer zu verstehen und auf Grund der wenigen Collisions Arten schnell zu lernen\nEs sollten nicht mehr als 3 klicks benötigt werden, um das Spiel zu starten.\n\nMemorability:\nAufgrund der sehr einfachen Learnability ist es für den Benutzer äußerst einfach sich an die Bedienung wieder zu erinnern.\nHier verweise ich wieder an Punkt 1, da weniger als drei Klicks benötigt werden um das Spiel zu starten und zu spielen. Das kann man sich gut merken.\n\nSatisfaction:\nDas Bumpers interface ist simpel gehalten und nicht überladen. Außerdem werden Player und Gegner mit Bilder dargestellt, sodass der Player insgesamt einen gutes Spielerlebnis hat. \n\nPerformance:\nAuch im Sinne der Performance schneidet das Spiel gut ab. Die Spielmechanik und Grafik sind nicht sonderlich ausgefallen und erfordern daher nur wenig Rechenpower. Was zu einer. schnellen Response Time führt. Außerdem ist eine Availability von nahezu 100% gegeben solange der Player den Source Code nicht verändert, da das Spiel nicht auf externe ServerDienste angewiesen ist.\nDie FrameRate sollte immer über mindestens 20-30 FPS liegen, um gleichmäßige Bewegungen zu erhalten.\n\nSafety und Security:\nDas Spiel hat keine auffälligen Bugs und ist zu jeder Zeit Spielbar gewesen. Außerdem gibt es bis auf die Steuerung und Start bzw. Stopp des Spiels keine user Eingaben, die zu unerwarteten Ergebnissen führen können.\nDas Spiel ist gegen gewollte angriffe geschützt, weil es bis auf den physischen eingriff am System keine anderen Wege gibt mit dem Spiel zu interagieren, da zB das Spiel (wie oben beschrieben) nicht auf anderen Systemen aufbauen muss (Server-Client Situation)\n\nMaintainability:\nDa das Spiel im vergleich zu anderen Spielen nur sehr wenige Zeilen an Code besitzt und diese zudem noch gut verständlich sind, ist das Spiel von einem Entwickler leicht zu reparieren bzw. zu erweitern, was zu einer guten Maintainability führt.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1283808,
      "meta": {},
      "text": "The player should understand the game rules almost immediately.\nThe game should not crash.\nThe game should handle at least 20 computer-steered cars.\nThe game should run on every platform.\nThe developer can easily add more features to the game.\nThe player interacts with the game through a mouse click.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284189,
      "meta": {},
      "text": "- Usability:\n\t- The player needs at most 1 click to start a game\n\t- The player needs at most 2 clicks to stop a game\n\t- The player needs at most 1 click to change collision during gameplay\n- Robustness:\n\t- The game should tolerate all possible player imputs without crashing\n- Performance:\n\t- The maximal response time of the game after a new player input should be 0.1 seconds\n- Supportibility:\n\t- The game should be platform independent",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285578,
      "meta": {},
      "text": "- setting up and starting the game should not take more than 5 clicks\n- new collision types can be added in max 10 min / 15 lines of code\n- the game can handle at least 8 cars simultaneously\n- the game should be adaptable so that the collision winner can be changed during the game\n- in only 1/1000 collisions the winner is not determined than as selected by the player\n- there are no options for the player to enter a wrong comand when playing the game (only steering with the mouse is possible)",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286164,
      "meta": {},
      "text": "Usability:\n-The Game can run on at least four different platforms\n-The Player is able to understand the scenario of the game within 10 seconds\nReliability:\n-The Game reacts on mouse input and is able to tolerate keybord input\nPerformance:\n-The collision detection and evaluation happens within 20ms\n-The Game runs at least 5 hours without any runtime errors\nSupportability:\n-new collision models can be implemented via an update",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286556,
      "meta": {},
      "text": "Nonfunctional Requirements\n\nUsability:\n\t- Players should be able to start and stop the game in two or less clicks for an easy usage.\n\t- Satisfaction: There should only be two buttons and the steering should be intuitive by clicking in the \n\tdirection the  car should go.\nReliability:\n\t- Safety: The player should only be able to steer his/her own car and do not have control over the \n\trandom hostile cars.\nPerformance:\n\t- There should be at least 60 frames/second to guarantee a smooth gaming experience.\n\t- Availability: The system should only crash with a percentage of 0,01% per game.\nSupportability:\n\t- Maintainability: It should easily be able to create new cars and collision types by inheriting from the \n\tupper abstract classes.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287087,
      "meta": {},
      "text": " 1)Usability\nThere should be only one button - escape button, the player need to press, to start and stop the game. Colours of the background and cars should be pleasant for eyes and match with each other - white background and colourful cars(red, green, blue). Music shouldn't be annoying, but exicitng - popular pop song. Sound effect, when cars crush, should be loud. In the corner of screenshould be speed scale and consumption scales, big enough, to be noticed . On the edge of the screen is map to show the location of the car, also big enough. \n2) Security\nIt should not be possible to hack the game or give the game access to the player's personal data.\n3) Adaptability\nThe player can change game the type of collision every time at the beginning of the game and the game has to adjust to these changes with all visual and functional changes. There also no quantity limit of determination winners\n4) Performance\nThe sound and visual changes should occure in less than 1 second after the car crash. After the changing the speed and direction of car, changes also should occure in less than 1 second\n5) Robustness\nWhen player chooses the type of collusion, that game does not support, player should be offered to choose from existiong types\n6) Maintainability\nThe game is designed so, that the developer can add new collison type or remove existing one",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287259,
      "meta": {},
      "text": "Usability:\n-players should have a menu option to view ingame actions (moving, using car-power, etc.) with the corresponding keybinds and be able to change them to their desire\n-modifications should be activatable through the menu\n-there should be a maximum of 4 menu tabs\n\nReliability:\n-there should always be an option to play the base game without any player implemented things (when modding)\n\nPerformance:\n-the system should be able to manage up to 15 nonplayer-cars at the same time\n\nSupportability:\n-new car and collision types should be implementable in less than 10 minutes\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287795,
      "meta": {},
      "text": "Usability\n-Player needs at most 5 clicks to start a game\n-Player should be able to interact via mouse or a touchpad\n- The car icons should be visible for every user, so the icon of a car should be at least 1x1cm \n\nReliability\n-A game should not contain any files that may damage user's device\n\nPerformance\n-A game should react to a mouse click in less than 1sec\n\n\nSupportabilty\n- The game should be platform independent",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285723,
      "meta": {},
      "text": "1. No interaction should take the player more than 2 clicks(Usability)\n2.Any button click should have visible and audible feedback.\n3.The game should not have loading times which are longer than 1 second.(Performance)\n4.The game should not crash more often than once every 10 hours of playing.(Reliability)\n5.There should be no way for the game to leak private information of the player.\n6.New car types should be able to be added without changing more than 10 lines of code in other classes.(Supportability)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286230,
      "meta": {},
      "text": "Usability： 1.The player just uses the mouse by click to control one car's direction and speed.\n                    2.The result of the game shows on the screen with a readable letter.\n\nReliability: 3.The game supports different collisions.\n                  The game can calculate who is the winner when several (not just two)cars collision at the same time.\n\nPerformance: 4.The game can handle different players playing at the same time and react to the collision in 10s.\n\nSupportability: \nMaintainability: 5.The collision sound and car image can be easily changed by the developer in 5 minutes. Adaptability: 6.The game runs correctly during players change different parameters (the speed etc.) of the car",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287436,
      "meta": {},
      "text": "Usability:\n\t- The player can start/stop the game with a single click of the mouse\n\t- The player can easily change the car's direction by clicking on the screen\nReliability:\n\t- All other inputs that do not change the car's direction or speed should be ignored\nPerformance:\n\t- The game should react imeadiatly to a player's input\n\t- The inputs given to the game should accuratly change the car's direction and speed\nSupportability:\n\t- The game should be able to run on all platforms",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1287802,
      "meta": {},
      "text": "1. performance - accuracy: the winner of the collision should be clear; the player can also start and stop the game at will\n2. performance - response time: the steering of the car should have very short response time so that the user has quick and nimble steering control; the lag should be under 30ns so that the player does not feel any lag\n3. usability - visibility of the system: the different parameters of the car should be visualized and clearly visible to the player in order to determine the state of the system, and recover from a mistaken if it occurred\n4. reliability - robustness: the game should support different kinds of collisions and correctly recognize the clear winner of the game\n5. supportability - adaptability: the determination of the collision winner should be changeable during gameplay\n6. usability - user experience: the player should be able to recognize when a clash has occurred, with the help of a sound effect",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280394,
      "meta": {},
      "text": "Usability:\n\t- There is a tutorial level\n\t- When the mouse pointer leaves the viewport, the game is paused\n\t- The game is translated into multiple languages\n\t- Computer controlled cars dont attempt to crash into the player as often, when the player is new to the game\n\t- The basic controls are shown on screen, when no player input is received for a while\n\t- When the game crashes, the cause of the error is shown to the user\n\nReliability:\n\t- The game is paused if the games window loses focus\n\t- When the game is closed the user has to confirm that he really wants to do so\n\t- The game view is being resized accordingly, if the size of the game window changes\n\t- The game state is being saved to the disk regularily\n\t- An anti-cheat system is used\n\t- The integrity of the game is verified when the game is started\n\nPerformance:\n\t- The game runs at at least 60 fps on an average computer\n\t- When the user makes an input, it takes at most 50ms until the results of the input are shown on screen\n\t- It is possible to have at least 50 cars at the same time\n\t- \n\nSupportability:\n\t- All game assets are stored in one location\n\t- The game can be built within one minute\n\t- Crash reports are sent to the development team\n\t- ",
      "score": 0,
      "language": null
    },
    {
      "id": 1280680,
      "meta": {},
      "text": "Usability - Learnability: The Learnability of this game should be in the sense of \"Learning by doing\".\nPerformance: The response time of a crash between the player and a car should be under 1 second.\nPerformance: The response time of starting the game should be under 1 second. \nReliability: In case of a system failure it should take under 10 seconds to restart the game. \nSecurity: The application must identify the user before allowing them to start the game.\nSecurity: 99% of all interventions should be detected within less than 10 seconds. \nSupportability - Maintainability: When installing a new version of the game, all database contents and all personal settings should remain unchanged.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280846,
      "meta": {},
      "text": "Usability:\n\tThe player needs exactly one click with a mouse to change the direction of the car.\n\tThe player can see the parameters of the car without changing out of the game interface.\nReliability:\n\tA collision outcome/winner must always be deterministic, irrelevant of the car or speed.\nPerformance:\n\tThe game should has to support enough information handling to create a sound effect at exactly the\n\tmoment of the crash, while playing music in the background.\nSupportability:\n\tThe game should run correctly with different collisions.\n\tThe game should run on any operating system, and therefore be system independant\n\t ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1281167,
      "meta": {},
      "text": "NFR1 Usability: \n\tThe Player should be able to learn to how to play Bumpers game and the differences of the car features(speed, consumption, location), during their playtime. Also the player can understand to how he can steer the direction of the car with their mouse. \n\tAlso the player should be able to choose the most wanted type easily. \n\tThe game should have an original music, sound effects and visuals. \n\tThe cars should have smooth movement.\n\nNFR2 Interface: \n\tThe user interface of Bumpers should be simple to understand on the first view. Starting and stopping game buttons in the button bar should be clear to see with the right size and the colors. After the game, the player must see a message in the information panel, if they win or lose the game.\n\nNFR3 Response Time: \n\tThe average response time between click and the car movement must be less than 1.5 seconds. Also the loading time of the game shouldn't be more than 8 seconds.\n\nNFR4 Maintainability: \n\tThe Bumpers needs to be updated with the new car models, new collation types regularly. Also there should be a feedback system in the future. In this way, developers can know which features are undesirable by players.\n\nNFR5 Implementation: \n\tThe Bumpers game should be implemented in Java.\n\nNFR6 Supportability: \n\tThe Bumpers should support all operating systems. Therefore, the game should be reachable on the web within only one download.\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282812,
      "meta": {},
      "text": "1. Security requirement: The game should be protected against people that try to cheat while playing the game to win under all circumstances. It should be impossible for the player to change requirements to win or make any other changes other than intended by the game developer.\n\n2. Adaptability requirement: The game has to be easily adaptable to different devices and the interface and graphics should be the same no matter what systems software is installed on the device. \n\n3. Usability: The player only needs one klick to start the game and only has to use his mouse to move the car by clicking the mouse.\n\n4.  Performance: The game shall start within 2 seconds at a maximum after pressing the „start“ button.\n\n5. Maintainability requirement: The game developer can add a new car or collision with different features within 15 minutes and change icons of cars or the background within 3 minutes.\n\n6. Satisfaction/ user experience: The user can change the preferred collsion type with one click while playing and thus improve the excperience. Besides that the user can see all relevant features such as speed, consumption and location of the car on the same display on the gameboard and thereby it only takes one look up to see the stats.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283214,
      "meta": {},
      "text": "Usability:\nNach dem Starten des Spiels sollte der Spieler innerhalb von 2 Klicks sein Auto ausgewählt und das Spiel gestartet haben. Außerdem soll das Spiel je nach Betriebssystem oder Window Manager einen Notfall Exit haben (Bsp.: Windows Standard: rechts oben).\n\nReliability:\nDas System muss robust sein, wenn der Spieler die Größe das Fenster ändert, sich somit als die Umgebung ändert. Das Interface soll also responsiv sein. Ansonsten könnten Fehler auftreten.\n\nPerformance:\n - Anzahl der Spieler die gleichzeitig spielen können: Das Spiel soll nur von einer Person zur selben Zeit gespielt werden können.\n- Reaktionszeit: Die Reaktion auf Klicks soll innerhalb einer Millisekunde folgen.\n\nSupportability:\n- Anpassungsfähigkeit: Das Spiel muss plattformunabhängig sein, d.h. auf jedem Betriebssystem laufen können. Dabei ist es den Entwicklern selber freigestellt welche Sprache oder welches Framework sie benutzen, solange dies gewährleistet wird.\n- Wartbarkeit: Unabhängige, andere Entwickler sollen neue Kollisionen oder Autos durch das erstellen von nur einer neuen Klasse hinzufügen. (Abstrakte Klassen, Interfaces etc.)",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1283890,
      "meta": {},
      "text": "NFR1 Usability: \n\tThe Player must be able to start the game with just one click and end it with two (after he presses it for the\n\tfirst time, the Sysstem asks whether he really wants to end it)\n\tAfter one game the Player has to be able to play game without any problems and should be able to have\n\tmemorized all the rules\nNFR2 Reliability: \n\tThe game blocks any access to the Player's data from outside sources (meaning it does not allow any\n\tviruses to get to the Player's computer)\nNFR3 Performance: \n\tThe game has to support at least 1000 Players playing at the same time\n\tThe game has to have at least 99% availability\nNFR4 Supportability: \n\tThe Developer should be able to conduct maintenance in no more than 30min",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284837,
      "meta": {},
      "text": "The game can handle multiple User Inputs at once.\n\nThe game runs consistantly at 60 fps with a single core clock speed of 1.5 ghz and a GTX 1050ti at 1080p and uses a maximum of 4gb of ram.\n\nThe game handles a total of up to 100 cars at once correctly.\n\nThe game is platform independant.\n\nThe source code is easy to understand. A layman could work on it within 2 hours.\n\nThe whole interface can be navigated without a mouse.\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1284910,
      "meta": {},
      "text": "1\tThere should be a tutorial video on how to start and how to play the game. (Usability)\n2\tThe player should need not more than 5 clicks in total to start the game and be able to play. (Usability)\n3\tThe game should be playable without an internet connection, to prevent problems, when the internet connection of device is not stable. (Reliability - Robustness)\n4\tThe game should not react to input from the keyboard to prevent cheating. (Reliability - Security)\n5\tThe game should react to mouse clicks within 100 ms. (Performance - Response Time)\n6\tThere should be an interface to change the icons of the cars. (Supportability - Maintainability)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285076,
      "meta": {},
      "text": "Bumpers 6 Non-functional requirements:\n\n\n+ Usability: The user doesn't need more than 2 clicks to start the game and change the settings.\n+ Usability: The graphic sprites of the game should have a refresh rate of over 60 fps.\n+ Reliability: The game should feature an anti-cheat system so that altered memory regions can be detected and overwritten again.\n+ Performance: The game should process keyboard and mouse input with a delay under 50 milliseconds.\n+ Performance: Throughout the entire game the program should use up less than 100 MB RAM.\n+ Supportability: Updates of the game can be installed within 5 minutes on a consumer grade laptop.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285365,
      "meta": {},
      "text": "1. Requirement (Usability): Changing the determination of the collision winner during gameplay may only take one mouse click.\n2. Requirement (Reliability): The game must work without connection to the internet.\n3. Requirement (Performance): The game has to be able to display up to 100 cars on screen at once, without any drop in frame rate.\n4. Requirement (Supportability/Adaptability): It must be possible to play the game on screens that are as small as 7 inches and screens up to 35 inches.\n5. Requirement (Usability/Visibility of System Status): The current speed of the car must always be visible during gameplay.\n6: Requirement (Usability): All types of cars must be distinguishable without seeing their color.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285452,
      "meta": {},
      "text": "1) Usability: The must be able to start the game with just 2 clicks (starting the app and then directly clicking the start game button).\n2) Reliability: Game must not have more than one crush maximum after 5 Hours of playing.\n3) Performance: It must take less then 3 seconds to start the game (from the clicking on the game icon to starting playing).\n4) Supportability: Bumpers must run on windows as well as on Linux.\n5) Performance: the Collision sound effect must be clearly different than the background music. That means the crush sound must be louder than the background sound. And you can hear it and distinguish it.\n6) Performance: the refreshing rate (fps) must be at least 40 fps (frame per second)",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285914,
      "meta": {},
      "text": "• Either the start or stop button has to be constantly visible to the user. (U)\n• The game can't overheat the processor at any time. (R)\n• The game can't support modifications from the community to guarantee user security from any malware. (R)\n• The game must simultaneously handle at least 30 cars on the screen without lowering the frame rate. (P)\n• The game should support all mobile devices running Android 5 or higher. (S)\n• The game should support PlayStation 5 consoles. (S)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286476,
      "meta": {},
      "text": "Usability :  the players can learn to play this game in 5 mins \nRobustness : If the user presses another key on the keyboard, the game should go on \nPerformance :  this game should have 45 fps \nMaintainability : this game can be restarts within 20s \nPortability : this game can not only  be played in MacOS but also be played in Windows system \nAdaptability :  not only people in USA but also people in EU can play this gam e",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1286843,
      "meta": {},
      "text": "Usability:\nThe user interface must be fully understood by the user after he played the game twice.\n95% of all players must agree with the statement \"I enjoyed using the user interface\".\nReliability:\nThe system must not tolerate any other input than pressed buttons in the interface and mouse clicks on the canvas at all times.\nThe program must not crash more than 1% of the cases when the game is played.\nPerformance:\nThe given direction of the mouse must be correctly translated to the direction of the car at all times.\nSupportability:\nThe game's potential bugs should be able to be resolved within 8 hours by a programmer with a Bachelor's degree in computer science or equivalent and who is familiar with the underlying programming language.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287431,
      "meta": {},
      "text": "Usability - cars need to be slow enough in relation to the field so that player can distinguish between them and understand whats happening\n- sounds should not be distracting the player because of being loud or annoying\nReliability - the game needs to proceed normaly no matter how many control buttons are pressed simultaneaously\nPerformance - the controls should affect the players car faster than the player can notice the delay\n- all cars should smoothly move in real time\nSupportability - new car types and collision types should be addable without changing rest of the game",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287833,
      "meta": {},
      "text": "A. Usability\n-Learnability : User only needs to click a mouse button to play.\n-Efficiency: You can learn the game in a matter of seconds.\n\nB. Reliability\n- Robustness: Clicking outside the intended gameboard or user interface can not crash the game.\n\nC. Performance\n- Availability: The user can play the game almost at all times and places, since it is platform independent, and also does not need a working internet connection\n\nD. Supportability\n- Maintanability: Changes to the game, can be made extremely fast, the players car, background, even collision types can be changed in a matter of only 10 minutes. \n- Portability : The game is plattform independent, meaning it shall have a port on any major gaming platform e.g. android and apple devices, pc, playstation 5 and xbox.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281266,
      "meta": {},
      "text": "Usability:\nOne of Nielsen´s 10 heuristics regarding usability is that he current system status should be visible. \nFor bumpers this is done by the pressed or no-pressed \"Start\" - Button. \n\nAlso one of Nielsen´s heuristics is user control and freedom. So a NFR-requirement in this case could be to let the player decide about the game, and how to control her car. \n\nPerformance:\nAnother NFR could be the performance that even though 10 or more cars\n are displayed on the screen the rendering is still smooth. \n\nThe system should be available 100% of the time the user opens the game. \n\nSupportability:\nIt should also be adaptible and new Car types and Collision types should be added without changing existing classes. \n\nRobustness:\nthee system should also be robust and maintain its functionality if the user clicks very often on the screen. (20 times per second) \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281790,
      "meta": {},
      "text": "Usability:\n* The player can move just with the click on to the playfield. He doesn't need the keyboard for that.\n* The player recieves audio feedback on what happens to the game. For example if a collision occurs it is not just visualy\n\nReliability(Robustness):\n* The game should work on every platform that makes it really good for a player because they wont have any plattform issues.\n\nPerformance(Accuracy):\n* Because there is just on player it can run fully localy which implies that there is no network issues for example with latency.\n\nSupportability:\n* It is extremly easy to add a car type to the game by just adding a new subclass and spawning it.\n* It is extremly easy to swap out resources because you just have to change the constant path to the new file and the system will adapt to it.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282222,
      "meta": {},
      "text": "- The game must run with at least 60 FPS Test System -> (i5-8400 with integrated graphics)\n- The game should run on mobile as well as Unix and Windows Systems\n- The game should not crash while being played for at least 5h straight\n- One should be able to get from opening the app to playing in no more than 3 Interactions\n- The game should run on a mobile phone with an initial full charge for at least 5h without draining more than 80% (Test phone -> Samsung Galaxy S10)\n- If a user has a issue with the app, he should be able to solve the problem via support in less than 4 business days",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282482,
      "meta": {},
      "text": "Nonfunctional requirements for Bumpers Car\n\nUsability\n- Alerts helfen dem Spieler, sich durch die Spielführung zu navigieren (z.B. beim Starten und Beenden des Spiels)\n- Standards bezüglich der Knopfplazierung (z.B. der Exit-Button) sollten eingehalten werden\n- Der Text (z.B. auf Buttons oder Alerts) sollte für alle Altersgruppen gut lesbar sein, also als Untergrenze 10pt (hängt etwas von der Schriftart ab) und hohe Kontraste zum Hintergrund haben\n\nReliability\n- Wenn der Spieler falsche Eingaben tätig, z.B. das Auto falsch steuert (eg WASD) soll das Spiel weiter funktionieren und keine Abweichungen vom Spielverlauf auftreten (Robustness)\n\nPerformance\n- Das Spiel sollte weniger als 1 Sekunde zum Starten brauchen.\n\nSupportability\n- Das Spiel sollte einfach zum Kunden gelangen können und portabel sein, also auch systemunabhängig.\n ",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1282580,
      "meta": {},
      "text": "1. Movement should only consit of clicking the left mouse button (Usability)\n2. Undefined Keyboard inputs should not impact the application (Reliability)\n3. Loss of internet connection should not impact the application (Reliability)\n4. Being an offline game the availablity should be 100% (Performance)\n5. User input response time should only be constraint by the users hardware (Performance) \n6. New patches should be made available through a repo (Supportability)",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282743,
      "meta": {},
      "text": "NFR1 Usability: The picture of the car is a square with a side length of at least two centimetres. \nNFR2 Usability: The background picture of the game has at least three colours and should be related to motor Racing. \nNFR3 Usability: User can end a game within a maximum of 30 mouse clicks. \nNFR4 Safety: The game should not leak the user's IP address, whether online or offline. \nNFR5 Performance: The cars should start moving within 0.05 second each time after the user clicks the mouse. \nNFR6 Adaptability: The game should run at an appropriate size regardless of the size of the screen of the user’s computer. \n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282853,
      "meta": {},
      "text": "NFR1: Usability: The system should be intuitive to use, and the user interface should be\neasy to understand and to operate. All interactions should be completed in less than 3 clicks.\n\nNFR2: Conformance to guidelines: Nielsen’s usability heuristics should be the guidline regarding the design of the system.\n\nNFR3: Availability: The downtime of the System is at most 20 minutes per week.\n\nNFR4: Response Time: The response time of a mouse click for steering the car should not exceed 280 milliseconds.\n\nNFR5: Supportability: It should be possible to add any number of new car types to the system after product delivery.\n\nNFR6: Security: Under no circumstances should the player be able to modifie the existing collision types to his advantage (for example to make himself always the winner of a collision).",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283215,
      "meta": {},
      "text": "NFR1: The type of the player's car can be chosen before the game starts. (Usability)\nNFR2 :. Speed can be slowed with left mouse click, increased with right mouse click. (Usability)\nNFR3 : There should be a pause button next to stop game button, pausing all movements of the game. Once pressed, a resume button should pop up in the middle of the UI to continue from the paused situation. (Usability)\nNFR4 : The Car data size should be small for a smoother game. (Performance)\nNFR5 : The player can set the amount of enemy cars before the game starts, between 5 and 25. It declines inputs outside the range with an error message in red. (Reliability)\nNFR6 : The code must be written in OOP, putting different collision and car types in subclasses of a default class Collision/Car. (Supportability.)",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283855,
      "meta": {},
      "text": "1, Usability (Learnability): Players without any gaming experience, should be able to steer and change the speed of the car under 2 minutes. \n\n2, Reliability (Security): The game should be protected against unwanted viruses or different cheat codes, which can improve the score of the player. \n\n3, Performance(Response time): The setup of the game should be completed in less than 5 seconds. \n\n4, Performance (Throughput): The game should able to handle 120 clicks per minute. \n\n5, Supportability (Adaptability): The game should be working, although there was a software upgrade on the players computer. (Sierra -> Monterey). \n\n6, Supportability (Maintainability): The system developer should be able to fix bugs, while the player is playing with the game. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287500,
      "meta": {},
      "text": "Usability:\n1)Player needs at most 5 clicks to start a game\n2)Touch screen support\nReliability:\n3)System can tolerate up to 30 cars simultaneously\nPerformance:\n4)Game's refresh rate must not drop below 60 fps on minimum hardware specified \n5)Game's loading time must not exceed 5 seconds between startup and gameplay\nSupportability:\n6)If game crashes, it should create a log file for debugging\n7)Telemetry data should be collected for user profiling\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281084,
      "meta": {},
      "text": "1) Usability\n- The user changes the direction of the car with a click on the gameboard. The car then drives in the direction of the mouse click.\n- The game should visualize different parameters of the car, e.g. the speed, consumption and location of the car.\n2) Reliability\n- The game stops automatically, if the user wins or looses.\n3) Performance\n- The game starts within 1 second after pressing the \"Start\" Button.\n4) Supportability\n- The game should be platform independent.\n- The code follows the following code-conventions: Code may not be duplicated. Every method is described by a short comment.\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282343,
      "meta": {},
      "text": "1. R: The player can choose the direction of the player car and also vairy its speed.\n2. R: The player can start and stop the game, whenever needed\n3. P: The game is platform independent\n4. S: The collision winner is changeable during the gameplay\n5. R: Music stars to play, when the game is started.\n6. U: the player can choose between two cartypes.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282417,
      "meta": {},
      "text": "Usability:\n1.Players should use the mouse to control the direction of the car.\nReliability:\n2.This game is offline game, so that the possibility of attacks from viruses and Trojan horses becomes really low.\nPerformance:\n3.The game provides different kinds of collisions.\n4.During the gameplay, the determination of the collision winner is changeable.\n5.The game performs BGM, when the game starts and performs sound effect, when cars crash.\nSupportability:\n6.The game is platform independent, which can be use in different devices without changes.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1282632,
      "meta": {},
      "text": "NFR 1 Usability : player needs just 1 click to start the game\nNFR 2 Scalability : 1000 users should be able to play the game at once\nNFR 3 Target Platform: should work on Android an iOS Devices\nNFR 4 Performance: changing the speed should be possible during the game,  and the speed of the players car should change accordingly 2 sec later, so the player has time to control his car \nNFR 5 Maintainability : there should not be more than 20 implemented (main!) classes\nNFR 6 Compatibility: the game needs as minimum hardware a mouse or touchscreen",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283060,
      "meta": {},
      "text": "Non-Functional requirements1: Usability -> Players could be able to open the Bumpers game with 3 Clicks.\n\nNFR2: Usability -> player should be able to play the game in FullScreen modus.\n\nNFR3: Reliability -> Security: just authorized players can play the game and avoid any others unauthorized accesses.\n\nNFR4: Performance -> player needs to open the game within 2 seconds and with different types of operating systems , e.g. windows, ios, etc..  \n\nNFR5: Performance -> Availability: the player must be able to use the Bumpers game independent from the times of days or week (whenever he wants). By updating this game can not the player use it because the game is in downtsime. the update phase will happen sometimes. (availabililty rate might be 94%).\n \nNFR6: Supportability -> Adabtability: player should be able to use that game on different Advices, e.g, when he changes his phone or his Laptop. the bumpers game must support multiple advances and Systems (windows, ios).\nNFR7: Usability -> player can play either with Mouse or with Keyboard.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283986,
      "meta": {},
      "text": "Usability: Users should be able to start the game with a maximum of two clicks.\nReliability:\n\tRobustness: The game shouldn't react to any other inputs than mouse clicks.\n\tSecurity: The player should under no circumstances win the game when he lost a collision.\nPerformance: The game should be able to manage 15 mouse clicks per second.\nSupportability: \n\tAdaptability: The game has to be platform independant.\n\tMaintainability: A new car type should be addable within 5 minutes. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284647,
      "meta": {},
      "text": "1. is it easy to control the car's direction and speed by the 1 mouse click?\n2. the car can react after the mouse click very quickly.\n3. the game will not break down, when too many collisions happened at the same time.\n4. only one player can play the game.\n5. the developers can add new car types and collision types to this game easily.\n6. users play this game with a mouse.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284831,
      "meta": {},
      "text": "Usability:\n- learnability: The bumpers game is very easy to learn, as the only things the user has to do is click the start game button and start navigating the car, by clicking where he wants the car to go. \n- Efficiency, so how fast the game is to use, once learned: This applies to the bumpers game, as you don't have to go through multiple windows to start the game, there are no special tricks you can do with the car that need time to learn.\nReliability: \n- robustness: When the game starts with too many cars(e.g 30), the program should still detect collisions normally and not crash\nPerformance: \n- availability: Launching the game should at most take 5 sec. If the user clicked stop game button the game should stop immediately and not take time to stop.\nSupportability:\n-adaptability: The game adapts its self to the users input, meaning that the user can e.g. choose different collision types.\n-maintainability: The code is very maintainable, as the classes are divided well, so there is a class for resources, one for audio player, one for the cars, one for the collisions and so on. So another developer can very easily understand the system and accordingly change what he wants.\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285031,
      "meta": {},
      "text": "1. supportability : this game should be playable in every platform in the market.\n2. usability : players should be able to steer his/her car's direction and change its speed with mouse.\n3.reliability: if player does not stop this game, game should not stop until one car wins all collisions\n4.performance: this game should only support one player at one time.\n5. usability : players should be able to read all parameters of the car, like speed, consumption and location of the car.\n6.usability : player should get notified if system has determined that this player wins/loses this game.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285138,
      "meta": {},
      "text": "1. The game should run without lag on a modern computer.\n2. The game should be playable on any System.\n3. The game should be updatable.\n4. The game should be playable with a keyboard.\n5. The game should be easy to start.\n6. The game should not crash.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1285166,
      "meta": {},
      "text": "Usability:\n\t-Only requires one click to start/end the game\n\t-The game is controlled via any mouse\nReliability:\n\t-The application should not cause a virus (has no permissions to anything that is not required for the game)\nPerformance: \n\t-takes less than 1sec to determine the winner of a collision\n\t-Should be able to perform on any low-end pc\n\nSupportability:\n\t-New Collision types can be added without issues",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1288105,
      "meta": {},
      "text": "Usability\n1. Players should be able to download the game with at most 10 clicks\n\nSecurity \n2. The system should prevent leaking of names by 99.9%\n\nAvailability\n3. The system has to be online for 98% of the time\n\nSupportability \n4. The game can be played on mac os and windows \n\n5.the system can tolerate over 10 players \n\n6. The system should be ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280648,
      "meta": {},
      "text": "Usability:\n1. Das System benötigt eine Möglichkeit, um das Spiel zu starten und zu stoppen. Diese soll dem Spieler direkt angezeigt werden, wenn er die Applikation startet. Außerdem soll es nicht mehr als 2 Klicks benötigen, um das Spiel zu starten.\n2. Wenn die Musik startet, soll diese nicht zu laut gedreht werden. Auch die Soundeffekte sollen angepasst werden, sodass einem schon bei niedriger Systemlautstärke nicht die Ohren wehtun. Die Musik soll nicht die Spielerfahrung behindern.\n\nReliability:\nDas Auslösen der Collisions soll auf Collisions mit Autos beschränkt wetden. Wenn der User sein Auto gegen eine Wand (Spielfeldränder) fährt, soll das nicht abstürzen und dementsprechend mit diesem Sonderfall umgehen können.\n\nPerformance:\nDas Spiel sollte mehrere Autos (mind. 10 Autos) auf dem Spielfeld aushalten können. Die Figuren sollen sich auch dann flüssig bewegen lassen können, sodass die Spielerfahrung nicht behindert wird.\n\nSupportability:\n1. Das System sollte anpassungsfähig sein. So sollten neue Collisions/Autos/Parameter der Figuren ohne große Änderung am System Design in das Spiel integriert werden können. \n2. Das Spiel soll auf unabhängig von der Plattform gut funktionieren. Das Spiel soll auf Windows, Mac und Linux laufen können.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1283170,
      "meta": {},
      "text": "Usability\n1. Satisfaction/user experience\nThe interface of Bumpers must contain a start and stop button. In addition, the interface must visualize \t \t \t \ndifferent parameters of the car, like speed, consumption and location of the car half a second after the \t\t\t \t\t\t\t \nThe player pressed the start button. Also, the buttons must have keyboard shortcuts.\n\nReliability\n2. Safety\nThe game must save the player's most recent match in intervals of at most 1 minute.\nIf the player's latest game didn't end and the application is started, the most recent match must be \t\t \t\t \nresumed.\n\n3. Performance\nThe game must handle at least 100 in-game cars with an update rate over 60 Hz on devices with over \t\t \t\t\t\t \t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        \n4 GB of RAM, a dual-core CPU with at least 1 GHz clock-speed and an age below 4 years.\n\n4.  Response time\nThe game must react to user input which lasted at least 0,01 seconds. \n\nSupportability\n5. Adaptability\nThe game's interface must be displayed in the player's screen ratio without compliance with window size.\n\n6. Maintainability\nA new collision and type of car must be implemented by a developer in at most 1 hour.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283240,
      "meta": {},
      "text": "1.  Usability: Player can play the game without reading user manual\n2. Relibility: Out of 100 executions Bumpers should not crash more than 1\n3. Performance: The cars directions should be changed after 1/2 s after steering\n4. Adaptability: Bumpers must support European and Americas countries (People can play Bumpers). That means it must support imperal and metric systems.\n5. Maintainability:  Bumpers must be re-designable to a client-server architecture\n6. Portability: Bumpers can be moved from IOS to Android and from Android to IOS",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283577,
      "meta": {},
      "text": "Usability:\n\t1.\tUser Control: The player can steer the direction of the car with the mouse\n\t2.\tVisibility of System Status: Visualization of different parameters of the car: the speed, consumption and \t\t\t\t location of the car; When cars crash, there has to be a sound effect\nReliability:\n\tRobustness: The game should support different collisions\nPerformance:\n\tThe game should run with at least 30 frames per seconds.\nSupportability:\n1.\tAdaptability: The determination of the collision winner should be changeable during gameplay.\n2.\tPortability: The game should be platform independent\n",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1284668,
      "meta": {},
      "text": "1. Usability: Es sollte eine Dokumentation für die UI existieren.\n2. Usability: Alle Interaktionen mit der UI (Auswahl des Kollisionstyps etc.) sollten maximal drei Klicks benötigen.\n3. Usability/Performance: Das Spiel sollte mindestens 20 FPS haben. \n4. Reliability: Das Spiel sollte zu jeder Zeit spielbar sein, ob eine Internetverbindung vorhanden ist oder nicht.\n5. Performance: Die UI sollte auf jede Aktion des Nutzers innerhalb von 50 ms reagieren.\n6. Alle öffentlichen Funktionen, Klassen und Variablen sollten dokumentiert sein. ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1284825,
      "meta": {},
      "text": "nonfunctional requirements for Bumpers\nUsability:\nPlayers interact with the mouse\nThe game should be platform-independent.\nThe game should visualize different parameters of the car, e.g. the speed, consumption, and location of the car.\n\nReliability\nSecurity: \nPlayers are not allowed to modify the game source code (e.g. to make themselves winners all the time)\n\nPerformance\nThe collision should be detected in less than 0.1s \nSound effects appear without delay\n\nMaintainability:\nDevelopers can add new car types\nDevelopers can add new collision types\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285192,
      "meta": {},
      "text": "I)Usability : \n-The fact that the determination of the collision winner should be changeable during gameplay gives the player more vision of the game.\n\n-The music plays automatically when the game starts which is really efficient in terms of user's satisfaction and helps the product to be less time and energie demanding for the custumer(player). \n\nII)Reliability: \nthe game helps the user to visualize the different parameters which is considered a safe play because he will be able to identify an existing problem and its cause quickly.\n\nIII)Performance:\nin terms of accuracy , the direction of the car can be defined using the mouse. the precision make the game performant.\n\nIV)Supportability:\n-the game should support different type of collisions. This multiplatform concept helps the game to be adaptable to all platforms and maintains a good flexiblity of it.\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285324,
      "meta": {},
      "text": "Usability:\n-Der Spieler muss die Möglichkeit haben das Auto mit nur einem Mausklick zu bewegen.\n-Die Autos und das Interface sollten ihre Größe an die Bildschirmauflösung anpassen damit sie nie zu groß oder zu klein sind. Heißt: Sie behalten ihre gedachte Größe und skalieren 1zu1 mit.\n\nReliability:\n-Das Spiel sollte reibungslos funktionieren, wenn der Spieler schnell 10 mal hintereinander auf Start drückt (Musik muss abgespielt werden) und sofort gezielt mit einem Auto crasht nur um wieder ins Hauptmenü zu kommen um wieder auf Start zu drücken. (Darf nicht abstürzen / verbuggen)\n\nPerformance:\n-Wenn der Spieler auf Start drückt muss es bei bis zu 12 Autos unter 1 Sekunde dauern um ins Spiel zu kommen.\n-Die FPS des Spiels muss, bei bis zu 12 Autos, auch bei der Mindesthardware (4GB Arbeitsspeicher) mind. 60\nbetragen.\n\nSupportability:\n-Unser Spiel sollte auf Android / Apple Geräten sowie PCs(Windows/Linux) und den 3 Konsolen Nintendo Switch PS5 und Xbox Series X vorhanden sein und funktionieren.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1287067,
      "meta": {},
      "text": "Music should be played during game play. (Usability)\nCar animations should be smooth. (Usability)\nCollision detection should be absolute, ie. winner is determinable for every case. (Reliability)\nAt least 10 cars should be able to play simultaneously. (Performance)\nMusic and game sounds should play without any lags. (Performance)\nGame should be adaptable to any platform. (Supportability)",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280260,
      "meta": {},
      "text": "QR1 Learnability: The Bumpers game's user interface should be intuitive. \nQR2 Memorability: The Bumpers game's rules should be intuitive and easy to remember. \nQR3 Robustness: The Bumpers game should not crash when given a wrong input.\nQR4 Performance: The responding time should be within the human consciousness.\nQR5 Adaptability: The game should be open to UI or behaviour changes.\nQR6 Maintainability: The code should be well commented and documented in UML.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283252,
      "meta": {},
      "text": "NFR 1 Usability: users can start the game with only one click\nNFR 2 Safety: saving the game score if player accidentally exits the game\nNFR 3 Performance: sound effect shall turn on after at most 1 second after the crash\nNFR 4 Usability: software shall work smoothly for better game experience\nNFR 5 Portability: software can be moved from one hardware to another without any problems\nNFR 6 Robustness: the ability of the application to not crash down and support at least 10.000 players at the same time\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284245,
      "meta": {},
      "text": "Usability:\n\t1) Vom Startbildschirm bis zum Beginn des eigentlichen Spiels dürfen maximal 5 Benutzereingaben notwendig sein.\n\t2) Eine Erklärung des Spiels muss von der Startseite aus geöffnet werden können.\nReliability:\n\t3) Auch bei Eingaben über die definierten Tastenbelegungen muss das Spiel weiter funktionieren.\nPerformance:\n\t4) Während des aktiven Spielens müssen mindestens 30 Bilder pro Sekunde (FPS) angezeigt werden. \n\t5) Die Anwendung muss während es aktiven Spielens auf Benutzereingaben innerhalb von 3ms reagieren.\nSupportability:\n\t6) Das Spiel muss unabhängig von der verwendeten Plattform gleich aussehen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1284265,
      "meta": {},
      "text": "1.(Usability)\n\t1.1 Nach dem Starten des Spiels, sollte eine Runde innerhalb von 3 Klicks startbar sein.\n2.(Reliability)\n\t2.1 Wenn das Spiel einen Fehler hat und abstürtzt, sollte es automatisch wieder mit dem letzten Spielstand starten.\n3.(Performance)\n\t3.1 Das spiel sollte maximal eine Reaktionszeit von 50ms nach einer Nutzereingabe haben, auch                               während\tden Runden.\n\t3. 2Das Spiel sollte auf Linux, MacOs und Windows funktionieren.\n4.(Supportability)\n\t4.1 Der Code, sollte sich an den Google Style Guide halten.\n\t4.2 Es gibt eine Dokumentation zu dem Spiel, die alle Methoden, bis auf Hilfsmethoden wie Getter und Setter, erklärt.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1284269,
      "meta": {},
      "text": "Usability: 1. The player has to do at most 3 clicks until the game starts.\n2. The start game and stop game buttons are always placed at the top right corner. \n3. There is a help button that explains the rules at the bottom right corner at the start of the game.\n\nReliability:\n4. The start/ stop button are deactivated when the game runs/ pauses to prevent wrong user input.\nPerformance:\n5. The game evaluates  a possible collision at least 10 times a second. \nSupportability:\n6.The game also runs as an Android & IOS-App for Smartphones and Tablets",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285042,
      "meta": {},
      "text": "1. The player UI needs to show the selected collision type in order to prevent the player from not knowing how to win.\n\n2. The game has to function even if the player didn't select a car and/or collision type.\n\n3, The game has to run with at least 30FPS on average systems and 60FPS on high end systems.\n\n4. Developers should be able to insert new cars into the game based on player input.\n\n5. The player should be able to easily distinguish the different types of cars.\n\n6. It should take no more than 5 milliseconds for the game to recognize and execute player input.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285520,
      "meta": {},
      "text": "NFR1 Usability : The player can start the game and play it with a couple of clicks.\nNFR2 Target Platform : The game can be played on different platforms.\nNFR3 Performance: The game could be played with several cars at the same time.\nNFR4 Supportability :  The game should support different collisions.\nNFR5 Changeability : The Collision Winner can be changed during the game \nNFR6 Safety: The player can stop the game before it stops eventually.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285623,
      "meta": {},
      "text": "The first two examples for non-functional requirements of the Bumpers Game fall under the category of usability. The first one is that after taking only one click to start the game, the player shouldn't be required to give a lot of complex input, in order to successfully play the game. They should be able to steer their car just by clicking the game board and their car should turn in that direction. The second example is that while it should be possible to play just be steering the car, there should be an option to change its speed during gameplay, which should be easily accessible for the player. An example for a quality requirement of the reliability category would be, that the players input is constricted, as to not allow unwanted behavior. For that reason every other given input besides starting and stopping the game, steering the car and changing its speed and changing the collision type should be ignored. Two requirements of the performance category would be that, the movement and collision of cars should be calculated accurately as to allow sound effects etc. to play out organically and that the instructions following new input by the player should be followed immediately. The last example is part of the category of supportability and requires, that the program and game should work correctly on and independently of the platform.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285852,
      "meta": {},
      "text": "Non-functional Requirements for the Bumbers Game:\n\n  -  Usability: the user needs to confirm that he actually wants to stop the game before completely exiting the game, by clicking on a corresponding yes/no button (Nielsen's heuristic #3: User control and freedom)\n\n  -  Performance: the music starts playing within at most 1 second after the starts the game\n\n  -  Usability: the user can visualize at least 3 and at most 5 parameters about the player's car: e.g. the speed, the consumption, and the location of the car (Nielsen's heuristic #2: Match between system and the real world)\n\n  -  Usability: during gameplay the user can change the type of collision, influencing the determination of the collision winner (Nielsen's heuristic #7: Flexibility and efficiency of use)\n\n  -  Reliability: each collision determines a winner of the collision, 100% of the time: there is no collision without a winner\n\n  -   Supportability: the game is platform independent, so that portability is guaranteed",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286388,
      "meta": {},
      "text": "- 1: The size of the cars should should have a minim size of 2 cm x 2cm (usability)\n- 2: The game should not display more than 15 cars to improve comprehension and usability (usability) \n- 3: There should be less than 1 seconde between the crash and the sound played (performance) \n- 4: The user should be able to report an error in the game and to describe it (Supportability) \n- 5: If headphones are plugged the program should display a message if the sound is higher than 100db to prevent the user from becoming deaf. (Reliability)\n- 6: The \"Quit\" button should be in red to prevent the user for quitting mistakenly. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287437,
      "meta": {},
      "text": "Non Functional Requirements:\n1.The User should be able to start the game in one click.\n2.The game should run independent of the system like Linux, windows or mac os.\n3.The game should be maintainable : other features can be added like different collisions or other types of cars.\n4.The user should be able to stop the game in one click with no latency.\n5.The game should detect any cheating software or viruses.\n6.The steering of the car should happen simultaneously when the player moves the mouse with no latency.\n7.The game should be developed in java.\n8.The sound of the game should be adequate to the game theme.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287697,
      "meta": {},
      "text": "Usability:\n1/ The game has to visualize different parameters of the car, e.g. the speed, consumption and location of the car, so that the player is informed about the current state and location of the car at all times. (Visibility of System Status). \n2/ the parameters of the car should be displayed as quickly recognizable and distinguishable icons (different colors), so that the player can get informed about the state of the car much quicker after getting familiar with the UI.\n\nReliability:\n3/  Robustness: the game has to handle wrong user input correctly. If the player tries increasing or decreasing car speed beyond the allowed limit, this input should be ignored. If a player clicks on the \"start game\" button multiple times in a row, only one game should be started, or else the app could crash.\n\nPerformance:\n4/ The game has to be able to respond to both speed and steering inputs simultaneously, with the inputs reaching the gameplay within at most 30 milliseconds.\n\nSupportability:\n5/ Adaptability: The car images have to be easily adaptable by  the developers. The FastCar should always picture the newest Tesla car model.\n\n6/  Portability: the game should be platform independent. Also, it should be possible to save the own car account to play with the same car on another devices by just logging in.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280323,
      "meta": {},
      "text": "Usability:\n- Das User Interface ist übersichtlich.\n- Das Menü zum Starten/Stoppen der Musik ist einfach zu bedienen.\n- Das Menü für die Änderung der Kollision ist einfach zu bedienen.\n- Das Lenkung des Spielerautos ist intuitiv.\n- \n- \n\nReliability:\n- \n- \n- \n- \n- \n- \n\nPerformance:\n- Das Spiel kann bis zu 10 Autos auf dem Spielfeld unterstützen.\n- Die durchschnittliche Reaktionszeit zwischen lenken und Reaktion beträgt 0,5 Sekunden. \n- \n- \n- \n- \n\nSupportability:\n- Der Code für das Spiel ist ordentlich kommentiert.\n- \n- \n- \n- \n- ",
      "score": 33.3,
      "language": "GERMAN"
    },
    {
      "id": 1281330,
      "meta": {},
      "text": "1. the player should be able to start the game within 2 clicks (usability)\n2. during the game, the screen should be updated at least 20 times per second (usability)\n3. the game should also be able to run if the temperature is under -10 degree (reliability)\n4. the game should not break down if the player clicks the mouse with a very high frequency (reliability)\n4. after clicking the mouse, the system should react within 20ms (performance)\n5. the game should be able to run on different systems (supportability)\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281462,
      "meta": {},
      "text": "1. Player can control the car with just one click, so that user interface is very easy to learn and play. As soon as the car is only controlled by the mouse, the player will not easily forget how to play this game.\n\n2. The game system should be able to hold 20 cars at the same time on the gameboard without breaking or delaying, so that the player can add more cars to the gameboard to create individual game difficulty.\n\n3. The player should be able to play this game on every popular desktop operation system (Windows, macOS etc.). If the player's device does not have mouse, player can play this game with touchpad or fingers as well.\n\n4. The delay between players mouse clicking and the car's action should be less than 60 ms. The time it takes to load the whole gameboard and all cars should be less than 5 seconds.\n\n5. Once the game is downloaded, it can be played offline. It prevents the most cyber attack. The game can be played 24/7/365. For the update should just download the newest version and it will automatically replace the old version.\n\n6. The player's car and AI cars should have high contrast colours, as a result, the player can easily distinguish his/her own car between AI cars and the gameboard. This makes for a much better gaming experience for players.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285217,
      "meta": {},
      "text": "1. The system should support starting the game\n2. The system should support stopping the game\n3. Support cars that drive autonomously and one car which is steered by the user\n4. Determine a collision of two cars\n5. Determining a Winner\n6. notification of the winner or loser of the game",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1286055,
      "meta": {},
      "text": "Usability\n- Player can perform all required actions with the mouse\n- Player is informed about crash detection via a soundeffect\n-------------------------------------------------------------------------------------------------------------\nReliability\n- The Game is not influenced by wrong inputs\n-------------------------------------------------------------------------------------------------------------\nPerformance\n- The system supports one user\n-------------------------------------------------------------------------------------------------------------\nSupportability\n- Other types of cars can be added within 10mins\n- Soundeffects can be changed within 10mins\n-------------------------------------------------------------------------------------------------------------",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286158,
      "meta": {},
      "text": "Usability: User can play a game with 0 PRIOR EXPERIENCE. Game control is INTUITIVE and can be EASILY UNDERSTOOD after 2-3 FIRST ATTEMPTS.\nReliability (Robustness): Game should NEVER STOP under unexpected user inputs, on the contrary game must be finished first, after that user must be INFORMED ABOUT last UNEXPECTED INPUTS (unexpected input e.g. button which is not determined in game control).\nReliability (Security): Game should have an integrated anti-cheat, which checks game root files before EVERY START.\nPerformance (Availability): Game must be able to support UP TO 10 cars moving simultaneously on the board.\nPerformance (Responce time): Game must start within maximum 6 SECONDS, including anti-cheat file scanning.\nSupportability: Game should be PLATFORM-INDEPENDENT (from problem statement). Game should be AVAILABLE on 32-Bit as well as on 64-Bit architecture devices.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286378,
      "meta": {},
      "text": "NFR1 Usability: the rules of the game should be understandable for the user without using text. \nNFR2 Robustness: When the user uses keys to steer the car, there should be an output that the mouse is there for steering\nNFR3 Performance: you should have the ability to scale the number of cares and maybe other items up to thousand.\nNFR4 Maintainability: The crash sound must be changeable by just changing a thing in one method.\nNFR5 Adaptability: the game should adapt to a player’s abilities. If the player isn’t that good the game is made easier and if the player wins to fast it must be made more difficult \nNFR6 Security: The game must be safe form users, who want to have a higher speed or change other beneficial criteria’s to be even more beneficial.\n.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286955,
      "meta": {},
      "text": "Usability:\n- When asked to play the game, at least 9 out of 10 players understand the controls intuitively.\n- The game can be played with hearing impairment\n\nReliability:\n- The game experiences a fatal error less than once in every five hours of running time (on average), where a fatal error is defined as an error that makes the application crash\n- It is not possible for an error to occur that may corrupt a file and/or render the game impossible to play again.\n\nPerformance:\n- The game never occupies more than 512MB of RAM memory.\n\nSupportability:\n- Software updates can be downloaded and installed automatically.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286975,
      "meta": {},
      "text": "1. Usability: The game should be easy for the user to learn and once they have learned it, it should also be easy to use. This means only needing 1 click for the user to move the car. There needs to be a tutorial mode, or a pop up which shows description of the commands that the user can do.\n\n2. Usability: The user should be able to pick out what type of car and collision type he or she would like to play with that round. Therefore, we need a panel with these options. \n\n2. Reliability: If the user inputs the incorrect input such as clicking the right click or pressing other buttons on their keyboards. This should not affect the system in unintended ways. \n\n3. Performance: The user should have a smooth experience, so there should be a set rate of ticks per second. Since different systems have different CPU's, which means if we a set a high tick rate, some systems might not be able to run as smoothly as other systems. This can fixed, by either giving users information on the basic hardware needed to run the game smoothly. \n\n4. Supportability: For the system to be easily maintainable by the developers, it is recommended that they create documentation for the code, either on a separate document or on the code itself. It would be better if it has both. \n\n5. Constrains: Developers need to make sure that they follow all copyright laws for the music, car and crash sounds that they will be using for the game.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1288089,
      "meta": {},
      "text": "-Usability: Aesthetics (A game that is visually unpleasing is not fun to play), Consitency (e.g. Non Varying car type images improve looks and cositency)\n-Reliabality: Predictability (Important for a game with inputs as the game should behave how you expect)\n-Performance: Speed: (For a simple but responsive game like bumpers speed is important as the games playability relys on it)\n-Supportability: Modifyability: (The game can be easily recoinfigured as seen in the porgramming excercises which leads to an easier development as you can test and configure the game as you like it in order to improve it)\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280359,
      "meta": {},
      "text": "Usability: \n1. The game rules are easy to learn.\n2. The control of cars through mouse is smooth.\n3. The player can know the detailed information of each car.\n4. The UI should be visually aesthetic.\n5. The game confirms that the player wants to leave the game and didn’t press the wrong button.\n6. The error messages need to be clearly and directly delivered to the player.\n\nReliability: \n2. The size of the game is not too big. \n3. The collision of cars should be correctly detected.\n4. The sound effects of car crash should be functioning as expected.\n5. The game won’t crash on different platforms.\n6. The application page should be crash safe in 95% of its runtime.\n\nPerformance: \n1. The loading time of the Bumpers application is short.\n2. More than 10 cars can be driving and displayed at the same time.\n3. The respond time of mouse steer control is short.\n4. The location and direction of cars can be real-time displayed. \n5. More than 10 collisions can be handled at the same time.\n6. The respond time of sound effects activation is short.\n\nSupportability:\n1. The game supports different kinds of cars.\n2. The game supports different kinds of collisions.\n3. The determination of the collision winner should be changeable. \n4. The cars can change speed in the range of a minimum and a maximum velocity.\n5. The application supports different platforms.\n6. The music changes when there is a collision.\n",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280531,
      "meta": {},
      "text": "1. Portability: Bumpers can be running on Windows XP and Windows 10\n2. Reliability : the car can't crash twice at the same time\n3. Performance: Cars should be able to change directions every millisecond after steering the cars   \n4.  Availability: It should take less than 10 seconds to restart the game after failure\n 5. Availability: Bumpers should be not unavailable more than 30 minutes per 10000 hours \n6. Usability: User should be able to play bumpers without reading the instructions \n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281748,
      "meta": {},
      "text": "1.  Das Spielerauto sollte allein mit einer Maus gesteuert werden können\n2.  Die Reaktionszeit für die Steuerung des Spielerautos sollte unter 10ms betragen.\n3.  Das Spiel sollte in unter 2 Sekunden starten.\n4. Erweiterungen wie neue Autotypen oder Spielinhalte, sollten einfach über Schnittstellen hinzufügt werden können.\n5. Das Spiel muss auch bei fehlerhaften oder unerwarteten Eingaben (wie einem invaliden Auto oder einer Invaliden Farbe) weiter einwandfrei Funktionieren\n6. Die Autosteuerung muss auch an einem Gerät mit Touchscreen durch tippen funktionieren.",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1282057,
      "meta": {},
      "text": "NFR1 Help: The game has a visible help button to explain the game and functionality of different cars, so that also first time player can play the game.\n\nNFR2 Performance: The delay between the mouse movement and the car movement should only be 1 ns.\n\nNFR3 Maintainability: Bugs should be fixed in work day.\n\nNFR4 Robustness: Every other input than the mouse input and commands regarding the window should be ignored.\n\nNFR5 Adaptability: The developer can easily add an other type of car.\n\nNFR6 Minimal Design: The window should only contain the cars, an window header and a help button.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282507,
      "meta": {},
      "text": "- Usability: Starting the game should take only one click of a button\n- Reliability: Collisions should be consistent and clearly displayed\n- Performance: The game should run fluently, with at least 24 frames per second\n- Supportability: Adding new collision types should not take longer than an hour\n- Usability: Players only need to use the mouse for steering, changing the speed should be possible with an intuitive hotkey highlighted in the user interface (e.g. space)\n- Learnability: The car of the player should be clearly marked so the user can see which car they're steering",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284633,
      "meta": {},
      "text": "(U)sability:\n1. Players can know about the start and car-crash moments of the game due to the starting and crashing sounds.\n(Learnability): 2. The player can easily learn the user interface as the game itself is controlled only by the mouse clicks (for deciding the directions) and the results are shown on the display.\n(Memorability): 3.Due to the repeatable nature of the game actions (mentioned above) and the existence of the only one controller, user is not required to recall more than 2 functions.\n\n(Robustness)\nDue to simple user interface, the player has no option to insert erroneous inputs, which never puts the game in the position of being non-executable.\n \n(P)erformance(Response time):\n4. Once lost or win, the player immediately knows about it due to timely feedback that appears within milliseconds(less than 1 second).\n\n(S)upportability(Maintainability):\n5. According to the players preferences, new car & collision types can be added and modified by the developer.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285588,
      "meta": {},
      "text": "1. The car will move according to the direction of the mouse. If the mouse moves to the right, the car will move to the right. \n2. If the mouse moves, the car will follow in at most 0.001 second.\n3. Start button is green and stop button is red, so the player will not be confused with buttons.\n4. The mouse has to be inside the window of the game, otherwise the car will not move.\n5. Only one player can play the game.\n6. The audio file is played according to the situation (start of the game and cars' crash)",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286420,
      "meta": {},
      "text": "Usability: \n\t1. there shall be a tutorial before starting the game.  \n\t2. The usability should be better by providing information on the user interface about the speed of the car and maybe the coordinates. Therefore information about your car is visible. Also the player car should be highlighted in a different color to be differentiable of other cars\nReliability: you shall be able to rely on the game. It shall be safe and reliable to execute.   If requires too much storage/ physical requirements it shall inform you or automatically shut to not destroy your phone/ computer  \nPerformance:  game shall not take longer than 1 second to run your commands  \nSupportability: \n\t1. Have android and ios support or notify for new updates  \n\t2. The bumpers game should support 2 different types of cars. A slow car and a fast car\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281227,
      "meta": {},
      "text": "Usability: \n1.) Players is able to play the game without the use of a keyboard.\n2.) If there is an update of the game, the user should be informed about the changes with a short message before starting the game. (Visibility of the System Status)\n3.) The visual display of the car parameters (speed, consumption and location of the car) have to be underneath the gameboard, as the car parameters in the real world are also shown below the windscreen. (Match between the System and the Real World)\n\nReliability:\n4.) If the user pushes any other keyboard button than defined, the system has to ignore it. (Robustness)\n\nPerformance:\n5.) The system should support at least 500.000 players at the same time.\n\nSupportability:\n6.) It shall be possible to fix a bug within 12 hours.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281425,
      "meta": {},
      "text": "Usabilty:\n- The player can start and stop the game\n- The player controls the direction and speed of the car with his mouse.\n\n\n\nReliabilty:\n- When the game starts the music starts directly.\n- When two cars cause a collision, a crash sound must be played\n\n\nPerformance:\n- The game should run without any lags and must respond quickly to player input\n\n\nSupportabilty:\n-The game must run on all operating systems\n-There are different types of collision, \n\n\n\n\n",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1281908,
      "meta": {},
      "text": "Usability: Changing collision types during gameplay should be possible with two clicks.\nReliability: If the player tries to exit the field, the car should hit an invisible wall that prevents it from crossing the playable area.\nReliability: If a sound output cannot be found, the game should play without music.\nPerformance: The game must consistently hold 30fps+ for every supported platform.\nSupportability: It should be possible to add new car types without programming knowledge, simply by creating new assets and changing constants.\nSupportability: collision types should be interchangeable.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283805,
      "meta": {},
      "text": "Usability:\n - new players should be able quickly pick up the rules and mechanics of the game (i.e. a guided \ntutorial)\n - the game should have as few buttons as possible\n\nReliability:\n - the game should be protected from players cheating (i.e. indestructible car)\n - if there are collision types that only work with certain car types, the game should make it impossible for the player to select incompatible combinations of cars and collisions (i.e. greyed out or not listed)\n\nPerformance:\n - the game should be able to deal with a larger amount of cars (i.e. 50) without lagging\n\nSupportability:\n - the game should be implemented in a way that allows adding new car types in the future without having to change the code architecture\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283973,
      "meta": {},
      "text": "quality requirements:\n\n1. Usability:\n- Looking at the user experience, the images of the cars and the background of the gameboard shall have a strong contrast, so every car is clearly visible.\n- The car images shall have a minimum hight and width of at least 30x30.\n- The player car shall have a different image than the other cars.\n\n2. Reliability:\n- Regarding robustness, the user shall not be able to enter any other collision mode than those available.\n\t\n3. Performance:\n- The response time to user input of changing the direction shall be hightend by setting the amount of updates of the gameboard to a minimum of 25 fames per second.\n\n4. Supportability:\n- Regarding maintainability, new requirements shall be implemented within the next sprint.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284514,
      "meta": {},
      "text": "-NFR1 Usability:\nThe UI needs to scale with screen size in order to allow for constant text size. This is necessary so everybody can read the UI Button text with ease on every platform. It should be very easy to start a quick match with under 3 clicks.\n\n-NFR2 Performance: \nThe program should run smoothly without stutters. It needs to be stable (without frames dropping below 60) with 200 default collisions happening at the same frame on the low-performance testing machine HP Envy x360 Convertible 15-eu0000. The input lag should also be below 100 ms on this device.\n\n-NFR3 Maintainability: \nThe program needs to be written in clean java code. To make it easier for different developers to read code from other creators everybody should use the official java conventions by oracle. It is important that developers can easily adjust code to fix bugs and so efficient naming is important.\n\n-NFR4 Safety: \nTo protect against cheaters altering stats, the project must defend itself against memory leaks.\n\n-NFR5 Extensibility:\nThe program needs to make it easy to add new Car types and new collisions in the future.\nSo the code needs to be modular to achieve this.\n\n-NFR6 Adaptability\nThe game needs to adapt to new changes such as new cars, collisions and NPC count. \n(e.g. the gameboard needs to scale with higher NPC counts,)\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285219,
      "meta": {},
      "text": "learnability(U): the User should not spend more than one game in order to understand how to steer the car, and how  do collisions work\nRobustness(R): the game should not quit by itself if the user does something that is not in accordance with the standard scenario (just playing), for example, when he plays around with different parameters of the cars, and starting and stoping game\nAdaptability (S): the game should be platform-independent: it should be possible to play the game on more than one OS.\nMaintainability(S): the game should be easy to be modified by the developer. Depending on the customer's request, the game should be developed in such a way that it would take not more than the appropriate time to fulfill the corresponding request.\nAvailability(P): the game should be accessible to the player 99.99% of the time \nSatisfaction of User experience(U): The game interface should be attractive: high-quality images should be used, the color scheme should be observed.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283109,
      "meta": {},
      "text": "NFR 1: Usability:\nDem Spieler wird zu beginn des Spiels eine kurze Anleitung mit allen Steuermechanismen angezeigt. (Learnability)\n\nDas Spiel beschränkt sich in der Steuerung auf maximal 5 Tastaturtasten und zwei Maustasten. (Memorability)\n\nNFR 2: Reliability:\nDas System evaluiert Kollisionen mit einer Präzision von mindestens 99,8% korrekt. (Safety)\n\nNFR 3: Performance: \nDie Verarbeitung eines Mausklicks dauert innerhalb des Systems höchstens 75ms. (Response time)\n\nNFR 4: Supportability: \nDie Software kann um neue Features ergänzt werden, ohne das bisherige Framework neuaufbauen zu müssen. (Maintainability)\n\nDas System stürzt nicht ab, wenn sich die Parameter zur Ermittlung des Siegers einer Kollision ändern.  (Adaptability)\n\n\n\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1284057,
      "meta": {},
      "text": "Usability:\n\n- There should be a starting screen where a button which is called \"play game\" is in the middle of the screen and by pressing it, the player will play a round of bumpers\n\nReliability:\n\n- The game should not crash when the user clicks with the mouse more than 5 times a second on the gamefield\n\nPerformance:\n\n- The game should be playable with atleast 60 FPS (Frames per seconds) on modern hardware. This includes most laptops and tablets\n\nSupport:\n\n- The game should run on Linux, Windows and MacOS\n\n- The source code should be uploaded to a version control system like Git so it can be maintained by multiple people\n\n- The game should support touch screen inputs as mouse clicks",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284488,
      "meta": {},
      "text": "- Usability (Efficiency): Starting or stopping the game requires only one interaction.\n\n- Usability (User experience): No button or display (car parameters) hides any part of the playing field.\n\n- Reliability (Robustness): No interaction, independent of current system state (e.g. pressing Start while the game is running or steering while it is not), causes Exceptions/Errors or unrecoverable system states.\n\n- Performance (Response time): Every game cycle/tick takes below 30 ms (noticeable lag threshold) to complete.\n\n- Performance (Response time): While the game is running, each user input takes at most 30 ms to process and show effect.\n\n- Supportability (Maintainability): The implementation respects encapsulation and all interfaces between different components are documented in a consistent style.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285795,
      "meta": {},
      "text": "- Usability:\n1. The user should be offered a guideline to navigate through the game by documents shipped with the game, an integrated help system, or an optional tutorial level.\n2. Flexibility regarding customization should be granted to advanced users by allowing command line arguments and/or customized config files.\n- Reliability:\n3. Invalid inputs regarding game customization should be catched and corrected to the according default values.\n- Performance:\n4. The game should handle at least a thousand different cars without needing to drop the tick speed.\n- Supportability:\n5. The game should be platform independent.\n6. The source code should be well documented using Javadocs to make future maintenance easier.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286409,
      "meta": {},
      "text": "- (Usability) The game should be possible to be started in 3 clicks or less\n\n- (Usability) After the game has started, the player should be able to play the game solely using the mouse, until the game ends.\n\n- (Reliability) The player should not be able to cheat by manipulating the results of collisions\n\n- (Performance) The game should be able to support up to 20 cars simultaneously on the game board.\n\n- (Performance) The determination of a collision winner should take less than 0.1 second.\n\n-(Supportability) Game background and car icons should be able to be changed to other images without any consequences for the gameplay.\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287359,
      "meta": {},
      "text": "Usability: Der spieler kann jederzeit mit ESC das spiel pausieren.\n\tDas spiel fenster sollte sich belibig in der größe ändern lassen.\nReliability: Das system erkennt wenn ein spieler nicht vorgesehene aktionen betreibt (also cheated) und der spieler verliert dann sofort.\nPerformance: Jeder spieler input sollte in 25ms umgesetzt werden.\n\tDas system solllte mindestens 100 cars gleichzeitig auf dem bildschirm verarbeiten können.\nSupportability: Das spiel fenster sollte sich unterschiedlichen Bildschirm auflösungen apassen.\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1287563,
      "meta": {},
      "text": "1. usability \nThe parameters of the car are always on right side of the screen to see \nAll of the icons and press buttons are minimum 1.5*1.5 cm\n 2. reliability\nSystem shuts its work down automatically  if there’s a cyber attack intended \nVerification of each users profile via email link for the first-time registration \n 3. performance\nGame can handle 200 new players in online mode per second \n 4. supportability\nAny problem causing game service becoming unavailable is solved in less than four hours",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287810,
      "meta": {},
      "text": "Usability:\n- All error messages have to be written in plain language that explains why the problem occurred and gives the user a solution.\n- The letters should be at least 80mm high.\n\nReliability:\n- There has to be at least one backup server available, in case of the first one crashing.\n\nPerformance:\n- The system is available at least 99% of the time.\n- It should take less than 5sec for the game to load.\n\nSupportability:\n- Developers should be able to understand the system on a level that is sufficient for modifying it in under 10min.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281253,
      "meta": {},
      "text": "- Usability: \n(1) The Bumpers game should play the crash sound latetst 5 milliseconds after a collision with two involved cars has been processed.\n(2) Conformance to Guidelines: The design of the Bumpers game should be in line with the usability guidelines for the chosen respective iOS and Android operating systems (assumption: the game posses a mobile application; Tutorial ).  \n\n- Reliability:\n(3) The Bumpers game needs to be able to deal with untypical player input: Therefore, it is required that the game deals with multiple, subsequent clicks in different directions by a player and always processes the latest conducted one with a maximum delay of 1 second.\n\n- Performance: \n(4) The Bumpers game only supports that one car is actively steered by one active player.\n\n- Supportability:\n(5) Extensibility: The Bumpers game needs to be designed in a way that it is possible to extend the existing game architecture with new features (e.g. new collisions and car types) and to remove existing game features (e.g. parameters, such as varying car speeds).\n(6) Maintainability: The Bumpers game must be designed so that existing features can be exchanged within less than five minute (e.g. adapt the car collision sounds by importing a new .wav file with two clicks)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282919,
      "meta": {},
      "text": "Usability: \n-the user should be able to start the game and choose a car with just two mouse clicks. The steering of the car should follow natural intuitive(steering down -> car should go downwards on the screen)\n\nReliability:\n -There should be no games ending without a clear winner except if the player pushes the end game button \n\nPerformance: \n-There should be a short loading time after starting the game (less than 3 seconds)\n-minimal lacking when steering the car in a different direction(less than 0.5 seconds)\n\nSupportability: \n-You should be able to play the game on all major operating systems(Mac, Linux, Windows)\n\n-Maintainability: there should be the possibility to add more game levels or new cars and collision types later through an update by the developer",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284350,
      "meta": {},
      "text": "1. Usability: when playing the game (not in the menu), the speed of the car should be changeable within one click\n2. Reliability: when steering, changing speed, and colliding with a wall all at the same time the game should not interrupt regardless of the platform the game is executed on\n3. Performance: 99% of all required tasks should be processed within 0.5 seconds \n4. Supportability: it should be easy to deal with adding new car types, new collision types, and adding new wall elements\n5. Usability: when being in the menu the music should be adjustable with one click on the keyboard\n6. Reliability: every method of every class except the constructor methods as well as static methods should be private",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285669,
      "meta": {},
      "text": "In order to get a good usability the program needs to be easy to understand and easy to use. The controls of Bumpers should be very intuitive and the player should be able to start the game easily and fast. It should take him only a few clicks, in which he can choose options, to start the game.\nFor a good reliability of the program, it should be ready for everything the user does, even if it doesn't make sense in the context of the game. It should also be fully functioning for the player to have a game that makes sense. For example the car of the player must react appropriately when the player steers it into a wall. On top of that all the other cars should do what they are supposed to do, for example drive the correct speed or stick to the collision rules.\nIn order to have a good performance, the program must be able to handle many simultanious actions without crashing. For example when there are many cars in the bumpers game and there are many collisions at once, all the other cars should still drive smoothly and the game should continue normally.\nFor a good supportability, the program should be easily adaptable if the user wishes so. It should also be easily understandable for the developer, in order do change or fix something. The player should be able to adjust the options at least before every game and the code should be clear and use meaningful names for methods or variables, so developers can add new functions easily.\n\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286087,
      "meta": {},
      "text": "Usability:\n\tUser interacts with a mouse.\n\tUser should reach start and stop buttons in one click i.g. after opening the game it must be seen.\nReliability:\n\tRobustness:\n\t\tSystem can tolerate many collisions at one time.\n\t\tSystem can add and calculate new complicate collisions.\nPerformance:\n\tPerformance:\n\t\tGame calculates collisions without freezing(1).\n\tAvailability:\n\t\tGame can be downloaded and used without internet or other constraints.\nSupportability:\n\tPortability:\n\t\tGame can be played on all systems that supports java(just e.g.).\n\n(1) freezing -  when either a process or system ceases to respond to inputs",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286845,
      "meta": {},
      "text": "There are many different types of nonfunctional requirements, one way to categorize them is the so-called URPS-model.\n\nU (Usability): - One example for an usability-requirement is the learnability. In our case the bumpers game should be easy to play (/learn) for a user. Steering and driving the car shouldn't be a difficulty.\n\nR (Reliability): - The game furthermore has to be able to handle wrong user inputs. It must not crash if the user, for example, presses some keys on his keyboard or if he uses a rightklick instead of a leftklick to steer the car.\n\nP (Performance): - The Bumpers game needs to react to user inputs with the shortest possible response time.\nWhile playing the game there should not be a long delay from the user wanting to change the cars direction and the game handling the request and turning the car.\n- Furthermore you have to look at the efficiency of the program. The program should only use the computing resources to a low level. For a small bumpers-game it hast to be at least somehow energy-efficient and also should not use too much storage.\n\nS (Supportability): \n- Portability: Users should be able to play the game no matter what computer or operating system (Windows / Linux / MacOS / ...) they use. With bumpers being implemented in Java this is atleast a good way to go.\n- The game also should be able to be maintained very easily. Fixing bugs or other mistakes should work very fluently, also adding new features (for example a new type of car) should be able without too much effort.\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286957,
      "meta": {},
      "text": "Usability\n\t- The response time of the car needs to be less than 0.1s (also P, I think)\n\t- The determination of the collision winner needs to pause the game for the time being, otherwise \t\t\t    you would always lose while changing collision types.\n\t- The colour of the cars needs to be clearly distinguishable even to colourblind players.\n\nReliability\n\t- Given that the average game lasts <60 sec, the software should be able to run for at least 120 sec without crashing.\n\nPerformance\n\t- The game should not need more than 100KB to run on all kinds of devices\n\nSupportability\n\t-  Collision types are defined in one class and adding collision types is simply duplicating a file and changing one method.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287422,
      "meta": {},
      "text": "Usability: \n\t-  the rules should be explained quickly and in an easy language when opening the game for the first time\n\t- easily navigatable;\n\t\t---> i.e. top right corner has a \"?\" button with commonly asked questions/things that \n        \t       could get confusing or the top left corner has a drop-down menu with symbols for music, \t\t \t\t\t\t \n  \t\t       sound effects, settings and the user's profile\n\nReliability:\n\t- Game doesn't delete progress, if it crashes\n\nPerformance:\n\t- Game reacts to the user moving the car with the mouse in real-time/with almost no delay\n\nSupportability:\n\t- maintenance of the game should not take longer than 15min and should not be required more often than \n          once a week",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287463,
      "meta": {},
      "text": "NFR1 Usability(->Memorability): Start and Stop button are always next to each other, so the user can quickly switch between starting and stopping and can remember their locations easier.\n\nNFR2 Reliability(->Robustness): The player is only allowed to steer the car with the mouse, random typing on the keyboard should not interfere with the game.\n\nNFR3 Performance: The collisions must be evaluated and the winner must be displayed in less than a second. \n\nNFR4 Supportability(->Adaptability): The game should work on all size of screens\n\nNFR5 Supportability(->Portability): The game should work on all operating systems\n\nNFR6 Usability(->Learnability): There should be a button that displays a quick on demand tutorial on the game in the form a gif \n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280569,
      "meta": {},
      "text": "Usability:\n- NFR1 Benutzerfreundlichkeit: \n\tDer Spieler muss in der Lage sein, dass Spiel mit nur einem Mause-Klick zu starten oder zu stoppen\n- NFR2 Lernfähigkeit: \n\tDie Steuerung des Spiels muss einfach erlernbar sein, durch ein Einführungsvideo, indem alle Funktionen \n  \terklärt werden\n\nReliability:\n- NRF3 Robustheit:\n\tWenn sich der Cursor außerhalb des Spielfeldes befindet, wird er nicht als Input zur Steuerung des Autos \n\tmehr verwendet\t\n\nPerformance:\n- NRF4 Reaktionszeit des Autos: \n\tDas vom Spieler gesteuerte Auto muss in unter 10ms auf Richtungs- und Geschwindigkeitswechsel  des \t\t\t \t \n   \tSpielers reagieren\n\nSupportability:\n- NRF5 Betriebssysteme: \n\tDas Spiel muss unabhängig von Betriebssystem, unter Linux und Windows, korrekt, wie in den \n \tRequirements definiert, funktionieren\n- NRF6 Soundeffekte:\n\tDas verändern eines Soundeffekts muss für den Spieler mit zwei Klicks möglich sein ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1281614,
      "meta": {},
      "text": "1. (Usability) Players need at most 2 clicks to start the game\n2. (Usability) The concept and the controls of the game are explained to the player before starting the game\n3. (Reliability) The game has to fully function on following platforms: Linux, OS X, Windows\n4. (Reliability) The game should also fully function on devices with low (=< 2GB) RAM\n5. (Performance) The response time to a click in the game should be below 1 microsecond\n6. (Supportability) The game should implement an interface that can be used to create new cars in the future. This interface should be simple enough so new cars can be added in less than 10 minutes.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281955,
      "meta": {},
      "text": "6 x Quality Requirements for Bumpers:\n\n- Usability: Bumpers game can be designed user-friendly by not overloading the user with to much information. That means that the user should be able to get a quick access for starting the game and set everything up. Match between the system and the real world, get in the car and start driving not first of all build the car.\n\n\n- Robustness: In case of all vehicles on the board crashing into each other the system should not crash as well. Even though the collision detection concentrates on only two colliding cars, this special case should maintain the function of the system and in worse case recover from a error. \n\n\n- Performance: With a higher amount of vehicles on the board the overall performance of the game should stay the same. It should run smoothly and not lack in procession intensive situation.\n\n\n- Availability: In the best case scenario the game is sold to costumers. In which the availability is the most important factor for the developers. That is why the uptime should be as high as possible and updates should be as rare as possible to ensure a happy costumer.\n\n\n- Maintainability: In case of downtime, the system should be remotely accessed and revised easily without labour intensive work overs.\n\n\n- Portability: The ensure the highest costumer satisfaction the game could also be available as a mobile version in which every user can log in to not lose their personal score and to play the game fully remotely. \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282314,
      "meta": {},
      "text": "Quality Requirements:\nUsability Exemple 1: The Player can control its Car and change its speed by a simple movement of the mouse.\n\nUsability Exemple 2: The Player can easily start and stop the game. \n\nUsability Exemple 3: The differnet paramters of the car like speed, consumption and location should be visualized by the game. \n\nReliability (here Security): \nThe System should prevent any attack on the game system, which would allow to modify the evaluation of the winner of an collision.  \n\nPerformance:\nThe respond time of controlling the car should be minimal, so that the player has the feeling of the controlling without delay..\n\nSupportability(here Maintainability): \nThe kindof Collisions can be easily modified by the developer. \n  \n\n. \n ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282511,
      "meta": {},
      "text": "1. Usability: The player should be able to play the game using just their mouse, requiring no keyboard input.\n2. Usability: The UI should show information the player needs in order to win, but it should not include any other information.\n3. Reliability (Robustness): The game should continue to run properly if the player enters (unwanted and unwarranted) keyboard inputs or if the player clicks outside the game.\n4. Performance (Accuracy): The player's car should accurately go where the player is clicking.\n5. Performance (Response Time): The game should respond to the player's input in less than 100 milliseconds.\n6. Supportability (Maintainability): The code should be straightforward enough that a new car type can be implemented by the developer(s) in 10 minutes or less (given the developer(s) already have pictures and audio files ready).",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282939,
      "meta": {},
      "text": "Usability:\n1) Das Spiel muss mit einem Klick startbar sein. Dafür soll ein Button verwendet werden, der gut in Relation zum Spiel-Fenster eine gut sichtbare Größe und Position haben sollte, sowie mit der Aufschrift unmissverständlich auf seine Funktionalität hinweise. Dadurch soll ein einfaches Bedienen schon beim ersten Mal spielen ermöglicht werden.\n\n2) Das Spiel soll höchstens so viele Autos haben, sodass die Fläche der Hitboxen zusammen höchstens 1/4 der Gesamt-Fläche des Spiel-Fensters ausmacht. Damit soll zum einen die Spielbarkeit bzw. Übersichtlichkeit gewährleistet werden.\n\nReliability\n3) Das Fester soll während des Spielens nicht vergrößerbar oder verkleinerbar sein, um evtl. Versuchen des Spielers sich einen Vorteil zu erschleichen, entgegen zu wirken. So soll zum Beispiel das schnelle entfernen von anderen Autos durch vergößeren des Fensters vermieden werden. Auch die Chance auf Bucks sollen so minimiert werden.\n\nPerformance\n4)  Eine Obergrenze von 30 Autos soll eine handelbare Performance garantieren.\n\nSupportability\n5) Das Spiel soll dem Spieler die Möglichkeit bieten aus einer reihe an Hintergründen, Themen und Autos auszuwählen, um ein breites Spektrum an Geschmäckern sowie Altersgruppen abzudecken. Zum Beispiel Kinderfreundliche Themen ohne Panzer etc.\n\n6) Da Spiel soll über eine Statistik für Developer verfügen, über die am häufigsten auftretenden Fehler, um die Wartung schneller und einfacher zu gestalten.\n\n\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1283136,
      "meta": {},
      "text": "Usability: \n\nThe buttons are located at a memorable and easily findable location. \n\nThe player can stop the game with two clicks. \n\nReliability: \n\nThe game ignores invalid/ unsupported inputs of the player to steer the player car i.e. steering by WASD (if the only way to steer the car is via mouse clicks). \n\nPerformance: \n\nThe game accurately calculates the car's direction when the user clicks the mouse e.g. 10 times a second. \n\nSupportability: \n\nClasses can be easily modified or added for example when the developer decides to include a new collision or a new car type. \n\nFunctions of classes are well-described with comments so that developers easily get a gist of its meaning for the game and is able to make changes/ look for mistakes/ bugs! \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283152,
      "meta": {},
      "text": "Usability: \nEs braucht 2 Klicks, um anfangen zu können das Spiel zu spielen (Start Button, Bei der Autoauswahl der jeweilige Button).\n\nReliability -> Safety #1: \nRisikenreduzierung, dass das Spiel winnable ist, indem Collectables gekillt werden, falls sie den Spieler davon abhalten zu gewinnen, wenn alle Gegner tot sind.\n\nSafety #2:\n Projektile werden gekillt sobald sie über die Grenzen des Gameboards fliegen, denn sonst würden sie unendlich fliegen.\n\nPerformance:\n Das Spiel soll mindestens 30 Autos gleichzeitig darstellen können.\n\nUsability -> Maintainability # 1:\nSoundplayer kann mehrere Files gleichzeitig laden und diese mit Veränderung eines Strings wechseln.\n\nMaintainability #2: \nNeue Autos sollten einfach implementierbar sein, indem man den Namen in eine Liste schreibt.\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1280274,
      "meta": {},
      "text": "Usability:\n-Color of the background should be different from the colors of the cursor and the cars to make it easy to see for users. \n-The user should be able to understand how to play the game in 3 clicks. (1 click for starting the game, 2 clicks for steering)\n\nReliability:\n-(Robustness) The system should be able to understand at least 10 clicks done in one second. ( as an excessive input(click) should be tolerable at a level)\n\nPerformance:\n-The crash sound should be played in less than 30 milliseconds when a collision happened.\n\nSupportability:\n-(Adaptability)When the user changes the collision winner type during the game, the system should change and adapt the type immediately.\n-(Maintainability) The system should be able to be added new types of cars, collisions, background images, background music, and crash sounds.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282400,
      "meta": {},
      "text": "1. Adding the beginner's guide at the beginning of game. Meanwhile the player can choose to skip this instruction.\n\n2. The game does not crash within the first 5 minutes of play.\n\n3. At least 1000 players are supported to play the game at the same time.\n\n4. If no victory has been decided after 30 minutes, the player will automatically win.\n\n5. With the passage of time, the collisions will be more and more difficult.\n\n6. Players can use the mouse or keyboard to operate the game.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1282478,
      "meta": {},
      "text": "Usability:\n1) Users interact with the game using the left mouse button.  \n2) Users need at most two clicks to stop the game. One on the stop button and one to confirm his choice.\n\nReliability:\n1) Invalid player inputs are to be ignored to not threaten the games stability.\n\nPerformance:\n1) The games frames-per-seconds are never go below the value of 30 FPS.\n2) The player car responds to user input max. 1 second after user input. \n\nSupportability:\n1) The game runs on the most popular desktop operating systems, namely Linux, MacOS and Windows.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283851,
      "meta": {},
      "text": "1. The player/user will learn the steering of the car intuitively by clicking the left mouse button. (usability)\n2. The players' car needs to have a different look to the enemy cars in order for the user to immediately recognize his/her car at the beginning of each game. (usability)\n3. The game tolerates wrong inputs of the player like keyboard inputs or right mouse clicks and simply does not react to these wrong inputs. (reliability)\n4. The system immediately reacts to the user input with the left mouse click which has a direkt impact on the game. (performance)\n5. The collisions are evaluated correctly with different car types hitting each other (supportability)\n6. The system must not not detect collisions, even if those were one for a tiny amount of time. (reliability)",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284136,
      "meta": {},
      "text": "1. Platform independence\n2. Visualize different parameters of the car\n3. Sound effects for collisions\n4. Support different collisions\n5. Changeable determination of collision winner\n6. Ability to start and stop game",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285356,
      "meta": {},
      "text": "Usability -> \n* User can control the car and the speed of the car with steering the mouse.\n* The player can start and stop the car anytime.\n\nReliability -> Robustness: \n* The car that wins all collisions win. \n\nPerformance -> \n* When cars crashes, there has to be a sound effect simultaneously. \n\nSupportability -> Adaptability: \n* The game should support different collisions. The determination of the collision winner should be changeable during gameplay.\n* The game should be platform independent.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1286005,
      "meta": {},
      "text": "NFR1 Usability: The player should be able to start a new game within two clicks.\n\nNFR2 Performance: On a supported system, the frame rate of the game should be above 60fps in at least 95% of the play time.\n\nNFR3 Maintainability: The Cyclomatic Complexity of each method should not exceed 10.\n\nNFR4 Robustness: In case the mouse gets disconnected, the game automatically pauses, informs the user about the disconnection and as soon as the connection is restored, the player can continue with the current game.\n\nNFR5 Performance: When the game application is opened by the user on a supported system, the start screen should load within a maximum of 5 seconds. \n\nNFR6 Usability: The player should be able to change the collision type during gameplay within a maximum of 3 + n clicks (n representing the number of available collision types minus 1)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287419,
      "meta": {},
      "text": "1)\n\tThe game visualizes speed, consumption and the location of the cars\n\t-> Usability\n2)\t\n\tThe system can evaluate at least 4 user inputs per second\n\t-> Reliability\n\t\n3)\tThe response time of the game in terms of steering the car is less than 50ms\n\t-> Performance\n\n4)\tAdding new collisions and car types to the game is possible by creating new subclasses\n\t-> Supportability\n\n5) \tThe sound effects do not stutter or lag\n\t-> Performance\n\n6)\tThe game is platform independent \n\t-> Supportability",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287750,
      "meta": {},
      "text": "NFR1: Players need at most 3 clicks to start the game.\nNFR2: The system should inform the user in case of errors.\nNFR3: The colision detection system should be available in every play session.\nNFR4: The game should contain a \"Tutorial\".\nNFR5: The gameboard assets should be concistend on their desighn (i.e. theme, collor, style).\nNFR6: The player has the optionb to choose a music and mute the game.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287947,
      "meta": {},
      "text": "Usability: The game's controls should be easy to learn and to perform, for example steering with just the mouse or the commonly used arrow keys on the keyboard (not both!) would be a possible solution.\n\nReliability: The game should withstand multiple rounds, maybe even hours long (for hardcore bumper fans), without crashing, while not decreasing in performance.\n\nPerformance: The game should proccess the system tasks ( like detecting collisions, playing music, moving system cars) without any lag or delay, to provide an fluid game experience.\n\nSupportabillity: 1.Portability: \n\t\t\t\tThe game should be portable to multiple platforms, like mobile devices, desktop PC's and laptops.\n\t\t\t2.Maitainability: The developers should be able to fix given bugs in at most a week of time. This is guranteed trough a remote access on the application. \n\nConstraints: \n\n1. The game should be implemented in java, for reasons of portability.\n\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280588,
      "meta": {},
      "text": "Usability:\n1. This game must include all elements, which are needed like fast car, slow car, game board and so on.\n2. The car which controlled by the player must move correctly\n\nReliability:\n1. This game must be calculated correctly\n2. The changed direction and speed should be the same as how the player wants.\n\n\nPerformance:\n1. The player can change the direction and the speed with mouth.\n\nSupportability:\n1. This game should be available by the player side\n2. This game can be maintained when there are any problems.\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281470,
      "meta": {},
      "text": "Usability\n- The player can launch the game with just one click and can start/stop the game with only one click.\n- The delay between the mouse movement and the car moving should not be greater than 30 ms.\n- The system has to clearly show when a button (start/stop) has been pressed.\nReliability\nPerformance\n- The game should be able to detect at least three mouse clicks per second and react accordingly.\nSupportability\n- The gameboard should be resizable by the developer.\n- The game should also be fully functional on mobile devices (smartphones and tablets).\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282862,
      "meta": {},
      "text": "Bumpers:\n\n\nUsability:\n- The player can start and stop the game at any point with ease with a single click of a button\n- Players use a mouse to steer their car\n\nReliability:\n- Collision must be handled in every possible way 2 cars can \"crash\" for example from what directions they hit each other. For example, any crash where that occurs from up or down will not count as a collision while left or right they will.\n\n\nPerformance:\n- Loading the game up should take at most 2 seconds.\n- The game is a local game not needing any internet so it should be available to play 24/7 as long as the hardware it is being played on is working correctly.\n\nSupportability:\n- The game should be platform-independent so it can be used on various devices for example a Windows PC, an Xbox, and a PS5.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282900,
      "meta": {},
      "text": "Quality requirements:\n1. Usability:\n\t- the types of collisions that can be chosen should be explained in  less than eight words\n\t- the player should stop the game with one click\n\t- the player should change the speed of his car with one key press\n\n2. Reliability:\n\t- two car should have a crash if at least one pixle overlaps\n\n3. Performance\n\t- the sound effect should start directly (within 1 ms) after the crash of cars\n\n4. Supportability:\n\t- the game should support different platforms and work also on mobile phones\n\t",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283266,
      "meta": {},
      "text": "1.Usability: The player should be able to start/stop the game with one single button.\n2.Performance: The evaluation of a collision should cost less than 10 ms.\n3.Availability: The availability of the game should be 99.9%. Each update should cost less than 3 minutes to install.\n4.Maintainability: The game should have a detailed documentation. So any programmer can understand the basic structure of the code within 30 minutes and start to make some modification.\n5.Usability: Player should be able to change the collision type within 2-3 clicks.\n6.Safety: The game should be able to save the score of player when the game is accidentally closed.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284190,
      "meta": {},
      "text": "Usability:\nThere should be buttons where the player can click to start the game.\nThere should be hp bar to display the life points of the cars.\nThe player can choose the music. \n\nReliability:\nThe car should be built of robust steel so that it does not break apart after a collision.\n\nPerformance:\nBumpers can be played anytime and on any platform.\n\nSuppportability:\nThere are updates to customize and improve the game.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1284220,
      "meta": {},
      "text": "NFR1: start game - Um das Spiel zu starten muss der Spieler nicht unbedingt sein Car oder die Collision auswählen, da die Standardeinstellungen automatisch verwendet werden. (Usability)\n\nNFR2: framerate - Das Spiel muss mindestens 30 FPS unterstützen, damit es flüssig wirkt. (Performance)\n\nNFR3: monitor size - Das Fenster des Spiels soll sich an die Größe des Monitors anpassen, allerdings ohne, dass dadurch das Spielfeld absolut größer wird, d.h. es soll einfach reingezoomt werden. (Supportability)\n\nNFR4: sound volume - Da ein Hauptbestandteil von Bumpers die Soundeffekte und Musik sind, soll jederzeit in der oberen rechten Ecke ein Lautsprechersymbol sein, mit dem sich die Lautstärke des Spiels anpassen lässt. (Usability)\n\nNFR5: steering performance - Die Berechnung des Lenk-Winkels muss so effizient ablaufen, dass selbst mit 150 Klicks pro Sekunde keinerlei negative Auswirkungen zu sehen sind. (Reliability)\n\nNFR6: crossplatform - Das Spiel soll auf allen gängigen Desktop-Betriebssystemen laufen können. (Supportability)",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1284567,
      "meta": {},
      "text": "Usability: \n– Users interact with computer-mouse \n– Players should need less than 3 clicks to start the game\n– Cars' icons must be clearly visible on the screen\n\nReliability:\n– Bumpers game should support more than 150 cars and maintain their collisions with no system crash during gameplay\n\nPerfomance: \n– The Bumpers' UI loading must be less than 3 seconds\n\nSupportability: \n– The collision type should be changeable during gameplay\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284821,
      "meta": {},
      "text": "Usability: \n- User interacts with a gaming system on his computer\n- Bumpers game is self-explanatory, so the user does not need to read the manual\n\nReliability: \n- The game should be platform independent\n\nPerformance: \n- Choose an UI framework that allows realtime\nfeedback.\n-The direction of the car can be changed after 1/6 seconds after steering the car.\n\nSupportability: \n- Bumpers game can be played with Android and iOS",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285338,
      "meta": {},
      "text": "# Bumpers Nonfunctional Requirements:\n## 1. Usability: \n    - Das Spiel soll nur und muss über Maus UND Tastatur spielbar sein.\n    - Platform restraints sollen eingehalten werden.\n## 2. Reliability: \n    - Das Spiel soll keine Bugs enthalten, die das Benutzererlebnis einschränken / für den Endnutzer bemerkbar sind.\n    - Es darf zu keinem Fehler kommen, der zu einen Spiel-/Systemabsturz führt oder das Spiel nicht mehr weiter ohne Einschränkungen spielbar macht.\n## 3. Performance:\n    - Das Spiel soll eine Response time von weniger als 20ms haben, sodass der Nutzer keine Inputlags mitbekommt/erfährt.\n## 4. Supportability:\n    - Platform independent: Das Program sollte auf alle major operating systems mit Maus und Tastatureingabe funktionieren (Windows, Linux (Ubuntu, Federo, Arch, etc), MacOs) //Es macht keinen Sinn, Plattformen, die keine Maus und Tastatureingabe haben zu unterstützen, da der Sinn des Spiel es ist, die Maus und Tastatur des Herstellers zu bewerben",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1285785,
      "meta": {},
      "text": "1. User can start game in three clicks to start playing. (Usability)\n\n2. The game features many appealing sprites and sound effects and is therefore enjoyable for the user. (Usability: Satisfaction / user experience).\n\n3. The game can handle wrong inputs from the user and still keep running. (Reliability)\n\n4. After user selected his car the game shall start in less than five seconds. (Performance)\n\n5. The game is always ready to start and doesn't require regular updates. (Performance: Availability)\n\n6. The game can be run with many different car-images, sound-effect and other sprites without problem. (Supportability: Adaptability)\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286781,
      "meta": {},
      "text": "Usability: \t\t1. The user is able to interact with a mouse.\n\t\t\t\t2. Users should be able to play the game without any previous knowledge of computer games.\n\nReliability:\t\t3. The game should not crash more often than 1 out of 100 times.\n\nPerformance: \t4. The system reacts within 0.2 seconds to user actions.\n\nSupportability: \t5. It should be possible to modify the game to a version that runs online and not just locally.\n\t\t\t\t6. The game should run on macOS and Windows.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286838,
      "meta": {},
      "text": "* The user should be able to navigate the game menus with mouse OR keyboard \n* The game should tell the user if game assets (images and sound files) are missing \n* The target framerate of the game should be 30 frames per second on a system with an\n   1,2GHz CPU, 256MB RAM and no dedicated graphics processor.\n(* It should be possible to play the game on hardware which is 8 years old)\n* It should be possible to implement new cars with new properties, driving behavior and textures \n* Users can choose custom textures for thair cars\n* The frame rate of the game should sync to the optimal display refreshrate",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287283,
      "meta": {},
      "text": "- Platform-independent: the game should be runnable on different platforms \n- Non-delay Performance: the player mouse movement and the car should have a minimum delay \n- Graphic quality (useability): the difference between the user car, computer car, background (color, contrast), and collision must be recognizable \n- Collision accuracy: good hitbox, no overlap\n- Customizable: easy to add, modify collision, car type \n- Parameter visualizable: the speed, consumption and location of the car",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1287781,
      "meta": {},
      "text": "The player can start and stop the game.",
      "score": 0,
      "language": null
    },
    {
      "id": 1287799,
      "meta": {},
      "text": "Usability: \nsince bumpers is a minigame a round should not take more than five minutes.\n\nYou should not need to click more than three times after starting the game to play it.\n\nReliability:\nThe gamestate should be saved at all times, so that if the game crashes you can continue your game.\n\nPerformance:\nThe game should load in less than 1 second after starting.\n\nThe game should handle 100 cars without issues.\n\nReliability:\n\nThe interaction between the cars should not be interrupted by multiple collisions at once",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282501,
      "meta": {},
      "text": "-Usability\n    Usability: The Player should only need a mouse to play the game.\n-Reliability\n    Safety: The game should run on previously tested Operating Systems, to prevent unwanted side effects.\n-Performance\n    Performance: The game should run above 30 fps on every Intel Core from the last 5 years(or equal).\n    Response time: From the input of the player to the effect of the click it should not take more than 1ms.\n-Supportability\n    Adaptability: The game should adapt its graphics settings, so that the performance goal can be achieved.\n    Maintainability: The deployment of the game to the different download sites should not take more than 3 steps.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283937,
      "meta": {},
      "text": "Usability: The User interface  should be user friendly; which means a clear menu which contains buttons like \"Start Game\" , \"Quit\", \"Turn off Music\"...\n\nReliability: The game should be able to have up to 75 cars playing a t the same time without crashing or bugging fro computers with 1,5 GHZ processor frequency.\n\nPerformance: \n-The game must : \n. contain a responsive and a fast user inteface.\n. have a frame rendering of at least 30 FPS.\n. have an average CPU usage of less than 10% for an average laptop.\n. have a small battery consumption.\n\nSupportability: \n-The interface of the game must be scalable depending on the type of screen.\n-The game must be ccompatible on most of the operating systems (Windows, MacOS, Linux).\n\nAvailability: The game servers must be available for at least 99% of the time in a year.\n\nAccuracy : when the user is driving the car by clicking with the mouse. The inaccuracy of the movement must not exceed 10% from the original clicking spot.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284293,
      "meta": {},
      "text": "\n\nUsability: The player can play Bumpers without a user manual\n\nReliability: The system has a rate of less than 0,01% of crash (force quit)  during the game. \n\nPerformance: The game board supports up to 300 cars in a game.\n\nPerformance: The game board should support an update of 25 frames per second.\n\nSupportability: Bumpers can be played in both IOS and Andriod and can be moved from IOS to Andriod.\n\nMaintainability: game can be re-designed if new requirements are needed.\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287244,
      "meta": {},
      "text": "NFR1 Usability: The start button should be displayed in at least 400x400 pixels in a seperate pop-up\nNFR2 Usability: There are at most 5 enemy cars on game board.\nNFR3 Usability: The visualization of the parameters should occupy a maximum of 10% of the view.\nNFR4 Robustness: There should be exactly 3 user inputs, one for selecting the direction, one for slowing down and one for speeding up.\nNFR5 Performance: The Program should support up to 6 cars on the game board with an update rate of 20ms .\nNFR6 Maintanability: It should be possible to add a new car Class and implement it into the system in a maximum of 15 minutes.  \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287655,
      "meta": {},
      "text": "we can start considering nonfunctional requirements in the field of usability,\nfirst of all the user interface of the game should be relatively brief, starting and stopping the game shouldn't take more than 2 interactions with the player. \nAlso, we can say the pop-ups should be easy to deal with, if the player loses the game and s/he is eager to try another round the \"game over\" notification should be easy to get rid of via one click. \nThen in terms of reliability, the game should tolerate wrong inputs such as a double click (or a left click) by the player, considering all kinds of clicks as one can be a solution. Or for security reasons game shouldn't be able to reach the camera or microphone without permission. \nAnd in terms of performance, the possibility of players making several moves in a short time period should be considered, so that any input doesn't go without an effect. \n In terms of supportability, the implementation should be open to adding new features such as new map options, and also updates should be easy to perform depending on the feedback from the users.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287739,
      "meta": {},
      "text": "U - Usability\nThe system/ GUI of Bumpers shall be easily and completely intuitively learned because of it's simple game concept of bumping into each other (Lernability), so users shall understand how the system operates very fast (Efficiency).\n\nR - Reliability\nIt's a solid system because of it's basic game structure, with minimal buttons that can be klicked/ operations that can be done (only steering and changing the speed), so it shall be really robust (Robustness). \n\nP - Performance\nThere shall be no delays in response time, as it isn't connected to something bigger and works independently from other players, so users don't interfere with each other (Response time).\nThe system also shall be really portable, because you don't need any hardware/ external things, only the file of the game (Portability). \n \nS - Supportbility\nBecause of it's basic game structure with few classes/ interfaces/ etc. and it is only in one package (so not that much code in general) it shall be easy to maintain, fix bugs and share it with other developers (Maintainability).\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281579,
      "meta": {},
      "text": "NFR 1 Usability: When starting the game the system automatically offers you a type of car and collision and a size of speed based on your previous choices in this game.\nNFR 2 Reliability / Robustness: When the player enters a size of speed that is not offered for his/her choice of car, the game gives out a message saying that the player has to choose a size in a certain range.\nNFR 3 Performance: The player should be able to start the game, select the car and collision type and the size of speed in less than 3 seconds.\nNFR 4 Performance: The game can support at maximum two players simultaneously who can compete with each other. \nNFR 5 Supportability / Adaptability: The game is able to run on all kinds of browsers.\nNFR 6 Supportability  / Maintainability: The system offers an update every other month which runs in less than 2 minutes and fixes bugs or includes new categories and possibilities to play the game.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282903,
      "meta": {},
      "text": "Usability: \n1. The player is able to steer the car all across the game board without lifting up his mouse or leaving a 30cm times 30cm mousepad.\n\nReliability: \n2. It is not possible that any combination of user input leads to a uncatched error\n\nPerformance: \n3. The game is playable on a Nokia 9w Model 342U mobile phone with at least 30 frames per second\t\t\t4. On a Samsung 24324w, the game runs on at least 30fps, even when there are 20 moving cars on the gameboard.\n\nSupportability: \n5. The game is be playable on all Android, IOS, and Windows Versions that have been released after the Year 2015\n6. Developers should be able to add more Car types after the game has been published, without changing the initial Class structure.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283226,
      "meta": {},
      "text": "First Requirement:\nEin Benutzer soll sich, um das Spiel bedienen zu können, höchstens 4 Tasten und deren Belegung merken müssen. Somit soll das User Interface einfach zu erlernen sein. Ein durchschnittlicher Mensch (Passant in Fußgängerzone) sollte ungefähr 10 min zum erlernen dieser Tastaturbelegung brauchen (überprüfbar durch Abschluss eines Anfängerlevels).\n\nSecond Requirement:\nEine Person die das Spiel vor einem Monat gespielt hat und seitdem nichtmehr soll sich immer noch an die Bedienung erinnern können. Somit sollten einprägsame Tasten (Leertaste, enter, Mausklicks) für Steuerung gewählt werden.\n\nThird Requirement:\nDas System sollte mit bis zu 100 Eingaben pro Sekunde ( 1 Eingabe ist ein tastendruck)  umgehen können und nicht zum Absturz des PCs führen. (Anzeichen von Robustheit gegen zu viel user input)\n\nFourth Requirement:\nDas System sollte als Anzeichen guter Performanz mindestens 30 Computergesteuerte Autos gleichzeitig simulieren können. Zudem sollte das System während des Spiels die fahrgeschwindigkeiten ohne Verbrauch von mehr als 1% der Cpu-Leistung an die aktuelle Spielsituation anpassen.\n\nFifth Requirement:\nDie Codebase des Spiels soll so aufgebaut sein, dass ein Entwickler, welcher sich vorher nicht mit diesem Projekt beschäftigt hat, innerhalb von 1h Einarbeitungszeit ein neues Spielelement (z.b: neue Autoart) hinzufügen kann.\n\nSixth Requirement:\nDas System soll die Berechnungen welche für die Autosteuerung nötig ist dem aktuellen Akkuladestand anpassen, sodass wenn der Akku unter 15% Prozent ist und nicht aufgeladen wird, nur noch einfache Zufalls-Positionen angesteuert werden und die Richtung für jedes Auto nur noch alle 4 Sekunden gewechselt wird.\n\n\n\n\n\n\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1283565,
      "meta": {},
      "text": "Usability\n1. It should take the user no longer than 5 seconds to understand the interface of the game\n(Satisfaction)2. The background music should be rated on a scale from 1 - 5 stars by at least 4 out of 5 players as a 4 star background music choice.\nReliability:\n3. The speed of the car should be not faster then a 8, otherwise you are not allowed to drive.\nPerformance:\n4.The game should at least support 1 player and at least 5 different cars controlled by the game\n5. The game should display different parameters of the car, at least 3 different ones. \nSupportability\n6.The game should be platform independent .",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283804,
      "meta": {},
      "text": "Usability: \n- The steering of the car should be self explaining\n- The user interface should be well designed \nReliability: \n- There should be no user inputs, except the mouse, so that there is no wrong input.\nPerformance:\n- The Game should have at least 60 frames per second\n- The game should only be for one user\nSupportability:\n- A new Car can be created within 10 minutes",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284010,
      "meta": {},
      "text": "Usability: \nBased on 1 of Nielsens 10 Heuristics it is important for the System Status to be visible. This could for \t\t\texample mean the following requirement. \n1. Stop Button is faded out and un clickable when Game hasn't started. \n2. Start Button is faded out and un clickable when Game has started. \nThis informs the user of whether the game has started or not.  \n\nReliability: \nIt is important for the application to not crash when the user acts in non-predictable ways. For example when he triggers an edge-case. This is difficult to prevent as edge cases often are not foreseeable. However one can limit potential edge-cases by increasing the tests run. An example of this could be the following requirement: \n3. In 100 played games application crashes less than twice. \n\nPerformance: \nTo make the game enjoyable, the system needs to be performant. A requirement would be: \n4. The game can run for at least 20 minutes, without lagging.  \n\nSupportability:\nThe adaptability of a system is very important for it to optimize user experience. Requirements for this would be: \n5. The developer can change the difficulty of the game by for example adding additional cars or increasing hostile cars speed by solely changing one line of code if game turns out to be too easy. \n6. The system changes its determination of the collision winner based on the input of the user. (Which type of collision should determine the winner)  \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284629,
      "meta": {},
      "text": "The player must be able to start a game by pressing a button labeled \"Start Game\".\nThe game should not need more than 100MB of RAM space.\nThe game should never drop below 60 frames per second.\nThe code of the game should be designed in a way that allows new car types to be added.\nThe game should not crash under any circumstance.\nThe game should not take more than 3 seconds to boot up.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284703,
      "meta": {},
      "text": "1. A collision should be detected within 0.05 seconds.(Performance)\n2. The game can run both on windows operating system and linux system. (Supportability)\n3. The size of game board should be at least 90% of the size of entire game window. (Usability)\n4. The cars should be kept inside the gameboard to avoid errors.(Reliability)\n5. The game should run continuously for 5 hours without any bug.(Availability)\n6. The system should evaluate winner of every collision correctly(with 100% accuracy). (Performance)",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285025,
      "meta": {},
      "text": "1. Usability: The Cars should be displayed at a width and height of at least 1 cm.\n\n2. Reliability: The game should redirect the players car on every click, without missing any inputs.\n\n3. Performance: The game should run at at least 30 frames per second.\n\n4. Performance: The game should redirect the players car within at most 2 frames after the mouse click.\n\n5. Supportability: The game should run on any desptop machine.\n\n6. Supportability: It should be possible to expand the game with new cars or collisions.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286356,
      "meta": {},
      "text": "Usability:\nthe player can start the game in at most two clicks.\nthe player can stop the game with only one click.\n\nReliability:\nRobustness: \nthe game should neglect any wrong input such as using the keyboard for steering.\nSecurity:\nthe game must prevent players from hacking the system and changing game rules or game data.\n\nPerformance:\n97% of the players should be able to start the game in 3 seconds at most.\n \nSupportability:\nThe game should be able to run in windows and macOS and Linux.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287233,
      "meta": {},
      "text": "NFR1 Usability (learnability): When the game is started the first time, a text box explaining step by step, how to play the game (from starting the game, how to steer and how to win)  should appear (less than 100 words).\n\nNFR2 Usability (visibility): While playing the game, there needs to be a cluster of instruments displaying the player the current speed of his car, the consumption and even how much crashes he or she has won (the fonts' height of those parameters should be more than 3% of the players' screens height).\n\nNFR3 Reliability (security): The game requires a warning screen before every start with a text remembering the player to follow traffic rules in real life to prevent accidents.\n\nNFR4 Performance (response time): The response time for steering (changing direction) the cars should be less than 0.3 seconds.\n\nNFR5 Performance (availability): The game should be a web application, available with every web browser entering a webpage. \n\nNFR6 Supportability (maintainability):  There should be the option for the developer, adding new cars the players can choose and new collision types (if necessary).",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287822,
      "meta": {},
      "text": "Bumpers Quality Requirements:\n- The music that plays in the background should not always be the same song, but instead a random title chosen from a library of songs which are tailored to the game. This is a usability requirement which will ameliorate the enjoyment for the player\n- Determining the winner of a collision shall be carried out by a replaceable and modular algorithm. This requirement falls into the categories of supportability and usability.\nIt fulfills supportability because implementing a modular system for Collision Resolution will make it easy to add more complex collision types in the future and seamlessly integrating them with the existing ones.\nIt also fulfills usability for the player, as more variety in the collision behaviour will prevent the game from getting boring too fast.\n- The game should yield good performance of at least 60fps on all targeted platforms with standard hardware (Core i5 / integrated graphics / 8gb RAM). This is a performance requirement which will enforce good code quality and discourage the use of overly complex graphics or compute-heavy algorithms \n- The game should always behave predictably for the users, once the game settings are chosen by the user, they may not change until the user explicitly changes them. The settings should  be persisted upon restart of the game. This is a reliability requirement which ensures a sane and predictable playing and testing environment\n- A countdown should be displayed before the game starts, so the player can prepare for the start (usability requirement)\n- Crashes and bugs should not occur in release versions of the game, quality control via rigorous testing and alpha versions should be carried out (reliability requirement)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281221,
      "meta": {},
      "text": "1. The cars speed and direction should be changeable within 0.05 seconds after the games start. -> Performance \n2. The game must support all foreign markets, and therefore should support the imperial as well as metric system. -> Adaptability\n3. The game should be re-designable to a any other server architecture. -> Maintainability\n4. The game Bumpers can be moved from iOS to Android and vice versa. -> Portability\n5. 99% of the executions of the game, it will work properly and won't crash. -> Reliability\n6.  To play the game, no explanation or introduction to the game is necessary. -> Usability",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281358,
      "meta": {},
      "text": "Usability: \nThe player should be able to start a game with at most 4 interactions.\nThe UI should have at most 5 pressable buttons at a time.\n\nReliability:\nThe game should not have a connection to the internet to prevent attacks through an unsecure connection.\n\nPerformance:\nThe game should run at a steady 25fps on old/potato systems.\n\nSupportability:\nThe source code should be documented and commented.\nThe game should be platform independent.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281551,
      "meta": {},
      "text": "Usability:\n* Der Spieler soll waehlen koennen ob er sein Fahrzeug lieber mit der Maus oder mit Pfeiltasten steuert.\n* Im User Interface sollte waehrend des Spiels eine Statusanzeige mit den Attributen des Fahrzeugs angezeigt werden, das der Spieler gerade benutzt.\n\nReliability:\n* Das Spiel soll keine Sicherheitsluecken aufweisen, die Spielern einen unfairen Vorteil verschaffen.\n\nPerformance:\n* Das Spiel darf nicht laenger als eine Sekunde zum starten brauchen.\n* Das Spiel soll auch mit einem grossen Spielfeld und vielen Fahrzeugen mit einer Framerate von mindestens 30fps laufen.\n\nSupportability:\n* Es soll einfach sein neue Fahrzeugtypen zu implementieren.\n",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1283097,
      "meta": {},
      "text": "NFR1 Usability:  The system(game) must be easy and fast for the player to learn and use. The player must also be enjoyable to play the game.\n\nNFR2 Reliability(Robustness): The system can contain minimal 50 cars at the same time.\n\nNFR3 Performance(Response time):The system can response quickly（less than 1 second) to the changeable collision and the player's control over his/her car.\n\nNFR4 Performance(Accuracy): The system can move cars to accurate places on time.\n\nNFR5 Supportability(Adaptability): The system can change itself on time when the selected car changes.\n\nNFR6 Supportability(Maintainability): The system can run well in different environments for example Androids, IOS, Windows, macOS, Linux......",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284529,
      "meta": {},
      "text": "NFR1 Usability: While playing, the user should be able to use 4 keys at most, and/or the mouse. The keys used should be next to each other to make the experience more intuitive (similar to WASD/Arrow keys). Starting the game shouldn't take more than 4 clicks.\n\nNFR2 Reliability: The game should be immune to program variable changes caused by programs such as Cheat Engine. No more than 100 cars should be rendered at the same time in order to prevent possible game, and/or system crashes.\n\nNFR3 Performance: The game should be able to support at least 30 cars with a minimum of 60 FPS on a mid-range computer.\n\nNFR4 Adaptability: The game should behave as expected on any platform, i.e. be platform-independent. If a new platform appears on the market, the game should be available on it in less than a month.\n\nNFR5 Maintainability: New car types and collision types should be able to be added in less than a week. \n\nNFR6 Legal: The game, its music and images shouldn't infringe any copyright rights.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284858,
      "meta": {},
      "text": "Usability\n1- The user should be able to change the direction of the car with just one click in the direction desired.\n2- The different CPUs should be visually distiguishable by the user (fast or slow car).\n3- The game should be ready to start within 3 seconds of pressing start, however the game should only start after the user makes their first click.\n\nSupportability\n4- The user should be able to upload their own skins, with the game supporting .png and jpg. files\n\nPerformance\n5- The game should be able to support a game between the main player and up to 10 CPUs.\n\nReliability\n6- In case of a system crash the system should refresh within 5 seconds to allow a new game to start.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284880,
      "meta": {},
      "text": "Usability: The player should be able to boot the game and start playing with a maximum of 2 clicks.\n\nPerformance: The system should be able to handle up to 2 collision system changes by the player per second of gameplay.\n\nPerformance: The game should not take longer than 1 second to get up and running after the user hit the \"start game\" button.\n\nPortability: The game should be playable on Windows, Linux and MacOS. \n\nSecurity: One should not be able to cheat in the game with \"Cheat Engine\" without the need of bypassing integrity Checks manually. \n\nAdaptability: The games graphics should remain playable on a low end PC and should scale up with a cap on 4k graphics on a high end PC.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286965,
      "meta": {},
      "text": "1. The game should be platform independent\n2. The game should visualize different parameters of the car (eg speed, consumption or  location)\n3. Player should be able to set the car speed with a single click\n4. The game should take at most two seconds to start\n5. Stopping the game should ask for confirmation\n6.  Player should be able to steer the car via mouseclick",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1287160,
      "meta": {},
      "text": "1) The system shows in the upper right corner of the display how many cars have to be destroyed in order to win the game(Usability/ Visibility of the system status).\n2) There is a small tutorial when the first ever, round of the game is palyed by the player(Usability /Help and Documentation).\n3) Every possible constellation of possible collisions are covered by code, so that there is always only one winner.(Reliability/ Safety).\n4)  A collision is computed in a small amount of time, one millisecond(Performance).\n5) The player can see its speed when clicking the \"s\" button(Usability /User Control and freedom).\n6) It is easy for the developer to change how many cars are able to be on one Gameboard(Supportability/ Adaptability).",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287681,
      "meta": {},
      "text": "Usability:\n1. The starting of the game should take at most 4 clicks, which includes clicking the \"start\" button, chosing the car type, chosing the collision type and clicking the\"Let's start\" button. This should apply, after the user has created an account.\n2. The determination of the collision winner should be changeable during the gameplay within 5 clicks in the system, the \"pause\" button, the \"change collision\"  button, selecting the desired collision typ, the \"back\" button and the \"resume\" button.\nReliability:\n3. System may require users to create accounts to access applications that store information like high scores. Once a month, the player has to login again.\nPerformance:\n4. The system should be at least 99% available.\n5. Every interaction with the system should take at most 0.7 seconds.\nSupportability:\n6. The system should also work without internet connection.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287703,
      "meta": {},
      "text": "1) (usability)\nThe user needs at most 2 clicks to change the collision or speed setting\n\n2) (reliability)\nIf a car crashes into the player while the player is already in a collision, a new collision is started and evaluated without any errors\n\n3) (performance)\nThe game can handle up to 15 non-player cars at a time without visibly lagging or crashing\n\n4) (supportability)\nA new collision type can be added to the collision type selection within 2 minutes\n\n5) (usability)\nAll car icons are at least 20 pixels wide and 20 pixels tall\n\n6) (performance)\nIt takes no more than 100ms for the player's car to change direction after the player has clicked somewhere ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287747,
      "meta": {},
      "text": "6 quality requirements:\n1. functionality: interact with a player;\n2. usability: the player can easily steer the direction of the car with the mouse and change its speed in 1 click.\n3. reliability: preventing incidents such as two winners in the same collision.\n4. performance: a game works smoothly without any pauses; all interactions are handled in less than 1 second\n5. supportability: if there are new game rules presented, the system can be adapted with the ease\n6. pseudo requirements (implementation): the game should be developed in Java.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287860,
      "meta": {},
      "text": "Non-functional requirements: \nUsability\n- Players start and stop the game\n- In each collision, there is a winning car\n\nReliability\n- The player controls only one car\n- The game is platform-independent\n\nPerformance\n- Different parameters of the car should be visualized\n\nSupportability\n- The game should support different collisions \n\n\n\n\n\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281566,
      "meta": {},
      "text": "Da es in Bumpers darum geht ein Auto so zu steuer, dass es mit anderen crashed und dabei selbst Collisionen auszuweichen, ist es für die Performance notwendig, dass die Response Time, mit der User Inputs und die Aktuelle Darstellung der Scene verarbeitet werden, möglichst gering ist. Höchstens 1/60s, um mit der Standardmonitor Aktualisierungsrate Schritt zu halten.\nDamit Bumpers auf mehreren Platformen zuverlässig läuft ist es für die Supportability erforderlich, dass andere Platformen korrekt erkannt und bestimmte Einstellungen wie die UI Größe Bei bedarf angepasst werden.\nFür die Reliabilty ist es wichtig, dass das System versehentliche Eingaben abfangen kann. Bedeutet, das System sollte den Nutzer bei klick auf Beenden oder Schließen der Anwendung immer zuerst fragen, ob das wirklich die gewollte Aktion ist, um zu verhindern, dass wegen einem deplaziertem Mausklick sämtlicher Fortschritt verloren geht.\nUm das Erlebins für den Nutzer so angenehm wie möglich zu gestalten ist es für die Usability angebracht, dass die Visualisierung der Informationen, in für den durschnittlichen Endnutzer typischen Werten angegeben werden: Die Geschwindigkeit wird in km/h angegeben und nicht in beispielsweise AE/s.\nZudem sollen Endzustände des Spiels immer klar dargestellt werden. Der Nutzer wird durch verständliche Texte wie \"You Won\" oder \"Game Over\" darüber informiert, wenn er/sie/es gewonnen oder verloren hat.\nAuch wichtig ist, dass der Nutzer stets die Freiheit hat das Game zu starten, pausieren oder zu beenden wannimmer den Nutzer danach verlangt und nicht nur zu bestimmten Mondzyklen.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1282150,
      "meta": {},
      "text": "1. The game should be platform independent (Usability)\n2. The game should be available 99.999% of the time (Performance)\n3. The determinition of the collioson winner should be changable during the gameplay (Supportability)\n4. The player needs only 2 clicks to steer the car and change his speed (Reliability)\n5. The player needs only 1 click to turn the music on and of (Reliability)\n6. Parameters of the game should be displayable and chanagable while the game runs (Supportability)",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1283158,
      "meta": {},
      "text": "NFR1: The cars should be displayed considering at least 75 pixels in width and 40 pixels in height in order to make it easier for older players to play.\nNFR2: To improve learnability, when the user loses the game, the message must include a button to directly \"Restart\" the game.  \nNFR3: The game should react or work only if the player clicks on the corresponding buttons, if they click outside the expected buttons the game should maintain its function.\nNFR4: The response time of the MouseSteering functionality should take at most 0.1 seconds.\nNFR5: The system must consider functions to change/update the cars image, sounds and background. It must be easy to modify.\nNFR6: The game should adapt to the player's device. If they are using mobilephone the display should has a vertical orientation and if they are using a PC it should be horizontal.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284191,
      "meta": {},
      "text": "1. Usability: The game should be playable by Mouse only.\n2. Usablilty: The collsison type sould be changeable within 3 clicks during gameplay.\n3. Reliability: The playercar should respond up to 5 direction changes within a second.\n4. Performance: The game should run with at least 30fps while supporting up to 10 cars on every available console.\n5. Performance: The game should be available on PC, PS4, PS5, XBOX1, XBOX and every mobile with at least andorid 8  or IOS 14.\n6. Supportability: The game should support new IOS and android versions in less than one week. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284207,
      "meta": {},
      "text": "1. Das Spiel sollte auf einem Computer mit der CPU i5-4460 mit integrierter Grafikeinheit unter Windows im Durchschnitt mindestens mit 24 FPS laufen. (Performance)\n2. Das Spiel sollte auch ohne Internetverbindung funktionieren. (Reliability - Robustness)\n3. Das Spiel sollte platform unabhängig sein (d.h. es sollte auf Windows, Linux und OSX laufen). (Supportability - Portability)\n4. Das Spiel sollte in Zukunft weitere Kollisionstypen unterstützen können. (Supportability - Adaptability)\n5. Das Spiel sollte mit maximal 2 Klicks gestartet bzw. beendet werden können. (Usability - Efficiency)\n6. Spieler sollten nicht auf die internen Spieldateien zugreifen können, um die Funktionsweise des Spiels zu manipulieren. (Reliability - Security)",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1284287,
      "meta": {},
      "text": "For usability the game should only require mouse clicks in order to play the game, so it is very simple and clear when it comes to game rules and controls. The visual aspect also helps (i.e. the showcase of different statistics) as long as it is represented in a comprehensive way. Players can also adapt to the different collision types (when changed) that are being supported in game.\n\nAnother requirement for the supportability is the platform independent aspect of the game, so people using different platforms should be able to enjoy the game as any other player would. \n\nConsidering that the game structure is very simple, robustness and security shouldn't be a problem because if the player only plays against AI cars you wouldn't have to worry about hackers ruining a score or similar things. Otherwise, if it does support multiplayer, an anti-cheat software would be recommended as to prevent people from cheating. And considering how simple the input is there isn't much that could go wrong (famous last words?)\n\nPerformance wise the game processes the movement of each car at any time, but if there is a limit as to how many players are in one single game those transactions should be processed pretty fast. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285523,
      "meta": {},
      "text": "- The user Interface should not have more than 7 buttons and each button should be labeled, in order to avoid a tutorial/long introduction to the game. This way the user can learn the functionality of the game easily.\n- The user is not able to enter a negative speed for his car and the car can't drive out of the playing field.\n- The \"Stop\"-Button, which is used to stop the game, should reset the game in the way, that all potential errors are reset as well. If an error occurs, the user only needs to \"Stop\" and \"Start\" the game and the error is gone.\n- There can be a maximum of 200 active cars within the playing field and not more than 50 Collisions at the same moment(1 ms) to reduce the risk of overloading / crashing the game.\n- The game's visuals and program logic shouldn't require more than an  Intel i3-530 or an equivalent regarding processing speed. So it is possible to play the game on especially older Pc's / Laptops.\n- The game should be portable and therefore run on every OS / be available for every OS, again to increase the target group of the game. That means Windows, Mac, and Linux Ubuntu and Debian.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285743,
      "meta": {},
      "text": "NFR1 Usability: The game should include a tutorial at the beginning. The tutorial should last not longer than 10 minutes.\nNFR2 Performance: The game should work 30 fps.\nNFR3 Security: The player should have a password which must be between 8 and 15 characters and must contain at least one number digit. \nNFR4 Supportability: The game should support the following operating systems: Windows, Linux, Mac OS. \nNRF5 Response time: The game should have a response time of 5ms from activating a start button.\nNRF6 Robustness: When the player clicks outside the game window, the game should pause within 1 sec.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286504,
      "meta": {},
      "text": "Performance: (checked)\n1) After the player has pressed the startbutton, the main screen with the moving cars appears within 500 milliseconds.\n2) After a collision has taken place, the belonging sound effect must be played within 100 milliseconds.\n\n\n\nUsability:\n3) The settings that determine a collisions winner should be visualised on one single screen page for the user to change them. It must not be necessary for the user to navigate threw different pages.\n4) The direction input from the user must be possible within one click on a laptops trackpad or external mouse.\n\nMaintainability: (checked)\n\n5) The DSGVO-acceptance check which is shown first after startup of the program can be adjusted by a developer by only changing one of the resources files.\n\nRealibility: (checked)\n\n6)No keyboard inputs from the user during the gameplay apart from a pressed ESC-button should affect the game. It must continue running as if no button was pressed.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286765,
      "meta": {},
      "text": "Der Spieler soll die Auswahl der Kollision und gegebenenfalls des Autos durch Keybinds abkürzen können, um so erfahrenen Nutzern einen schnelleren Spielstart zu ermöglichen(Usability: Efficiency).Des Weiteren soll die Bedienungsart des Spiels geändert werden können, also beispielsweise von Keyboard zu Controller (Usability: Flexibility/Freedom us use).Der Spieler soll mit höchstens 4 Klicks im Spiel sein(Usability: Efficiency). Diese sind 1.Spiel starten 2. Gegebenfalls Collisionen ändern 3. Auto wählen. 4. Auswahl confirmen. Während des Spiels sollen alle nicht belegten Tasten deaktiviert werden(Reliability: Robustness). Eingabeänderungen sollen maximal eine Latenz von 100ms haben(Performance: Response Time). Hinzufügen/Ändern von Kollisionen soll innerhalb einer Klasse passieren(Supportability: Maintainability).",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1287039,
      "meta": {},
      "text": "Requirement 1 (Usability)\nAll actions can be made within 3 clicks at most (starting a new game, changing the car, etc.).\nThe font size is at least 10pt to make the text easily readable.\n\nRequirement 2 (Reliability)\nUnder no circumstances should the game crash or the car get stuck.\n\nRequirement 3 (Performance)\nThe game should be able to handle 60 Frames per seconds at ease, on an average computer (The Rechnerhalle Computers can be used as reference).\nThe boot time to menu should be 3 seconds at most, there should be no loading screens longer than 5 seconds in the game.\n\nRequirement 4 (Adaptability)\nSimple graphics and design changes should be able to be made within a day. Configuration changes for balancing purposes, such as changing the speed of cars, should be able to be done in an hour.\n\nRequirement 5 (Maintainability)\nNew features should be able to be implemented within 2 weeks, smaller additions in less than a week. If a bug report occurs, the bug should be able to be fixed within a day.\n\nRequirement 6 (Portability)\nThe game should be able to be ported to a new platforms (Smartphones, Web, VR, etc.) within two months. When multiple platforms exist, the content should be the same on every platform and updates should be released simultaneously.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287290,
      "meta": {},
      "text": "Usability\n1. In the top right corner needs to be at all times a help button that when pressed pauses the game and shows a text which explains how the user can play the game (use mouse to steer, change speed with scroller of mouse)\n2. The visualization of parameters should be consistent on the right bottom side and display units in scales (showing min and max) for ease of reading by the user\n\nReliability\n3.. The software needs to be able to handle up to 30 mouse-clicks per second.\n4. The game tolerates any platforms without any short-comings on its performance and usability.\nPerformance\n5. The time between car crash and sound effect should be less then 500 milliseconds.\n\nSupportability\n6. The code needs to be documented such that a developer understands every line of code within 2 minutes.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287930,
      "meta": {},
      "text": "1. Players must not have more than 5 different options to choose from at the same time when selecting a collision \ttype or a car type.\n2. There are at most 15 cars in the game at the same time\n3. The game doesn't crash, when the player clicks off the gameboard.\n4. The game checks for collisions at least 40 times a second.\n5. The game's user interface updates at least 40 times a second.\n6. The user interfaces scales with the size of the window the game is played in. If the user enlarges the window, the user interface and all icons enlarge proportionally as well.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280899,
      "meta": {},
      "text": "Nonfunctional requirements:\nThe game is usable in a measurable way: the player has to click on the game board so he can choose the new direction or that that a start button is visible before starting the game. It’s very easy to learn and efficient. therefore it leads to a high memorability and high user satisfaction. \nMoreover the game is reliable, because its robust to user errors for example if the player pushes something else on the keyboard. Its also safe considering the fact that a car can crash two others at the same time and security works as well.\nFurthermore Performance is also included in the quality requirements -> Every player can drive on full speed at the same time and if two players play at the same time the game shouldn't have any downtime. \nSupportability also plays an important role. If a crash happens its possible to create an explosion as a specialCollison where Adaptability plays its part. Also Maintainability works, because the specialcolission can quickly be changed via the code. ",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281337,
      "meta": {},
      "text": "NFR1: Usability: The cars should be at least 1,5 cm tall and 2 cm wide and have bright colours to be visible and distinguishable from one another. All the displayed texts should also be at least 1 cm tall.\n\nNFR2: Reliability: The game should correctly ignore wrong inputs from the player; these should not interfere with the gameplay.\n\nNFR3: Performance: The collision evaluation between two cars should happen in less than a second.\n\nNFR4: Supportability: The game should be platform-independent.\n\nNFR5: Usability: The player only needs to learn two commands to drive his car.\n\nNFR6: Performance: The game's sound effects and background music should be in sync with the game.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281892,
      "meta": {},
      "text": "Usability:\n\t\"Dem Benutzer muss vordem spielen beigebracht werden, wie die Steuerung des Autos ist, sowie die Regeln \n\tdes Spiels.\" \n\nReliability:\n\t\"Das Spiel soll alle Eingaben, welche nicht von dem Links klick der Maus kommen (Steurn des Autos/Starten \n\tStoppen des Spiels) ignorieren, sodass kein Absturtz oder unerwartetes Verhalten verursacht wird.\"\n\nPerformance:\n\t\"Das Spiel sollte (solange es die Hardware erlaubt) mit 60fps spielbar sein.\"\n\t\"Die Musik und Bilder sollen schon vorgeladen sein, sodass wenn der Spieler das Interface sieht keine \n\tVerzögerungen beim starten entstehen.\"\nSupportability:\n\t\"Das Spiel muss auf Android, IOS und Windows Geräten spielbar sein.\"\n\n\t\"Das Spiel soll beim verkleinern und vergrößern des Fensters die Autos, sowie die geschwindigkeit und \n\tKnöpfe im Spiel so Skalieren, dass das Verhältnis der Werte gleich bleibt.\"\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1282030,
      "meta": {},
      "text": "1. The game can handle up to 20 different cars moving at the same time\n2. There are 2 versions of the game, one for windows, one for linux\n3. The game collition has to be tested for all edge cases aswell as 50 random test cases\n4. The game can be started with 1 click\n5. The game runs on 30fps\n6. The game's size is at max 50 mb ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282337,
      "meta": {},
      "text": "Usability\n1. The user should be able to understand the rules of the game without having to read a manual. The hints during the setup of the game should be enough.\n2. The user doesn't need to use a keyboard to play the game.\nReliability\n3. The user is able to continue to play the game if he loses internet connection.\nPerformance\n4. The game doesn't need more than 1gb of RAM so it can be run on older systems.\n5. The application should start in less than 0.5 seconds.\nSupportability\n6. It should be possible for a programmer to add a new type of car in less than 4 hours.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282883,
      "meta": {},
      "text": "1. The programm shuld run on IOS, Linux and Windows.\n2. The time delay between the start of the game and the start of the music as well as the end of the game and the end of the music should be not more than two seconds.\n3. Since the cars of the bumper game should move fluently, there position should be updated 30 times per seconds to create a moving image.\n4. The player should be able to alter the direction of the car with a single mouseclick.\n5. The system asks the user whether he wants to terminate the game before closing, if he clicks on the exit button.\n6. The different parameters of the car, such as speed, etc. should be diplayed on the homescreen.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283094,
      "meta": {},
      "text": "Usability:  \n- The game can be stopped or continued by the click of a mouse\n- Different parameters of the car should be visualized\n\nReliability:\n- Pleyer can not control any other car aside from his own \n- The cars should not randomly stop unless they crash \n\nPerformance: \n- The game should take no longer than 5 seconds to start \n\nSupportability:\n- The game should be platform independent\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284016,
      "meta": {},
      "text": "*Usability: \n\t-Efficiency: a player need to do 2 steps to start the game (choose the car type and choose the total number \t\tof cars)\n*Reliability:\n\t-Robustness: any click on the keyword will be ignored during the game.\n\t-Security: there will be no ads during the game to prevent the user of any type of viruses.\n*Performance: \n\t-Response time: the game just starts after 1s of the click of the player\n\t-Availability: the game may be down for at most 2mn an hour. The availability is 99,96%\n*Supportability:\n\t-Maintainability: the developer can let  car steering be with the keyboard if it's impossible to do it with the mouse ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284659,
      "meta": {},
      "text": "Usability:\nDie Autos sollten sich durch Farbe, Form und Symbolen unterscheiden, damit auch während dem Spiel eindeutig erkennbar ist, um welsches Auto es sich gerade handelt. Auch der Hintergrund sollte dabei einen Kontrast bilden, damit die Auto erkennbar sind.\n\nDurch das drücken der esc-Taste ist, das gesamte Spiel über, ein Pause-Menü aufrufbar, wodurch der Spieler das Spiel anhalten und später weiterspielen kann bzw. dadurch das Level/Spiel beenden kann. Zusätzlich wird das Menü auch mit drei Punkten in der linken oberen Ecke angezeigt.\n\nOben in der Mitte wird vor beginn des Spieles (bevor die Autos sich bewegen) ein kleines Auto mit einem Ausrufezeichen in einem Kreis angezeigt. Beim Klicken auf dieses Symbol werden die Regeln und Funktionen jedes Autos aufgelistet, wodurch der Spieler weiß, wie er/sie mit den Autos kollidieren müssen, um zu gewinnen.\n\nReliability:\nEs dürfen nur so viele Autos auf dem Spielfeld generiert sein, sodass jeweils mindestens eine Autolänge Abstand zwischen je zwei Autos ist, wenn diese gleichmäßig über das Spielfeld verteilt werden würden.\n\nPerformance:\nBumpers läuft flüssig wenn 30 Autos aus 6 verschiedenen Kategorien(inkl. dem Spielerauto) auf dem Spielfeld sind.\n\nSupportability:\nAlle Autos erben von einer Auto-Klasse und sind jeweils in einer eigenen Klasse implementiert, damit jedes Auto eindeutig indentifiziert und abgeändert werden kann.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1284717,
      "meta": {},
      "text": "Usability:\n- The player should be able to change the direction of the car with one click\n- The car images should use color values which are not adjacent to the values of the game background, as to maintain visibility of status\n\nReliability:\n- The game should ignore invalid inputs by the player (i.e. pressing the spacebar) and not crash when these are entered\n\nPerformance:\n- The car should change its direction within 10 ms after the player clicked the mouse\n- The game should update 60 times a seconds, with constant time intervalls between updates\n\nSupportability:\n- The game should be platform independant\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286249,
      "meta": {},
      "text": "Usability: \n1. Users get notified with visible text on the game interface when they crash a car or win/lose the game\n2. Users are able to change the collision type with only one click on the game interface\n\nSecurity:\n3. The game consumes reasonable CPU resources so that system crashes will not crash and lost the information of other running activities on users' computer\n\n\nPerformance: \n4. The cars respond to the mouse clicks with unnoticeable time.\n5. The lagging of music is less than 0.5 seconds after the crashes or wins.\n\nSupportability:\n6. The game supports different platforms including mobile app and web app.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286408,
      "meta": {},
      "text": "1. Das Programm soll abbrechen, wenn es nach x Sekunden noch keinen Crash gab. (R)\n2. Möglichkeit zum Ändern der Musik über Kundenservice (S)\n3. Möglichkeit zum Ändern des Crash-Sounds über Kundenservice (S)\n4. Die Anzahl der Autos soll keinen Einfluss auf die Geschwindigkeit des Spiels haben (P)\n5. Das Spiel ist jederzeit spielbar (P)\n6. Es wird bei der Farbe der Autos und des Hintergrunds auf Rot-Grün-Schwächen geachtet (U)",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1287726,
      "meta": {},
      "text": "1. The player can play the game after opening the application within 10 seconds.\n\n2. The game can be played on touchscreen devices.\n\n3. Additional car types can be added by only creating 1 new file and uploading a corresponding image.\n\n4. The player can navigate through the menus using only the keyboard.\n\n5. The player can play the game using only the keyboard.\n\n6. The player has access to a help/documentation text from the main menu within 2 (mouse/touch/keyboard) inputs.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287841,
      "meta": {},
      "text": "\nplayers can be able to fasten the car with mouse at 1 click.\nplayers need to start game at most 2 click.\nthe system should tolerate up to 10 players at the same time.\nwhen cars crash, the sound effect must be played in 0.5 second after crash.\nGame must not crush.\nThe game must run in Windows XP and MacOS.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281218,
      "meta": {},
      "text": "Non-functional requirements:\n1. Usability: Player needs at most 2 clicks to start the game.\n2. Reliability: Out of 1000 times executions, the system of the \"Bumpers\" game should not crash more than once.\n3. Performance: To start the game, it should take less than 2s.\n4. Performance: When the player is changing the direction of the controlled car, it should change the direction within 0.0001s.\n5. Supportability: If an error occurs, the maintenance should be no longer than 3 hours.\n6. Supportability: The \"Bumper\" game should be able to be ported form Windows to mac OS.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281404,
      "meta": {},
      "text": "Usability: The user should be able to start and the game, after running the application, within 5 seconds and at most 2 clicks. So the game needs to be efficient in terms of usability.\nReliability - Robustness: The system should be able to identify winning cars in the case that more then two cars crash at the same point and time.\nPerformance - Response Time: After choosing the option to start the game on the UI, the game board should appear within 2 seconds.\nSupportability - Adaptability: The system should still provide 100% of the functionality after updating the underlying Virtual Machine.    \nSupportability - Maintainability: The system should be available within 6 hours again after the client has commissioned the developers to add new functionalities.\nUsability: Users should interact with the system only with keyboard and mouse. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282913,
      "meta": {},
      "text": "Usability: \n1. The player can steer the car by changing its direction with one mouse click. \n2. The player can change the speed of the car by pushing one button. \"+\" to increase the speed by one unity and \"-\" to decrease the speed by one unity. (Usability)\n\nRobustness/ Reliablility:\n3. If the player wants to change the direction and clicks on a position that is not on the gameboard the click should not change the direction of the car.  \n4. The amount of cars that are on the gameboard can be chosen by the player. The maximal amount is 15 and the minimal amount is 1. If the players enters a number that is higher than 15 or lower than 1 the amount of cars will automatically be set to 8 cars.\n\nPerformance:\n5. Every mouse click  should be processed in one second. Every change of speed should be processed in three seconds. The crash sound after a car crash and the determination of the winning car of a crash should be processed in less than a second. \n\nAdaptability/ Supportability:\n6. The game should work on any plattform and should not be influenced by any update(softwareUpdate). It should be able to adapt to every kind of update.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284012,
      "meta": {},
      "text": "NFR1 Usability: The player should be able to start and end a game with 2 clicks at most.\n\nNFR2 Portability: The game is to be developed platform independent, ie. it has to work on Windows, MacOS, Linux, Android, PlayStation 4, Xbox One and iOS.\n\nNFR3 Security: The game should not allow players to manually change their high score or disable collisions.\n\nNFR4 Design Consistency: The game should have a consistent design, with the UI icons having similar resolution, size and shapes. The icons should be from the same icon pack and the font should be Arial across the whole game.\n\nNFR5 Performance: The game should have loading times not longer than 5 seconds.\n\nNFR6 Accurate Input: The mouse input for changing the direction of the car has to registered right away in order for the player to be able to perform quick reactions and the car has to change its direction in a matter of 6ms.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284684,
      "meta": {},
      "text": "NFR Usability:\n\t- Start / Stop buttons should be accessible to the player at any stage of gameplay as well as collission winner\n\t   determination shoud be changeable during gameplay\nNFR Reliability:\t\n\t- System is not to crash/stop running when player enters key/mouse events not part of the controls\n\t- Car speed values must be capped to values < Integer. MAX_VALUE and no values < 0 (eg min = 0 max = \n\t   15)\nNFR Perfomrance:\n\t- Game music needs to be played within 1ms of game start \n\t- When steering there can only be a maximum of 10ms of delay between mouse input and PlayerCar action\nNFR Supportability:\n\t- The game should be platform independent",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284950,
      "meta": {},
      "text": "NFR1 The game should be startable with less than 3 clicks\nNFR2 The evaluation of the winner should take less than 1 second\nNFR3 It should not be possible to manipulate the game's winner evaluation\nNFR4 The game should not be vulnerable to any attacks which manipulate the game logic\nNFR5 The user should be able to interact with the game by clicking his mouse\nNFR6 The games language shall be english \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285390,
      "meta": {},
      "text": "NFR1: Usability: The Player can steer the car and change the speed of the car with 1 click on the mouse. \nUser experience: The Game should be challengeable and not too easy to win. \nNFR2: Target platform: The game should be platform independent. \nNFR3: Adaptability: The game should support different collisions. \nNFR4: Maintainability: The code of the game should support new features and requirements for the future.\nNFR5: Performance: Each mouse command should take less than a few milliseconds.\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285521,
      "meta": {},
      "text": "NFR1 Usability:\n* The total number of clicks done by the user before starting the game shall not exceed 5 clicks.\n* The game shall be easy and simple to learn; headings, titles and helping messages should appear at every new reached step. Error messages should appear when necessary, when a bug occurs for example.\n\nNFR2 Reliability:\n*Each user shall have a username and a password. The user can choose whether or not to show his username to the other players.The password needs to be changed at least once a year.\n\nNFR3 Performance:\n*The game needs to be available and accessible 24/7/365 for the ones who have the right to access it. \n*A response after a click should take at most 1 second. An average response time should be around 0,3 second.\n\nNFR4 Supportability:\n*The developer shall be able to modify the code of the game easily and quickly in case a bug occurs.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283125,
      "meta": {},
      "text": "Here are 6 non-functional requirements for the Bumpers problem Statement :\n\nUsability :\n\t- User experience :\n\t\tThe player can control and streer his car with no more than 2 clicks with his mouse\nReliability :\n\t- Robustness :\n\t\tThe game can support more than 50 cars at the same time\n\t- Security :\n\t\tThe game protects the user's data against any harm from third parties\nPerformance :\n\t- Response time : \n\t\tThe game starts under 2 seconds of pressing the button \"start game\" \nSupportability :\n\t- Adaptability :\n\t\tThe game works on different operating systems and platforms without issue\n\t- Maintability :\n\t\tThe game can be fixed within 24 hours in case of failure",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284263,
      "meta": {},
      "text": "Quality requirements for the Bumpers game:\n-Usability: The player should need at most 3 klicks to start the game.\n-Reliability: \n    ->Robustness: The system should not collapse when the player accidently presses start after he has already \n                            started the game.\n-Performance:\n    ->Response time: The system should react to user inputs (like increasing speed) within less than 50ms.\n    ->Availability: The availability of the game should be at least 99.8% per week.\n    -> The game should support at least 100 users simultaneously.\n-Supportability: \n   ->Maintainability: The code should be commented completely in order to facilitate necessary modifications.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285407,
      "meta": {},
      "text": "NFR1 Usability:  All interactions regarding starting, stopping or changing the settings of the game should take at most 3 clicks.\nNFR2 Usability: Users interact with keyboard and mouse.\nNFR3 Reliability: The system can tolerate up to 16 mouse clicks per second (world record for CPS).\nNFR4 Performance:  Up to 16 mouse clicks and the movement (direction, speed, position) of the car should be processed under 1 frame per second.\nNFR5 Response Time: Mouse clicks should be recognized under 273 milliseconds (mouse input reaction time).\nNFR6 Adaptability: The winner of the collisions should work properly during different collisions / when the collision type is changed.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285736,
      "meta": {},
      "text": "Usability\nNFR1 Learnability: When starting a game Popups should appear to explain the rules of the game including the rules of the different collision types, the win condition, the lose condition, how to control the Car and how different Car types bahave\n\nNFR2 Satisfaction and User Experience: The game should be tactile and tell the user about when inputs are entered, with a short animation or sound, like when tapping the screen in mobile phones or when closing or opening windows on a PC\n\nReliability\nNFR3 Safety: The Program should pause if mouse inputs are given outside of the window, to avoid losing while being unable to see the game window.\n\nPerformance\nNFR4 Availability: The Game should be playable with local ressources. Therefore it should not need an internet connection to function and have full funtionality more than 99.99% of the time if the current minimal system requirements are met.\n\nSupportability\nNFR5 Adapatbility: After pressing the start button the list of collision types and car types should be expandable without cutting off newly implemented collisions and cars. And the new types should still be accessible to chose from.\n\nNFR6 Maintainability: The System inform the user about the name of the game breaking bug, so that the support team can identify the problem in under a minute.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286126,
      "meta": {},
      "text": "U - usability \nR - reliability \nP - performance \nS - supportability \n\n\nusability: the player can stop or start the game with just one button.\n\nreliability:  cars that have already crashed will not drive again \n                 if the player car is already crashed the player will not be able to drive again unless they start a new game \n\nperformance:  the player car can crash one car at the time \n\t\t       the game only supports one player at the time\n\nsupportability : the system is available at least 99 of the time \n\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286233,
      "meta": {},
      "text": "NFR:\n\nUsability: (1) The player can steer the direction of the car with the mouse and change its speed.\nThis requirement describes match (interaction) between system and the player. We can specify the requirement to make it more measurable, for example: left-click on the mouse causes acceleration, right-click - deceleration, and the position of the mouse cursor shows the direction.\n\nReliability: (2) The player can start and stop the game.\nThIs requirement is important to avoid the unwanted incidents. For example, if the player wants to stop the game before he/she loses. The game should terminate the car movement and music when the player stops the game, so the system should be robust. \n\nPerformance: (3) When cars crash, it should be followed by the sound effect no longer than 1 second.\n(4) Music is played within 1 second after game start.\nThis requirement describes the response time of the game to player's actions. \n\nSupportability: (5) The game should be platform independent.\nIn other words, the system should be adaptable to different platforms, so that the game can be played not only from the platform it was developed in. \n(6) The determination of the collision winner should be changeable during gameplay.\nThis requirement is about maintainability of the system, so it can deal with the new requirements about the collision winner.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287572,
      "meta": {},
      "text": "1) The user should be able to choose both car type and collision type as well as difficulty in the same interface and then start the game with one more click. (Usability)\n\n2) Normal cars should always bounce at the edges of the screen. Only special cars can pass through one end to the other. (Reliability)\n\n3) The game should not end before there is a winner, but it should always end after there is a winner. The game should not continue once the player collides and wins/loses. (Reliability)\n\n4) There is a maximum amount of cars that can be present in the game. (Performance)\n\n5) After a certain amount of time, the system should provide a way to end the game sooner. (i. e. more cars joining the game, although no more than the maximum amount, cars gaining more speed to increase the possibility of a collision, etc.) (Performance)\n\n6) The game should be compatible with both older and newer GUI versions. (Supportability)",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287759,
      "meta": {},
      "text": "1) Usability: \n\ta) Learnability: The game consists of one simple task which is to steer the car with the mouse. No additional \n \t buttons to press on are required of the player to learn. Thus the easy learnability of the Bumpers game.\n\tb) Memorability: The game is simple and doesn't require the user to remember different aspects (example: \t\t\t \n        different ways of playing due to multiple levels or many buttons that can be used that the user must \t \n        remember one by one). The game is very memorable as it only requires the movement of the mouse and \n        understanding that the player should collide with other cars in a certain way that they already chose in \n         the menu.\n2) Reliability:\n\ta) Robustness: The game doesn't crash when the player accidentally presses on different keyboard buttons or on the mouse buttons. \n3) Performance:\n\ta) Response time: The program of the game is efficient in terms of time and space complexity which means \n        that the player will have a flawless experience with their car moving seamlessly with the mouse. In addition, there are no delays of sound effects and the refresh rate/ frames per second is estimated to be between 100 \n        and 120 per second for all different computers with the minimal requirements.  \n4)Supportability:\n\ta) Adaptability: The games is designed to be adaptable to different operating systems and to different computer characteristics by sacrificing image and sound quality to keep the refresh rate high enough for better performance.\n\tb) Maintainability: The developers of the game receive regular automatic feedback on edge cases or bugs and errors and they correct them and update the game remotely.  \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280481,
      "meta": {},
      "text": " Usability: \n1. Visualisation of different parameters like speed, consumption of the car and location of the car. (Visibility of system status)\n2. The player can steer one car with the mouse and clicking on the screen. (Efficiency, so it's fast and easy to steer the car)\n3. The player can start and stop the game. If the player started the game he shouldn't be able to start it again, but stop it. (User control and freedom)\n\nReliability:\n1. In each collision there is a winning car (there has to be to a winner car independent of when the user tries to do different to overrun the system)\n\nPerformance:\n1. The game should run smoothly, so no lags occur independent of the hardware specifications of the user. It should be tested with a maximum of 10 Cars on the screen. Optimally the framerate should be 60fps through all the time with a operating device that has at least 4 cores as a CPU.( response time)\n\nSupportability:\n1. The game should be platform independent, e.g. Windows, Android, IOS, MacOS and Linux. (Adaptability to different operating systems)",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284313,
      "meta": {},
      "text": "1) Usability (learnability): [Control scheme is easy to understand] An animation, showing that the player can steer the direction of the car with the mouse (in case of a device supporting it), appears if the player's car keeps standing after the game was started.\n2) Usability (Error handling): If the exception during the particular collision occurs, the player should get a message and be able to restart the game. This collision should also be out of the list of possible collisions (as the game supports different types of collisions) for the next races of the session.\n\n3) Reliability (robustness): When the gamer tries to \"start\" the game (by either pressing the start-button or other implementation of this function), being in the middle of the race, the game should not start the race again or somehow react.\n4) Reliability (safety): As there are multiple supported collisions, and their determination should be changeable during gameplay, all cars should be stopped during the change (can be made through a special animation) to avoid the situation, when the cars collide at the moment of change, so the collision type is not defined.\n\n5) Performance (response time): Music must start playing within 500 milliseconds after the game was started.\n\n6) Supportability (portability): The game should be platform independent, i.e. can run on multiple operating systems including Microsoft Windows, macOS, IOS and Android.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284896,
      "meta": {},
      "text": "1. [Usability] The player can start the game by clicking the keys used to maneuver the car, directly after startup (in the problem statement, the player cannot select a car so this is feasible) \n2. [Reliability] The game does not crash and simply ignores the keystroke when the player accidentally hits keys that are not directly bonded to any in-game action\n3. [Performance] The game and especially the car seem to respond in real-time to the user's steering input, there should not be a significant lag of more than 500ms\n4. [Supportability] The game should run on all three major OSs: Windows, macOS and Linux\n5. [Usability] The player should be able to directly dive into the game, without having to read a manual on what keys correspond to what in-game actions\n6. [Performance] The game should launch and be ready to start a game in less than 5 seconds",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285133,
      "meta": {},
      "text": "Qulaity Requirements for the Bumpers game:\n\nUsability :\n1- user needs at most two clicks to start the game\n2- the game must be intuitive and easy to learn \nReliability :\n3-The game must not crash in 95% the time (Robustness)\nPerformance :\n4- The average response time between click and reaction must be less than 0.5 seconds (Response time)\nSupportability :\n5- The game must be platform independent (Portability)\n6- The game code must be well organised and clean to make possible changes and modifications easy ( Maintainability)\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285822,
      "meta": {},
      "text": "Usability: \n- players need to press one button and 3 clicks at most to change the collision type during the gameplay.\n- new players should be able to unterstand the game and its mechanics (how to play) after one trial.\n\nReliability: \nthe game can tolerate the crash of 3 cars at the same time, without freezing or shut down                                                                                                                                                                                                                                                                                                                                                                                                                        \n\nPerfomance:\nEvery Steering input (mouse click) should be processed within 10 ms \n\n\nSupportability:\n- New car types can be added within 10 minutes.\n- the window size of the game should adapt to the resolution of the player's monitor\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286492,
      "meta": {},
      "text": "The first requirement is that this game should be easy to learn. As it is fairly simple, from the first try the player has to get the idea of how to drive and steer the car and how to win the game. Moreover, to make the game UI quicker to be understood we would need a UI that navigates with least clicks possible. For example, only one click can be enough - that is to start \"Play game\" button. \n\nThe second requirement is that the game has to bring the player a satisfaction and memorable experience. For this would help having visual graphics, visual effects and sound effects. One another thing is having fixed all bugs and not making the player frustrated because the game doesn't work as expected.\n\nThe third requirement is to make the software robust. Meaning that when, for example, the player presses the wrong button nothing, that would disturb the game flow, would occur. \n\nThe fourth requirement is to make the game perform correctly when multiple player are playing the game. Also, if the game handles a lot of information (in this case it doesn't) we need to be sure that the software manages to do it correctly.\n\nThe fifth requirement is to keep the software secure. That means to protect the software from intended incidents. For example, here we can consider hacking the game as a possible intended incident.\n\nThe sixth requirement is to make the software easy to maintain. Meaning to make the game easily modified, for example, when we want to introduce new collision types or new cars. Another thing is to correct defects easily, for example if there is a bug when colliding, the programmer has to navigate with ease through the code and find the problem.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286880,
      "meta": {},
      "text": "NFR1: \tPlayers should be able to start/stop the game within 2 mouse clicks. (Usability) \n\nNFR2: \tThe car's speed should be visualized by their color (for example, faster cars are red / slower cars are \t\t \n\t\tblue). (Usability) \n\nNFR3: \tThe game should not crash if the player presses random keys on their keyboard. \n\t\t(Reliability -> Robustness)\n\nNFR4: \tThe game should register mouse input within 0.1 seconds. (Performance -> Response time)\n\nNFR5: \tPlayers should be able to play the game with 60 fps. (Performance)\n\nNFR6: \tPlayers should be able to play the game on Windows, macOs and Linux. (Supportability -> Portability)\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287131,
      "meta": {},
      "text": "Usability: The user should be shown certain parameters about their car, such as speed, fuel consumption, and location.\n\nPerformance: The game should be able to handle all possible cars on screen crashing at once, therefor also playing a sound effect at once without crashing/performance loss.\n\nPerformance: The game should be able to process continuous input by a single player and react to said input as quickly as possible. Under 1/60th of a second would be a good reaction timeframe.\n\nSupportability: The game needs to be playable (and therefor runnable) on all platforms.\n\nSupportability: The game needs to support change-able collisions during runtime. (i.e. the winner of the collision should be edit-able in real time)\n\nReliability: The game's input system needs to be able to handle auto-clicking scripts/software, i.e. ~200 inputs per second.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287289,
      "meta": {},
      "text": "1. NFR Usability - Learnability: The user needs 10 clicks to go through the game and learn it\n2. NFR Usability - Satisfaction / user experience: The user interface design is simple, the Start Button just contains the word \"Start\"\n3. NFR Reliability - Security: The data of the users is deleted after 30 days and is stored safely\n4. NFR Performance: At most 20 simultaneous users can be supported\n5. NFR Supportability - Maintainability: If there is a bug, a software developer will be informed in 5min to fix it\n6. NFR Supportability - Portability: The game runs in Windows XP, Windows 11 and macOS \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287368,
      "meta": {},
      "text": "Usability:\n - an option to toggle between standalone mouse and touchpad should be available; it should allow for adjustment of the sensitivity of the mouse input and should make controlling the car easier for users with either an unlimited movement desktop mice (optimising for precision) or a limited movement laptop touchpad (optimise for constrained finger movement)\n\nReliability:\n - Safety - check both start and stop colliding event and verify that in both cases the same car is affected; this should prevent false collusions with a wall for example\n - Security - implement anti-cheat software to prevent tampering like a fake collusion injection\n\nPerformance:\n - Response time - no more than 10 ms should be needed for a car to move after user input (considering a target of 60FPS -> (1/60)*1000 = 16,667 ms for a frame to be drawn - around 6 ms for mouse input reception)\n - CPU optimisation - the game should utilise at least 2 cpu cores for the AI of the opponent cars and 1 for UI\n\nSupportability:\n - Adaptability - the game should be able to adapt to window size changes within 2 frames",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280983,
      "meta": {},
      "text": "Performance: \n          - Many users can play the game at the same time.\n          - The cars direction should be changeable within 1sec after steering\nSupportability:     \n          - The game is used smartphones and computers \nUsability\n          -Bumpers can be played without guidelines\nReliability\n          - Bumpers should not crash more than 1 out of 1000 executions\nAdaptability: \n          - Bumpers must  support metric and imperial systems.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1281366,
      "meta": {},
      "text": "Usability:\n- The game should be fully playable with only left mouse clicks\n- The player should be able to start the game with a button on the top left and stop the game at any time with a button next to the start button\n\nReliability:\n- The game shoud be able to handle any kind of collisions with other cars or the border without errors\n\nPerformance:\n- If a mouse click happened the direction change of the car should happen within the next frame\n- The game should run at stable 25 FPS on any pc\n\nSupportability:\n- The game should be playable on any platform without visible changes",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1282858,
      "meta": {},
      "text": "Usability: \nEfficiency - The user hould be able to navigate the game interface quickly and intuitively with as few clicks as possible to get playing. There should not be any unwanted and unnecessary popups.\n\nReliability: \nRobustness - The Bumpers game should be robust and prevent errors from happening in special cases. Cases like these include special edge-case user inputs, like for example dragging the mouse, rapidly clicking it (faster than tick-rate), or right-clicking.\n\nPerformance: \nAccuracy - The User input should be reflected accurately in the game, the input handling needs to be consistent and the coordinates of cars have to reflect the hitbox perfectly, in order to achieve consistent gameplay.\n\nResponse Time - The tick-rate of the game has to be sufficiently high enough to allow the game to flow freely and not feel \"laggy\". This is important especially for platform independency, as different systems could process the game-flow differently.\n\nSupportability: \nMaintainability - The implementation needs to be maintanable, if errors arise, they need to be fixable quickly, without having to reprogram the entire system. This can be achieved by keeping the game internals modular\n\nPortabillity - The game has to be able to run on different systems and platforms. This could be achieved by implementing it using Java, as the JRE is built to run on all systems.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283229,
      "meta": {},
      "text": "Usability:\n\t1)\tThe player should be able to start the game with fewer than 3 user-interactions.\n\t2)\tThe player must be able to understand the concept of the game within 2 minutes and should be able \n\t\tto remember how to play the game withing 30 seconds of re-opening the game.\n\t\nReliability:\n\t3)\tThe player must be able to play the game without bugs / program-failures in 95 out of 100 play-sessions.\n\nPerformance:\n\t4)\tThe game must run at least at at 60 fps 95% of the time.\n\t5)\tThe game needs to be playable with at least 75 fps when there are up to 20 cars simultaneously on the board.\n\nSupportability:\n\t6)\tA programmer must be able to add new car-types by just adding the new car-image into a directory.\n\t\t(in other words: The game should not have to be recompiled if someone wants to just insert a new car type)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284019,
      "meta": {},
      "text": "6 non-functional requirements for the Bumpers game:\n*including four URPS categories\n \n1)Reliability(Robustness)\n--When the user accidently change the car's speed to a value that is overloaded by the system, the system should have a funciton to handle this instance. For example, when user input is above the system maximum setting, the speed output should maintain at the point of the maximum value that has been set.  This way to avoid error input causing crash of the system.\n2)Usability \n--When visualizing the car's different parameters, the system design should keep users informed of the current stage and the alternation that has been made, so to improve the user's experience.\n(implying the Nielsen's heuristics- Visibility of System Status)\n3)Performance\n--The game should be able to process all the information and instructions at the same time. This sector is getting more crucial when the game setting is getting more complex and complicated, the system should manage to response in a fair time.\n4)Supportability(Adaptability)\n--The game should be platform independent, which means the system should ensure that it can run on a variety of hardware platforms or software architectures.\n5)Supportability(Adaptability)\n--When user defines a new collision type and set it as the game collsion, the system should be able to adabt the changed circumstances.\n6)Supportability(Adaptability)\n--When evaluation of the collision winner should be changeable during gameplay, the system have to support the differnt evaluation type and implement it.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285286,
      "meta": {},
      "text": "Usabilty:\n\t1. The Player should be able to start and stop the game with just one click.\n\t2. The Player should change the Player Car with up to 2 clicks.\n\nReliabilty\n\t1. The System can handle all user inputs, meaning that the game never crashes because of a user input\n\nPerfomance\n\t1. The game starts in less than 1 second\n\t2. The game has at least 24 fps with up to 15 cars on screen at the same time\n\nSupportabilty\n\t1. The speed of the cars can be changed using just one method in the code",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285348,
      "meta": {},
      "text": "Those are 6 non-functional requirements for the Bumpers Game:\n\t-There have to be different speed levels for a car.\n\t-There has to be (background) music\n\t-There has to be a sound effect when cars crash\n\t-The game should visualize the consumption of the car\n\t-There has to be a determined formula to evaluate the winning car in a collision\n\t-The formula evaluating the winner shall be changeable during the gameplay",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1286663,
      "meta": {},
      "text": "There are two types of requirements. They are called functional requirements and non-functional requirements. \nThe functionality for the Bumpers game is “drive car” and “crash another car”. \nNon-functional requirements are divided in four categories. \nFirst of all the usability is “player can start and stop the game” and “player needs to steer the direction of the car with the mouse and change its speed to drive a car”. \nThe reliability is that the game is platform independent. \nThe performance should visualize different parameters of the car for example speed, the location of the car and consumption. It should also provide a sound effect when cars crash. \nFor supportability the game should support different collisions and the determination of the collision winner should be changeable during gameplay.\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286952,
      "meta": {},
      "text": "Usability:\n1. players need at most 5 clicks to start playing the game.\n2. the rules of playing the game can be learned within 1 hour.\nReliability:\n3. security: the software is designed to prevent hacking.\nPerformance:\n4. response time: the car can change direction within 0.1 seconds after the mouse clicks.\n5. availability: the availability of the software is at least 99.99%.\nSupportability:\n6. maintainability: the way of controlling car can be changed within one week if there is new requirements. \n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280687,
      "meta": {},
      "text": "Usability: Der Spieler braucht nur einen Mausclick um die Richtung seines Fahrzeugs zu ändern\nUsability: Der Spieler soll in der Lage sein, das Spiel über einen mit \"Stop Game\" beschrifteten Knopf, der sich außerhalb des Spielfeldes befindet,  in der Lage sein das Spiel zu stoppen und mit einem mit \"Start Game\" beschrifteten Knopf direkt daneben das Spiel wieder starten zu können\n\nPerformance: Es müssen mindestens 5 weitere Cars neben dem Player Car gleichzeitig sich über das Spielfeld bewegen\nPerformance: Die Richtung des Cars soll sich innerhalb einer Millisekunde nach dem Mausclick ändern \n\nSupportability: Das Spiel soll auf allen möglichen Plattformen spielbar sein\n\nReliablity: Wenn der Spieler das Fenster von Bumper schließt oder verlässt, soll das Spiel sofort gestoppt werden",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1281359,
      "meta": {},
      "text": "Usability:\n1. the game should explain the game's controls to the player, so that the player isn't confused\n2. the game window should be resizable to adapt to different monitor resolutions and scalings\n\nReliability:\n3. the game should be able to handle temporary changes in frame rate due to bad player hardware\n\nPerformance:\n4. the collision check should be as accurate and fast as possible\n5. the CPU consumption should be as low as possible so that even players with older hardware are able to run the game\n\nSupportability:\n6. the codebase should allow to easily add new car types and collision types in the future\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281821,
      "meta": {},
      "text": "Bumpers is a game which should fulfill the following 6 non-functional requirements:\n\nNFR - usability:\n1. The user which is the player of the game interacts with a computer mouse.\n2. The player should be able to start and stop the game by clicking the start button or the stop button only once. \n3. The player should be able to change the direction of the car with only one mouse click within the playing interface of the game.\n\n\nNFR - reliability:\n4. Robustness: The determination of the collision winner should be changeable during gameplay. (environment changes since the winner of the collision is determined differently)\n\n\nNFR - performance:\n5. Amount of information handled: The game should visualize different parameters of the car, e.g. the speed, consumption and location of the car in an instrument panel. (these are at least 3 different parameters of information handled at once)\n\n\nNFR - supportability:\n6. Adaptability: The game should be compatible with multiple platforms. (when played on macOS the circumstances are different than on Windows, since different operating systems are used)",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282485,
      "meta": {},
      "text": "1. Usability\nSubcategory: Learnability.\nBy the fifth time playing the game, it takes the player less than 5 seconds on average to choose a car and a collision type and start the game.*\n\n*assuming this choice must always made before starting the game.\n\n2. Reliability\nThe game experiences at most 1 critical failure per 1000 rounds played (meaning: it crashes at most once per 1000 rounds played).\n\n3. Performance\nThe game can support one player car and up to 50 non-player cars without crashing, displaying loading times or the cars’ movements not appearing fluent anymore*, meaning all movements must be displayed within 0.1 seconds. \n\n*0.1 second is about the limit for having the user feel that the system is reacting instantaneously (Nielsen, 1993**)\n**https://www.nngroup.com/articles/response-times-3-important-limits/\n\n4. Supportability\nSubcategory: Portability.\nThe game runs on the latest versions of the two most popular operating systems: Microsoft Windows (Windows 10) and macOS (macOS 11 Big Sur.\n\nATTENTION: I took EIST last year, but sadly did not pass the final exam, and am therefore reusing my answer from last year. Kind regards, Giulietta\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282556,
      "meta": {},
      "text": "Usability: Bumpers should only offer 3 different car types and 3 different collision types in the beginning. If the game offers more car and collision types and game modes the game becomes overwhelming for the player. Limiting the options in the beginning to choose from makes the game more manageable.\n\nRobustness: When the game runs the escape and the windows button are disabled, so the player can't accidently tab out of the game or close the game. The palyer is still able to stop the game via the stop button on the screen.\n\nMaintainability: The car subclasses should not have more than 200 lines of code, so fixing bugs in those classes regarding the behaviour of the different cars is easier.\n\nResponse time: There should be minimal delay of 0.01s when steering the car for fluent gameplay.\n\nAvailability: Bumpers is offline available 100% of the time. Newer updates are available every two weeks.\n\nSecurity: Bumpers does not require any personal information to play so important information cannot be leaked.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283419,
      "meta": {},
      "text": "Usability NFRs are related to the easiness to use. Example Usability NFR: In order to prevent confusion and support color blind users each car must has an unique (different than other cars) high contrast color from following palette #d55e00, #cc79a7, #0072b2, #f0e442, #009e73.\n\nReliability can be defined as the expectation that the product will operate consistently and without unwanted incidents. Example Reliability NFR: The game should be finished 95% of the time without a crash.\n\nPerformance NFRs are related to how fast or how much can the application handle interactions.  Example Performance NFR can be Bumpers game should never go down lower than 24fps or PlayerCar should change direction in 50ms at most after a mouse click\n\nSupportability is a broad term, Supportability NFRs are related to how easily keep upgrading the application and support different environments. ample Performance NFR can be Bumpers should be an executable jar file working in Windows 10 and Linux or every method in Bumpers code has to be a corresponding unit test.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284205,
      "meta": {},
      "text": "U -> Usability: Is it easy to learn the interface to play the game and use the features [Learnability] is it possible for 95% of the users to start the game and use the features without any help or additional guidance.\n\nR -> Reliability: the game can be played even after wrong inputs or loss of connection [Robustness]\n\nP -> Performance: the game is able to handle up to 20 cars without losing crash animations or sound effects [Performance].  the game is available at least 99% (990 / 1000) of the times it is tried to be started and played [Availability].\n\nS -> Supportability: the game can be played on Windows and Mac (IOS) [Adaptability]. You can change the game and upload Bugfixes [Maintainability].\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284439,
      "meta": {},
      "text": "1. The mouse car control should be intuitive || The user should be able to understand how the colission system works otherwise it could frustrate the player\n2. The game should not crash when the player tries to let the car drive out of bounds\n3. The game should have at least 30 frames per second\n4. The game should immedeatly respond to any user input\n5. The game should be platform independent\n6. The ui should be small, easy to understand and only display the most important parameters of the car",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284690,
      "meta": {},
      "text": "Non-functional requirements for the Bumpers Game:\n\n1) Usability\n   - user should be able to steer the direction of the car with mouse and change its speed by clicking special \n     buttons (platform dependable). \n2) Reliability\n   - Security: user should not be able to change the program files under no circumstances. All game files are to be \n     protected and unreachable (ex. on the secure server).\n3) Performance\n   - Performance: the game (and the server with all secured files) should support up to 10.000 users \n     simultaneously.\n   - Performance: the game has to open in less than 1 second. A pause during the previous and next game shall be \n     processed in less than 200 ms. \n   - Availability: the max. downtime (for handling technical issues, updates etc.) is at most 8 hours a week.\n4) Supportability\n   -  As already said, the game files can be placed into the server, so as to allow the developers to change bugs or \n      or adapt the system for a special device as fast as possible (within the 8 hours a week: see Performance NFR).",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286623,
      "meta": {},
      "text": "- Die Icons im Spiel sollten groß genug sein, um nicht zu nah an der Bildschirm herangehen zu müssen. (Usability)\n\n- Exceptions für Fehler zB. beim Laden der Bild- und Audiodateien sollten korrekt gefangen und bearbeitet werden. (Reliability)\n\n- Auch nach mehreren Spielstunden sollte das Spiel nicht langsamer werden.. zB alte Werte in Listen leeren (Performance)\n\n- Das Spiel sollte eine Tickrate von mindestens 20 FPS haben (Performance)\n\n- Für das Spiel sollte eine Dokumentation des Codes verfügbar sein, um es beliebig zu erweitern oder Fehler zu finden. (Supportability)\n\n- Das Spiel sollte auf allen Desktop-PC spielbar und ausführbar sein. (Supportability)",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1286910,
      "meta": {},
      "text": "Usability:\n\tDas spiel sollte ausschließlich mit der Maus steuerbar sein\n\tEs sollte dem Spieler möglic hsein mit nur einem Mausklick das Spiel zu Starten/Stoppen\nReliability:\n\tEs sollte für den Spieler nicht möglich sein eine falsche Eingabe zu machen\nPerformance:\n\tDas spiel soll in der gegebenen Version nur Singleplayer sein, was keine Performanceoptimierung für mehrere Spieler nötig macht\n\tDas Spiel Spiel sollte in weniger als einer Sekunde Kollisionen evaluaten\nAvailability:\n\tDas Spiel sollte sowohl auf Windows als auch auf Mac Systemen verfügbar sein",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1287308,
      "meta": {},
      "text": "1. Usability: The game is played via mouse input.\n2. Usability: The game shall be runnable on more than one platform.\n3. Reliability: robustness: The duration of the crash sound shall not hinder the possibilty of further crashes with other cars.\n4. Performance: The game's performance must be sufficient to sustain a lag-free experience, even with a greater amount of cars: e.g. If 30 cars are on the board, collisions etc. shall not cause lags (~10 ms delay per event is acceptable.)\n5. Supportability: maintainability: The game shall offer updates via apt.\n6. Supportability: The game shall scale automatically to the current screen's resolution.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1280547,
      "meta": {},
      "text": "Usability:\n\t1. Learnability:\nThe game should show some basic instructions the first 3 times when the game i started after it has been installed and overall provide a minimalist User Interface that contains only the relevant information for the player (e.g. start/stop, the game-field and the cars, the exit buttons) so that the player won't be overwhelmed by new information when playing.\n\t2. Error handling:\nThe game should be able to withstand edge cases like when the user clicks outside of the gaming are or when he tries to start the game while it is already running. Furthermore the game should not be influenced by other inputs like the user pressing on the keyboard while playing.\n\t3. Satisfaction/user experience:\nThe game shouldn't be in any way a frustrating experience for the user. This means it should support different difficulty modes (e.g. when the player has lost 3 games in a row, the game should offer the option to switch to a easier more where less enemy cars are spawned. The same goes when the player is constantly winning, the game should offer to increase the difficulty by adding more enemy cars or increasing their speed.)\n\nReliability:\n\t4. Robustness:\nThe game should be able to run effortlessly even when being used for as long as 12h continuously.\nFurthermore the game must not crash or stall when the PC goes into stand-by mode or when the user switches between tabs while playing.\n\nPerformance:\n\t5. Response time:\nThe latency between the player's input click and the car changing direction should be as minimal as possible (not more than 100 ms) and the game should be able to still run without problems even when the player decides to play against up to 20 enemy cars.\n\nSupportability:\n\t6. Maintainability:\nThe structure of the game should be easily expandable to be able to add new game elements (new car/collision types or a map extension) even after the release. Therefore common used classes like the \"car\" and \"collision\" classes should be made abstract and new sub classes inheriting from the \"car\" and \"collision\" classes should be used to model specific car types that can be added as time goes on.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281050,
      "meta": {},
      "text": "1. quality requirement: Performance: All music (background music, crash sound) start and end response time within 1 second.\n\n2. quality requirement: Usability: Users need to play at least once to understand the rules of the game (rules for two cars colliding).\n\n3. quality requirement: Reliability: Cars must have four tires or they are not allowed to be used in the game.\n\n4. quality requirement: Supportability: Bumpers should support IOS, Android, and Windows operating systems.\n\n5. quality requirement: Security: The game does not require users to provide their basic information, so it does not disclose any user information.\n\n6. quality requirement: Usability: Car pictures should be displayed in at least Standard-Definition.\n\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1281399,
      "meta": {},
      "text": "1. Die Steuerung von Bumpers sollte intuitiv sein, Buttons müssen mit ihrer Funktion beschriftet sein und es sollte ein knappes Tutorial am Anfang geben, das die Steuerung des Fahrzeugs, sowie das Ziel des Spieles erklärt. [U]\n2. Bumpers soll sollte so robust programmiert und getestet sein, sodass schummeln nicht möglich ist. [R]\n3. Der Input Lag und die Performance von Bumpers sollte so gut sein, dass zwischen dem Klicken auf das Spielfeld und dem reagieren des Autos auf die Eingabe maximal 1 Gametick liegen darf. [P]\n4. Durch Vererbung und Strukturierung des Codes sollte es möglich sein, einen neuen Fahrzeugtyp in weniger als 10 Minuten hinzuzufügen. [S]\n5. Außerdem sollte der Gamecode durch Interfaces so übersichtlich und sich selbst lesend geschrieben sein, dass neue Mitarbeiter am Code ohne den gesamten Quelltext verstehen zu müssen an bestimmten Teilen des Codes Erweiterungen vornehmen können. [S]\n6. Zuletzt wird erwartet, dass das Spiel sowohl mit Touch, als auch mit Mauseingabe funktioniert und auf x86-64 als auch auf armv8 Systemen läuft. [S]",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1281580,
      "meta": {},
      "text": "Usability:\n\t1. The Game should show at most 5 Buttons, so the player can easily navigate through the game view\n\t2. The car should be steered without most three actions performed by player (for example: only one mouse click to steer cars direction instead of a lot of different actions such as pressing keyboard buttons etc)\n\nReliability:\n\t3. The program should ignore any other input that could be given by the player. For example pressing a keyboard button while car is driving shouldn't interfere with the game/the players mouse clicks\n\nPerformance:\n\t4.  The system should handle at least 20 cars driving, steering and crashing at the same time without any trouble \n\t5. The program should handle at least 5 different cars driving at the same time and 3 different Collision Types being used in a single play (for example: Collision types could change during a game play due to any kind of input/incident )\n\nSupportability:\n\t6. The program should be implemented, so that new cars, collision types, etc. can be added to the game easily within 30 minutes",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282553,
      "meta": {},
      "text": "Usability:\n1. The start and the stop buttons should be clearly displayed on the player's screen without them being covered by anything and being at least 1.5cm in width and height. \n2. In the case player loses or wins, there should be a notification visible to the player with a description saying if the player won or lost, also ending the game. \n3. There should be an information box the player has access to where the player can read and understand about the rules and goal of the game. \n\nAdaptability: The Bumpers game should be playable on any devices with a mouse and a display no matter which platform the device uses. \n\nAccuracy: Every collision should be evaluated correctly according to the type of the collision.\n\nSafety: The Bumpers game should be tested with at least 5 edge cases before it can be played by players.\n\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282824,
      "meta": {},
      "text": "Usability:\n\t- The player can start and stop the game\n\t- The controls of the car are intuitive\nReliability: \n\t- The game should be able to handle a large number of cars and collisions without crashing\nPerformance:\n\t- Collisions and their winners have to be recognised in under 0.05 seconds \n\t- The player should be able to change the speed of the car instantly \nSupportability:\n\t- The game should support different kinds of collisions which can be changed during gameplay",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1283727,
      "meta": {},
      "text": "Usability:\n- the player should be able to start the game with at most 2 interactions\nReliability:\n- prevention of cheating or hacking exploits so no player has an unfair advantage\nPerformance:\n- the game should be able to support at least 2 players simultaneously\n- the player cars should be able to change direction every 100ms\nSupportability:\n- the game should be supported on the current versions of Windows, macOS, Android and iOS\n- the game should create and open a new gameboard if more than 2 players want to play simultaneously",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283989,
      "meta": {},
      "text": "NFR1: The user should thoroughly understand the game and can use every feature of the game within the first ten minutes of playing the game for the first time. [usability]\n\nNFR2: The game should not crash if coincidentally three cars crash into each other. [reliability]\n\nNFR3: The game should easily handle at least 30 cars simultaneously and still run smoothly with at least 25 fps. [performance]\n\nNFR4: The game should allow to add new car types in less than a day. [supportability]\n\nNFR5: The game should allow 4k 60fps settings, which should run smoothly for high end pc users (2000€+ pc) [performance]\n\nNFR6: The user should be able to change the difficulty and restart the game with less than 3 clicks [usability]\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285770,
      "meta": {},
      "text": "1. [Usability] At most 2 clicks are required to start a game.\n2. [Reliability] The game should not freeze more than once every 100 games on average.\n3. [Performance] The game should run at a minimum of 25fps on this reference machine (low-end laptop from ... brand ... model)\n4. [Supportability] The documentation should be hosted somewhere along with the source code to help future improvements.\n5. [Reliability, Safety] The game must be playable by epileptic players. Maximum flash/brightness changes comply with standards.\n6. [Usability] The buttons must be at least 1cm large on a 1920x1080 screen.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287164,
      "meta": {},
      "text": "Usability:\n- The game should support a menu that is accessible via the ESC-Button which allows the User to change the collision type during the gameplay.\n- The game should support a Sound menu inside the settings that allows the user to change the volume of the sounds an effects on a scale from 0 - 100 \n\nReliability:\n- Robustness: All wrong inputs besides steering the car or accessing the menu via the ESC-button should not interfere with the gameplay of the user and the game should resume as no wrong input happened. \n\nPerformance:\n- The response time of the user steering the car and the action on the board should not extend 133ms (input lag) \n- The game should be able to handle at least 6 occurring collision at the same time on the game board without any error or crashes \n\nSupportability:\n- Adaptability: The game should run on both iOS and Windows Systems",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287257,
      "meta": {},
      "text": "1. Usability:\n\t- The player car should always be easy to tell apart from the other cars and the background (e.g use complement colors) (1)\n\t- When the game starts, the opponent cars should not spawn near the player car. The player should have at least 0.5 seconds to react. (2)\n\t- On mobile the car can be steered with your finger. (3)\n2. Reliability:\n\t- The game might introduce an account system, were player can be notified via email on new updates. The account credentials should be verified with 2fa. (4)\n3. Performance:\n\t- The game should be able to handle the user input quick even if they come in very fast. Because small entities move quite fast, the game should always support at least 60fps. (5)\n4. Supportability\n\t- The developers should support the game with monthly updates and bugfixes. (6)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287658,
      "meta": {},
      "text": "1. The user interface of the game should have a visually clear way of starting and stopping the game, likely through a menu. \n\n2. The one car that the user is controlling should follow the mouse pointer, and speed control should be proportional to the distance at which the mouse pointer is from the icon of the car being controlled.\n\n3. The way a collision is determined should be clear from the types supported, and configurable from the user interface, likely through a menu. \n\n4. The game should consistently declare the winner of all collisions as the game winner. \n\n5. The interface should always make it visually clear to the user when bug fixes, updates or new versions of the game are available.\n\n6. The game's evaluation of every collision type and consequently the collision winner should be done efficiently and not slow down the user experience. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287820,
      "meta": {},
      "text": "1. Je nach Betriebssystem ( Windows, MacOS oder Linux ) soll sich die GUI an die Standardpositionen der Komponenten des jeweiligen Betriebssystems halten und dementsprechend platzieren.\n\n2. Die Schrift der Labels soll in den Einstellungen bis zu 200% vergrößerbar sein.\n\n3. Die Variablen sollen nicht extern mit CheatEngine veränderbar sein.\n\n4. Es sollen min. 100 Autos gleichzeitig mit min. 60 FPS fahren können.\n\n8. Die Wahrscheinlichkeit, dass das Spiel abstürzt, soll unter 0,2% liegen.\n\n9. Neue Funktionen sollen hinzugefügt werden können, ohne alte Dateien verändern zu müssen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1287892,
      "meta": {},
      "text": "Non-functional requirements:\n\nUsability: \n- It has to take a maximum of 3 clicks for a user to start the game to improve satisfaction/user experience\n- there have to be at least 25 cars, which a player can select; 10 of these are slow cars and the rest are fast cars \n- a player can steer the direction of his car with the mouse or the touchscreen (if available)\n\nReliability: \n- the score and state (still in game or disqualified) of each player is saved on a sever every 5 seconds, so that the game can be reloaded and started from the last save point in case it crashes or internet connection is lost\n\nPerformance:\n- the game has to support at least 10 cars on the game board, irrelevant if these cars steered by a player or if the cars are bots\n\nSupportability:\n- the game can be played by Smartphones (Android and IOS) and Computers (Windows and MacOS) platform independently and have the same functionality on every operating system",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281400,
      "meta": {},
      "text": "Supportability: \n\tThe game can be played on common platforms (i.e. IOS, Windows, Android)\nRobustness: \n\tThe system should tolerate input of at least 10 clicks per second\nUsability: \n\tThe game can be started within two clicks\n\tThe game has a Stop-Button as an emergency exit to end the game with one click\nPerformance: \n\tThe game starts within two seconds in at least 99%\nMaintainability: \n\tWithin the classes and packages should be an MI of at least 85 MI",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283110,
      "meta": {},
      "text": "Usability:\n\t- The game should start with one click of the start game button\nReliability:\n\t- The should check that a car never drives faster than the maximum speed of that car\nPerformance:\n\t- The game should run with at least 30 FPS\n\t- The direction of the player car should be updated at most 50 milliseconds after a mouse press\nSupportability:\n\t- New types of cars should be able to be added easily, the general game logic to handle cars should be agnostic to the type of the car.\n\t- The game should be able to be played on Windows/Max/Linux",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283529,
      "meta": {},
      "text": "NFR1: The player shouldn't need more than 1 click to start or stop the game.\n\nNFR2: Either with a tutorial or a notification window: the player needs to be informed that the he can steer the direction of the car using the mouse.\n\nNFR3: It should't take more than 3 clicks for the player to change the collision winner during gameplay.\n\nNFR4: The game has to work correctly and not crash on all kinds of platforms (Windows, Linux, Mac)\n\nNFR5: The game should be able to run with at least 30FPS when more than 20 entities are on the gameboard.\n\nNFR6: The game shall not crash or become unstable when the player tries to make any inputs other than left-clicks",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283800,
      "meta": {},
      "text": "Quality requirements/ non-functional requirements:\n\nUsability: \n-\tThe Start and the Stop Buttons is always visible in the game\n-\tThe Start and the Stop Buttons have the keyboard shortcut space (--> Efficiency of Use)\n-\tThe size of any text (e.g. Buttons, Score, ...) must appear at least 0.5 cm on all devices\n\nReliability:\n-\tIf a failure occurs, the system should always tell the user the error message and a suggestion how to overcome the failure\n\nPerformance:\n-\tAfter clicking the Start oder Stop Button, the game starts in less than 0.25 seconds\n\nSupportability:\n-\tIf the resolution/ size of the game-window changes, the game has to adapt to the new circumstances by resizing the buttons, the cars and the game board",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283992,
      "meta": {},
      "text": "NFR1 Usability: \nThe player needs at most 5 clicks to choose car and collision type and start the game.\n\nNFR2 Robustness:\nThe game can tolerate wrong user input and doesn't crash or change gameplay in any way.\n\nNFR3 Performance:\nThe game shouldn't  drop below 60 frames per second even if the max. amount of cars are on the gameboard.\n\nNFR4 Availability/Downtime:\nThe game should save the previous settings so the player doesn't have to change them back when opening the game up again.\n\nNFR5 Adaptability:\nWhen the player wins five games in a row, he's declared as \"too good\" and the difficulty is ramped up, meaning there will be more and faster cars. Also the other way round if he looses five games in a row.\n\nNFR6 Maintainablity:\nIf bugs occur in the endproduct, the code should be simple enough to understand, so the bugs can be fixed within 1 day since  the game is very important to the customer due to marketing reasons.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285475,
      "meta": {},
      "text": "1. Usability:\n\t- Der Spieler soll im Startbildschirm den Collisionsmodus mit 2 Clicks ändern können\n\t- Das Spiel soll ohne Texteingabe gespielt und die Modi geändert werden können \n          (Knöpfe)\n2. Reliability:\n\t- Security: Das Spiel soll Attacken auf die Manipulation der Spieleinstellungen und \n                         Spieldynamik verhindern\n3. Performance:\n\t- Availability: Das Spiel soll nach der Installation unabhängig von Nutzerzahlen oder \t \n                              Servern sein  (Offline-Game)\t\n\t- Response time: Das Spiel sollte auf eine Richtungsänderung durch den Nutzer innerhalb      \n                                    von maximal 1ms reagieren \n4. Supportability:\n\t- Portability: Das Spiel soll Plattformunabhängig sein. Für Windows, MacOS und \t\t\t\t \n                             Linux verfügbar\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1286615,
      "meta": {},
      "text": "Usability: To start/stop the game, the user needs only one click.\n\nPerformance: The game should support at least 50 cars simultaneously at the game board.\n\nPerformance (Accuracy): The game should detect collisions 99% of the time correct.\n\nReliability (Security): The player should not be able to manipulate the game so that he can, for example, create his own collision types, which never let the player lose. \n\nSupportability (Maintainability): The game should be expandable so that it can be added different collision types and cars.\n\nPerformance (Response time): Start and stop the game should happen within 1 second\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286868,
      "meta": {},
      "text": "Usability:\n\t1: The player should be able to start or stop the game with one click\nReliability:\n\t2: It is not possible, that coincidences lead to multiple winners of a crash, there should be always only one \t\t\t\t\t\t \t \n            winner per crash.\nPerformance:\n\t3: There is exactly one car controlled by the player\n\t4: The player should always be able to steer the car\nSupportability:\n\t5: The game should be platform independent.\n\t6: Audio output should be possible on the system",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287173,
      "meta": {},
      "text": "1. Das interface von Bumpers muss einfach zu lernen sein. Das heißt, der Benutzer sollte sich beim ersten öffnen intuitiv zurechtfinden, durch gut beschriftete Buttons. Außerdem muss die Steuerung so simpel gehalten werden wie möglich, für ein besseres Einprägen.\n(Usability)\n\n2. Bumpers muss robust sein. Das System sollte auch bei falschen eingaben z.B. einem Rechtsklick statt Linksklick weiterhin Funktionieren. (Reliability)\n\n3. Das Spiel sollte auf verschiedenen Betriebssystemen laufen (MacOS, Windows, Linux), also Plattformunabhängig sein, wodurch es egal ist wo man es spielt (Supportability)\n\n4. Der Benutzer sollte Updates bekommen, die Bugs fixen und neue Inhalte zum Spiel hinzufügen. Dadurch kann der Spiel-Entwickler das Spiel an die neuen Anforderungen vom Nutzer anpassen (Supportability)\n\n5. Der Benutzer sollte das eigene Auto gut erkennen, das heißt das Auto muss anders aussehen als alle anderen Autos und groß genug sein auf dem Bildschirm. (Usability)\n\n6. Das Spiel darf nicht langsam / ruckelnd laufen. Die Steuer Signale der Maus müssen sofort umgesetzt werden ohne Verzögerung und das Bild vom Spielfeld darf nicht ruckeln, sollte also möglichst schnell \"refresht\" werden (Performance)\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1283819,
      "meta": {},
      "text": "Usability: the player should be able to start playing the game in less than two clicks, namely one to start the game and one to choose between fast and slow car.\n\nMemorability: the way to play the game and control the car should be easily remembered. therefore the number of keys required to move the car should be kept at minimum, namely mouse for steering and one key for changing the speed. \n\nReliability: if the player drives the player's car outside of the boundaries of the game the game should not break and maintain its functionality for example by not allowing the car to exist the boundaries of the game board.\n\nPerformance: the calculation of whether or not there was a collision as well as whether the player has won or lost the game should not take that long because the time required for that calculation can be consider the downtime. Since if the program doesn't use mulitthreading one collision at a time can be determined and while that calculation is happening another collision can happen, therefore the downtime should be very low so it wouldn't disrupt the game play.\n\nSupportability: \nMaintainability: the game should be easily modified by a developer for example in case new type of car or collision is required to be added. A way to satisfy this requirement is for example by operate classes correctly and inheritance.\n\nsecurity: the game should be protected against intent ended incident. for example by keeping most attribute private or protected so an outsider can't change those value easily and cause problem.\n\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284329,
      "meta": {},
      "text": "The task ahead is to specify 6 quality requirements for our Bumpers game. These should cover all the URPS categories, Usability, Reliability, Performance and Safety. \n\nRegarding the first category, Usability, the player needs at most 4 clicks to start the game. Pressing the start button, choosing his car, choosing the collision type and then beginning the game. Furthermore it is a very simple and usable UI, without a lot of confusion or unnecessary additions. \n\nThe second category is Reliability. This can be further worked into subcategories like robustness, safety or security. This point is under robustness. In the base version, if the player would try move out of the playing field, he will be \"bounced\" back. He cannot go out of bounds. \n\nThe next category is Performance regarding the system. For example if the system is stable under the load or the response time. In the Bumpers Game there is no real possibility of excess stress to the system, as the base version is not very graphic intense. Adding to this, through the same reasoning, the response time is minimal aswell. \n\nThe final category is Supportability. This can be be also partly be understood as the adaptability of the product. We will further add bug fixes and support further systems in the Bumper game. \n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284498,
      "meta": {},
      "text": "NF1: When the user changes the speed, it should affect the car within 0.1 seconds.\nNF2: The design of the game should be suitable for all platforms.\nNF3: User can open the game within 2 seconds. \nNF4: Sound effect must be played within 0.1 second when accident happens.\nNF5: The winner of the crash must be shown within 1 second.\nNF6: The Bumpers Game must allow adding or removing new functions and attributes. ",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285150,
      "meta": {},
      "text": "1. The player should be able to steer the car with mouse only.\n2. The parameters of the player car is always visualized during the game and are attached to the player car.\n3. The game should work without problem on all windows and iOS platforms.\n4. The platform should support at least 1.000 players playing at the same time.\n5. Up to 100 potential collisions in a single game should be evaluated correctly in under 1s.\n6. A new type of collision can be added at anytime without changing other existing types of collisions.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286077,
      "meta": {},
      "text": "1. The player must crash all cars in order to win.\n2. The car is controlled by the player as he can steer the direction with his mouse.\n3. The crash sound can be heard when two cars bumped to each other.\n4. The player can control the speed of the car as he choses either a fast car or a slow car.\n5. The player can prevent his car from crashing by avoiding other cars.\n6. The speed of one car is controlled 100% by the player. ",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1286289,
      "meta": {},
      "text": "Usability:\nThe player needs at most one click to start the game.\nThe player needs at most one click to stop the game.\n\n\nReliability:\nThe system should tolerate at least 3 car types.\n\nPerformance:\nGame music is played within 0.5 seconds after starting the game.\nPlayer steering input should be processed within 0.001 seconds.\n\nSupportability:\nThe determination of the collision can be changed during gameplay.\nThe system should support a multi platform functionabilty \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1280533,
      "meta": {},
      "text": "- Usability:\n  - The Player should be able to start the Game with less than 3 clicks\n  - The Controls should be able to learn within a few tries (straight forward)\n-  Performance\n  - The Game should be able to display everything at minimum 30frames per second\n  - The Game in its final form should only be 1-10mb big.\n- Supportability:\n  - It should only require a new Class to create a new Car (Module)\n- Reliability:\n  - The Game-Music should stop and start with the game",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1280854,
      "meta": {},
      "text": "For NFRs to hold any value they need to be: Bounded, Independent, Measurable, Testable.\n\nUsability\n1) To make the game playable and fun, there should be more than three and less than 10 cars on the game board.\n\n2) There should be at least three different collision criteria from which to switch during gameplay, so that the collision winner can be determined in different ways.\n\n3) To make sure the user has full control of his car, there should be a visualization of the speed and the consumption of the car on the screen after the game has started. This visualization should end as soon as the game is stopped.\n\nReliability\n4) To offer a way out for the user in case a bug occurs, in any point of the game there should be a \"stop\" button present, with which the user can exit the game.\n\nPerformance\n5) The the determination of a winner in any collision should not exceed O(n^2) in runtime complexity. This should be measured and tested through multiple inputs.\n\nSupportability\n6) The game should support the operating systems Linux, Windows and MacOS. Therefore, it will be platform independent for all major platforms.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284829,
      "meta": {},
      "text": "Usability reqirement: When used on a device with touch screen, the button to control the speed is on the left an the one to control the direction is on the right in default, but this can be changed in the settings.\nUsability requirement: the Buton for the settings is easy to find in the main menu without searching for it or first pressing another button and the categories for the settings have easy to understand names\nReliability requirement: The user is asked if he really want to quit by leaving the game, so that ha cant close it without wantig it (e.g. when he uses a mobile device with a return funtion by swiping to the left)\nReliability reqirement: when there are in app purchases (for example for new car skins) (also by purchases with in-app money) the user get asked if he really wants it (can be disabled in settings)\nSupportability: The system is made to be able to adapt to the most common screen sizes, and when it doesnt support the screen size it goes to the most fitting setting",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284921,
      "meta": {},
      "text": "Usability: With just one mouse click the player can control the direction and speed of the car, which makes the control of the car efficient/fast and easy to learn, memorize, since moving the car requires no action other than a mouse-click in the desired direction. \n\nSupportability/Portability: The game is platform independent, therefore it is portable and can be played in different environments, which also implies that the game is adaptable, as it can be adjusted to different requirements of different platforms.\n\nSupportability/Adaptability. Different types of cars (regarding speed) and collisions are supported, moreover the winner of each collision is determined according to current condition of the cars, which shows the game tolerates and adapts to different choices and inputs of the player.\n\nPerformance: There is less than 100 ms latency between each mouse click and the movement of the car, so the game has fast response time. Furthermore the game supports multiple throughputs/transactions at the same time such as simultaneous, periodic movements of many cars, while also visualizing parameters of the cars and playing a music in the background.\n\nPerformance: The game doesn't terminate after starting it, as long as there isn't a winner or the player stops the game. Thus the game has 100% uptime and availability.\n\nReliability: For safety you can't start the game while it is running or stop the game when it's not running, as the corresponding buttons are disabled. Moreover wrong mouse-click inputs (outside of the gameboard) are ignored/tolerated by the game and don't cause exceptions.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285127,
      "meta": {},
      "text": "1. Usability: \na) Learnability: to play the Bumpers game, players need only mouse and a bit of space (~10-15 cm in width and height on a desk). The mechanics are simple and can be mastered by spending a low amount of time in-game (the only skill-based required technic is the crosshair-placement which allows the player to master the movement of the car).\n\n2. Reliability:\na)  Security: the Bumpers game prevents unwanted bad in-game-experiences (\"bugs\") through a fine-tuned collision system based on stuning hit cars and playing a corresponding sound effect.\n\n3. Performance:\na) Response time: the game is responsive because of the good-written code which predicts all of the directions and in-game-scenarios which leads the player to real-time steering with his/her car.\nb) Availability: the game is available all the time cause it has been designed in single-player formula - player needs only free time and a device to spend nice time.\n\n4. Supportability:\na) Adaptability: Bumpers supports nearly unlimited difficulty levels- it depends on developer or player how many cars are on the gameboard. The movement is settled in such a way, that tens of cars on the gameboard can be maintained at the same time by the program\nb) Maintainability: the Bumpers game can be visually transformed into other type of game using different textures (for example space ships instead of cars) or adding new type of sounds which leads to changing player's perception.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285188,
      "meta": {},
      "text": "NFR1 Usability: The Bumper Game should have the functions \"start / stop the game\", \"change speed\" directly on the main page you play on. \n\nNFR2 Usability: There should be no more than 7 buttons on the main page you play on.\n\nNFR3 Reliability: The game should not stop or crash if the start game function is pressed while the game is already ongoing.\n\nNFR4 Reliability: There should be a confirmation request after clicking on stop game as to not have the player unintentionally close the game.\n\nNFR5 Performance: The game should respond to every action the player takes in half a second or less.\n\nNFR6 Supportability: The game should run the same on different platforms.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281831,
      "meta": {},
      "text": "Usability:\n- The tester interacts with the game through a keyboard and a mouse.\n- The game can be easily restarted, allowing for more time-efficient hardware testing.\n- Many features of the hardware can be tested with the game. This means that the controls are not to be limited by a reduced set of directions or configurations.\n\nPerformance:\n- The game should have a high response speed and quickly react to the user's input.\n\nPortability:\n- The game should be platform independent and be as portable as possible, allowing installation on different machines.\n\nMantainability:\n- The field of hardware development requires testing under varying circumstances. Because of this it is reasonable to expect the testing software to be easily adaptable to constantly changing needs and the design to be simple and configurable. (For example, a hardware developer might want a test that requires to move the mouse across a larger portion of the screen than the necessary to steer the car on the current implementation of \"Bumpers\")\n",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1281915,
      "meta": {},
      "text": "Usability\n1. The player can steer the direction of the car with the mouse\n2. The game should visualize different parameters of the car\n\nReliability\n3. When cars crash, there has to be a sound effect.\n\nPerformance\n4. The game should support different collisions. \n5. The determination of the collision winner should be changeable during gameplay.\n\nSupportability\n6. The game should be platform independent\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281937,
      "meta": {},
      "text": "NFR1: Usability: The player should be able to start to play the game within 5 clicks.\nNFR2: Performance: The game should have a response time between 1 to 5 ms.\nNFR3: Availability: The user should be able to play the game at any time. The availability should be at least 99.9%.\nNFR4: Accessibility: The text of the game should appear at least 1cm high, and have a luminance contrast ratio of at least 4.5:1.\nNFR5: Learnability: The user should be able to play the game properly only after reading a start prompt.\nNFR6: Adaptability: The game must be available for these operative systems: Windows, Linux and MacOS.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1281987,
      "meta": {},
      "text": "1) The player can start and stop the game and steer the direction of the car and change its speed (Usability)\n2) The game is platform independent (Reliability/Supportability)\n3) The game visualizes different parameters of the car, e.g. the speed, consumption and location of the car (Usability)\n4) There should be a sound effect when the car crashes and when the game is started (Performance)\n5) The game should support different collisions and the determination of the collision winner should be changeable during gameplay (Supportability)\n6) There should be a winning car in each collision (Performance)",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282906,
      "meta": {},
      "text": "Usability:\n\t1. To change the collision winner must not require more than 3 clicks.\n\t2. The playerCar must use a different model, then all the other cars. \n\nReliability:\n\t3. The game must function and look as intended, even when the player changes the size of the \t\t\t\n\twindow. \n \nPerformance:\n\t4. The game must handle up to 10 cars simultaneously. \n\t5. Starting the game must take less than 3 seconds.\n\n\nSupportability:\n\t6. A developer must be able to add a new collision type to the selection, without manually adjusting \t\t\n\t\tthe user interface.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283071,
      "meta": {},
      "text": "Usability:\n•\tThe player can start and stop the game at all times\n•\tA car’s speed, consumption, and location are always visible to the user when playing the game\n\nReliability:\n•\tThe system can play multiple sounds at the same time\n\nPerformance:\n•\tThe game can launch within 10 seconds\n•\tThe game can handle up to 30 cars on a gameboard at once\n\nSupportability:\n•\tA new car type can be added in under 30 minutes by a student who has passed the TUM course “Praktikum: Grundlagen der Programmierung”\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284240,
      "meta": {},
      "text": "Usability:\n1. You can start or stop the game by just one click.\n2. The player should know how fast his car is going and how long he can drive until he runs out of fuel.\n\nReliability:\n3.No matter what buttons the user presses or wherever he clicks in the game, it should never crash.\n\nPerformance:\n4. The game should run with a consistent framerate even on low end hardware.\n\nSupportability:\n5. It should be possible to update the game in  the future with new collisions or the like.\n6. The game should be runnable indipendent of the platform you are using, at least it should run on Linux, Windows and Mac.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284954,
      "meta": {},
      "text": "1. Usability:\n- user can start game and stop it at every moment by clicking two buttons (user control and \"emergency exit\");\n- user interact with a mouse;\n- player steer the direction of the car with a mouse and change its speed;\n- game visualise the speed, consumption and location of the car (visibility of system status).\n\n2. Reliability: prohibition of critical configuration changes for the user (Safety: risk reduction).\n\n3. Performance: one-user game, user control only one car.\n\n4.Supportability: platform independency.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285383,
      "meta": {},
      "text": "Usability: The car images must be unique, i.e. visually different from each other\n\nReliability: The player information (name, id, etc.) must be secured against attacks.\n\nPerformance:\n1) The game must handle the at least 10 cars moving at the same time.\n2) The loading time at the start of the game must be lower than 0.5 seconds.\n3) The response time for control input from the user must be less than 10 miliseconds.\n\nSupportability: New collision types can be added to the game without easily (i.e. without changing other parts of the source code).\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285954,
      "meta": {},
      "text": "- the user should be able to start a new game in 3 clicks or fewer\n- even with many (at least 5) collisions happening on screen, the game should have >= 30 fps\n- the problem should not have faults even when closed abruptly by the user\n- loading assets and starting a new game should take at most 1 second\n- Documentation e.g. javadoc should exist for the entire codebase\n- when the program is started, the UI should be visible after at most 1 second",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285996,
      "meta": {},
      "text": "Wikipedia reference:\nFURPS is an acronym representing a model for classifying software quality attributes:\n\nFunctionality- Capability, Size, Generality of Feature Set, Reusability, Compatibility, Interoperability, Portability, Security, Safety, Exploitability\n\nUsability - Human Factors, Aesthetics, Consistency, Documentation, Responsiveness\n\nReliability - Availability, Failure Frequency, Robustness, Durability, Resilience, Failure Extent, Time-Length, Recoverability, Survivability, Predictability, Stability, Accuracy, Frequency, Severity of Error\n\nPerformance - Speed, Efficiency, Resource Consumption, power, ram, cache, Throughput, Capacity, Scalability\n\nSupportability - Serviceability, Maintainability, Sustainability, Repair Speed, Testability, Flexibility, Modifiability, Configurability, Adaptability, Extensibility, Modularity, Installability, Localizability\n\nNFR 1)\nUsability - NFR\nThe player can control exactly one car.\n\nNFR 2)\nUsability - NFR\nThe player can start and stop the game.\n\nNFR 3)\nReliability - NFR\nAll cars drive independently of each other and of others' collisions.\n\nNFR 4)\nReliability - NFR\nAll collisions must always initialize a sound effect no matter what.\n\nNFR 5)\nPerformance - NFR\nThe application must support parallel processing to evaluate all cars' movements within very short time frames.\n\nNFR 6)\nSupportability - NFR\nThe System must free up and update the gameboard for other cars after a crash has occurred.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1286210,
      "meta": {},
      "text": "NFR1 Usability: Players need at most 8 clicks to start a game. \nNFR2 Reliability: Not more than 1 per 1,000 games should result in a critical error that forces the game to stop.\nNFR3 Performance: The average response time between a click of the player and the reaction of the application needs to be less than 0.4 seconds.\nNFR4 Supportability: The game should receive a patch with bug fixes every two weeks.\nNFR5 Usability: There is a clearly marked exit button on the top right which allows players to leave the game and close the application at any time. \nNFR6 Supportability: The game should enable the addition of a multi-player mode for 2 players (maintainability).",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287536,
      "meta": {},
      "text": "Usability:\n\t- The game should have dedicated start/stop buttons placed at the top of the game window for easy access at all times\n\t- After the game has started, either the title bar of the window should display playing game status, and/or the start button should be disabled, until stopped again\n\nReliability:\n\t- The game should adjust to the size of the user's screen and furthermore have options for custom gameboard sizes\n\nPerformance:\n\t- The game should be able to handle at least 10 randomly spawned cars excluding the player car\n\t- The game should respond to the user mouse-clicks instantaneously with a maximum permissible delay of 100ms on heavy loads\n\nSupportability:\n\t- The game should be able update itself in the background without having the need to manually uninstall and then reinstalling the updated version",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287678,
      "meta": {},
      "text": "1.: Safety: \"There is one car controlled by the player.\" --> only one car can be controlled by the player, so no unwanted incidents occur.\n\n2.: Adaptability: \" The game should support different collisions.\" --> the game can be changed easily, to adapt to new trends etc.\n\n3.: \"The player can start and stop the game.\" this should be intuitive.\n\n4.: Performance requirement: \" When cars crash, there has to be a sound effect\"\n\n5.: Performance requirement: \" The determination of the collision winner should be changeable during gameplay.\" --> this should be very efficient hence performant, so the flow of the game is not disturbed\n\n6.:  The game should be platform independent.\" --> the game shoule be portable, so runnable on any operating system ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1288071,
      "meta": {},
      "text": "- The user should be able to play in 10 seconds after starting the game\n- No userdata should be saved and can therefore not be compromized\n- There should never be more than 4 Buttons at a time\n- The time from a click to a change in the cars direction should not be over 100 ms\n- There should be at least 50% test coverage\n- Adding a new type of car should at most take 15 minutes more than the actual implementation of the car",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280948,
      "meta": {},
      "text": "1.Usability\nEasy to play: The game rules of Bumpers must be intuitive. A Player should learn how to play before starting the game. A Player can learn the Bumpers game in less than 10 minutes.\n\nUser interface: All different parameters of the car must be visible to the player. This includes the speed, consumption and location of the car.\n\n2.Reliability\nThe Bumpers game should be safe in 90% of its runtime.\n\nThe Bumpers game can withstand general attacks from the Internet. Such as virus and Trojan horse.\n\n3.Performance\nIn 95% of cases, the start-up time of the Bumpers game must be less than 10 seconds during normal hours and 30 seconds during peak hours.\n\nThe availability of the Bumpers game is at least 98%. \n\n4.Supportability\nThe Bumpers game must support two different types of cars, fast cars and slow cars. The player can use the mouse to control the direction of the car and change its speed. It must be in the range of minimum and maximum speed.\n\nThe Bumpers Game can support IOS, Android , windows operating system.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282179,
      "meta": {},
      "text": "-Usability: Different car images should make different car types easily distinguishable, Mouse steering should make the control over the cars direction and speed easy to understand and quickly to learn and internalize\n-Reliability: Changing of collision type during gameplay should be stable and don't evoke gameplay crashes\n-Performance: The game should be available on different platforms, Performance shouldn't be lagging even when multiple cars crash with the players car at the same time\n-Supportability: The crash is recognized under all collision types and car types",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283922,
      "meta": {},
      "text": "Usability:\n(1) The user / player controls one car, steers the direction of the car with the mouse and can change its speed.\n(2) The initial amount of cars on the game board should be limited to 15 cars in order to prevent too many collision in the beginning of the game.\n\nReliability -> Robustness: \n(3) In order to win a game, the car has to win all collisions. The game has to maintain / fulfil this condition.\n\nPerformance -> Response time:\n(4) When the user presses the mouse (in one direction), the car should change its direction within 1s.\n\nPerformance -> Availability:\n(5) If the player presses his mouse or his keyboard over 20 times in 5s, the game should not crash.\n\nSupportability -> Portability:\n(6) The game should be platform independent, meaning that the game has to run on and adapt to different platforms such as macOS, Linux or Windows.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283923,
      "meta": {},
      "text": "Quality Requirements:\n\nUsability:\n- The player should be able to start a game by simply clicking the \"Start\" button. Although the winner of the collision is changeable, there is a default winner so that the player can start the game with just one click and not have to bother about other matters.\n- The player should be capable of changing the speed of the car by simply pressing the space bar. The car should speed up when the player presses the spacebar until it reaches the top speed, and it should slow down when the spacebar is not pressed.\n- All text in game should be at least 1.3 inches high and have an easy-to-read color that is always in contrast with the background.\n\nReliability:\n- The functionality of the game should not be depending on an internet connection and potentially not work if there is no connection.\n\nPerformance:\n\t- The game should start in less than 5 seconds* and have a frame rate of at least 50 fps*. (* Minimum performance requirement for a 6th generation Intel i3 processor).\n\nSupportability:\n\t- The game should be platform independent and have a single code base for the three operating systems: MacOS, Windows and Linux to provide an easy maintainability.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285894,
      "meta": {},
      "text": "Usability: \"The user can change the speed of the car with at most 2 clicks\"\n\nUsability: \"The user's car's icon should stand out from the other cars\" \n\nUsability: \"The user can visualize the speed of his/her car while playing\"\n\nReliability (Robustness): \"The game keeps working even if the player enters a negative or too high speed for the car\"\n\nPerformance: \"The system can tolerate up to 3 changes of direction of the user's car in 1 second\"\n\nSupportability (Adaptability): \"The game can be played on different platforms and is not affected by the chosen platform\"\n\n\n\n\n\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285900,
      "meta": {},
      "text": "1. Usability: - jede runde hat einen Gewinner\n2. \t\t    - das Spiel wird immer gleich gestartet und gestoppt\n3. Reliability: - das Spiel soll auf jedem end gerät spielbar sein\n4. Performance: - die Kollisionen sollen während der Laufzeit berechnet werden\n5. Supportability: - die Art der Kollisionen soll man während der Laufzeit ändern können\n6.      \t\t     - der Code soll so aufgebaut sein, dass man das spiel jederzeit mit minimalen aufwand ändern kann",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1287358,
      "meta": {},
      "text": "Non-functional requirements:\n1. Usability: the player needs at most one click to start the game\n2. Usability: the player's car must be clearly marked so the player can easily recognise their car\n3. Reliability: if the user enters an invalid input, the system must not accept it and display the input-prompt again with a message telling the user what inputs are accepted\n4. Performance: the system supports at least one user/player\n5. Performance: the availability of the system is at least 99%\n6: Supportability: errors/bugs are clearly labelled/described so that a develop can easily maintain the system",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282807,
      "meta": {},
      "text": "NFR1 Usability: The game is easy to learn and has a non-gamer friendly UI.\n\nNFR2 Reliability: The game should be well optimized to not overheat (>60 degrees Celcius) the recommended graphic card of the user.\n\nNFR3 Response Time: The delay of actions happening on the screen comparing to input of the player should not be greater than 5ms.\n\nNFR4 Adaptability: The game should be prepared to change the input device of the user (i.e. keyboard -> joystick) mid-game, without the need to restart the whole system.\n\nNFR5 Rightfulness: The game need to comly with all the legal advices written in \"The Great EIST Code Of Conduct\" to be able run for the bonus points.\n\nNFR6 Delivery Of The Game: The games has to be delievered for Linux and macOS.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283955,
      "meta": {},
      "text": "Usability:\n- The user should be visually notified when he wins or loses a collision\n- all actions, such as start game/stop game/choose car etc. should be clearly laid out and labelled, start/stop game can be one button that changes functionality\n\nReliability:\n- no way to pass an input to the program\n\nPerformance:\n- the game should be able to handle at least two collisions at the same time\n- each start of a game should take at most one second\n\nSupportability:\nthe game should be written in a language that is supported on many different platforms, such as Java or Python",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285156,
      "meta": {},
      "text": "1. To steer the car the player only needs clicks, namely the player can finish a game without a keyboard. Besides, if the player does not have a mouse, he/she can also play this game only with keyboard. For example, pressing \"Enter\" to start the game, \"Esc\" to stop, \"WASD\" to steer the car. (usability)\n\n2. If the player misclick on an another programme, for example on the desktop or on a web browser, the game should not crash, but be paused until the player clicks back on the game. (reliability)\n\n3. The game should react within 0.1sec after the player clicks, otherwise the player can not steer the car accurately. (performance)\n\n4. The game can be operated on Windows, macOS and Linux. (supportability)\n\n5. If the client does not like the backgroundmusic or some soundeffects, the developer should be able to change them  within 15 minutes.\n\n6. Before starting the game, the player can choose to watch a demo which introduce the rules in 1 min.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285540,
      "meta": {},
      "text": "Usability\n-The UI should be intuitive and easy to use; free of any cluster. Ads should only pop-up in the menu and not during the game itself.\nReliability\n-The game should store all of the collected data in a secure manner.\nPerformance \n-The game should be able to maintain steady 30fps on all devices at all times\n-There should not be any noticable latency and input delay\nSupportability\n-The game should be playable on the 3 most widely used operating systems: Windows, Linux, MacOS\n-Furthermore, the game should have a mobile port (Android and IOS) and a Console port for the most widely used consoles (Xbox, Sony PS, Switch)",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286032,
      "meta": {},
      "text": "Usability:\n1. User can start or stop the game. \n2. User steer his/her car with a mouse and can change its direction and speed\nReliability:\n3. Whatever collision happens, the game should still continue to run correctly. \nPerformance:\n4. The game should correctly visualize different parameters of the car, e.g. the speed, consumption and location. \n5. The game should detect a collision instantly when car crash and evaluate the winner within  a second. \nSupportability:\n6. The game should be platform independent. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286248,
      "meta": {},
      "text": "U :Players can start and stop the game with 1 one click\n    To ensure satisfaction of the user the pixels of the carpictures should be atleast HD    \nR: The game tolerates atleast 30 entities without violating the perfomance requirement\nP: Starting and stopping the game should happen within 50 ms\nS: The Game should support new type of collisions\n   The game should also support new cars \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286394,
      "meta": {},
      "text": "Usability: A player needs to click 3 buttons, to be able to start the game.\n\nUsability: The game should load in less than a minute.\n\nReliability: The game shouldn't be prone to cyberattacks.\n\nPerformance: The game should be able to handle a maximum of 2.000.000 people on it's server every second, this also means that there's no downtime.\n\nSupportability: The game can be played on every platform.\n\nSupportability: The game's update times shouldn't take more than an hour.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286634,
      "meta": {},
      "text": "Usability:\n                         .)The player can steer the car with a maximum of 4 button.\n                         .)The size of the cars should not exceed 10% of the size of the diagonal of the game board. \nPerformance:   \n                         .) For a collision to occur, the two cars must be in full contact without a single gap between them.  \n                         .) the sound effect of the crash should not be longer than 1,5 second.\nReliability:         \n                         .)Under normal use, there is 95% of chance that the game will not experience a critical failure.\nSupportability:\n                         .)In full screen mode, the game should be displayed at its maximum size on all screen types.  ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286660,
      "meta": {},
      "text": "Usability: \nLearnability → it is easy to use\nError handling → when there is an error, the game will instantly stop\nReliability: \nRobustness → when the user enters a wrong input, the game will be stopped \nPerformance:\nThere is only one person, who could play the game \nAdaptability: \n→ it is very easy to adapt changes in the game, but you need to change the code for it\nMaintainability:\nwhen a developer gets the exercise to change the car picture or the sound, it is very easy make new requirements",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281570,
      "meta": {},
      "text": "Usability:\n- The player should always be able to start and stop the game. \n- Parameters that should be also controlled by the player are the direction of the car using the mouse and the speed of the car. \n\nReliability:\n- By starting the game, music should be played.\n- When the player's cars crashes with another car, a special sound effect should be played (crash sound). \n\nPerformance:\n- The game should run smoothly, meaning the game should have an adequate fps rate and there shouldn't be any delay in the change of direction of the player's car. \n\nSupportability:\n- The game should run on any platform, independent of the operating system of the computer. \n\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284073,
      "meta": {},
      "text": "URPS:\n\n6 Quality requierements:\n\nnon functional requirements are pleasing and invting looks and sounds. This means that a player could also play a game with loud and disturbing sounds which only uses colors that give you a headache. These issues would non be important for the function but they are quality requierements,\n\n\nThe usabilty is also very important as you don´t want to fill the screen with a lot of unnessecary information like how much ram it uses and similar stuff. No player needs it and it doesn´t affect the function but it could ruin the quality of the game as the player cant see anything.\n\n\nThe Reliability is for example that the game should always be playable and that by realiable. This has a hugh impact on the quality and that by the user experience.\n\n\nThe Performance is also important as a game should run smoothly and without laggs. Because they ruin the quality of the game as well. \n\n\nTHe Supportability can also be very important for the quality of the game. For example if the player can download add ons for the game or if in the case of crashes or errors there is constant support for the players. This is also import for the quality.\n\nAntoher point is the size of the game. Playeres want to play instantly and they don´t want to spend days downloading big games and big updates every few weeks. This will ruin the joy for players. \n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284159,
      "meta": {},
      "text": "NFR1: The user should need just one or two clicks to run the game or start the round. \nNFR2: The game UI shouldn't be overwhelmed with multiple buttons and should use a total of two buttons to start and stop the game. The User Interface should be as minimalistic as possible.\nNFR3: The game has to handle multiple cars bumping to each other and not crash during the evaluation of the collisions.\nNFR4: The game has to be cheatproof throughout the game round. For example: A car change shouldn't be possible during an ongoing round.\nNFR5: The game has to evaluate the collisions in less than the reaction time of the player or <1s. There should be no delay in terms of updating the score and gameboard.\nNFR6: The game has to be modular/needs to be easy modifiable in setting the background of the gameboard or the icon of the every car type.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284760,
      "meta": {},
      "text": "Usability: In every scenario the player needs a maximum of 2 clicks to be able to fully start or stop the game. (Question window included)\nReliability: When the user enters his name (when starting the game), all numeric characters need to be removed and the name needs to be at least 1 character (after removing all numeric chars).\nReliability: For a secure connection from the client to the server (for login), the TLS protocol needs to be used.\nPerformance: The game needs to guarantee all of the time a minimum frame rate of 30FPS with hardware equal or better then: 16GB Ram, Intel i7-10870H 2.2GHz 2208MHz 8 Cores and NVIDIA GeForce RTX 3060 Laptop GPU.\nPerformance: The login servers have to guarantee an uptime of at least 99%.\nSupportability: The game needs to be supported 100% on following operating systems: Windows 7, Windows 10, MacOS, Linux Ubuntu\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285352,
      "meta": {},
      "text": "non-functional requirements:\n\n1. NFR1 Usability\n    - The user should not require more than 3 button clicks to navigate through the game menu and start\n       the game, including options and all potential choices before the game starts\n    - The Buttons should conform to norms expected by the user. I.e. The option menu should be labeled\n      with either \"options\", \"settings\", a gear symbol or something similar.\n2. NFR2 Reliability\n    - The game should never simply crash, instead all errors should either be completely avoided or\n      handled gracefully and recovered from if possible.\n3. NFR3 Performance\n    - The game should run with at least 30FPS to avoid visible lag and stuttering\n    - Starting/loading a new game should not take more than five seconds\n4. NFR4 Supportability\n    - It should be possible to port the game to another system without having to rewrite more than 10% of\n      the code",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285796,
      "meta": {},
      "text": "NFR 1: The game should run on at least 144fps/hz (U / P)\nNFR 2: The input delay should not exceed 50ms (U / P)\nNFR 3: The game must start without an internet connection (R)\nNFR 4: Not more than 300MB or RAM are to be used (P)\nNFR 5: It must be easy to add new features (S)\nNFR 6: The game must be platform-independent (S / U)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286750,
      "meta": {},
      "text": "Usability \n\n1. Starting the game needs to be possible with a botton. \n\n2. The game can be restated easyly when it crashes.\n\n3. The Game board can be scaled to diffrent screen-sizes\n\nReliability \n\n4. Players need to be 4 years or older.\n\nPerfromance \n\n5. After pressing the start button, the game needs to start wthin 1 second response time. \n\nSupportability \n\n6. The game can be played on mor than one operating systems. \n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287758,
      "meta": {},
      "text": "Usability:\n*The user should be able to play bumpers only with a mouse.\n*The game parameters should be displayed that the user is able to easily read them, even during an very stressful, competitive bumpers e-sport session. Text size should be at least 10 mm, color should be chosen in way that there is a high contrast to the background.\n\nReliability:\n*All game parameters should be secured against intended incidents.\n\nPerformance:\n*The response time of the player controlled car to new direction inputs via the mouse should be as low that the player does not recognize any delay.\n\nSupportability:\n*Bumpers should be extensible, which means that it should be easy to add new features, customizations, at next version upgrades\n*The code of bumpers should be structured in a way which leads to a high maintainability of the software. The mean time to repair should be <= 12 hours. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280446,
      "meta": {},
      "text": "Usability:\n- gut erkennbarer Start-Knopf\n- gut erkennbarer Stop-Knopf\n- das Spielerauto ist für den Spieler sofort erkennbar\n- für das Steuern reicht das Bewegen der Maus in die gewünschte Richtung aus, kein zusätzliches Klicken erforderlich\n- wenn das Spiel vorbei ist, erscheint eine Nachricht, die dem Spieler das mitteilt\n- es sind höchstens 20 Autos gleichzeitig auf dem Spielfeld\n\nReliablity:\n- wenn der Spieler das Auto gegen eine Wand steuert, soll das Auto solange an der Stelle bleiben, bis wieder in eine mögliche Richtung gelenkt wird\n- wenn der Spieler eine Geschwindigkeit auswählt, die bereits eingestellt ist, wird diese einfach nicht verändert\n- wenn 3 Autos ineinander kollidieren, soll die Kollsion dem Kollisionstyp entsprechend mit den zweiten Autos die als erstes kollidiert sind richtig ausgewertet werden\n- es soll auf verschiedenen Geräten mit verschiedenen Mäusen funktionieren\n- es soll nur auf die Mausbewegung und nicht auf sonstige Eingaben des Spielers reagiert werden\n- wenn der Spieler gegen ein bereits ausgeschiedenes Auto steuert, soll das SpielerAuto normal weiterfahren\n\nPerformance:\n- auch bei schnellen Mausbewegungen, wird die Richtung korrekt erkannt\n- auch bei 20 gleichzeit fahrenden Autos, bleibt das Spiel fließend \n- auf Mausbewegungen des Spielers wird zügig reagiert\n- das Auto fährt möglichst exakt in die Richtung der Maus\n- es kann gleichzeitig gelenkt und die Geschwindigkeit verändert werden\n- Soundeffekte sollen zeitgleich zu ihrem Auslöser ertönen\n\nSupportability:\n- die Geschwindigkeiten der Auto können verändert werden\n- die Soundeffekte sollen verändert werden können\n- die Bilder der Autos sollen verändert werden können\n- die Platform soll gewechselt werden können\n- die Musik soll verändert werden können\n- es sollen verschiedene Kollsionstypen hinzugefügt werden",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1280453,
      "meta": {},
      "text": "Usability: \n- The GUI has to be instinctive, so that everybody is able to use the game.\nReliability: \n- The game has no access to the Internet, so that no data can be misused.\nPerformance: \n- The response of the game start hast to be within 30 ms, every other action has to be done within 1 ms.\n- The service has to be available for at least 95% a year.\nSupportability: \n- The game as to be available for Windows and Mac users.\n- The code needs a good documentation and also other developers need to the possibility to add easily new cars\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281436,
      "meta": {},
      "text": "NFR1: Usability\nThe game should easy to login and the description of the rules in game should especially easy to understand with good examples.\nNFR2: Adaptability (of Supportability)\nThe enviroment of each user's computer is different, so the ability and function of the game should be adaptable.\nNFR3: Maintainability (of Supportability)\nOnly if a game is added new functions continuously, can it always popular. So the game should be maintainable.\nNFR4: Performance\nEvery game should not be, that every time only one player allowed to play it. This game should simultaneous users support.\nNFR5: Robustness (of Reliability)\nMany players will press some wrong places because they are not familiar with the game. The game should have a strong ability to maintain a function.\nNFR6: Security\nThe password of each game account can not be known by others.\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282754,
      "meta": {},
      "text": "6 quality requirements:\nUsability: The player needs to click on the start button and can get the outcome of the game without steering the car or with several clicks.\nReliability/Robustness: The game cannot be crashed in a normal environment.\nPerformance: the system can handle up to 100 cars.\nPerformance: The game must be always available to be played.\nSupportability/Maintainability: New features such as a new car should be able to be added to the game within 2 minutes.\nSupportability/Portability: The whole game should be under 15mb.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283315,
      "meta": {},
      "text": "NFR1: Usability: The system should be intuitive to use. That means it should only consist of a \"Start\" and \"Stop\" button and the player should be able to control the car just with the mouse. The status of speed, consumption and location of the car should always be clearly displayed on the screen.\nNFR2: Security: The user should not be able to manipulate the game score by any means.\nNFR3: Availability: The system should not require an internet connection to be used and thus should be available offline. \nNFR4: Portability: The system should be platform independent and run on Windows, MacOS and Linux.\nNFR5: Performance: The loading times for all elements when starting the system should not take longer than 1 second. The game should run at least at 30 fps on all Intel 12th generation chips, AMD 4th generation chips and Apple Silicon M1 chips.\nNFR6: Maintainability: The system should be developed in way so that new car types and collision types can be added in the future easily.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283365,
      "meta": {},
      "text": "U:\n- visualization of car parameters on HUD, so that less eye movement is required (satisfaction)\n- all interaction of user with system done via mouse input (satisfaction)\n\nR:\n- no bugs (safety)\n\nP:\n- must a frame rate of 25 fps at least (response time)\n- start up time maximally 10 seconds (response time)\n\nS:\n- the game should be platform independent (portability)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283554,
      "meta": {},
      "text": "Usability:\n\n1. The maximum number of clicks for any function in the system should not exceed three clicks. Currently, there are 4 major functions in my implementation - select car type, select collision type, start game, stop game. \n\n2. The user must be able to view the position and speed of his car and the number of other cars remaining on the board. \n\nReliability:\n\n1. The Bumpers game must not crash for at least 99.7% of its runtime.\n\nPerformance:\n\n1. The maximum response time between click and reaction for steering functionality is 0.5 seconds. (This is especially important for steering the car so that users do not have a lag). The maximum loading time for the Bumpers application is 5 seconds. The maximum response time between click and reaction for all other functions is 1 second. \n\nSupportability:\n\n1. The Bumpers game must be operational and run without any bugs on Windows version 8 or newer and macOS version 10.14 or newer\n\n2. The Bumpers game must be able to run with a minimum 1 GB of RAM\n\n3. The Bumpers game must include code documentation and troubleshooting documentation.\n\nImplementation:\n\n1. The bumpers game must be implemented in Java",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283892,
      "meta": {},
      "text": "Usability: The User can control the car by using the mouse. Visualizing different parameters of the car makes it similar to the real world and increases the memorability (Memorability). Playing an background music increases the satisfaction and gives an better user experience (Satisfaction/ user experience).\n\nReliability: \n-Robustness\n1) After starting the game the cars should always be on the game board and be able to crash each other.\n2) Different collision types should be supported and evaluated correctly. \n3)There is only one winner at a time. During gameplay the collision winner shouldn't stay the same if the rules for determining the winner changes.\n-Security\n1) The user shouldn't be able to manipulate the winner of the game by giving different inputs.\n\nPerformance: There is only one car controlled by single user during the game. Different Information like the speed, consumption and location of the car should be handled. (Throughput)\n\nSupportability: The game should be able to adapt to environment changes. Should have the same the functionality independent of the platform. (Adaptability)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284426,
      "meta": {},
      "text": "The player should be able to start the game within two clicks. The game should not crash from user input and if errors occur a maximum of five minutes of playtime may get lost. The gameplay should adapt to worse and better players that an average run can take up to five minutes. The steering of the car should be responsive and react within 0.5 seconds. If lag spikes occur the game should open the pause menu to prevent the player from dying unfairly. Login information of the user as well as connection to the internet should be encrypted at all times. The gamedesign should be modular so that a new developer does only have to know about a single module and be able to fix bugs or implement new features there. The game should be able to detect the players mouseclicks within a single pixel accuracy. The game should be uninstallable and remove all files and folders that have been created by it. Volume of music and sound should be changeable in the pause menu and the start menu and adjust the volume while the sliders are still being moved. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284510,
      "meta": {},
      "text": "NFR 1: Usability: The player needs only one click to move his car.\nNFR 2: Robustness: The game can handle more than one collision type at once.\nNFR 3: Performance: The game can only handle one player at a time.\nNFR 4: Adaptability: The game can change its collision types.\nNFR 5: Maintainability: The game can be updated directly after an error occurs.\nNFR 6: Usability: The player needs 2 clicks to change the image of the car.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284702,
      "meta": {},
      "text": "Usability-> A user could play Bumpers game without the need of reading any instructions.\nReliability->Bumpers should be able to handle more than 100 crashes .\nPortability-> it should not matter which interface did we use to make bumpers game , it should be available on mac, iOS or android or in other words could be moved from any one OS to other .\nPerformance-> In case a player wants to change his car type in middle of game , he should be able to do that within frame of seconds or the person wants to  change music or whatsoever  . it purely depends on performance of the game board.\nMaintainability->It should support client based / cloud based architecture or any other new architecture that might come in near Future or atleast it could be re - modelled/ developed.\nSecurity -> it(Bumpers) should not leak user's personal Information. User here means the person on whose PC/ Mobile bumpers is downloaded.  ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285182,
      "meta": {},
      "text": "Usability:\n1. The user must be able to start and end the game upon request within 3 clicks\n2. Clearly provide feedback on why every game was lost/won (permanent opt-out possible by checking box on feedback window)\n3. The game window size (and all of its contents) should be scaled to be adjusted to the screen size: 55% of screen width, 40% of screen height\nReliability:\n4. The game must not expose sensitive configuration information in error messages\nPerformance:\n5. The system must correctly respond to all user inputs correctly that had a break of at least 10ms between actions\nSupportability:\n6. The game must be able to run on all supported operating systems with all its functions, provided the correct version of java is installed",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287266,
      "meta": {},
      "text": "Usability: Selceting a new collision type should need 3 clicks at most.\nUsability: The game should have a contrast ratio between text and background of at least 4.5:1;\nReliability: Clicking outside of the GameBoard should not lead to a direction change.\nPerformance: The game should be able to process at least 5 direction changes per second.\nPerformance: The game should be able to support at least 20 cars driving at once.\nSupportability: It should be possible to add new collision types.\n\n",
      "score": 100,
      "language": null
    },
    {
      "id": 1287496,
      "meta": {},
      "text": "1-) Non functional requirement-simultoneously playing:\nPerformance:\nThe bumpers game is a play,that various players play the game simultaneously. At the same time various players drive on the game board and crash each other, so that the game system can evaluate the winner or loser cars at the same time. \n\n2-) Non Functional requirements-Visualising parameters\nPerformance:\nAt the same time amount of information handled:The game visualises at the same time various parameters.for instance: speed,consumption and the location of the car.And at the same time the game plays music.\n\n3-) Non Functional requirement:\nSupportability:\nAdaptibility: The game can adapt the changing circumstances.\nFor instance the game should be platform independent. It can be played both in ios and android.\n\n4-)Non Functional Requirement\nReliability:\nSecurity: The play can not hacked somebody to be winner  of the game, the game can be won only by winning the all collisions. \n\n 5-)Non Functional requirement:\nUsability:\nThe player can steer the direction  and  change the speed of the car, just by using the mouse.\n6-) Non Functional Requirement:\nUsability:\nWhen the player learns how to play the game, it is easy to remember the game by 2nd time of playing the game.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287827,
      "meta": {},
      "text": "- NFR1 Usability: at least 3 different color schemes should be available, to account for colorblindness and user preference\n- NFR2 Performance: startup time of the game should be no longer than 5 seconds\n- NFR3 Reliability: the probability of failure for starting a game should be below 1%\n- NFR4 Supportability: Adding new car types or collision types should take no longer than 1 week\n- NFR5 Performance: while playing the game, the change of direction should happen at most 0,05s after the mouseclick\n- NFR6 Usability: the user should need no more than 2 clicks to start the game from any interface (e.g. settings)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280348,
      "meta": {},
      "text": "Usability:\n- Player should be able to steer the vehicle with his mouse\n- Player should be able to change the Speed of his vehicle\n\nReliability\n- Every Collision should be evaluated correctly and all parameters should be true\n- Music should alwas be playing when Game is started\n\nPerformance\n- Game should be lag-free and respond in a maximum of 50msec per Mouse input (I am sorry, i haven't seen a single performance criteria in the text)\n\nSupportability\n- Game has to be platform independent",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1280611,
      "meta": {},
      "text": "1-Player can start the game with click on start Button and steer the car just with mouse click and wins the game when he has won all the collisions.(Usability)\n2-collisions can be changed by player.(Adaptability)\n3-the number of players is 1 and he can control just 1 car.(Performance)\n4-If the player uses the keyboard, nothing will happen in the game.(Reliability.Robustness)\n5-When the player slows down his car, he can control the car more easily(risk reduction).(Reliability.Safety)\n6-Changing the direction of the car is done by the player clicking in less than 1 second. (Supportability.Maintainability)",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282174,
      "meta": {},
      "text": "Usability:\n• The game needs to be able to be started with less than 3 clicks.\n• While playing the game, the determination of the collision winner should be changeable with less than 3 clicks.\n\nReliability:\n• One should not be able to crash the game by configuring settings or playing the game.\n\nPerformance:\n• The game should run with at least 30fps on the slowest supported computer.\n\nSupportability:\n• The game should still work correctly if the user changes the window size while playing.\n• New car types and collision types should be addable without having to change any existing collisions/cars.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287450,
      "meta": {},
      "text": "Usability:\n- The player needs maximum three clicks to start the game with the chosen car type.\n- The buttons which start and stop the game should always be displayed in the top left corner.\n\nReliability:\n- While the game is running, the program ignores every keyboard input and it processes only the mouse input until the game stops.\n\nPerformance:\n- The program does not need more than one second to load the cars on the game board and start the game.\n- The crash sound that is played when two cars collide with each other is not delayed more than 0.5 seconds after the crash\n\nSupportability:\n- The size of the game board including the cars should be scaled automatically to the window size whenever the player is changing it.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287576,
      "meta": {},
      "text": "1.The player should be able to steer his car by clicking onto the map with his mouse-pointer at the desired location.     The car should then move the chosen location in order to follow the instructions of the user. (Usability)\n\n2.The player should be able to select his car-type and his wanted collision type in the starting menu by selecting everything in a drop-down menu right at the beginning of the game. (Usability)\n\n3.If the player fails to select his own car or manages to trigger a bug in the car selection, that causes no car selection, the game should choose a random car in order to function in a normal way without crashing the whole game. (Reliability)\n\n4.The game should at least support an amount of minimum 10 cars (including the players car) and should work flawless in terms of performance. Actions like changing the direction of the players car should not lead to lags or any other performance problems. (Performance)\n\n5.The game should also support playing on different platforms (i.e. in the webbrowser or on the phone) and different operating systems (windows,linux, macos etc.). It must also have no performance issues. (Performance)\n\n6.When changing the players car, the game should adapt to the new collision style of the selected car and should change in a way that when the player crashes his car, that the new collision is used for the collision evalution. (Supportability)\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287709,
      "meta": {},
      "text": "Usability: 1. At first there should be hints poped up to remind the player to steer the directionand change the speed of the car with the mouse.\n2. The interface should be clear and clean and the car should be obvious so that the user can understand quickly which car he/she is operating.\n\nReliability: 3. The system should remain stable and keep running when mistaken input being operated by the user.\n\nPerformance: 4. The availability of the system should be at least 97.5%.\n5. The system should allow at least 2 operations of the user per second.\n\nSupportability: 6. The system should be easy for developer to correct defects and fix the problem within 12 hours.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281524,
      "meta": {},
      "text": "Usability : \nThe player can select  a car in game with one click .\nyou can start and stop the game with two clicks .\n\nReliability : \nthe game stops if you click outside the window.\nif ther is no internet the game will stop alone.\n\nPerformance :\nthe game can be played just alone .\n\nSupportability :\nthe game can only be used by a windows,mac computer.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281945,
      "meta": {},
      "text": "Usability\n- Learnability: The game should only have maximum of three player controls to be intuitive\n- Error Handling: If the game crashes there should be a possibility to restore the game from the most current checkpoint that's at maximum 5 seconds before the crash\nReliability\n- Robustness: While playing the game, invalid inputs that have nothing to do with steering, accelerating or decelerating, changing the collision or stopping the game should be ignored\nPerformance\n- Response Time: The response time to player inputs (steering or speed change) should be less than 50ms.\nSupportability\nPortability: The game can be customised to run on different platforms with low effort (max. 2% of total development cost)\nMaintainability: To ensure high maintainability, the total sum of lines of source code is limited to 1.000\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281959,
      "meta": {},
      "text": "NFR1: Usability: Beta-Testers of Bumpers should be able to figure out how to control their car within 3 minutes without prior instruction.\nNFR2: Usability: All menu items should be in the same, non-serif font at a size of at least 10.\nNFR3: Reliability: The winner of a crash should be evaluated correctly in at least 98% of cases.\nNFR4: Performance: Bumpers should evaluate the winner of a collision within 0.1ms.\nNFR5: Supportability: The code should be written according to the Google Style Guide (google.github.io/styleguide/) for the chosen programming language. Each class should have a dedicated page in the documentation outlining its functionality.\nNFR6: Supportability: The Bumpers application should run both on computers and on Apple and Android smartphones with the player controls adapting accordingly.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282319,
      "meta": {},
      "text": "Usability:\n\t1:The user should be able to start the game with at most 3 klicks.\n\t6:If the player want's to leave the game, there should be a red button, that is always displayed,\t\n\t\tthat, when clicked, terminates the game.\nReliability:\n\t2:The game should ignore accidental typings on the keyboard, that are not used, to steer the\n\t    car.\nPerformance:\n\t3:The game should be able to have 10 cars on the game board.\n\t4:The game should only not be available, when there is an update.\nSupportability:\n\t5:The game should run on Windows and macOs\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285391,
      "meta": {},
      "text": "Usability:\nDer Spieler kann schon in drei Schritten das Spiel starten. \n\nDer Spieler kann seine Musikplaylist mit in das Spiel einbinden und während des Gameplays mit seiner Musik spielen. Auch sind verschiedene Farben und Felgentypen für die einzelnen Fahrzeug verfügbar, damit der Spieler mit seinem Wunschfahrzeug spielen kann.\n\nReliability: \nMan muss eins von den vorgegebenen Autos auswählen, sonst darf man das Spiel nicht starten. \n\nFalls der Spieler versucht, mit unerlaubte Methoden zu cheaten, wird dieser gebannt und vom Spiel ausgeschlossen. \n\nPerformance:\nDer Input Lag zwischen Mausklick und Reaktion des Wagens beträgt maximal 5ms, damit das Gameplay nicht beeinflusst wird. \n\nSupportability: \nDas Spiel ist sowohl auf einem mobilen Endgerät als auch mit einem PC oder Laptop spielbar. \nEs ist möglich, neue Autos hinzuzufügen ohne das ganze Spiel offline nehmen zu müssen. \n\n\n\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1285615,
      "meta": {},
      "text": "Quality requirements (URPS) is an acronym for the non-functional requirements which consist of Usability, Reliability, Performance, and Supportability.\n\n1. NFR1 Usability: The player only needs one click to start or stop the game.\n\n2. NFR2 Memorability: There is only a specific amount of rules the player needs to remember. The car steering with the mouse is easy to learn and with a small interface of parameters (speed, consumption, and location of the car)  and the collisions there is not a lot of complexity behind the idea of Bumpers.\n\n3. NFR3 Reliability(Robustness): There is no discernible input --> only the mouse steering and start/stop buttons. The rest of the game runs by itself during the gameplay. It is not possible to have the wrong user input.\n\n4. NFR4 Performance(Availability): The game runs offline and restarts by itself after a stop and start. Bumpers can be built into an executable which will be always available to the player.\n\n5. NFR5 Supportablilty(Adaptability): The system will be able to work for different types of car speeds and collision types. Also, in case the border of the game is reached on one side, the player's car will appear on the other side at the same y-axis.\n\n6. NFR Supportability(Maintainability): Bumpers functionality and interface are coded in separate class files that are connected. Depending on what needs to be changed (gameplay, interface, assets, ...) there is only a need to find its related class file and changes made there will be effective for the whole game as other class files may either inherit, access, or overwrite the change.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285861,
      "meta": {},
      "text": "Usability:\n-The game should be playable in less than 3 clicks\n- The player interacts with a mouse\n\nReliability:\n-The system shall not crash when the player enters a wrong input / gives more than one input information at once\n\nPerformance:\n-Stable refreshrate of at least 25Hz\n-100% uptime since all updates are optional\n\nSupportability:\n- Bugs can be fixed within one day\n- The game is platform independent",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286227,
      "meta": {},
      "text": "Usability: \n - To start a game the player has to click at most two clicks.\n - The GUI should have at most 5 buttons at once on the screen.\nReliability:\n - Security: When the player tries to make the car faster than intended (e.g. by changing game files), the game blocks the access of the player.\nPerformance:\n - The Game never needs to load longer than 0.5 seconds.\nSupportability:\n- Updates get installed without having to reinstall the game. \n- The game can automatically adapt to a gamepad as soon as one is connected and it changes to the one that was lassed pressed.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286389,
      "meta": {},
      "text": "- Usability: The game doesn't have more than five input keys, so that the player isn't overwhelmed.\n- Usability: The user is able to start and stop the game at any time.\n- Reliability: When the user uses a touch pad instead of a mouse the game recognizes the input correctly.\n- Performance: The game should run at 60 frames per second even on low-end computers.\n- Performance: The games input lag is below 50 ms and isn't recognizeable for the user.\n- Supportability: The game works on Linux, Windows and MacOS.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286711,
      "meta": {},
      "text": "Usability:\nNFR 1 : Information about the user's car, when a crash happens or any pop up should be clearly expressed to avoid user confusion.\nNFR 2 : It should take no more than 3 clicks for the user to start the game and play. This includes the collision and car type, and start game.\nNFR 3: Clearly communicate to the player when he wins, once he has crashed all other cars, and stop the game. \n\nReliability:\nNFR 4: If the user where to enter the wrong input, the game should communicate this to the player and ask for his input again.\n\nPerformance:\nNFR 5: The average response time of the users click and movement of the car should lay around 30 - 40 milliseconds.\n\nSupportability:\nNFR 6: The game should perform equally irrespective of the user's platform of choice such as MacOS, Windows, Linux.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287082,
      "meta": {},
      "text": "NFR1 Usability:  The players need at most 3 clicks to start a new game.\nNFR2 Usability: The player should deal with no more than 10 other cars which aren't controlled by him\nNFR3 Reliability: The game should pause if players tab out the window\nNFR4 Performance: The player shouldn't experience any loading screens longer than 5 seconds in the game\nNFR5 Portability: The game should run on different OS \nNFR6 Performance: The game is only playable by one person at the same time\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280255,
      "meta": {},
      "text": "- Usability\n1. Satisfaction / user experience: The player should need no more than 4 clicks to start a new game.\n2. Satisfaction / user experience: The game resolution should offer the option for at least 1080p (1920 pixel horizontally and 1080 pixel vertically).\n\n- Reliability\n3. Secturity: The game should not store any personal information.\n\n- Performance\n4. Performance: The game should be able to support 1 user and 15 computer driven cars, while still recognizing collisions in no more than 5 milliseconds.\n5. Availability: The online-gaming opitons should be available at least 99.5% of the time.\n\n- Supportability\n6. Adaptability: The game should adapt in real time to changes in the settings, like changing the collision type.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282122,
      "meta": {},
      "text": "A first non-functional quality requirement for the game would be a good and intuitively way the player drives his/her car. Given that the car of the player needs to be steered with the mouse, it makes sense, that the car drives to the location the player klicks at with the mouse. This supports the usability of the game. \nThe reliability of the game will be guaranteed by the requirement, that the game will be independent of the system itself, its running on and the fact, that the code will be kept as much privacy modified as possible.\nAnother requirement for the game is that it can be played all the time, which sets the availability of the game to 100%, since it is not connected to outer circumstances. If you got the file of the game, you can play it, also if someone is working on another version or an update.\nAs it says in the problem statement, the game needs to be platform independent. Therefore the portability of the game is very high, meaning it is easy to send it to a friend for example or play it on different environments.\nThe problem statement also states, that there should be different types of collision as well as slow and fast cars. Because of that it is promising, to program the game object-oriented. By that the adaptability and maintainability is increased. For example it is easier to create another type of car fix some problems with only one of the collision types.\nThe crash sounds and the background music are not exactly important for the functionality of the game, but the really support the user experience when playing the game.\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282911,
      "meta": {},
      "text": "Usability:\nPlayer should be able to play the game using only one Hand.\nPlayer must be able to change the direction of the car with only one click.\n\nReliablity:\nWhen playing 5000 rounds the game should at max crash once.\n\n\nPerformance:\nThe Game should be able to run with at least 50 cars while maintaining 24 Frames per Second.\nThe Game should be able to process at least 10 clicks per second input by the user.\n\nSupportability:\nThe Game must be able to run on all Windows and MacOS systems.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283909,
      "meta": {},
      "text": "NFR1: Supportability: The Game should run on all desktop operating systems.\n\nNFR2: Usability: The system should be intuitive to use, and the user interface should be\neasy to understand. It shouldn´t take more than two clicks to start playing. \n\nNFR3: Conformance to guidelines: The design of the system should conform to the typical\nusability guidelines such as Nielsen’s usability heuristics.\n\nNFR4: Visibility: During Playingtime the stats such as speed, Location etc. should be clearly visible\n\nNFR5: Performance: The Game shouldn´t take more than 1 minute to load.\n\nNFR6: Reliability: The System should be able to handle at least 30 cars in one game.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284467,
      "meta": {},
      "text": "NFR1) Usability: Player should be able to complete every action he wishes with one click (for example: Player shouldn't have to close any window after his defeat. There should be a button to start new game right away.\n\nNFR2) Reliability: Game should guarded and not fail with error in case that: 1. car won collision with the 2. car but lost collision to the 3. car in the same second.\n\nNFR3) Performance: Game should generate new board (with cars and their assigned speed) in less than a second.\n\nNFR4) Supportability: Game should support 'high-contrast-mode' to ensure that people with low vision or photosensitivity can play this game\n\nNFR5) Performance: Car should change his direction in 0.1s after player's command\n\nNFR6) Supportability: In case something caused game to crash, player should be able to contact customer support of this game",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284607,
      "meta": {},
      "text": "Usability requirement:\n1. The player should not need more than four buttons in order to steer the car and adjust the speed of the car\n2. The buttons to steer the car left, right and ahead should be allocated left, right and top to each other on the screen, so the steering becomes intuitive/ fast to learn for the player.\n\nReliability requirements:\n3. The game doesn't end when the player accidentily clicks on an unneeded button on his keyboard (except for the esc- button).\n\nPerformance requirements:\n4. The sound effect of a crash between two cars should be hearable within one second after the crash happens.\n5. The removal of the opponent's car / the display of the message the player has won the game should happen / appear within two seconds after a crash has happened.\n\nSupportability requirements:\n6. If the player undertakes updates on his/her operating system the game still runs / remains playable, plus remembers the players top score.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284855,
      "meta": {},
      "text": "Robustness - The user is able to move in a maximum Radius of 7cm of the Mouse, to make sure the computer is able to safely track and apply the movements.\n\nSafety - The Software has guaranteed safety, is provided through the correct installations of Operating System and the safe/guaranteed functioning software for a safe user-experience.\n\nSecurity - The security of the Software, is achieved through the regular check of any external malware that somehow could be implemented and lead to malfunction.\n\nPerformance - Having a software that allows users of the Bumpers game to be able to play for 1.200 seconds without having sudden and long term freezes of the screen, and without sudden crashes of the game.\n\nAvailability - The Bumpers game should be available at least 99.8% of the Day, allowing for just over 20 Minutes a week of software updates and else, at the statistically found least used Period of the game, to guarantee a Reliability that is very high, with maintenance windows.\n\nAdaptability - The software is able to function when on Mac OS, whilst also functioning on Windows, Linux and other Operating systems. To allow for the Usability of all persons.\n\nUsability, Reliability, Performance and Supportability",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285427,
      "meta": {},
      "text": "NFR1 Usability: They player need at most 2 clicks to start the game.\n\nNFR2 Usability: The letters of the game, for example the \"start game button\" should have a minimum size of 1cm in their height.\n\nNFR3 Reliability (Security): The game should prevent the inclusion of viruses and other attacks on the game, so it should prevent also that somebody intrude the game.\n\nNFR4 Perfomance: The game should not take longer than 5 seconds to start.\n\nNFR5 Perfomance (Availability): The Downtime of the game should not be longer than 1 hour per week.\n\nNFR6 Supportability (Maintainability): The game should be able to change the music afterwards.\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285741,
      "meta": {},
      "text": "Quality requirement:\n\n- Usability: \nThe player should be able to start or stop the game within one click.\nThe player should be able to easily change the speed of the car while directing it, to achieve this changing the speed of the car should be makable with click in the mouse.\n\n- Reliability:\nThe system should be able to work without problems for at least 2 hours.\nIf the players leaves the game abruptly, the game should be reseted for the next time the game is reopen.\n\n- Performance:\nWhen the car is crashed the sound should appear within 2seconds.\n\n\n- Supportability: \nChanging the collision time during the game should be feasible within 5seconds.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286008,
      "meta": {},
      "text": "1. NFR Intuitive control: A simple game should, should not be difficult to control\n\n2. NFR Fun game: It should be fast and intuituve and hook the players to the game.\n\n3. NFR Pleasant music: Bad music or sounds make it unpleasant to play.\n\n4. NFR Flawless Performance: Such a small game has to work without any lags or it's just not fun to play.\n\n5. NFR Extensibilty: It should be easy to add new Collision Types or Cars to the game as the standard version can be boring.\n\n6. NFR Configurability: The players should be able to change the Diffculty, the car and Collision Types for more variety.\n\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287245,
      "meta": {},
      "text": "URPS:\n\nUsability:\nNFR1: Easy to Play:\n1- Players need at most 3 clicks to start the game.\n\nReliability:\nNFR2: High Reliability:\n2- The game is reliable, which should mean that it does NOT crash in 95% of the runtime. \n\nNFR3: Security Before All:\n3- The application should be secure, in which the users do not face viruses, attacks after allowing the application to make changes in their computers. \n\nPerformance:\nNFR4 Quick Responser:\n4- The game should have a quick response, which should not be above 1 second, to all activities throughout the gameplay. \n\nSupportability:\nNFR5 Supports the New:\n5- The game should be able to cope with new requirements. (REASON: there can be new updates to the game from the feedbacks of the players/ customers)\n\nNFR6: Supports Different Features:\n6- The game should support different car types (FastCar and SlowCar) and different range of car speeds.FastCar and SlowCar are supposed to have differing range of speeds given as their maximum and minimum throughout the game. The game should support the speed of the cars throughout the game play, as the car speeds up or slows down in the given ranges. \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287292,
      "meta": {},
      "text": "Usability:\n- The player can steer and change speed with only one click / movement and both at the same time.\n- The font of all shown statistics and text is always at least 1cm high.\n\nReliabiliy:\n- The game seemlessly adapts to a changed window size and no visual artifacts occur during the change.\n\nPerformance:\n- The game should react to user input in at most 50ms.\n- The game should maintain at least 60 frames per second.\n\nSupportability / Portability:\n- Replacing a texture in the game should be possible by adding a file as well as changing a single line, this should be possible in under 2 minutes.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287789,
      "meta": {},
      "text": "Note: I have added the specific sub-category of the URPS in some places to explain why I believe they belong to that category\nRequirement 1: Performance: The game should take no longer than 5 seconds to load\nRequirement 2: Usability: Different enemies should be easily distinguishable due to different appearance\nRequirement 3: Supportability: Car textures and music should be easily accessible so that they can be updated by just changing one line of code per asset\nRequirement 4: Reliability (Security): It should be impossible to manipulate the state of the game outside of the UI while it is running to prevent cheating\nRequirement 5: Usability & Performance: Stopping and restarting should immediately return the game to its base state without additional loading time\nRequirement 6: Usability & Supportability (Portability): The sizes of game elements such as buttons should scale dynamically to adjust to differently sized screens\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287981,
      "meta": {},
      "text": "\"Player can start/stop game with one click\"\n\"Music can't be louder than -10db for safety\"\n\"Starting the game shouldn't take longer than 500ms\"\n\"User can change the windows size but playground will only adapt when no game is currently running\"\n\"Player can change his car with at most 2 clicks\"\n\"Player can exit the programm with one click\"",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280691,
      "meta": {},
      "text": "1. Usability:\nEach type of car used in the game on the user interface should be clearly distinguishable from the background and also from each other (e.g. creating a colour scheme by using contrasting colours for each type of car and also the background) to be easily identifiable when the user is playing the game.\n\n2. Reliability:\nIf the game happens to crash due to errors of the game itself or on the user's side, it should be able to restart quickly within 5±3 seconds.\n\nPerformance:\n3.\nConfigure a test system of \"recommended specs\" and ensure the game runs well on the user's system, e.g. in terms of FPS, it should be able to support at least 30 FPS.\n4.\nThe user car's behaviour should respond, i.e. changing direction, to the user's input, i.e. mouse clicking on the game board, within 20 ms.\n\nSupportability:\n5. Maintainability:\nThere should be proper code documentation written for the game to make it easily scalable, e.g. in terms of functionalities, and for its code to be easily understood.\n6. Portability:\nThe Bumpers game should be able to be played on different platforms, i.e. Windows, Linux and macOS.\n\n\nRemark: I have partly reused my answer from SS21 for this problem statement.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281827,
      "meta": {},
      "text": "Usability: The font on the toolbar should be at least 0.7 cm high and the toolbar should be on one edge of the screen (not in the playing field). The user should need no more than 2 clicks to start the game. \nReliability: The game should successfully run again if the user presses stop and start. The game should continue to run normally even if the user gives inputs other than clicks (drags, keyboard input).\nPerformance: The game should run reasonably well if there are less than or equal to 20 cars on the game board.\nSupportability: The game should successfully run on Linux, mac, and windows The the car images should not be proportional to the source images (i.e. not stretched) even if an EIST student changes all the car icons to flying unicorn cars.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283313,
      "meta": {},
      "text": "Usability: The key/button to pause the game should be easy to reach and find for the player while playing the game\n\nUsability: The different parameters of the users car should be shown to the user in a non-intrusive way. Either on a separate bar not in the playing field, or on the very edges of the field in smaller text\n\nReliability: Usage of external resources (.mp3, .wav, .gif, etc.) should be local and not external to at best prevent attacks on machine (i.e. through Man in the Middle attacks)\n\nPerformance: The game should crash no more than 1 time in every 100 runs\n\nSupportability: Game should be platform independent, i.e. the game should be able to be run on XBOX, Playstation, PC, etc.\n\nSupportability: Game should be able to support as old devices as possible, and so should require limited RAM and no GPU",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284383,
      "meta": {},
      "text": "Quality requirements for the Bumpers Problem Statement:\n1. Players need at most two clicks to start the Bumpers game. (Usability)\n2. The direction and speed of the cars  is changed within 0.5 seconds after using and clicking the mouse. (Performance) \n3. Up to 50000 players can use the Bumpers game simultaneously. (Performance) \n4. The unavailability of the Bumpers game system is at most 0.2%. (Availability)\n5. Further car types can be integrated in the Bumpers game system within 120 min. (Maintainability)\n6. The Bumpers game system should never spread personal user data. (Security)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284890,
      "meta": {},
      "text": "1. Usability: The user needs one click to start the game and one click to stop the game.\n\n2. Reliability - Robustness: The game can handle up to 10 mouse clicks per secound. \n\n3. Reliability - Security: The game should be not affected by virus attacks of the 100 most common virus types. \n\n4. Performance - Availability: The game has an availability of at least 99.5%.\n\n5. Performance - Response time: The game should response on an action by the user (mouse click) within 0.1 secounds. \n\n6. Supportability - Maintainability: To add a new car type should be possible and take not longer than 5 minutes. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285422,
      "meta": {},
      "text": "NFR 1 Benutzerfreundlichkeit: Der Start und Stop Knopf sollten im Anwendungsfenster oben links sein und der Start Knopf soll links vom Stop Knopf sein.\nNFR 2 Robustheit: Das Spiel darf nicht abstürzen, wenn man mit der Maus (um das Auto zu steuern) das Anwendungsfenster verlässt.\nNFR 3 Portabilität: Damit das Spiel auf vielen Systemen läuft soll Java verwendet werden, um das Spiel zu entwickeln.\nNFR 4 Performanz: Das Spielfeld soll mindestens alle 40 Millisekunden geupdated werden und dabei sollen auch alle Veränderungen zum letzten Update sichtbar sein.\nNFR 5 Benutzerfreundlichkeit: Der Spieler soll das Anwendungsfenster beliegig anpassen können.\nNFR 6 Anpassbarkeit: Die Autos, Kollisionen und Musik sollen so implementiert werden, dass man sowohl neue Autos, neue Musik, als auch neue Kollisionen hinzufügen kann.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1286455,
      "meta": {},
      "text": "1.Die Benutzer sollten in der Lage sein, dieses Spiel in weniger als 3 Minuten zu erlernen.(Usability)\n2.Die Reaktionszeit auf Kollisionen darf 5ns nicht überschreiten.（Performance）\n3.Anstatt abzustürzen, wenn der Benutzer eine falsche Taste auf der Tastatur drückt, wird der Benutzer auf den Tippfehler aufmerksam gemacht.（Reliability）\n4.Diese Software muss mit allen geltenden Gesetzen und Vorschriften übereinstimmen.（Supportability）\n5.Um die Leistung der Tastatur zu testen, wurden während des Spiels mindestens 20 Tasten auf der Tastatur benutzt.\n6.Das Spiel muss auf mehreren Betriebssystemen laufen können.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1286772,
      "meta": {},
      "text": "-Adaptability: Bumpers must support metric system.\n- Portability : bumpers must support IOS.\n-Usability : Bumpers must be playing without reading more then 3 Instructions at the beginning.\n- Maintability: Bumpers game bugs must be fixed in 1 hour.\n-Performance: 1000 players can access to the game simultaneously.\n-Reliabity: the Bumpers game should not crash more then 1/10000 per executions.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287096,
      "meta": {},
      "text": "1. Player needs to click only once to start a game (at \"Start game\") [USABILITY]\n2. The game is platform independent [RELIABILITY]\n3. The system can handle 1 car played by the player simultaneously [PERFORMANCE]\n4. Due to it's simple mechanics, new types of collisions can be added if needed [SUPPORTABILITY]\n5. The system follows the mouse of the player allowing the car to be moved accordingly with 0.3 s of delay [PERFORMANCE]\n6. The game requires the user to learn only one mechanic (using the mouse = steering the car) [USABILITY]\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280256,
      "meta": {},
      "text": "NFR1: (Usability) Efficient Input Controll - Mouse Click to Car Steering should only need max. 50ms.\nNFR2: (Performance) Stable Game - The Game should support atleast 50 diffrent cars before Performance decrease.\nNFR3: (Supportability) MultiPlatform - The Game should work on different operating systems - Windows, Android and IOS\nNFR4: (Supportability) The Game should support all color blind support - For every different kind of color blindness there should be a support\nNFR5: (Reliability) The Game should not crash if the player uses extremly fast keyboard hitting and tries to do unusuall input\nNFR6: (Reliability) The NPC Cars should have deterministic actions for the game to be fair for the player. We ain't Dark Souls we Bumpers.\n\nNote: Some of this is from my homework from last year.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280397,
      "meta": {},
      "text": "- Usability:\n       1~Users are able to stop and exit the game, whenever they want, in less than 1sec, by clicking the button exit, which appear at the bottom of the page.\n       2~Help button shall appear in blue color, between play and exit buttons, and open game specific help documentation when clicked \n-Performance: \n       3~Throughput: 100000 users should be able to play the game at the same time.\n      4~Availability: the availability of the system is at least 99.9%\n-Reliability: \n       5~Security: the system shall under no circumstances leak user's score and name to unauthorized users.\n-Supportability:\n       6~Maintainability: If the game become unavailable because of bugs, it can be under maintenance for approximately three hours.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281686,
      "meta": {},
      "text": "Userbility:\n\nNFR1: The car that is currently controlled by the player should be clearly visible at all times during the game. When the game start there should be a brief moment before the cars start moving to give the player time to find the car controlled by him.\n\nNF2: The game can be paused at any while playing. There should be an option to exit the game and save the current sate of the game to disk.\n\nNFR3: There should be a menu option to change the volume of the music and sound effects of the game or mute them entirely. This option should also exist while the game is paused.\n\nReliability:\n\nNFR4: If the games crashes or is closed unexpected (not by the user using the ui), the game state should be save automatically. If the game is restarted, the user can reload the old saved state.\n\nPerformance:\n\nNFR5: The game has to run smoothly on all recent (no older that 5 years) hardware and supported systems. Smooth means that there should be no less that 30 game updates every second and user input is processed immediately in the next game update.\n\nSupportability:\n\nNFR6: The game is supported on all major desktop operating systems. This is includes Windows 10 and 11 executables, builds for recent versions of mac OS and a debian paket that can be installed on most linux distros.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281957,
      "meta": {},
      "text": "Usability:\n- the game control design should be simple: it should be easily started with just one click on a button, the same goes for stopping the game, making the user experience simple and enjoyable.\n- the movement of the cars when steering with the mouse should be simple to understand and should follow a logic, in order to cover the aspect of learnability and making it easy for the user to memorise the game functionality\n\nReliability:\n- the game can handle quick and fast successive movements of the player without crashing or freezing the display, making it robust also against wrong inputs from the user, it should be guaranteed that in 99% of the time the mouse movements are translated correctly\n\nPerformance:\n- the game should start quickly (within 2 seconds) when the start is induced by the user and not take too long to response, it should also be able to handle multiple stops/starts of the game that can be induced by the user pressing the associated buttons, also the game should restart quickly either after the player won and wants to play again or restart after losing the game. The game should also be available to play 24/7 without any downtime.\n\nSupportability:\n- maintainability: in case of a bug, the game should only have a downtime of maximum one day in order to be adapted and fixed by the developers\n- the game should be supported on the on the common operating systems like MacOS or Windows and run smoothly on all supported systems",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283353,
      "meta": {},
      "text": "Usability:\n\tuser experience: to start the game the player has to click three or less times\nReliability:\n\tRobustness: The limit of cars hast to be higher than 49. And the game should be able to handle the maximum amount of cars without a lack in performance.\n\tSecurity: Nobody is be able to cheat or manipulate the outcome of the game.\n\tSafety: Nobody is harmed by any content in the game e.g. epileptics or violence.\nPerformance:\n\tResponse time: No lacks between the movements of the cars is recognizeable.\nSupportability:\n\tMaintainability: a precise skript is written with a description of the classes and methodes in english. The class and methodnames are meaningfull.\n\n\n\n\n ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285212,
      "meta": {},
      "text": "NFR 1 Portability: The program should work on any windows or unix based system without and IDE having to be installed.\n\nNFR 2 Performance: The cars hotboxes should be realistic so that the user knows where to drive.\n\nNFR 3 Extensibilty: The program and especially cars and collisions should be designed so that new car- and collision types can be easily added.\n\nNFR 4 User experience: The user experience should work fine. For example other cars spawning on the same place as the user car should be avoided.\n\nNFR 5 Complexity: The game should be easy to understand for every user.\n\nNFR 6 Playability: The cars should not drive to fast or to slow.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286101,
      "meta": {},
      "text": "- The game should run smoothly with at least 30 FPS\n- It should be possible to control the steering of the vehicle and the speed change with only one hand.\n- The selection of different collision types should be possible by 2 clicks in the beginning of a game\n- The user should be able to add new collisions or change existing collisions by dragging and dropping different elements\n- The game loads the whole gameboard in less than 1 second\n- The game should have adequate protection to prevent access by persons other than the player playing the game",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287063,
      "meta": {},
      "text": "1 - USABILITY: The cars should be easily visible identifiable. \n\n2 - USABILITY: Speed, consumption, and location of the car should always be visible during gameplay\n\n3 - USABILITY: The game should be able to force close by pressing the escape button\n\n4 - RELIABILITY: The game should run without errors independently of which collision mode was chosen\n\n5 - PERFORMANCE: The game should launch in under 5 seconds \n\n6 - SUPPORTABILITY: The player can change the collision parameter in 3 clicks.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287302,
      "meta": {},
      "text": "Non-functional requirements for the game \"Bumpers\"\n\nUsability:\nplayers need less than 4 clicks to start the game\nplayers need less than 3 clicks to stop the game\n\nReliability:\nThere can be up to 70 cars on the field\nPrevents third party programs from creating changes in the game\n\nPerformance:\nThe game evaluates all the winners of a collision in under half a second\n\nSupportability:\nInput to steer car can be achieved by different controlling means. For example mouse, controller, touch...\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287770,
      "meta": {},
      "text": "Remark: I partly reused my last year's submission!\n___________________________________________\n\nUsability:\n- The player needs at most 5 clicks to adjust all game settings before starting the game\n\nUsability:\n- The mouse steering of the car is smooth and easy to learn\n\nReliability (Robustness):\n- The application won't crash when there is at least 2GB RAM allocated to it\n\nReliability (Robustness):\n- In average, the time between critical failures occur is 5 hours\n\nPerformance (Response Time):\n- The game loads less than 3 seconds when starting\n\nSupportability (Maintainability):\n- New types of collisions can be added within 24 hours\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287919,
      "meta": {},
      "text": "NFR1: Learnability:   On starting the game, Buttons like startGame, manual and settings should be at startscreen\nNFR2: Efficiency:   The steering should be intuitive so the player can learn how to play in a few seconds by just starting the game without reading the manual (which also exists)\nNFR3: Error handling:   If a error occurs the last valid game situation and score should be saved so player can continue playing later\nNFR4: Safety:   The car crashes should not be too real, so also young kids can play the game\nNFR5: Performance:   The game should run at a minimum of 30 FPS at most devices\nNFR6: Maintainability:   It should be easy to add new functionality such as upgrading to a multiplayer game and adding new items",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281693,
      "meta": {},
      "text": "Nonfunctional requirements of Bumpers\n1. Player needs to controls the movement, especially the direction of car by clicking the mouse. (usability)\n\n2. The faster the user clicks, faster the car moves. (usability)\n\n3. When the user is being crashed or the user crashes all the other car, the system should be able to stop the game and notify the user that he has win or lose. (usability)\n\n4. When the user changes the car, the game should adjust the collision to it. The determination of different collision should not be the same. (reliablility-robustness)\n\n5. The system should  calculate the current speed of car in less than 0.1 second and display the parameter of the car.(performance-response time)\n\n6. The audio player for the game should play different music during different conditions. For example play background music at the start of the game and play collision sound effects when the car crash. (supportability-adaptability)\n\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281895,
      "meta": {},
      "text": "Usability: \n\t-Starting and stopping  the game should be possible with one click\nReliability: \n\t-The system does not crash when not specified buttons are pressed\n        -no collisions should be skipped, even if multiple collisions happen at the same time \nPerformance:\n\t-The GUI should have at least 30fps\n\t-The player can start the game anytime (== the game is available all the time)\nSupportability:\n\t-Documentations for every function should be written, so that it is easy for new employees to start \n\tworking on the project, and the code can be easily maintained.\n\n\t ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282393,
      "meta": {},
      "text": "To assure bette readability, I will stucture my solution the following way:\n\"functional requirement\": \"specification of FR\": \"explanation\"\n\n1. Usability: ease of use: the game interface should be easy to use, the ease of use is measurable, for instance by counting of the number of click / interactions from the user.\n2. Usability: satisfaction: It being a computer game, the user should be able to sense some sort of satisfaction when winning.\n3. Supportability: Adaptability: the game should be able to run on any platform; it should be platform independant\n4. Performance: response time: The game should be very fast and responsive, because the movement of the car changes continiously as the user moves the mouse around the gameboard. Latency cannot be tollerated in a cenario like this one.\n5. Reliability: Robustness and Reliability: The game should do exactly what is specified in the problem statement and should also provide all the features listed. The player can choose a car and its speed, music is played when a collision occurs, when 2 cars collide there is a clear winner, etc. Deviations from this sceme manifest themselves in form of bugs, or undesirable system funcionalities and should be avoided at all costs.\n6. Supportability: Maintainability: The game should be able to be modified, and new functionalities should be easy to incorporate, as we move on with the project.\n\nFunctional requirements as in constraints are not thematized in this solution.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1282667,
      "meta": {},
      "text": "Useability: The start and stop button should be obvious and easy to find.\nUseability: The stearing should be easy to handle, learn and memorize.\nReliability: The game should have no bugs e.g. What happens if the collision cant evaluate any winner? (Safety)\nReliability: The user shouldnt be able to cheat e.g. by changing the collision type or speed of the cars (Security).\nPerformance: The game should have enough frames per seconds, that it can be played\nSupportability: The code should have no issues, so the programmers are able to produce some updates which make the game better.\n \n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282672,
      "meta": {},
      "text": "6 Non-Functional Requirements:\n1. Bumpers should be able to run smoothly on any personal computer, regardless of operating system and processor type, as long as sufficient hardware resources are available.\n2. The game should take no longer than 20 milliseconds to react after the player has clicked the mouse to move in a different direction.\n3. The car that the player is controlling should be clearly distinguishable from the other cars in the game and identifiable from the start.\n4. The game should not start if there is not sufficient hardware resources on the device to run it.\n5. Bumpers should be available through the official stores of the devices it runs on such as the Microsoft or App store, but should also be available for download from the internet to make it available to anyone.\n6. Every version of Bumpers should have a built in update-checker to alert the user when a newer version of the game is available for download.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283757,
      "meta": {},
      "text": "\nUsability:\n\tLearnability: the player should not have any pre-gaming experience to understand the gameplay. It should \t\t\t\t\t \n                            use simple point-and-click mechanics.\n\tEfficiency:  the player can start the game in one click \nReliability:\n\tRobustness: the game should work even when the usable gadget is on low battery\nPerformance: \n\tResponse time: all the in-game actions should be visualized under 10 milliseconds.\nSupportability: \n\tExtensibility: new types of collisions and cars can be added via new scripts \n        Portability: the game should work on any device, that supports java\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284321,
      "meta": {},
      "text": "1. Usability -> Users should be able to use at least 3 commonly used control methods to control their car. This could include using the mouse, arrow keys, a touchscreen, WASD keys.\n\n2. Performance -> The game should maintain at least 30 frames per second on any reasonable device released within the last 5 years.\n\n3. Reliability -> All UI elements should be visible in any reasonable screen or window resolution and size. This includes standard aspect ratios such as 16:9 or 21:9, non-standard aspect ratios such as in smartphone screens, and resolutions ranging from 720p up to 2160p.\n\n4. Supportability -> There should be standard interfaces in the code for cars and collisions so that new car and collision types can be easily implemented and added to the game.\n\n5. Supportability -> The game should be available on a website and should work as intended in the 3 most common web browsers: Google Chrome, Safari, and Firefox.\n\n6. Performance -> The website hosting the game should have a 99.9% uptime (~43 minutes per month of downtime).\n\n7. Performance -> At least 100 people should be able to simultaneously access the website and play the game without any noticeable performance issues such as slow response time or an unreachable website.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285553,
      "meta": {},
      "text": "1) Usabilitiy (Learnability)\n- durch gute Design des Spieles braucht der User nicht mehr als 2 Klicks um das Spiel zu starten.\nBeide Buttons kann man gleich beim Start des Spieles sehen. Es ist für den User einfach die Funktionalität des Spieles von selbst zu lernen und sich zu merken\n\n\n\n2) Reliability ( Robustness ,Security)\n- sofern das Spiel in der richtigen Umgebung entwickelt wurde , ist es sehr robost und ist dadurch immer funktionsfähig.  Das heißt auch falsche Anfragen werden aufgefangen und verhindern nicht das Funktionieren des Spieles\n- Durch ein gutes Programm welches von eine kompetenten Programmierer geschrieben wurde,  ist es sehr schwer das Spiel zu hacken \n\n\n\n3) Performance (Response time ,Availability)\n- das Spiel ist nahe zu immer aufrufbar und braucht auch nicht lange zum Starten.  Maximal sollte 5 Sekunden daueren und danach sollte es nutzbar sein.\n- Das Spiel sollte 99% der Zeit verfügbar sein. Die Downzeit sollte dementsprechen maximal 1% der ganzen Woche sein\n\n4) Supportability (Adaptability)\n- Das Spiel passt sich den aktuellen Entwickungen des Spiele-Marktes an und entwickelt sich dementsprechend weiter.  In diesem Zuge werden auch natürlich bestehende Bugs gefixt und neue Funktionen hinzugefügt.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1285769,
      "meta": {},
      "text": "Supportability - Adapability: The game should be platform independent.\n\nReliability - Robustness: If the player pushes not of the game used parts of the keyboard, the game should not be influenced or even crash.\n\nReliability - Safety: After twenty played rounds there should pop up a window with a cup of coffee for 5 minutes to remind the player to make a break for his health.\n\nUsability - Learnability: When opening the game app there should be a intro to learn and test all parts of the keyboard needed for the game.\n\nUsability - Satisfaction: On the main board of the app there should be a text editor for the player to write feedback to our game developers.\n\nPerformance - Throughput: The game should be playable online at the same time for at least 100 players.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285966,
      "meta": {},
      "text": "- Usability\n  - The user must be able to steer without clicking.\n  - The user must always be able to see their speed at a glance.\n- Reliability\n  - The game must ask for confirmation before closing, so the user doesn't accidentally lose their process.\n- Performance\n  - The game must load in less than 2 seconds.\n  - The game must be rendered in 30 fps even with 100 cars on screen.\n- Supportability\n  - Every function must have a javadoc comment.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286085,
      "meta": {},
      "text": "Supportability | Maintainability\nThere are different modules in Bumper Game like \"Collision\", \"Car\", \"GameBoard\" and so on. It's a typical \"high cohesion low coupling \" example and is easily maintained for the developers. \n\nUsability | Efficiency\nThe rule of the Bumper Game is intuitive. The player just needs to click the mouse to control the direction of his car and crash another until all the system's cars are crunched. Then the user wins the game. This is easy to learn and fast to use.\n\nSupportability | Adaptability\nThe Bumpers game can be run on different platforms. \n\nPerformance | Availability\nThe Bumpers game support updating all existing cars' positions every 0.1s\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286648,
      "meta": {},
      "text": "Nonfunctional Requirements\n\n1- Usability:\n\t- The user can start and stop the game.\n\t- The user can steer the direction of the car with the mouse and change its speed.\n\t- In each collision there is one winning car.\n2- Reliability:\n\t- Each time there is a collision in the game, a sound must be played. (Robustness)\n3- Performance:\n\t- There is one car controlled by the user (Number of simultaneous users supported)\n4- Adaptability:\n\t- The determination of the collision winner should be changeable during the gameplay.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286665,
      "meta": {},
      "text": "1. (Usability -> memorability) The system shall have an easy way to stop the game, by using the corresponding key depending on the device (e.g. android uses the back key on the bottom right/left of the phone to exit).\n\n2. (Reliability -> security) The system shall not include any viruses.\n\n3. (Performance ->Availability) The availability of the system shall be more than 99,5%.\n\n4. (Performance) Starting the game (pressing the button) shall take less than 0,1s.\n\n5. (Performance) At least 1000 Users shall be supported at the same time.\n\n6. (Supportability -> Maintainability) Changing the image of the cars shall take less than 5 min.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287132,
      "meta": {},
      "text": "Quality Requirements:\nUsability:\n1) The speed, consumption  needs to be show top left location of the program with Yellow, Red colors. \n2) The players car needs to be 1.5 times bigger then size of other cars and have a unique logo of TESLA.\n3) Put shortcut next to button names, half size smaller,  for quick access during the game provided to experienced players.\nReliability:\n4) If the game is stopped and then player press starts button, there needs to be \"Are you really ready?\" question needs to be send in case of accidental press to start button.\nPerformance:\n5) The availability of the system needs to be 99%.\nSupportability:\n6) The game still woks when disconnected to internet.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287507,
      "meta": {},
      "text": "#NFR1 Usability: every action that can be performed with the ui should be in acquireable in less then 3 clicks\n#NFR2 Reliability: The game should crash less than one time in a 1000 games, auto save should be included\n#NFR3 Performance: the game should handle up to 20 ai agents on the \"Rechnerhalle\"\n#NFR4 Maintainability: The games source code should not be platform specific\n#NFR5 Security: Server functionality should use a encrypted protocoll like https \n#NFR6 Design: the games ui should be similar to the specific platforms design\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287785,
      "meta": {},
      "text": "Usability:\n- Divide the game into two parts, the menu and the game itself, so the player isn't confused during the game\n- The Player can choose it's Car in a user friendly menu \n- It is easy to learn, since many other games do it like that as well\n\n",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1281271,
      "meta": {},
      "text": "Usability:\n- The player interacts with the game using a mouse\n- Starting a game should require 1 click\n- Parameters of the car (speed, consumption and location) should be easily visible\n\nReliability:\n- Collision type should be changeable during game play => All collision types should work seamlessly with all car types\n\nPerformance:\n- The game should be able to handle one player at (at least) 24 fps\n\nSupportability:\n- The game should be cross-platform (macOS, Windows, Linux)\n- Downloading an update should take less than 5 min.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281389,
      "meta": {},
      "text": "Usability:\n1a: The player must be able to start the game with one click\n1b: The player must be able to stop the game with one click\n2: The Player must be able to see which car is his own, so this car has to look way different than the others \n\nReliability:\n1. every user has his one username and password to enter the game, so no one else can change the personal settings of the game for example \n2. Security: The system may not grant access until the user creates a strong password which means it has to contain at least one capital letter, at least one special character, at least one number and at least 8 characters in total.\n\nPerformance:\n1. 10,000 people must be able to use this game simultaneously\n\n\nAvailability:\n1. The availability of the game must be at least 99%",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281482,
      "meta": {},
      "text": "\nUSABILITY\n\t- player needs a computer and a mouse\n\t- speaker to play soundeffects\n\nRELIABILITY\n\t- Start and Stop of the game (Players action)\n\t- in each collision there must be a winning car\n\t- car that wins all collisions is the winner\n\nPERFORMANCE\n\t- low response time (user input)\n\t- visualize differnet parameters of the car (speed, consumption or location)\n\nSUPPORTABILITY\n\t- determination of the collision winner should be changeable\t\n\t- the game should be platform independent \n\t- support different collisions",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1283275,
      "meta": {},
      "text": "NFR 1 Usability: Der Hintergrund soll einfarbig sein.\nNFR 2 Reliability: Die gegnerischen Autos sollten nie in oder direkt neben dem Spieler starten\nNFR 3 Performance: Die App soll am Ende höchstens 15 MB groß sein.\nNFR 4 Supportability: Für zukünftige Updates sollen einfach neue Autos hinzugefügt werden können.\nNFR 5 Usability: Die Hitboxen der Autos sollten möglichst genau dem entsprechen was der Spieler sehen kann.\nNFR 6 Usability: Steuerung und Verhaltensmuster der Gegner, die nicht intuitiv erkennbar sind, müssen erklärt werden",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1283974,
      "meta": {},
      "text": "Quality Requirements:\nThe problem statement already highlights some of the requirements that should be in the game. The first sign is that the user has to use only the mouse to play the game, which means Bumpers should be user-friendly or simple and this guides us to an important NFR, Usability. The customer insists on the dependency on the game platform because he needs a safe and secure game with fewer incidences and away from hackers and bad users of the web. This information leads to reliability. Bumpers can play music and visualize different parameters, and when cars crash, there has to be a sound effect that means the game is efficient and can do more than one task at the same time. Also, the determination of the collision winner should be changeable during gameplay, which is a sign that the system has to be adaptable. As a result, adaptability is how much our system can be trunk able (check).  The player can start and stop the game at any time, which means the user has control of the game during the whole runtime, and this defines the Operations requirements. Bumpers is a game and the customer may ask for a second version, that's why it should support the addition and the removal of functions and services which is extensibility.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284077,
      "meta": {},
      "text": "List of requirements:\n\t-Usability:\n\t\t- in order to make the game easy to learn the controls should only consist of one action, this being\n\t\tclicking the mouse (learnability)\n\t- Reliability:\n\t\t- no matter which key on the keyboard is pressed, if it is not the mouse button the game should not be \t\t \n                 affected by it and continue to run normally (robustness)\n\t\t-the game should be tested for viruses with an anti-virus-program every 2 weeks (security)\n\t-Performance:\n\t\t-the game can run up to 2 hours before crashing or becoming unpredictable\n\t\t- the time difference between clicking the mouse and the user moving should remain consistently \t\t\t \n                 below 10 milliseconds\n\n\t-Supportability:\n\t\t- minor bugs and errors should be able to be fixed within 24 hours (maintainability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284239,
      "meta": {},
      "text": "For usability, this game is easy to play, since there are only 4 controls and 2 game states (gameplay ongoing/halted). \nFor reliability, this game does not contain or obtain any important or key information from users. \nFor performance, the gameplay can contain as many cars as well as as many collision types as the user wants. \nThe availability of this software is 100%, since it does not require online connection and only works locally. \nThis game can adapt to every single operating system or environment. \nThis game is also easy to maintain, since the code that is written is self explanatory, easy to read and easy to modify.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286359,
      "meta": {},
      "text": "NFR 1 (covers Usability): \nThe player need at most two mouse clicks to either start or stop the game. \n\nNFR 2 (covers Reliability): \nThe system is safe against cheat codes from outside and provides a fair player environment. That means no hacking attacks in order to manipulate the final game results are possible. This includes trojan horses and viruses. \n\nNFR 3 (covers Performance): \nThe game should support all different kinds of collisions as well as different car-types at the same time within a single game without using extra time for processing\n\nNFR 4 (covers Supportability): \nThe Bumpers game should support different platforms in order to support several users platform choices (chrome, edge, safari, firefox etc.) \n\nNFR 5 (covers Usability): \nThe player can continuously see all different parameters of the car (location, speed and fuel consumption of the car) while playing the game. \n\nNFR 6 (covers Reliability): \nThe system must support at least one player that controlles one certain car. \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1286865,
      "meta": {},
      "text": "- It should be possible for developers to enhance the game with  new cars with different appearances and behaviours. \n- The car should react in less than 5ms to the input from the player. \n- The player should be able to start and stop the game in at most 2 clicks. \n- The game should run without problems in 90 percent of cases given that it was started on the PC that at least satisfies the minimal requirements. \n- On the PC that satisfies the minimal requirements the game should not harm it after 6 hours of running. \n- The user should be able to customise the cars appearance and speed of the car in at most 4 clicks. \t\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287286,
      "meta": {},
      "text": "The user can change the direction of a car with one click. (Usability)\nSpeed of the car is visible to the user for a better gaming experience. (Usability)\nThe game will still continue and not fail even if user clicks outside of the playing screen. (Reliability)\nThe game has a high response time since the car changes direction after a mouse click with less than 1 milliseconds of click latency. (Performance)\nThe game can process changing information during gameplay by allowing the changeable collision winner determination rule. (Performance)\nThe game has a small setup file to install less than 200 mb. (Supportability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287377,
      "meta": {},
      "text": "The first requirement that is part of the Usability category is, that after opening the game, a standard collision should already be selected so that the player can just hit the play button and instantly get into the game.\n\nAlso part of the Usability category is the requirement, that textboxes showing if the player has won or did lose, should at least be the size of 1/5 of the game window itself. By that you can secure, that this information gets displayed reliably and readable.\n\nThe final requirement of the Usability category is, adjusting the screen size to the amount of cars in a game, so that it won't get to crowded on screen.\n\nPart of the Reliability categorie would be, the requirement that at least 15 cars should be able to exist simultaneously in a game, without any performance loss.\n\nRegarding Performance, the requirement that when starting the game, there should be no downtime greater than half a second, is to ensure fast transition into gameplay.\n\nAt last is a requirement of the Supportability categorie. This requires, that the program should be runable on any kind of operating system and computer. This could be enforced by using a programing language, that follows a \"write once, run anywhere\" philosophy like Java.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280607,
      "meta": {},
      "text": "1.Usability: player need 3 step to start the game and can 1 step end the game\n2.Robustness: the game can only one player at same time to play (single player game)\n3.Safety: game need player to chose one of collision type, otherwise can not the game defined winner.\n4.Performance: all collision evaluate shall be processed in 1s.\n5.Availability: the availability of the system is at least 99%\n6.Maintainability: can add new function and repair the main function in 1 hour",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280999,
      "meta": {},
      "text": "Usability:\n- Um das Spiel zu starten und beenden, soll nur ein klick auf einen gut sichtbaren Button nötig sein. \n\nReliability:\n- der Player soll nicht durch zu schnelles klicken, das car in unnormale zustände bringen können. \n- die Kollisionen zwischen zwei Cars müssen immer richtig und zuverlässig erkannt werden. \n\nPerformance:\n- Das Spiel soll grundsätzlich auf Windows, macOS und Linux spielbar sein. \n- Das Spiel sollte auf allen neueren Computern (ab bj. 2018) mit mindestens 30 FPS im durchschnitt spielbar sein. \n\nSupportbility\n- es sollen schnell und einfach neue Kollisionen- und Car-Typen hinzugefügt werden können",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1282515,
      "meta": {},
      "text": "NFR1: Usability: The controls should be intuitive and well-arranged so that the player does not need to press more than one key/mouse button to move in a certain direction.\n\nNFR2: Usability: The text on the interface should always be at least 5mm tall and colored in contrast to the background so that it always remains readable.\n\nNFR3: Reliability: The game should run reliably on all platforms without crashing.\n\nNFR4: Performance: The game should be able to run smoothly at least with 30 fps.\n\nNFR5: Performance: the game and the inputs should have a quick, unnoticeable response time of under 50ms. \n\nNFR6: Supportability: The game's look should be easy to change and adapt, changes in music and pictures should not be more complicated than importing a new file and changing the file name in the code.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285257,
      "meta": {},
      "text": "- Usability: \n\t- The user interacts with the game by clicking on the game window.\n\t- The car collisions should take into account that some images\n\n- Reliability:\n\t- Robustness: If the user clicks outside the game interface, this input should be disregarded.\n\n- Performance:\n\t- The game should work to update the user interface with not frame-rate lag, with up to 50 cars.\n\t- The collisions should be completely calculated in less than 500ms.\n\n- Supportability:\n\t- Maintainability: The implementation must support the addition of new vehicles and collision types.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285570,
      "meta": {},
      "text": "NFR Usability: \n- The Game \"Bumpers\" should be able to be played just with left clicks of the mouse.\n- Every letter of the texts appearing on the user interface of the game should be at least 0.5cm high.\n\nNFR Reliability: The Game should stay protected/unaffected by remote intended attacks through an internet connection and is never allowed to leak personal data, which is not related to this game, through the internet.\n\nNFR Performance: 97% of the reactions to the mouse clicks of the user should be processed in less than 0.5 seconds.\n\nNFR Availability: the failure rate (rate of false calculations of direction and speed and wrong detections of collisions) should be respectively lower than 0,5%.\n\nNFR Supportabiliy: The Game \"Bumpers\" should be platform-independent. That means, the game also works on other machines without (or with minimal) changes to the program than the machine, on which this game was developed.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287197,
      "meta": {},
      "text": "1/ the player can start the game with just one click on a button indicating \"START\". \n\n2/ if the player wins, a message will appear indicating that he won \"YOU WON !\". Analog if he loses. \n\n3/ Once started, the game will continue to run permanently as long as there's no collision or the player doesn't terminate the game himself.\n\n4/ Only one player is supported in each game/one car can be controlled by the player\n\n5/ the responsetime to a mouse click in order to change the car's direction is less than 1 sec\n\n6/ the minimum and maximum speed of the player's car can be changed at all time.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283716,
      "meta": {},
      "text": "1. User can steer car with mouse (Usability)\n2. The system should work after changing collisions (Supportability)\n3. The system should work independently of the platform the user is using (Supportability)\n4. There is just one user controlling a car (Performance)\n5. The player can start and stop the game (Usability)\n6. Other unwanted players are prevented because just one user can play at a time (Reliability)",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1284846,
      "meta": {},
      "text": "Usability:\n1. In bumpers, the player should be able to play the game without reading the guideline.\n2. In bumpers, the player should be able to control the car only by steering the mouse.\n\nReliability:\n3. Security -The game should be secure and stable enough when attacking by others (for example, by hacker) and players can enjoy the game without influence.\n\nPerformance:\n4. the game must be able to determine the winner during the round dynamically.\n5. the game should have an update period of 1000/25 (according to the code UPDATE_PERIOD = 1000 / 25).\n\nSupportability:\n6. Maintainability - The a developer can easy to add new car types according to new requirements.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285005,
      "meta": {},
      "text": "Usability: The icons of the cars should be at least 0.5 cm big.\n\nSupportability: The game should be designed in such way, that allows adding new types of collisions.\n\nReliability/Robustness: The game should not crash when the customer uses another input button despite the mouse to steer the car.\n\nPerformance: The player should need at most 3 clicks to start to play the game.\n\nPerformance: The game should process the (input) information so fast that it appears to be played with at least 25 FPS.\n\nSupportability/Adaptability: The game should be able to handle every combination of car and collision type\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287009,
      "meta": {},
      "text": "6 Quality Requirements\nNFR's\n1) Learnability: Once you start playing it you will understand the game very quick\n2) Memorability: It is very easy to play it multiple times, because it is easy to use and you won't forget how to play it\n3)Robustness: Bumpers is very constant because you can't enter the wrong input\n4) Performance: The game reacts fast and processes your input very fast\n5) Maintainability: The developer can add cars or change the car color ver easily without having to change much in the code \n6)Security: You can't change any rules of bumpers, the game has fixed rules which hold every game",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1288072,
      "meta": {},
      "text": "1) The game should explain or indicate in some capacity how you win a collision\n2) The game should account for unexpected playing strategies and inputs\n3) Response times should be low\n4) The code should be clean and maintainable\n5) The game should easily be ported to other systems\n6) The game should follow modern security standarts",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280300,
      "meta": {},
      "text": "Usablitity: The use of the game should be intuitive, therefore the events occuring in the game should be as realistic as possible. For example, if two cars collide at a very slow speed (both of them under 3), winner and loser should still be able to still drive after. But in the case of two cars colliding with a higher speed (at least one of them 3 or more) it is clear that the losers car won't be able to continue driving.\n\nUsablitity: The game should be easy to learn, therefore the steering needs to be done by only using the mouse and without the use of the keyboard, which would need an extra explanation.\n\nReliability: The game should be usable on every kind of platform. Meaning it can be played on every software system regardless if it is macOS, windows or something different.\n\nReliability: The game should be able to correctly act on the users wrong input. If the user inputs something unknown for the system, it should ask the user the same order as before but with the message to choose something the system is familiar with. For example when choosing the collision type.\n\nPerformance: The game needs to be reacting quickly on the users actions to guarantee smooth playing. That means the reaction of the system on a specific action of the user should at most be 0.05 seconds.\n\nSupportability: The game should be reactive to the users feedback. Thus the developers need to be able to asses the users new needs for the game, like adding a new feature or fixing an error at best on the same day.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280459,
      "meta": {},
      "text": "Usability :  The game can get started by 3 clicks\n  \n\nReliability: The game should be deterministic and wont crash at any point,\nThe game should be resistent to all external interacting softwares; using hacks should'nt be allowed.\n Undefined actions should'nt happen; There should'nt be any bugs in the game \n\nPerformance: The game should react the player commands within 10 ms. \n\n\nSupportability: The game shold be able to work in different platforms, that use different operating systems. \n \n\n The game should be able to display different aspects of the car, such as the speed, consumption and location of it.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280890,
      "meta": {},
      "text": "Bumpers - non-functional requirements\n[U]sability\n1) The player can steer the direction of the car with the mouse (learnability/ease of use)\n2) When the game is started, music is played (satisfaction/user-experience)\n3) When the car crashes there has to be a sound effect (satisfaction/user-experience)\n\n[R]eliability\n4) The game should retain all its resources locally on the device and shall not derive any resources from the internet (Robustness)\n(e.g. images --> so it can run under any circumstances including no internet connection...)\n\n[P]erformance\n5) The game shall be rendered with at least 30 fps at all times on every supported device (Throughput)\n\n[S]upportability\n6) Determination of collision winner should be changeable during gameplay (Adaptability)\n(--> easy to pick most favourable collision option and change/add collision types in the future)",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281107,
      "meta": {},
      "text": "Usability: \n\tLearnability: \t\tThe UI allows the user to quickly enter and exit the game without causing any problems. The minimalist design allows for fast traversal in the UI.\n\tUX: \t\t\t\tThe user can start and stop the game with a single click.\n\nReliability:\n\tSecurity: \t\tThe game is distributed through a verified channel such as campus.tum.de. \n\nPerformance:\n\tPerformance: \tThe game doesn't feature high end graphics or very complex algorithms, so it can even be ran on low end laptops. The game can be ran on at least 95% of the devices available. \n\tResponse Time: \tThe game is played via the mouse and it runs locally, therefore the response time is only the input lag of the mouse.\n\nSupportability:\n\tPortability: \t\tThe game can be run on any platform.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281967,
      "meta": {},
      "text": "1.(Usability)The player can learn the game rules within ten minutes,which means the game is easy to learn.\n2.(Usability)After three days,the rules can still be remembered,which means the game is easy to remember.\n3.(Reliable)Open and run the game for 1000 times(automatically runs),the game should not crash or produce bugs.\n4.(Performance)The game be available within 10 seconds after the user starts the game.\n5.(Availability)The availability is at least 99.0%!\n6.(Adaptability)The game can run on Window XP,10,11 and linux system as well.\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282058,
      "meta": {},
      "text": "Usability:- The User must be able to open the game, select a car and start the game with at most 3 clicks and he must be able to pause the game and resume it again within one click each time. \n\t\t- The settings of the game should be reachable with at most 2 clicks. \n\nReliability:-when the user drives into the border and the borders are not solid, the game shouldn't crash, because the car left the area, but place the car on the opposite side for the player to carry on driving.\n\nPerformance:-The changing of direction of the car has to occur at the same time as the player controls it and not a couple of ms later. \n\t\t\t-The graphics should be high enough in resolution to be recognized, but the file of the graphic shouldn't be so big, that the graphics of the game supporting it starts to stutter and have low fps.\n\nSupportability:-The application should be able to run on multiple operating systems such as Windows, Linux, and macOS without the user seeing a different game.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284147,
      "meta": {},
      "text": "NFR1 Usability: the player should be able to start the game with at most 3 clicks\nNFR2 Performance: the game should react to every user input in at most 2ms\nNFR3 Supportability: any major bugs should be fixable within 2 days\nNFR4 Accuracy: the user input for steering the car should at most have an error of 5% (referring to the position of the mouse click)\nNFR5 Usability: the game should be able to handle errors and restart itself in case of fatal errors\nNFR6: Robustness: the game should be able to handle wrong user input, e.g. it should stop the user from decreasing the car speed to >= 0",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284527,
      "meta": {},
      "text": "1. The player should be able to start and stop the game with one click.\n2. The player needs to confirm their decision to stop the game so they don't accidentally reset the whole game.\n3. The music should start playing in less than 100ms after the user clicks the start button.\n6. The crash sound should not last longer than 30 seconds.\n4. The game should work on Linux, Windows and iOS.\n5. The player can choose the type of collision used at the beginning of the game with less than three clicks.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285215,
      "meta": {},
      "text": "Usability:\n1 - The player can restart the game without loosing its configuration (car/collision type).\n2 - The game should not crash more than once in 1000 games. (Error-handling)\nReliability:\n3 - Unchecked/faulty player input is in no way allowed to crash the game.\nPerformance:\n4 - The game should be able to run with 60 FPS on a reference platform with limited hardware resources (2GB RAM, Core 2 Duo, integrated graphics card, plain Ubuntu 16.04 LTS)\n5 - The game should be able to handle at least 20 cars with out performance problems.\nSupportability:\n6 - Game logic should be renderer agnostic. E.g.: it should be possible to change the graphics backend without touching game logic source code.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286090,
      "meta": {},
      "text": "Quality (i.e. non functional requirements):\n\n(U) -> Out of 100 surveyed people at least 70 shall agree with the statement: \"The game is easy to understand\" after playing the game for 20 minutes.\n(U) -> The player (actor) shall start the game with less than 4 \"clicks\".\n(R) -> The game shall handle a collision that happens between three cars at the same time.\n(R) -> (Given that there is some testing Package X attached to this requirements list) The game shall be \"playable\" after X is tested on it. This means the game shall behave identical before and after X is run on it.\n(P) -> The game shall start within max. 1 second of pressing the button \"start\".\n(S) -> The game shall work correctly on the following desktop operation systems: Windows, macOS, Unix.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286682,
      "meta": {},
      "text": "1. The controlling of the car by the player should be learnable in less then one minute. (U)\n2. The Availability of the game Bumper is at least 99.5% a year (P)\n3.The maintenance of the system shouldn´t take longer than one hour a month (S)\n4.The Player needs at most 2 clicks to start the game. (U)\n5. The system shall under not circumstances leak collect data of the Players, for instances IP Adresses, etc to unauthorized users(R)\n6.The change of the collision winner during gameplay should not take longer than 8 seconds.(U)",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287247,
      "meta": {},
      "text": "The Quality Requirements are:\n• Usability\n\t1. The player should be able to move directions and speed with a single mouse click.\n\t2. The player should be able to learn the game in one run.\n\t3. The game should have a main menue/interface with all required functions.\n• Reliability\n\t2. The game should be able to be played without encountering showing the player any bugs.\n• Performance\n\t5. The game should be able to be played on 60 fps. \n• Supportability\n\t6. The game should be able to be executed on every platform.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287514,
      "meta": {},
      "text": "1. The player needs up to two clicks on the special button to start or stop the game. (Usability)\n2. The game is able to withstand up to 20 cars on a game board. (Performance)\n3. The determination of the collision winner should be changeable within 1 second during gameplay. (Supportability)\n4. The availability of the game (system) is at least 99,95%. (Performance)\n5. The game should be platform independent so that game performance will be almost the same across platforms. (Supportability)\n6.  Speed must be limited to 80 (m) / s, so as not to overload the system. (Reliability)\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287798,
      "meta": {},
      "text": "1. Usability: At least 80 percent of the users should understand the functionality of the game after their first run and thus be able to use all aspects the game as steering, controlling the speed of their car and changing the determination of the collision winner\n2. Reliability: The game should be able to handle all different inputs from the mouse and keyboard from the players and not crash on certain inputs with a rate higher then 1 out of 1000\n3. Performance: The performance of the game should be similar on all platforms with a maximum difference of 15 percent of the performance on average of all devices using a certain platform.\n4. Supportability: the game can be updated by the developer at every time and the users have to install the update the next time they start the game after an update was published.\n5. Usability: The size of the window of the game must always be at least 300x300 pixels if the screen of the player allows to be so. \n6. Supportability: The user experience should be the same on all platforms thus all functionalities of the game have to implemented for all platforms the game can be played on and the interface has to look the same such that people can play on different devices without having to adapt to changes.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281657,
      "meta": {},
      "text": "NFR1 start game (Usability): \"player needs at most 3 clicks to start playing: choose car, choose collision type, start game.\"\n\nNFR2 design (Usability): \"the design of the game should provide a good overview, so that the player can easiliy understand and memorize the interface.\"\n\nNFR3 reversibility (Usability): \"If the player executes an unwanted action, eg. choosing a wrong car, the player should be able to reverse his action and be able to choose another car instead.\"\n\nNFR4 safety (Reliability): \"The game should be safe from viruses and attacks.\"\n\nNFR5 availability (Performance): \"The availability of the game is at least 99,9%.\" \n\nNFR6  supportability (Supportability): \"The game should be able to function on every computer, smartphone and tablet.\"\n\nnote: the format I'm using is: NFR# title (URPS category): \"explaination\".",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282541,
      "meta": {},
      "text": "1. Players should be able to interact with the game with their mouse.\n2. The game should visualize the paramaters of the car.\n3. The game only lets the user chose one of the available collision types.\n4. The game should run smoothly without any lags.\n5. The game should be platform independent.\n6. The game should run differently dependent on the chosen car and collision type.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287531,
      "meta": {},
      "text": "NFR 1: Usability: Der Spieler ist in der Lage , in weniger als 5 Klicks das Spiel zu starten.\nNFR 2: Robustness: Das Spiel kann bis zu 100 Stunden Spielzeit am Stück aushalten , ohne dass es abstürzt. \nNFR 3: Availability: Die Downtime pro Woche beträgt maximal 60min.\nNFR 4: Performance: In mindestens 99% aller Fälle dauert die Ladezeit weniger als 3Sekunden.\nNFR 5: Adaptability: Das Spiel funktioniert für alle Android Geräte.\nNFR 6: Safety: Das Spiel kann nur mit validen Anmeldedaten gestartet werden und gibt zu 99% eine Fehlermeldung bei unbekannten Daten an.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1287830,
      "meta": {},
      "text": "Usability: Player need just one click  to start the game.\nRobustness: the game will continue if user enters a wrong input during the game.\nPerformance: you can hear the car collisions immediately during the game.\nAvailability: the availability of the game is at least 99.999%\nAdaptability: we can easily change background ,player car ,game music or crash sound effect.\nMaintainability: we can add more feature to the game like new car style for exampels monstertruck that takes more area and is slow.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287856,
      "meta": {},
      "text": "NFR1 Usability: The Player can start and stop the game with 1 click.\nNFR2 Robustness: The system should be able to handle temperatures up to 85°C without having any impact on the game experience.\nNFR3 Performance: Clicking with the mouse to steer the car and the actuall change of direction of the Players car should not take more then 0,1 seconds. \nNFR4 Maintainability: A new cartype can be added to the game within 20 minutes.\nNFR 5 Usability: The Player can close the game within 2 clicks\nNFR 6 Implementation requirement: Java should be used as the programming language",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281191,
      "meta": {},
      "text": " There are 6 quality requirements (i.e., non-functional requirements) for the Bumpers game:\n1. Usability: The learnability of Bumpers game is easy. It is effortless for the beginners of Bumpers game to learn how to steer the player's car, crash other cars and win the game.\n2. Usability: Players can just easily and efficiently use the mouses and the keyboards to play. The game operation is simple and easy to remember as well. \n3. Reliability: Bumpers game should still run and not be stopped even if the playes enters a unrelated wrong input using mouse or keyboard.\n4. Performance: 98% of transactions of the Bumpers game should be processed within one second.\n5. Performance: The availability (the ratio of the expected uptime of a system to the sum of the expected uptime and downtime) of the Bumpers game should be at least 99.9%.\n6. Supportability: The game operations should run correctly no matter which type of cars or which type of collisions the player would like to choose.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281264,
      "meta": {},
      "text": "Usability: \n- Der Player muss lediglich auf \"start\" klicken um das Spiel zu beginnen (Learnability) \n- Es gibt nur zwei nahe beieinderliegende Knöpfe um das Spiel zu starten und zu beenden, wenn der Spieler diesen Mechansimus einmal verstanden hat, ist er sehr schnell zu benutzen (Efficiency) \n\nReliability: \n- die Funktionen bleiben alle vollumfänglich erhalten, auch wenn sich die Plattform ändert (Robustness) \n\nPerformace: \n- Auch wenn der Spieler sehr oft in das Spielfeld klickt um das Auto zu bewegen, sollten keine Störungen auftreten. \n- Das Auto fährt genau in die Richtung, in die der Player geklickt hat (Accuracy) \n\n\nSupportability\n- Neue Collisions können problemlos und schnell innerhalb von 5 Minuten als Unterklasse von Collision ins System eingebaut werden (maintainability) \n\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1282073,
      "meta": {},
      "text": "URPS = Usability, Reliability, Performance, Supportability\n\n1. The player can start and stop the game with no more than two klicks. (usability)\n2. The player can steer the one car without any delay (i.e. delay = 0) (usability)  \n3. The system can tolerate situations in which several cars bump into each other (reliability - robustness)\n4. The system solidly evaluates the winner in situations with different collision types while maintaining all functions (reliability - robustness)\n5. The availability of the system is at least 99.9% (performance - availability)\n6. The car types can be changed by a developer within 10 minutes (supportability - maintainability)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283137,
      "meta": {},
      "text": "- Usability: the game must be designed in such a way that the user feels good when playing it. Hence, it must be 'fun'\n- Usability: the game must not resemble other car crashing games, so that ours sticks out and is memorable to players.\n- Reliability: you should be able to play several games in a row without the application crashing\n- Reliability: the software's code should be written in such a way that bad actors cannot easily repurpose it to inject unwanted code or other nefarious viruses into it\n- Performance: the application should be optimized to allow users to add large (if not absurd, to increase the 'fun') amounts of enemy cars without its reponse latency screeching to a halt\n- Supportability: the game's code should be written efficiently and well documented. This guarantees that future improvements can be implemented.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1284397,
      "meta": {},
      "text": "Usability:\n#1: A singular mouse click on the game board should result in a change of direction of the car. One button for starting and stopping the game via double-clicking that button to minimize unintended actions should be provided. The speed shall be controllable via the upward and downward keyboard-arrows according to intuition. \n#2: A board displaying the current parameters of the car (e.g. speed, consumption, and location) should be provided to visualize the player that they are actually in control of the car and thereby make it enjoyable.\n\nReliability:\n#3: The mouse and keyboard shall only support the functionalities as described in #1. The game should not include type-in fields or any buttons apart from the start-and-stop-button. This ensures that the player cannot enter any wrong input implying no need to handle wrong input data bolstering the game's robustness.\n\nPerformance:\n#4: Unlike FIFA and GTA, this game shall need no updates and no internet connection. It's available anytime (with an availability ratio of 100%), provided one has a working computer.\n\nSupportability:\n#5: The game should be written in Java as it is platform independent (because it uses a JVM). So, it can be run on different OS, and thereby adapt to the changing environment.\n\nMaintainability:\n#6: The code for the game should follow commonly accepted clean code conventions to ensure maintainability. If the user demands new requirements (such as different vehicle types), it should be easily changeable within a team.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284789,
      "meta": {},
      "text": "Usability:\tUm die Usability einfach für die Benutzer zu halten, soll der Spieler maximal 3 Buttons zur Verfügung haben: Einen Startknopf, einen Stoppknopf und einen Knopf für die Steuerung des Spielerautos, was in dem Fall  durch die Bedienung einer Maus geschieht. Zudem soll das Spielerauto intuitiv steuerbar sein: Wenn der Spieler mit der Maus nach unten/oben/recht/links klickt, soll das Auto auch in die \"richtige\" Richtung fahren, z.B. bei Mausklick rechts, fährt das Auto nach rechts, usw.\n\nReliability: Wenn der Benutzer während des Spiels eine falsche Eingabe eingibt z.B. ein \"a\", \"+\", \"6\" soll das Spiel nicht beendet oder sogar abstürzen werden, sondern nix passieren. Zudem soll gewährleistet werden, dass der Spieler nicht auf unbefugte Knöpfe drücken kann. Beispiel: Wenn der Spieler schon auf den Startknopf gedrückt hat, soll dieser anschließend ausgegraut werden, sodass der Spieler diesen nicht mehr erneut während des Spieles betätigen kann. \n\nPerformance: Beim BumperSpiel soll die Antwortzeit auf eine Nutzereingabe weniger als 0,5 Sekunden betragen. Wenn der Benutzer den Startknopf betätigt, soll bis zum wirklichen Spielstart höchstens 0,5 Sekunden vergehen. Außerdem sollen mindestens 99% der Klicks durch den Benutzer registriert werden.  \n\nSupportability: Um sich schnell an neue Umstände anzupassen und Fehler schnell zu beheben, sollte eine Anleitung bzw. Beschreibung der Implementierung angezeigt werden und Eigenschaften wie Autoanzahl, Autotypen oder Soundeffekte in der gleichen Klasse implementiert werden und nicht einzeln, da sonst tausende Klassen durchsucht werden müssen. Das BumperSpiel sollte von unterschiedlichen Geräten (Laptop, Computer, Handy, etc.) aus spielbar sein und sich dem Gerät anpassen (z.B. Größe, Qualität, Button) und mit verschiedenen Systemen (Mac, Windows, etc.) kompatibel sein. \n\n\n//(In Anlehnung an) meiner Abgabe vom letzten Jahr:\nhttps://artemis.ase.in.tum.de/courses/121/text-exercises/4099/participate/773572",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1285298,
      "meta": {},
      "text": "1. Player needs at most 3 clicks (start, choose car, choose collision) clicks to play game. (Usability)\n2. There should be a message that players should be 10 years or older. (Reliability: Safety)\n3. Number of simultaneous users that are supported = 1. (Performance)\n4. Game should run not longer than 1 minute. (Performance)\n5. Game should work with different amounts and types of cars. (Supportability: Adaptability)\n6. User should be able to reload a game in at most 10 seconds. (Supportability: Maintainability)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285998,
      "meta": {},
      "text": "Non-functional requirements:\n\n1. Player needs at most 3 clicks (at most 3 interactions with the system) in order to start the game from scratch (Usability)\n\n2. Changing the determination of the collision winners is possible within two clicks (Usability)\n\n3. The game can only be started if the device used for the gameplay has at least 500 MB of RAM free (Reliability --> Safety)\n\n4. Up to 50 automatically controlled cars can be part of the game (Performance)\n\n5. When the device loses connection to the mouse used for the gameplay the user is able to finish the game by using the WASD keys of his keyboards for controlling his car (Supportability --> Adaptability)\n\n6. A new type of collision shall be implementable by the game's programmers within 2 minutes (Supportability --> Maintainability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286846,
      "meta": {},
      "text": "Usability:\n1 Das Auto des Spielers muss klar, durch eine andere Farbe und ein anderes Image, unterscheidbar von anderen Autos sein. \n2 Kollisionen müssen visuell durch kleine Explosionen sichtbar gemacht werden.\n\nReliability: Safety: \n3 Falls es durch unvorhersehbare Umstände dazu kommen sollte, dass das spiel z.B. nicht automatisch abbricht wenn ein Gewinner feststehen sollte, kann der Spieler das Spiel jeder Zeit manuell abbrechen über einen Button am oberen rechten Rand der gui.\n\nPerformance: \n4 Bis zu 20 Computergegnern muss das spiel ohne Einbußen der Performance gleichzeitig anzeigen können.\n5 Die Position der Autos muss 10mal pro sek. geupdated werden ohne das System, mit den vorausgesetzten Hardware Anforderungen, zu überlasten.\n\nSupportability: 6 Das development muss über eine CICD Pipeline Automatisiert werden um schnelle Äderungen am Spiel zu realisieren.\n\n\n\n\n\n\n\n\n \n\n\n\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1280271,
      "meta": {},
      "text": "Usability:\n- Learnability: Die Menüoberfläche des Spiels besteht aus maximal fünf Menüpunkten/buttons.\n\n- Memorability: Der \"Start Game Button\" des Spiels befindet sich bei jedem (Neu)-Start an der gleichen Stelle.\n\n- Satisfaction / user experience: Nach jeder Eingabe (Klicken im Menü - z.B Start & Stop Game) erhält der User ein akustisches Feedback (kurzer Ton).\n\n\nReliability:\n- Robustness: Wenn der Spieler beim Steuern des Autos die Pfeiltasten auf der Tastatur drückt, dann erscheint ein Pop Up Fenster, welches den Spieler darauf hinweist, dass er das Auto mit Hilfe der Maus steuern muss.\n\n\nPerformance:\n- Response time: Die Latenz der ausgeführten Steuerungsbefehle des Users ist unter 100 ms.\n\n\nSupportability:\n- Adaptability: Sollte der Spieler neue Geräte (z.B neue Maus, Joystick) angeschlossen haben, schlägt das Spiel dem Spieler vor, diese als Eingabegerät auszuwählen.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1281357,
      "meta": {},
      "text": "Usability:\n\t1. The Start and Stop button should be located next to each other or a single button should perform both actions, depending on the programm state.\nReliability:\n\t2. The game doesn't start a second session when the user presses the Start-button while the game is already running, which you coud say is a wrong input.\nPerformance:\n\t3. When the determination of the collision winner is changed during gameplay, the change should affect the gameplay so fast that it is concieved by the player as immediate, so under 0,1 seconds.\n\t4. The game should be able to handle up to 100 cars at the same time without slowing down.\nSupportability:\n\t5. The pictures for the cars should be exchangable by just adding the picture to the resources folder an changing the name of only one variable per changed picture\n\t6. The game shoul runn on many different platforms, so it is essential that it doesn't require a lot of computing power or energy.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1281671,
      "meta": {},
      "text": "Usability:\n- The game should be playable without a keyboard\n- Crashed cars should be clearly distinguishable from still functional cars\n\nReliability:\n- The game should not respond to any input but the mouse's\n\nPerformance:\n- The game should be able to handle collisions between every car with 10 or fewer active cars\n\nSupportability:\n- The display should be able to scale with a scaled or fullscreen window\n- The amount and speed of enemy cars should be changeable via a config file",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282258,
      "meta": {},
      "text": "Usability:\n-the user only needs one click to change the direction of the car\n-the user should be informed when he won or lost the game and have a button to exit the game\n\nReliability:\n- the car also changes direction if the player uses the right side of his mousepad\n\nPerformance:\n-it should be possible that 50 cars are driving at the same time\n- all cars should be driving 1 ms after the player started the game\n\n\nSupportability:\n-it should be possible to change the music in less than one minute",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284002,
      "meta": {},
      "text": "NFR 1: Usability: Users can start the game in at most 2 clicks after opening the application. (Usability)\n\nNFR 2: React to absence of mouse: The system should prevent playing the game without a mouse. (Adaptability)\n\nNFR 3: Duration of starting the application: After clicking the icon of the game, the system should be available in less than one second with an accuracy of 95%. The measurement should be based on the computer of a developer in the development team. (Performance)\n\nNFR4: No cheat codes: The game should under no circumstances contain cheat codes. (Reliability:Security)\n\nNFR5: Game Tutorial: Users can watch a video tutorial on how to play the game (Usability:Help and documentation)\n\nNFR6: Adapt to setting changes: The system should safe the settings made by the user (Adaptability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285272,
      "meta": {},
      "text": "Usability: \nNFR1–Choosing a car type should be possible within 3 clicks.\nNFR2–Music (background– or crashmusic) (in the default setting) should not exceed 60 dB.\nPerformance:\nNFR3–The response time after a user‘s click to steer the car should be less than 0,5 seconds.\nNFR4–Up to 50 cars should be able to drive simultaneously on the game board without any noticeable latencies (delta(t)<1second).\nReliability:\nNFR5–When the user enters a too big, small, negative or floating number input for the speed, the game should reask for input without crashing.\nSupportability: \nNFR6–The game should be portable and run on all platforms. \n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285918,
      "meta": {},
      "text": "1. Usability:\nWith only a mouse needed, the learnability of the game will take the user minimal effort. Because there also aren't any keys to memorize, the interface is fast to use and easy to remember. \nAs the interface is pretty simple, there isn't much room for errors, if they do however happen, there isn't much the system can do.\n \n2. Reliability:\nThe system should be pretty robust, as it only reads mouse clicks, nothing else. \nThe user does not insert any personal info into the system, so it is protected from any attacks.\n\n3. Performance: \nThere should be no delay between the mouse click and the car moving in that direction. (the delays should be adjusted with respect to the framerate of the user's display.)\nAs the hardware is not connected to any server, there should be no downtime. \n\n4. Supportability:\nThe game works correctly with any changes in screen aspect ratios. \nThe game works correctly on high-end or low-end computers.\nThe game works correctly on both operating systems ( macOS and Windows)\nThe game is usable correctly with a trackpad or an external mouse.\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1288050,
      "meta": {},
      "text": "NFR1 Usability: The player shouldn't need to press more than 1 button to either steer the direction of the car, or to change its speed.\n \nNFR2 Reliability: Unlike the cars, the system shouldn't crash while running.\n \nNFR3 Performance: The collisions should be processed in less than 0,2 seconds. \n\nNFR4 Supportability: Bumpers has to run on Windows 10, 11, Linux and MacOS.\n\nNFR5 \n\nNFR6",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280991,
      "meta": {},
      "text": "Category Usability:\n\nThe player will be able to play the entire game which only his mouse input which resembles easy usable / understandable game controls. There will be a fast success in learning and understanding the controls\n\nThe player will presented two named buttons where he can either start or stop the game by clicking them. Due to their distinctness the player can determine what button to use in what situation which is very efficient.\n\nCategory Reliability:\n\nthe game is robust due to its very clear controls. It is not possible for the player to enter wrong input so uintended behavior cannot happen by user input\n\nCategory Performance: \n\nThe applicationwill only run at the client and not over an extern backend. So the application will be available all the time and especially exactly when the user needs it\n\nCategory Supportability:\n\nThe application is intended to be platform indeptend so the application can is adapted to every system to be run on and thus it is an adaptive system\n\nDue to the games structure it can be easily adapted upon needing new features like new cars, collisions or ui behavior so it can deal with new requirements and is fairly easy to maintain\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281370,
      "meta": {},
      "text": "Usability: the player needs at most 4 clicks to change the collision type during the gameplay\nUsability: the visualization of different parameters is at least 64 px high and 128 px wide\nReliability: the system can handle a user-input up to 15 cps (clicks per second)\nPerformance: the user input has to be processed in under 500 ms\nPerformance: the frame rate should be at least 30 FPS\nSupportability: the game can be adapted to a new environment within 2 days",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282126,
      "meta": {},
      "text": "- Starten, Stoppen und das Verändern der genutzten Collision sollen jeweils durch nur maximal 2 Klicks erreichbar  sein. (Usability)\n- Das Spiel soll auf jeder Platform, für die es erscheint, mit mindestens 60 Frames pro Sekunde (im Durchschnitt, ohne überdurchschnittlich viele Hintergrundaktivitäten) laufen um ein flüssiges Spielen zu ermöglichen (Performance)\n- Das Spiel soll auch bei falschen User Inputs weiterhin fehlerfrei & ohne Abzustürzen funktionieren (Reliablility)\n- Für alle Funktionalitäten soll dokumentiert werden worauf sie aufbauen & wo sie genutzt werden, um bei Bugs schnell & effizient reagieren zu können (Supportability)\n- Das Spiel soll nach Installation jederzeit gespielt werden können -> keine Internetverbindung erforderlich sondern jederzeit spielbar\n- Parameter des Spiels sollen mit Icons versehen werden und statisch an einer Stelle verweilen, sodass sie jederzeit mit einem Blick überprüft werden können (Bsp. aktuelle Geschwindigkeit steht immer oben links oder Tank nicht als bloße Zahl sondern als Balken der die Fülle visuell anzeigt)\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1282330,
      "meta": {},
      "text": "Usability: \n1) The game should visualize different parameters of the car, e.g. the speed, consumption and location of the car. The parameters should change within 100ms dependent on user inputs or game parameters.\n2) The user can interact with the game using the mouse and keyboard. The only needed keys are left-klick, x (increase speed) and y (decrease speed). \nReliability:  \n3) If the user makes incorrect entries, the game should not react besides of displaying help regarding allowed inputs to control the car.\nPerformance: \n4) The game should support up to 20 cars (including one player car) that drive on the gameboard at the same time.\n5) The gameboard and all game parameters should be updated 25 times/sec\nSupportability:\n6) The developer should be easily able to change car images, add new car or collision types within 10 minutes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282353,
      "meta": {},
      "text": "- The game should be platform-independent\n- The player should be able to select his car, and collision type and start the game within 4 mouse-clicks\n- The game should run smoothly on any platform without crashes and long loading times\n- When the player clicks on the game board to change the direction and the speed of the car, the car should drive in that exact direction and change its speed accordingly\n- The game should be built with the newest available technology in order to be maintainable in the future and not become deprecated in just a few years\n- The game should be accessible and support modern accessibility tools",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284380,
      "meta": {},
      "text": "1. The player can steer the direction of the car within just one click of the mouse.\n2. The evaluation of the collision should be done immediately when the collision happens.\n3. The game should be able to run on different platforms.\n4. New cars and collision types are easy to add into the game by developers as new updates.\n5. Sound effects should be proper which can let the player knows the status of the game.\n6. The parameters of the cars should be shown clearly to the player.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285550,
      "meta": {},
      "text": "1. Usability:\n\t1.1 Different collisions\n\t\tThe player should not have to search for the settings where to change the collision type, but it should \t \n                be cleared marked for instance by a button before starting the game. At most it should require 3\n                clicks to change the collision type.\n\t1.2 Languages\n\t\tThe game should support at least two languages (German and English) for the settings and HUD \n\t\telements. The user should be able to change the language by clicking on the right country-flag \n\t\twithout having to understand any of the text on screen.\n\t1.3 Tutorial\n\t\tWhen the game is opened for the first time a tutorial consisting of one popup per control element\n\t\t(for example mouseclick to change direction) should show and explain the user how to interact with\n\t\tthe game. This tutorial should be shown actively only the first time the game is opend but still be \n\t\taccessible afterwards with a button on the home or in the settings.\n2. Reliability\n\t2.1 Platforms\n\t\tThe game should run not only inside of the IDE. It should be shareable by one single file that can run \n\t\ton MacOs, Windows and the most popular Linux distributions.\n3. Performance\n\t3.1 Canvas-Updating\n\t\tThe canvas should update at least 30 times per second (preferably 60x) in order to offer an immersive \t \n                experience for the user.\n4. Adaptability\n\t4.1 Different devices\n\t\tThe game should support not only steering by mouse but also by touchpad for portable notebooks. \t \n\t\tInstead of following the cursor there should be a mobile option which allows steering by arrow-keys.\n ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285907,
      "meta": {},
      "text": "Non-functional Requirements:\n\n1. Player should be able to start game within 5 to 7 clicks.\n\n2. Player should be able to instinctively recognize the purpose of the game.\n\n3. Application should automatically measure, whether player's machine fulfills all of the technical requirements to run the game. Should it not meet the needed requirements, application displays an appropriate error message.\n\n4. Availabilty of the system should be at least 99.999%.\n\n5. Application should be ready to use after approximately 5 minutes after receiving all the needed data.\n\n6. Technical issues and bugs needed to be solved in 48 hours after recognition.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285916,
      "meta": {},
      "text": "Usability:\nNRF1: The state of the user's car (speed, consumption, location) shall be clearly visible at all time\n\nReliability:\nNRF2: The program shall be able to resume a game when it crashes\n\nPerformance:\nNRF3: The interface shall remain responsive during a game (delay < 200 ms)\nNRF4: The program shall not use more than 500 MB of RAM\n\nSupportability: \nNRF5: Game rules shall be easily modified or added",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286234,
      "meta": {},
      "text": "Usability:\n\tThe player needs at most two clicks to start the game.\n\tThe player needs at most three clicks to exit the game.\nReliability:\n\tThe system should withstand multiple user inputs at the same time.\nPerformance:\n\tThe system should run at at least 30 frames per second.\n\tThe collision-detection works at least at 99% of the time.\nSupportability:\n\tThe players car can be changed in at least 30 seconds.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283200,
      "meta": {},
      "text": "1) The player should be able to start the game with at most 3 clicks\n2) The game must still work, even if the player clicks 100 times a second in different directions\n3) When a player clicks on the screen, for the car it must take less than a tenth of a second to change direction\n4) The pictures displaying the player car should be changeble in less than 5 minutes.\n5) Even if multiple collisions happen at the same time, each collision must be evaluated correctly.\n6) The game must be platform independent.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285093,
      "meta": {},
      "text": "Quality requirements according to the URPS (Usability, Reliability, Performance and Supportability) categories for the bumpers game could be:\n\nUsability:\n\n1. User only needs to click one button to initialize the game\n\n2. User only needs to click one button to stop the game \n\n\nReliability:\n\n1. The game should not be able to be tampered with. Only commands defined by the game should be able to be used and interrupt(interact with the game.\n\n2. The same type of collision should always produce the same result. Different collisions should produce different results.\n\nPerformance:\n\n1. The time of delay of a command should be as minimal as possible in terms of response time. A car should in the best case be able to be maneuvered instantly by a mouse click.\n\n2. The game should not crash when multiple clicks or commands in general are performed in a closely timed fashion.\n\nSupportability:\n\n1. Independantly of the platform you are using, the game should adapt to software and hardware requirements. For example, depending on which device or monitor the user is playing the game, the strechting of the game should be optimal.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285564,
      "meta": {},
      "text": "NFR1(Usability): The text size for choosing a car or Collision type should be at least 1cm big\nNFR2(Reliability): The system must be protected against leakage of user data against unauthorized users\nNFR3(Performance): After the game is started the music has to start play in less than 1 second\nNFR4(Supportability): The game needs to be platform independent\nNFR5(Performance): The mouse steering function must work 99.8% of the time\nNFR6(Supportability): The game needs to carry on without any disturbance after the determination of the collision winner is changed during gameplay",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285984,
      "meta": {},
      "text": "Usability:\n1. The user interacts with a mouse.\n2. The cars shall at least be 100 pixels high and 50 pixels wide and the players car should have a different design \n    than the npcs. (So that it can be distiguished)\n\nReliability:\n3. The system can recognize, tolerate and adjust the user changing the speed of his car even if the speed \n    chosen lies beyond the limits.  \n\nPerformance:\n4. All the interactions like e.g. changing the speed, steering the car, detecting a collision and playing the \n    crash sounds shall be processed in less than 1 second.\n5. The availability of the system should at least be 99.97%, so that players only experience a downtime\n    of the system for at most 3 minutes per week.\n  \nSupportability:\n6. The steering of the car works correctly for all different car-types, speeds and directions.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286680,
      "meta": {},
      "text": "NFR 1: Performance: The bumpers game should run with more then 30FPS on any reasonably modern system (> 2018).\n\nNFR 2: Performance: The bumpers game should not take more then 5 seconds to start on any reasonably modern system (>2018).\n\nNFR 3: Usability: The bumpers game should react predictably and shouldn't use random non-understandable behavior.\n\nNFR 4: Usability: The bumpers game should use an intuitive user input method, such as touch, joystick, wasd/arrow or mouse input and describe how to use it.\n\nNFR 5: Supportability: The bumpers game should have an adaptable interface to mod and expand the game to easily allow adding (user generated) content.\n\nNFR 6: Reliability: The bumpers games core framework should handle a lot of displayed content without issue and shouldn't crash due to an overload.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287180,
      "meta": {},
      "text": "- The game should run smoothly and with next to no input delay. A framerate of at least 30 should always be possible (Performance)\n- Obviously, the game should provide an enjoyable experience of the player (Usability)\n- The controls should be intuitive and should not need the player to remember them. (Usability)\n- The game should try to keep the player inside the boundaries of the game, potentially just crunching his car if he leaves the game beyond a certain margin. (Reliability)\n- The game should be constructed in a way that every new car type will work out of the box without needing to define special handlers outside of its class (Supportabillity)\n- The game should be to handle big game boards (4k?) and large numbers of cars without significant frame drops.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287341,
      "meta": {},
      "text": "U:\n- Users control their car using their mouse.\n- Different types of cars shall have distinct images.\nR:\n- The game can evaluate up to 20 cars on the gameboard at a time. \nP:\n- The game should run on at least 30 FPS (frames per second). \n- The game should be able to run independently from the platform.\nS:\n- The cars can evaluate collisions from all 4 sides: up, down, left, and right.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287979,
      "meta": {},
      "text": "Usability: -the buttons on the start and pause screen should be big enough and middle centered and like in other games colored, furthermore the mouse buttons used to control the car should line up with other games\n-when changing the collision winner the number of clicks needed shouldnt exceed 5\n\nreliability:- the implementation should be secure enough to fend of unwanted input and help for the player (eg. cheats)\n– robustness, the implementation shouldnt just crash when the user enters unexpected/unwanted input\n\nperformance: -the user input should be processed close to instantly and not exceed a limit of 5ms\n\nmaintainability: -all cars, players, AIs and collisions should be implemented from abstract classes/interfaces so that new implementations can be easily added and good supported\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281914,
      "meta": {},
      "text": "1.Usability:The player need one click to start and stop the game。\n2.Reliability:This game allows at least fifteen cars to exist at the same time。\n3.Performance:At least five players can play this game at the same time。\n4.Supportability:The game should load within 1 second of clicking to start.\n5.Security:In order to download this game the player must use the set password.\n6.Maintainability:The change of the determination of the collision winner needs to be completed in 1 second.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282136,
      "meta": {},
      "text": "Usability: \n - Players can start and stop the game by pressing the respective Buttons\n - Players can control their movements by clicking on the screen where they want to go\n - Players change choose which car they want to use they can choose which on what condition the player or the enemy car wins.   \n\n\n\nReliability: \n - There should be a constant winner in each Collision. No more than a Second should be used to determine the winner\n\n\nPerformance:\n - After the players action the system has to handle the information ( clicking where to go, which car, etc.) in less than a second to avoid input delays\n\n\nSupportability:\n - Bumpers has to be able to work on any modern system ( Windows, Linux, MacOS) ",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283484,
      "meta": {},
      "text": "1. The car should respond instantly to the users input\n2. The sound of the game should be playable on any system configuration/platform\n3. The player should be able to stop the game any time\n4. The car controlled by the player should be easy to differentiate from all other cars\n5. The game should be playable on any system configuration/platform\n6. The speed and consumption should be easy to read in the user interface",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283504,
      "meta": {},
      "text": "Usability: all steering angles form 0°-360° in 1° steps are supported so that the user can steer preciesly\nUsability: cars do not instantly collide with the player when starting the game\nUsability: the visualize of different parameters of the car (speed, consumption, location) are hidden as advanced options so the player can switch them on and off\n\nReliability: the game runs through error-free in 99,9% of the cases\n\nPerformance: the system is able to handle at least 15 cars simultaneously without the framrate dropping below 20fps\n\nSupportability: a new basic car typ can be implemented in less than 30min",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284393,
      "meta": {},
      "text": "NFR1 Usability: The user controls the car with the mouse.\n\nNFR2 Usability: The user should need at most 5 clicks to start the game. \n\nNRF3 Performance: The notification of the winning car should come up within one second after the end of the game. \n\nNFR4 Adaptability: The system should be able to change the used collision type during the game. \n\nNFR5 Robustness: The system should throw an error message if the user makes an impossible input and should then continue by asking the user to choose something else. \n\nNFR6 Security: The game does not require and store any personal data of the user.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287498,
      "meta": {},
      "text": "NFR1: Usability: The system should be easy to use, and the UI should be intuitive to use. Therefore the player \nshould be able to start and stop the game within less than three clicks.\n\nNFR2: Conformance to guidelines: \nThe design of the system should follow the typical UX guidelines of Nielsen’s usability heuristics.\n\nNFR3: Reliability:\nThe game should be stable to play and therefore should not crash at any point. In extensive user tests the game should have a rate of crash-free session about 99.7 %.\n\nNFR4: Performance:\nThe game should be a super performant game, where user don't have to wait until they can play the game. Therefore the start of the program should only take 7 seconds on a medium priced PC. The FPS rate should also be around 60 on that same device.\n\nNFR 5: Supportability:\nThe game should consist of multiple subsystem. For example the music handling should be a system of itself and therefore easy to replace, modify and maintain.\n\nNFR 6: Portability:\nThe game should be playable on the latest devices. Therefore it should be playable on the following operating systems: Windows 11, Windows 10, MacOS 12, MacOS 11,  Ubuntu 22.04 LTS  and Ubuntu 21.10.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287644,
      "meta": {},
      "text": "1. Usability: The steering of the car should be easy to learn, so the player can start playing immediately.(steering by clicking)\n2. Usability: The game should contain funny images and music, so the user is satisfied by the experience\n3. Reliability: The cars shouldn't be able to drive outside the area, because eventually the user wont see no cars anymore or if cars have collided\n4. Performance: The game should not be too big as executable, so it can be run on any device\n5. Supportability: The Developer should be able to implement more car and collision types, if the client wants new things to be implemented\n6. Usability: The way of steering a car should be the same forever, so users can memorize once they replay the game after some time",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1288061,
      "meta": {},
      "text": "Usability\n- User needs only 2 clicks to start the game. First to open the game and second to start the game.\n- Inside the game, user only needs 3 clicks to change the color of the car. First to open the setting, second to change the color, third to save the changes.\n\nReliability\n- The software should check itself for missing files and download it when the user is connected to internet. When the user not connected, show a message that the game needs internet to fix or download missing files.\n\nPerformance\n- User shall get 60 FPS, even when user only has Nvidia GeForce GTX 1050Ti graphic card, 32 MB RAM and Intel® Core™ i7 Processors specifications.\n- User should be able to play without internet.\n\nSupportability\n- Adding new types of car should only take 15 minutes.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282177,
      "meta": {},
      "text": "Usability:\n1. The player should interact with the game by using a mouse\n2. The player starts the game by clicking the \"Start\"-button and stops the game by clicking the \"Stop\"-\n    button.\n3. The player controls the car through clicking in the needed direction.\n\nReliability:\n1. In case the collision type is changed during the game, thus changing the environment, the game \n    should still work like before\n\nPerformance:\n1. The winner should be calculated within a second.\n\nSupportability:\n1. Supports the different chosen collision types, even when changed during game.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1282937,
      "meta": {},
      "text": "Usability: Bumpers can be played without the use of a manual of instructions.\nReliability: Bumpers should not crash more than 5 out of 2000 executions.\nPerformance: The direction of the car should change within 5ms after steering.\nMaintainability: Bumpers must be re-designable to a client-server architecture.\nPortability: Bumpers can be cross-platform : used in iOS and Android.\nPerformance: The game board should have a refresh rate of at least 30 frames per second.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284413,
      "meta": {},
      "text": "1) Players only need at most 2 clicks (including confirmation) to start/stop the game as well as to read the instructions. [Usability]\n2) Players can control the car with the platform native hardware [Usability]\n3) The time needed between clicking and updating the direction of the car should be less than 5ms [Performance]\n4) The interface should be drawn at least 60 times a second (60fps) [Performance]\n5) The system can tolerate user inputs up to 30 inputs/second [Reliability]\n6) The user input works correctly on different platforms (mouse on pc, touch on mobile phones and controllers on consoles) [Supportability - Adaptability]",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284597,
      "meta": {},
      "text": "-for a MiniGame like Bumpers, the system should be intuitive to use and the interface easy to understand. A simple Game should be started with a single clicks, the maximum number for full game with different collisions should be three clicks, the game should look the same on all platforms (Usability)\n- the game should be platform independent and run stable on all desktop operation systems and mobile operating systems (Supportability)\n- the games refresh rate should be at least 40fps, it should have a good reaction time (for mouse steering) less than 0.2 seconds and shouldn't need more than 1GB storage and 300MB RAM (Performance)\n- the game should be playable offline to minimize downtime from the servers side (Availability)\n- the user should be able to download the latest version with one klick by an button on desktop versions or in the App/Play Store on mobile devices (Maintainability)\n- The app shouldn't crash during regular unmodified games, no matter what the user tries. It shouldn't have problems with being open in the background, a user tabbing through applications or being open for a long time (Robustness)",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284900,
      "meta": {},
      "text": "NFR1: Usability / Efficiency: Only one user interaction (mouse click, key press) should be necessary to steer the car.\nNFR2: Reliability / Robustness: No keypress or mouseclick can crash the game unexpectedly.\nNFR3: Reliability / Security: The user may only change the speed of his car in certain bounds. Under no circumstances he should be able to cheat by increasing his speed beyond a limit set by the developers.\nNFR4: Performance / Throughput: The displayed graphics should render smoothly with at least 30 fps.\nNFR5: Supportability / Adaptability: The game should be easiliy portable to new hardware / operating systems.\nNFR6: Supportability / Maintainability: The used textures can be changed in less than 10 mins of work by the developer.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280513,
      "meta": {},
      "text": "6 quality requirements (NFRs) for the Bumper game are as following: \n1. Usability\n- A user should be able to easily steer and accelerate the Car, controls should be intuitive.\n2. Reliability\n- The game shouldn't crash when played, a crash safety of at leats 90%. \n3. Supportability\n- The Cars can move at different speeds.\n- The game must support at least 3 different Cars.\n4. Performance\n- The games minimum framerate must at or above 20 fps. \n- The games response time between click and reaction should be below 1s. ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280989,
      "meta": {},
      "text": "1) In terms of Usability, the player should quickly understand how to steer the direction of his/her car and change the speed. The movement of the mouse should be comfortable for the player. \n2) In terms of Supportability, the play must continue without any problem when the rule that determines the collision winner changes during the play.\n3) In terms of Supportability, the game can be played in various platforms.\n4) In terms of performance, there should not be any delay in updating the visualization of the parameters of the car. \n5) In terms of Reliability, the game shouldn't crash even if the player tries to increase the speed to infinity or decrease it below zero.\n6) In terms of Usability, with the clear visualization of parameters of the car, the player won't have to remember details and will be able to make his/her decisions faster.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281854,
      "meta": {},
      "text": "1. The game should have a clear user interface with unambiguous and precise buttons providing exactly the information that is needed to play the game properly without being confronted with an overload of information -> Easy to learn to play (Usability)\n\n2. The software should be secure to an extend that all state-of-the-art security mechanisms are in place that are needed to ensure, that it is not an easy gateway for hackers to damage the user -> Security (reliablility)\n\n3. It is also necessary, that the game can handle multiple cars on the game board without collapsing. This is needed to ensure, that the user can design the game experience concerning the amount of cars to his wishes -> Performance\n\n4. The code for the game should be organized in a way that it is relatively easy to follow without having black box modules and unnecessary complexity. This helps to identify errors leading to bugs on the user's end -> Maintainability (supportability) \n\n5. The game needs to be robust to all kinds of user inputs, so that errors from the user do not result in the system crashing -> Robustness (reliability)\n\n6. It should not be unnecessary complex to play the game. Simple tasks should be achievable by a small amount of clicks and follow an intuitive way of playing -> Efficiency (usability)",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281927,
      "meta": {},
      "text": "1. The game should be started with 3 or less clicks.\n2.The game should open in less than 1 second.\n3.The Code should be correctable for bug fixes within 48 hours.\n4. The game should have prevent any hacking or cheating in the game.\n5. The game should have a minimalist design.\n6.A developer can adapt new changes within 2 weeks.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283205,
      "meta": {},
      "text": "1) It should take at most 5 tries for the user to figure out all the things he/she can do with his/her car.\n2) The availability of the system should be at least 99.9%.\n3) The game should support at least 20 cars simultaneously.\n4) It should be possible to change the images of the respective car types in < 5 minutes.\n5) Cars should spawn at least 30 pixels away from one another, so a collision does not occur as soon as the game begins.\n6)The visualised parameters of the car should be represented in such a way that they can be grasped by the user within less than 10 minutes.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284244,
      "meta": {},
      "text": "1. Usability:\n\n\t- \"A player should not take more than 2 rounds to understand the controls of the game\"\n\t- \"When encountering an error, the game should be restarted in less than 2 seconds\"\n\n2. Reliability\n\n\t- \"The game should only start, if there is a mouse connected to the system\"\n\n3. Performance\n\n\t- \"The delay between a input on speed or direction by the player should not have a delay of at most 0.1 seconds\"\n\n\t- \"The game should crash at most every 10.000 rounds\"\n\n4. Supportability\n\n\t- \"The game should be playable on Windows (10+11) and on the latest versions of Mac OS and Linux\"",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284268,
      "meta": {},
      "text": "NFR1: Usability:  The board should be user-friendly, which means all the buttons should be easy to understand, all functions such as steering direction should be implemented intuitively which users can click one pint on the board and car goes towards that point.\n\nNFR2: Safety: The display of the Bumpers game should be executed by a user without The Dry Eyes syndrome , because play this game needs to watch the screen for a long time. With related syndrome, you are not allowed to play.\n\nNFR3: Performance:  100% of the collision shall be processed in less than 100 second, which means the difficulty would become harder when time goes by.\n\nNFR4: Accuracy: The bias error of the collision should be less than 95%\n\nNFR5: Maintainability: cars' pictures can be changed within 5min\n\nNFR6: Portability: This game can be played at all devices including mobile phone/Windows/Mac/Linux",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284434,
      "meta": {},
      "text": "Usability:\n- Bestimmte Eigenschaften des Fahrzeugs, so wie speed, consumption und location sollen für den Spieler klar erkennbar sowie verständlich sein. (Ergo: Er soll z.B. sehen, wo sein Auto grade auf dem Spielfeld ist).\n- Spieler interagieren mit einer Maus. Die Steuerung mit dieser Maus, insbesondere die Empfindlichkeit ihrer Bedienung soll benutzerfreundlich sein.\n\nReliability:\n- Das Spiel soll gegen Cheating abgesichert werden. Nicht, dass sich sonst jemand unrechtmäßig einen besseren Highscore holt.\n\nPerformance:\n- Das Spiel soll auch bei großen Mengen an Autos auf dem Spielfeld flüssig laufen, da grade bei sich bewegenden Objekten die Spielgeschwindigkeit durch schlechte Performance abnimmt.\n\nSupportability:\n- Das Spiel soll plattformunabhängig sein und muss dementsprechend gestaltet werden\n- Die Festlegung, wer die Kollision gewinnt, soll während des Spiels veränderbar sein",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1284661,
      "meta": {},
      "text": "Usability:\nThe player should be able to pause the game at any time. (when playing locally)\nIf severe errors happen the error message should allow the user to send a description of the problem to the developers.\nIt might be more convenient for players on pc to also use keys for steering.\nReliability:\nThe Game should not allow to rotate the screen on a smartphone while playing the game.\nPerformance:\nThe input from the user should have a delay of less than a second.\nThe Game should be able to run on most even older computers and smartphones easily.\nSupportability:\nIntroducing additional game-object types should not lead to any troubles.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285165,
      "meta": {},
      "text": "NFR1 Extensibility: The game must be implemented in a way that allows adding new car-types.\n\nNFR2 Performance: The game should never have less than 30 FPS while playing.\n\nNFR3 Usability: All settings(car-type, collision-type) should not be further than 2 clicks away from the home screen.\n\nNFR4 Customizability: Players can choose the image of their car.\n\nNFR5 Reliability: The game should only stop when the player stops it or a winner is determined.\n\nNFR6 Tutorial: Players should be able to get a tutorial/introduction to the game",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285359,
      "meta": {},
      "text": "Usability:\n1) Player should be able to steer the wheel just with his mouse.\n2)Once the application is opened, less then two buttons must be pressed to start the game.\n\nReliability:\n3) When players are asked to chose their car and press anywhere else except of the buttons, the play should wait until a valid action ( pressing one of the buttons ).\n\nPerformance:\n4) Application should not crash (close without the User pressing exit)\n5) Game should never stop unless the Player lost/won.\n\nSupportability:\n6) Game should work on windows and apple",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285849,
      "meta": {},
      "text": "Nonfunctional requirements for Bumpers: car crash game\nusability : - users interact through the mouse and a screen \n\t\t- cars appear in well-visible colors \n\t\t- starting and leaving the game with a couple of clicks\nrobustness: - when the compuer operating system is not so powerful \nAvailability: - the game is available to play with all the time and there is no downtime \nMaintainability: - the developper can modify the system as much as they like to - change the colors of the cars\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t- change the music \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t- fix any debugs \nSafety: - the game can't cause any harm to the user in any way. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286247,
      "meta": {},
      "text": "1. After one game played, the player must understand how the car is controlled. (Usability)\n2. If the user clicks on the wrong buttons, then the game should continue to work without problems (Reliability)\n3. If there are many collisions at the same time, then the game should not freeze (Performance)\n4. If a new type of car or collision appears, then adding it to the game should not take much time (Supportability)\n5. If a user during the game tries to close the game, a window should appear in which he must confirm the action. This will help against accidentally pressing the game shutdown button. (Reliability)\n6. The start of the game should not take more than 2 seconds (Performance)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280251,
      "meta": {},
      "text": "- Usability:\n\tNFR1 Learnability: The user interface should be easy to learn. The start button in the UI should use suitable text or visualization in order that the player understands to click on it to start the game. \n\n\tNFR2 User Control and Freedom: The player should be able to start the game. The player should be able to stop the game whenever he wants. The application should present an emergency exit. When the player exits the game, the resources of the hardware system that are taken by the game should be freed before it exits.\n\n\tNFR3 Visibility of system status: the player should be notified when the game has loading latency with an appropriate message like \"Bumpers is being loaded.\"\n\t\n\n- Reliability:\n\tNFR4 Robustness: The game is being played with the mouse however the system should not crash or get influenced when the user presses random keys on the keyboard.\n\n\n- Performance:\n\tNFR5 The game should be run with at least 30 frames per second (fps) on the Surface Book 3 with an intel core i5 CPU and on the MacBook Pro with an M1 chip.\n\n\n- Supportability:\n\tNFR6 Maintainability: The player should be able to report bugs in the game and the bugs should be fixed in future game updates.\n\n- NFR7 Constraints: The game should be cross-platform.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1281040,
      "meta": {},
      "text": "Usability:\n1.The player can start, stop and quit the game with at most 2 clicks.The player can steer the direction of the car with only one click, change car types and collision types with at most 2 clicks. \n2.There should be a recognizable background color or image for the user Interface. \n\nReliability: \n1.Robustness: The ability of a system to maintain a function when there are changes in the environment. When there is no Internet, it is still possible to exit the game.\n\nPerformance:\n1.It should be able to run maximum 20 cars on the game board smoothly.\n2.Open the game(UI) should take less than 5 seconds. \n\nSupportability: \n1.The game should be platform independent.It should run on all desktop operation systems (Windows, macOS, Unix)\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283047,
      "meta": {},
      "text": "Usability:\t\t\n- The user can start/stop the game with one click when the game is played.\n- The user can exit the game with max. 2 clicks.\n- The min. size of the depicted cars should be at least 50x50 px\n\nReliability\n- The car stays on the borders of the window, when the user drives against a wall and maintains a mouse position pointing outside the window.\n\nPerformance\n- The system should support a minimum of 20 cars driving around simultaneously.\n\nSupportability\n- Background images, car images and music (background/crash) should be changeable.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1283733,
      "meta": {},
      "text": "Usability:\n-The users choices of parameters should be displayed on the screen at all time. \n- The speed of the car should be limited so that it doesn't get too fast for the player to be able to see the car.\nReliability:\n-The car shouldn't be able to exit the screen, always be visible (maybe reappear on the other side when exiting on one side). \n- The system should support the possibility of a simultaneous collision with multiple cars. \n\nPerformance:\n- The screen shouldn't freeze at any time\n\nSupportability:\n- The application screen should adapt to any computer's screen proportion. \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285527,
      "meta": {},
      "text": "Availability:\ndas gehört zu einen der wichtigsten Requirements. Wenn der Spieler gerade spielen möchte, muss er jederzeit die Möglichkeit haben theoretisch zu spielen, Egal um wie viel Uhr beispielsweise. Man muss 'auf das Spiel zählen können' (bei spiel ist das schwer zu erklären, bei einer Website bzw. muss sie immer aufrufbar sein)\n\nSecurity:\nDas Spiel muss zunächst heruntergeladen werden. Dafür muss garantiert werden, dass kein Virus mit dem Spiel entsteht. Aus diesem Grund ist es wichtig Einen Experten zu haben, der sich mit hacken Viren etc. gut auskennt. In den meisten fällen ist es die Arbeit eines guten Programmierers.\n\nResponse time: \nSobald der Spieler auf den 'Game Starten' Button drückt, sollte das Spiel auch beginnen. Das sollte max. 4 Sekunden dauern, damit es für den Spieler keine hohe Wartezeit ist und die Gefahr nicht besteht, dass er das Spiel gar nicht mehr spielt\n\nAdaptability: \nDas Spiel übernimmt die jetzigen Entwicklungen in dem Markt der Spieler. Abhängig von Angebot und Nachfrage verbessert man sein eigenes Spiel. So wie bei jeder Entwicklung, die auf den Schritt davor aufbaut, erkennt man sofort neue entstandene Probleme und kann sie sofort beheben.\nLearnability:  \nDas Spiel ist strukturiert und gut übersichtlich. Mit vielen Farben lässt sich der Start Button schnell finden und man merkt sich schnell den Weg, wie man ein Spiel startet. Wegen der hohen Learnability können beispielsweise auch sehr junge Kinder bereits solche spiele spielen. \n\nMemorability:\nDie Funktionen sind leicht: der Spieler muss das Auto nur lenken und das Spiel ist beendet, sobald er mit anderen zusammenstößt. Die Regeln sind leicht und schnell zu verstehen/merken. ",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1286229,
      "meta": {},
      "text": "Usability: The player can steer the car and adjust its speed by using mouse.  Therefore, players don't need to learn the game by reading the manual or watching videos. After 1-2 uses, the player gets used to the steering wheel and mouse sensitivity so that he can use the console effectively.\n\nReliability: Cars are not out of the game up to a certain impact speed.\n\nPerformance: The board should display the parameter values and update them every second. The number of simultaneous users supported is 12. \n\nAvailability: The game has bugs in at most 1 game per 10000 games.\n\nAdaptability: The game is platform-independent so it can be played everywhere in the world. It contains different language options and metric unit options.\n\nMaintainability: The game should be redesignable and can be modified. For example, developers can add more features to cars without having to recreate the cars.\n\nPortability: The game should be playable in every kind of computer and doesn't depend on operating system.\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286921,
      "meta": {},
      "text": "U: \nThere has to be a maximum of three commands for the driving.\nThe game should only have 2 buttons; one for starting the game and the other to stop it.\nR:\nWhen the user presses a key which isn't bound to any of the defined three commands, the game continues as usual.\nP:\nThe game supports 60 frames per seconds.\nThe felt response time of the input should be solely decided by the input response time of the mouse and the output response time of the monitor.\nS:\nThe game should support xbox and playstation type controllers as valid inputs. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286940,
      "meta": {},
      "text": "Usability:\n1. The User should be able to acces all parts of the system with his mouse.\n2. The games concept should easily be understandable in less than 5 minutes.\n3. The game should provide a help page for the user if he has difficulties with the interface.\nReliability:\n1. Robustness: The game should be able to handle wrong inputs for example keys with no intended function \t \n    accordingly.\nPerformance:\n1. The Game should not take more random access memory than 100 MB. \nSupportability:\n1. Maintainability: Adapting the game with new soudtracks and graphics should not take more than 3 hours. \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287995,
      "meta": {},
      "text": "Usability:\n- Nielsen's heuristic: the status always has to be visible \n\nPerformance:\n- The refreshing rate has to be fast enough so that when you are playing the car reacts to your move accordingly \n\nReliability:\n- When a crash happens the game keeps running and doesn't crash\n- You can restart the game after you won/lost\n\nSupportability:\n- You can easily add car types without messing with other code\n- Maintenance is easy because of \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280330,
      "meta": {},
      "text": "Usability:\n1. Bumpers should be playable without having any prior knowledge about gaming.\n2.Players should understand the game after the first time of playing.\n\nReliability:\n3.Bumpers should only hang at a maximum of one time out of 500 times of playing.\n\nPerformance:\n4.Bumpers should be playable by at least 10000 users simultaneously without crashing.\n5.Bumpers should need at a maximum 20mb per hour of bandwidth in order to function. \n\nSupportability:\n6.Bumpers should be playable on any operating system.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280369,
      "meta": {},
      "text": ". NFR1 (Usability):  The speed, game and location of the car should be visualized through GUI\n. NFR2 (Reliability): The system should be able to handle multiple collisions simultaneously\n. NFR3 (Performance): The game should update the screen at least 25 frames per second\n. NFR4 (Supportability): The game should have a cross-platform software\n. NFR5 (Usability): The car and collision must be changeable throughout in maximum 2 clicks\n. NFR6 (Implementation Requirement): The application uses JavaFX for the GUI aspect",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283962,
      "meta": {},
      "text": "Usability\n- The interface displays only two buttons: one to start the game and another one to stop it, this is to make the interface very straightforward for the player.\n- The player must be able to easily identify his car, therefore it's static and located in the up left corner of the game board when the program starts, while the system cars are already moving. If the player did not start playing within the 3 seconds after starting the game, the interface produces 5 circle blinks around the car to indicate the player where is his car.\n\nReliability\n- The player must have a mouse to control the his car on the game. i.e, the game only supports one mouse input, and not other devices such as keyboards or joysticks, since they produce unwanted behaviour in the game.\n- The touchscreen is not available in the game window when the game starts. This is to avoid troubles when  the player tries to manipulate the car with the touchsceen and also with the mouse.\n\nPerformance\n- The system has to handle the detection of multiple collisions at the same time in different parts of the game board, reproduce their crash sound and determine the winning car in less than 1 second.\n\nSupportability\n- It should be possible to add new collision types to the game. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284905,
      "meta": {},
      "text": "NFR1 Usability: First-time players must be able to explain in his own terms the functioning of the game after three tries.\nNFR2 Robustness: Any other input than coming from the mouse should be ignored.\nNFR3 Performance: The elapsed time between a click on the start button and the moving of the cars, should not exceed 0.5 seconds\nNFR4 Maintainability: The process of adding a new car type should not take more than 15 minutes for an experience programmer.\nNFR5 Security: A penetration test against the application should not identify any weaknesses.\nNFR6 Scalability: The application should be able to accommodate up to 100 cars.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285185,
      "meta": {},
      "text": "Under the category of usability, it shall be required that only one \"keystroke\" (eg. mouse click, key on the keyboard) is required to move the bumper towards a certain direction as a user. In terms of reliability, it is worthy to note that a clear winner should be picked in an instance of a collision and that bumpers can execute games with at least 15 cars which all move. In addition, a bumper cannot crash into itself or a wall. In terms of Performance, the music should be played for 100% of the duration of which the game has taken place. The last key requirement of supportability is that the game should be supportable if the images for the cars are extended/modified.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285465,
      "meta": {},
      "text": "Usability:\n1. User can customize the menu layout.\n2. User gives 3 commands: start game, stop game and changing direction. Error tolerance is low.\nReliability:\n3. Users' data is encrypted and not shared.\n4. Game accepts passwords with at least 8 characters containing at least one number and one special character.\nPerformance:\n5. Up to 10k users can sign up simultaneously and up to 1mil users' data can be stored.\nSupportability:\n6. If the servers become unavailable, they can be under maintenance for up to 4 hours.\n \n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1280572,
      "meta": {},
      "text": "Usability: \nThe game is intuitive in use: even without reading the rules, a player can understand, what they need to do to win.\nThe maximum number of clicks for any function in the system should not be more than five clicks. \nReliability: \nThe application should be crash-safe.\nPerformance: \nThe average response time between click and reaction must be less than 0.5 seconds. The maximum response time between click and action must be two seconds, otherwise, the player will be too slow.\nSupportability:\nThe game should be platform-independent\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282024,
      "meta": {},
      "text": "Usability:\n \t-Once the program is started, the user needs only one click to start the game.\n\n\t-The background music should always be quiter than the crash sounds played during the game. Both\n\tshould never exceed x-decibels. (I don't know how loud 1 decibel is, which is why I am using a variable \"x\"\n\there, where x stands for the appropiate amount.)\n\t\nReliabilty:\n\n\t- Even if more than 2 cars crash at the exact same time, the system handles it properly (e.g. one collision\n\tafter another) and doesn't throw an exception.\n\n\t- The game should ignore wrong user inputs, as well as at least 15 left mouse clicks\n\tper second.\n\nPerformance:\n\n\t- The game should be able to handle at least 30 cars on the screen without the game dropping below 30\n\tfps (with appropiate hardware).\n\nSupportability:\n\t- The game variables (e.g. the number of slow and fast cars) can be edited easily with one change in the\n\tcode. This means the implementations doesn't use \"magical numbers\" out of the blue, but instead uses\n\tthe same variable over and over.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282151,
      "meta": {},
      "text": "Top 6 Quality Requirements for Bumpers:\n\n- The game should be very easy and intuitive to use. To be specific: The game should be intuitively usable by any person, even those with very basic computer knowledge, for example a grandma or a politician in the EU parliament.\n\n- To feel reliable from a users perspective, the game should recover from every potential error, which should rarely even exist in the first place. Worst case would be a hard crash of the app.\n\n- Bumpers should run on every device, even a 8 year old cheap android phone with an outdated OS version,  with at least 30 fps and with no visible hiccups or delays after user input. The goal is 60 fps or even 120 fps on supported devices like the iPad Pro or MacBook Pro.\n\n- The game needs to be supported by iOS 12 and newer to be playable on iPhone 5s and newer, by android 5 and newer to support android 5 devices like the amazon fire tv stick, by macOS Catalina and newer and by Windows 10 and 11. Macs and PCs as old as 10 years should run this game without problems.\n\n- The User Interface should look clean and modern using a consistent design and both a light and a dark mode (chosen automatically based on system status). Furthermore, the UI should adjust to the standards of the platform it's running on, eg. looking beautiful on macOS and looking like crap on Windows. \n\n- To provide even the best downloading and installing experience, the app itself should be as small as possible without sacrificing quality by compressing the music or textures to a level it it noticeable. The goal is 80 MB or less download size, independent of the platform.  ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1282751,
      "meta": {},
      "text": "NFRs: \n\nUsability (Learnability): \nplayers need at most 5 minutes to understand the fundamental mechanics of the game when encountering it for the first time. \n\nUsability (Learnability): \nThere should be an onbaording for new users, to guide them through the settings and show them where they can change collision types, etc. \n\nReliabitity (Safety): \nThe user should be prompted with a modal asking them if they really want to stop the game and the game should freeze if the STOP-button is clicked. This is to ensure that accidentely clicking the button doesnt worsen user experience. \n\nPerformance (Performance):\nThe system should be able to handle up to 50 cars without any visible performance loss/lagging. \n\nPerformace (Availability): \nThe system should run without requiring internet connection to ensure that the game can also be played offline. \n\nSupportability (Adaptability): \nThe system should run platform independent, thus ensuring that the game can be played on every user device. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283149,
      "meta": {},
      "text": "NFR1 : The user should be able to look at the UI and immediately understand how to start the game, with less than 2 clicks.\nNFR2: The user should not run into any game-crashing bugs during the game, nor be able to create one with their inputs.\nNFR3: The Game should run smoothly without stopping unless the player presses Stop Game. As such music, SFX and cars should not freeze, jitter or pause without player's manual stop (or in game reasons such as being car being crunched)\n\nNFR4: The system should remain simple enough that at a later date, other developers may add different cars, collisions and sound effects as subclasses of the pre-existing classes.\n\nNFR5: The user should be able to easily find the option to change car type and collision victory conditions, and then change them with less than 5 clicks.\n\nNFR 6: The game should be able to handle at least 20 cars without a performance drop of more than 5%",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283236,
      "meta": {},
      "text": "1. The car controlled by the player should be able to accurately respond to the movement of the player's mouse.\n2. Every collision must produce a winner.\n3.The game should be able to handle all collisions that occur in the game at the same time, regardless of whether the collision is related to the player's car or not.\n4.The player-controlled car should react to the movement of the player's mouse in less than 0.01 second.\n5.The game should allow developers to easily add new game music, car types and pictures, new collisions.\n6. When the game stops, the player should be able to easily proceed to the next step, choosing to restart or close the game.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283869,
      "meta": {},
      "text": "6 Quality Requirements:\n\n1. Usability: Cars shall appear at least 2cm in size.\n2. Usability: Players need only 1 click to start the game.\n3. Reliability: Bumpers should not crash more than once out of 1000 executions.\n4. Performance: After steering the direction of the player's car should be changeable in less than 1 second.\n5. Supportability (Maintainability): Bumpers must be re-designable to a client-server architecture.\n6. Supportability (Adaptability): As Bumpers must support Android- and iOS-systems.\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283945,
      "meta": {},
      "text": "NFR1: Usability:The game should be minimalistic and have at most 5 interactive buttons (excluding mouse steering of player car)\n\nNFR2: Reliability: The game should be protected from unwanted intruders, bringing malicious links into the game (assumption online game)\n\nNFR3: Performance: The game should support at least 30 cars on the game board while still running smoothly without crashing. \n\nNFR4: Availability: The system should be have 100% availability 365 days a year from 1pm until 7am GMT and 98% availability the rest of the time\n\nNFR5: Supportability: The game should be able to run updates without having to close the entire application.\n\nNFR6: Conformance to guidelines: The design of the system should conform to the typical usability guidelines such as Nielsen’s usability heuristics.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284251,
      "meta": {},
      "text": "Usability\n- Das vom Spieler gesteuerte Auto sollte sich farbig von den anderen abgrenzen.  (Learnability)\n- Die visualisierung der Parameter vom Spielerauto sollen nichts im Spielfeld verdecken (Satisfaction / user experience)\n\nReliability\n- Das Spiel sollte auch bei 30 Maus-Eingaben pro Sekunde perfekt funktionieren. (Robustness)\n \nPerformance\n- Bei wechseln der Collisionsentscheidung sollte das Spiel nicht pausieren/laggen. (Availability)\n- Das Spiel sollte bei verschiedenen Collisions das Gerät nicht zusätzlich belasten. (Accuracy)\n\nSupportability\n- Das Spiel sollte von verschiedenen Platformen, sowie von Web Applikationen unterstützt werden. (Adaptability)",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1285859,
      "meta": {},
      "text": "Usability:\n- The game should be easy to install without taking too much time to set it up. The average time to \ninstall the game and start playing should be around 3-4 minutes.\n\nReliability:\n- Robustness: the system shouldn't crash, if the player enters an unexpected input such as constantly driving against the wall. \n- Security: the system shall under no circumstances leak the email address of the player or other account information to the public\n\nPerformance:\n- The game should run smoothly with up to 15 cars without any bugs or visual inconsistencies\n- The game's graphics should be high quality - at least 30FPS\n\nSupportability:\n- Maintainability: it should be easy to modify the system when needed (e.g. bugs: when a car drives against the wall there is a visual inconsistency)\n- Maintainability: it should be easy to add new car types such as the exotic car\n- Adaptability: the game should be platform independent\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286028,
      "meta": {},
      "text": "1. Usability: The game should be started within 3 clicks \n2. Usability, memorability: The way to start the game should always be the same (same 3 clicks after each other)\n3. Reliability: The game should not stop completely if the user clicks on stop during the game, it should just pause the game and ask him again if he really wants to quit.\n4. Performance: The game should check for collisions every frame (so about every 1/25 second) \n5. Performance: The game should be able to handle about 25 user inputs per second (changes in direction)\n6. Supportability: A new car type should be able to be implemented in under 30min \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286998,
      "meta": {},
      "text": "Usability:\n\t-one can start the game with a maximum of 2 clicks\n\t-one can stop the game with a maximum of 1 click\nReliability:\n\t-the game shouldn't crash at any point in time\nPerformance:\n\t-the player car should reakt with in a maximum of 5ms to a mouse click\n\t-the player car should move to the exact spot the player clicked on\nSupportability:\n\t-the player should be able to change the window size / game size",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281491,
      "meta": {},
      "text": "The following requirements are part of the NFR of bumpers:\n1. All buttons, views, cars, and players must be clearly and visibly labelled to ensure the game's easy navigation and fast learnability. The gamer must be able to see the start and stop button, show the parameters of the chosen car, type of collision... (Learnability - Usability)\n2. On average, 40% of the gamers continue to play bumpers after one day of downloading the app, and 20% after a week to keep track of user satisfaction. (Satisfaction - Usability)\n3. The game should be able to be played on various browsers. (Robustness - Reliability)\n4. The determination of the collision and notifying the gamer should be no more than 4 milliseconds after the collision has occurred. (Response time - Perfromance)\n5. Collisions should be 99.99% evaluated correctly, based on the choice of collision the user has selected. (Accuracy - Performance)\n6. The game interface should adapt to the size of the screen/ window the user has. If the gamer resizes the window, the features should hide/be displayed accordingly and the gamer should be able to continue the game. (Adaptability - Supporability) ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281684,
      "meta": {},
      "text": "Reliability.Robustness: Bumpers should be playable even if the player enters unwanted input (for example he uses his keyboard)\n\nSupportability.Maintainability: Bumpers should be easy to fix if there happens to be an error. Also new stuff (eg. new cars) should be very easily be implementable (eg. for a developer whos familiar with the code: 10-20min)\n\nPerformance.Availability: Bumpers should be available 100% percent of the time. As the game is (at the moment) not being updated, there should be no new errors introduced.\n\nPerformance.Response Time: Bumpers should be able to respond to an input within 20 milliseconds\n\nUsability: The game should have an explanation of how it works, so that the users can understand what to do and how to win.\n\nSupportability.Portability: Users should be able to play Bumpers on any device (device here means a computer) whereever they want without greater setup (eg. installing an IDE to play). Bumpers has to be portable in some way (eg. giving the .jar file to another user)\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282943,
      "meta": {},
      "text": "Usability: - User needs to start the game by just one click, \n\t\t- User should steer the car via single click,\n\nReliability: Robustness: \t- When user double clicks, game should maintain its function and shouldn't crash.\n\nPerformance: Response Time: -Clicks should turn the car in at most 0.1 seconds.\n\nPerformance: Availability: \t- Downtime of the game shouldn't exceed 0.03%\n\nSupportability: Adaptability: \t- Game set itself to dark/bright mode according to the systems current setting. If the user uses the dark mode, game should also adapt itself.\n\t\t\n\t\t\t\t\t\t- Game text size should adapt itself according to the system's text size.\n\nSupportability: Maintainability: - New images could be added at most 5 minutes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283111,
      "meta": {},
      "text": "Usability: players only need one click on a button to either start or stop the game.\nAvailability: The game should be available for 95% the time of a week.\nPerformance: The time to start the game should be less than 2 seconds\nCompability: The software must run on every windows operating system higher than windows 7\nMaintainability: the software should run without bugs and when the software got bugs they should be fixed within 3 hours so that the availability requirement can be fullfilled\nSecurity: The game does not transmit any sensitive data of the player \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283203,
      "meta": {},
      "text": "NFR1: Usability: The start screen must be intuitive to start a game. All interactions should be completed in less than three clicks before the game start. \nNFR2: Usability: Cars that are controlled by users should be distinguishable from other cars by color. (ex. Red, fluorescent yellow)\nNFR3: Conformance to guidelines: The design of the system should conform to the typical usability guidelines. \nNFR4: Performance: The average response time between click and reaction must be less than 0.5 seconds.\nNFR5: Maintainability: The Bumpers must be designed in a way that allows adding or removing new type of collisions and cars. The update of the new version can be completed within 30 minutes.\nNFR6: Reliability: Users can start the game 98% of the time without failure(error).",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287839,
      "meta": {},
      "text": "NFR1 (Usability): Starting the game and selecting the collision type should not take more than 4 clicks.\n\nNFR2 (Usability): The user interface visualizes the speed and consumption of the car in the top middle of the UI, to mimic a real car dashboard and make it intuitive for the user.\n\nNFR3 (Reliability): The player's car has a fixed max speed, so it is not possible for the player to move the mouse as fast as possible, which could crash the game.\n\nNFR4 (Performance): The game should support at least 60 ticks per second to make it a fluid and enjoyable experience for the player.\n\nNFR5 (Performance): The loading time of the game shouldn't take longer than 0.5s, as more can lead to frustration for the user.\n\nNFR6 (Supportability): Changing or adding a new car or collision type into the game should not take more than 30 minutes and the game should update automatically after the player finished the previous round, so he can continue playing with the new circumstances.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281252,
      "meta": {},
      "text": "Usability:\n1. The user should be able to start the game with one click (Efficiency usability criterium).\n2. The user should be able to end the game with no more than two clicks (Efficiency usability criterium).\n3. The system should display the status of the game when the user won or lost the game (Visibility of system status).\n\nReliability:\n4. The system should not allow the player to drive off the game board by car. (Safety)\n\nPerformance:\n5. The availability of the system (ratio of the expected uptime of a system to the sum of the expected uptime and downtime) is the same whether the user is or isn't connected to the Internet. In other words, the system is independent of an Internet connection. (Availability)\n\nSupportability:\n6. The game should be platform independent. This means it should run regardless whether it's run on MacOS, Windows or Linux. (Portability)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281454,
      "meta": {},
      "text": "1. Usability: the user of the game should be able to start the game after opening it with only one click on the start button with the mouse. In case the player has lost the game, the player needs at most two clicks to restart the game.\n\n2. Reliability: \nI. Robustness: if the user of the game pressed the wrong button nothing should happen, and he or she should be able to continue playing the game.\nII. Security: the player should not be able to influence the speed of the cars, so that he makes use of this to make the game easier for him to win and have an advantage over the other cars.\n\n3. Performance:\nI. Response time: the response time when clicking the mouse should not go below 50 milliseconds until the car react to the click.\nII. Availability: since the game will be available to play online too, the downtime of the server is at most 30 minutes per month.\n\n4. Supportability:\nMaintainability: the icons of the cars should be interchangeable by the developers within 10 minutes in order to \nmodify the game. For example, in Christmas the player's car will be changed to a sleigh pulled by reindeer.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281923,
      "meta": {},
      "text": "NFR1: Usability: The system should be easy to understand and intuitive to use. All interactions should be completed in less than five clicks.\n\nNFR2: Conformance to Guidelines: The system should be designed in a way that it conforms to the typical usability guidelines, in particular Nielsen’s usability heuristics.\n\nNFR3: Reliability: The system should be able to react to unexpected errors in the game without crashing, while always offering a way to return to the start.\n\nNFR4: Uptime: The availability of the game should exceed 95% throughout the week and exceed 80% during the weekend.\n\nNFR5: Performance: The speed of the frames in the game should be over the standard rate of 24 frames per second (fps).\n\nNFR6: Supportability: The system should be designed in a way that new car types and new collision types to choose from can be integrated while the system is running.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282828,
      "meta": {},
      "text": "Quality Requirements for Bumpers Game:\nUsability:\n- The player can start the game by one click.\nReliability:\n- The system can tolerate 100 customer clicks per minute for steering the direction of the car.\nPerformance:\n- The availability of system should be at least 99%. \nSupportability:\n- The collision type could be changed within 45 seconds. \nConstraints:\n- The game should be developed in Java ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1283164,
      "meta": {},
      "text": "6 quality requirements for the Bumpers game:\n1. Usability: This game is easy to learn that we can learn how to play it just simply by trying out for a few times and after it is learned , it is fast to play and easy to remember.\n2. Reliability(Robustness): In the Bumper game if the user enters a wrong action or do not play with the rule, the game has the ability that it can still work . It allows user with wrong input. \n3. Reliability(Safety): For the safety aspect that if the unwanted incidents happen, the Bumper game won't break down, if it is given a wrong instruction, it will may just warn you but still work.\n4. Performance: The Bumper game is able to process the quick reaction to the\nusers. The car will respond with the click in a very short time like 0.01s by hanging its position. \n5. Supportability (Adaptability): The environment of this game can be different that it can be used with Windows, MacOS or Linus even also available with Android and IOS.  \n6. Supportability (Maintainability): The user can send feedback to the developer, so the developer can fix defects or add new functions with these notifications from users. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284267,
      "meta": {},
      "text": "Usability:\nNFR1: Der Spieler kann die Geschwindigkeit des Autos mit einem Click erhöhen und mit einem Click senken.\nNFR2: Der Spieler kann das Spiel mit höchstens zwei Clicks starten und mit höchstens zwei Clicks beenden.\nNFR3: Der Collisiontype kann mit einem Click während des Spielens geändert werden.\n\nReliability:\nNFR4: Das Spiel ignoriert alle Eingaben, außer den Linksklick der Maus (und anderer Tasten, die für die Funktion gebraucht werden z.B. zum Beschleunigen).\n\nPerformance:\nNFR5: Das Spiel kann mehr als 10 Mausinputs pro Sekunde behandeln, ohne das die Tick-Dauer über 1 ms geht.\n\nSupportability:\nNFR6: Neu gecodete Collisiontypes können nur durch das Setzen als Unterklasse von Collision und verändern einer Variable in Gameboard ins Spiel integriert werden.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1284276,
      "meta": {},
      "text": "Performance: \nThe Game should always run with at least 30 fps\nThe Player should always have the same chance of winning. This factor is evaluated by the win/ loss ratio.\nThe Game should be capable of running smoothly(the before mentioned minimum fps limit) with at least 20 Cars present in-game\n\nReliability:\nThe player should always be aware of the incoming collision is a win or loss for him. In this case, a vehicle coming from the right should always be the one winning the collision. Testet via the game output of collision wins/losses.\n\nUsability:\nThe player car should be controllable via Touchscreen, trackpad, or mouse\nThe player shall be notified of important game events by sound and visual output (a collsion should play a sound)\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284525,
      "meta": {},
      "text": "Quality requirements for Bumpers:\n\n1.  Statement: \"The game should be platform independent.\"\nCategory: Supportability --> Portability\nRequirement: The game should be available and playable on all platform types (mobile phone, tablet, computer) and operational systems (Windows, Linux, MacOS, Android, IOS)\n\n2. Statement: \"It should visualise different parameters [...]\"\nCategory: Usability --> Satisfaction / user experience\nRequirement: The game should display different parameters (speed, consumption and location of the car) in a way so that the player can directly access (without any additional action ) all relevant information concerning his car while playing the game without interruption. \n\n3. Statement: \"The determination of the collision winner should be changeable during gameplay.\"\nCategory: Supportability --> Adaptability\nRequirement: During gameplay the evaluation of the collisions should be adaptable by the player without the necessity to discard the present game state. \n\n4. Statement: \"When cars crash, there has to be a sound effect .\"\nCategory: Usability -> Satisfaction / user experience\nRequirement: During gameplay the collision between two cars has to be accompanied by a sound effect, so that the player is informed in a simple way about a crash.\n\n5. Statement: not explicit in the problem statement\nCategory: Reliability -> Robustness \nRequirement: All possible inputs done by the player should not lead to an error in terms that the system crashes or enters an undefined state. \n\n6. Statement: not explicit in the problem statement\nCategory: Performance -> Response time\nRequirement: All the time the player should perceive the interaction with the system as pleasant. To guaranty this, the system should process all user inputs in max. 10 ms. Furthermore the frame rate during the gameplay should not drop any time under 30fps. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284583,
      "meta": {},
      "text": "Usability: \n- 1) Efficiency: The determination of the collision winner should be changeable during gameplay. This should need at most 3 clicks. After the last click, the game should continue running normally without having to press any additional buttons. \n- 2) Aestetic and Minimalist Design: The game board should only contain the buttons which are needed for the game and no more unneccesary buttons. Only the parameters of the player's car (speed, consumption, location) should be visualized  and not the not needed information of the other cars.\n\nReliability: \n- 3) Robustness: If the player presses a key on his/her keyboard during the play, the game should not crash, but continue running without any disruption. \n\nPerformance\n- 4) Response time:  97% of the user's interaction with the system via the User Interface should be processed in less than 1 second. \n- 5) Response time: The music for the begin of the play, as well as for a collision should be played not later than 0.5 second after pressing the start button or having a collision in all cases.\n\nSupportability:\n- 6) Portability: The game should be platform independend, that means it should run on all possible platforms and look exactly the same on every possible platform. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284945,
      "meta": {},
      "text": "Usability: \n\t- Players should be able to select the car with only one click\n\t- There should be instructions before starting the game\n\nReliability:\n\tRobustness:\n\t- The game should start from where it stopped, in case of a power cut\n\n\tSecurity:\n\t- Players should identify theirselves with user name and password before starting the game\n\nPerformance:\n\tPerformance\n\t- Steering the car and changing the speed shouldn't take more than 0.5 seconds\n\n\tAvailability:\n\t- Downtime shouldn't be more than 10 minutes per week\n\nSupportability:\n\tMaintainability:\n\t- Maintenance should take at most 15 minutes\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285522,
      "meta": {},
      "text": "Usability:\n\t\t- Player can pause and continue the game with just one click.\n\t\t- Different car types must have different graphical appearances.\n\t\t- The game should visualize different parameters of the car.\n\nReliability:\n\t\t- Player can control only his car.\n\nPerformance:\n\t\t- The game should load in less than 8 seconds.\n\nSupportability:\n\t\t- The game should be platform independent.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286151,
      "meta": {},
      "text": "1. Files are encrypted during download and an MD5 checksum is provided to prevent leakage of data or undetected modification of code. (R)\n2. An image which explains the controls is displayed at the start of the game. The image can be moved on from by any button press. (U)\n3. The game must run at, at least, 60 FPS on all 64bit processors not older than 20 years under the condition that no further applications run at the same time. (P)\n4. The installation is handled by a standard installation client. The client prompts the user to decide whether to create a desktop shortcut or not, where the files should be installed and if he wishes to update necessary libraries. (S)\n5. In case of a crash, display a window which explains that a crash has occured. The window gives the user the option to con- or dissent that a crash log and relevant system telemetry be delivered to the developer. (S)\n6. The application allows changing of following settings: controls, mouse sensitivity, speed control sensitivity, window size, audio volume and framerate limit. (U)\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286414,
      "meta": {},
      "text": "1. Usability(Learnability): The player can easily control the car (clicking to move in the wanted direction)  and its speed(mouse wheel) with the mouse.\n2. Reliability(Robustness): Clicking outside the game window or giving the wrong input should have no effect on the flow of the game.\n3. Performance: The game has to support at least 1000 individual cars driving simultaneously.\n4. Performance(Response time): The response time for any input given by the user should be less than 10ms.\n5. Supportability(Portability): The system should be able to run on any PC setup, no matter how outdated it is.\n6. Supportability(Maintainability): Weekly maintenance and bug fixes should last less than 30 minutes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286603,
      "meta": {},
      "text": "1. Player can steer the direction of the car using the mouse (Usability)\n2. If the game crashes, the cars position re-start from its last position  (Robustness)\n3. Game should be able to handle up to 20 cars on the screen at the same time (Performance)\n4. The game should support different collisions (Supportability)\n5. The game should be able to be played offline and online (Supportability)\n6. Player should be able to change its speed using the mouse (Usability)",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287894,
      "meta": {},
      "text": "Usability:\n*Input to the car is given via mouse clicks\n*Cars on screeen should be differentiable \n\nReliability:\n*the program should not crash, when the mouse is clicked outside of the games window\n\n\nPerformance:\n*The operations on all cars on screen should be handled within one frame. The game runs at 25 fps\n*The program has to use minimal Ram\n\n\nSupportability:\n*The code should be structured in a way, to allow new cars and collisions to be added in in a plug and play manner.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287904,
      "meta": {},
      "text": "\nUsability:\nThe Player should be able to start the game in 1 click\nThe car image and sound should be customizable with less than 5 clicks each.\n\nReliability:\nThe game should only end if player does press stop. Not if pressing any other keyboard keys\nYou should only be allowed to play if you have a mousepad or mouse conected.\n\nPerformance:\nThe system should not crash randomly during the game. Maximal crashing should be 1 every 1000 games on minimum hardware requirements\n\nSupportability:\nThe game should be able to run on Windows, mac and ubuntu linux.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281301,
      "meta": {},
      "text": "Usability: \n1. Users control the car by using the mouse, in other words, users interact with the mouse.\n2. The main functions of this game like Start or Stop should be displayed at the top of the UI with natural language notations for better understanding.\n3. In the game board UI, detailed information, that is, different parameters of cars should be displayed. \n\nReliability:\n    Robustness:\n    4. The car can only run within the game board. \n    Security:\n    5. The prevention of intended access of control by other users must be prepared. in other words, once there's illegal access, the application stops immediately.\n\nPerformance:\n    6. 95% evaluation of the winning car shall be processed in less than 1 second.\n   \nSupportability:\n    Adaptability:\n    7. This game works the same under different performing platforms.\n    Maintainability:\n    8. New Types of cars or new Types of collision can be added if there are any new requirements related.\n\nConstraints \n    9. Packing Requirements: This app must be delivered to both Android’s App Store and Apple App Store.\n \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1281948,
      "meta": {},
      "text": "Usability\nEasy to Use and Setup -> all main components accessable within 2-4 Clicks\nFun to play -> Rewarding to winning player -> times played in a row\n\nReliability\nNo Errors / Bugs\nZero to none downtime\n\nPerformance\nEffifiently running on slower machines -> low minimal requirements & good FPS\n\nSupportability\nRunnable on older Machines -> Backwards compatability",
      "score": 58.3,
      "language": null
    },
    {
      "id": 1282011,
      "meta": {},
      "text": "Usability: \n\n1. Der Spieler braucht nur einen Klick, um das Spiel zu starten; muss also nicht lästige Voreinstellungen vornehmen. Nach dem Starten des Spiels braucht der Spieler auch nur eine Maus, um sein Auto zu steuern und kann mit einem Klick die Geschwindigkeit verändern. Das Spiel hat somit eine benutzerfreundliche Handhabbarkeit. \n\n\nReliability:\n\n2. Das Spiel ist so entwickelt, dass es von äußeren Angriffen geschützt ist und so den User nicht potentiellen Gefahren aussetzt. \n\n\nPerformance:\n\n3. Das Spiel ist 24h am Tag spielbar und ist somit immer verfügbar.\n\n4. Das Spiel kann von sehr vielen Usern auf einmal gespielt werden.\n\n\nSupportability:\n\n5. Das Spiel ist auf sehr vielen Endgeräten spielbar und hat somit eine hohe Adaptability. \n\n6. Das Spiel kann ohne Probleme von den Entwicklern modifiziert werden, sodass dabei z.B. einfach mit neuen Anforderungen umgegangen werden kann. \n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1284000,
      "meta": {},
      "text": "1. Usability:\n1) Users need at most 4 clicks for start a game (open application, open tutorial to the game, close tutorial, click button \"Start\")\n2) After open application must be downloaded with corresponding sign or/and word \"Download\" ( download should take maximum 3 seconds). After download users must set eyes on 3 buttons at the middle of display: \"Start\", \"Tutorial\" and \"Exit\".\n3) Tutorial must be added and shows actions of player's car in simple signs, like \"up\" or \"left\", that correspond to different keys. It can show also, how looks like player's car or enemy and short describe the main purpose of the game.\n\n2. Reliability:\nOn game board can be maximum 25 cars to avoid heavy CPU load from handling collision of each car.\n\n3. Performance:\nProgram need determinate each car's collision for each frame per second in 30 fps.\n\n4. Supportability:\nDespite dozen of tests and release developers must determine all the reviews, that describe bugs and developers team must in 1 - 2 days fix them.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284162,
      "meta": {},
      "text": "Usability:\n1. The game controls should be described/demonstrated to the player\n2. The player should be able to start the game directly from the start screen (without having to navigate to other screens)\n\nReliability:\n3. The game should not stop and close instantly when the player accidentally presses a button on the keyboard\n\nPerformance:\n4. The game should run at at least 25 frames per second\n5. The game should not load for more than 5 seconds on startup\n\nSupportability:\n6. The game should adapt its size to the screen size of the device it is used on so that the whole gameboard is visible",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284296,
      "meta": {},
      "text": "Usability \n- there should be a possibility to play bumpers with the keyboard (arrow keys or aswd keys), as some people might lack a mouse or play on laptops\n- users should be able to finish the set-up-process / configuration process in less than 8 klicks\n\nReliability \n- vicious players should not have the possibility to alter the source code in order to manipulate the game\n- the game should be able to handle the input of wrong data by the user without mayor consequences like a crash and recover after e.g. the input of wrong parameters for the configuration\n\nPerformance \n- the game must not use more than 3GB of RAM\n- the game should be able to take advantage of the 53 fps that can be achieved on a Apple M1Pro chip without dropping below 42 as that is what a MacBook-Air has \n\nSupportability \n- Bumpers should be written in a way that it is easy to maintain the game. Changes should be made quickly and without huge overhead costs for developers, therefore it should be written in a way that uses minimal overhead, lots of interfaces and inheritance to make it very easily changeable. As little duplication as possible.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284854,
      "meta": {},
      "text": "Usability: - The player can steer the direction of the car with the mouse and change its speed. (User control)\n\t\t   - The game should visualize different parameters of the car, e.g. the speed, consumption and location \t\t\t \n                      of the car (Visibility of System status)\nReliability: - The game should tolerate and ignore wrong user inputs, e.g. inputs by the keyboard\n\nPerformance: - The game should be able to maintain its function even with many cars on the gameboard.\n\nSupportability:  - The game should be platform independent.\n\t\t\t       - The determination of the collision winner should be changeable during gameplay. \t\t \n                                   (Adaptability)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285928,
      "meta": {},
      "text": "One usability requirement in terms of usability is, that the graphic designs of the cars should look similar in order to have a matching design alltogether. \nAnother usability requirement is, that there should also be matching accustic effects in order to have a coherent sound design.\nA reliability requirement is, that the winner of a collision should be calculated correctly with a failure rate of below 1%\nA performance requirement is, that the winner of a collision should be calculated within one milli second.\nA supportability requirement is, that there are always actualised UML diagramms of the programm in order to have a good overview of the project.\nAnother performance requirement is, that the game loads within 1 second when started.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286315,
      "meta": {},
      "text": "1Usability:Player interaction shall be done via mouse steering\n2Performance:The announcement of winner shall take less than 5s after all collision\n3Supportability:The game shall be compatible with 3 platforms IOS,Windows,Andriod\n4.Reliability: The game crashes at most 1 per 100 games\n5.Maintainability: the bumpers can be updated to a online game with the client server\n6.Performance: the detection of car collision should be evaluated in 0.00005s. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286649,
      "meta": {},
      "text": "Usability\n-The music starts when the user starts the game\n-The player steers the car\n-Visualized parameters show the player the current speed, consumption etc\n\nReliability\n-The game is written in java to eliminate memory leaks\n\nPerformance\n-the game should be high performance to guarantee fluid gameplay\n\nSupportability\n-The game has high adaptability and is platform-independent because it is written in java",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1287085,
      "meta": {},
      "text": "Usability ->The player should be able to play the game only with the mouse.\nUsability -> The player should be able to change the winning collision with only 4 clicks.\nReliability ->When the player input isn't coming from the mouse, the game should ignore it.\nPerformance ->It should take max 1 sec for the music to start when the game begins.\nPerformance -> It should take max 0.5 sec for the crash sound to pe played after the crash has happened.\nSupportability -> The game should allow fast implementations of new ccar types.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287310,
      "meta": {},
      "text": "Quality requirements\n• Usability\n - The player does not need more than 15 moves to either win or lose the game\n - One game has a time limit of 20 minutes\n• Reliability\n - Collisions glitches to win the game are not allowed\n• Performance\n - The Bumpers Game supports at most 5 simultaneous users at the multiplayer mode\n - The availability is at least 96 %\n• Supportability\n - Due to the system code the support for developer is easy to understand and in case of defects to repair the system and make it run again",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1287615,
      "meta": {},
      "text": "Usability: Players need to click a button to start the game\nReliability: Robustness:  the system can tolerate players clicking on the mouse and steering car continually for at least 30 seconds \nsecurity: the system asks for the user name and password to prevent hacking if enter the wrong information it will be locked for 10 minutes and send a warning mail to a player\nPerformance: Response time: 95% of the clicks to steer cars shall be processed in less than 1 second\nAvailability: the availability of the system is at most 99%  \nSupportability: Maintainability: the software can be fixed easily because it is developed by java which is open source software and has full packages and resources to fix bugs\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1288002,
      "meta": {},
      "text": "Usability : 1)Players shall be able to start and stop the game with a mere mouse click.\n                  2)The car steering should be smooth and useable by beginners as well.\n\nReliability: 1) The game works evenly & smoothly across all Platforms.\n                  2)Unwanted incidents such as Collision of more than 2 cars should be taken in account& ruled out \n                    if necessary.\n\nPerformance: 1) There must be no lagging during the collisions.\n                        2) The music should play and stop with the respective clicks without delays .\n                        3) The car steering must be smooth.\n\nSupportability: 1) Performance should be even across all Environments.\n                          2) Sound effects, winner determination should be modifiable& moldable with minimal \n                             inefficiency and complications.\n                            \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1280679,
      "meta": {},
      "text": "NFR1 Usability: The player only needs one click to switch between different difficulties. \n\nNFR2 Safety: Other cars aren't allowed to spawn in 200-pixel times 200-pixel square in the left upper corner, because the car might drive unwanted into another car directly after the game starts. \n\nNFR3 Response time: The game has to start after pushing the start button, within less than 1 second.\n\nNFR4 Robustness: The game needs to adjust the size of the game to the player's screen. It must always be 80% of the width and 80% of the height of the screen.\n\nNFR5 Maintainability: A new car type needs to be added in only one method so that it can be added to the game without any problems.\n\nNFR6 Accuracy: The hitbox of the cars has to be exactly like the pixel range of the image of the car.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281792,
      "meta": {},
      "text": "Usability:\n1) The user should be able to start the game with one click. \n2) The car should react to the mouse click of the user within 10ms, to ensure that the player can steer the car smoothly and respond to the other cars' behaviors.\n3) After starting the game the user should be able to identify his or her car within 500ms. Furthermore, the learnability and memorability of the system should be increased by not changing the position of the Users car after several restarts. The game should also look the same on every platform.\n\nReliability:\n4) Any non-specified keyboard input of the user does not kill the game. \n5) The game supports a maximal amount of 15 cars to prevent instant crashes all the time and no chance for the player to win the game. Furthermore, with a high amount of cars it could be possible that many crashes happen at the same time at the beginning of the game and the system collapses. \n\nPerformance:\n6) The game can handle up to 10 clicks per second\n\nSupportability: \n7) The game should work on different operating systems such as Windows, macOs",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283889,
      "meta": {},
      "text": "Usability Requirements:\n  * Platform independent (it would make it easier for people to play the game)\n  * The game should visualize different parameters of the cars, which will make it easier for the player to \n     understand what is going on\nSupportability Requirements:\n  * The game should support different collisions: Later on, the developers should be able to maintain the game \n     and add new features to it, like new collisions\n  * The collision winner should be changeable during gameplay\nPerformance Requirements:\n  * As a game, Bumpers must obviously be pretty fast so that the user is not hindered by the low frame rate. \n     Inputs must have immediate effect (like steering), or the user has a bad time\nReliability:\n  * Invalid inputs must be checked to avoid glitches (like driving out of the map, having unlimited speed...)",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284282,
      "meta": {},
      "text": "-players need at most two clicks to change the determination of the collision during gameplay\n-prevention of the usage of cheat software \n-the game should be able to handle different steering input than just the mouses, e.g. joysticks and controllers.\n-the system should support up to 100 cars  driving at the same time (99 Bots and 1 Player)\n-the game should adapt the user interface to the device used to play the game\n-the game crashes at most 0.01% of the times played",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286604,
      "meta": {},
      "text": "Quality requirements:\n\n1. Usability:\n1.1 The instruction manual for the game should be limited to the most important aspects and  consist of less than 50 words.\n1.2 The game should support a \"colorblind Mode\" to make it easier for colorblind people to distinguish between different cars in the game.\n\n2. Reliability:\n- The game should just respond to mouse clicks and ignore every other action taken by the user, e.g. using the keyboard. \n\n3. Performance:\n- The response time between the users interaction (mouse click) and the execution of the functionality the user chose (e.g. starting the game, changing the direction, etc.) should be less than 0.1 seconds.\n\n\n4. Supportability:\n4.1 An update for the game which includes one new collision type can be created and published  in less than 24 hours. \n4.2 An update for the game which corrects bugs of any kind can be created and published in less than 48 hours.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287394,
      "meta": {},
      "text": "Usability:\n-\tFor each decision the player has to make (e.g. car/collision type) there has to be a pop up window, that displays all options that can be chosen with a maximum of two clicks\n\nReliability:\n-\tNo error should occur if the player steers the car outside the gameboard\n-\tThe game should also work if the car is steered with a mousepad instead of a regular mouse\n\nPerformance:\n-\tThe response time between the interaction with the mouse and the appearance of the action on the screen should at most take 0.1 seconds\n-\tThe downtime for maintenance should be at most 10 minutes per week\n\nSupportability:\n-\tMaintainability: a new car type can be implemented by having to change at most two classes\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287441,
      "meta": {},
      "text": "Usability:\n\t- The user/player does not need more than 5 minutes to win/lose the game\nReliability:\n\t- The game can still be played online with a slow internet connection from 1Mbit/s\n\t- The game should not allow cheat codes and ban users who use them\nPerformance:\n\t- The game can hold/contain up to 20 cars in the board\n\t- The downtime per month is max. 1 hour\nSupportability:\n\t- The background of the game should change color automatically depending on the user's system setting, for example if the user uses dark mode then the background should set itself into darker color",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287469,
      "meta": {},
      "text": "1: Players should be able to play the game within 4 clicks and edit settings during gameplay within 2 clicks, the user UI should be optimized to achieve this goal.\n2: The program is allowed to crash once in 10 hours of gameplay at most.\n3: Feedback (sounds on collision, UI interaction) to the player should not be delayed more than 300ms after player input.\n4: The frame rate should not fall below 30fps at any time for up to 40 entities on the game board.\n5: The game should be platform independent and deliver the same experience on all platforms.\n6: New collision types and sounds are to be updatable automatically without player input.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1282102,
      "meta": {},
      "text": "Usability: The player should be able to start the game within 2 clicks. \n\t\tThe car steering should be done only by using the mouse (clicks for direction, scroll for speed). \nThe game, once started, must show the player the location of the car, the fuel consumption and the speed. \n\nPerformance: The game should be able to handle at least 15 cars at the same time, including the music, sound effects and the information shown to the player.\n\nAdaptability: The game should be platform independent.\n\nAccuracy: The game should support different collisions.\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286541,
      "meta": {},
      "text": "Usability\n1) The player should see a tutorial about the most basic functions when he opens the game. (help and documentation).\n2) The status of the game should be shown clearly(e.g. whether the game continues), the player should be clearly informed when they lose/win.\n\nReliability\n3) Ensure that the app doesn‘t crash when player does unexpected things. (robustness)\n\te.g. when the user minimises the app and then maximise it, the app should still keep the previous \t\t\t\t\tstate and should be able to proceed with no interruptions.\n\nPerformance\n4) The refresh rate of the rendering should be high enough, so that there is no visible delay.\n5) The user should be able to steer their car fast and accurately.\n     i.e. user does not have to wait for changes to happen\n\nSupportability\n6) There is a version of the game for all popular operating systems (Windows, macOS, Linux).\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287235,
      "meta": {},
      "text": "Usability: the player car is easily distinguishable from the enemy cars, by shape and color.\n\nUsability: the player is being informed by a textbox if he has lost or won the game. \n\nRobustness: cheat detection will hinder anyone from being unfair and getting unrealistic highscores ;)\n\nPerformance: concluding the winner of a collision should never take more than 10ms. \n\nSupportability: because of the object oriented design it is very easy to add new car types the client wants in the game, as they just have to be added as subclasses inheriting from car. \n\nSupportability: bumpers has multiplayer potential, as we just need to add networking and another player class, so if multiplayer gets more and more trendy it is easy to realize. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287405,
      "meta": {},
      "text": "NFR 1 Usability:\nThe Button Layout is intuitive and simple placed in the Same Order and Patter thats used ont other Apps for the operating System.\n\nNFR 2 Usability:\nThe User see's clearly the status of the game through music highlighted Buttons and a Finish message.\n\nNFR 3 Reliability:\nThe crashes evaluate always the way it's intended and the game acts correspondingly. (no bugs)\n\nNFR 4 Performance:\nFor the best user experience the game has a frame rate of a least 60 fps and user's the steering input is evaluated in the same millisecond.\n\nNFR 5 Supportability:\nThe game is easily adaptable with new gamemodes or car types.\n\nNFR 6 Supportability:\nThe game is available for Mac,Windows and Linux.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281181,
      "meta": {},
      "text": "-The game suppuorts all platforms : linux, windows, MacOs..(platform independent).\n-The player can start/stop the game by clicking on a digital button and it takes maximum of 250 mS to respond.\n-The game saves every changes that occure every 100mS.\n-When the game's fenster is unwantedly closed/ the computer turns-off unwantedly, the game keeps saved at it's latest state.\n-The game responds to the movement of the mouse in less than 100mS.\n-The user can send reports, whenever something goes wrong while playing, through a report fenster.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281597,
      "meta": {},
      "text": "1) Usability: Player should be able to play Bumpers without reading a user manual for the game. \n2) Performance: The change of the car type should happen in 1 milliseconds. \n3) Robustness: Really important is that the system should not crash if the player wants to change the type of the \t\t \n                        car. \n4) Security: The download of the game Bumpers should be safe. This means that not viruses should be hidden. \n5) Adaptability: The Bumpers game should support at least 4 languages (english, german, french, spanish). The \t \n                         game changes his language recording to players VPN. \n6) Performance: Another important performance is that the player should be able to steer the car in the direction \t \n                          he wants without waiting for the response of the sytem. This change of steering should happen in \t\t \n                         1 milliseconds. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282821,
      "meta": {},
      "text": "1) Usability: The text size on the button in the end should be more than 1.5 cm, so that the user can read it easily.\n2) Usability: The background color of the game should be different than the cars' colors, so that the user can identify the cars easily. \n3) Reliability:  If three cars collide one after another, the first collide will be taken into account and the second one won't affect the game.\n4) Performance: In the end of the game the winner should be determined within 0.3 seconds.\n5) Performance: Collisions should be perceived within 0.2 seconds.\n6) Supportability: Even if the collision type, that determines the winner, changes, the play continues to work without a problem.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284588,
      "meta": {},
      "text": "Usability: 1. Der Spieler kann innerhalb von 3 Klicks die Geschwindigkeit aendern. \n\t\t2. Der Spieler sieht die geschwindigkeit immer am unteren rechten Rand\t\n\nReliability: 3. Das Spiel nimmt nur Eingaben der Maus entgegen. Wenn Tasten degruckt werden, werden diese ignoriert\n\nPerformance: 4. Das Spiel erneuert jede Position des Autos nach 0,01 Sekunden. \n\nSupportability: 5. Das Spiel besitzt noetigen Mittel um es in ein zwei Spieler Spiel gegen den Computer zu erweitern. \n\t\t\t6. Das Spiel lauft auf jedem Betriebssystem, mit den entsprechenden Anpassungen an das Bertriebssystem.\n\n",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1284823,
      "meta": {},
      "text": "Usability: A player has to be able to start and play the game with less than 4 clicks. The player needs to be able to control the game only using their mouse\n\nReliability: In 1000 runs the game is only allowed to crash once.\n\nPerformance: The game should have at least 60 fps when played on all laptops/pcs with an intel i3 6100 or better.\n\nSupportability: New types of cars or collisions can be added in under 3 hours. The game can run on Windows, MacOS and Linux.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285979,
      "meta": {},
      "text": "Usability:\n-After starting the application the user should be able to start the game with at most 2 clicks\n-The user should be able to close the application with at most 2 clicks at any time\n\nReliability:\n- 99 percent reliability for a week is required\n\nPerformance:\n-90 of 100 random computers (built after 2015) should be able to start the application in less than 1 second\n-The downtime is at most 20 minutes per week\n\nSupportability:\n-90 percent maintainability for 12 hours is required\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286459,
      "meta": {},
      "text": "6 quality (non functional) requirements Bumpers:\n\nUsability:\n1)Learnability: The design should not need any further explanation. The player starts and stops the game and since music starts to play when it is started it is clear when the game begins. Also there is a sound when the player`s car crashes so it is clear when a collision happens which makes the game easy to learn.\n\n2) Visibility of the system status: In each collision there is a winning car, the winner is determined by the game. The game should inform the player about the winner of each collision and keep him informed about what is going on.\n\n3) Memorability/Efficiency: The player is in control of just one car, he starts and stops the game, steers the car by mouse movement and can change the car`s speed. The game is pretty intuitive and should not demand many different kind of inputs and therefore - once it is learned - fast to use.\n\nReliability: \n4) Robustness: The car can just be steered by the movement of the mouse and should not react to other inputs.\n\nPerformance:\n5) The game is played by one player at once.\n\nSupportability:\n6) The game should be platform independent.\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281653,
      "meta": {},
      "text": "1) Usability\nLearnability: The player should have understood the game rules and be able to play the game, after he has read the game instructions once\nEfficiency: The player should need at most two clicks to start the game and two clicks to stop the game\n\n2) Reliability\nRobustness: The game only continues working, when the player presses the left mouse button while steering the car. When the player tries to steer the car while pressing the right mouse button, the game does not react.\n\n3) Performance\nThe latency should be less than 50 milliseconds\nThe availability of the system is 97,5%. Hence, the downtime is at max 252 minutes per week (9828/10080)\n\n4) Supportability\nThe maintainability is 90% for 20hours -> 90% of the component can be repaired in 20 hours",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283103,
      "meta": {},
      "text": "Non Functional Requirements:\n\nNFR Useability: At the begininging of when the software runs, there should be a pop up frame showing the user the instructions/ controls/ objective of the game. The frame should close when the user has accepted and understood the information displayed.\n\nNFR Useability: The user should not have the option to scale the game frame ensuring the third party image resoulution doesnt look unfocused.\n\nNFR Performance: The game should be able to display clear and sharp images of the characters and figures shown.\n\nNFR Performance: The game figures/images should be adjusted to scale based on the size of the frame which the game is played. \n\nNFR Maintainability + Extensibility: The source code needs to developed and organised in such way that it can be easily modified by the developers. For future bug fixes or even further extension to the game.\n\nNFR Legal + Citations: The game need to ensure that images and code which have been taken off the internet need to be properly cited and credited. \n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1284792,
      "meta": {},
      "text": "Nonfunctional requirements:\n\nUsability:\n- users interact with the mouse\n- there are not more than 2 clicks necessary to start the game\nReliability:\n- when a user enters a wrong input (for example closes the game, you have to click 'yes' a second time)\nPerformance:\n- the response time when clicking 'start' or steering the car is way less than 1 second\nSupportability:\n- the game can be played on different computers\n- it is easy to maintain the system because changes in the requirements like adding a new kind of car, collision, sound, picture etc. are easy to implement",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285016,
      "meta": {},
      "text": "Usability:\n\t- After starting the application, the user needs at most 3 clicks to start the game.\n\t- The user reaches every point of the menu with at most 2 clicks\nReliablility:\n\t- the program prevents any kind of virus attacks.\nPerformance:\n\t- The Game should always run at least 20FPS\n\t- The game should only crash once every 100 hours of play time\n\nSupportability:\n\t- The game should be able to run on all Hardware of Intel, NVIDIA, AMD of the last century.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285371,
      "meta": {},
      "text": "\n- The user should not need more than 10s to be able to start the game (from opening the game till clicking start)\n\n- The car steering should be synchrone to the actual movement of the mouse or react to it in less than half a second and should not be delayed\n\n- If the game gets closed (e.g. because the users computer broke down) settings and game progress should be saved.\n\n- The game works on different devices (PC/ Laptop/... with Android/IOS,...)\n\n- In case of program problems, the support team should answer in about a day\n\n- The user doesn't need a lot of time to understand the game as you can play it without reading instructions (self-explanatory)\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1285917,
      "meta": {},
      "text": "A non-functional requirement would be the usability, the usability states that the user has an intuitive feeling while using the application. For example if the user is a Mac user the buttons to close, minimise and maximise the window should be in the top right corner. Also the steering of the car should be intuitive. For Reliability the application should be robust, if for example there is a popup notification by the System, the game should not crash. Or there should be no data security concerns about the download server. On the performance side, response time could be a non functional requirement. The respone time of the players input should be in realtime, to provide a nice feeling while playing. Also the accuracy is a good example for a requirement. If the input of the player, is not accurate, the player might have a weird feeling while playing and could lose the fun. As a Supportability requirement, maintainablilty might be a good example. The Game should be coded in a way, that the developers can easily make changes to the game, for example implement new cars, new sounds, etc... ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286463,
      "meta": {},
      "text": "1. the game must be playable without having to lift hands from input devices to reach different buttons. (efficiency)\n2. the collisions should be winnable at least 80% of all times once winning conditions are understood. (efficiency)\n3. the game should be able to handle multiple input devices giving inputs at the same time. (Robustness)\n4. the game should pause if  tapped out of. (safety)\n5. the game can handle one players inputs during gameplay.(performance)\n6. the game runs on any system supporting the java platform. (portability)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286666,
      "meta": {},
      "text": "Usability:\n1) the buttons used to start and stop the game should be labeled with start and stop.\n2) the cursor should stand out from the gameboard background\n\nReliability:\n1) The game should continue normally if the Window of the game is minimized\n2) The game should not crash if there are up to 30 cars on the gameboard\n\nPerformance:\n1) It should not take more than 1/30 of a second for the game to check for user input\n\nSupportability:\n1) there game should use abstraction for different car types to make it easier to add new car types in the future\n\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287713,
      "meta": {},
      "text": "Usability: - players need only 1 click to start the game\n\nReliability:  - Robustness: System is able to maintain function when environment changes:\n\t\t\t  Bumpers can tolerate 1 player\n\t           - Safety: reducing risks:\n\t\t\tThe player of Bumpers can only control 1 car\n\t\t   - Security: protection against intended incidents\n\t\t\tThe game should be platform independent.\n\nPerformance: Number of transactions that are processed in a certain time period\n\t\t\t\t- 97% of all rounds should be finished in less than 1 minute.\n\nSupportability: Adaptability: \n\t\t\t\t- the ability of a system to adapt to changed circumstances\n\t\t\t\t\tBumpers:  \"The game should support different collisions. The determination of the \t\t\tcollision winner should be changeable during gameplay.\" -> the game should determine winners according to the circumstance during gameplay\n\nMaintainability:\nThe ease with which a system can be modified by a developer to deal with new requirements\n- \"When cars crash, there has to be a sound effect. \" -> idea: When cars crash, there has to be a sound effect and the car stops for 2 seconds to get repaired\n\n\t\t\t",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280351,
      "meta": {},
      "text": "Usability:\n\t- Der Spieler soll das Spiel mit einen Klick starten, sowie beenden können.\n\t- Die Visualiseriung der Geschwindigkeit, des Verbrauchs, sowie des Spielbrettes soll sich automatisch \n\t  an die Größe des Displays vom Benutzer anpassen. \n\n\n\nReliability:\n\t- Robustheit: Das Spiel darf nicht abstürzen, wenn der Benutzer mehrere Eingaben innerhalb von \n\tSekundenbruchteilen eingibt. \n\n\nPerformance:\n\t- Reaktionszeit: Das Spiel soll zu 99,9% innerhalb von einer Sekunde auf einen Mausklick reagieren\n\n\nSupportability:\n\t- Das Spiel soll plattformunabhängig sein. D.h. die Unterstützung soll Android, IOS, MacOS(Intel, und M1 \n\t\tbasiert), Windows, Linux umfassen. \n\t- Anpassungsfähigkeit: Wenn das Gerät auf welchen das Spiel läuft ein Touchdisplay besitzt soll anstelle \n\teines Mausklicks, das Display dirket benutzbar sein. \n\n\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1281421,
      "meta": {},
      "text": "1. The game has to handle cars trying to go out of bounds(Reliability)\n2. The game should be platform independent(Supportability)\n3. The player should always be able to avoid/win collisions (usability(satisfaction))\n4.The game has to be able to handle multiple cars at once without framerate issues(Performance)\n5. The game has to work for the different collision types (Supportability)\n6. The players car has to be distinct from the other cars(Usability)\n\n",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1282971,
      "meta": {},
      "text": "Usability:\nLearnability - The game should learnable and the interface usable within 5 mins.\nPerformance:\nThe response time of the player car has to be 0.01s so the player can manouver through the other cars\nThe accuracy while steering the car and registering collisions is important to be within one pixel, so that a collision is only registered when you really hit something.\nReliability:\nIf you change the car type the game should still work\nSupportability:\nThe game should be adaptable. For example it should run without wifi connection or adapt to the players needs if he wants to select a different kind of car or collision type to switch up the playing experience.\nThe game should be maintainable, so it can get modified after a while. The modification shouldn't take longer than 30 mins.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284027,
      "meta": {},
      "text": "Usability : * The Player starts or stops the game with a click.\n                * The Player steers the direction and the speed of the car with the mouse, by clicking on different \n                spots of the Gameboard.\n\nReliability : * The game is platform Independent, and doesn't require internet connection, It \n                  doesn't have worries from outside cyber attacks.\n\nPerformance : * The game is a solo game, played by only one player.\n                       * The clicks should be processed within milliseconds so the player can easily interact with the \n                       game\n\nSupportability : * The game supports different collision types, that are changeable during the game, the game \n                          adapts to the change \n\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284462,
      "meta": {},
      "text": "Usability:\n- The user should be able to change the collision type with at most 2 interactions\n- The user should be able to steer the car by only clicking within the game's window\n- There should be no glitches in sound when music is played\n\nReliability:\n- The game should be launchable 100% of the time\n\nPerformance:\n- 97.5% of all collisions should be evaluated in less than 1 second. \n\n\nSupportability:\n- The collisions are evaluated \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284974,
      "meta": {},
      "text": "1. (U) The game can be started within three user interactions (excluding the launch of the application).\n2. (R) For the UI and the game in general, a palette of soft colors should be used, to prevent epilepsy attacks.\n3. (P) A maximum of 10 cars (excluding player) can be on the GameBoard at the same time.\n4. (U) Depending on the platofrm, the suited controls shoud be shown before the game.\n5. (R) The default volume of sounds has to be 70 dBA or less.\n6. (S) New version notification in the main menu.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285290,
      "meta": {},
      "text": "Usability:\n- The player needs at most one click to steer the direction of the car.\n- The player can change the volume of each sound effects.\nReliability:\n- The game should be able to handle over 50 cars in a single round for at least 20 minutes without an error or a failure.\nPerformance:\n- The game should be able to visualize with at least 30 refreshes per second on a machine of same spec with t2.medium of AWS EC2.\nSupportability:\n- The game should be able to add new type of cars in the future.\n- The game should be able to run on the latest version of Windows, MacOSX and Ubuntu.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285834,
      "meta": {},
      "text": "Usability:\n- The buttons on the toolbar must at least be 1cm tall to ensure readability\n- Limit the buttons on the toolbar to a maximum of 4\n\nReliability: \n-  To prevent accidental misclicks, a player must confirm their choice to stop the game by clicking on another button that pops up\n\nPerformance:\n- The gameboard's frame rate must be at least 25 frames per second\n- The game must be available at least 95% of the time\n\nSupportability:\n- Adding a new car or collision type should not take more than 2 hours",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286043,
      "meta": {},
      "text": "Usability: \n- Players interact either with a mouse or a keyboard pre game.\n- Players should be able to make all relevant settings before the game starts in at most four clicks.\n\nReliability: \n- The game should support up to 12 cars.\n- The type of collision and car must be choosen before the game starts.\n\nPerformance:\n- The game should start within one second after the start button is pressed.\n\nSupportability:\n- The game should support any display-size and adapt the window size to it.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286826,
      "meta": {},
      "text": "Usability\n\nUser experience\nPlayers need only one click to start the game\nThe cars and buttons are all scaled properly for the player to see everthing correctly\nThe mouse has to be clicked a lot, so it would be more convenient if the car just moves where the mouse is located at\n\nLearnability\n\nthe user interface must be very simple, that means the user can easily learn how to play the game.\nEvery button has its use written on it.\nOn the other hand there must be info about why a car will crash in the window, so the player doesnt have to find out himself.\n\nReliability\n\nRobustness\nthe game must be very robust. the player cant really input something wrong. He only inputs mouse clicks and any other inputs like from a keyboard must be ignored.\n\nPerformance\n\nAccuracy\nDue to its simplicity the game must be very accurate. The 2D approach is easy to run for almost every computer and mouse clicks are the most accurate input method at this scale. mouse clicks must be detected precisely and fast.\n\nResponse time\neach change of direction after a mouse click, should take less than 10ms\n\nSupportability\n\nMaintainabilty\nThe game is very simple, therefore it msut use only a few lines of code, which are easily undestandable and well structured. Bugs can be fixed fast and changes for potential new requirements can be added without problems.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287679,
      "meta": {},
      "text": "Usability: The control over the car is achieved by only clicking the mouse\nRobustness: the game doesn't crash\nPerformance: The game should work with up to 20 cars on the field\nAvailability: The game should be available to Linux and Windows users\nAdaptability: \nMaintainability: Car models can be exchanged, and new car types can be added in future updates",
      "score": 50,
      "language": null
    },
    {
      "id": 1287976,
      "meta": {},
      "text": "-start und stopp knopf sollten gut sichtbar sein deswegen würde ich den startknopf grün und den stoppknopf rot machen, sie sollten außerdem relativ groß sein, so versteht dr spieler die ui sofort und auch kleinere kinder können das spiel spielen\n-nach einem win/loss wird man durch einen klick wieder ins startmenü geworfen das macht das spiel sehr dynamisch und man muss nicht zu lange in menüs warten sondern verbringt die meiste zeit mit spielen\n-es soll graphisch und leistungstechnisch auf jedem gerät spielbar sein also würde ich keinen realistischen sondern eher einen pixellook für das spiel wählen \n-da die graphisch für die meisten geräte kaum anspruchsvoll sein sollte, sollte das spiel mit 60 fps laufen somit hat der spieler eine flüssige spielerfahrung und das gameplay ist sehr \"responsive\" das heißt das die inputs schnell vom spiel aufgegriffen und umgesetzt werden\n-die einzigen tasten die man benutzen sollten kann sind rechts- und linkspfeiltaste und escape, escape stoppt das spiel automatisch\n-in dem spiel ist die email des herstellers damit spieler ihre beschwerden einreichen können um bugs und glitches schnell beheben kann \n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1280655,
      "meta": {},
      "text": "Usability:\nThe determination of the collision winner can be changed during gameplay.\nThe play control a car by steering the direction and change its speed, just like in the real world.\n\nReliability:\nNo matter how the play controls the car, the car that wins all collisions is always the winner of the game. \n\nPerformance:\nThe game can handle large amount of information of multiple automated run cars simultaneously, such as location, direction, number of collisions. \n\nSupportability:\nThe game is platform independent, which means it can be played in various platform. \nThe game can visualize different parameters of the car. \n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282139,
      "meta": {},
      "text": "NFR1 Car selection: player can choose the car icon in at most 3 clicks (Usability)\nNFR2 Car movement: the player can also steer the car with a mousepad (Usability)\nNFR3 Audio output: the game should still work even if there is no audio output device connected (Reliability)\nNFR4 Storage of high scores: the game stores at least the last 10 scores of each player (Performance)\nNFR5 Winner selection: the winner of the collision should be determined in less than 5 seconds (Performance)\nNFR6 Car Types: new car types can be added in under 30min (supportability)\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283127,
      "meta": {},
      "text": "Quality requirements:\n\nUsability: \n1.Efficiency\n Player needs only 1 click to start the game  \n\n2.Learnbility\nPlayer needs at most 10 seconds to learn how to steer the car using mouse.\n\nReliability:\n1.Robustness\n The game must be runable/executable when the avalible RAM is around 10M  \n\n\nPerformance:\n The game need to support up to 50 cars(including player's car) in a single gameplay. \n\nSupportability:\n1.Adaptability\n The game need to be runable/executable on different systems/platforms: MacOS, Windows and so on  \n\n2.Maintainbilty\nThe game must be modifiable by the developers to add new Collision and Car types, change crash Music and UI-Background color and so on\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284799,
      "meta": {},
      "text": "1. Usability : Player can start the game with a maximum of 3 clicks, and stop the game with a single click.\n2. Reliability :\n\t- Robustness : The game can handle any number of direction changes without the UI breaking.\n3. Performance : The game handle multiple clicks a second, while continuing to play music in the background, and still be able to play the crash sound after a crash.\n4. Supportability :\n\t- Adaptability : The type of collision can be changed based on the user's will.\n\t- Maintainability : The game can be stopped at any point to change the collision type.\n\t- Portability : The game is platform independent.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285245,
      "meta": {},
      "text": "+usability: \t\t-spieler kann über 3 klicks das game starten, ins game reinkommen.\n\t\t\t\t-Spieler kann auch mit touchscreen oder Maus das Auto steuern \n+reliability: \t\t-das spiel hat anti cheat program das unnormales verhalten (wie auto fährt zu schnell, verliert \n\t\t\t\tnicht beim collision) und kann spieler zb. beim Multiplayer modus bannen.\n+performance:\t-Server client conection nicht höher als 300 ping (annahme das spiel kann nur bei internet \n\t\t\t\tverbindung vorhanden gespielt werden) \n\t\t\t\t-garantiert immer 30 FPS\n\t\t\t\t-Server Verfügbarkeit ist nicht weniger als 99,0%.\n+supportability: \t-für neue Grafiktreiber muss das spiel ein Update haben.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1285384,
      "meta": {},
      "text": "- Usability: The user needs one click to start the game\n- Usability: The user uses the keyboard to control the car.\n- Reliability: (Security) The game must include protection against viruses.\n- Performance: The system should respond in less than 5 seconds.\n- Supportability: (Adaptability) System must be able to adapt to new updates.\n- Supportability: (Maintainability) System is modified to correct defects.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285489,
      "meta": {},
      "text": "NFR1: The player clicks at most twice to start the game. (Usability)\n\nNFR2: The \"start\" and \"stop\" buttons should be on the other side of the \"exit\" button of the window, to avoid the player's mishandling. (Usability)\n\nNFR3: The system should react and the direction of the car should change to the player's will in less than 0.1 second after the player clicks on the game board. (Performance)\n\nNFR4: The game should not contain anything NSFW. (Usability)\n\nNFR5: The game should not stop or go wrong if the network is disconnected. (Reliability)\n\nNFR6: The game should run correctly under both the MacOS System and Windows System. (Supportability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285640,
      "meta": {},
      "text": "Usability: The game should be usable even to unexperienced players. A new player should be able to learn how to play the game in a very short amount of time, with a limited number of instructions, for example a user should be able to understand the controls within his first 3 games.\nMoreover, the user should have a satisfactory experience playing the game. He should not have to search for features, anything he might want to do should be accessible on the “main” screen.  \nReliability: The game should be robust enough to work even with erroneous/difficult user inputs, for example the user might input directional changes multiple times a second, which should not negatively effect the performance.\nPerformance: In a high paced environment response time is vital for the enjoyment of the user. The game would not be fun if the system takes too long to respond to user inputs. Average response time should not be higher than a few milliseconds.\nFurthermore, the system should calculate the user inputs and the players position accurately. If you were to change direction, but the car does not drive the direction you want it to would be detrimental to the enjoyability of the game. Same goes for the location, since two cars might not collide on the user interface, but the internal logic (if it were inaccurate) might return a crash.\nSupportability: The game should be adaptable to future changes. It should be able to support new features you might want to implement in the future, for example new cars, new collisions, … . \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286494,
      "meta": {},
      "text": "1. Usability : User must be able to start a game within an average of 30 seconds.\n2. Reliability : The system must be able to run a game until finish correctly 9 out of 10 times without failure.\n3. Performance : The system must be able to handle 50 cars running in a game at the same time.\n4. Supportability(Maintainability) : Modifying the behavior of each cars should take no more than 30 min.\n5. Accuracy : Result of collision evaluations should be correct 98% of the time.\n6. Performance : The game should run within at most 2 seconds after the start button is pressed by the user.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286861,
      "meta": {},
      "text": "Performance: \n- The game UI framerate must not drop under 60frames per second and the game should calculate at least 20updates per second to guarantee lag free operation.\n\n\nSupportability:\n- Maintainability: New car and collision types should be able to be added without redesign of the system. So depending on the complexity of the new functionality it should not take longer than one day of development to add a new Car or Collision\n\n- Portability: The game should run on the three major Operating Systems (Windows,Linux,MacOS) with the same functionality.\n\n\nReliability:\n- Robustness: no matter where the user clicks during the game and no matter which keys on his keyboard he presses, the game must not crash even when the input is invalid (e.g: when the user clicks on a different part of the UI which is not part of the gameboard while the game is running)\n\n\nUsability:\n- The game UI must scale text and the size of other UI elements correctly based on the scaling factor provided by the user's operating system (and on high resolution displays the scaled up version must not be blurry)\n\n- Audio levels for background music and sound effects in the default startup configuration must be balanced in such a way that neither one is perceived much louder than the other. Therefore loudness levels of all audio files must be normalized as close as possible to -20 LUFS",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287267,
      "meta": {},
      "text": "Usability - Efficiency: Starting and Stoping should be 2 buttons either next to each other or the same button, as it is usually the case with an intuitive user interface. By using one button the system status would be clearly visible as well - the user will know if the game is running or not. \n\nUsability - User Experience: The visualization of car parameters shouldn't be on the areas where cars are driving, but next to it, so the user has a full view of the driving area. \n\nReliability - Robustness: Steering the car by clicking with the mouse should not be limited by entering something to the keyboard by accident, keyboard inputs should be ignored when moving the car, except if these keyboard inputs are regular system exits etc.\n\nPerformance - Response Time: The user's car should move < 0.5 seconds once the user has clicked on the screen, otherwise the game might be seen as inferior.\n\nPerformance - Response Time: The sound effect played when 2 cars crash should have a latency < than 0.5 seconds, so that the effect will be associated with the crash by the player.\n\nSupportability - Adaptability: The system should be available on macOS, Windows and Linux.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287553,
      "meta": {},
      "text": "Usability:\nThe player is shown 3 hearts at the bottom of the screen that indicate consumption of the car (if a car needs to crash 3 times for it to be crushed, a heart becomes empty and the car is crushed when all hearts are emtpy)\nPressing the key P pauses/resumes the game when on single-player mode\n\nReliability:\nThe program does not respong to accidental pressing of keyboard keys other that the designated pause/play buttons\n\nPerformance:\nThe game can be played online with up to 4 people\n\nSupportability:\nThe game can be run on mac, windows, linux, etc (because it is platform independent)",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287676,
      "meta": {},
      "text": "Usability: The Player only steers one car and the only possible changes are direction and speed, which is both steered by the mouse. Thus, the learnability should be good because just 1 hand is needed.\n\nReliability: The game should not crash in any occasion, edge cases should be covered (e.g. both cars have the same value of x while they are crashing) (Safety)\n\nPerformance: There should be a maximum amount of cars depending on the speed of the computer the game is running on. If that wouldn't be the case, the computer could take too long to respond and the game would not be playable anymore because it is lagging.\nThe amount of times per second where the game checks for a crash should be at least the amount of times the graphic updates, so every crash is recognized by the game before the player recognizes it. (Accuracy)\n\nSupportability: The size of the game window should be flexible and determined by the size of the screen, thus the game is playable on any screen. The game should also work on older operating systems and not just the current one. (Portability)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287865,
      "meta": {},
      "text": "Usability: \n\tThe game should be platform independent.\n\tThe player can steer the direction of the car with the mouse and change its speed.\nReliability:\n\tIn each collision, there is a winning car.\nPerformance:\n\tIt should visualize different parameters of the car, e.g. the speed, consumption and location of the car.\n\tThe game should support different collisions.\nSupportability:\n\tThe determination of the collision winner should be changeable during game.\n\nExplanation:\nIn Usability i choose two characteristics of the game described in the text, which show directly how the game should interact with the user and where it should be used (platform independency in this case).\nReliability: the point i choose can be assigned to the subpoint \"Robustness\", because the fact that after every collision there is a winner ensures that the game is determining and evaluating correctly in the background whether the player car wins or loses, no matter the input.\nPerformance: the game shows different attributes form he car to see how the player is performing. Also it allows multiple types of collision showing it can handle a decent amount of information at a time.\nSupportability:\nIn my opinion this characteristic of the game can be assigned to supportability, because it forces the game to evaluate new conditions for the collision determination. Dealing with new requirements such as these one could be matched with the maintainability of the game.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1280872,
      "meta": {},
      "text": "Usability:\n-The rules of the game should fit on one page of explanations\n-The player has to be able to play the game using only their mouse\n\nReliability:\n-The game should not react to any keyboard input, in order to prevent unwanted behaviour\n\nPerformance:\n-If the system requirements of the game is fullfiled, it should start in under 1 second\n-The game should be able to process and react to up to 10 clicks per second.\n\n• Supportability\n-In order to add a new car, the developer only has to upload a picture of the car and insert the name and \tthe minimum and maximum speed of the car. \n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281293,
      "meta": {},
      "text": "Usability\n1. The player needs at most 3 clicks to get the game running\n2. Users at all time should be able to exit the game with at most 2 clicks (Jakob’s Heuristic  Nr.3)\n\nReliability\n3. Robustness: The game can run with up to 50 cars without delays in car steering or collision recognition higher than 10 milliseconds\n4. Security: The game should not disclose any personal information about the player to outsiders\n\nPerformance\n5. Performance: 99% of the collisions should be detected in less than 10 miliseconds\n\nSupportability\n6. Adaptability: the game recognizes collisions correctly for each different collision type game mode (f.e. left-right collision, triple collision, combollision, etc.)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281427,
      "meta": {},
      "text": "\n\n1.Response time -Performance\n2.Learnability -Usability\n3.Robustness -Relayability\n4.maintainabilty - Supportability\n5.Accuracy -Performance\n6. Satisfaction -Usability\n\nEvery good software project does not only have to match the functional requirements, but also be of good Quality.\nFor out bumpers Game there are a couple of not-functional requirements that should help the Player have a good time. The first one is, Learnability, which means here intuitive controls, which is archived by similarity to other Car games. Another is good Performance here especially: A low response time and accuracy in hit box checks of potential Crashes and the Control input is a must for every good Game. For user Satisfaction there should ideally be high quality graphics and sound to go with the game play flow.\nAnother thing to avoid frustration is the Robustness of a System, the way to still work in a unexpected environment. It could be a goal in the \"Bumbers\" game to always have a backup of the current game board, so that the user can continue playing if the program is closed unexpected.\nBut not all quality requirements are centered around the User. Another important point is the Maintainability of the Code itself. It is important to follow standard practices and write clean Code or refactor it. This makes it easy to add changes and update the Software and not waste developers Hours.\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281608,
      "meta": {},
      "text": "1. Usability:\nWhen playing the game for the first time, the game provides a tutorial. Furthermore, the game can be started or stopped by one click on the start/stop button.\n\n2. Robustness:\nThe game is not influenced by wrong input, meaning it only reacts to the implemented input.\n\n3. Security: \nThe game prevents any form of attack or viruses that could intrude the players’ device.\n\n4. Response time:\nThe game reacts to the input (mouse steering/mouse click) of the player in under 1ms. This applies to every implementation of the game (car movement, starting/stopping the game, background music).\n\n5. Adaptability:\nThe size of the game board and its components adjust to the screen size of the players’ device. \n\n6. Maintainability\nThe game must be designed in a way that allows not only adding or removing new features, but also i modifying it easily in order to cope with possible defects or new requirements.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282697,
      "meta": {},
      "text": "- Das Spiel sollte mit maximal 2 Klicks zu starten sein. Das Spiel vorzeitig zu beenden sollte ebenfalls nicht mehr als 2 Klicks erfordern.\n- Das Spiel sollte möglichst Bug-frei sein. Spielabstürze wegen Fehlern im Code sollten nicht vorkommen.\n- Das Spiel sollte auf allen Systemen, die auch von Java und JavaFX unterstützt werden, ohne größere \"Lags\" spiel bar sein.\n- Der Code des Spiels sollte möglicht verständlich gestaltet sein, sodass Fehler schnell gefunden und neue Features schnell implementiert werden können.\n- Das Spiel soll auf verschiedenen Bildschirmgrößen spielbar sein und sich entsprechen skalieren.\n- Im Falle eines Fehlers soll der Nutzer eine unkomplizierte Möglichkeit haben, Fehler und Bugs zu melden, bei der er nicht extra seine E-Mail Adresse o.ä. angeben muss.",
      "score": 33.3,
      "language": "GERMAN"
    },
    {
      "id": 1282920,
      "meta": {},
      "text": "- Usability :\n\t- The player should be able to start the game.\n\t- The player should be able to stop a game.\n\t- The player can steer the direction of the car with the mouse and change its speed.\n\n- Reliability:\n\t- The game should not bring viruses to the player's computer. (Security )\n\n- Performance:\n\t- The determination of the collision winner should be changeable during gameplay.\n\n-Supportability:\n\t- The game should be platform-independent.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1283751,
      "meta": {},
      "text": "Non- functional requirements for Bumpers:\n1. Usability (Efficiency): The player should be able to start the game with at most two clicks.\n2. Usability (Memorability): Each different car should have different background music that remains the same for the whole game for better memorability.\n3. Usability (Learnability): The choice of car needs to be able to be swapped by the player with at most three clicks.\n4. Reliability (Robustness): The game needs to be able to handle at least 30 cars in one game.\n5. Performance (Response time): The car direction needs to react to the mouseclick within at most 0.3 seconds. \n6. Supportability (Adaptability): The background colour of the game board should adapt to the lighting around the player, being darker during the night and lighter during the day.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284184,
      "meta": {},
      "text": "Usability: - The application visualizes different parameters of the car, e.g the speed, consumption and location of the car. (Nielsen’s 10 heuristics No 1: Visibility of system status)\n\t\t - The player can steer the direction of the car with the mouse and change its speed. (Nielsen’s 10 heuristics No 4: Consistency and Standards by following platform conventions)\n\nReliability:  - There is one car controlled by the player (Safety: protection against unwanted incidents such as user controlling two cars at the same time)\n\nPerformance:  - The winner of the collision should be processed in less than 42 ms (approx. one frame).\n\nSupportability: - The determination of the collision winner should be changeable during gameplay (Adaptability)\n\t\t\t - The game should be platform independent. (Portability)\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284248,
      "meta": {},
      "text": "Non-Functional-Requirements:\nPerformance:\n1. The game should always be running at a steady 60FPS with a maximum tolerance of at most +-5FPS.\n    If more than 20 cars are displayed on the screen at the same time the threshold becomes 40FPS.\nReliablity:\n2. The game should run stable to an extent where the expectancy of a crash is about 1 in 10 hours.\nSupportability:\n3. It should be possible to issue remote updates in case any game-breaking bugs are found after release. \n4. The update procedure should also be able to patch itself as one might add functionality that has not been \n    thought of during its conception.\nUsability:\n5. The user has to have the option of rolling back updates to previous versions, so that if an update worsens the\n    gameplay experience there is still a way to fix it manually.\n6. The changing of collision settings during gameplay should be implemented using GUI elements\n    instead of keybinding to make this particular feature more discoverable.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284275,
      "meta": {},
      "text": "1. The game should start in 5 seconds or less. (Performance)\n2. The game can be started and stopped with only one mouseclick on a clearly marked field. (Usability)\n3. It should be clear how to stear the car and how to change the speed within first time playing the game. (Usability)\n4.  The response time to the players mouse steering should be about 5ms, to get a smoothly running gameplay for the player. (Performance)\n5.  There should be no unwanted actions be possible in the game, that would make the game crash or stop in an unwanted way, it should not be possible to enter an unwanted input. (Reliability)\n6. The code for the game should be clear and understandable, also for not involved programmers, so that it is easier to add new function and develope the game further. (Supportability (Maintainability))",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284663,
      "meta": {},
      "text": "1. Only one user supported, which is the player\n2. The game should work independent of the type of collision that occurs\n3. The player can play the game by just moving the mouse in all directions\n4. There is a limited amount of cars shown on screen\n5. The developer can fix bugs any time the game is not being played\n6. The user interface shows the game, a \"play\" and \"stop\" button and some parameters such as speed, consumption of the car",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284819,
      "meta": {},
      "text": "1. Usability: \nThe game should be started after not more then 2 clicks. The gameboard should be large enough to display all cars on it. \n\n2. Reliability: \nThe game should be able to evaluate collisions of more then two cars -> this shouldn't lead to any exceptions\n\n3. Performance: \nThe game should be able to handle a larger number of cars without any real performance issues. This may be quite important as the game will probably consist not only of one level to play but may include different levels with different difficulty and a variety of features -> One of these levels may be a level with a lot of cars on the gameboard. This would lead to a higher difficulty of the game as the player would need to win more collisions.\n\n\n 4. Supportability:\nNew cars or collisions should be easy to implement -> Meaning superclasses like Car and Collision needed in order to be extended by subclasses. Adding new features like new levels should not lead to a complete system change. Basically the easier maintanability means less work for developers and more excitement for the player as more features could be implemented more often.\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285343,
      "meta": {},
      "text": "Regarding performance, the game should load within 3 seconds after the user has opened the program. Also regarding performance, the graphics of the game should be at a minimum of 50% of the computer display's maximum frames per second, e.g. if the computer can operate at 60 fps, then the game should be running at a minimum of 30 fps. \n\nRegarding usability, the user should be able to move in any direction (including diagonals) with the use of at most 2 keys. Also regarding usability, the sound of the crashes should be at least 60 decibels so that the user is aware of the collisions in the game. \n\nRegarding reliability, the bumpers game should be robust by being able to be run for more than 2 hours continuously. \n\nRegarding supportability, the game should be adaptable, hence it should be able to be run on multiple operating systems such as Windows, Linux, and MacOS. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285436,
      "meta": {},
      "text": "NFR1 Usability: Players need at most 2 clicks to start the game and see cars driving.\nNFR2 Usability: During the Game player needs only 1 click to change car's direction.\nNFR3 Robustness: The Game can handle up to 100 cars.\nNFR4 Performance: The Game shall take less than 3 seconds to load.\nNFR5 Response time: The Game should respond to a player's mouse pressed in less than one second.\nNFR6 Portability: The game should be able to run on Windows, Linux, MacOS, Android.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286853,
      "meta": {},
      "text": "NFR1 : After clicking the start button, a window prompt should open up in which can the player choose a car and collision type.\n\nNFR3:  The game is needs to be playable and supported for all mobile devices with IOS, Android and Windows operating system. Additionally the game needs to be supported on personal computers with Windows, MacOs and Linux operating systems. \n\nNFR3: The game is needs to run smoothly on mobile devices as specified in operating system information as well as on personal computers on 60fps without any major fps spikes or drops.\n\nNFR4: The car controls on mobiles device eg. touch screen needs to be responsive. Immediately steer the car after player touches the screen, no delay is allowed. \n\nNFR5: The game is supposed to be able to support mods in the future after release, so the main framework and code base needs to support mod installation and development.\n\nNFR6: The car AIs need to be reliable and behave according to controlled patterns described in the AIs general information release documentation. ",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1287060,
      "meta": {},
      "text": "Usability:\n1. Bumbers should be able to be played by everyone without requiring a manual.\n\nReliability:\n2. Bumbers should not crash more than 1 out of 50 executions.\n\nPerformance:\n3. Bumbers should run at least at 30 frames per second.\n4. The player should gain control of his vehicle within a 1/100s after starting the game.\n5. The vehicle should respond to direction changes within 1/1000s based on the players input.\n\nSupportability:\n6. Since TUM is a Uni with many international people the game should support both the German and English language.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287234,
      "meta": {},
      "text": "NFR1 Performance: The bumpers game should not be laggy. The game should be performant enough such that all features of the game, e.g visualizing different parameters of the car etc, should be done without any delay. \nNRF2 Extensibility: The bumpers game should be designed in such a way that allows adding new and different collision types at a later date.\nNRF3 Reliability: The bumpers game should function reliably for the player, for the outlined features such as the player being able to start or stop the game, the player should be able to change the speed of the car and the direction of the car with the mouse, etc. \nNRF4 Installability: The bumpers game should be platform independent, meaning it should be implementable in a lot of different platforms. \nNRF5 Responsiveness: The bumpers game should be responsive when events happen in the game that require a response, including but not limited to: plying a sound effect when cars crash, playing music when the game starts, determining a winner, and more. \nNRF6 Capability: The bumpers game should be capable to support multiple cars, multiple collissions, allowing cars to drive on the game board, capable enough to change determination of the collission winner during gameplay.   ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1280968,
      "meta": {},
      "text": "1U. The player should be able to start the game through clicking with no more than 3 clicks. \n2U. If the player trys to restart the game during a game process by mistake, the game should continue. \n3R. During the game process, the game board should be able to identify up to 20 mouseclicks per second.\n4P. Every operation of the player should be executed in no more then 0.01 second.\n5S. The icon of the cars on the gameboard should be replacable during the maintenance.\n6S. If the player is using the touching pad, the game should be able to adapt that.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281328,
      "meta": {},
      "text": "Usability: The car controlled by the user should start at a position that is visible to the user (for example: at the top left corner ) and differetiated from the other system controlled cars through physical appearance for it to be easily recognized by the user. \n- Learnability: The user should be able to understand the game rules after one trial run.\n\nReliability: \n- Security: The game and user should be protected from data stealing malwares and any other computer viruses that would crash the game system.\n- The funtions of the game should not change when the user platform is changed. These functions shoud be consistent regardless of the platform.\n\nPerformance: The car controlled by the player should be able to change its direction or speed in less than a second when the player uses the mouse to controll the car.\n \nSupportability: \n- The game should be able to support new car types, collision types and other displayable attributes of the cars when the client requires these.\n- The maintenance and the updates of the game system should be carried out in a time period that has the least number of users in a 24 hour day and it should not disturb the user experience for more than 20 minutes when planned.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1281487,
      "meta": {},
      "text": "1. Usability: The player can steer the car by simply clicking one time with the mouse in the desired direction on the game board. \n\n2. Usability: The speed of the player's car shall be increased by pressing the up-arrow on the player's keyboard and respectively, the down-arrow to decrease the car's speed. \n\n3. Reliability (Robustness): If the player clicks outside of the game board to change the direction, the car will continue its way and will not change its direction.\n\n4. Performance: Up to three players at a time shall be supported by the game.\n\n5. Performance: The game should be able to process one click of the player's mouse per second during the game.\n\n6. Supportability (Adaptability): The game shall responsively adapt its design to the device used for playing the game.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282339,
      "meta": {},
      "text": "Usability\n1. The user needs at most three UI interactions to start the game\n2. Users have a clearly marked exit button on the top left corner of the game board\n\nReliability\n3. The program shall under no circumstance leak system's passwords of the same or other platforms\n\nPerformance\n4. The response time for the cars to start moving on the game board shall be no longer than 30 seconds\n5. The system shall be able to support up to 10 simultaneous users that take turns playing the game\n\nSupportability\n6. The source code shall be commented in natural language and in an explicit way \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282947,
      "meta": {},
      "text": "1.) Usability: Parameters like speed and consumption of the player car should be visualised in a part of the GUI seperated from the playing field/gameboard and located below it, as the HUD of many video games is shown at the bottom of the screen/window.\n\n2.) Reliability: The game should not get distorted, if the screen size changes. The game's width to height ratio has to stay the same.\n\n3.) Performance: The game should run with at least 60 frames per second, to guarantee gameplay without lags\n\n4.) Supportability: The game should be playable independent from the used platform (i.E. on Windows, MacOS, Unix)\n\n5.) Usability: The enemies' cars should spawn on random places with randomised speed every time the game starts, to increase the replayability of the game.\n\n6.) Usability: The crash sounds of cars shouldn't overlap. When one sound starts, the previous should have ended, or fade away quickly, so they don't increase in volume and get too loud. On the other hand the crash sounds should be loud enough relative to the background music, to be clearly audible and distinguishable from the music itself.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283277,
      "meta": {},
      "text": "6 quality requirements (i.e., non-functional requirements):\n1-Usability: \n\tLernability - the game principles and the steer control should to learned during the game and (efficiency) played without extra explanations after this. \n\tMemorability - therefore the controlling should be simple: mouse steering by 1click for direction change and a max of 4 clicks for settings change. \n2-Reliability: \n\tRobustness - the game should not react to wrong inputs: e.g. other steering than by the mouse. \n\tSafety - \t\t\n\tSecurity - the player is not allowed to change the game results or the game score.\n3-Performance - the response: time between to the mouse click and the care movement should be within 1sec. The game should perform high accurancy to the steering: when clicking the car should be steerd in this direction with max of 1degree difference\n4-Supportability - \n\t Since the hardware manufactor is going to develop further generations of mouses and keyboards and other harware, and the software should be playable for as many years as possible, the software should be implementated so that it is as multiuseful for different hardware as possible.\n\tMaintainability: to make sure the game is easy to debug and update tha software should be programmed in accorance with low coupling and high cohension principe",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283786,
      "meta": {},
      "text": "Usability - Memorability: the player should be able to start the gameplay in 5 seconds after 7 days not playing the game.\nUsability - Visibility of System Status: the player should be able to tell the speed of the car within 0.5 seconds.\nReliability - Robustness: the game should run properly as long as the available memory of the player's device is equal to or bigger than 100MB.\nPerformance - Response time: the game should respond to player's mouse input within 0.05 seconds.\nPerformance - Concurrency: the game should allow up to 64 cars on the game board at the same time.\nSupportability - Portability: the game should work correctly on Windows, macOS and Linux as long as Java 17 is correctly installed.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283927,
      "meta": {},
      "text": "1) Game should not have flashing images, which are flashy enough to be considered dangerous for people with epilepsy.\n2) Starting a game shouldn't take more than 30 seconds.\n3) Game should be able to handle up to 100 cars.\n4) Game music must be controllable. (On-Off)\n5) Personal data of players such as car choice and playing hours are not to be collected.\n6) Game shouldn't take more than 300 MB of memory space.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1284908,
      "meta": {},
      "text": "Usability: It shouldn't take the player more than 3 clicks to start the game. There has to be a \"Pause\" button as well so that the player can click it and adjust the game's settings such as speed and collision types while the game is still running.\n\nUsability/Memorability: After the player played bumpers for the first time, he should automatically be able to remember all the settings needed to play the game again. This should apply to all potential player ages, from 6-80 years.\n\nUsability/Visibility: The current game parameters should be displayed in a bold text, all combined in one box with letters of size at least 5% of the viewing display (e.g. the display is 1920x1080 px, the letters should be at least 54px of height)\n\nReliability/Robustness: The game should not react to other user inputs other than the mouse hover, left mouse click and the \"Esc\"-button. This prevents the game from acting in an unwanted way when the user hits many undefined buttons while playing.\n\nPerformance: Bumpers should always maintain the same consistent display performance, whether the speed is selected slow or fast and also independent to the number of cars driving on the game board.\n\nSupportability/Adaptability: Bumpers performs a performance/system check before the player can start the game. If it runs on a low-level performance computer, the number of cars or the effects are reduced in order to deliver the same experience to every user.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285534,
      "meta": {},
      "text": "Usability: \n1. The buttons and driven cars need to be a clearly visible size (1.5 cm high) and with text in letters at 1cm high.\n2. Player shall have the option to stop the game after starting it and not yet finishing it.\n3. The determination of the collision winner should be changeable during gameplay.\n\nReliability: Application should be crash safe in 80% of its runtime.\n\nPerformance: The change of the direction of the player’s car should take not more than one second.\n\nSupportability: Speed of cars can vary during a game in the range of a set minimum and a maximum.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285631,
      "meta": {},
      "text": "Usability :\n\tUsers interact with the Game interface and the Mouse.\n\tUsers need at most 2 clicks to start the game without changing parameters.\n\t\n\nReliability:\n\tRobustness: The Game shall not change its intended functions under any circumstances that could be \n         caused by wrong inputs or unexpected behaviour from the user.\n\nPerformance:\n\tThe Game shall boot up in less than 3 seconds.\n\t\n\nSupportability:\n\tThe mechanics of the game shall be easily interchangeable for new ones.\n\tThe Game shall be able to be supported by any platforms.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285987,
      "meta": {},
      "text": "1. Usability: The player should be able to control the volume of the game audio (MasterAudio), as well as the balance between the volumes of the Background Music and the Crash Sounds in less than 5 clicks \n2. Reliability: Possible errors in the game should be recoverable by resetting the game\n3. Performance: The game sould run at a minimum frame/tick rate of 60 per second (possibly scalabe)\n4. Supportability: The game should be localizable (translated to new/other languages) without requirering larger changes in the source code\n5. : The player should be able to change the collision type during gameplay by using Hotkeys or Mouse Input\n6. : The player should be able to rebind possible Hotkeys from the Main Menu before the propper gameplay starts",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286219,
      "meta": {},
      "text": "Usability:\n\tThe user can start and stop the game, and also steer the car with help of the mouse. The application is easily operated, because it doesn't require a lot of steps to play ( one click to start the game, steer the mouse for changing direction, one click to stop the game).  Therefore, the interface is easy to learn and remember.\n\nReliability:\n\tWhen the user enters an unknown input ( for example he presses a key by mistake), the game continues to play without showing an error, or stopping it for a short time.\n\tThe determination of the collision winner should be changeable during the play, therefore if the user changes the environment, the game continues to play with the new type of collision chosen.\n\n\nPerformance:\n\tThe response time of the app is fast so that it can match between the system and the real world. When a crash happens, the suitable sound is played immediately, when the user clicks the stop/start button the game starts/stops immediately.\n\nSupportability:\n\tThe game should be platform independent, therefore it can be directly run on any platform without special preparation.\n\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287545,
      "meta": {},
      "text": "1.The hitbox used for the collision detection of the cars should not extend more than 3 pixels over the actual visuable graphic. So even when many cars are on the baord, the player can do exact manoveurs to avoid the other cars. (accuracy-> performance)\n\n2. When Bumpers is played on laptop, the player should be able to continue the game even if his mouse disconnects by using the integrated mousepad. Furthermore he should be able to continue to steer with the external mosue, if it is reconnected. (adaptability->supportability)\n\n3. The type of collision winner should be changeable by a single key on the keyboard, which the player defined beforehand. So it is not required to stop the game and go into a menu.(efficiency -> usability)\n\n4. If the player minimzes the game window or interferes by unintentionally clicking minimize or hitting the escape button, the game has to pause on its own, so that it can be continued like nothing happend.(robustness->reliability)\n\n5. The speed modus of the car has to be displayed in a clearly different colour than the game board in one of its corners, so one glance is enough to check on it.(usability)\n\n6. When the player changes the speed mode, it should at most take 10 ms for the car to speed up/slow down, so there is no clearly visible input lag, which could confuse the player(performance)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1288083,
      "meta": {},
      "text": "NFR1 Usability: you should not need more than 4 clicks to start the game. For chaning cars and collisions you need only 3 clicks maximum. To make the game simple, there shuld not be more than 3 buttons shown at the same time\n\nNFR2 Target Plattform: The game should be plattform indipendent.\n\nNFR3 Performance: The game has to handel minimum 15 cars on the gameboard and three different car types.\n\nNFR4 Extensibility: The game must be designed in a way that allows adding or removing new services (e.g. new types of cars or collisions)\n\nNFR5 Reliability/Robustness : The system should still work when the player consistently moving the mouse too fast to play the game.\n\nNFR6 Maintainability: The system should be maintable",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1281612,
      "meta": {},
      "text": "Usability:\nNielsen's heuristic(no.8 - minimalistic design):\nOn the display, there shouldn't be more than five buttons at the same time.\nNielsen's heuristic(no.1 - visibility of the system status): \nInformation like the speed, consumption and location of the car should be displayed in the corner of the game, so the player does not get distracted, but he gets the information.\n\nReliability: \nUnexpected input: \nIf the user clicks somewhere outside the game board (like the bar on the top), the game should be paused.\nRobustness: \nThe game should be runnable with up to 20 cars at 20 frames per second at least.\n\nPerformance: \n- The direction should be changed in less than 50ms after the mouse click.\n\nSupportability:\nMaintainability(dealing with new requirements):\nThere should be a \"change\" button on the display, so you can change the type of collision.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282592,
      "meta": {},
      "text": "Usability: Users interact using the mouse\nPerformance: The game should be able to handle 10 bumps per second\nPerformance: The game should respond to each input in 20ms\nRobustness: The game should ignore interaction by keyboard\nAdaptability: The game should be able to run on windows and macOS\nMaintainability: New cars should be able to be added in 5 min",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283048,
      "meta": {},
      "text": "Usability:  \nDas Spiel sollte in mindestens 30fps laufen, damit das Spielerlebnis angenehm ist und nicht durch Frameeinbrüche frustrierend wird.\n\nDie Mechaniken sollten so gestalten werden, dass der Spieler sie innerhalb der ersten 5 Minuten des Spielens lernt ohne ein explizit Tutorial zu benötigen. \n\nReliability:\nDas Spiel sollte auch ungewöhnliches Spielverhalten wie zwei Crashs gleichzeitig handhaben können und dabei nicht abstürzen.\n\nDer Spieler sollte die Geschwindigkeitswerte oder die Kollisionsbedingung nicht ändern können (wenn es nicht eine explizite Game Mechanik ist), um das Spielerlebnis nicht zu verfälschen.\n\nPerformance: \nDas Spiel muss verschiedene Plattformen mit einbeziehen und demnach auch auf Leistungsschwachen Systemen funktionieren.\n\nSupportability: \nDas Spiel sollte eine Struktur haben, dass neue Autoarten oder andere Änderungen wie die Änderung der Soundeffekte einfach hinzugefügt werden können.\n\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1283352,
      "meta": {},
      "text": "[Usability]\n- players can succesfully interact with the game via mouse clicks\n- players should be able to select their car and collision type within 3 clicks\n[Reliability] (Security)\n- players should be prevented from cheating by denying access internal values\n[Performance]\n- the game should run with at least 60 fps on every desktop device\n[Supportability] (Adaptability)\n- the player should be able to change the winner evaluation of collisions ingame\n- the game should run on every operating system and every device",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284196,
      "meta": {},
      "text": "NFR1 Menu maneuverability: You should be able to start a game in 3 clicks or less\nNFR2 Minimum hardware requirement: The game should run on an low-end Intel I3 with integrated graphics\nNFR3 Support after end-of-life: The game should provide API endpoints for modders to support the game beyond the lifetime provided by the \"publisher\".\nNFR4 Easy to understand error messages: In case of severe exceptions, the game should not crash and display nothing, or display cryptic error codes. Instead it should explain in plain text what went wrong.\nNFR5 Update game according to users time schedule: The game should not block the player from playing the game when they finally have some time to spare. It should silently download the new files in the background and install when the game is quit.\nNFR6 Dismiss end of game screen: Clicking anywhere on the screen should suffice to return to the main menu after loosing or beating the game, instead of searching for a small button.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285235,
      "meta": {},
      "text": "1. Der Nutzer kann eine Runde vom Startbildschirm aus mit höchstens zwei Klicks starten. (Usability)\n\n2. Der Nutzer hat keine Möglichkeit in einer Runde zu schummeln. Das heißt, es gibt keinen Weg eine Kollision, die man eigentlich verlieren soll, zu gewinnen. (Reliability)\n\n3. Das Spiel muss so effizient entwickelt werden, dass es auf jedem durchschnittlichen Office Laptop seit 2015 flüssig und ohne Ruckler mit durchschnittlich 45 FPS läuft. (Performance)\n\n4. Das Spiel muss unter den drei meist genutzten PC-Plattformen (Windows, Mac, Linux) und den beiden meist genutzten Mobil-Plattformen (Android, IOS) laufen können. (Performance)\n\n5. Dem Spieler ist es möglich, nach Durchführung eines kleinen Tutorials (Dauer höchstens fünf Minuten), eigene Schwierigskeitsgrade hinzufügen zu können, die man dann selbst spielen und mit seinen Freunden teilen kann. Das beinhaltet die Konfiguration der Geschwindigkeiten der Fahrzeuge, sowie die Art der Kollision, die zur Evalution des Siegers einer Kollision verwendet werden soll. (Supportability)\n\n6. Der Kunde soll die Möglichkeit haben, durch die Entwickler neue Fahrzeugtypen und Kollisionarten in das Spiel einfügen zu lassen. Dafür soll nach Anfrage an die Entwickler höchstens eine Woche benötigt werden. (Supportability)",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1285276,
      "meta": {},
      "text": "NFR1 Reliability: The player should come across a maximum of one bug per 10 hours of playtime.\nNFR2 Supportability: The game should be designed in a way that adding or removing new cars and collisions is possible.\nNFR3 Performance: The game should run on 60+ FPS on 99% of all systems.\nNFR4 Usability: No action in relation to the UI should take more than 3 mouse clicks. Keyboard shortcuts should also be offered.\nNFR5 Design: The Design of the UI should be consistent with the rest of the game with a modern and minimalistic aesthetic.\nNFR6 Conformance to default settings: All texts should be displayed according user's Operating System default settings",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285373,
      "meta": {},
      "text": "U.R.P.S:\n\nUsability:\n\n- The player can control exactly one car by using the mouse. \n- The player may only change the speed and direction of the player car. \n- The volume of the crash sounds should be similar to system volume level, so that the game will not be unreasonably loud and shock the player, who may be wearing headphones.\n\nReliability:\n\n- The Game should be platform independent and must not crash when being executed on a different computer. \n\nPerformance:\n\n- As a real-time application the game should be able to run at a minimum of 24 fps, to guarantee smooth gameplay.\n\nSupportability:\n\n- As games are often shipped with some bugs still in the code. Developers should be able to fix them through updates. \n\n- Furthermore, unexpected inputs should not cause the game to crash unexpectedly and the game may not expose the computers underlying systems and become a security issue. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285629,
      "meta": {},
      "text": "Usability: Nach einer gespielten Runde soll das Spiel mit einem Klick erneut gestartet werden können.\n\t\tAllen Buttons sollen eine textuelle Beschriftung haben. \n\t\tDie Lautstärke der Musik soll anpassbar sein.\nReliability: Der User soll das Spiel mit Eingaben nicht zum Crashen bringen können.\nPerformance: Während des Spiels soll zwischen dem Klick des Users und der Richtungsänderung des Autos höchstens eine halbe Sekunde liegen.\nSupportability:  Fehler sollen gefangen und aufbereitet werden.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1286684,
      "meta": {},
      "text": "1) Usability:\n\t- Game needs at least 2 players in order to be played as a multiplayer game\n2) Reliability:\n\t- Game needs to be platform independent\n\t- The player needs to choose a car type in order to prevent complications by the collisions\n3) Performance:\n\t- The game should be able to playable in 2 seconds\n4) Supportability:\n\t- A car can be either fast or slow\n\t- The game supports (or should support) different collision types",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286777,
      "meta": {},
      "text": "Usability: -  The controlls may only rely on point and click mechanics without relying on the keyboard to play the game. This is to include players who are less skilled in hand coordination.\n- In order to understand the events of the game more clearly, the player's car has to be marked or entirely different from the AI cars.\nReliability: - If the player accidently clicks outside of the frame boundary, the frame must stay on top of every other window ( always on top).\nPerformance: - The game must have a response time to player inputs of under 50 ms.\n- The game has to run fluently (min 30 FPS, lagfree without FPS drops) with 20 cars on the gameboard\nSupportability: - The game's size has to be under 100 MBs and needs to be portable on a USB drive. To ensure compability a java implementation of the game should be chosen.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1286977,
      "meta": {},
      "text": "Usability: The user/player can simply steer the direction of the car by clicking with the mouse on the screen, in whichever direction they want the car to move. This increases the learnability by simplifying the user interface.\n\nUsability:  The game should visualize different parameters of the car, e.g. the speed, consumption and location of the car. Thus the user is not confused about the current status of the player car. This helps to increase the visibility of the current system status. \n\nReliability: The collision should be evaluated correctly in case of a coincidence i.e. when 5 cars collide with each other at the same time.\n\nPerformance: The game should be initiated in less than a second after the start game button is clicked. \n\nSupportability: The game should support different collisions. This enables other developers to modify the game easily. If a new requirement regarding the collision rules was added/changed, this could easily be handled, so the maintainability of the system is high.\n\nSupportability: The game should be platform independent. This means that the system is able to adapt to changed circumstances.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287172,
      "meta": {},
      "text": "-Usability: The player needs only one click on the mouse to change the direction of the car.\n-Reliability:\n*The design of the game should conform to the usability for the chosen operating system\n-Performance:\n*Response time: when the player clicks on the mouse the car should change its direction in less than 1 second\n*Availability: the availability of the game is 100%\n-Supportability:\n*Maintainability: the developer can change the speed of cars if the game is too fast for example.\n*Extensibility: the game must be designed in a way that allows adding or moving collisions or cars.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1287972,
      "meta": {},
      "text": "Usability: User can start the game within 2 clicks\nUsability: User can steer the the car by mouse and change its speed\nReliability: The system downtime should be 30 seconds \nPerformance: The latency from mouse is less than 0,5 second \nPerformance: Only one user can be supported at the same time\nSupportability: The bug can be fixed within 10 min \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1281422,
      "meta": {},
      "text": "Usability:\n\n\t- Users steer the car with a mouse and use the keyboard for further game features.\n\t-  The parameters of the car are shown on screen (e.g.  the speed and consumption of the car)\n\t- Sound must be played (e.g. music and crash sounds).\n\nReliability:\n\n\t- The game must handle at least 10 Clicks per Second\n\nPerformance:\n\t\n\t- The Responsiveness of the game should be fast (less than 4 milliseconds)\n\t\nSupportability:\n\t\n\t- The game should be platform independent.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1281929,
      "meta": {},
      "text": "1. The player must be able to steer the car only by using the mouse (Usability)\n2. The player can change the speed by pressing \"s\" on the Keyboard (Usability)\n3. There must be a help button, the player can click in order to see a game manual (Usability)\n4. If the player clicks outside the game board the direction of the car is not changed (Reliability)\n5. The game must be able to handle 10 mouse clicks per second (Performance)\n6. The determination of the collision winner should be changeable during gameplay (Supportability)\n\n\n\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282652,
      "meta": {},
      "text": "According to the Nielsen’s 10 heuristics, I think one of the most essential usability requirements of the game is the User Control. The player should see all the buttons when he starts a game. Thus, the buttons should not only attract attention but also the labels should be simple and straightforward. Following functions must be integrated into buttons on the gameboard: start game, stop game, choose the car’s speed, and choose collision type. \n\nSystem status is also an important usability requirement. In Bumpers, the different parameters of the car should be visualized. In addition to the speed, consumption and location of the car, the player is aware by a sound effect of crashing cars. And the player gets notified when he loses or wins the game by pop-ups.\n\nThe game Bumpers is easy to learn and is fast to use without instructions. The player can control their cats only with the mouse: He changes the direction of the moving car to win the collisions.\n\nIn order to prevent the player from switching to another window (It happens frequently when player moves their mouse too fast and clicks out of the game window) the game window should be full screen or always be kept on top.\n\nAs a part of performance requirement, the refresh rate of the game should be at least 30 frames per seconds, so as the player has a smooth gaming experience.\n\nThe game is maintainable to be modified by the developer in case of new requirements. For example, the developer can add new car types or new collision types after releasing the game.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1282726,
      "meta": {},
      "text": "Usability: the player can control one car by only clicking the mouse\nUsability: the game should feed the player all the basic information like speed, consumption and location of their car\nSupportability: the game should be platform independent\nPerformance: when two cars crash, there has to be a soundeffect within 10ms, no matter the amount of cars.\nReliability: player should be able to switch between the different supported collisions in th middle in the game, without any problems\nUsability: the car that wins all colliosions is the winning car\n\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283179,
      "meta": {},
      "text": "Usability: \nThe player can use his mouse to change the direction of the car or its speed. By clicking in the direction the car changes it. \n\nThe player can start the game within 3 steps which are starting the game, choosing a car and a collision type.\n\nReliability:\nThe collision type should be changable during gameplay.\n\nPlayer has to choose a car and collision type before he can play. \n\nPerformance:\nThere should be no noticable latency by steering with the mouse and it shall be processed in under 30 ms. \n\nSupportability:\nThe determination of the collision winner works correctly after changing it during gameplay. \n\n\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1283531,
      "meta": {},
      "text": "Usability:\n- das Endgerät des Nutzers braucht eine funktionierende Maus oder Touchpad\n- der Spieler soll das Spiel mit maximal zwei Klicks starten oder stoppen können\nReliabilty:\n- das Spiel funktioniert uneingeschränkt solange das Fenster geöffnet ist(=>ignoriert alle unbekannten oder ungültigen Eingaben)\nPerformance:\n- genau ein Spieler soll gleichzeitig auf seinem Endgerät das Spiel lokal ausführen können\n- das Spiel soll 10 Nutzereingaben(Bewegungen) pro Sekunde verarbeiten können\nSupportability:\n- das Spiel sollte auf jeder Plattform spielbar sein(siehe Problem Statement)",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1283724,
      "meta": {},
      "text": "Usability: \n-Implement WASD-controls for the player to steer the car, as this is more intuitive than mouseclick-steering\nReliability:\n-the game can still run smoothly with 4k, fullscreen, resolution\nPerformance:\n-The system can handle parallel players\n-Reduce startup time by 20%\nSupportability: \n-clean the code, by reducing some of the classes and their functions, as this makes certain methods easier to find later on, if the code is changed\n-write logs for easier problem isolation",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1284502,
      "meta": {},
      "text": "Usability: Users interact with a mouse.\nReliability（Robustness): The system can tolerant temperatures up to 85 degrees Celsius.\nReliability(Security): the system shall under no  circumstances leak users´information to unauthorized users.\nPerformance(Availability):The availability of the system is at least 99.8%.\nSupportability(Maintainability): Defects can be corrected in 15 minutes.\nSupportability(Extensibility):It should upgrades via the interface .\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284996,
      "meta": {},
      "text": "Quality Requirements\n1. Usability: Die Steuerung des Spieler-Autos sollte intuitiv sein. Genauer gesagt, sollte der Spieler in der Lage sein während seiner ersten Runde die Steuerung zu verstehen. Was anhand der benötigten Tasten/Maus Interaktionen, um das Auto zu steuern, gemessen werden kann -> Es soll nur ein Mausklick benötigt werden um das Auto zu steuren.\n2. Realiability: Falls die Verbindung zur Maus abbricht, soll der Spieler in der Lage sein das Spiel mit der Tastatur zu beenden.\n3. Perfomance: Das Spiel sollte, bei bis zu 10 Autos auf dem Spielfeld gleichzeitig , flüssig laufen, also dass das Bild mehr als 20 mal die Sekunde aktualisiert wird.\n4. Supportability: Die Kollision sollen so implementiert sein, dass ein Entwickler innerhalb von 30 Minuten eine neue Kollision hinzufügen, ohne das Bugs entstehen.\n5. Constraints: Die App sollte auf allen Desktop Betriebssystemen laufen: Windows, macOS, Unix\n6. Constraints: Die Software sollte in Java implementiert werden.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1285395,
      "meta": {},
      "text": "• Usability:\n\t- The player can change the volume of the game in 4 clicks at most. \n• Supportability:\n\t* Adaptability:\n\t\t- The game should be fully playable with the keyboard in case of the inability of the game to detect a mouse.\n\t\t- The game controls have to be intuitive for both right-handed and left-handed people\n• Performance:\n\t- Latency between control input and their output should not exceed 50ms.\n• Reliability:\n\t* Robustness:\n\t\t- The system ignores all input except for the controls\n\t* Safety:\n\t\t- The game should not contain triggering material for photosensitive seizures, i.e flashing lights and harsh color transitions ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1287020,
      "meta": {},
      "text": "1. Usability\n- Users interact with the game board using their mouse\n- Users need only one click to start or stop the game\n\n2. Reliability\n- The system shall not change player's car speed randomly\n\n3. Performance\n- The car reacts immediately to player's click\n- Each collision is evaluated immediately\n\n4. Supportability\n- Car attributes (speed and consumption) can be changed within 5 minutes",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1283324,
      "meta": {},
      "text": "Usability:\n\tthe System should be easy to use so there is just one button: the start or stopp button, depending if the game has already starten or not. Also the handling with the mouse should be intuitive, the mouse should always drive in the direction of the mouse. \n\nReliability:\n\tthe system should be robust. the game should not crash only because the playser has enterd any kind of imput that is not needed. it should just ignor it and continue with the game \n\tThe system should also be secure. That means that it should prevent attacks. It is for example recommended to set variables private whenever it is possible \n\nPerformance:\n\tAs the Bumpers Game is relatively easy and needs not as much calculation time the Response time should be fast. we want the game to start in less then 1 sec after the user has pressed the start button and we want the car to react on the mouse imput in less then 0.1 sec.  It should react on 99.5% if there are less than 10 imputs per second. \n\tIt also should be available on at least 99% of the day. This is not as hard to archive because it is a relativel simple code and doesend need a lot of ongoing work \n\nSupportability: \n\tthe system should support different types of devices. so a user should be able to play the game on a Mobile phone as well as on a Computer or Laptop. The only differences should be that on the mobile phone the user dont need a mouse and can navigate the car via the touch screen. the size of the game should be changed according to the car.\n\t",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283856,
      "meta": {},
      "text": "NFR1: Usability: the player needs at most 2 clicks to start the game\nNFR2: Reliability: the game can tolerate wrong inputs entered by the user\nNFR3: Performance: the game can support one hundred players simultaneously\nNFR4: Availability: the availability of the game is 99.4% of the week\nNFR5: Maintainability: the game requires one hour maintenance per week\nNFR6: Adaptability: the game could be played on a computer on a tablet",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285013,
      "meta": {},
      "text": "NFR 1 Getting started: The player should be able to start playing the game after 2 clicks or less.\nNFR 2 Correct collision evaluation: There cant be more than 0.5% wrongly evaluated collisions .\nNFR 3 Reaction time: the car has to react to mouse movement within 20 ms.\nNFR 4 Consistent FPS: The games FPS cant drop below 30.\nNFR 5 Open source: The game should be open source to allow modding.\nNFR 6 Close game: The can always be closed within 2 clicks.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1285722,
      "meta": {},
      "text": "1. The player should be able to start/stop the game with a single click on a button\n2. The player has to be able to realize whether they won clearly. This has to be achieved by notifying the player either by text or sound.\n3. The game has to be able to handle any input from the player, regardless of whether it's valid or not.\n4. The game should run on a reasonable framerate with 80 cars on screen.\n5. The game structure allows for expansions in terms of new car types, new collision types, and graphical changes.\n6. The game must run on Windows, macOS, and Linux.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1286316,
      "meta": {},
      "text": "1. Usability: \n    1.) The GUI needs a maximum of one click in order to (re-)start and end the game (the GUI is very easy to learn, \n          remember and navigate through efficiently). \n    2.) Each car should be at least 20px * 30px in order to be recognized properly.\n2. Reliability: In regards to security, the game doesn't allow any text / file inputs thus preventing possible script / malware injections. \n3. Performance:\n   1.) No matter the platform, the \"uptime\" (i.e. how many game-breaking malfunctions per second occur) should \n         be as low as possible, in this case 100%. There should not be any bugs that cause the game to break.\n   2.) The game should be able to handle at least thirty cars at the same time whilst upkeeping the required 30 \n         FPS to run smoothly.\n4. Supportability: The game is adaptable to multiple input types, i.e. takes various mouse protocols (USB, PS/2, etc.) and converts them correctly to the steering on the game board.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286775,
      "meta": {},
      "text": "Usability:\nIn each collision, there will be only 1 winner.\nThe player can start and stop the game.\nThe car that wins all collisions is the winner of the game. \nWhen the game is started, the music is played.\nThe car can be either fast or slow.\nThe player uses mouse to change speed and direction.\nWhen cars crash, there has to be a sound effect.\nIt should visualize parameters of the car such as speed, consumption and location.\n\nReliability: /\n\nPerformance: \nThe Bumper game is played by 1 person at a time and the platform is independent.\n\nSupportability:\nThe game should support different collisions.\nThe determination of the collision winner should be changeable during gameplay.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286784,
      "meta": {},
      "text": "1. Usability: the player should be able to start and stop the game with at most 2 clicks\n2. Performance: the game should be able to launch in under two second\n3. Supportability: the chrash sound effects and car pictures should be changeable with just changing one variables value for each picture or soundeffect in the code\n4. Reliability: the game should continue even if the player is pressing keys that are not defined (for example right mouse button)\n5. Usability: the player should be able to abort the game with one click \n6. Performance: the game should be able to start and stop in under a second\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1287318,
      "meta": {},
      "text": "6 quality requirements:\n\n1. Usability :Players need to klick 2 - 4 times mouse to beginn the game\n2. Robustness: The the player gave the wrong input, there will be some instructions and the system can still work\n3. Performance: the delay between giving instructions and showing the change is in 0.1 second. \n4. Security: a PIN is demand when the player want to play the game with his account\n5. Adaptability: The users can play the game in PC and smartphone.\n6. Availability:the availability of the system is at least 99.8%.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1280556,
      "meta": {},
      "text": "usability : the player should select a car and steer its direction.\n                  the player can control everything with the mouse.\n\nReliability : The number of cars in the game can increase as long as they are visible on the screen.\n                   the system shall not crash under no circumstances .\n\nPerformance: The game interface can be shown in less than 1 second after running it.\n\nSupportability: The player can change his tactics if he's losing the game.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1281919,
      "meta": {},
      "text": "NFR 1: Usability: the bumpers game should be an intuitive game, that the player should learn the basic functionalities while playing the game and this within at most 10 clicks.\n\nNFR 2: Reliability: crash safety during runtime means that the application & the bumpers game should be reliable and safe in 97% of the runtime.  \n\nNFR 3: Performance: response time -> the game should have a short response time, pressing the run button should not take longer than 5 sec & response time during playing should be 1-2 sec.  \n \nNFR 4: Supportability: change of speed -> as the game has different car types, the game must support a range of min and max speed and should be easily modified by the developer.\n\nNFR 5: Availability -> The overall availability of the system is min. 99%. The downtime of the system is at most 1.5h per week.\n\nNFR 6: Scalability -> The system should handle over time up to 4 different players (multiplayer).",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282304,
      "meta": {},
      "text": "1.\tUsability\n\t•\tThe current speed of the car should be displayed in the form of a number to the player at all times \t\t\tduring gameplay.\n\t\to\tThis pertains to Nielsen’s 6th usability heuristic: Recognition rather than recall. The user should not have to remember information.\n\n2.\tReliability\n•\tIn every collision between two cars, there must be one car that wins the collision.\no\tThis pertains to the game’s ability to support a function which determines its robustness.\n\n3.\tPerformance\n•\tBumpers is a single-person game and can only support one user during gameplay.\no\tThis pertains to the amount of simultaneous users supported by the game.\n\n4.\tSupportability\n•\tThe rules that determine the winning car must be able to be changed during gameplay.\no\tThis pertains to the systems adaptability, as the system behavior must be able to change.\n\n5.\tSupportability\n•\tThe player must be able to change the speed of her car during gameplay.\no\tThis pertains to adaptability, as the game must still run efficiently in a changing environment.\n\n6.\tReliability\n•\tThe player must be able to stop the game at any time during the gameplay.\no\tThis pertains to the robustness, as this is a function that must be supported by the game.\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1282817,
      "meta": {},
      "text": "Usability\nThe game should start after assigning the type of collision. (Efficiency)\n\nReliability\nThe game should allow at least one fast car and one slow car in one game (Robustness)\nThe game should only allow player to control one car at a time (Security)\n\nPerformance\nThe game should always show the parameters of the car of the player (Availability)\n\nSupportability\nThe game should work in different environments (Adaptability)\nThe game should allow importing new type of collisions in the future (Maintainability)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282851,
      "meta": {},
      "text": "Usability : \n- The user must click to mouse to start the game.\n- The user needs to win all collisions in the play field in order to win the game.\n\nReliability : \n- In the game field which Bumpers game is played, there can be a maximum number of 20 cars. This can be written under \"Robustness\" since the game field's saturation to cars is defined.\n\n\nPerformance : \n- The downtime of server in which Bumpers game is played is at most 30 minutes a month. The availability of the system is at least %99.93. \n\nSupportability :\n- The game should be platform independent\n- The game should support different play fields with different designs according to the preference of the player.\nBoth of these requirements can be subdivided to the category of \"Availability\" since the game adapts itself to the corresponding needs of the player.\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1283740,
      "meta": {},
      "text": "The interface should be simple and efficient enough that a user can start the game within 3 clicks at most. [Usability]\nThe game should be enjoyable so that in a survey of players asked if they enjoy/don't enjoy the game at least 80% of users should enjoy the game. [Usability]\nThe game's code is inaccessible from the GUI. [Reliability]\nThe game should load in less than 10 seconds. [Performance]\nThe outcome of the game in case of a win/loss should be displayed in less than one second within the conditions for a win/loss being satisfied. [Performance]\nAll changes/fixes should be documented with a version control system and available to all developers working on the game. [Supportability]",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1283864,
      "meta": {},
      "text": "NFR1: Change Speed: The player must be able to change his car speed., while driving.\nNFR2:  Different Collisions: The game should support different types of collisions, and the player have to choose from them.\nNFR3: Different car types: The Game should support cars with different parameters (speed, etc.). For example, fast and slow cars.\nNFR4: Platform Independent: The Game should be able to run on all gaming platforms (pc, mobile, console).\nNFR5: Changeable Collision Winner: The Winner of the collision should be able to change depending on curtain parameters (speed, direction,  collision type, health).\nNFR6: Sounds: Play sound on crash, and also on driving the car.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284867,
      "meta": {},
      "text": "1. The player needs a maximum of 4 clicks to select a vehicle and start the game \n2. The games UI should be adapted to fit the UI navigation patterns of the target system\n3. The game should also handle and process clicks that land outside of the playboard\n4. The game should be able to handle up to 20 Cars at the same time without suffering a huge performace drawback\n5. The framrate of the game should always hit the 60 Frames Per Second mark\n6. The input endpoint should be implemented as an interface that is easily adatable to other input devices\n\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1284894,
      "meta": {},
      "text": "-NFR1 Usability: The player should be able to start the game in maximum 2 clicks.\n-NFR2 Supportability: The game should be available on all platforms/operating systems.\n-NFR3 Performance: The game should start/load in less than 2 seconds.\n-NFR4 Reliability: The game should have no unexpected bugs or other issues.\n-NFR5 Usability: The individual cars should be at least 1,5cm.\n-NFR6 Reliability: The game should not respond to any wrong user inputs.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1285060,
      "meta": {},
      "text": "After pressing the start button, the game should start in less than half a second. -> (Performance)\nThe Player should be able to start or stop the game within one click. -> (Usability)\nUpon starting the game, it should be clear to the player, which car he is controlling. -> (Usability)\nThe player should not be able to break the game by pressing anything but the start button before the game has been started.     -> (Reliability)\nThe game has to be designed in way, that allows adding new future features like more car or collision types.                    -> (Supportability)\nThe Volume of the music and crash sound should be balanced, so that neither is too loud. -> (Usability)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1286217,
      "meta": {},
      "text": "Usability:\n\t- The user controls his car with mouse.\n\t- The user can see different parameters of the car, e.g. speed, consumption and location.\n\t- The user should get feedback of cars crashing using audio.\nReliability:\n\t- The game should run without error in at least 99.9% of cases.\nPerformance:\n\t- The game runs at at least 30 FPS.\nSupportability:\n\t- Players can play the game on every platform.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282736,
      "meta": {},
      "text": "NFR1: Usability\n\tAfter starting the application the player can start the game with default settings (car type, collision type) within 1 mouse click and only needs one additional mouse click every time the player steers the car.\n\nNFR2: Usability\n\tThe game visualizes different parameters of the car, e.g. the speed, consumption and location of the car. The display is not on the game board and thus does not screen or hide any cars.\n\nNFR3: Usability\n\tUser can change car and collision type at any time by pressing a corresponding button (1 button for car type, 1 button for collision type). \n\nNFR4: Reliability\n\tThe game ignores input from the keyboard so no wrong input can occure.\n\nNFR5: Performance\n\tReaction of the game should be quasi-instantaneous (<100ms) and the driving should appear without jerking for a maximum amount of 100 cars at the game board.\n\nNFR6: Supportability\n\tThe game should be platform independent.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1282955,
      "meta": {},
      "text": "Usability: - User is only required to move its mouse to play the game.\n\t\t- User can start a game with two clicks.\n\t\t\nReliability: - Prevention of the user going out of bounds with its car. \n\t\t   - Cars cannot stop moving.\n      \t\t  \nPerformance: - Starting and ending a game requires only 6 seconds.\n\nSupportability: - The game should be platform independent.\n\t \t\t  \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1282973,
      "meta": {},
      "text": "Numbers Non-functional requirements:\n\n\t1. Robustness: Game shouldn't crash whenever a car-crash is registered or glitch mid-gameplay,\n\t\t\t\t should the game crash, the pre-crash state should be recovered in a matter of seconds.\n\t2. Response time: Player's car should point to the mouse location 0.5s upon clicking.\n\t3. Accuracy: Cars shouldn't crash and stop driving if no collision took place, i. e. no pixel is shared between cars.\n\t4. Learnability: Game should be playable only by using the mouse.\n\t5. Portability: Game should be playable across all java supported systems consistently.\n\t6. Satisfaction: Game shouldn't run for longer than 2 minutes to avoid players getting bored.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1284482,
      "meta": {},
      "text": "NFR 1: Usability : The player is able to play the game using only his mouse or trackpad \nNFR 2 : Usability : After losing or winning a game, the player is able to start a new game within 2 clicks\nNFR 3 : Reliability : The game should keep running even if the user clicks at random or unsupported keys on his keyboard or mouse at a very high speed\nNFR 4: Performance : The car changes it's direction instantly (in less than 1ms) whenever the player clicks somewhere on the screen\nNFR 5: Performance : The game runs lag/stutter-free 100% of the time even with more than 100 cars on the board\nNFR 6: Supportability : The code of the game should be well structured and use software design patterns and follow recommended design principles so that it is easy to add or delete features from the game without having to restructure the whole code",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1285110,
      "meta": {},
      "text": "1. (Usability)\nThe game should be started and stopped only with one click for each action. Choose of cars and collisions types - maximum with 2 clicks.\n\n2. (Usability)\nAfter loosing a game, player can imideately restart the game in 1 second or have a pause for any time.\n\n2. (Reliability - Robustness)\nThere should be no actions from player inside of the game, which lead to exceptions or errors crashing the game.\n\n3. (Performance)\nGame should normally have not less then 60 FPS.\n\n4. (Adapatability)\nThe game can work with any device at any platform.\n\n5. (Maintainability)\nThere is always possible for developers to add new car and collision types without rewriting already existing code.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1285177,
      "meta": {},
      "text": "- Usability (Memorability): The menu options should be on the top left corner, since that is where menus usually are.\n- Reliability (Security): The user should have to type in its password to protect his leaderboard and statistics (e.g. % of matches won) from less qualified players.\n- Performance: The system should be able to support up to 20 clicks per second to ensure that even osu! trained gamers have a smooth experience.\n- Supportability (Adaptability): The system should recognize if the user operating system is in dark or light mode and adapt the game to it.\n- Usability (Error handling): The user should have the ability to report an error to the developers.\n- Usabilty (Memorability): The game should pause when the user presses the Escape key.\n \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286667,
      "meta": {},
      "text": "NFR1. the maximum number of clicks for the user to start the game is less or equal to 5 (choice of car, click on start, ...) (Usability)\n\nNFR2. The background color has to have a strong contrast to the cars color, otherwise the game won't be enjoyable. So either dark background and light/colored cars or light background and dark/colored cars (not for example black background and dark blue cars) (Usability)\n\nNFR3. changing the direction of the car can be done in one mouse click (Usability)\n\nNFR4. The game can handle up to 50 cars in the game without instantly crashing (Reliability)\n\nNFR5. When the game is started the user interface has to be ready in a maximum of 8 seconds (Performance)\n\nNFR6. The game can be played on different devices such a laptops and ipads (Supportability)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1286834,
      "meta": {},
      "text": "First of all, the game interface should be clear and understandable. User should clearly understand control buttons and their functionality. There shouldn't be any buttons on the screen that is not related to the game. After learning the game, user should be able to remember how the game is played. Usability should also consider audiece. For example, if the game is directed to older people, the developers should take into consideration that memory declines with age. The user should find the playtime enjoyable for him/her to keep playing it.  Errors shouldnt crash the computer and damage anything permanently.\nDevelopers should consider robustness in developing case,as the user can play the game in different environments or abuse the game by inputting the same move multiple times. The game should be able to handles these cases. The game should be safe enough that it doesnt damage the hardware in any way. If the game access internet, developers should do so in a secure way lest malware and sorts creeps into user's system unnoticed. The game should have high performance. If multiple users want to play the game together, the game should be able to handle that. The time in which the game is in maintenance should be small as possible, if lots of players play it. If the trend in gaming are changes, the game should be able to adapt to it like in the case of battle royale,which lots of games added it to their game as an option, which surely satisfied the player base. The game development should be documented for developers to be able to maintain the game in the long run.Lastly, transporability should also be taken into careful consideration and dictate how users  download the game and access updates.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1287488,
      "meta": {},
      "text": "I am going to describe in the following the experience the player in Bumpers Game has while playing the game. We want the game to perform in a certain manner considering nonfunctional requirements covering all four different URPS categories.\n\nUsability:\n1) The player gets familiar with the game concept in short notice (Learnability) and doesn't need an instruction before the game because the player can get to know the game while playing the game already.\n\n2) To enable the player to play the game in a convenient way without the need of keeping the features of the car in mind, Bumpers support making information of car like the speed, consumption, location and car type  visible in the game screen. (Memorability)\n\n3)The player needs only 3 clicks to starts the game and Bumpers support music playing, smooth car driving with the control of the mouse and car collision so that the game offers a smooth user experience.(Satisfaction)\n\nReliability\n4)If the player clicks to a wrong button on the keypad while the player should be only controlling the speed and the direction of the car with the mouse the game doesn't stop or terminate. It can tolerate those kind of errors.(Robustness).\n\n5)During the play it must be certain that there is a winning car which wins all the collisions during the game. It must be ensured that the game has a winner.\n\nPerformance\n6)Bumpers must have a very short response time. The loading time of bumpers application must be smaller than 12 seconds. Opening the application should take less than 5 seconds. All other response like changing the car type or changing the direction and speed of the car should be under 1 second. (Response Time)\n\nSupportability\n7)As long as it is expected that Bumpers will be on other markets on different continents, Bumpers must be modified for other continents in which it would be used in order to maintain user satisfaction. For example in United States the velocity indicator must show the velocity in miles per hour.(Adaptability)\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    }
  ],
  "bonus_points": 0,
  "example_solution": "- Portability: Bumpers can be moved from iOS to Android.\n- Usability: Bumpers can be played without reading a user manual.\n- Reliability: Bumpers should not crash more than 1 out of 1000 executions.\n- Performance: The game board should support an update of 25 frames per second.\n- Performance: The cars direction should be changeable within 1/10 sec after steering.\n- Maintainability: Bumpers must be re-designable to a client-server architecture.\n- Adaptability: As Bumpers must support North Americas and European markets, it must support metric and imperial systems. \n- Supportability: The game should be supported on Linux, MacOS and Windows.",
  "grading_criteria": [
    {
      "id": 6304,
      "title": null,
      "structured_grading_instructions": [
        {
          "id": 14858,
          "credits": 0,
          "feedback": "Your solution contains 100% copied text from the slides. Please note that we will make a note of this case and reserve the right to exclude you from the bonus at any point.",
          "usage_count": 1,
          "grading_scale": "plagiarism",
          "instruction_description": "Apply this instruction if the student's solution contains 100% copied text from the slides or the textbook (no or < 10 % self-written text)"
        },
        {
          "id": 14864,
          "credits": 0,
          "feedback": "According to the problem definition, nonfunctional requirements should be stated for all four URPS categories",
          "usage_count": 4,
          "grading_scale": "missing",
          "instruction_description": "Use it as additional Feedback, if the student provided **<** 6 NFR **and** one URPS-Category was missed (provide category to student!)"
        },
        {
          "id": 14865,
          "credits": -1,
          "feedback": "According to the problem definition, nonfunctional requirements should be stated for all four URPS categories",
          "usage_count": 4,
          "grading_scale": "missing",
          "instruction_description": "Use it as additional Feedback, if the student provided **>=** 6 NFR **and** one URPS-Category was missed (provide category to student!)"
        }
      ]
    },
    {
      "id": 6305,
      "title": "Assessment of Bumper's Game Quality Requirements",
      "structured_grading_instructions": [
        {
          "id": 14859,
          "credits": 1,
          "feedback": "Correct requirement, well done!",
          "usage_count": 6,
          "grading_scale": "Good",
          "instruction_description": "**For each** well explained and testable NFR, that does not reveal any implementation details"
        },
        {
          "id": 14860,
          "credits": 0.5,
          "feedback": "Correct requirement, however you need to be more specific and elaborate more.",
          "usage_count": 6,
          "grading_scale": "Weak",
          "instruction_description": "**For each** correct weak requirement, e.g., \"Performance: The game must not lag when cars are driving.\""
        },
        {
          "id": 14861,
          "credits": 0,
          "feedback": "This is a poor requirement. Please make sure your requirements are testable and specific enough without enforcing implementation details in the quality requirement. Reiterate over your submission with this note in mind and ask your tutor if something is still unclear",
          "usage_count": 6,
          "grading_scale": "Poor",
          "instruction_description": "**For each** bad requirements, e.g., \"Usability: Bumpers must be user-friendly\" is NOT a good requirement since it cannot be measured"
        },
        {
          "id": 14862,
          "credits": 0,
          "feedback": "This is a functional requirement. Please revise the lecture slides again and make sure to understand the difference between functional and non-functional requirements. Ask your tutor if something is still unclear",
          "usage_count": 6,
          "grading_scale": "Wrong",
          "instruction_description": "The student added a functional requirement instead"
        }
      ]
    }
  ],
  "problem_statement": "In order to solve the following task, first re-read Bumpers' Problem Statement.\n\n### Bumpers Problem Statement\nBumpers is a game where cars drive on a game board and can crash each other. In each collision, there is a winning car.\nThe car that wins all collisions is the winner of the game.\nThe player can start and stop the game. When the game is started, music is played.\nA car can be either fast or slow. There is one car controlled by the player.\nThe player can steer the direction of the car with the mouse and change its speed.\nThe game should be platform independent.\nIt should visualize different parameters of the car, e.g. the speed, consumption and location of the car. When cars crash, there has to be a sound effect.\nThe game should support different collisions.\nThe determination of the collision winner should be changeable during gameplay.\n\n\n### Your Job\nDefine in total 6 quality requirements (i.e., non-functional requirements) for the Bumpers game, which should cover all the four different URPS categories.\n\n*Requirement: Use your own words and do not just copy the lecture slides nor internet sources! Limit yourself to around 250 words*",
  "grading_instructions": "<ins>General Grading Scheme:</ins>\n- up to 6 Points for 6 NFR from all four URPS-Categories\n    - 1 Point per NFR per URPS-Category (-> 4 Points in total)\n    - up to 2 Points for two additional NFR from any URPS-category\n    - Use either the Grading Criterion with 0 or -1 points to ensure the rule is fulfilled\n- Good answers indicate how the non-functional requirements can be measured\n\n\n<ins>General Rules:</ins>\n- If the student provides more NFR than necessary, the worst one counts. (You can still provide feedback, but under no circumstances publish the evaluation guidelines)\n- No points for examples from the lecture (as always)\n- Different solutions to each of the U, R, P, S elements are allowed, but they should make sense in the respective category\n- This answer does not accept any function-related requirements!\n- The 250-word limit is a soft limit, the hard limit is at 500 words. In such cases, please assess the submission with 0 points and reference to the 250-word limit. DO NOT communicate the 500-word limit to the students!\n- In case one submission is suspicious of plagiarism, please report the assessment-link with a brief explanation to the plagiarism subteam on Confluence"
}