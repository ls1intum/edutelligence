{
  "id": 7195,
  "course_id": 169,
  "title": "H09E01 Advantages and Disadvantages of Scrum (SS22)",
  "type": "text",
  "max_points": 12,
  "bonus_points": 0,
  "grading_instructions": "General Grading Scheme:\n- Up to 2P for the core essence of SCRUM\n- Up to 2,5P for each advantage / disadvantage (+/-) based on:\n    - 1,5 Points for the \"pure\" + / - (0.75 if weak)\n    - 1 Point for the comparison to the Spiral Model (0 if existent, but wrong)\n    - 0 Points for the whole + / - if the comparison to the Sprial Model is completely missing\n\n\nGeneral Rules:\n- Students should demonstrate that they understand both concepts (SCRUM / spiral). \n- Advantages / disadvantages of SCRUM should be stated and put into relation with the spiral model. Advantages of Scrum do not necessarily have to be clear disadvantages of the spiral model [and vice versa]\n- If the student provides more examples than necessary, the worst one counts. (You can still provide feedback, but under no circumstances publish the evaluation guidelines)\n- The **350**-word limit is a soft limit, the hard limit is at **600** words. In such cases, please assess the submission with 0 points and reference to the 350-word limit. DO NOT communicate the 500-word limit to the students!\n- In case one submission is suspicious of plagiarism, please report the assessment-link with a brief explanation to the plagiarism subteam on Confluence",
  "problem_statement": "You are a working student at an up-and-coming Software startup. \n\nAt the moment, your colleagues manage their projects with the spiral model. Your supervisor is really happy with your previous work and gives you an important task. He has heard of a method called SCRUM and wants you to evaluate it. \n\nYour task now is to prepare a short presentation of SCRUM for your supervisor, which ...:  \n- explains the core essence of SCRUM to your supervisor, who so far only knows it from hearsay\n- includes a discussion about 2 advantages and 2 disadvantages of SCRUM, each of which is underpinned by a common example. \n- compares each advantage / disadvantage to the previously used Spiral Model. \n\nNotes:\n- Please  limit the explanation of the core essence of SCRUM to 2-3 sentences, as the supervisor's time is valuable\n- For each advantage/disadvantage, make sure to explain the reason why it is an advantage/disadvantage of SCRUM!\n- A simple comparison between SCRUM and the Spiral model is sufficient, the mentioned advantage of SCRUM does not necessarily need to be a disadvantage of the Spiral model, and vice versa.\n\n*Requirement: Use your own words and do not just copy the lecture slides nor internet sources!Limit yourself to a maximum of 350 words!*",
  "example_solution": "Scrum is a technique to manage and control software and product development when the requirements and the technology may be rapidly changing during the project.\n\n***Advantages***\n- Large projects are divided into manageable sprints to prevent analysis paralysis and to shorten the time until a first prototype is built [vs. prototypes as early as the first iteration of the sprint model]\n    - Example: Bumpers (see L02, slides 33ff)\n- Feedback and change requests can be adopted faster, which leads to a software product that fulfills its requirements in a better way [vs. slower implementation of change requests due to longer iterations and less frequent feedback from the customer]\n    - Example in EIST/Bumpers: ArTEMiS and the tutors provide feedback after each sprint rather than at the end of the semester\n- There is a potentially shippable product increment after each sprint which includes already fully implemented functionality and could be delivered to the end-users [vs. prototypes after each iteration that often get discarded later on. Similar to Scrum, software is produced early in the life cycle]\n    - i.e. lots of testing, the customer can see the progress of the project, ...\n- Feedback can be given quickly when using SCRUM [vs. only feedback at the end of each iteration]\n    - Time to market can be shorter\n    - Example: In Bumpers, after every sprint, there is a new executable version of the game\n- Individual team members' efforts are recognized in Daily Scrum Meetings [vs. non-existence in the spiral model]\n    - Example: In the standup meeting, every team member tells the rest of the team their status, impediments, and promises\n\n***Disadvantages***\n- If a project does not yet have a clear definition, the product backlog is difficult to plan [vs. same problem with the spiral model]\n    - Example Problem Statement: ‚ÄúDevelop a system that assists developers with continuous integration‚Äù\n    - Problem: What kind of system? What are the requirements? What kind of assistance do developers need? What is the domain? ...\n- The customer tends to get lazy [vs. the customer's involvement is not always necessary and less frequent]\n    - Example: Since changes can always be incorporated, the customer may not see the need to specify the requirements at the beginning of the project in as much detail as necessary\n    - *Note: This is a risk when Scrum is not implemented correctly, and it happens quite often in practice*\n- Too much disturbance can reduce the development efficiency [vs. same problem with the spiral model]\n    - Example: Constant change requests lead to uncertainties about whether the requirements are finished. The developers cannot concentrate on their tasks but have to incorporate the changes instead.\n    - *Note: This is a risk when Scrum is not implemented correctly, and happens quite often in practice*\n- Hard to estimate the total cost and duration of the project at the beginning because not all changes are easy to anticipate [vs. cost and duration are difficult to determine at the beginning, but become more realistic as the project progresses, due to important issues being discussed early]\n    - If you allow changes in the process, it is also more likely that they happen üòâ \n    - Example: It is hard for managers to negotiate contracts\n",
  "meta": {},
  "submissions": [
    {
      "id": 5620178,
      "meta": {},
      "text": "Core Essence of SCRUM\n\tSCRUM is a software development management process that enables transparency and collaboration \twithin the development team and allows the team to respond to frequent change. The process is comprised of several consecutive periods called Sprints, wherein the mission is to complete the respective goals set for that sprint and produce a shippable product increment that can be displayed to the product owner and key stakeholders in the sprint review meeting. Change is probable to occur to the SCRUM team must be adaptable and agile in their development process.\n\nSCRUM Advantage 1\n\tSCRUM provides transparency within the development team.\n\nExample) \n\tAt the daily sprint meeting, each development team member is asked what they accomplished since the last daily meeting, what impediments are standing in her way, and what she will accomplish by the next daily meeting. This way, every team member is kept abreast of the development team‚Äôs progress.\n\nComparison to Spiral\n\tIt is not common protocol to provide daily updates to the rest of the development team, so there is less transparency within the development team.\n\nSCRUM Advantage 2\n\tSCRUM allows for agile software development. \n\nExample) \n\tThe product owners can remove, add, and alter items in both the product backlog and the sprint backlog, so the development team must be adaptable to change.\n\nComparison to Spiral\n\tThe Spiral method allows for change at certain periods, but change cannot occur within one of the four major activities.\n\nSCRUM Disadvantage 1\n\tIt is possible that the development team will not be fully committed to developing the best possible versions of each sprint item because if the respective sprint backlog item is changed by the product owner, then it is possible that this extra effort may be in vain.\n\nExample)\n\tA developer has the opportunity to implement an extra functionality in the class she is working on that could be useful to the client but opts to stick to the minimum requirements in the sprint backlog because she does not know if the backlog item will end up being scrapped.\n\nComparison to Spiral\n\tIn Spiral, change cannot occur within an activity, so the developers at least know that what they are currently working on will not be scrapped before the next activity occurs.\n\nSCRUM Disadvantage 2\n\tWhile it is possible to have the SCRUM methodology applied to multiple SCRUM teams, in general SCRUM does not scale extremely well.\n\nExample)\n\tIf there is a very complex project that requires many developers, then SCRUM may not be suitable because the team members may not be able to interact as frequently or as intimately as is ideal for SCRUM.\n\nComparison to Spiral\nSpiral does not require as many team discussions and meetings as does SCRUM, so a large project requiring many developers may not be a significant of a hindrance to the Spiral methodology.\n",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 562017801,
          "description": "The core essence of SCRUM has been adequately explained, focusing on transparency, collaboration, and adaptability to changes within the development team. However, the explanation could be more concise, especially regarding the Agile aspect, as this overlaps with the advantages section.",
          "title": "Core Essence of SCRUM",
          "index_start": 22,
          "index_end": 585,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 562017802,
          "description": "You have effectively described transparency as an advantage of SCRUM, supported by a clear example of daily sprint meetings. The comparison to the Spiral model is valid, highlighting the lack of daily updates as a contrast.",
          "title": "SCRUM Advantage 1: Transparency",
          "index_start": 605,
          "index_end": 1142,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562017803,
          "description": "The advantage of Agile development in SCRUM is well articulated, with a practical example of backlog adjustments. The comparison to the Spiral model is accurate, as it points out the restricted periods for change in Spiral.",
          "title": "SCRUM Advantage 2: Agile Development",
          "index_start": 1162,
          "index_end": 1521,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562017804,
          "description": "The potential lack of commitment due to changing sprint backlogs is a valid disadvantage. The example is illustrative, and the comparison to the Spiral model correctly shows how change restrictions can assure developers their work won't be scrapped.",
          "title": "SCRUM Disadvantage 1: Commitment Issues",
          "index_start": 1544,
          "index_end": 2299,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562017805,
          "description": "You've identified scalability as a disadvantage of SCRUM, supported by a complex project example. The comparison to the Spiral model is appropriate, noting fewer team discussions make Spiral more suitable for large projects.",
          "title": "SCRUM Disadvantage 2: Scalability",
          "index_start": 2322,
          "index_end": 2880,
          "credits": 2.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 5620807,
      "meta": {},
      "text": "Die Essenz von SCRUM liegt im staendigen Austausch der Entwickler untereinander. Es gibt jeden Tag ein 'Daily Scrum Meeting', am Anfang jedes Sprints ein 'Sprint Planning Meeting' und am Ende jedes Sprints ein 'Sprint Review Meeting'. Durch diesen staendigen Austausch ist jedes Teammitglied immer auf dem neuesten Stand. SCRUM besteht aus kurzen Zeitabstaenden (Sprints). Am Ende jedes Sprints liegt ein 'potentially shippable product' vor.\n\nSCRUM eignet sich gut fuer Projekte, deren Anforderungen sich staendig aendern. Ist man beispielsweise mitten im Entwicklungsprozess und beim Sprint Review faellt den Entwicklern auf, dass sie an eine Funktionalitaet noch gar nicht gedacht haben, wird diese Funktionalitaet einfach in den Product Backlog uebernommen. Aus dem Product Backlog kann dann am Anfang jedes Sprints ausgewaehlt werden, was als naechstes implementiert wird. Auf diese Weise kommt SCRUM gut mit stetigen Veraenderungen klar. Beim Spiral Model ist es nicht so einfach Funktionalitaeten einzufuegen, an die man anfangs nicht gedacht hat, da eine Iteration viel laenger dauert und viel mehr passieren muss, bis man in die naechste Iteration kommt. Wuerde man beispielsweise eine neue Funktionalitaet waehrend einer Iteration einfuegen, wuerde das den ganzen Plan der Iteration durcheinanderbringen.\n\nEin weiterer Vorteil an SCRUM ist der Fakt, dass man nach jedem Sprint ein 'Potentially Shippable Product' hat. So hat man staendig im Blick wie weit das Programm schon ist und kann auch besser einschaetzen was noch fehlt und wie lang der Prozess, in etwa, noch dauern wird. Beim Spiral Model hat man erst ziemlich gegen Ende einer Iteration einen 'Operational prototype'. Da die Iterationen beim Spiral Model viel laenger dauern als bei SCRUM hat man dadurch auch nicht so oft funktionierende Zwischenversionen des Programms.\n\nEin Nachteil von SCRUM ist, dass es keine feste Deadline hat, wann das Projekt abgeschlossen sein muss, da es zwar viele kleinere Deadlines gibt, aber nicht definiert ist, wie viel in einem Sprint geschafft werden muss. Beim Spiral Model kann man eine solche Deadline viel besser umsetzen.\n\nSCRUM eignet sich nicht fuer grosse Teams, da der Kommunikations Aspekt unter grossen Teams leiden wuerden. Im Sprial Model laesst sich deutlich einfacher mit grossen Teams arbeiten.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621339,
      "meta": {},
      "text": "In SCRUM, agile processes are used to be able to deal with interruptions and changes during development. It consists of a product backlog, a sprint, where in 2-4 weeks a potential shipable product increment is delivered to the customer and feedback sessions (sprint retrospective and sprint review)  after sprints within the team and with the project owner. In SCRUM, there is a scrum master who acts as a facilitator between the development team and the product owner and tries to sovle potential issues.\n\nIn SCRUM, changes are easily possible, because after a sprint, the product owner can give directly feedback and additional required features, which are added to the product backlog afterwards. In the Spiral model, no changes within an activity are possible anymore.\nSince product increments are constantly delivered to the product owner, the product owner can start to use the software already very early (with limited features). Hence, an implementation is faster possible. In the Spiral model, the product is delivered to the customer after all required features are completely developped. Hence, the customer does not get an early, reduced version of the system.\n\nIn SCRUM, it is more difficult to estimate the duration and the extent of a project (no definite end date). Since constantly feedback from the product owner is searched, the product owner can adapt his/her expectations and requirements which consequently enlarges the product scope. In the Spiral model, after an activity is achieved, no changes are anymore possible in this activity. Hence, it is easier to estimate the scope of a project.\n\nSCRUM requires self-organization and individual responsibility in team to be able to identify the next tasks for the sprint backlog, the estimated duration for a task and the abiltiy to solve these tasks. This becomes a disadvantage if the development team does not want this responsbility and rather preferes fixed tasks and clear instructions from a boss. In the Spiral model this problem is also present, but in a that big scope. The following iterations are more defined and clear for the team and the project leader takes a more traditional role (distribute tasks) compared to scrum, where the master has the role of a facilitator.",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 562133901,
          "description": "The explanation of SCRUM's core essence is clear and concise, highlighting the agile process, product backlog, and potential shippable product increment delivered after each sprint. It effectively conveys the iterative nature of SCRUM and its focus on adaptability.",
          "title": "Core Essence of SCRUM",
          "index_start": 507,
          "index_end": 699,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 562133902,
          "description": "The advantage of early product delivery in SCRUM is well explained. The comparison to the Spiral model effectively highlights how SCRUM allows for early use of the software, whereas the Spiral model waits for complete development before delivery. This is a strong point.",
          "title": "Advantage of SCRUM: Early Product Delivery",
          "index_start": 773,
          "index_end": 1172,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562133903,
          "description": "SCRUM's adaptability is well described, emphasizing how changes are possible after each sprint with direct feedback from the product owner. The comparison with the Spiral model is accurate in illustrating the limitations of changes within an activity in the Spiral model.",
          "title": "Advantage of SCRUM: Adaptability and Flexibility",
          "index_start": 507,
          "index_end": 772,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562133904,
          "description": "The challenge of estimating project duration in SCRUM is clearly articulated. The comparison with the Spiral model correctly points out that the Spiral model allows easier estimation due to its structured approach.",
          "title": "Disadvantage of SCRUM: Difficulty in Estimating Duration",
          "index_start": 1174,
          "index_end": 1614,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562133905,
          "description": "The need for self-organization in SCRUM is presented as a disadvantage, especially for teams that prefer traditional hierarchies. The comparison with the Spiral model is somewhat weak, as it suggests the problem exists but not in as large a scope, which needs more clarity.",
          "title": "Disadvantage of SCRUM: Requirement for Self-Organization",
          "index_start": 1616,
          "index_end": 2252,
          "credits": 1.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 5622098,
      "meta": {},
      "text": "Scum is a working technique that allows an agile working mode in order to be able to react to change. It is a process where a team of 5-7 team members split the project into several sprints of 2-4 weeks to work on a subset of requirements in order to deliver a valid product increment after each sprint. \nOne important advantage of scrum is that for example when the exact solution of the finished project is unknown at first, after each sprint it is possible to react to a changing environment and for example adjust the product backlog/requirements. The spiral model allows reacting to change as well, as it is an iterative approach, however only after each activity and not within an activity.\nA second advantage of scrum is the fact, that it is easy to structure the project and divide it into subproblems. This allows smaller milestones and early successes with a first MVP that is continuously improved in each sprint. Again, the spiral model already delivers a better solution than any linear model as you have 9 iterations that each reach separate milestones. However, it takes very long until a first product can be delivered.\nOn the other hand, scrum also has disadvantages. For example, it is much harder to plan the entire duration of the project, as the exact solution is not yet known and changes can occur and influence the project duration. As there are 9 fixed iterations with 4 steps in the spiral model, planning can be easier here at the cost of flexibility.\nAnother disadvantage of scrum is that it takes a lot of planning and reviewing effort. First, there is a kick off meeting to discuss general requirements. Then, there are Sprint planning meetings in the beginning and review and retrospective meetings in the end of each sprint. These meetings are not needed as much in the spiral model, as the entire project is planned once in the beginning and only continuously reviewed, but usually no further planning of the next sprint needs to be done.",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 562209801,
          "description": "The explanation of SCRUM's core essence is concise and generally accurate. However, the mention of 'Scum' appears to be a typographical error and should be corrected to 'Scrum'. Additionally, while the agile nature of Scrum is highlighted, it would be beneficial to emphasize its iterative and incremental approach in managing projects.",
          "title": "Core Essence of SCRUM",
          "index_start": 102,
          "index_end": 303,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 562209802,
          "description": "The advantage of Scrum in allowing adaptation to change is well articulated. The comparison to the spiral model is correctly noted, as both are iterative but Scrum allows for changes within an activity, offering more flexibility. This is well explained with a common example.",
          "title": "Advantage of Reacting to Change",
          "index_start": 305,
          "index_end": 696,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562209803,
          "description": "Structuring projects into subproblems for smaller milestones is a valid advantage of Scrum. The comparison with the spiral model is reasonably made, noting its longer time to deliver a first product. However, the explanation could be more detailed on how Scrum achieves early successes through MVPs.",
          "title": "Advantage of Structuring Projects",
          "index_start": 697,
          "index_end": 1135,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 562209804,
          "description": "The difficulty in planning the entire duration of a Scrum project due to its flexible nature is a well-pointed disadvantage. The comparison with the spiral model is apt, as the latter has fixed iterations which simplify planning. This is a clear and practical disadvantage.",
          "title": "Disadvantage of Project Planning",
          "index_start": 1136,
          "index_end": 1478,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562209805,
          "description": "The additional planning and reviewing effort required in Scrum is noted as a disadvantage. The comparison with the spiral model is correct, highlighting its single planning phase. However, the explanation could be improved by discussing why frequent meetings in Scrum add value despite being time-consuming.",
          "title": "Disadvantage of Planning and Reviewing Effort",
          "index_start": 1479,
          "index_end": 1971,
          "credits": 2.0,
          "meta": {}
        }
      ]
    },
    {
      "id": 5622301,
      "meta": {},
      "text": "Scrum is an agile software development lifecycle model that adapts well to frequent requirement changes and improves risk management by defining a better way of communication and cooperation. It is collaboratively performed by a product owner, a rum master and scrum team members and consists of multiple sprints, every of which implements a part of the product backlog created at first and produces product increments.\n\nAdvantage 1: adaptivity for changes. Frequent changes on the requirement are tolerated, because backlog items are adjusted at the beginning of every sprint. For an example of building an online shop: when the stakeholders want to give users coupons instead of direct discount at checkout, the development team only need to remove the backlog item ‚Äûgive user discount at checkout‚Äú and add a one called ‚Äûgive user coupons at checkout‚Äú. Changes in real code will then be handled in later sprints.\nThe spiral model only deals with changes between activities, while scrum handles changes within activities too.\n\nAdvantage 2: risks are better handled. Since regular communication is expected between all roles in scrum, a problem reaches everyone faster. For example, when the implementation of a backlog item ‚Äûpush notification to mobile app‚Äú encounters technical issues and isn‚Äôt possible to finish within the current sprint, the product owner will know the situation no later than the review meeting of the current sprint.\nThe spiral model only handles a fixed list of risks and isn‚Äôt able to change these during one iteration.\n\nDisadvantage 1: hard to determine the big deadline. Because all increments after every sprint are potentially shippable, it‚Äôs not easy to tell the extract end of development. For example, if the customer always add more requirements after the sprint that clears all backlog items, the scrum will never stop.\nThe spiral model also has multiple iterations and therefore has the same problem.\n\nDisadvantage 2: difficult to scale. Scrum relies on the cooperation within a typically small and close team. It doesn‚Äôt suit big projects requiring lots of roles and human resources. For example, scrum demands daily meetings which are practically impossible for large teams out of hundreds of people.\nThe spiral model uses small teams during engineering too, but is also compatible with larger teams during production stage.",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 562230101,
          "description": "Your explanation of Scrum as an agile software development lifecycle model is clear and concise. You have successfully highlighted its adaptability to frequent requirement changes and improved communication. Great job on summarizing the essence of Scrum within the word limit!",
          "title": "Core Essence of Scrum",
          "index_start": 192,
          "index_end": 419,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 562230102,
          "description": "You effectively described how Scrum adapts to frequent changes by adjusting backlog items at the beginning of each sprint. The example of the online shop is clear and relevant. The comparison to the Spiral model is accurate, highlighting Scrum's ability to handle changes within activities. Excellent work!",
          "title": "Advantage 1: Adaptivity for Changes",
          "index_start": 421,
          "index_end": 1026,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562230103,
          "description": "Your explanation of improved risk handling in Scrum due to regular communication is well-articulated. The example provided illustrates how problems are communicated quickly. The comparison to the Spiral model is correctly stated, emphasizing Scrum's dynamic risk management. Well done!",
          "title": "Advantage 2: Better Risk Handling",
          "index_start": 1028,
          "index_end": 1545,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562230104,
          "description": "You accurately identified the challenge of determining the project deadline in Scrum due to ongoing requirement changes. The example is insightful, but the comparison to the Spiral model is overly simplistic. While both models have multiple iterations, the Spiral model typically has more structured phases that can aid in deadline estimation. Consider refining the comparison for better clarity.",
          "title": "Disadvantage 1: Difficulty in Determining Deadline",
          "index_start": 1547,
          "index_end": 1936,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 562230105,
          "description": "Your discussion of scaling difficulties in Scrum is well-presented, with a clear example of the impracticality of daily meetings in large teams. The comparison to the Spiral model is valid, as it can accommodate larger teams during production. Great job on highlighting this aspect!",
          "title": "Disadvantage 2: Difficulty to Scale",
          "index_start": 1938,
          "index_end": 2362,
          "credits": 2.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 5623229,
      "meta": {},
      "text": "SCRUM ist eine Methode, um ein Produkt mit sich st√§ndig √§ndernden Anforderungen zu leiten und zu kontrollieren. Es verbessert die Vorhersagbarkeit von Erfolg und macht Risiken kontrollierbarer. Dies geschieht, indem es die Kommunikation transparenter macht und das Produkt regelm√§√üig kontrolliert wird und gegebenenfalls Anpassungen direkt vorgenommen werden k√∂nnen.\n\nVorteile:\n- Gr√∂√üere Projekte werden in kleinere Teilaufgaben geteilt, welche dann in einer vorgegeben Zeit mit vorgegeben mitteln effizient bearbeitet werden. Dies ist effizient, da sich dadurch f√ºr ein Entwicklerteam die Komplexit√§t der zu erf√ºllenden Aufgabe verringert und jeder im Team einen besseren √úberblick √ºber die Ressourcen bekommt.\n\nBeim Spiralmodell  wird die Implementierung nicht in kleinere unter Implementierungen aufgeteilt, sondern in einem abgearbeitet.\n \n- Durch das regelm√§√üige Durchf√ºhren von SRUM-Meetings verf√ºgt jeder im Team einen genauen √ºberblick √ºber den Stand des Projekt und verliert nicht den √ºberblick. So kann bsp. verhindert werden, dass mehre Teams an dem gleichen Teilproblem arbeiten ohne es zu wissen. Dies spart zus√§tzlich Ressourcen.\n\nNach jedem Zyklus wird beim Spiralmodell das Ergebnis evaluiert und die Risiken neu bewerten. Dies ist √§hnlich zur SRUM-Methode.\n\nNachteile:\n- Alle Mitglieder im Entwicklerteam m√ºssen gut miteinander Kommunizieren k√∂nnen. Dies kann ein Nachteil sein, wenn Mitglieder des Teams  bsp. Probleme damit haben Misserfolg offen zu kommunizieren, was zu einer schlechten Effektivit√§t des Teams f√ºhrt.\n\nAuch durch das Spiralmodell lassen sich diese Nachteile nicht beheben, da diese Probleme in der menschlichen Natur liegen.\n\n- Die Einf√ºhrung von SRUM in gro√üen Entwicklerteams ist anspruchsvoll, da die Qualit√§t von der Kommunikation der Mitglieder anh√§ngt. Gerade in gro√üen Gruppen ist es schwierig, dass jeder mit jedem Kommunizieren kann. Gerade wenn Entwickler in unterschiedlichen Zeitzonen arbeiten ist die Kommunikation meist schwierig. \n\nAuch das Spiralmodell kann nicht das Problem der verschiedenen Arbeitszeiten von Entwicklern l√∂sen.\n\n\n   ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5639058,
      "meta": {},
      "text": "Scrum wird benutzt um auf spontane Ver√§nderungen schnell reagieren zu k√∂nnen.\n\nVorteile:\n- viel Austausch auch w√§hrend der Implementier-Phase. (z.B. t√§gliche Meetings) \n   - Dies ist ein Vorteil, weil sich im Team besser abgesprochen werden kann.\n   - Beim Spiralmodell wenig Austausch\n- auf pl√∂tzlich aufgetretene Probleme schnell reagieren k√∂nnen (z.B. √Ñnderung der Anforderungen)\n   - Dies ist ein Vorteil, weil Probleme nicht ewig aufgeschoben werden\n   - Bei dem Spiralmodell kann man nicht mehr Schritte zur√ºck gehen\n\nNachteile:\n- viele Meetings k√∂nnen viel Zeit in Anspruch nehmen (z.B. Diskussionen √ºber Art der Implementierung)\n   - Dies ist ein Nachteil, weil Zeit sehr sehr kostbar ist.\n   - Beim Spiralmodell gibt es weniger Meetings\n- aufgrund der Frequenz der Meetings k√∂nnen nicht immer alle Personen an den Meetings teil nehmen. Anders als bei weniger und lange zuvor festgelegten Meetings (z.B. Arzttermin)\n   - Dies ist ein Nachteil, weil manchmal bestimmte Personen f√ºr eine gewisse Problemstellung ben√∂tigt werden\n   - Beim Spiralmodell gibt es weniger Meetings\n",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 5640347,
      "meta": {},
      "text": "Scrum is an empirical process control model. It works by means of iteratively creating increasingly more complex product increments. An iteration is called sprint and lasts 2-4 weeks, after which a potentially ship-able package is ready. If the deadline is still away another sprint is started.\n\nOne advantage of Scrum is the fundamental structure, which follows the divide-and-conquer principle of dividing a large and complex process into several smaller and more easily completed sprints. For example the merge sort algorithm works in a similar way. First the list is divided into smaller parts, such that the sorting of the parts becomes trivial. Then the parts are merged back together.\n\nAnother advantage is transparency. Through the daily meetings all team members are aware of the progress made by other team members. This helps with planning the next sprint and figuring out which members are productive. As an example in school projects there was always a team member who didn't do anything and ended up receiving credit where no credit was due. The teacher not being involved in the development phase wouldn't know.\n\nWhile the daily meetings can be beneficial in large groups they can become a hindrance. For example, when the daily meeting is held and everyone has to present their progress, this would take forever if the group is too big. This would end up wasting time which you never have enough of. \n\nFurthermore, it can be difficult to tell if the project is making sufficient progress in the grand scope.  Because the next sprint is planned after the last sprint completed. Therefore, someone working in management won't be able to tell , whether he can tell shareholders if the project is on track and will be completed on time.\n\nThe spiral model has the whole process planned. So it's easy to determine the progress made. Scrum doesn't plan into the future. The spiral model is linear, which means that steps are completed after each other where as in SCRUM, different teams can work on entirely different components at the same time.\n\n",
      "score": 33.3,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 564034701,
          "description": "Your explanation of the core essence of SCRUM is accurate and concise. You have effectively described the empirical process control model and the iterative nature of sprints, which are key elements of SCRUM.",
          "title": "Core Essence of SCRUM",
          "index_start": 238,
          "index_end": 294,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 564034702,
          "description": "You successfully highlight the divide-and-conquer principle as an advantage of SCRUM, comparing it to the merge sort algorithm. However, the comparison to the Spiral Model is missing. Consider explaining how SCRUM's division into sprints contrasts with the Spiral Model's approach to handling large projects.",
          "title": "Advantage: Divide-and-Conquer",
          "index_start": 296,
          "index_end": 691,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 564034703,
          "description": "The advantage of transparency through daily meetings is well articulated. You provide a relatable example from school projects. However, the comparison to the Spiral Model is not included. You might want to compare how transparency in SCRUM contrasts with the communication structure in the Spiral Model.",
          "title": "Advantage: Transparency",
          "index_start": 693,
          "index_end": 1126,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 564034704,
          "description": "You correctly identify the potential disadvantage of daily meetings in large groups. However, the comparison to the Spiral Model is absent. Consider discussing how daily meetings might be less of an issue in the Spiral Model due to different team dynamics.",
          "title": "Disadvantage: Daily Meetings",
          "index_start": 1128,
          "index_end": 1415,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 564034705,
          "description": "Your explanation of the difficulty in tracking progress due to the iterative nature of SCRUM is clear. You provide a strong comparison to the Spiral Model, which plans the entire process, making progress easier to determine. This provides a solid contrast between the two models.",
          "title": "Disadvantage: Progress Tracking",
          "index_start": 1418,
          "index_end": 1878,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 564034706,
          "description": "Your comparison of the linear nature of the Spiral Model to SCRUM's flexible team workflow is insightful. It highlights a fundamental difference in how tasks are managed in each model. This is well explained.",
          "title": "Comparison: Team Workflow",
          "index_start": 1879,
          "index_end": 2055,
          "credits": 2.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 5644634,
      "meta": {},
      "text": "The essence of scrum is that it is a heuristic approach to software engineering, acknowledging the existence of unpredictability in its process. Instead of having one linear formalized flow, its first of all adaptable to the specific teams and secondly agile and empirical by nature: deviations from the plan are already foreseen and can be addressed in the framework of Scrum.\n\nAn advantage of Scrum is that each team member is aware of the progress of the whole project  - all tasks and who works on what are transparent. This is due to Scrum's daily meetings which help communication.\nFor example, a team working on the EIST project: Paul is working on adding endpoints for getting all restaurants while Leon is working on doing the frontend. During the daily meeting, they update each other about their progress.\nIn the spiral model, this is not given as there are no meetings and active information exchange.\n\nAnother advantage is that large projects are divided into smaller sprints which more easy manageable. For example, the team has decided in the weekly sprint planning that it wants to finish reserving by next week. This makes tracking progress and seeing faster results delivered easier.\nIn the spiral model, the iterations split the project into smaller tasks as well.\n\nA disadvantage of Scrum is that adopting it in bigger teams is hard. Given a large team, the daily meeting as well as the other meetings could take a long time and each team member isn't as focused on what the other ones have to say. If the EIST project would have 50 members, each meeting, even the daily ones, could easily take a few hours.\nIn the spiral model, there are no daily meetings so the time constraints don't apply.\n\nAnother disadvantage is that in Scrum are that the daily meetings themselves can frustrate and annoy team members. Having to meet every day, Leon feels like he's wasting his time with a meeting instead of working on the project itself in the same time.\nIn the spiral model, there are no meetings so that's no problem there.\n",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 564463401,
          "description": "The student has provided a clear and concise explanation of the core essence of Scrum, highlighting its heuristic approach, adaptability, and empirical nature. This is a strong explanation that captures the essence of Scrum well.",
          "title": "Core Essence of Scrum",
          "index_start": 145,
          "index_end": 377,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 564463402,
          "description": "The student correctly identifies transparency and communication as an advantage of Scrum, supported by the example of daily meetings. This is well explained and correctly compared to the spiral model where such meetings are not present.",
          "title": "Advantage - Transparency and Communication",
          "index_start": 379,
          "index_end": 913,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 564463403,
          "description": "The student identifies manageable sprints as an advantage of Scrum, supported by the example of weekly sprint planning. However, the comparison to the spiral model is weak since spiral iterations also divide projects into smaller tasks. Consider strengthening the comparison by explaining how sprints in Scrum might lead to quicker visible results compared to spiral iterations.",
          "title": "Advantage - Manageable Sprints",
          "index_start": 915,
          "index_end": 1283,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 564463404,
          "description": "The student correctly points out that Scrum meetings can be challenging in larger teams, supported by an example. This is well explained and correctly compared to the spiral model which doesn't have daily meetings and thus avoids this issue.",
          "title": "Disadvantage - Large Team Meetings",
          "index_start": 1285,
          "index_end": 1713,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 564463405,
          "description": "The student identifies the potential frustration of frequent meetings as a disadvantage of Scrum, supported by an example. The comparison to the spiral model is correct as it lacks such meetings. However, consider explaining how the frequent meetings might affect productivity more specifically.",
          "title": "Disadvantage - Meeting Frustration",
          "index_start": 1715,
          "index_end": 2038,
          "credits": 2.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 5644820,
      "meta": {},
      "text": "core essence: \nScrum as an example of agile project management method is used for dealing with challenges (for example, ill-defined requirements, requirements changes, software architecture changes, etc.) by focusing on small product increments that are developed in short time bursts.\n\n2 advantages of Scrum:\n- deals better with frequent changes\n- makes process of project management to plan and make decisions more repeatable and predictable.\n\n2 disadvantages of Scrum:\n- because some activities and actions of Scrum can be executed at same time, the final results of each activities or actions may not be applicable to each other.\n- too frequent meetings during Scrum may waste time and resources.",
      "score": 16.7,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 564482001,
          "description": "Your explanation of the core essence of Scrum is clear and concise, capturing the agile nature of Scrum and its focus on small product increments. However, it could be more focused on the iterative and collaborative aspects, as these are key to understanding Scrum's approach. Consider emphasizing the iterative cycles and collaborative team efforts.",
          "title": "Core Essence Description",
          "index_start": 205,
          "index_end": 285,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 564482002,
          "description": "Your mention of Scrum's ability to handle frequent changes is a valid advantage. However, it would be beneficial to provide a comparison to the Spiral Model, such as how Scrum's iterative sprints allow for more flexibility than the Spiral Model's planned iterations.",
          "title": "Advantage: Handling Frequent Changes",
          "index_start": 310,
          "index_end": 346,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 564482003,
          "description": "While Scrum can make project management more predictable and repeatable, this point needs further explanation. It would be helpful to compare how Scrum's structured ceremonies contrast with the Spiral Model's risk-driven approach, which can sometimes lead to unpredictability.",
          "title": "Advantage: Predictability and Repeatability",
          "index_start": 347,
          "index_end": 444,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 564482004,
          "description": "Your point about concurrent activities in Scrum leading to incompatible results is interesting but lacks clarity. Providing examples or scenarios would strengthen this point. Additionally, comparing this to the Spiral Model would provide context on how the Spiral Model might mitigate such issues by focusing on risk assessment before proceeding.",
          "title": "Disadvantage: Concurrent Activities",
          "index_start": 472,
          "index_end": 633,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 564482005,
          "description": "Your observation about frequent meetings wasting resources is valid. However, it would be beneficial to contrast this with the Spiral Model, which might have fewer meetings due to its longer iterations but could result in less frequent feedback.",
          "title": "Disadvantage: Frequent Meetings",
          "index_start": 634,
          "index_end": 700,
          "credits": 1.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 5644946,
      "meta": {},
      "text": "SCRUM is a method that actively deals with changes and participates it during the development. If actually welcomes changes as potential advantage.\nAll desired requirements, functions and features of the new product are specified in the product backlog (which can change all the time, e.g. if the customer decides for a new feature or to use a different hardware). Form this we select a few items in the sprint backlog (which cannot change after selection anymore) and process them in the next sprint. There are 2 kinds of sprints (major sprint 2-4week and daily sprints). After each sprint we have a sprint review and a potentially shippable product increment. We therefore build the product step by step with this little increments which makes us very flexible and we can actively adopt for changes during the process. Communication is improved because there are regular meetings and everyone has a special role (product owner, scrum master, scrum team members) that help to make sure every aspect and perspective is assessed. e.g. the product owner has the perspective of the customer and might see bottlenecks in the customers system faster than other team members that are focused on other aspects of the project. SCRUM therefore helps to improve risk management (by early realization of risk factors and flexibility to attack these), communication and cooperation. e.g. if a method is not feasible or performed not good enough this could show up early in the process and developers can attack these issues in the next sprint. In a spiral model is could happen that these problems are not discovered for a long time (because they come at the end of the spiral) and changes are then not easily possible anymore within the available resources.\nThe sprial model might have the disadvantage that the customer does not regularly participate in the process and cannot give feedback. SCRUM therefore helps because every product increment can be shown to the customer and changes of the product backlog are welcome. E.g. if the customers frequently changes his mind it is not a big problem for SCRUM to adapt.\n\nSCRUM has all advantages of the Spiral model because in every major sprint you go throw all development activities (like in the spiral). Furthermore, SCRUM enables the developers to go back more easily and flexible and therefore welcome changes, which might not be so easy (if possible at all) in the spiral. In this sense the SCRUM model is a natural next stage in software development.",
      "score": 50,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 564494601,
          "description": "The explanation of the core essence of SCRUM is somewhat unclear. Sentence 0 mentions dealing with changes but lacks clarity on SCRUM's emphasis on iterative development and teamwork. Consider providing a clearer and concise definition, such as: 'SCRUM is an agile framework that focuses on iterative progress through regular feedback and collaboration, allowing for flexibility and adaptation to change.'",
          "title": "Core Essence of SCRUM",
          "index_start": 0,
          "index_end": 94,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 564494602,
          "description": "The advantage of flexibility and active adaptation to changes is well-explained in sentences 1-7. You provided examples of how SCRUM handles changes, such as product backlog updates and sprint reviews. The comparison to the spiral model is valid but could be more precise by highlighting that the spiral model involves progressive refinement but may not adapt as quickly to change requests.",
          "title": "Advantage: Flexibility and Adaptation",
          "index_start": 95,
          "index_end": 820,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 564494603,
          "description": "The submission effectively describes improved communication and risk management as advantages of SCRUM in sentences 8-13. You provide examples of roles like product owner and how SCRUM meetings facilitate these advantages. The comparison with the spiral model is present, noting the delayed discovery of problems in the spiral model. This provides a solid contrast.",
          "title": "Advantage: Improved Communication and Risk Management",
          "index_start": 821,
          "index_end": 1746,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 564494604,
          "description": "The disadvantage relating to frequent changes by the customer is mentioned in sentences 15-18, suggesting that SCRUM handles this well compared to the spiral model, where customer feedback is less frequent. However, the submission lacks depth in explaining why frequent changes might be a challenge for SCRUM, such as potential scope creep or resource strain.",
          "title": "Disadvantage: Frequent Changes by Customer",
          "index_start": 1747,
          "index_end": 2106,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 564494605,
          "description": "The complexity of managing the product backlog in SCRUM is not explicitly discussed as a disadvantage, which could be improved by mentioning potential issues like prioritization conflicts or overwhelming backlog items. The spiral model avoids this by having more structured phases, which could be compared here.",
          "title": "Disadvantage: Complexity in Backlog Management",
          "index_start": 148,
          "index_end": 364,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 564494606,
          "description": "The comparison between SCRUM and the spiral model is mentioned throughout but lacks depth in some areas. For instance, sentence 20 states SCRUM is more flexible without explaining why the spiral model might not be able to facilitate such flexibility. Consider improving the comparison by highlighting specific elements of the spiral model that are less adaptive to change.",
          "title": "Comparison to Spiral Model",
          "index_start": 2108,
          "index_end": 2416,
          "credits": 1.0,
          "meta": {}
        }
      ]
    },
    {
      "id": 5645019,
      "meta": {},
      "text": "At its core, scrum is a framework which structures a work method for the development of software products. It's composed of the scrum team, which holds short and efficient daily meetings based upon a sprint backlog which contains the features that need to be implemented in the upcoming work sprint. After the work has been completed, the scrum team comes together again for a sprint review, where the members explain what they've accomplished in search for feedback, as well as a sprint retrospective, during which the team reflect upon their own work in order to ameliorate or solve issues. Then the process starts anew. \nThis carries some obvious advantages. It provides stakeholders i.e. the people financing the development, a clear and concise up-to-date evolution of the product, thanks to the daily meetings. The daily sprint reviews also permits the integration of feedback directly into the development. For example, as a shareholder, you can see what the newest functioning features are and test then out for yourself. Compared to this, the spiral model has no defined meetups.\nAnother big advantage is that it almost guarantees an effective use of resources, namely time and money. Indeed, as the entire team keeps track of what is done every day, the misallocation of resources can be reduced upon identification. An example for this could be the renting of a server for testing purposes. If the programmers notice during the meetings that they don't use it enough to justify costs, they can cancel it and save funds. Our previous model doesn't have this, because there isn't any clear method of gaining an overview of the progress made by the team.\nHowever, the method doesn't only carry positives. For example, due to the rapid development nature of the product, guaranteeing quality isn't a very easy task. Indeed, more emphasis will be placed solely on the implementation of features. In developing a UI for example, it might perhaps function on test devices but not appear properly on all. In this regard, our previous model has a clear testing phase.\nOne last disadvantage is that Scrum is highly dependent on its members to stay focused on the work for the entirety of the project. For example, if one programmer isn't focused on his part, the entirety will suffer because of the lack of implementation. The spiral model once again doesn't have this concept of a daily feedback loop where tasks are assigned and therefore isn't as impacted. \nThank you for listening!",
      "score": 72.9,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 564501901,
          "description": "The core essence of Scrum is well-explained in sentences 0 to 3, capturing the iterative nature and focus on teamwork and feedback. However, consider emphasizing the adaptability and incremental progress which are key characteristics of Scrum.",
          "title": "Core Essence of Scrum",
          "index_start": 593,
          "index_end": 622,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 564501902,
          "description": "You correctly identify stakeholder visibility as an advantage of Scrum due to regular updates and feedback. However, the comparison with the spiral model lacks clarity. It would be helpful to mention that while the spiral model offers updates at the end of each iteration, Scrum provides more frequent insights, enhancing stakeholder engagement.",
          "title": "Advantage: Stakeholder Visibility",
          "index_start": 624,
          "index_end": 1088,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 564501903,
          "description": "The explanation of resource efficiency in Scrum is clear, particularly with the example of server rental. However, the comparison to the spiral model needs refinement. Highlight how Scrum's daily meetings offer quicker identification of resource misallocation compared to the longer cycles of the spiral model.",
          "title": "Advantage: Resource Efficiency",
          "index_start": 1089,
          "index_end": 1662,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 564501904,
          "description": "The disadvantage regarding quality assurance in Scrum is well-stated, particularly in rapid development environments. The comparison with the spiral model's structured testing phase is accurate. Consider elaborating on how the spiral model's emphasis on planning and risk assessment supports thorough testing.",
          "title": "Disadvantage: Quality Assurance",
          "index_start": 1663,
          "index_end": 2069,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 564501905,
          "description": "The dependency on team focus in Scrum is correctly identified as a disadvantage. The comparison with the spiral model is spot on, as the spiral model's less frequent meetings mean less dependency on continuous focus. Enhance this section by discussing how Scrum's reliance on team dynamics can be mitigated with strong leadership and clear task delegation.",
          "title": "Disadvantage: Dependency on Team Focus",
          "index_start": 2070,
          "index_end": 2460,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 564501906,
          "description": "The submission is within the 350-word limit, which is excellent for ensuring clarity and conciseness in communicating ideas.",
          "title": "Word Count Compliance",
          "index_start": 2462,
          "index_end": 2486,
          "credits": 0.0,
          "meta": {}
        }
      ]
    },
    {
      "id": 5621608,
      "meta": {},
      "text": "Scrum is an agile model based on small teams which can deal with changing requirements in e.g. daily sprint meetings. After defining the functional requirements in the product backlog, the team members have several sprints (lasting 2-4 weeks) in which some requirements are implemented, resulting in a potentially shippable product after each sprint.\n\nAdvantages:\nThere is a risk reduction since information is shared early and problems can be fixed immediately in daily sprint meetings. For example when developing a restaurant website, one team member who implements the user interface needs the database to include the menu for the restaurant, which is does not currently. This problem can be resolved very quickly through communication in a daily meeting.\nIn the spiral model change can only occur between activities and not as frequently.\n\nScrum integrates the product vertically since the team has a potentially shippable product after each sprint. This leads to reduced risk, since the communication between layers (user interface, middleware, database) is not implemented last like in the spiral model. This can lead to problems in late development phases resulting in having to reimplement big parts again to ensure the correct communication.\nFor example when developing a restaurant website in the first sprint, the database only includes the location and name, and the communication to the middleware and database works. It is easy to also include the menu in the database with low risk of unfunctional communication.\n\nDisadvantages:\nScrum may need restructuring since scrum is based on small teams. For example when the team of our firm consists of 30 developers there has to be a large restructuring. The spiral model can be used for a large amount of developers.\n\nScrum is not ideal when the firm needs the product to be implemented by a hard deadline, since it always produces only a potentially shippable product. For example when the product owner needs the product in 6 weeks (3 sprints) the product after 3 weeks might not include all functional requirements. This can also be said for the spiral model, however the spiral model does not necessarily have a potentially shippable product after 6 weeks.",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 562160801,
          "description": "You have provided a concise explanation of the core essence of Scrum, highlighting its agile nature and focus on small teams and changing requirements. This is well-articulated, but you could improve by emphasizing the iterative process and the role of the product backlog in guiding the team's efforts.",
          "title": "Core Essence of Scrum",
          "index_start": 95,
          "index_end": 117,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 562160802,
          "description": "The advantage of risk reduction through early sharing of information and problem-solving in daily sprint meetings is well-explained. Your example illustrates this benefit effectively. The comparison with the spiral model is relevant, but you could strengthen it by explaining how Scrum's frequent iterations specifically enhance risk management compared to the spiral model's longer cycles.",
          "title": "Advantage: Risk Reduction",
          "index_start": 364,
          "index_end": 843,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 562160803,
          "description": "You've successfully highlighted the vertical integration advantage, with a clear comparison to the spiral model. Your example is appropriate, demonstrating how Scrum's iterative approach helps reduce risks associated with late-phase communication issues. Consider explaining how this iterative integration can lead to a more cohesive final product.",
          "title": "Advantage: Vertical Integration",
          "index_start": 845,
          "index_end": 1528,
          "credits": 2.5,
          "meta": {}
        },
        {
          "id": 562160804,
          "description": "The disadvantage related to the need for restructuring in larger teams is clearly stated. You provide a suitable example to illustrate this point. The comparison with the spiral model is accurate; however, you could enhance your analysis by discussing how Scrum's team structure impacts scalability compared to the spiral model.",
          "title": "Disadvantage: Need for Restructuring",
          "index_start": 1545,
          "index_end": 1776,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 562160805,
          "description": "You've identified a valid disadvantage of Scrum regarding deadlines and potentially shippable products. Your comparison with the spiral model is acknowledged, but it would benefit from more detail on how each model manages deadlines and deliverables differently. Expand on the implications of Scrum's iterative delivery on project timelines.",
          "title": "Disadvantage: Potentially Shippable Product",
          "index_start": 1778,
          "index_end": 2220,
          "credits": 2.0,
          "meta": {}
        }
      ]
    },
    {
      "id": 5621680,
      "meta": {},
      "text": "Within project management, SCRUM is an agile model for software development and thus lays emphasis on customer collaboration and responding to change. This responsiveness is partly achieved by partitioning the entire project into sprints of constant durations, in which a potentially shippable product increment is developed. The empirical reflection/learning from previous sprints is actively encouraged.\n\n\nAs SCRUM doesn't follow a static plan that is known beforehand, a considerable amount of time has to be invested in planning and structuring.\nFor example, the time used for sprint planning meetings and daily scrum meetings in a game development project could be used for the programming of the physics, rendering and so on.\nThis planning/structuring \"overhead\" is also present in the Spiral Model in the form of evaluating the results of the iteration and planning the next iteration, which is one of the 4 major activities of that model.\n\nTo make matters worse, using SCRUM makes future planning more difficult for management as it is less predictable than conventional (e.g., linear) models for software development. This might lead to missing customer deadlines and to overall less trackable progress.\nFor example, a process like \"system design\" cannot be marked as finished once it has been dealt with, because the iterative nature of SCRUM intends that it will be revised/extended multiple times.\nBecause the Spiral Model is considered an iterative model, it obviously has the same problem.\n\n\nOn the other hand, software developed with SCRUM is more likely to actually work in the end, because development and testing activities are done in parallel and the system isn't just tested at the end.\nE.g., if the entire system is only tested at the end, a misunderstanding during the requirements elicitation could have a drastic impact on the resulting software.\nBecause testing is also done incrementally in the spiral model, the same holds true.\n\nOn top of that, as an agile model, SCRUM can deal with very frequent changes in the environment and customer expectations.\nE.g., if the customer changes his mind about the user interface, this can easily be added to the next sprint backlog and be implemented.\nThe Spiral model can also deal with changes, but only between - and not within - activities.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622201,
      "meta": {},
      "text": "SCRUM ist ein agiles Softwareentwicklungskonzept, welches aus einzelnen Programmier-/Arbeitsphasen(Sprints) besteht, die immer in ein ablieferbares Produkt resultieren. Dabei werden in diesen Sprints t√§gliche Meetings abgehalten, um den Fortschritt zu besprechen und falls n√∂tig das weitere Vorgehen zu ver√§ndern. Am Ende eines Sprints wird ein Review Meeting abgehalten, um zu besprechen was gut/schlecht im letzten Sprint lief, sowie festzustellen was im n√§chsten Sprint ansteht, falls nicht schon alle gew√ºnschten Features implementiert wurden.\n\nVorteile:\n1. Bei SCRUM k√∂nnen Fehler schnell erkannt und behoben werden, da viel review in Form von Meetings stattfindet. So kann zum Beispiel ein Fehler in der Abstimmung zwischen Frontend und Backend schnell gefunden werden, da sich t√§glich das ganze Team trifft und solche Dinge schnell kommuniziert. Beim spiral Modell wird zwar nach Fehlern gesucht durch Testing, etc. aber ab einem gewissen Zeitpunkt ist keine Anpassung bei Fehlern mehr m√∂glich.\n2. Jeder arbeitet bei SCRUM bestm√∂glich mit, da jeder in den daily scrum meetings mit einbezogen wird und somit jeder kreative/neue Vorschl√§ge bringen kann. So kann zum Beispiel ein Praktikant genauso eingebunden werden wie ein normaler Mitarbeiter, da er bei allen Prozessen mitreden darf und seine Ideen geh√∂rt werden. Bei spiral liegt kein Fokus auf das aktive Einbinden jedes Teammitgliedes, da dies nicht spezifiziert wird.\n\nNachteile:\n1. SCRUM funktioniert am besten mit kleinen Teams, da Meetings mit vielen Leuten nicht/schwer m√∂glich sind, da jeder aktiv einbezogen wird. Dies ist auch in der letzten Tutor√ºbung aufgefallen, dort haben wir unser 6er Team in zwei 3er Teams aufgeteilt, da dies den Arbeitsprozess verbessert hat. Bei spiral gibt es keine Limitierungen bzgl. der Teamgr√∂√üe, aber es ist nat√ºrlich auch einfacher mit kleineren Gruppen.\n2. SCRUM ist nicht related zur deadline, da hier das Liefern eines fertigen Produkts nach einem Sprint im Fokus steht und keine deadline dies begrenzen sollte. So kann zum Beispiel eine feste Zeitbegrenzung dazu f√ºhren, dass die Vorteile von Scrum verloren gehen, da ein Sprint verk√ºrzt oder abgebrochen werden m√ºsste. Bei spiral ist ein Arbeiten mit deadline gut m√∂glich, da es eine feste Anzahl an Iterationen gibt und man daher den Zeitaufwand planen kann.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622723,
      "meta": {},
      "text": "SCRUM is an agile incremental model and consists of first a project kickoff meeting where you decide on a product backlog, a list of functional requirements that have to be met at the end. Then the iterated part starts: the sprint which is held for 2-4 weeks, works on a sprint backlog that is a part of the project backlog and has a meeting before the sprint daily meetings during the sprint and a review meeting afterwards in which you can rethink the project backlog and give feedback about the past sprint. SCRUM focuses on constant interaction between the developers and also with the client to be able to adapt quickly to change in the enviroment.\nAdvantages of SCRUM are first: The ability to adapt to change because nothing in this model is at any point set in stone and can be overturned to handle often occuring change. The second advantage it can also of course handle change if it occurs rarely or even if it doesnt occur at all because that way SCRUM just becomes a simple incremental process. One disadvantage of SCRUM is that it doesnt have a timeline and thus you cannot tell your customer a definate date on which the project will be finished. Another disadvantage is that the developers are working very independent from their boss which can lead to a lack of synchronisation of the teams if the boss has not enough insight in the seperate developer groups.\nAll of these advantages and disadvantages also apply to the spiral model except for the key advantage of SCRUM over the spiral model: the frequency in which the model can adapt to change. While the spiral model is able to adapt to change between activities, SCRUM is also able to adapt to change whithin an activity. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622998,
      "meta": {},
      "text": "the essence of scrum is, having little so called \"Sprints\" witch are working periods witch should lead to a potentially shippebale product increment. between those sprints the team meets for meetings discussing the previous sprint and the upcoming sprint, every day the teem meets for a \"daily Scrum\" discussing probblems that came up etc.\n\none disadvantage of scrum is, it is not beginner friedly. if a company wants to implement scrum into their workflow, all the developers, who have never worked with scrum, have to be specially trained for working with scrum. the spriral model also has this issue.\n\nanother disatvantage is, that it is not easy to integrate into a more classic project management aproach. the high agility also comes with a downside, the project is less easy to plan out witch make it hard for e.g. state institutes to work with. the spiral model is also hard to integrate in a classic project management approach, but its a little bit easyer than scrum.\n\nan advantage of scrum is, the high agility and flexibiliti, to state the obvious scrum helps the development team to tackle unforseen changes. e.g. the customer changes his mind about a certain topic and wants to change something in the product, with a scrum approach that isnt that hard. the spiral model is not as flexible as scrum but is also more flexible than other working models.\n\nthe last advantage im covering today is, that issues while programming can be adressed to the team time eficcient and every day. the daily scrum gives the developers a timeframe in wich to discuss issues that came up with their coleauges, e.g. if an inexperienced developer is stuck on a task he cen ask the more trained devs for help. the spiral model offers no such posibility.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623062,
      "meta": {},
      "text": "The core essence of SCRUM is the improved reaction to changes through agile processes and better risk management by improving communication and delivering product increments. In the SCRUm model, every sprint delivers a potentially shippable product increment, after which a sprint retrospective occurs to review and improve the cooperation inside the developer team.\n\nThe SCRUM model has clear advantages: larger projects are divided into smaller and manageable sprints with a better overview, producing product increments and the final product will be produced step by step (e.g. implementing the required functionalities step by step in app-development). Plus, as the large project is divided into short sprints, producing product increments, a better reaction to changes of development is easier through feedback after each sprint (e.g. if the product owner doesn't like the visual interface of the product increment and wants another one, this can be easily adapted in the next sprint).\n\nHowever, its disadvantages might be: daily scrums (meetings) might frustrate team members as you might feel more pressured to produce outcome daily and show it to others (e.g. if you weren't productive enough one day, it might be embarrassing to show the insufficient result to others). Also, this scrum framework can only work successfully if the team members are experienced with the scrum model (e.g. if the team is used to working through an end output without producing product increments in short terms, there could be some problems realizing this type of development model).\n\nThe spiral model is an iterative development, in which every interation consists of the 4 activities (determining objectives, alternatives, and constraints; evaluating alternatives, identifying and resolving risks; developing and verifying prototype; planning next iteration). A typical duration of an iteration in this model is between 6 months and 2 years, after which a prototype of the product will be produced. The SCRUM, on the other hand, has much shorter iterations / sprints (mostly 2 to 4 weeks), after which a product increment (not a prototype) will be produced, which is high quality code that is expanded into the final product.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644246,
      "meta": {},
      "text": "Essentially, SCRUM is a dynamic model for software engineering: At the beginning the members of the team meet and set up a product backlog, which is basically a list of certain tasks that the group has to complete in order to fulfill the requirements for the demanded product. The whole project is split up into multiple sprints (periods of working time) whereas each sprint has their own backlog meaning a certain amount of tasks must be completed during one sprint and therefore resulting in a product increment. In between the sprints there are so called sprint meetings ensuring that all the tasks of the previous sprint have been sufficiently performed as well as planning the backlog for the next sprint.\n\nThe concept of SCRUM is useful as problems during certain phases of the project can be detected relatively fast minimizing the amount of mistakes. For instance when other team members look at the work of one member, they can check if everything is fine or whether there needs to be some improvement, thus the members can help each other by comparing their performed work. In contrast, when using the Spiral model, it is not really possible to make changes of previous work (if there needs to be some improvement) as it is an iterative model and therefore it might even terminate as a certain risk could not be resolved.\n\nAnother advantage of SCRUM is the high amount of communication and interaction within the group (based on the frequent amount of sprint meetings) leading to better results, because team members can discuss and evaluate together in which way they want to proceed. For example once the team members communicate a lot the work can be coordinated well to prevent that some people do the same tasks without knowing that the other one does it as well. The Spiral model also provides time for members to clarify objectives, etc. after each iteration.\n\nHowever, SCRUM is not benificial regarding big teams of software engineers. It is obviously way more difficult to e.g. do daily sprint meetings with a group of many people as the meetings would take lots of time and it's certainly possible that some members might not even get the chance to communicate with the others and the distribution/coordination among the team members is difficult. Whereas the Spiral model might be better in this case as work can be distributed in a better way and risks are identified at the beginning of an iteration, which is very useful.\n \nAs SCRUM always aims to deal with change, this might sometimes be problematic because e.g. major parts of a project might have to be adapted in the future leading to high development costs of a project. On the other hand side if a certain risk could not be resolved in the Spiral model the project terminates and there are no further costs.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644280,
      "meta": {},
      "text": "Scrum is a work strategy that aims to adapt the development of a software system to changes in requirements and work environment. It achieves this by dividing the project into smaller increments that the developers complete in so called sprints. These sprints include short daily meetings in which the goals and progress of the sprint are discussed. The main benifit of Scrum is dynamic approach to system design. The greater structure of the system naturally manifests with each sprint. This enables developers to make broad changes in early sprints without having to worry about redesigning every aspect of the system. The spiral model is a lot more rigid by comparison, requiring much larger elements of the system to be completed in each phase. Another advantage of this flexibility comes with the fact that a project developed with the Scrum method can potentially be finished much sooner if the customer is already satisfied with the product after just a few sprints. This saves cost as well as freeing the developers up to work on the next project sooner.  The phases of the spiral model take longer by comparison, as the finished prototype of each phase contains a fully realized project. However, this dynamic approach in Scrum can also be a detriment. In very large projects it becomes easy to lose sight of the scope of the project, leading to feature creep and potentially balooning development time. The spiral model doesn't run into this problem as each phase deals with an entire subsystem. This leads to more focused development with a clear deadline. Besides large projects Scrum also struggles to work efficiently in large development teams. The development team is divided into small teams for their sprints, each team having one scrum master. With bigger numbers it becomes increasingly difficult to properly communicate between teams. AS the spiral model doesn't include Sprints or daily Scrum meetings it doesn't run into this problem.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644424,
      "meta": {},
      "text": "What is SCRUM? In essence, it is a technique used to deal which and control change in software development. Because of good communication with the customer and continues delivery of product increments, risk is minized.\nA huge advantage of scrum is dealing with change. By working in small increments, which produce a shippable product, the state of the product and where it's headed to is clear. A common example would be the customer requesting a large video on the frontpage, but upon seeing the first version, he realizes it doesn't fit at all and wants a simple text instead. The customer can see what is happening, and provide immediate feedback, without loosing too much work.\nAnother advantage of scrum is the constant monitoring of remaining tasks. The scrum master can see how much tasks are left, and if it is moving along according the time plan, and if not, make quick adjustments. Often, developers hear in a daily scrum that others are having problem and can directly help them if they know the solution. Knowing a vacation is coming up, developers can easily grap fewer tasks for the sprint.\nA disadvantage of scrum is being limited to smaller teams. Besides trying things like scrum of scrums, generally bigger teams don't work in scrum, since there would be too much too individually coordinate. A common example are the daily scrums, where a lot of developers would lead to long daily scrums, which are not the point of the meetings.\nNevertheless, the biggest disadvantage of scrum is the amount of meetings. Besides being annoying, commonly having at least three big meetings each month wastes a lot of time that could be spent actually working.\nIn comparison, while the spiral model is iterative, it is not as flexible with change as scrum. Generally having a detailed plan of tasks, the spiral model is always clear in what to do next and is not limited to smaller teams. Having no fixed amount of meetings, it can be more pleasent for developers.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5619607,
      "meta": {},
      "text": "The core essence of scrum is the continuous improvement of a product through rules, separate roles and teamwork. Each iteration and incrementation approach must be discussed openly and transparently with the team during certain events and focusing on essentials of the artifacts and make decision what is observed through each incrementation.\n\nStarting with the advantages. Scrum can help teams complete sofware products be delivered quickly and efficiently. For example in the healthcare sector your project can be urgent or complex and needs quick deliverables. During the pandemic a cronoa app need to be delivered quickly to prevent the spread of viruses. Here scrum can be applied. Moreover, scrum is an agile process and can adopt feedback from customers and stakeholders. For example a game should be developed with the scrum methodology, during each sprint the most important features will be build first and come out with a potentially deliverable product and between sprints more features can be built into the product based on feedbacks from stakeholders and customers.\n\nTo the disadvantages. It requires experienced personnel. Everyone involved needs to have experience and skills to quickly and successfully perform their own tasks. Everyone on the team needs to be able to execute and provide feedback on the results and overall process. For example not every company can apply scrum if it do not have the right team because it can have a huge negative impact on the project if one member is not that skilled like the others. Futhermore, scrum does not bother about the project deadline. Scrum ensures every team members meets their expectations and uses personal deadlines to create a certain amount of work. However, it does not take the project deadline into account, which can delay the work. For example, if everyone postpone their own deadline the project will not be finished at the expected time.\n\nComparing the methodology both have pro and cons based on what project you applied it for. With scrum project can be delivered quickly however scrum lacks the risk management, but the spiral model contains a risk resolving phase. Therefore sprial model should be applied for long projects that has high risks. Another point to be mentioned, using the scrum methodology everyday and after each iteration you review and adjust your plan for better delivery, while using the spiral model you move on after each phase and you do not have the chance to improve what you have done, also it does not allow to change requirements after the development process starts.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621484,
      "meta": {},
      "text": "SCRUM ist ein Framework f√ºr und agiles Projektmanagement, das flexible und schnelle Reaktion auf ver√§nderte Anforderungen erm√∂glicht. \n\nTeams arbeiten empirisch (erfahrungsbasiert), inkrementell (in kleinen Schritten) und iterativ (wiederholend) durch Einteilung der Projektlaufzeit in sogenannte Sprints, die bestehen aus: Sprint Planning, Daily Scrums um Teamarbeit zu synchronisieren, Sprint Review und Sprint Retrospective. Am Ende eines Sprints wird dem Auftraggeber ein funktionsf√§higes Produkt vorgestellt und Feedback von ihm erhalten. \n\nSCRUM hat seine wesentliche Vorteile:\n\n+ SCRUM sorgt f√ºr kontinuierliches Feedback und dadurch h√∂here Kundenzufriedenheit. \n\tNach jedem Sprint trifft sich das Team mit dem Produkt Owner, zeigt funktionsf√§higes Produkt und bekommt direkt Feedback dar√ºber, was verbessert werden soll. \nSpiral model bietet auch gute M√∂glichkeiten f√ºr Kunden die Entwicklung des Produkts in allen Phasen zu beobachten und in Evaluation Phase Feedback zu geben.\n\n+ Alle Ergebnisse werden regelm√§√üig √ºberpr√ºft. So werden m√∂gliche Probleme direkt erkannt und gel√∂st, damit das n√§chste Sprint-Ziel erreicht werden kann.\n\tW√§hrend jedes Sprints in den Daily Meetings werden m√∂gliche Probleme diskutiert und L√∂sungen gefunden. Am Ende des Sprints hilft Retrospective nochmals die entstandenen Schwierigkeiten zu erleuchten.\nSpiral model erm√∂glicht ebenso guten Umgang mit Risiken, indem in jeder Phase Risikoanalyse und viel Testing durchgef√ºhrt wird. \n\nSCRUM hat aber auch Nachteile:\n\n- Skalierung is schwer. SCRUM in Gro√üprojekten bedeutet viel Koordinierung und erfahrene Teammitglieder.\n\tEin Gro√üprojekt mit vielen Teams verlangt mehr Meetings nicht nur innerhalb des Teams sonder auch von  verschiedenen Teams, d.h es wird immer schwerer ohne strickte Dokumentation die Zusammenarbeit einzusch√§tzen und zu koordinieren. \nSpiral model andererseits ist nur in Gro√üprojekten umsetzbar, da die Entwicklung teuer wird und viel Dokumentation verlangt. \n\n- Oft f√ºhrt SCRUM zum \"Scope creep\", wenn die SCRUM Regeln nicht beachtet werden. Scope Creep liegt dann vor, wenn das Projekt umfangreicher als geplant umgesetzt wird. Er beginnt mit kleinen √Ñnderungen, die zu tiefgreifenden Gr√∂√üenordnungen anwachsen k√∂nnen.\n\tIn jedem Sprint Review tauchen neue Anforderungen auf, die aber fr√ºher nicht genannt wurden, dadurch entsteht mehr Arbeit und das Ende des Projekts wird verschoben.\nSpiral model sorgt f√ºr realistische Projektsch√§tzungen in Bezug auf Zeitplan, Kosten usw. und reduziert dadurch das Risiko von \"Scope creep\", schlie√üt es aber nicht komplett aus.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621969,
      "meta": {},
      "text": "Scrum is a framework that works towards dealing with interruptions by using sprints. These help to adapt to changing requirements and improves risk management due to the daily meetings and discussions to figure out the next step and review the progress made so far.\nScrum is used for the advantage that there is a lot of communication going on from the beginning to the final product, as you have meetings all the time to discuss how things have been going so far and what to improve for the next sprint etc. For example, if someone struggles with something, the team can back them up because of the open environment where everyone knows of each others process and problems. \nAnother advantage is the flexibility, as you have to adapt your working skills when change happens. An example for this would be when the definition of the product change during the process, and those changes can be delivered in a few iterations, reducing the time spent on trying to adapt to the new goal as you constantly revise how you approach stuff.\nIn comparison to that, the spiral model does not focus that much on communication, instead disagreements aren't prevented, but rather seen as errors later that are going to be rectified later on.\n\nA disadvantage is the regulation of the team size working on the sprints, as teams that are too big tend to be less well-arranged which can lead to problems because of how the framework is build on communication and team work, i. e. when some people aren't very committed or cooperative the whole structure somewhat falls apart and the chances of failure increases.\nAnother disadvantage is how dependent it is on the team members, like when someone leaves in the middle of the working process the whole team would be overwhelmed and it'd lead to failure as well. \nThe team size is not of relevance for the spiral model, as well as the dependency on each team member. Everyone can be replaced at any time without risking major failure as the process of the iterations are set in stone.\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5622068,
      "meta": {},
      "text": "Im SCRUM-Model wird jeden Cyklus, genannt Sprint, am Anfang gew√§hlt, was diesen Sprint erledigt wird. Dies wird daraufhin in mehreren (meist T√§glichen) Scrum-zyclen erledigt, welche vom Aufbau her einem kleineren Sprint √§hneln. Nach dem Sprint werden alle nicht erledigten Aufgaben zur√ºck in den m√∂glichen Aufgabenpool (genannt Product Backlog) f√ºr den n√§chsten Sprint gelegt, wovon nun die Aufgaben f√ºr den n√§chsten Sprint gew√§hlt werden.\n\nPro Scrum 1:\nScrum ist flexibler. Man muss zum Beispiel nicht jede Woche eine Risikoanalyse machen, wie im Spiralmodell. Das kann Zeit sparen, wenn Risikoanalysen nicht von n√∂ten sind. Ein weiterer Punkt der flexibilit√§t ist, dass wenn ein Teil des development teams krank ist, kann der Rest mit einem kleineren Sprint backlog einfach weiter arbeiten, ohne warten zu m√ºssen.\n\nPro Scrum 2:\nScrum ist nicht sequenziell. Im Spiralmodell kann erst mit der Implementierung begonnen werden, wenn die Risikoanalyse abgeschlossen ist. Das macht Aufgabenteilung sehr schwierig. Die Developer k√∂nnen nicht aufgeteilt werden in Software engineers, die den Aufbau des Projekts entwerfen und Programmierer, die das dann umsetzen. In Scrum hingegen k√∂nnen Rollen verteilt werden, da der Programmierer nicht warten muss, bis der Software engineer fertig ist.\n\nContra Scrum 1:\nScrum garantiert nicht, dass alle Aufgaben bearbeitet werden. In Scrum werden jeden Zyklus Aufgaben in den Sprint backlog getan. Wenn nun die Developer zum Beispiel keine Tests schreiben wollen, k√∂nnen sie diese Aufgabe einfach nicht in den Sprint backlog tun, da die developer das letzte Wort haben und nicht etwa der Scrummaster, oder so. Keine Tests zu schreiben f√ºhrt in diesem Beispiel allerdings zu sehr viel bughaltigerem Code, als im Spiralmodell, wo ein bestimmter Zeitraum jeden Zyklus f√ºr Tests vorgesehen sind.\n\nContra Scrum 2:\nScrum verschwendet sehr viel Zeit auf Organisatorisches. In Scrum hat man nicht nur die (meist w√∂chentlichen) Sprint-meetings, sondern auch noch die (meist t√§glichen) Scrum-meetings. Diese meetings sind rein organisatorisch, um zum Beispiel einen Backlog zu erstellen und mehr.  Laut dem Agilen Manifest, sollten sie so kurz wie m√∂glich gehalten werden, k√∂nnen aber in Anwendung oft eine Stunde des Tages stehlen. Diese Stunden kann mit anderen Modellen, wie dem Spiralmodell sinnvoller genutzt werden. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622656,
      "meta": {},
      "text": "SCRUM is a project management method used when devoloping and maintaining software in an agile development environemt that facilitates continous integration. The software lifecycle is hereby divided in so called \"Sprints\" that often last about two weeks. After each sprints stands a potentially shippable product increment, which is accompanied by a \"Sprint review meeting\", in which the goals and achievments, potential issues etc. are discussed and evaluated. The next sprint is then started via a sprint planning meeting, in which the sprint backlog (goals for the next sprint) is set, and is followed by daily so called \"Stand up meetings\" which take place very day and discuss the goals and achievements of the team during the last 24h.\n\nSCRUM:\nPros:\n- SCRUM enables quick and agile changes in requirement by the stakeholder and the implementation of any kind of change in the system due to short sprint terms (Important as requirements/budget/timespan often change rapidly during development)\n- Efficient use of resources within the team, as large projects are broken down into small, easy assessable increments that can be delivered individually much earlier than the official deadline of the project, often used in big projects in which increment is usable by the stakeholder on itself\n\nCons:\n- Introducing the SCRUM framework can be very challenging on a large scale teams or even company wide as it requires people with deep experience applying this method in the real world which are often hard to accquire \n- SCRUM strongly depends on individual team members - if any of the members doesn't commit to this way of developing or even leaves during the project, this can have an huge impact on the whole process\n\nCompared to SPIRAL:\n- The spiral model is not as granular with shippables /prototypes as the chunks the project is broken into are bigger - scrum can be also applied to smaller projects\n- Time management and product deadlines can be a bigger issue than with scrum \n\n- Spiral also highly depends on experienced experts, otherwise might be doomed to fail\n- Spiral focuses more on risk management and is less dependent from individual team members",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644273,
      "meta": {},
      "text": "Scrum is an agile project management framework perfect for software development teams as it deals with change incredibly well. Whereas agile is a mindset, scrum is the framework that provides all the tools to be agile. It encourages the team to self-organize whilst continuously improving by reflecting on both their losses and wins.\n\nA considerable advantage of scrum is the ease it deals with big projects. At the beginning of the project, the project gets broken down by the product owner into requirements, fixes, and other features which all get stored in the product backlog. This backlog is not static and gets constantly revisited and functions as the team's to-do list for the project. Each sprint cycle, specific tasks are taken from the product backlog and get broken down into smaller more manageable chunks. The spiral model is completely planned out at the beginning. While it is true that for scrum time and thought are put at the beginning into figuring out the components of the product backlog. However, the backlog will constantly get revisited and only the individual sprints are really planned out. Additionally, the spiral model also divides the project into groups, but these chunks are much bigger than in scrum\n\nAnother advantage is that the implementations are tested each time directly within the corresponding sprint review. Additionally, this gives the team the chance to present the project as often as possible to the customer for them to give feedback. This system allows change based on feedback. For the spiral model, customer interaction happens much less. However, it deals much better with unanticipated risk, unlike change since that is the core concept that the spiral model deals with.\n\nA drawback of scrum is its implementation. It is drastically different from traditional working methods and can take teams a long time to adjust to when first time switching to scrum. Therefore it requires a lot of commitment and leaves little room for failure. The spiral model is closer to the waterfall approach and therefore easier to implement.\n\nAn additional drawback is the lack of a definitive timeline. You are never really done with scrum since they focus on continuous improvements. You are only done when the customer says so. For the spiral model, you are done once you finish the final phase.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644622,
      "meta": {},
      "text": "The essence of the scrum is a self-organizing framework that delivers customer value within a set period of time, called sprint. SCRUM helps team to manage with complex - and frequently changing problem. One of the advantage of scrums is that it can quickly accommodate changes. It has the advantage of being able to quickly accommodate user feedback through sprints and quickly improve problems to the next sprint. In addition, scrums have the advantage of helping to solve problems efficiently by dividing large problems into small problems. I will explain making a flight ticket reservation system as an example. If the goal of the first sprint was to complete the ability to select and book travel dates, you can immediately feedback on what areas of the feature should be improved and supplemented immediately after the first sprint and reflect it in the next sprint. In addition, if the search and reservation functions are completed in the first sprint, at the second sprint calculating flight time and completing the seat reservation system could be the next goal increment of sprint. In this way, makes SCRUM to complete the project by dividing the entire project into small goals. Scrum, however, has the disadvantage of being difficult to plan, structure, and organize in projects without a clear purpose or definition. In addition, if not all members actively participate in the project, it can easily lead to project failure. For example, if \"what functions should be produced through a print?\" is not defined, the schedule of the project is not accurately defined, which can lead to difficulties in planning.  In addition, team members need to know their roles clearly and perform them so that projects can be successfully completed within a set sprint period. Because scrums are repetitions of tasks that require quick and accurate calculation within a set period of time. The conventional spiral structure, like scrums, has the advantage of being able to actively accept consumer feedback, but unlike scrums, it also has the advantage of being able to manage risk. However, the disadvantage is that the spiral structure requires longer time than the scrum and is expensive, making it unsuitable for small projects. Conversely, scrums have the advantage of being used for small projects because they use a light-weight framework.\n",
      "score": 60.4,
      "language": "ENGLISH"
    },
    {
      "id": 5619602,
      "meta": {},
      "text": "1. The core essence of SCRUM is a technique in software engineering that deals with interruptions. It manages, controls software and product development with rapidly changing requirements. SCRUM also improves risk development by improved communication, cooperation and the delivery of product increments.\n\nAdvantage of SCRUM\n2.1 a) The advantage of SCRUM is that it helps to maintain transparency as it makes the Scrum team more accountable for their day-to-day tasks. This is similar to the Spiral model as for iteration of the Spiral model, there is a determination of objectives, alternatives and constraints which is in parallel with sprint planning where development team estimates the difficulty for the most important items in the product backlog.\n\n2.1 b) The other advantage of SCRUM is there is proper usage of time and financial resources efficiently as the SCRUM team plan preemptively and budget their finances before begining their project. This reduces unforseable expenses and time wastage. On the other hand, time managment in the Spiral model is very complex resulting in delay in delivery and pressure on the developer.\n\nDisadvantage of SCRUM\n2.2a) Challenging for larger teams to adopt the SCRUM framework as it requires training and skills that can be implemented easily. The business users are to work collectively with the development team also. This is similar to SCRUM mode as it is also quite a complext model as it requires its protocol to be followed smoothly.\n\n2.2b) Quality of incremental product depends on testing process. If teams do not test aggresively with each iteration, it can negatively affect the final product's qualiity. Teams have to be fully commiteed to their project for SCRUM to be effectively. On the other hand, if there is any changes in the a phase during testing, it may lead to the iteration of the previous phase or full cancellation of the project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621066,
      "meta": {},
      "text": "In a scrum team, there is a product owner (representing an user), a scrum master (mediating between the user and the scrum team) and the scrum team members who implement the system.\nIn the method SCRUM, there are sprints in which a few functionalities are implemented at once and deliver a product which can be used be the product owner. After a sprint, there is always a sprint review where the members see how much the team achieved compared to the goal from the sprint planning phase and to add the missing functionalities and some change requests by the product owner to the next sprint planning.\n\nIt's important, that the user's point of view is well represented. If the product owner requests a design with a certain colour, certain buttons etc. for an application, the programmers have to listen to the owner.\nIn the spiral model, there are design plans and requirement plans which weren't made by a user's point of view.\nAfter a sprint, changes can be requested so the programmers should be flexible to change some parameters. If the product owners requested 10 players at once in a game and then he noticed, that the game would be too chaotic, it's good to be able to request a reduction of players.\nBut the spiral model, change requests don't exist, so the requirements plan has to be perfect in the beginning.\n\nIn the spiral model, the programmers actively analyse the risks they should avoid, but in a scrum, they only can be determined by testing or by the product owner while using the program. For example, if you program the factorial function for a calculator and forget the risk of entering negative integers, this problem will eventually be determined too late.\n\nWhen allowing change requests, there always is the risk that there are too many changes requested. If the product owner changes the amount of players in a game after every sprint review, it will be hard to come to a conclusion. It may be useful to have a good plan where only few small changes are needed.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5621618,
      "meta": {},
      "text": "Scrum is an agile software development technique, which can deal with frequently changing requirements and can improve risk management through better communication. Development is broken into work packages, which are implemented over sprints ‚Äì 2-4 week periods with dedicated work packages, and a resulting shippable product increment. The scrum methodology relies on frequent communication, with dedicated roles, short daily meetings and review meetings to improve collaboration and plan the next iteration.\n\nThe provided flexibility to review planned work packages each sprint enables high reactiveness to changing requirements which reduces cost. For example in an app development project the information on customer preferences was collected late, but was easily integratable later on, as the first sprints focused on the basic functionality.\n\nA second advantage is the improved risk management, which also reduces cost. As incremental development applies vertical integration, and daily exchanges among developers foster communication, risks can be detected earlier and escalated. An example for this is the issue of GDPR compliance in a system. In case this was forgotten to plan, this can mean significant redevelopment, whereas in scrum this would be identified earlier.\n\nHowever, the extensive required training is often neglected, leading developers and other stakeholders to be confused about roles and lack adherence to the structured methodology. An example for this are teams in more traditional companies, working mostly in linear processes. For them, implementing scrum will mean significant overhead, and just having a daily check-in and having a progress meeting once per month.\n\nScrum however has reduced plannability, making it difficult to integrate with traditional project management. Traditional methods are not set out to handle changing requirements. An example is the transformation of an IT ecosystem, where most planning is performed in waterfall models, relying on availability of software from a certain point. With the scrum flexibility this is difficult to combine.\n\nThe major advantage of scrum over the spiral model is, that it is an incremental method and can handle changes in the requirements within the same phase, where the spiral model struggles and might force jumping back a period or even cancellation.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622302,
      "meta": {},
      "text": " The core essence of Scrum is simple. Developing a certain product can be the solution of the problem encountered by the customer. In order for us to help the customer, we put with the customer a team of people who are qualified  to build that product. This team interacts in a direct way with the real customer or product consumer to better understand and visualise the problem. Together, the customer and the team members, decide on the most significant steps to take to solve this complicated problem. \nLets start by naming the advantages of scrum. First we can say that Scrum is a framework that can help you manage your project more effectively and make better use of time and budget, due to (in some way and as an example) the daily meetings that help identify emerging complications and problems that can be quickly solved. \nAnother advantage is that Scrum focuses on minimizing errors as much as possible. As an example we can state the numerous tests done in the scrum framework to ensure that the project is maintained at the highest quality level, while in the spiral model we only have 3 types of tests which are unit test, integration and system test, and finally acceptance test.\nNow lets jump to the cons of scrum. We can start with the unexpected departure of one team member that  may harm the progress of the entire project.As an exemple we can say that Daily meeting(who arent part of the spiral model) at times can go too strict and frustrating for team members which can cause their departure . Another disadvantage is that the success of the project may be at risk if a team member is not involved or does his job slower than the others. As an example we can say that many scrum pojects failed since adopting the Scrum framework in large teams is challenging(consequence of the two disadvantages we just stated).On the other side the spiral model requires expertise too in order to evaluate and review the project from time to time.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5643895,
      "meta": {},
      "text": "Scrum is a method to organize software development in rapidly changing environments through frequent communication that involves all participants: A product owner defines a \"product backlog\" of all tasks he considers important, which are then further evaluated together with the team based on the development complexity. The team discusses the implementation and their work in larger \"sprint meetings\", \"daily scrum\" meetings and \"sprint review / retrospective\" meetings, resulting in a potentially shippable product that can be discarded / used for further development.\n\nOne Scrum advantage is to deal with change between activities (ie testing). For example, if a new customer considers a feature to be very critical, you might want to increase code coverage. The spiral model can only deal with change between activities, ie tests revealing lacking features.\n\nScrum improves the communication, since there are frequent meetings with often all participants involved. This is good because it reduces risk. For example, the product owner could see during development that his specifications are not resulting in a good product and require further changes. The spiral model also has tasks that would require such meetings (all major activities except development) but doesnt have them structured in the level of detail that scrum has.\n\nScrum is a very structured process, and not everyone might be familiar with the structure. This can cause communication problems, for example when the sprint backlog is changed during the sprint without others knowledge. The spiral model is also structured, but may be a little bit easier to learn.\n\nScrum deliverables might be discarded if they are not considered to be an improvement to the product. This has no impact on the project, the team simply changes the requirements. For example, if a feature turns out to not add value to an MVP, it can be discarded after the sprint and there is less cost wasted building an unnecessary final feature. This is good because it allows for project continuity and participants dont have to worry about the project to end. In the spiral model the project is terminated if a \"sprint\" concludes that a major risk cannot be resolved. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644869,
      "meta": {},
      "text": "In SCRUM, there is a product backlog, representing all deliverable items for a project and a sprint backlog, representing deliverables for that sprint, a constant time unit. At the beginning of a project, there is a project kick-off to define deliverables, afterwards the SCRUM master organizes sprint planning meetings defining the sprint backlog before, daily SCRUM meetings during and a review and retrospective meeting to discuss the status of the project and what could be done better after each sprint. At the end of each sprint, the development team has a potentially shippable product increment ready which is reviewed by the product owner. \n\nOne advantage of SCRUM is that it is agile, meaning it is suited for dealing with change coming from competitors or new technologies. An example would be if the competitor of a gaming company comes out with a product featuring character customization. As items can be added to the product backlog even during the project the company can stay competitive by adding customization. The spiral model has an iterative approach, it is not quite as suited towards dealing with changes. \n\nAnother advantage of SCRUM is that is encourages communication between all members of the team, regardless of roles, making the team more efficient. For example, the product owner can speak directly with the development team (rather than through the SCRUM master) to communicate more clearly on goals and feasibility for an item. For the spiral model, there are no defined roles or communication rules, it is neither discouraged nor encouraged.\n\nA disadvantage of SCRUM is that there is no clear prioritization scheme for backlog items. Taking large projects (with large product backlogs) as an example, the development team could become overwhelmed with the amount of items, or problematic prioritization rules, e.g. not considering dependencies of items, could cause issues later in the project. The Spiral model has a prioritization rule, starting with the highest risk item. \n\nAnother disadvantage could be that measuring progress can be difficult in SCRUM as 1. the product owner can change and add requirements during the project and 2. progress is based on acceptance of product increments. For example, when a product increment is not accepted, it may be demotivating to the development team if their effort is not recognized at all. In the spiral model, progress is measured by resolved risks. ",
      "score": 87.5,
      "language": "ENGLISH"
    },
    {
      "id": 5621028,
      "meta": {},
      "text": "Scrum is the most commonly used agile process for product development, especially software development. Scrum is a project management framework that can be applied to any project with tight deadlines, complex requirements, and some degree of uniqueness. In Scrum, a project proceeds through a series of iterations called sprints. Each sprint typically lasts two to four weeks.\n \n\nAdvantages:\n1)Adaptability and flexibility - Scrum can be used in a variety of environments, such as constantly testing code and working simultaneously with everything changing during a project.Result for example -Dutch Railways' Distributed Scrum Project: an overview of how a distributed team (Dutch and Indian) . First, they used Skype intensively, both for one-on-one meetings and for meetings in which everyone participated. All of this works with off-the-shelf components and free software. They didn't have to invest in any particular investment, except for reinforcing the network equipment in India with a UPS so that Skype sessions could continue in the event of a power outage. Second, they decided to only do pair programming in the same location. In other words, they paired them in India and the Netherlands.Spiral model-easy to change requirements and documentations and features added in a systematic way.\n\n2)Development teams-The scrum requires pair programming, with all members working closely with each other, with the main goal of completing a usable segment of the prioritising work with business value as quickly as possible.Result faster coding with better quality.example-The Indian developer returned home and added Indian and Dutch resources to form two scrum teams of five developers each, sharing one tester. Later, they further scaled up to three development teams and three testers. Key to their approach is that each scrum team is comprised of both Indian and Dutch resources. This model has proven to be very effective in maintaining high velocity and quality.Spiral model-doesn't work well for smaller projects.\n\n\ndisadvantages\nExtensive training -well trained and skilful team to implement.For example, a customer requested a very extensive document written in Dutch, but the developer was not familiar with the language, resulting in the hiring of a technical writer and unplanned additional costs.Spiral-skills required need expertise and costs are high.\n\nDifficulty on scaling-adapting scrum framework in larger project is challenging.For example, the product owner created a huge requirements document in Dutch, which organized the program and subsequently required a lot of coaching to separate the requirements document from the backlog.spiral-very good for large projects.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623196,
      "meta": {},
      "text": "SCRUM is a technique of project management that deals with changes occurring during the process. At first, divides the problems into parts that will be dealt one by one and the product will be built layer by layer at each end of a part. When a part is not finished or a change happened, it will be added to the to do list and will be done in the next part.\nAdvantages : \n- Product incrementation. The incrementation made at the end of each sprint must be a working system and that is important for testing. For example, if there is a bug, it will be discovered at an early stage.\n- Flexibility. A change does not disturb the progress of the development and can be made at any time. for example, the product owner wants to add a requirement, it will be no problem. The requirement will be added in the product backlog and will be done in the upcoming sprint.\nDisadvantages :\n- Poor planning. For example when choosing the order of the backlogs some requirements can need others which are put after them.\n- Potential deadline exceeding. For example, when the product owner makes a lot of changes it can affect the rhythm of the development and the previously set deadline won't be sufficient. \nThe difference between SCRUM and Spiral Method is the spiral method has 4 major activities but the SCRUM is more flexible. In the Spiral Method the team develop prototypes for the risks whereas in SCRUM the team make advancement on the product, which developed with incrementation. The Spiral method has the same problem of deadline as SCRUM because of the sudden changes that can happen.  Although SCRUM follows a plan, it is not always precise. But in Spiral method each iteration has planning in a specific part of the project so it is more precise.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644688,
      "meta": {},
      "text": "Scrum is an agile software development process, in which the actual work is split up in different time boxes called sprints. In each sprint the team works on a previously determined set of tasks and at the end of the sprint it is evaluated how well the tasks have been carried out and what the tasks for the next sprint will be. In a SCRUM environment there is the product owner who states the requirements for the product, the scrum master, who facilitates and organizes the scrum process, and the team that actually does the work on the product itself.\n\nAdvantage of scrum: \nWhen using scrum, the oftentimes big load of work to be done is split into easily manageable short time sections, called sprints. In the Spiral model, the work to be done is always split into the same steps, which are not connected to a specific time frame.\n\nScrum is very agile, meaning that whenever a stakeholder has feedback or the requirements of the product change, this can easily be implemented in a next sprint, as each sprint is planned at the end of the previous one. In the Spiral model however, if requirements of the product change you might have to start all over, as it might already change the first step of the model.\n\nDisadvantages:\n\nAs Scrum is very flexible and has no predetermined end date, it might happen that a project goes on for a long time. In the Spiral model, there simply is a predetermined number of steps you have to follow, which minimises this risk.\n\nAlso for Scrum to work well, the team has to communicate a lot and be able to be heard in the scrum meetings and sprint planning and review meetings. This might be very challenging if it is a big project with a very large team. This is similar for the spiral model. Once the team is large it becomes harder and harder to effectively communicate and collaborate.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644808,
      "meta": {},
      "text": "The core essence of SCRUM is the belief that through better communication between developers and the special handling of software increments risks can be mitigated more efficiently and change can be generally dealt with in a better way.  Linear development processes behave sequentially, while with SCRUM, work is performed in a more parallel manner. With SCRUM, the whole workload is divided in smaller packets which are tackled independently.\n\n+ One sprint contains a subset of the sprint backlog. Usually those start with the most important part of the product and a rough implementation, while fine detail is added later. In that way, at the end of only a few sprints a potentially shippable product is already available, which helps a lot with time management and avoiding running out of time. Another aspect of this division into smaller parts is that changes can be made during the whole process, even drastic ones if needed.  For example, if the product owner needs a totally new functionality, it can just be taken into account during the next sprint planning. This, in contrast, is simply not possible after the third iteration is done in the spiral model.\n+ SCRUM is a self organizing construct. There is no need for a project manager beyond the standard concept of scrum, rather the team of developers organize sprints and everything around that on their own, which means that human resources can be used more efficiently as there is no need for someone to look out for everything at all times (at least not beyond the role of the SCRUM master). The SCRUM master is usually just another developer that focuses most of his time on the project, for example. For the spiral model, there is always someone needed to coordinate the iterations.\n\n- This point is also directly linked to an disadvantage of SCRUM, namely that you need a well functioning team that communicates enough to fulfill that self organizing concept. If the communication between developers doesn't work out, then the whole project comes to an halt. I think everyone knows a team project that suffered from lack of communication, so nothing was achieved in the end, SCRUM projects can have the same fate. This is not really possible in the spiral model as there is usually a designated manager.\n- Lack of deadlines: While other project management concepts usually include a deadline for the current phase in development, SCRUM lacks this deadline concept completely beyond the time frame for a sprint. This can in turn mean that for a sprint backlog, arbitrary goals can be set, even such that are actually too low. This usually happens when the commitment of the devs is not high enough for the project. For the spiral model, there is again no such thing as all iterations usually have firm goals and deadlines.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644835,
      "meta": {},
      "text": "Essence of SCRUM:\nSCRUM is a framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value. Scrum is one of the best Agile product development framework. It provides a path to delivering business goals in a collaborative, sane, and enjoyable manner.\n\nAdvantages of SCRUM:\n1. Flexibility to allow product changes:\nAn important benefit of SCRUM is flexibility. i.e. the capability to quickly adapt to changes in product definition and to deliver to those changes within a few iterations. This can be done by making a modified backlog.\n\n2. Scrum feedback loops:\nFeedback is always important to improve existing systems. In Scrum, there are many feedback opportunities. Such as Daily Scrum meetings, Sprint Review meeting and retrospective meeting. i.e. Using feedback, any problems and be caught and solved early in the pipeline before they evolve into a bigger problem\n\nSCRUM vs Spiral Model:\nSCRUM and Spiral Model are somewhat comparable. Both have their own advantages and disadvantages. Both have tests, plans, and evaluation phases, however Scrum lacks the risk management. Spiral Model has better risk management.\n\nOn the other hand, SCRUM has a better explained Iterations as compared to Spiral Model, which does not explain the length of an iteration. A one complete cycle can be considered as an iteration. \n\nSpiral Model is much more complex and expensive than SCRUM and is not suitable for smaller projects, while SCRUM is also a good Agile method for smaller projects.",
      "score": 54.2,
      "language": "ENGLISH"
    },
    {
      "id": 5619397,
      "meta": {},
      "text": "SCRUM organizes the development of a project into iterative cycles (=sprints) that are predefined time spans in which the team works on selected requirements (=sprintbacklog) from a set of requirements (=productbacklog) specified at the beginning. SCRUM is characterized by its focus on the communication between team members having daily meetings  and meetings at the beginning and end of each sprint.\n\n+ the team works in parallel in sprints which makes it easy to adapt to new customer requirements as well as to identify and solve problems timely instead of finding them at the end where you'd need to restructure the system in order to fix them.\nEg.: you have to develop an app (eg.: calculator) and in the middle of the development the customer requests a new feature (eg.: map functions) where now you could easily add this to your sprintbacklog and integrate it during the next sprint.\n\n+ SCRUM ensures transparency and a clear overview of the progress made throughout the development while the rules, artifacts, and roles are easy to understand and adapt to new situations.\nEg.: if a member implemented something wrong this could be addressed/resolved in the next daily meeting.\n\n- developers should already know each other very well. If that isn't the case, at the beginning the development could be slower than expected as SCRUM relies on the collaboration in the team.\nEg.: the EiST team project where in many cases the team members didn't know each other before and therefore it took a while for the team to work efficiently together and utilize SCRUM at its fullest.\n\n- it can be difficult to apply within larger teams as it is mainly designed for smaller teams (~5) and therefore would need organizational change to work with larger teams. \nEg.: you if your current team has too many members you would need to scale the team structure or subdivide the team into different SCRUM teams.\n\nThe SpiralModel uses an iterative approach which means that there is no possibility to react to change within an activity while SCRUM, using a agile approach can adapt to new requirements.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5619400,
      "meta": {},
      "text": "Scrum is an agile method for software/product development, it enables users to quickly adjust to changes, while also having shippable products available early on in the development phase. It does so, by breaking the development into small chunks, using a small team of devs, that are supervised by a scrum master and domain experts that produce software over the course of so called sprints, after each sprint results are revised.\n\nAdvantages:\n\nYou have a potentially shippable product after each sprint. In the linear model, you had predetermined phases, after which you had a fully functional product, but that could take years, while in scrum, one can have that potentially shippable product available in a matter of weeks.\nExample: You produce a toy. In a matter of weeks you would already have a fully working prototype available.\n\nRegular scrum meetings make sure that the time stays on track. Since they are held quite frequently, will all members of the dev team, the scrum master and even domain experts. Not only problems can be tackled early on, but help is also readily available. In traditional SD you tried to plan everything meticulously, and had extremely rigid deadlines, and less frequent meetings, nor a such good enviroment to ask for help if needed and check if the project stays on track.\n\nDisadvantages:\n\nScrum requieres a highly communicative and motivated team, if you can not get a group of people to be a team the chances of project failure are extremely high. Finding people who work in such a way in a highly competitive team might be extremely difficult.\nExample: \nI had a teacher who worked at a local semiconductor company, the work enviroment did not allow him to work in a efficient and communicative team, since everyone fought for themselves.\n\nIt is more difficult to plan ahead. Why? Because Scrum embraces changes, possibly in any requirement\n\nExample: The customer suddenly wants a new function in his product, now the project urgently might need more people, time and resources to finish.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620065,
      "meta": {},
      "text": "SCRUM is a agile technique to restart the work on software development after an interruption or a change where the Scrum team members are assigned roles (Product Owner, Scrum Master, Development Team). Thus, it is easier to manage and control the product development thanks to monthly Sprints, that have constant durations throughout a project and after each a potentially shippable product increment is created since the work is performed as Vertical Integration (in parallel, agile). Each Sprint has a Sprint Backlog (part of Product backlog), a set of activities to be implemented during the Sprint or Daily Scrum meetings to manage the development process.\n\nPROs of Scrum:\n+adaptable and flexible:\n‚Üí In case any improvement ideas arise, Scrum team tries to plan next Sprint better than previous Sprint. So basically we continuously review and adjust our Product backlog for better delivery product.\nSpiral: is an iterative model with 4 main activities, that are applied in 9 iterations (phases). We can easily change requirements at later phases as well as additional functionality can be added at a later stage.\n\n+involves low costs:\n‚Üí Scrum usually requires less documentation and control, focusing more on a working software, which can be cost-effective for an organization.\nSpiral: is expensive and comprehensive documentation is important.\n\nCONs of Scrum:\n- not appropriate for large and complex projects:\n‚Üí Using Scrum for large projects can be challenging, as implementing it on a bigger scale requires extensive training and precise coordination. \nSpiral: good for large and complex projects. Not recommendable for small projects as it is expensive.\n\n- lacks the risk management:\n‚Üí If business needs are unstable, Scrum is not the approach for long projects that has high risk. As a solution, it is to include risk information in the Product Backlog in the Product Backlog Items.\nSpiral: Risk Analysis and Risk Handling is performed at every phase.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620810,
      "meta": {},
      "text": "Opposed to non-agile methods Scrum has a high tolerance for changing requirments and is well suited for integrating them into an ongoing development process. Scrum enables parallel development with clearly defined roles, frequent communication between team members and customer proximity.\n\nAdvatages Scrum:\nScrum allows working on tasks in parallel, whereas the single iterations of the Spiral model still follow a fairly sequential procedure. \ne.g. For our team project we need a log-in, calendar... While Elena works on the log-in, Leon works on the calendar and I work on the Gui at the same time.\n\nScrum reacts to requirment changes during development while the spiral model can only take changes into account between the individual iterations.\ne.g. During the Sprint the product owner raised awarness that a more vibrant Gui design is required. This requirment change was directly taken in and could be realised in the same Sprint.\n\nDisadvantages Scrum:\nA continously changing (not sequential/iterative) development process might not be as plausible/traceable for members of the sprint or management. The Spiral model for example is probably more clear.\ne.g. During our team project it was sometimes very unclear who was responsible for which task and even if it was clear the tasks could still overlap.\n\nScrum requires experienced personnel (higher organizational effort) for example Scrum Masters who encourage and maintain the Scrum structure and know how to draw up good user stories. The spiral model might be more straight forward due to its iterative(partly linear) nature and does not require such high organizational effort.\ne.g. During our team project some people wouldn't want to participate in certain meetings which lead to confusion and erosion of the Scrum structure.\n\n\nI compared Scrum and the Spiral model in the respective advantage/disadvantage directly.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621024,
      "meta": {},
      "text": "In Scrum, few requirements from the product backlog are taken and implemented in the next of repeating, short development sprints. Each of them supposed to create a potentially shippable product with improved featues. Before and after every sprint, the small team evaluate its productivity in the previous sprint, to discuss problems and plans the next sprint.\n\nScrum is suited to deal with rapid requirement changes. Since the sprints are between 2 to 4 weeks, the team can plan their next sprint according to the new requirements. Take our eist team project: We decided to implement a logging system for our user in the fourth sprint. It was added to the sprint backlog and implemented a few days later.\nIf we would've used the Spiral model, our product would've failed, because there is no way of going back even one step.\n\nScrum is ideal for startups, because the first shippable product is ready after a few weeks an can directly be delivered to the first testers. This is important, because startups have to verify, that their product can survie on the market. If you build a software that isn't as needed as you think, you can save a lot of time and resources. If you use the Spiral model on the other hand, you can first show your product after you are completely done.\n\nScrum might fail, if one of your last sprints contains a task that turns out to be impossible. If this task is essential to you product, the flexibility of scrum doesn't save you from failure. If you build a car and realise after a year that you can't build the engine, you fail. In the Spiral model you start with the hardest part, and can identify such problems sooner.\n\nScrum might lead to more work than neccessary. The individual sprints lead to redoing a lot of work, because you need to improve it.  An example is one again the logging system. In the Spiral model you implement a function once and might never have to look at it again. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621149,
      "meta": {},
      "text": "Scrum is a non linear model to work on software projects, it works with interruptions so it is easy adaptable when the requirements are changing. When Scrum is used, there is no Horizontal integration, scrum is using vertical integration, so at every time there is a potentially shippable product increment. \n\nA good thing of Scrum is that each team member is asked to identify specific things that the team should start doing, stop doing and continue doing. So more people are thinking about almost all problems, more people usually brings more ideas with it and with more ideas the chance is higher to get the best. On the other side, this makes Scrum also kind of slow compared to a linear Model, sure in the spiral model we also discuss about different ideas, but usually only the people who are working at this problem and not the whole team. Another positive thing about Scrum is that work is performed parallel and not sequentially, so possible problem of one section are getting detected very quick. While in linear processes problem of the, for example, last section of implementation are only getting detect at this time, at the very end, which is very bad, so also in the spiral model.\n\nOn the other side there are also some bad things about the SCRUM model. In a linear model like the sprial model, we always know how far we are at the moment, while using SCRUM we never can say certain how far we are already with the project until we are done with the project. In series that SCRUM needs a lot of communication and meetings, it is important that every teammember has to be committed or cooperative. Without cooperative teammembers the whole project could fail. This is easier in a model like the spiral model because there we don't have that much meetings and communication, for sure, we still need committed and cooperative Teammembers but it isn't as important as in the SCRUM model.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622121,
      "meta": {},
      "text": "Scrum is an iterative project management framework that based on empirical process control and deals with interruptions or changes. It manages helps with risk management by making communication more effectively. \n\nAdvantage:\n1. Short lead time\n2. Strong adaptability to new demands\nDisadvantage:\n1. Poor system reliability\n2. Lack of risk assessment, the project is easy to fall into a bottleneck\n\nAdvantage example 1\nMost of the parts in the scrum model except the development stage are solved by direct communication, and there is not much project evaluation, so the delivery cycle is relatively short.\nAdvantage example 2\nScrum is reordered at the beginning of each development cycle to account for new requirements changes.\n\nDisadvantage example 1\nScrum focuses on development speed, so it ignores some security and reliability issues.\nDisadvantage example 2\nThe scrum model can be stuck in an unforeseen position during development, and usually unsolvable problems are continuously sorted backwards, resulting in problems later in the project and failure to deliver smoothly.\n\n\nSpiral Mode vs. Scrum:\n1. Delivery cycle\nThe delivery cycle of the spiral model is slightly longer than the development cycle of the scrum model. Each cycle will systematically evaluate the next work, and pursue the stability of development before pursuing the speed of delivery.\n2. Adaptability to new demands\nBoth can be well adapted in this regard, but the scrum is faster and the helical model is more stable.\n3. System reliability\nCompared with scrum, which sacrifices some reliability in exchange for time, the spiral model will conduct risk assessment before the start of each cycle, and listen to customers' opinions after implementation. Although some time is lost, it is also more stable and reliable.\n4. Risk assessment\nThe spiral model introduces a risk assessment that is not available in other models. This is mainly to carry out risk screening before each cycle, and if it is found that the risk cannot be eliminated, it will be terminated immediately.\nScrum omits this process, which will lead to risks in the development process. If there is no experienced project leader to lead the team, it will lead to the late delivery of the project not being carried out as scheduled.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622159,
      "meta": {},
      "text": "Scrum is a work method during the software development. A Scrum gruppe consist of a product owner, who provides the idea of the software. A Scrum master who is responsible for the team and running the meeting in the team and the other member in the team help in building the software. The hole procedure will be divided in to few Sprints. A sprint last for two or four weeks. During the sprint the team member and the scrum master will hold a meeting every day.  After the sprint the scrum team will get a potentially shippable product. At the end of the sprint a sprint review and a sprint retrospective occurs. \n  ",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622776,
      "meta": {},
      "text": "As a process framework, Scrum is used to manage product development and other knowledge work, often in crossfunctional team settings. Scrum is empirical in a sense that it allows teams to iteratively improve by using trial and error with subsequent collective reflections. The values on which Scrum builds on are commitment, courage, focus, openness, and respect and find expression in set practices, artifacts, and roles.\n\n\nadvantages:\n1. Scrum can help teams complete project deliverables fast and efficiently.\n- reason: The frequent delivery of working software is key. Furthermore, Scrum focuses on an iterative improvement of the team's collaboration through frequent feedback loops while remaining open for process adaptations.\n- example: Scrum has the artifact of an \"increment\" and the team tries to meet the definition of done within the sprint (1-4 weeks).\n- spiral model: A typical iteration in the spiral model takes up to 6 months.\n\n2. The individual effort of each team member is visible during daily scrum meetings.\n- reason: In long software projects, team motivation/morale is key. While Scrum has rules in place to ensure mental health and balance the workload of the developers, motivation can alo be boosted through interaction in the daily Scrum meetings.\n- example: The daily scrum is an official event, a short (~15 minutes) discussion where the team coordinates their activities.\n- spiral model: no formalized daily meetings but meetings upon request.\n\n\ndisadvantages:\n1. Adopting the Scrum framework in large teams is challenging.\n- reason: In larger organizations/projects, a large number of developers must be coordinated. Due to the fixed roles, a Scrum team usually concists of 3-9 people. Scrum projects scale by having teams of teams, which makes communication more difficult.\n- example: The formal roles are \"Product Owner\", \"Scrum Master\", \"Development Team\". Too many development team member take away agility.\n- spiral model: focuses on risk-analysis and is meant to be used in large projects but team size is not restricted or specified.\n\n2. Scrum often leads to scope creep.\n- reason: Due to the lack of a definite end-date, there can be a tendency to include items in the work scope which would not have been implemented, e.g., in the planning of a waterfall project.\n- example: The release of the last product increment caused the client to request an additional non mission critical \"nice-to-have\" feature.\n- spiral model: The project scope is defined stricter as the iterations are typically longer.\n\nPS: It was hardly possible to stay within 350 words. Shortened my original version significantly hoping it didn't take away clarity.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623130,
      "meta": {},
      "text": "SCRUM is an agile, iterative and incremental process that manages rapidly changing project requirements through regular team meetings, called sprints, which improve communication between team members and enable parallel working in the project. In SCRUM, successive versions of the project build on each other, and through these product increments, based on frequent feedback from the customer, risk management in the project is improved as each increment is implemented and tested separately.\n\nSCRUM is a dynamic model as the product is potentially ready for delivery after each sprint, so the user regularly receives an increment of the product instead of waiting for a finished product, which increases customer satisfaction. In website design, for example, developers often provide the user with a usable basic version as soon as possible and incrementally develop the website according to changing requirements. The spiral model is also based on iterations, but requires long-term planning and analysis, so it takes longer to produce a deliverable product.\n\nSubsequently, in SCRUM, each sprint relies on constant feedback from the client, as product increments in sprints are essentially new features for the project. Therefore, SCRUM significantly increases product quality because the project is designed directly according to changing requirements. For example, if the client did not like the last feature added, this is discussed in the next sprint meeting and alternative solutions are implemented immediately. Although not being a fully agile model, spiral model involves thorough planning and is also based on iterations that divide the project into main activities and increase control over the quality of the product.\n\nSince SCRUM is an empirical rather than a planned model, it lacks a concrete structure. Therefore, there is a risk that developers focus on saving the current iteration instead of properly planning the future of the project, which can increase the risk of errors in the project. A good example of this is mobile games, which have massive bugs due to the fact that the integration of new features was not planned from the beginning. This risk is reduced in the spiral model because it forces the team to identify goals, constraints and alternatives so that the compatibility of planned future updates with the current system can be determined earlier.\n\nEven though the constant review of iterations and feedback from the client increases the quality of the project, it also requires immense resources due to the daily SCRUM meetings and frequent review of the project. Adapting SCRUM meetings in large projects like Google, for example, would be a problem because SCRUM does not work as well with large teams. In the spiral model, the iterations have longer periods and the main structure is well analysed at the beginning, so fewer resources are needed for the meetings and review processes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644292,
      "meta": {},
      "text": "Scrum is a technique in project management that focuses on dealing with changes in product requirements, it can be used both for the development and the delivery of a product. Traditionally, it is used for software development, however, it can also be used for different application areas (e.g. research or marketing). In scrum, product development is split into the development of several potentially shippable product increments, which are generated in so called sprints (usually 2 weeks long).\n\nAn advantage of scrum is that it allows great risk management. This is done by improving communication and cooperation within the team. For example, one way how scrum does that can be seen in the structure of a sprint. A sprint includes daily scrum meetings in which every team member receives updates on the current status and impediments. Via promises, potential solutions to these problems are already provided.\n\nAnother benefit of scrum is that it very quickly and reliably leads to working product increments, as the goal of every single sprint is the creation of a potentially shippable version of the product. For example, in the development process of a mobile messenger app, this could mean that in the first sprint the very basic messaging functionality in a 1-to-1 chat is implemented. This function should be completely functional and the app in its very basic form would already be shippable. In later sprints, more complex features like group chats or voice calls could be added to the already working application.\n\nA disadvantage of scrum is that it heavily depends on a functioning team consisting of members that are each very  committed and cooperative. Without proper will and skills for communicating about current impediments and promises (as well as the will and skill to keep them), projects managed using scrum have a high risk of failing. \nFor example...\n\nAnother disadvantage of scrum is that it lacks of a definite end-date, which can make it difficult to see the big picture and to plan efficiently.\n\nThe potentially shippable product in Scrum can be compared to the prototype in the Spiral model.\n\nIn the spiral model, there is not such a heavy focus on communication within the team, the different team members do not have such specific roles. The spiral model is less fixated in that regard.\n\nThe spiral model does not have a fixated end date either.\n\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644619,
      "meta": {},
      "text": "The core essence of scrum is that it helps you dealing with changes during our development more easily. You can handle changing requirements a lot faster and therefore distribute this new information faster among your teams.\n\nOne advantage of the scrum model is its simplicity, its cycle follows a very natural structure that should be easily understood by the majority of people, compared to the spiral model that has a very complex structure that needs some time to understand it. For example a new team member only needs little time to learn scrums structure.\n\nAnother advantage is its ability to react to changes. With our daily scrum meetings we can inform our team about changes directly and we can then adapt our requirements accordingly. The spiral model can also deal with change but the scrum model also can interact better with customers and its main purpose is the ability to react to change. If we develop an app for example and during our sprint we discover a new change in our requirement, we can discuss it in the daily meeting and then adapt it.\n\nA disadvantage is that scrum requires high commitment for a effective development. Exchanging information needs a lot of time and commitment. So if some members do not put in enough effort we lose our main advantages. The spiral model is also depending on team work but it does not require that high work-ethic between team members. For example these daily meetings could frustrate some members of my team which could lead to lower commitment which then leads to less progress.\n\nA last disadvantage is that you can run into problems with hierarchies and obligations between teams. People need to be ready to work on various tasks and not only on one, otherwise we might run into problems. Our spiral model does no have this kind of work-style, here we have our hierarchies and everyone has their tasks. For example if i only want to work as a tester and not as an programmer, it prevents other tasks in our current sprint from getting done.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644965,
      "meta": {},
      "text": "Scrum ist eine agile Arbeitsmethode, die vornehmlich in der Softwareentwicklung zum Einsatz kommt. \nDie kurzen Sprintzyklen von konstanter L√§nge mit anschlie√üender Vorstellung eines minimal auslieferbaren Produktes erm√∂glichen ein schnelles Nachbessern durch das Kundenfeedback sowie eine schnelle Anpassung auf ge√§nderte Marktanforderungen.\nInnerhalb der Sprintzyklen arbeiten die Entwickler vorab aus dem ProduktBacklog gew√§hlte Anforderungen ungest√∂rt ab. Das Produktbacklog wird dabei von ProduktOwner in Absprache mit dem Kunden entwickelt.\nDie Einhaltung der Scrumformalit√§ten, wie das t√§gliche Daily Meeting zum Austausch der Teammitglieder wird vom Scrummaster √ºberwacht und unterst√ºtzt.\n\nZwei Vorteile der Scrum Arbeitsweise:\n\n1) Durch die t√§glich abgehaltenen Daily-Meetings beh√§lt der Product Owner einen guten √úberblick √ºber den aktuellen Stand der SprintGoals. Sollten diese durch externe Einfl√ºsse gef√§hrdet sein, kann er sehr schnell unterst√ºtzen um die Zieleinhaltung zu garantieren. \n\n2)\nDurch die Aufteilung des Gesamtproblems in einzelne Sprints ist eine schnelle Anpassung an ver√§nderte Anforderungen m√∂glich. So kann ebenfalls fr√ºher gegengesteuert werden, falls sich die Produktentwicklung in eine falsche Richtung bewegt.\n\nZwei Nachteile der Scrum Arbeitsweise:\n\n1)Falls Scrum auf gesamte Organisationseinheiten mit vielen Mitarbeitern angewendet wird, ohne diese vorab in kleinere Teams zu unterteilen hat dies mehrere Nachteile.\nZum einen leidet die Kommunikation der einzelnen Entwickler mit deren Teill√∂sungen, was dazu f√ºhrt, dass leichter Doppelentwicklungen sattfinden. Zum anderen bl√§hen sich Regelstrukturen, wie das DailyMeeting zu ungewollter L√§nge auf, wodurch viel Zeit verschwendet wird.\n\n2) Durch die weitgehende  Isolierung der Entwicklungsteams von anderen Organisationsstrukturen w√§hrend des Sprints kann es in dieser Zeit leicht zum \"Blindflug\" kommen, sodass die Entwickler in eine falsche Richtung abdriften.\n\nVergleich Scrum und Spiralmodell:\n\nDas Spiralmodell eignet sich aufgrund der sehr starren Anforderungen √ºber die Projektdauer f√ºr gro√üe Organisationseinheiten. Dort ist die Etablierung von Scrum aufgrund der oben genannten Nachteile oftmals schwierig. \nDas Spiralmodell macht es aufgrund der starr vorgegebene Zeit und Budgetstruktur f√ºr die h√∂heren F√ºhrungskr√§fte leichter einen √úberblick √ºber das Projekt zu behalten. \n\nSeine Vorteile spielt Scrum in der schnellen Anpassung an ge√§nderte Anforderungen und die hervorragende Kommunikation innerhalb des ScrumTeams aus.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 5620098,
      "meta": {},
      "text": "Core essence: \nScrum is an iterative incremental software development process and one of the key frameworks in agile methodology, commonly used for agile software development. The works are break down into Sprints that should be completed in time-limit iterations. \nThree key roles in Scrum include the Product Owner, Scrum Master, and the Serum Team Members. There are three artifacts: Product Backlog, Sprint Backblog and Incremen, and important activities are Sprint planning meeting, Daily Scrum, Sprint review, Retrospective meeting.\n\nAdvantages: \n1. Scrum has the advantages of Agile. It is very pragmatic and is able to respond to change quickly. Scrum derives changes through continuous communication and feedback, and achieves product iterations in a short period of time. For example, if the team gets a new reqiurement during a sprint, they can bring it up in the next iteration planning meeting.\n2. Scrum is people-centric. It is more flexible and takes full advantage of each developer's strengths and mobilizes everyone's enthusiasm. For example, through daily scrum team memeber get to know what everyone is doing and well communicate about the development.\n\nDisadvantages:  \n1. Scrum ignors the importance of documentation. It emphasizes communication instead of documentation. But for testing, for example, test case documentation is essential. \n2. Scrum Team communication might be difficult. As Scrum Team Members are high-connected but it is difficult to ensure that the team members does not change at all. Or for example, there are face-to-face restriction sometimes.\n\nComparision with the previously used Spiral Model:\nUsing Spiral Model, the client is always involved in each phase of development, ensuring that the project does not deviate from the right direction and that the project is manageable. Spiral Model emphasis on risk analysis for software development and its design is flexible, allowing changes at all stages of the project. \nUsing Scrum, the client may ask team to add new features without interruption, resulting in going beyond the original scope of the project. But Scrum meets the needs of the client by delivering useful software quickly and consistently, and meets the needs of frequent changes to the project.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620346,
      "meta": {},
      "text": "Scrum ist ein agiles Software development lifecycle model, das hei√üt es ist speziell darauf ausgelegt, auf √Ñnderungen schnell und effizient zu reagieren. Der Develompment process wird in mehrere Sprints eingeteilt, die, im Gegensatz zu dem Spiral Model, jeweils eine konstante Zeit (2-4 Wochen) dauern und in dieser Zeit arbeitet das Development Team an den vorher f√ºr den Sprint festgelegten Aufgaben (Sprint Backlog) und hat zus√§tzlich t√§gliche kurze Meetings, um am Ende ein potenzielles shippable Product zu bekommen. Aufgaben, die in der Zeit nicht geschafft wurden, wandern zur√ºck in den Product Backlog und k√∂nnen beispielsweise f√ºr den n√§chsten Sprint gew√§hlt werden.\n\nIm Sprint-Planning-Meeting wird der n√§chste Sprint geplant, daher ist leicht, neue √Ñnderungen mit einzubeziehen und das Development agil zu machen. √Ñndert ein Kunde beispielsweise seine W√ºnsche, dass die Website jetzt nicht mehr nur f√ºr das Anschauen von Produkten sein soll, sondern auch f√ºr den Kauf, k√∂nnen diese √Ñnderungen auch w√§hrend des Prozesses mit einbezogen werden. Man steht mit den Kunden dauerhaft in Verbindung. Dies geht beim spiral model nicht w√§hrend einer Aktivity, da es zu den iterativen Models geh√∂rt.\n\nBei Scrum wird au√üerdem viel Wert auf transparente Kommunikation im Team und mit den Kunden gelegt. So tragen t√§gliche Stand-Up-Meetings, das Sprint-Planning, das sprint review & Retrospective dazu bei, dass jeder im Team wei√ü, was gerade der Stand der Dinge ist und wer welche Probleme hat. Damit kann man sich leichter helfen und der Scrum Master und Product Owner sind immer auf den neusten Stand. Die regelm√§√üige Kommunikation ist im spiral model nicht so stark vertreten (insbesondere keine daily stand-up meetings).\n\nJedoch ist es besonders f√ºr den Manager schwierig einen Gesamt√ºberblick √ºber das komplette Projekt zu bekommen. Die Kosten- und Zeiteinsch√§tzung ist deutlich schwieriger als beim spiral model. Hier wei√ü man n√§mlich, dass es 9 iterations √† 4 activities gibt. Wenn ein Requirement beispielsweise doch l√§nger braucht, weil der Kunde vorher nicht einkalkulierte √Ñnderungen will, ist dies bei Scrum schwer zu planen.\n\nDie Kommunikation kann allerdings zu einem gro√üen Overhead f√ºhren. Wenn diese nicht gut strukturiert ist und in einem zu √ºberm√§√üigen Ma√ü verwendet wird, kann sehr viel Zeit draufgehen. Dies gilt auch f√ºr das Sprint Planning Meeting. Man muss Erfahrung haben, um gut einsch√§tzen zu k√∂nnen, wie lange man f√ºr eine Aufgabe braucht. Dieser gro√üe Organisationsaufwand sind beim spiral model nicht vorhanden und die Zeit wird f√ºr die Activities verwendet.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5620944,
      "meta": {},
      "text": " Scrum is a technique/approach of agile methods(used when requirements change and technologies are adopted) which deal with these changes by focusing on small product increments, after each ->  progress is reviewed, lessons are learned and the project organization goals are adjusted accordingly. Scrum defines three roles: product owner, scrum master and scrum team and as a process is characterized by short iterations(sprints), repeated regularly- within a certain period of time(typically 30 days), during which a potentially deliverable product is developed, until the end when the team delivers the product. \n\nAdvantage: -\nadaptability and flexibility: scrum can be used in a variety of environments, work is done simultaneously where everything changes during the project, such as constantly testing the code.  Ex: Dutch Railways managed to deliver a working system  within a much shorter time after using Agile approach: the software was already built but needed to be adapted and separated in smaller parts so as to meet the requirements faster:after separating the work of the teams was more efficient. Automated testing also allowed them to deliver tested software at the end of each Sprint, without regression bugs. Comparison Spiral Model: easy to change requirements and documentation and features added in a systematic way.\n\n-Development teams. Scrum requires pair programming and all the members interface closely with each other, where their main goal is to complete as soon as possible useable segments of prioritized work that will have business value. Result: faster coding with better quality. Ex: Dutch Railways: The project required resources in both India and the Netherland, since with only the second it didn't work: so the Indian developers returned home and the staff added resources in both places to create two Scrum teams, sharing a single tester. Spiral: doesn't work well for smaller projects\n\nDisadvantages: - Extensive training(well-trained and skillful team to implement):Ex: the costumer required very extensive documentation written in Dutch but the developers were not familiar with the language so they had to hire a technical writer which lead to unplanned extra costs. Spiral: skills required need expertise and costs are high\n\n- Difficulty on scaling: adapting scrum framework in larger project is challenging. Ex: Product owners wrote extensive requirements documentation in dutch which led to organizational programs and a lot of coaching was required after to keep requirements docs separated from the backlog. Spiral: very good for large projects\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621245,
      "meta": {},
      "text": "What is SCRUM? SCRUM is an agile software development framework, that uses so-called sprints for a high productivity. In a sprint, every team member except the Product Owner (Who ‚Äúshould buy‚Äù the product at the end) gets tasks that have to be done in the sprint. Such sprints usually take about 1 to 4 weeks. Also, there is a daily team meet up where the team talks about what was successful, what not and where they need help.\n\nA big advantage of scrum is the daily meetings, because in that way you can solve blocking problems fast with the help of your team members. For instance, you are debugging a new python script that automates sales documents and there you just can't solve a problem. In that case, your team members can easily help you after the daily meet up. \nFor me personally, I don't understand why there is only one Product Owner, because the customer base is often big with several interests. Therefore, we require more than one opinion‚Äîbetter would be a hundred opinions! So, for example, one customer just wants to have a good documentation and another wants to get an API ‚Üí Several construction sites.\nBut SCRUM divides big goals like OKRs into partial goals that are easily to reach! Disadvantage: How to divide big goals into partial goals? Might be hard, looking at long-term projects with a goal to reach in 5 years. \n\nThe spiral model seems to me not to be optimized for ongoing processes, but software development is an ongoing process. SCRUM  as comparison is an ongoing process.\nAlso, when using the spiral model, you don't have partial goals that make it easier to understand the whole problem. \n\n\n",
      "score": 22.9,
      "language": "ENGLISH"
    },
    {
      "id": 5622689,
      "meta": {},
      "text": "Core essence:\nSCRUM is an agile software engineering method that allows for change throughout the entire project. This is done by only planning for the next sprint and afterward reevaluating the requirements, progress, and further steps to complete the project.\n\nAdvantages:\n(I)- Fast delivery of a working system (product increment) that can be shipped to the customer. After each Sprint there will be a version, which is shippable\nExample: EIST project: After our first sprint, we had software that could run and potentially be shipped to the customer (a working server)\nVs. Spiral: Spiral will also create some software after each iteration yet it is not designed to work yet\n\n(II) - Change in code structure and design throughout the entire project. Change is embraced as a firm part of software engineering\nExample: EIST project: We have a Server that provides API interfaces with a given signature. These signatures were agreed upon at the beginning. Of course, later on, some changes had to be done to the signatures.\nVs. Spiral: Change can only be accounted for at the beginning of each phase\n\nDisadvantages:\n(I) - Code quality and especially documentation can take a hit when using SCRUM since working software is valued above quality and documentation\nExample: I was given a task to create a database and API interface in Python. I could set the entire thing up and pass it on to the next team. They had a ton of questions. These questions could have been avoided if I was given the time to write documentation\nVs. Spiral: Code quality is ensured by testing and rigorous planning at the beginning of each phase\n\n(II) - A lot of meetings throughout the project. You will have a daily SCRUM meeting, a sprint review meeting,  ...\nExample: At the same startup at which I implemented the database, we had daily Scrum meetings. Obviously, all software engineers had to be there. Therefore the time of the meeting was usually around 10 am and interrupted my workflow considerably\nVs. Spiral: \"One\" big meeting at the beginning/end of each phase afterward only implementation and validation\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644429,
      "meta": {},
      "text": "SCRUM is an agile and incremental process which consists of a series of iterations. In each iteration, a set of task from the before-created product backlog get selected and worked on. Hereby each iteration produces a minimum viable product.\n\n\nAdvantages:\n\n- time and resource-efficient:\n\tDue to the daily scrum meetings, every team member always has a clear picture of what to do and what to achieve on a specific day, so that no time gets wasted over the day.  For example, after implementing Scrum the team now has a fixed point in the day, where they think about their tasks and can discuss them. Before that, there was ongoing discussion what to do next which wasted time. \nThe spiral model can be very resource-intensive because it relays on time-intensive risk analysis in each iteration.\n\n-  human component: \n\tCompared to the spiral model, which focuses on the process. SCRUM also considers the people and how to integrate them.  For example, a team adapts  SCRUM  and by design, roles get assigned and the progress of individuals gets highlighted in the daily meetings.  This leads to a clear separation of roles and recognition of progress and therefore to a positive and productive team dynamic. \n\n\nDisadvantages:\n\n- large teams: \n\tDue to the highly agile nature with relays on clearly assigned roles and high communication within a team, teams should be kept small. But some tasks require more people and creating multiple teams reduces agility. For example, a development team would need 50 members to develop an operating system, which is too many for one SCRUM team.  Because the Spiral model only describes the process it does not limit the team size.\n\n- frustrating daily meetings\n\tThe daily meetings are an essential part of the process, but if there is a phase without change to the requirements the daily meetings can be obsolete. For example, a team member has a task assigned for three days, when there are no changes to his task the daily meetings only hinder him. As the spiral model does not regulate the meeting schedule, it does not produce such problems.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5645058,
      "meta": {},
      "text": "Scrum is a way to develop software in which the process gets split into small time intervals(sprints). Before the first sprint it is determined what the product has to do(product backlog). In each sprint there is a discussion about what has to be achieved in the sprint along with daily meetings to share information and in the end it is talked about what everyone has done in the sprint. The goal of each sprint is a working product increment.\n\nAdvantages:\n\t- There can be direct reaction to changes in the needs of the customer since there is constant review of \t\n\t  the backlog items\n\t\tCustomer wants something different -> it is addressed in the sprint meeting -> changes can be \n\t\timplemented in that sprint -> customer is happy\n\t- The creation of a product increment each sprint allows to show progress to the customer and detect/test \n \t   for Bugs early\n\t\tCustomer gets the product each sprint and can see the progress -> customer happy\n\nDisadvantages:\n\t- There is significant overhead due to the structure of scrum\n\t\tAdditional employees(Scrum masters) have to be hired\n\t-",
      "score": 54.2,
      "language": "ENGLISH"
    },
    {
      "id": 5619476,
      "meta": {},
      "text": "Scrum is an agile technique for software and product development, where the main point lies on how to efficiently deal with change. Therefore the development is done in so called \"sprints\", a certain time frame for developing, where the result is already a potentially shippable product increment. The main point is adapting to change and always improve this increment.\n\nOne advantage of Scrum is the parallel development of functionality resulting in a potential product each sprint, should no errors occur. If for example a new feature is part of the goals of a current sprint, the team can immediately see if it conflicts with the current product increment and fix it. In the Spiral Model risks of objectives are determined and by solving them a prototype is created, which is not that adaptable when it comes to difficulties as the project is terminated otherwise.\nAnother advantage is that every team member contributes to the project with daily scrum meetings, where everyone reports their accomplishments and difficulties, which improves team work itself. If for example one member experiences difficulties, they aren't afraid to reach out in the meeting, as it is encouraged to do so. In the spiral model the focus lies more with the risk handling in each iteration, not with distributing work equally.\nBut a disadvantage follows from this team focus. If it is highly important that each team member carries their weight, lack of cooperation from one person is enough for the project to suffer consequences in regards of time management for the sprint. For example one member neglects testing a feature enough, which causes errors implementing the feature.  In the spiral model risks get priorities, which brings more attention  to these eventual faults.\nLastly the amount of sprints can escalate, because no end-date is set. Every sprint the product backlog might grow. As example the team spends a whole sprint to make some quality of live changes in the product even though it's not necessary. In the spiral model the number of iterations is set, which urges the team to work more time efficiently.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621189,
      "meta": {},
      "text": "Scrum is a project management framework within which teams can address complex adaptive problems, while delivering products of the highest possible value within time-boxed iterations, called sprints.\nA scrum team consists of a Product Owner who orders the work for a complex problem into a Product Backlog, a Scrum Master as a facilitator for the scrum process, and the scrum team that turns a selection of the work into a product Increment during a Sprint. \nAt the end of the sprint, the team holds two meetings: the sprint review which demonstrates the work done to stakeholders, and sprint retrospective which enables the team to reflect and improve.\nThe spiral model, is an iterative model with 4 major activities in each iteration, making it more flexible than the classical waterfall model. However, this framework uses one time planning. This approach makes it less flexible for change.\nScrum can help teams complete project deliverables quickly and efficiently as it divides large projects into easily manageable sprints. For example, larger projects tend to run over time as people tend to not to work enough until the deadline is approaching. By dividing a large project into smaller sprints and forcing people to deliver results in each sprint, larger projects become easier manageable and inefficient procedures can be spotted quickly.\nAs an agile framework, developments are tested during the sprint review and customer feedback is adopted, enabling changes based on feedback a lot more easily. For example, in software development, requirements often change as customers may require new features. Scrum enables develop to adapt to changes and incorporate feedback very easily into the software development process.\nHowever, Scrum delivers product increments that come with flaws, making this framework less suited for products with high safety requirements. For example, for airplanes it must be guaranteed that they are 100% safe. This makes airplane development only suitable for longer waterfall releases.\nAlso Scrum needs team members who are experienced with agile methods. For example, if projects members are not willing to work according to the method or do not understand it properly, it will fail.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621408,
      "meta": {},
      "text": "1.\tWhat is SCRUM?\na.\tSCRUM is an agile way of developing, most used for developing software. The idea is to separate the development process into sprints, which always end after a predefined period with a (theoretical) shippable product. This is achieved by focusing on just some of the requirements in each sprint.\n\n2.\tAdvantages of SCRUM\na.\tImproves customer satisfaction\nBy receiving feedback regularly, it is easier to find issues earlier in the development process and the customer is more involved in it. Users can try out the Software and can formulate new requirements that were forgotten in the initial requirement analysis. This is also a strength of the spiral model.\nb.\tFlexibility\nUsing sprints and the sprint backlog makes the development process more flexible and adaptive to change. Nothing is set in stone and different approaches can be tried out if necessary. If the team comes up with a better idea to solve something, they can just swap out the tasks in the sprint backlog during the review. This is also an advantage of the spiral model, however, SCRUM is more flexible, because of the higher frequency and number of SCRUMs.\n\n3.\tDisadvantages of SCRUM\na.\tExtensive training is necessary\nThe SCRUM approach is very different from traditional project management. Therefore, the employees working on the project need to be trained for their roles. Especially the SCRUM Master and Project Owner. If a big project has 100 teams, a lot of employees must be trained to do all the SCRUM Review meetings and SCRUM of SCRUMS etc. The Spiral model is closer to traditional PM and does not require that much training effort in advance.\nb.\tRisk Management and Holding deadlines\nSCRUM doesn‚Äôt have build-in risk management and also no mechanism that ensures the project holds its deadlines. At the end of each sprint, there is a project that has some of the functionality implemented, but it is difficult to plan 3-4 Sprints ahead. If a project is big and takes a long time it is unclear where problems will appear. The Spiral has built risk management but also has problems with fixed deadlines.\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644657,
      "meta": {},
      "text": "SCRUM:\n\nGenerally there is three main frameworks to a software developement lifecycle: linear, iterative and agile. SCRUM is an agile project management framework. It describes a set of roles, meetings and tools to help the structure of a teams work.\n\n\npro/con:\n\nSince SCRUM is an agile model it is very good in dealing with frequent changes. One example of such changes might be that suddenly the requirements for the project change. SCRUM because of its sprints is very good in dealing with such changes while minimizing the risks included with such sudden changes.\n\nIn SCRUM the role distibution, meetings and etc. are predefined (to some extent).\nThis is an advantage of SCRUM because less time of a project has to be dedicated to defining and thinking about role distribution or meeting-setups and more of the time can go into developing the project.\n\nA disatvantage of SCRUM is, that there is never really a clear-cut view on how much work there is left to finish a project or how much percentage of work is finished for example. E.g. the manager is nerver really able to tell where in the projects lifecycle the developement is and thus can't communicate to e.g. investors that clearly.\n\nA second disatvantage of SCRUM is that it may be difficult to scale: Using SCRUM for large project may be hard to scale, since everything needs to coordinated precisely which would require some training and with that additional costs.\nAn example would be the difference between the weekend-project of a group of friends and a large scale company with many employees. One would more easily adapt SCRUM than the other.\n\n\ncompare to spiral:\n\nPro - 1:\nIn SCRUM if you haven't finished something in the duration of a sprint, you can revisit this in the next sprint, whilst in the spiral model you cannot go back to revisiting an already done step.\n\nPro - 2:\nIn the spiral model the team has to use some time to think about the framework of their group work (meetings, roles, etc.) whilst in SCRUM this is mostly predefined.\n\nCon - 1:\nIn the spiral model there is more of a view on what is left to do for the project to be finished. Since it's a model with generally 9 steps a 4 iterations, you can always see where you are in the lifecycle. For SCRUM see above!\n\nCon - 2:\nHere it's the same as with SCRUM already though the spiral model is still a little easier to scale than SCRUM, since of its \"more linear\" model than SCRUM.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5619861,
      "meta": {},
      "text": "Scrum is a methodology that is used in agile software development, to get into a reactive software lifecycle. It essentially creates software in so called sprints that can last upto a month on which you focus on parts of the requirements that are chosen in beforehand. After the sprint, there should always be a shippable product of software in the pipe, and the costumer can decide furthermore steps such as a new sprint, changes to the requirements (the product backlog) and software or the shipping of the deliverable. \n\nA big plus of Scrum is its iterative nature. As the problem environment often changes during the software development cycle there exists a constant need of adaptibility. With Scrum, this need is satisfied every 2 to 4 weeks on the sprint review meeting. An example would be a drone-software for the Bundeswehr, that through politics gained a huge increase in money resources, with new requirements in hand. The customer can adress these changes of circumstances after the sprint which will influence the planning of the next one.\n\nAnother advantage is the daily scrums on which the different development branches update each other daily, which prevents miscommunication. An example for such miscommunication would be a backend that doesnt know about a false request from the frontend and isn't able to handle it correctly. \n\nA disadvantage of scrum, is that its not fully agile, as for when a sprint starts the sprint backlog is fixed for the duration of the sprint. An example for this being drastic, might be a hospital software that has the need of corona-data, because of a sudden pandemic, that cant wait until the end of the sprint. \n\nAnother disadvantage might be the periodic delivery of the software product, because sometimes realtime updating is better. An example would be a drastic software bug in the EIST-Phone 11. If the software-bug is fixed on that day it doesnt matter that much. If the bug lasts until the next big update of the EIST-OS 11.2 it might be too late and some people might have changed to the competition. \n\nThe spiral model is iterative as well, just as scrum. The daily scrums are no part of the spiral. Communication between the team might not be of great quality and quantity. The development process is also not structured out to the day and leaves room for interpretation.\n\nThe disadvantages of scrum are increasingly disadvantegous in the spiral. As a result of the 2-4 weeks period scrum is more agile compared to the spiral model which needs upto 9 different development phases to be seen as whole product. The delivery of the spiral model is thus also more periodic and less concurrent than Scrum. \n\nThank you for listening!",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620249,
      "meta": {},
      "text": "Scrum ist ein Vorgehensmodell des Projekt- und Produktmanagements, insbesondere zur agilen Softwareentwicklung und umfasst Meetings, Tools und Rollen, die gemeinsam das Strukturieren und Managen der Teamarbeit unterst√ºtzen.\n\nEin Nachteil von Scrum ist, dass die Wahrscheinlichkeit, dass Projekte scheitern hoch ist, wenn Einzelpersonen nicht sehr engagiert oder kooperativ sind, das es essenziell wichtig ist, dass in den Sprints gut kommuniziert ist, damit jeder genau wei√ü, wer was macht und was zu tun ist. Wenn bei einem Sprint Meeting zum Beispiel nicht klar hervorgeht, wer die Datenbank implementiert, wird das ganze Projekt scheitern, da das Projekt ohne Datenbank nicht funktioniert. Bei den Spiral Model hat man hier das gleiche Problem, da es auch hier wichtig ist, das alle miteinander kommunizieren.\n\nEin weiterer Nachteil ist, dass t√§gliche Besprechungen manchmal die Teammitglieder frustriert weil sie noch nicht fertig geworden sind mit ihrer Implementierung oder einfach die Implementierung noch weiter ausarbeiten m√∂chten. Zum Beispiel ist es sehr frustrierend, wenn jeder im Meeting vorstellen kann, was man implementiert hat, aber man selber nichts zeigen kann, da man eine sehr aufwendige Aufgabe hatte und diese einfach mehr Zeit braucht, weshalb man noch nicht fertig ist. Dieser Nachteil f√§llt bei dem Spiral Model weg, da man sich hier immer genau auf die Probleme oder Risiken fokussiert.\n\nScrum kann Teams dabei helfen, Projektergebnisse schnell und effizient abzuschlie√üen, da Scrum das Vorgehen organisiert und die Aufgaben somit gut aufgeteilt werden k√∂nnen. Beispielweise kann bei der Entwicklung einer Web-App Scrum dabei helfen, die Arbeit aufzuteilen und so kann sich zum Beispiel ein Team mit Frontend, eins mit Backend und ein anderes Team die Datenbank implementieren. Somit spart man Zeit, weil kein Team die Arbeit eines anderen Teams macht und somit wird keine Arbeit unn√∂tig doppelt gemacht. Auch ist dies ein Vorteil f√ºr das Spiral Model, da auch dieses dabei hilft, Projektergebnisse schnell und effizient abzuschlie√üen.\n\nEin weiterer Vorteil ist, dass kurze Sprints viel einfacher √Ñnderungen auf Basis von Feedback erm√∂glichen, da man sich in kurzer Zeit immer wieder Besprechen kann und somit das weitere Vorgehen planen kann. Zum Beispiel kann es sein, dass ein Kunde bei einem Onlinelieferservice noch die M√∂glichkeit dazu haben m√∂chte, dass Bewertungen geschrieben werden k√∂nnen. Das kann dann im n√§chsten Sprint direkt aufgenommen werden und die einzelnen Teams k√∂nnen das dann im n√§chsten Sprint implementieren. Dies ist bei dem Spiral Model nicht so leicht wie bei SCRUM, da man erst die n√§chste Iteration startet, wenn ein Risiko beseitigt wurde.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621735,
      "meta": {},
      "text": "The strength of Scrum is its ability to adapt.\nBecause there is frequent and regular exchange between team members, it can react quickly to new requirements and problems.\nThe first advantage is Large projects are divided into easily manageable sprints. This turns a huge confusing task into several understandable and doable subtasks. A car infotainment system does not have to be implemented as one big whole, but is divided into individual areas, such as navigation, window regulators, AndroidAuto and so on.\n\nAnother advantage is that it is well suited for projects whose requirements change quickly and often. Since there is a daily exchange between the teams, a subsystem or the whole project can be adapted quickly. So if during the development process it turns out that the hardware has been changed and the exterior mirrors should now also be controlled electronically, this information can be forwarded to the responsible team within 24 hours and implemented.  \n\nBUT the likelihood of a project failing is high if the individual is not very committed or cooperative. so if individual teams of team members forgo this exchange, they not only make life harder for themselves, but for everyone else as well. So if the team responsible for the MCU doesn't know what interface the window regulator team needs, complications are bound to arise.\n\nIt can also have disadvantages for motivation, because it happens that individual teams make particularly good progress and others particularly poorly. This leads to resentment on the part of the slow team and can further reduce productivity. It is much easier to write a controller for a wing mirror than for a navigation system, but both have to be done. \n\nThe first advantage of Scrum regarding the simple division of a large project into many smaller projects is not used in the Spiral model. here the project is viewed and worked on as a large whole.\nThe second advantage, the fast adaptation to changed conditions is just a disadvantage of the Spiral Model, which can be adapted only minimally or not at all to new conditions.\nThe first disadvantage of Scrum, i.e. the possibility of being held up by uncooperative colleagues, is just as present in the Spiral model but can be balanced more easily, since a single large team works on the project together. individual failures are therefore recognized and eliminated more quickly.\nThe second disadvantage, the motivation of the teams, can also play a role in the Spiral Model, but as just mentioned, such discrepancies arise more difficult in a large team and can also be balanced more easily.\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622311,
      "meta": {},
      "text": "SCRUM is an agile software lifecycle model. At its core are the so called sprints, 2-4 week long timeslots in which potentially shippable product increment is created. These sprints are carried out until the product backlog (collection of items to be implemented) is empty. Every day an \"Daily SCRUM\" is held, a short meeting where every team member (usually teams of 5) presents what he did the last day and what he wants to achieve this day. \n\nAn advantage of SCRUM is its agile nature, which makes it effortless to respond to environmental changes as opposed to the spiral model, which can only react to changes between activities, but not within them. For example if a SCRUM Team is developing a singleplayer game, but the customer suddenly wants to add a multiplayer feature, the product owner can take this new requirement into the product backlog and in an upcoming sprint this item can be implemented.\n\nAnother advantage is that the effort of each team member is visible during the daily SCRUM meetings in contrary to the spiral model, where such daily meetings don't exist. For example if a team member has reported over several daily SCRUM meetings that he has only implemented very few and easy items, it becomes apparent that he's not contributing enough to the project and that he needs to work harder.\n\nA disadvantage is that the daily meetings can put a lot of pressure on the team members, whereas in the spiral model there aren't daily meetings. For example if a team member had problems implementing a task and worries about having nothing to present in the daily SCRUM, that can lead to a lot of pressure and to for example burnout. This would in turn affect the team negatively because the loss of a team member mid project would be devastating.\n\nAnother disadvantage is that it requires a small team size of 4- 8 people, compared to the spiral model, which doesn't dictate a specific team size. For example if a company has worked in teams of 25 people so far, a lot of potentially expensive restructuring would have to take place in order to be able to use SCRUM.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622984,
      "meta": {},
      "text": "The core essence of scrum is \"solving customer problems\", \"reflection\" and \"relationship\". By working agile and close with the customer, the customer can decide which features he needs for his product and not by putting them into the product backlog. Furthermore by having sprints and working agile you can easily reflect what went good and what went bad and so you can improve that what went bad in order to have a better product in the end. But all together do only work when you work as a team so relationship is also a  important essence of scrum.\n\nOne advantage of scrum as it was mentioned in the core essence is that scrum is a agile model where you can easily change the backlog so when you need something to add or to remove it's easily possible with scrum.\nAnother advantage of scrum is that you can devide large projects into easily manageable sprints. Therefore, an example would be when you want to create a bigger website, you can say that you have a first sprint where you have the main construct only  but already a shippable product and in the subsequent sprints you implement more and more functions and features for the website until you have finished the product.\nIn comparison to the spiral model the advantages of scrum are agile and the spiral model is an iterative model. So you are less flexible with the spiral model than with scrum as you can see in the advantages. Moreover you can' t devide large projects into smaller pieces as easy as with scrum.\n\nOn the other side you have the disadvantage that you are dependent on your team because when someone leaves in the middle of the project, it can have a huge negative impact because scrum does only work when you have a complete team.\nAnother disadvantage is that the chances of project failure are high because of the commitment and cooperation of some team members and the explaination of the first disadvantage. \nIn comparison to the spiral model you are way more dependent on your team because in scrum you work more intensive with them than in the spiral model.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5644663,
      "meta": {},
      "text": "Scrum is a framework that helps teams to iteratively develop a product in a structured manner with small product increments. The Product Owner is responsible for the priorization the items in the Product Backlog, which the Developers then choose to put into the Sprint backlog for the next sprint. The Scrum Master is responsible for organization and creating an efficient environment.\n\nScrum - Advantages:\n-> frequent exchange of information between participants of daily scrum meeting\n- Example: Traditional teams met once or maybe twice a week to share their information to other people, which makes it difficult to react to fast changing environments\n- Spiral Model: Communication is also based upon frequent stakeholder communciation but not continuously and instead on demand\n\n-> shippable product increment after each sprint makes it easy to find bugs after each sprint\n- Example: Traditionally companys used to integrate their components in a big bang integration, which often led to many problems in late product stages, in SCRUM they get integrated after each sprint\n- Spiral Model: The spiral model is similar structured with a cycle vs. an iteration in SCRUM but the main focus in SCRUM is the content of the backlog while in the spiral model it is focused on risk management.\n\nScrum - Disdvantages:\n-> SCRUM with large teams doesn't really work, because time in the daily scrum meeting is very limited to 15 minutes\n- Example: In big meetings in companys there would be the need for quite a lot of organization, commitement of every team member, but the outcome of the meeting would be very inefficient\n- Spiral Model: The spiral model is very suitable for large and long projects since it involves frequent risk management\n\n-> Scrum needs extensive transformation efforts in companys to really adapt to the SCRUM framework\n- Example: To change the processes within a company needs extensive training of every member to fully adapt to the mindset of agile working with SCRUM\n- Spiral Model: The complexity of transforming a company to work with the spiral model is very similar to SCRUM since it also needs much training to cope with the high complexity and the risk management",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644706,
      "meta": {},
      "text": "Scrum is a framework that helps developers to deal with complex problems and to create high-level deliverables efficiently. The essence of Scrum is a empirical process, which means very member involved in this Scrum learn from their own experience in the development. Since serveral sprints play an important role in a Scrum, a project with Scrum structure can be more agile and adapt to the changes without much efforts.\n\nAdvantage 1: The team can frequently get the feedback from customers and adjust their work. After every sprint the developers can push a product increment to the customers, who will check the potential results conform to their requirements or not and add new requirements if they want. In the Bumpers example I can deliver the UI to the customers after a sprint, if the customers are not satisfied with the sound effect, I can reimplement it in the next Sprint.\n\nAdvantage 2: The works of every individual is more visible. Before starting the work everyday the team will have a daily scrum, on which everyone introduces the results they made and the following works they are going to do today. So everyone is well informed about the status of the development, the results, the coming tasks and the potential difficulty.\n\nDisadvantage 1: Scrum is not very suitble for a large team. The size of the team must be restricted. If my Bumpers team contains 50 developers, it is really hard for the manager to allocate tasks and collect information from everyone. Besides, every team member is not able to keep up with the updates of the increments and the changes.\n\nDisadvantage 2: Any change of the crew leads to a problem. If anyone leaves from my scrum, it is a problem to reallocate his work and brings additional costs. For example, the UI designer of Bumpers left from my scrum, I have to  read his code and even learn JavaFX as well.\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620900,
      "meta": {},
      "text": "Core essence of SCRUM:\nScrum is a technique to manage and perform software development in an agile way. It can tackle modern challenges by being very adaptive and open for changes. \n\nPro/con arguments:\nThe main advantage of Scrum is that due to the partition of the whole development project into small Sprints and thus react to changes the future user might address. \nAn example might be a bank that wants to introduce a new more user-friendly banking experience for normal Giro bank accounts. A software company was selected to do this and after some implementations and increments the bank states the need to also support crypto currencies within their new software. In an agile process like Scrum this can now easily be added to the product backlog and then be implemented.\nIn the Spiral model the work is also split into chunks and can be done by the choice of the developers.\n\nAnother valuable advantage of Scrum is the prioritization of tasks. It is easily possible to develop certain items from the product backlog with a higher priority than others.\nHere an example is that a customer of a software company needs a product from the product backlog much faster than expected thus its just moved up the prioritization and gets implemented right in the next sprint. \nSince the spiral model does also not assume a fixed order it is the same here.\n\n\nA disadvantage Scrum might have is the loss of time when there are too less items planned to develop in a Sprint.\nAn example here might be that a software company has to develop a new logistics system for Amazon and a developers task is it for the current sprint to program the first part of the conveyer belts. He is finished with this task mid sprint as the time requirement of this task was not examined correctly and then he does not tell his team members because he fears to get new tasks to do if he does so.\nIn the spiral model this risk is the same since also here it is up to the users of the model to decide how much they want to do in one iteration.\n\nAnother disadvantage is the very time consuming communication expense. This is because there are many meetings where too much time might lie on the planning rather than on the actual implementation action.\nFor example team members might get stuck in endless discussions about something in the meetings.\nIn the sprial model there are less meetings so also the risk of losing much time there is lower.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621314,
      "meta": {},
      "text": "The goal of SRUM is in essence to facilitate software development through scheduled interruptions of constant durations, called sprits. The project starts with a user story describing the user's way of operating and needs and after each sprint, a new iteration of a potentially shippable product increment should be presented. Each sprint focuses on items of the product backlog which are typically requirements of the product.\nWith SCRUM, teams are able to complete project deliverables quickly and efficiently. If your team works on a food delivery app and the customer wants to give you feedback, it is very easy to adopt this through having a potential shippable product increment after every sprint meeting. The Spiral Model usually includes a division into three to four phases with every phase including four major activities (determination of objectives, alternatives and constraints; evaluating alternatives and identifying risks; development of a prototype ; evaluation of the results including planning of the next iteration).\nSRUM also helps to divide large projects into easily manageable parts through Sprints. If your teams wants to build software for a complex problem, defining a product backlog and conducting sprint meetings helps. As previously mentioned, the Spiral model includes three to four phases. In every phase, a new prototype is built and advanced.\nHaving fixed meetings or even daily meetings can present a disadvantage of SCRUM. For example, some team members could only have achieved parts of their assigned tasks due to various reasons and presenting their poor progress can then lead to frustration. The Spiral Model does not require fixed meetings. There are meeting during each phase but the individual phases can certainly differ in length.\nWith many smaller deadlines being scheduled (sprints), SCRUM does not offer specific support to meet the project's overall deadline. For example, when you have problems during one of the last Sprint meetings, you might not be prepared well enough to meet the final deadline. Once the operational / final prototype is built, the Spiral model focuses specifically on testing and may help a little bit better to work towards the final deadline.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621470,
      "meta": {},
      "text": "Scrum is the technique, which allows to quickly resolve unforeseen changes in the project and helps teams work together. Scrum team members hold meetings (Project kickoff meeting, Sprint planning meeting, Daily Scrum meeting, Sprint review meeting, Sprint retrospective), use specific artifacts (Product backlog, Sprint backlog, Potentially shippable product increment), and take on specific roles (Product owner, Scrum master, Development team) to organize and manage work. During the Project kickoff meeting Product owner create and manage the product backlog, then the Development team led by the Scrum Master, plans the Sprint backlog from the tasks of each items from product backlog, after that, the sprint begins, where the sprint backlog will be completed, during the sprint the team meets at daily meetings, and after the sprint they meet at the Sprint review meeting, after which they determine whether the project is ready.\n\nAdvantages:\n1. Scrum is easy to understand. In compare spiral model is difficult to understand.\n2. In Scrum, production software is delivered regularly (weeks rather than months) compared to the spiral model because the number of stages is not known at the beginning of the project, so time estimation is very difficult\n\nDisadvantages:\n1. In the case of large software projects, it is really difficult to estimate the effort needed to start the software development. In compare to spiral model, which is recommended to use in large and complex projects.\n2. Insufficient documentation, lack of attention to the necessary design and documentation.In the spiral model, on the contrary, good documentation of the development process.",
      "score": 87.5,
      "language": "ENGLISH"
    },
    {
      "id": 5621982,
      "meta": {},
      "text": "Scrum is an agile software development lifecycle model which deals with frequent change.  A project is divided into several sprints in which previously defined tasks are completed in order to form a potentially shippable product increment. Frequent communication minimizes the risk of erroneous or ineffective task completion.\n\nA big advantage of scrum is its ability to react to changes: At any time the product backlog may change due to changed requirements of the customer or due to the detection of problems in previously completed tasks. In the Bumpers game for example \twas initially one collision type. Later the customer decided to enable a second one, so the implementation and the object design had to be changed. But in scrum this isn't a problem.\nThe spiral model is able to deal with changes between activities of the same iteration as well, but it isn't possible to make changes to prior iterations.\n\nAnother advantage of scrum is the creation of a potentially shippable product increment in every sprint. It is ensured that the current product is working by using continuous vertical integration. This means that errors can be detected and corrected as soon as possible and that they don't unexpectedly occur at the very end. In the bumpers game for example the movement of the cars could be implemented in the first sprint. The game can't be played at this time, but the movement of the cars does work and probably won't cause an error in a later sprint.\nIn the spiral model testing is done after coding. But if errors are detected so late, correcting them might be difficult.\n\nA disadvantage of scrum is that the sprint backlog can't be changed during a sprint. So if changes regarding to a task of the current sprint occur, the task must be stopped and continued or retried in the next sprint. That's the case e.g. if the customer of the bumpers game decides to change the detection of collisions while it is being implemented.\nThe spiral model has the same problem because it doesn't allow changes within activities.\n\nThe customer's possibility to change the product backlog might also be a problem: If the customer wants to have essential changes, maybe (almost) everything that was done so far, must be redone. If the customer of the bumpers game decides to want to offer an audio player instead, the previous work was for nothing and must be redone.\nThe spiral model doesn't have this problem: As soon as the requirements are determined, they can't be changed in later iterations.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620276,
      "meta": {},
      "text": "The notable difference in scrum ist that it can adjust it goals according to current developments way quicker. In Scrum sprints everybody does the tasks he's assigned to and afterwards a review meeting is set in stone in order to evaluate what can be done better by the whole team or each individual and how the product backlog is supposed to change to adjust to current developments. \n\nThe main advantage of scrum is it being agile development meaning you can easily change your goals if outside factors have heavy influence. Due to the sprint meetings (usually weekly, sometimes daily) one can easily see the progress that's being made by the whole group and goals can be adjusted accordingly. Another benefit is that each teammember is included in the whole project so he understands how they work together and can easily ask his team questions. The Scrum meetings are also a good timeslot to do this. \n\nThe disadvantages of scrum is that it usually requires each teammember to be capable of working alone and have experience in scrum before. Else he fails to communicate effectively and doesn't give good feedback in review meetings. Another problem with scrum is that it doesn't have such a definite deadline as other development styles and is very difficult to use as a larger group because communication is very important. So it is worth it to split into smaller groups and communicate in that way or just using scrum for smaller projects. \n\nThe Spiral Model isn't made to adapt to outside influences and if certain risks cant be solved the whole project is simply cancelled. This might be good because you don't follow the sunk cost fallacy but terminating a project due to that doesn't sound reasonable to me.  In this model you also dont have change in subcomponents.\n\nAs Scrum the spiral model isn't effective at giving a estimate when the project is finished. Compared to scrum the spiral model is better for larger teams because each point is discussed thoroughly. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621257,
      "meta": {},
      "text": "At its core SCRUM is a software engineering technique from the agile models and can deal with rapid changes in requirements. This is made possible by many short development cycles \"sprints\", where a potentially shippable product is developed. In each sprint specific tasks are taken from the product backlog, which includes all tasks and put into the sprint backlog.\n\nOne advantage of using SCRUM is that the team is very flexible, as they are only tackling a small number of items / tasks from the product backlog. The product backlog can therefore always be adapted, without creating delays. An example for this is when further requirements are discovered during development and have to be taken into account.\nIn the Spiral Model the team can also update requirements, but only after a whole iteration was completed, which might take longer.\n\nAnother advantage is having an early prototype of the deliverable. As mentioned in the first paragraph, each sprint creates a potentially shippable product. This product can then be reviewed internally, but can also be given to the customer or end-customers. An example is when a simple-to-understand interface is built and the development team can get early feedback if it is actually simple.\nThe Spiral Model also creates prototypes for each iteration, but there might be many of them, due to multiple risks.\n\nOne of the disadvantages is, that SCRUM teams usually have to be rather small (max. 10 people). For example, the daily SCRUM meetings, where every team member should give an update could take up a lot of time, if the team is large.\nThe team communication in the Spiral Model is not strongly constrained and therefore larger teams might be possible.\n\nAnother disadvantage is, that quite some time is lost with project management. Each sprint requires sprint planning, the daily SCRUM meetings, a spring review and a sprint retrospective. For example, considering a 1 hour SCRUM meeting each morning, 12.5% of an 8 hour working day are lost.\nAs mentioned above, the Spiral Model project management is not as strictly defined and can therefore be adapted.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621381,
      "meta": {},
      "text": "For SCRUM it is important to distribute roles: There is the Product Owner, who is the customer in most cases, then the Scrum master, responsible for organizing the whole SCRUM process and lastly there are the developers. The goal of SCRUM is to develop a product iteratively and have a potentially shippable product after each iteration, which are called Sprints and usually last for 2 weeks, during that time daily meetings are held to discuss the progress in completing the items of the Sprint Backlog, that have been agreed on with the product owner before each sprint. The Sprint Backlog is filled with items from the Product Backlog that is usually defined by the product owner before the first sprint.\n\nAn advantage that SCRUM brings the flexibility it includes through adaptive planning: The Sprint Backlog is defined new after each completed Sprint, so if one task becomes less relevant during a sprint, it will not be included in the next one. That is one similarity to the Spiral model, where changes can also be easily made even after development has already started.\n\nAnother advantage is the continuous feedback you can get from the customer. You can deliver a product after each sprint and the customer can then give feedback to see if development goes in the right direction. Again, this is pretty similar in the Spiral model, where the customer can evaluate the product in each phase.\n\nOn the other hand, performing SCRUM is very time consuming due to the high communication and alignment effort. Additionally to the daily meetings there is the Sprint review and Sprint planning meetings, which takes a lot of time. In the Spiral model it is very time consuming to get started, because after each iteration/ prototype you have to get new feedback from various sources on how to improve the product.\n\nLastly, a potential danger in SCRUM is a too unambitiously planned sprint, which can lead to time loss. For example if the Sprint Backlog is not filled enough. in the Spiral model the final goal is a finished prototype, so this kind of time loss can not arise, still time can be lost in the process of prototyping.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621450,
      "meta": {},
      "text": "SCRUM is a technique for developing software projects. It is done by through a sort of \"loop\", in which the team interacts with the product owner every day to update each other on the current standing of events. This process occurs in \"sprints\", usually periods of a couple of weeks in which goals are set to complete certain tasks.\n\nSCRUM has the advantage of being highly adaptable. Due to the daily meetings and the idea of \"returning\" to modify the product backlog, changes can be made to development as requirements change. As an example, when developing the bumpers game, it could occur to the product owner that he wants an option in game to change the difficulty during runtime. This would then discussed during a meeting and be added to the product backlog. This doesn't exist to the same extent in the spiral model since you don't revisit.\n\nAnother advantage of Scrum is parallelism-by dividing tasks between people and having them meet on the daily to discuss problems and progress, time can be cut significantly. A programm modelling the booking of tables in a restaurant by the user can deal with both the client side modelling the GUI and the server side implementing the REST structure simultaneously. The spiral model is sequential so this advantage doesn't exist there.\n\nOn the other hand, Scrum can be difficult to scale. Applying it to huge development processes requires a lot of coordination between different teams and sections of development. Take, for example, a large project developing and OS involving 20 people. Doing Scrum effectively with that many people in a short period of time is going to be virtually impossible unless you recompartmentalize teams, which also isn't easy. This can also be the case for the Spiral model.\n\nFinally, Scrum requires people who are experienced in using it. For example, in a team consisting of several inexperienced developers who are working on bumper cars, there could easily be miscommunication during a scrum because both parties think everything is clear, don't end up checking, and then the part of the software modelling the cars is developed twice due to overlap between developers. This is potentially an issue in the Spiral model as well, but not to the same degree.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622688,
      "meta": {},
      "text": "Scrum is an empirical process control model part of the agile methodology. Instead of planning the entire project, Scrum is structured in a way where a project is divided into different phases, called sprints, where each sprint consist of planning, executing, and evaluating a sprint. These sprints last 2-4 weeks and after a sprint is completed successfully, one ends up with a shippable product increment that can then be sent to the customer for feedback. \n\nOn the one hand, using Scrum to structure your project can improve customer satisfaction. Imagine the customer Lino who wants to be involved in the process. At the end of every sprint, one ends up with a product increment on which Lino can give his option. This leads to products that are constantly being adjusted to the customer's wishes. In contrast, the Spiral Model interacts less with the customer.\n\nSecond, Scrum allows a flexible way of processing. It is suitable for projects that lack initial requirements and therefore require a flexible way of handling. This is very helpful for customers like Leon who do not know exactly what they want from the start and can then see after each sprint how the product evolves and add requirements step by step. In contrast, the spiral model needs to know the requirements beforehand.\n\nOn the other hand, daily scrum meetings held to ask questions and to ask for help require a lot of time that can often be used more efficiently. If a team spends 20 min a day in a meeting, this means that they spend nearly 7 hours a month on it. In contrast, the spiral model only has one meeting per iteration and is, therefore, less time costly.\n\nMoreover, Scrum requires the use of small teams. The Scum methodology usually works best with teams of at most 10 people. Imagine Nicolas wants to use Scrum in his company that is employing 1000 people. While the spiral model does not limit the number of participants on a project, applying Scrum, means rearranging the employees into teams which is not always possible in big organizations.\n\n\n",
      "score": 70.8,
      "language": "ENGLISH"
    },
    {
      "id": 5623204,
      "meta": {},
      "text": "SCRUM consists of mixture of fixed meeting structures and open work which is used to self-evaluate the steps that were taken und improve the content of the meetings and work every time. The fixed meetings are needed to contain the structure but also to include changes as fast as possible. There are different backlogs where the main goals and short-term goals are defined and/or the work that is needed to be done.\nSCRUM is helpful due to the improved communication, since a lot of people are involved in a project and it is common that not everybody is on track and the daily meetings are helpful to get the people on track as fast as possible, not recognize it at the end of a sprint, or even later. Whereas in the spiral model the communication could and mostly should be less, especially during a planned activity and this could lead to more problems. An example would be if one employee is not really on track and on the way to miss his deadline, in the SCRUM model this can be seen way earlier and it can be reacted to this problem.\nAnother advantage is the reaction time to changes, even if these changes involve 'finished steps' since everything can be adapted fast and the product can be reworked at any time, whereas in the waterfall model this is not wanted. This is the most important advantage in comparison to the spiral models, since changes are the weak point of the spiral models and the structure of these isn't really able to handle the. For example if the customer wants the software to be able to handle devices like smartphones in the middle of the project it is way easier for the SCRUM project to immediately plan this change.\nA disadvantages of SCRUM on the other hand is the supervision of the progress of a product, especially for the management of a company or a division. Since there are no directly predefined steps that can show a percentage of the work that is done. In spiral models there are more predefined steps and it is easier for the management to overlook the progress as fast as possible. If the supervisor has to overlook multiple projects it will be harder for him to quickly see the progress and the point the team is standing at, when he spent the last days on other projects.\nAnother negative point is the added time the project needs or the lost time to really work on a project if changes are really seldom. All the meetings need a lot of time and even work to show what you've done and what you promise to do. This 'lost time' could also happen in a normal spiral model due to the meetings that are held there and the strict and old structure in companies using spiral models. An example would be a little project with a former customer where you can be sure that he just wants to have exactly what he says in the beginning and there won't be any changes.\n\nBases on last years submission with add-ons to the missing parts. https://artemis.ase.in.tum.de/courses/121/text-exercises/4341/participate/967692",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644307,
      "meta": {},
      "text": "The Product Development in Scrum, occurs in small sprints, each sprint has a constant duration. Scrum manages and controls software and product development, with rapidly changing requirements. Furthermore it improves risk management by improved communication, cooperation and the delivery of product increments. In Scrum the team roles are distributed to the Product Owner, Scrum Master and Team member.\n\n2 advantages of scrum:\nScrum helps team to complete project deliverables quickly and efficiently, the daily scrum meetings guarantee permanent exchange betweeen all participants of the scrum process to ensure everyone knows the current state of the project For example, without the daily meetings the information exchange is significantly more difficult because every developer would work for its one which increases mistakes and communication errors.\n\nAnother advantage of scrum is that being agile adopts  feedback from customers and stakeholders. The daily scrum meetings enable changes based on feedback a lot more easily. In vibrant or important projects it is of a key aspect to work feedback fast in because otherwise the project would be adopted to slow, which would prevent progress.\n\n2 disadvanteges of scrum:\n\nAdopting the scrum framework in large teams is difficult because the daily scrum meetings can get exhausting in large groups and frustrating. For example in a large group having daily meetings requires a large amount of coordination and commitment but the results of this meetings wouldnt be high because everyone only can take a few minutes. This is why scrum is limited only to few people.\n\nAnother disadvantage is that scrum often leads to scope-creep, duo to the lack of a definite end date. For example Feedback my be worked in until the scope of the project is uncontrolled due to continous changes.\n\n\nComparison Scrum and Spiral Model;\n\nUnlike in scrum where the documentaion and exchange is simple due to the daily meeting the Amount of documentation which is required in intermediate stagesin the Spiral model makes the management of the project a very complex affair.\n\nIn the Spiral model the requirements dont change during an iteration unlike in Scrum where feedback can be permanently worked in.\n\nWhereas the Spiral Model woks especially well for larger groups. Adapting the scrum framework in larger team is challenging.\n\nThe team in srum needs to embrace the methodology, this needs a communicative mindset and If the task is not well defined estimating project cost and time will not be accurate. In the Spiral Model this is not the case because the problem gets defined and there is not a need for a extremely communicative group.\n\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644822,
      "meta": {},
      "text": "SCRUM ist eine felxible, agile und adaptive Art der Zusammenarbeit, wo mit √Ñnderungen umgegangen und die Entwicklung von Sachen gemanaged, die st√§ndig √§ndernde Requirements haben und verringert Risiko der Misskommunikation, durch Kooperation. \nDie Arbeit wird in 2-4 w√∂chigeSprints aufgeteilt, wobei es immer zuerst ein SprintPlaningMeeting, bei dem aus dem ProductBacklog Sachen in SprintBacklog gezogen werden, die in diesem Sprint bearbeitet werden m√ºssen, worauf die Arbeitszeit folgt, sich das Team jeden Tag f√ºr ein DailyScrumMeeting trifft, umzu besprechen. Am Ende jedes Sprints gibt es potentiallyShippableProduct und ReviewUndRetrospectiveMeeting, wo der gesamte Sprint besprochen wird. Dies wiederholt sich, bis Produkt fertig ist.\n\nDurch die kurzen SprintsUndReviewMeetings, ist es leichter √Ñnderungen durch Feedback umzusetzen. Gef√§llt beispielsweise dem ProductOwner Design oder Umsetzung nicht, oder hat noch einen RequirementsChange, kann man diese direkt im n√§chsten Sprint √§ndern, lernen und diesen Fehler nicht mehr machen.\n\nSCRUM ben√∂tigt meist wenig FinanzielleMittel, da viel Kontrolle der Mitarbeiter und Dokumentation wegf√§llt, da man in den Sprint und ReviewMeetings bespricht. Beispielsweise muss der Projektleiter nicht den Mitarbeitern nicht immer √ºber die Schulter schauen und nachhaken, was gerade gemacht wird, angenehmer ist.\n\nDie Deadline wird oft √ºbersehen, da man immer nur den n√§chsten Sprint und nicht das gesamte im Blick hat. Beispielsweise hat man im Projekt immer nur daran gedacht, wie viel man diesen Sprint geschafft hat und nicht wie viel man noch machen muss.\n\nDie Anwendung des Modells auf gro√üe Gruppen ist sehr schwierig, da viel Koordination und Training notwendig ist. Beispielsweise war es schon im Projekt schwierig die Aufgaben passend aufzuteilen, sodass man nicht auf andere warten musste und immer etwas zu tun hat.\n\nGenauso wie beim SCRUM lassen sich √Ñnderungen, durch die PlaningPhase sehr gut in das Projekt einarbeiten und auch das ZeitManagement ist schwierig, da man auch hier nur eine Iteration im Auge hat.\n\nGegens√§tzlich zum SCRUMModel ist das SpiralModel sehr teuer, da es ein risikoorientiertes Model ist (der Erfolg eines Projekts ist abh√§ngig von der RiskAnalysisPhase(hierf√ºr werden teure Experten gebraucht)) und es klappt am besten mit gro√üen Projekten, da es sehr teuer ist, und meist nur gro√üe Projekten von gro√üen Firmen diese Kosten √ºbernehmen k√∂nnen.\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5619456,
      "meta": {},
      "text": "Scrum explained in some sentences is an agile model for software development. \nThe core of it is so have a \"box\" with all the features the product owner wants to have. These then gets transformed into real task that developers can work on, it is called the sprint backlog.\nThen you have a specific time frame \"sprint\" that is the same for everybody no matter what task they have for that week. In this time frame the team will have daily meetings to discuss on which points ther need to be worked on if somebody is stuck at any task and how to resolve it. At the end of the sprint the product gets incremented and the features worked on get added to the product.\nAfter on sprint the sprint backlog gets edited if necessary and another sprint start where every developer takes a task and works on it.\n\nAdvantages:\nHarsch deadlines: Due to the nature of the sprints there are clear deadlines for any task. It is not acceptable that any task takes longer then a sprint.\nAgile development: Due to the change of the sprint backlog after every sprint the development team can react to changes that the product owner wants to have. For example if the product owner wants to have a new button at the GUI.\n\nDisadvantages:\nPesonal loss has a huge impact: If somebody leaves during a sprint it cant affect the project. Because the task that he has just started is not done and has to be.\nAlot of time gets lost due to daily meetings: In just a week roughly 2 hours gets lost of every team member. \n\nHarsch deadlines dont fall into the spiral model it is more flexible when it comes to deadlines. Also the time that get lossed to meetings arent in the spiral model. ",
      "score": 52.1,
      "language": "ENGLISH"
    },
    {
      "id": 5619865,
      "meta": {},
      "text": "Partial Reuse of SS 21:\nSCRUM is an agile software development model, that deals well with projects with a lot of change. Since most of the work is done parallelly it can implement changing requirements quickly. The organization of the work into sprints, with many update meetings, allows for a more fluid workflow, better communication, and therefore better risk management. \n \nWorking in a Tech Start-up is flexible, and the requirements are ever-changing so SCRUM might be a better solution for the future.\n1. It focuses more on the members and tasks compared to strict process chains. These might cost more because more resources are being spent on long planning processes. (because when change occurs you have to go back to the finished process steps)\n2. It also encourages better teamwork which influences team efficiency.\n\nExample: A customer wants to change functionality. The new requirements are discussed in the next meeting with the SCRUM team members. Now they can implement the change rather quickly. As a consequence, user satisfaction is increasing as well as it sinks the cost since big changes are done at the moment and not when the project is already advanced too far.\n\nDisadvantages of SCRUM:\n1. It doesn't present nice milestones. Since the process isn't linear you cant easily look back on achievements and estimate what percentage of the work the team stands for right now - especially as you don't always finish items in the product backlog in every sprint or new functionalities need to be added due to changing customer needs. \nExample: This in practice might be discouraging for team members so the motivation to continue working on the product sinks and therefore the efficiency.\n\nAdvantage Spiral Model: It is very thorough and well defined in its steps, and estimates the risk carefully, which makes the risk estimation safe.\n\nDisadvantage: The extensive process can be costly and due to the risk assessment many projects might not make it out of one of the planning stages, even though in many tech projects the best mantra might be high risk, high reward.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 5620151,
      "meta": {},
      "text": "The idea of scrum is to partition the system development phase into smaller parts (sprints)  and create the final product in an agile way so that after each sprint a small portion of the wanted features are added. After the sprint there should exist a deliverable product which is working and already fulfills some requirements. To assure that there is a scrum master who manages the planning of all the different sprint iterations. \n\nPros:\n1) Visibility:\nAll members of the scrum team have a clear idea of the current situation due to the daily scrum meeting. This is especially important if the different members all concentrate on tasks that do not intersect with the others. e.g. is one member works on the GUI the daily meetings might help him understand the system better because other members who are working on data management explain how they achieve their goals. This prevents that in the end there is no one who understands the system as a whole.\n\n2) Complexity\nUsing SCRUM is relatively straight forward. Once you have the product backlog you iterate through sprint planning, execution and review. Compared to the spiral methodology which has 4 activities with 9 iterations each, its much more light weight and easier to understand. This is might be especially useful because we are in a startup environment and making the daily routines easier lets the developers focus on creating higher quality products.\n\nCons:\n3) harder to finish\nWhen using SCRUM a team might find it harder to finish a projects because the product backlog can be changed by the product owner during system development. Especially in a startup environment where the team has a lot of ideas for the system this might lead to the problem, where there are constantly added new features to the product backlog which results in continuously more and more sprints. With the spiral methodology this cannot happen due to finitely many iterations and a fixed deadline.\n\n4) difficult to scale\nSCRUM is difficult to scale because more people participating in a sprint means that it is harder for individuals to keep a good insight into the system. This contradicts the idea of daily scrum meeting which are used in order to keep everyone updated. Especially in a startup this might be problematic because using SCRUM might limit the growth of the company. The spiral model is good for larger projects however it might not be the best choice for a small scale company like a startup. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620369,
      "meta": {},
      "text": "Scrum is an incremental and agile development methodology, with an initial definition and analysis of the product requirements. In sets of 2-4 weeks each, called sprints, some of the requirements are implemented in smaller teams, which revise their progress every day. In a sprint review meeting the requirements can be changed/adapted and the potentially deliverable product increment created in the sprint, is added to the product so far to eventually fulfill all requirements.\n\nAdvantages:\n1) The short sprints provide possibility to adapt the product to the customers and stakeholders needs very easily.\nIn the spiral model, change is only possible, after the next prototype of the product is finished, which already costed lots of work and money.\n\n2) It is easy to monitor each team members effort, and overall progress with the daily scrum meetings. This allows for a better management process, and better assignment of resources, according to the priority of the requirements.\nThe spiral models progress is only visible after every iteration when the product prototype is finished and fully tested, which takes up a lot of time.\n\nDisadvantages:\n1) Scrum is hard to use with large teams, as meetings would be very hard to carry out every day. Additionally, the small groups make it only successful with experienced team members. \nThe spiral model allows for large development teams, as there are no repeated meetings required and the requirements don't change during the implementation and testing of the prototype.\n\n2) Scrum relies on full commitment of all team members, as unwilling and unmotivated workers can slow down the work during the sprint, which slows down or stops progress during the sprints. If a team member leaves during a project it is hard to replace him in time to continue the workflow for the current and upcoming sprints.\nAs the spiral model doesn't have timed phases, there is no dramatic drawback when a worker isn't fully committed, and the replacement of a team member can be done without causing damage to the development process.\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620610,
      "meta": {},
      "text": "Scrum is a framework with the purpose to support the cooperation within a team, for example consisting of software developers. It is often described as an agile project management framework that includes meetings, tools and roles, that all together improve the structuring and managing of the teamwork. A project is split into sprints that have a certain duration.\n\nOn the one hand, scrum scrum is very useful because of its flexibility, for example if you receive an unexpected change of the problem statement or an additional functional requirement during a sprint, by using scrum it is possible to adapt to changes. In comparison to the spiral model, each sprint defines a specific product backlog that adapts changes.\nIt also improves the effectiveness, because of the high amount of self organization. For example the team is split into smaller sub teams and each member of the sub team gets an individual exercise. The exercise has to be done during the sprint and is mostly self organized. The finished product of a sprint is presented to the scrum master afterwards and usually is not being interrupted during a sprint.\n\nOn the other hand scrum is maybe not the best solution in case the project is smaller. The classic way ()e.g. spiral model) may be more efficient. For example in a small project, in wich the requirements never change and the problem statement is defined finally in the beginning, it can be better to not use scrum.\nIn addition to that, scrum requires a certain amount of self responsibility of the team members. For example if sub teams within a sprint have a wrong constellation, it is very difficult to fix the problem during the sprint. An example could be that the team members cant help each other because the knowledge is unbalanced. By using the spiral model changes of the team constellation are possible more quickly.",
      "score": 64.6,
      "language": "ENGLISH"
    },
    {
      "id": 5644407,
      "meta": {},
      "text": "    First of all, Scrum is briefly a framework that benefits from agile technology and enables teams to solve complex problems. Scrum consists of meetings, role-sharing, high level of interaction both in the team and with the customer. Using scrum, teams come up with a shippable product in regular periods and manage the workload in terms of individuals in a team and overall advancement of the project throughout time. \n\n    Currently, we are using an iterative model and while developing each prototype we approach it with a linear model. Whereas scrum enables parallel development through each sprint, different layers are being actualized simultaneously; this leads to having a product increment in periods of 2-4 weeks and makes it easier to get feedback from the customer accordingly. For example, assuming that we are developing a chatbot instead of trying to approach with a risk elimination method and come up with a product after a long period of time, processing with scrum and increasing the functionalities gradually could allow us to create initial versions and get the customers idea over the UI and expected requirements. \n\n    Scrum increases the communication via daily meetings and this allows the team to balance the workload among the members, also if someone had a problem with their task and needed assistance faster response would be available since the point of these daily meetings is to explain what has been managed until the previous meeting and what is expected to manage until the next meeting. For example, the developer dealing with the front-end layer could have some hesitation about an interface that is supposed to be used via the middleware layer and the developer for this layer could support his/her teammate considering that he/she would have a different point of view. \n\n    Even though scrum makes provides lots of benefits, one should admit that it is hard to learn the approach literally and it could lead to inefficiency if every member of a team was not able to apprehend the partitions of sprints. Also, large teams for the scrum approach could lead to inefficiency.\n\n    \n\n    \n\n    \n\n    \n\n   \n\n",
      "score": 68.8,
      "language": "ENGLISH"
    },
    {
      "id": 5644680,
      "meta": {},
      "text": "Scrum is an empirical process control model that helps to contol the software development process. It helps a team to work together, self organize and reflect on past problems and wins in order to improve.\n\n + adaptability: For example, when the team presents the progress at the end of the sprint, the customer can give feedback, which the team can implement in the next sprint.\n + visibility: it is visible to everyone, what each person is working on, and supposed to do next, through a backlog. \n\n - daily scrum meetings might be frustrating: if a team member is working on a difficult problem, that takes some time to solve, a meeting, where one can prpesent nothing, might be frustrating.\n - large teams: scrum works best within small teams, because it is easier to communicate. In a big group, it is easy to loose overview, and you are not able to get to know everyone.\n\nUsing the Spiral Model, the workload gets divided into phases, and you only get to present a new product at the very end, so during the process this model isn't as adaptable as scrum. But because everything was laid out at the very beginning, it is very clear for everyone what one is supposed to do. There are no daily meetings, and though large teams are not as big as a problem, because of its complexity, the number of required phases, and also time management become very difficult.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644960,
      "meta": {},
      "text": "Scrum is an empirical process for developing and delivering products in a complex and ever changing environment. The process contains four different key processes, the product backlog which contains the general expectations of the custumer regarding the product, the sprint backlog, which contains the elements that the developing group wants to implement next, the sprint, which is the developing phase in which the whole team works on the project and meets daily to discuss what they did and what they did not do, whether they need help or whether a feature is not possible to implement in a managable form and what they will try to implement next, which they write down in the Sprint backlog and the potentially shippable product increment in which the team adds what they did do over the last scrum phase to the product.\nOne advantages of scrum is that it is highly adgile, if you for example have very often changing requirements for the product you aim to develop it is much easier to adjust to them.\nAnother advantage is that after the first scrum phase you always have a potentially shippable product which in turn means that if the custumer decides that he already wants to see results you already have something you can show to him.\nOne disadvantage is that you have to communicate very much and that takes a lot of time, when you for example have the daily scrum meetings, everyone has to present, what they did and what is feasible that they implement in the next sprint.\nAnother disadvantage is that it is very difficult to coordinate when the project is very big, if you for example have a project with fifty people then implementing scrum is very difficult because you can not hold a daily scrum meeting where fifty people presents what they did. \nThe spiral model is also agile but not as agile as scrum. You have in both methods prototypes which you can show at any time. The spiral model needs even more communication effort but it is easier to work as a giant team.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5636786,
      "meta": {},
      "text": "Scrum is in its core essence is a team management framework that is designed for frequently changing requirements like in software and product development. It's characterized by a good risk management because the product is shippable very quickly and the team iterates in the development through the specific phases and incrementally improves the product. Because of that the team can also handle interruptions very well.\n\nAs with all management frameworks, there are pros and cons.\nThe first advantage of Scrum is the incremental product that is always ready to ship. There is little risk of having to deal with large integrations at the end because the product is developed iteratively.\nThe second advantage is the high adaptability of the project. When sudden requirement changes happen the team can quickly integrate these changes into the workflow.\nThe first disadvantage is the overhead caused by the workflow. There need to frequent sprint meetings, conversations with the Product Owner and the Scrum Master. The team members also need to constantly write user story, which all in all takes a lot of time from the actual development of the product.\nThe second disadvantage is the fragmented focus caused by the frequent iterations. The team constantly has to redo earlier steps, which takes time to get into. Instead of focusing of one part of the development, the focus is split into many pieces, which in turn takes a toll on the productivity, instead of working on one phase at a time.\n\nLets compare Scrum to the currently used Spiral Model\n\nWhile in Scrum there is always a ready to ship product, this isn't the case in the spiral model. Instead there are prototypes, which try to assess the risk of the project failing. Both of these approaches have a great risk management so the team doesn't have an unfinished product by the end of development.\nIn case of the adaptability the spiral model doesn't score to bad either. Both methods have an iterative approach so both can handle changing requirements very well.\nThough the overhead is also quite real in the spiral model. There has to be frequent risk analysis which need to be done right to reduce the risk of the project failing.\nLike in Scrum the focus is fragmented in the spiral model so team needs to focus on many things at the same time.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619422,
      "meta": {},
      "text": "SCRUM is an agile software development model. Fist a number of issues/user story's a chosen to be the product backlog. Then at the start of a sprint, there is a meeting where the developers, scrum master and the product owner come together and choose some issues/user story's the will work on in this sprint (sprint backlog). During the sprint there is an daily meeting to discuss the current progress. After a sprint (usually 2-4 weeks), all issues that where not finished a moved back into the product backlog and the lessons learned a considered in the next sprint planing.\n\nA advantage of SCRUM is it's flexibility, if a need feature is important it can be added to the product backlog and immediately be dealt with in the next sprint. A example where this is useful is if there is an important bug fix or an external API change that needs to be resolved quickly.\nAnother advantage is the constant communication not only within the team, but also with the product owner. If new constrains are added during development, changes can be applied immediately. E.g. if there is a new data protection law, a new high priority issue can be added to the product backlog easily.\nA drawback is that it is hard to estimate total development time/cost correctly at the beginning of the project, if new items are added to the  product backlog during development. This can make SCRUM problematic for projects with a tight time/cost budget.\nAnother drawback is the high time overhead caused by the frequent meeting of the SCRUM. While  frequent communication is good, to much meeting can slow development because less time is spend actually coding.\n\nThe Spiral model is somewhat flexible, but not as much as the SCRUM model. If there is an important issues it can take quite a while until it is fixed. Because there a usually no product increments, but only prototypes, it can be harder to get customer feedback early and communication in the spiral model is usually limited to within the development team.\nThe more rigid approach of the spiral model allows management to make accurate prediction about the needed budget earlier that in the SCRUM model. Because there are less meetings in the development phase (III) of the spiral model then in the SCRUM sprints, more time can be spend coding by the developers. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619881,
      "meta": {},
      "text": "Scrum is an agile development method that helps teams work together by keeping every team member up to date on the current progress of the project and that enables rapid changes in the development process. To ensure this, there is a daily meeting by all team members to explain what each individual has been working on. The working principle of Scrum is that in a predefined time period (Sprint) all team members work on a to-do list (Sprint backlog) and at the end of the Sprint, the product will have gone through increment. \n\nAdvantages: \n1. With scrum past design choices can be overruled if they are determined as wrong. In the Waterfall \n    model, past design choices can't be overturned. As it turns out, the first design choice is not the optimal \n    solution. Scrum allows for flexibility. \n    Spiral: Takes a different approach. The spiral model tries to avoid these mistakes before coding. Afterward, \n    risks are assessed and resolved again\n  \n2. At first daunting projects are broken down into easily manageable sprints. This gives the developers clear\n    objectives and they can work effectively. E.g. our big EIST project of building a flight system was sectioned \n    into weekly goals. This helped us keep track of our progress\n    Spiral: Very similar to scrum. Identified features are verified and tested in each iteration and this gives a \n    clear roadmap and structure for devs\n\nDisadvantages: \n1. Scrum framework is difficult to scale in practice for a large team or has to be adapted. E.g. Chrome's V8- \n   JavaScript engine team consists of approximately 80 developers. If they would use plain Scrum, their daily \n   standup meeting would take 2 hours. This is a waste of all developers' time. \n   Spiral: The spiral model is much more effective in large-scale projects, due to its extensive planning\n   and risk analysis.\n\n2. Some projects are simply not designed for Scrum and many companies force Scrum onto these projects. \n    This worsens the overall project result. For example, in research at universities or companies. There, it's \n    very difficult to measure \"done\" with research. Because one is never \"done\" with research. Other \n     objectives have to be set. \n    Spiral: Same problem. You can't \"iterate\" in cyles when conducting research. (which is done in Spiral \n    model)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620168,
      "meta": {},
      "text": "SCRUM is an agile project management framework.\n\nThe idea is that you have a variable pool of tasks (product backlog) that is predefined but can be changed over time by the Project Owner.  In each scrum iteration (lasts 2-4 weeks) the developers decide with the project owner what tasks can be done in that iteration (which forms the sprint backlog) and build a potentially shippable product consisting out of the finished sprint backlog items. (Vertical Integration)\nAfter the iteration there is a review and retrospective meeting to evaluate the scrum iteration where unfinished Sprint items got back to the product backlog. \n\nA big advantage is that Scrum can help teams complete project deliverables efficiently and quickly. That means after every sprint iteration you have for example in software development one small system, maybe just a user interface, that you can show to the client. In the spiral model you also have prototypes but the length of one iteration is not predefined.  This means that you can not show these increments on regular basis. \n\nAlso the short sprints of SCRUM enable adoption to changes based on feedback. For example if the client changes a requirement the team can easily adopt to this change in the next sprint and within sprints. \nThe spiral model does not allow changes within iterations. \n\nOne disadvantage is that Scrum lacks a definite end-date and predictability. For example you do not specify how many sprints you do. For the spiral model you normally have a specified number of iterations. \n\nFor scrum the chances of project failure are also high if members aren't very cooperative or committed since you do not have a deterministic easy manageable process but rely on the individuals. Developers pick one item out of the product backlog. First they have to fulfill this tasks (with exact requirements) and secondly due to vertical integration it should the fit with other components. That's why communication is important which can fail. For the spiral model the process is less agile and more predictable since you focus more on the risk of the project. \n\n\n \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621767,
      "meta": {},
      "text": "Scrum is an agile framework wich is designed to make it possible to adapt to changing circumstances and to maintain a close conection to the customer. It consists of: the product backlog, the sprints + sprint planning and + the sprint backlog, daily scrum meetings, inkrements, sprint review and sprint retrospective.\n\nScrum advtantages:\n1 Adv.) It leads to a better quality of the work and endproduct:\n - as an example i would like to bring up our teamproject: due to the fact that the work was exactly defined for each member,  we felt full responsibility for the project and our colleagues and that motivated us even more to work properly. And that's the way the most of scrum-users feel\n\n2. Adv) Lower costs:\n- in the company i'm working in happend a shift from another Projectmanagment-Framework to scrum and due to the good choosen strategy of scrum, the company needed much more less managers and less expensive project management software\n\nScrum disadvantages:\n3. Disadv.) Scrum requires small teams:\nScrum works best with small teams (in general up to 10). Although this can push the teamwork, companies may find it difficult to split the workforce into smaller teams . \n\n4. Disadv.) Scrum needs the time to be learned:\nIn our company switching to scrum was a big challenge, because the choosen scrum master didn't had the required experience. Plus every teammember has to learn how to plan the personal work, how to communicate and solve problem within a scrum-team. This is a little problem wich will face every company and every new unexperienced worker.\n\n\nSCRUM vs. Spiral:\n\n1. Adv.) This is not necessarily a dis/- or advatage of spiral it depends of the product requirements: is it a big or small project? A lot of risks? and so on.\n\n\n2. Adv.) In the spiral model it can happen that the budget is not met, wich will increase the expenses \nThis is nor a advtange of spring\n\n\n3. Disadv.) This is not a requirement of the spiral model. Spiral is even better for bigger teams and complicated projects\n\n4. Disadv.) Of course the spiral model also needs an adoption time, but it involves  less people\n\n\n\n\n\n   ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622645,
      "meta": {},
      "text": "SCRUM is a software development lifecycle model with an iterative process where the product is developed by working on small sub-tasks with lots of interaction both inside the product team and outside with the customer and the users. \nThis framework allows for adaptation to real-time changes; new requirements and features can be added or removed based on the current situation and on internal feedback. For example, if the behavior of the users shows that a particular tool is not being used as much (when in fact it should), then this can be quickly improved in the next sprint.\nAnother advantage is the collaboration aspect: SCRUM focuses on individuals and interactions rather than processes and tools. This makes up for a great learning experience, as each developer can learn from the others while giving advice at the same time. The SCRUM model advises having daily SCRUM meetings, where the developers discuss the daily tasks and then start a work period, then they discuss what is working and what isn't.\nThis can also represent a disadvantage: these constant meetings may interrupt the workflow, eventually slowing down the development process. Everyone is aware of those feelings inside a meeting where everyone is talking and yet there is no real progress.\nAnother disadvantage of SCRUM is that constant change may cause delays in the delivery time of the project and therefore an increment in the budget. As an example, SCRUM operates in so-called Sprints, and if the goals of the Sprint have not been reached within the usual time of 2-4 weeks, this can cause lots of confusion in the long term.\nThe spiral model also allows adapting to changes in the product as it is being developed, however, adaption to change isn't as quick since the product is developed using prototypes/subsequent product versions.  \nIn the spiral model, there is very little collaboration within the team and there is no continuous customer interaction. Delays and long-term problems can also happen because the product increments are evaluated only after the new prototype has been developed.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622705,
      "meta": {},
      "text": "As we all know, change happens all the time in the field of Software Engineering. Scrum is a way to deal with these changes, because instead of a linear process, Scrum is done in parallel. The process consists of daily meetings and sprints where the team members try to do tasks on the product backlog.\n\nAdvantages :\n- Scrum is an efficient as well as quick way to deliver the project. During the sprint review,, we go back to what previousely achieved during the sprint and update the product backlog. This shows efficicency, because for example, if a team doesn't achieve certain tasks at the end of the sprint, they will plan them again and go over them in the next sprint. \n- With the daily meetings, the whole team is informed and up to date with the current state of the project. This offers transparency and a better teamwork. As an exmaple, a team is holding their daily meeting where one memeber presents their work. The other team members can offer help and support, in case something needs to be improved.\n\nDisavantages :\n- Daily scrum meetings can be frustrating for team-members. For example, if a team member is having a hard time, other team memebrs might not take that into consideration and keep pushing them with difficult tasks and strict rules.\n- Scrum imposes a difficult deadline to keep up. This can create a lot of stress and eventually lead to the end of the project. For example, if some teammates took too much time to complete their taks due to lack of experience, this leads to a negative effect on the whole project, where the client can even choose to cancel the project due to the team not holding the deadline.\n\nIn comparision to the Spiral Model :\n\nThe spiral model is similar to scrum in a way that after each quadrant, a review occurs where the planning for next phase happens.\nBut unlike scrum, the sprial model is dependant on risk anaylsis, where the project ends if the risks coudn't be handeled. In scrum, unfinished tasks can be done in the next sprint.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5623211,
      "meta": {},
      "text": "Bei Scrum handelt es sich um eine Methodik f√ºr Teams, um in einer iterativen und agilen Weise Softwareprodukte zu erstellen. Ein Scrum Projekt besteht aus mehreren Iterationen (sogenannten Sprints), in welchen man jeweils versucht eine Teilmenge von Produktanforderungen in ein lieferbares Produkt umzuwandeln (oder solch eins zu erweitern). Es geht dabei darum, dass man ein Produkt √ºber einen l√§ngeren Prozess stetig verbessert und auch flexibel bez√ºglich Anforderungs√§nderungen bleibt.\n\nPro:\n\n1) Iterativit√§t und Agilit√§t\nIn beiden Methodiken geht es darum, ein Produkt stetig zu verbessern und zu jeder Zeit m√∂glichst einen Prototyp der Endergebnisses zu haben. Scrum ist jedoch auch agil. Man kann den Product Backlog stetig erweitern oder ver√§ndern, was beim Spiral Model schwerer umzusetzen ist, da dieses eher linear verl√§uft.\nWenn man eine Wetter App z.B. um andere L√§nder erweitern m√∂chte, so kann man dies bei Scrum einfach in den Product Backlog schreiben. Das Spiral Modell hat so etwas wie einen Product Backlog nicht, √Ñnderungen sind also nicht wirklich im Modell mit einkalkuliert. \n\n2) Kommunikation\nBei Scrum wird viel Wert auf Meetings gelegt, so dass das gesamte Team mit den Zielen und dem derzeitigen Vorgehen vertraut ist. Bei dem Spiral Model gibt es keine festgelegten Meetings, es wird also wenig zwischen allen Teammitgliedern kommuniziert.\nWenn ein Entwickler bei Scrum eine neue Idee f√ºr die Wetterapp hat, so kann er dies beim n√§chsten Reviewmeeting erz√§hlen, bei dem Spiralmodel geht dies nicht.\n\nCons:\n\n3) Umgang mit Gefahren und alternativen Prombleml√∂sestrategien\nIm Scrum Modell gibt es keine Phase, in der explizit getestet wird. Bei dem Spiral Model ist dies eine extra Phase, wodurch Fehler schneller gefunden werden.\nWenn es z.B. bei einer Banking App zu falschen Berechnungen kommen kann und dies nicht herausgefunden wird, kann dies zu einer gro√üen Gefahr f√ºr das Unternehmen werden.\n\n4)  schwer zu Skalieren\nIn einem Scrum Meeting soll jedes Teammitglied von seiner Arbeit sprechen. Dies ist bei gro√üen Teams kaum umsetzbar. Bei dem Spiral Model √ºbernimmt dies eher eine kleine Gruppe von Projektmanagern.\nBei einem Unternehmen wie Google ist es nicht m√∂glich, dass √ºber 10000 Mitarbeiter nach einem Sprint alle gemeinsam √ºber die Erfolge Sprechen.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621170,
      "meta": {},
      "text": "The spiral model uses an iterative approach while SCRUM is an agile process management model. SCRUM has daily project meetings and after each sprint a potentially shippable product increment is presented to the customer (product owner). \n1.The spiral model (we use today) incorporates changes only after an activity (increment) but not during an activity which is an advantage for SCRUM as it is more adaptive.\n2.One sprint in scrum takes only 2 to 4 weeks while in the sprial model the length of one iteration is not defined which can be problematic and take up more time than anticipated.\n3.The scrum team also has clear predifined roles with a product owner, scrum master taking care the process is respected and the small development team which is an advantage as it increases the speed of working and agility of the team. \n4. The spiral model has 4 main activities, first defining goals possible drawbacks, then evaluating risks and ranking risps and evaluating alternatives and in the third step developping a prototype going in a linear way from the highest risk to lowest. The fourth step is to evaluate results of the iteration and go into the next iteration. There are 9 iterations that undergo each of the steps but scrum does not have a certain number of sprints that need to be done. It is done when the customer is satisfied. In scrum the sprints do not have a that predefined structure as it should adapt to any changes necessary but every sprint gets a sprint backlog containing all tasks for that sprint. \n5. However, the spiral model adresses a risk management which scrum does not incorporate that specifically. \n6. Another disadvantage of scrum is that it is highly dependant of the commitment of the team members to the project which\n\nAus <https://artemis.ase.in.tum.de/courses/121/text-exercises/4342/participate/950330> ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621954,
      "meta": {},
      "text": "SCRUM is an agile software development process coping with interruptions (in terms of unforeseen challenges) and rapidly changing requirements. The concept is based on better communication, improved cooperation within scrum teams, and regular deliveries of product increments which enhance the overall risk management. The concept assumes recurrent sprints which embrace the vertical development approach.\n\nScrum ensures efficient and quick software development because problems are divided into smaller ones that are meant to solve within a sprint. For instance, with a two-week sprint, there was a kind of deadline for implementing the SQL database in our EIST project. We were very efficient because we wanted to have our tasks done by the end of the sprint.\nIn the spiral model, iterations enable efficient software development as well.\n\n\nScrum developments are tested during the development process (sprint review). In our EIST project, testing our code was always part of the sprint. We always had a pretty good working application.\nIn the spiral model, the system/ application is tested during the design and verification phase (during development). \n\nOn the other hand, scrum is not related to the deadline. The product will not be delivered until all requirements are fulfilled. In addition, new requirements can always be added (by the customers) which may expand the development time. I worked at a startup that wanted to introduce a new ERP system, which was developed externally. During development, the startup wanted additional features which led to a significantly delayed launch.\nThe sprint model is also not bound to a deadline. The customer can always request changes that extend the development time.\n\nIt may be difficult to divide big challenges into much smaller ones. For instance, our EIST project included an authentication process for users. We could divide it into smaller tasks which made it very tough to implement it in one sprint. In real development, there may be way bigger challenges that can't be solved in one sprint.\nThe sprint model is meant for large projects and problems. The iterations last as long as it needs to implement a feature.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622639,
      "meta": {},
      "text": "Scrum is a software lifecycle model that embraces agile software development. Scrum let's you deal with frequent changes in the requirements by using so called sprints. These sprints occur iteratively and during each sprint the developers implement a subset of the product backlog, called the sprint backlog until the software development is done.\nAn advantage of scrum is the ability to deal with changes in the software requirements. Scrum is an agile model, thus it can implement new requirements by iteratively performing sprints with adapted sprint backlogs.\n\nAnother advantage of scrum is that it encourages creativity. Due to low hierarchies, the ideas of all team members are considered and discussed in team meetings. Thus, new ideas are being encouraged.\n\nA disadvantage of scrum is that it relies on the expertise  and experience of the team members. During meetings and sprint reviews, feedback from team members is very important and can make or break the project. Inexperienced team members can impede or torment the process.\n\nThe scalability of scrum is another disadvantage. Scrum works well for small to medium sized teams. However, larger teams are not suited for scrum as the frequent meetings would take too long due to the large number of people participating in them.\n\nThe spiral model is an incremental and iterative model. This means, that the work it being splitted into different parts (4) which are then repeated iteratively for different stages of the project. Scrum is an agile software development model. It is more flexible and allows to react to change more easily than the spiral model. In the spiral model, the project is terminated if a risk could not be resolved during one iteration. If an item in the spring backlog is not being completed at the end of the sprint, the item is added to the product backlog to be completed later. The project continues.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622711,
      "meta": {},
      "text": "Dear supervisor,\nas you know I worked out the advantages and disadvantages of SCRUM opposed to the currently used Spiral Model and will present them here, in brief!\nFirst of all, let's quickly discuss the essence of SCRUM: SCRUM is an agile methodology for project management, which  focuses on quick adaptation to change and modifications in the requirement.\n\nThis all sounds rather promising, but there are some caveats to this model:\nModels, like the Spiral Model, have a set goal, meaning it is known what you work towards and the goal - assuming the plan was well made, is reached after a fixed amount of time. The SCRUM model does not have a fixed goal, thus there is no certainty that the goal will ever be reached! Maybe the customer changed their requirements too frequently or too much - or the budget was underestimated, the project may stop before it reaches it's goal and that's why a working or satisfactory product is not guaranteed.\n\nAnother important point of failure is change of process and mentality!\nWhile this is not a disadvantage per se, it's a new hardship that has to be overcome when changing models! In particular, the fact that the development model changes from a push-model, where the superior gives a task to the subordinate, to a pull-model, where the subordinate chooses task from a pool of previously collected stories, also called - Spring Backlog. It requires you to allow and trust the self-organization of our team!\n\nCurrently we use the Spiral Model, which works towards a known goal using iterations of the Waterfall model (meaning each iteration of the spiral, is a Waterfall-like model itself). Whereas in SCRUM, when a change is introduced or a flaw is identified, the process should be adapted asap in order to fit the change without waiting for the 'next prototype', thus causing an immediate effect on the development of the product instead of a delayed one, this leads to 2 advantages:\nincreased development speed & high customer satisfaction, thanks to the timely reaction to changing requirements!",
      "score": 85.4,
      "language": "ENGLISH"
    },
    {
      "id": 5622938,
      "meta": {},
      "text": "Scrum is an agile methodology in project management. Scrum is made of so-called \"sprints\". These are runs that can last 1-4 weeks. The goal is to have a potentially deliverable product at the end of each sprint, which matures with the number of sprints until it is completed. There are three different roles: Product owner (sets the technical requirements), Scrum Master (responsible the Scrum process) and the developers.\n\nAdvantages\nAdaptability and flexibility:  Scrum is suitable for a wide variety of environments and situations that don't initially have clearly identifiable requirements. If a requirement is added or customized, one can easily adapt the scrum progress. e.g. calculator project, where the customer afterwards wants to add the square root function\n\nHigher Quality: Having everyone on the team take full responsibility and ownership of their work can create a productive environment that leads to high-quality end results.  e.g. a calculator project, where no one feels responsible will most likely fail\n\nDisadvantages\nIt requires the use of small teams. The Scum methodology usually works best with teams of at least three people but no more than 10. If a project is big, 3-10 people is not enough to make progress. You would need multiple scrum teams. But then it is hard to coordinate them. e.g. it is impossible to implement a search engine with only 3-10 developers.\n\nThe framework can be successful only with experienced team members. Although using the Scrum framework can potentially deliver quick and high-quality results, it requires a well-trained and skillful team to properly implement it and work with each other e.g. the eist-project would fail if a few team members wouldn't fully commit\n\nComparison Scrum and Spiral model: \nThe Spiral model is an iterative model. Therefore it is not flexible if the requirements change and customer interaction is very small. Only at the end the customer sees the final product.But the spiral model mainly deals with various kinds of unanticipated risks. For the spiral model proper documentation is required, but not for scrum.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644501,
      "meta": {},
      "text": "The scrum framework is an agile model consisting of managing and developing a project by dividing it into multiple processes. These consist of planning (product backlog), executing (sprint), as well as evaluating and then we can either have a potentially shippable product increment.\nOne advantage of this model is its flexibility and adaptability to changes. For example, if some functional or non-functional requirement is changed or erased, it can be easily managed in the sprint meetings, where all current processes, updates, and progress are discussed.\nAnother advantage is that Large projects are divided into easily manageable sprints. As said before, there are regular sprint meetings, where all parts of this project are being developed. In this way, this process takes a strategy of divide and conquer.\nNonetheless, there are some disadvantages as the very need for a team, whose members are experienced and committed to the project. The scrum framework is not able to work if the whole team isn't integrated as one, not only because there is no progress, but the sprint loses its meaning and importance.\nAnother disadvantage is the lack of seriousness about the deadline. While in each sprint a goal and a deadline are set until the next meeting, these can diverge from the real deadline of the project and thus delay it.\nThe first advantage diverges from the spiral model, then since an iteration in the last one has to follow the planned execution of its predecessor, the one in the scrum is empirical and can vary hard from the original plan. However, the second one holds for spiral model an scrum, because both don't follow a whole todo list and divide the project into smaller parts, which are easier to develop.\nThe first disadvantage applies for both as well, then they are not easy to follow for people who dont have experience. It is also known that linear models is easier to understand for beginners.\nThe last disadvantage is however different. There is in the spiral model an iteration until there is no solution for a risk , then the project is terminated and the actual deadline is more reachable. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620413,
      "meta": {},
      "text": "Bei SCRUM wird ein Projekt in mehrere Sprints unterteilt, in denen, kleinere Teams von ca. 5-10 Entwicklern, Funktionalit√§ten entwickeln und erweitern. Am Ende eines jeden Sprints wird entschieden, wie weiter vorgegangen wird, je nachdem wie das Projekt bis dahin verlief und ob sich Anforderungen ge√§ndert haben. Ein Sprint wird wiederum in k√ºrzere Phasen , meist t√§gliche Meetings, unterteilt, in denen sich die Entwickler austauschen, um fr√ºhzeitig Risiken und Missverst√§ndnisse zu erkennen und somit gro√üe Probleme zu vermeiden.\nVorteile:\nEs gibt viel Informationsaustausch, wodurch Probleme vermieden werden: Bei Krankheit einer der Mitarbeiter bekommen Kollegen sonst nicht so schnell mit, ob es dadurch einen Verzug bei Funktionalit√§ten gibt der so direkt im n√§chsten t√§glichen Meeting deutlich wird und die Planung darauf angepasst werden kann.\nBeim Spiral Model werden √ºber einen l√§ngeren Zeitraum Ziele f√ºr einzelne Personen festgehalten, sodass wenn w√§hrend dieser Zeit Probleme auftreten k√∂nnen, die erst zu sp√§t erkannt werden.\nGut auf √Ñnderungen reagieren: Durch die t√§glichen Meetings, w√§hrend eines Sprints, und kurzgesteckten Ziele f√ºr Funktionalit√§ten, k√∂nnen in kurzen Abst√§nden √Ñnderungen und neue Planungen vorgenommen werden, ohne bisherige oder gr√∂√üere, fertige Produkte verwerfen zu m√ºssen. Im Spiral Model wird immer eine ganze Phase durchlaufen, bevor es Besprechungen f√ºr die n√§chste Phase gibt. Somit werden in gr√∂√üeren Abst√§nden Plananpassungen gemach, wodurch evtl. mehr an Arbeit verworfen werden muss.\nNachteile:\nViel Overhead durch Organisation: Durch die regelm√§√üigen Termine wird Entwicklern Zeit zum Erarbeiten von Fiktionalit√§ten genommen. St√§ndige Anpassungen sind anstrengend und bei viel hin und her der Anforderungen, kann es praktischer sein, erst einmal etwas gr√∂√üeres fertig zu machen. Im Spiral Model wird auch regelm√§√üig auf Ver√§nderung geachtet und Pl√§ne angepasst, jedoch fallen hier die t√§glichen Meetings weg, wodurch mehr Zeit zum Programmieren bleibt.\nEntwickler m√ºssen sich selbst organisieren: Viele Entwickler sind Nerd, eher in sich gekehrt, ein st√§ndiges miteinander Kommunizieren und Absprachen treffen, ohne das ein Chef etwas konkret vorgibt, kann daher belastend f√ºr die Mitarbeiter sein. Zudem birgt ein st√§ndiges umorganisieren viele Missverst√§ndnisse auf. Beim Spiral Model gibt es seltener solche organisatorischen Treffen, zudem gibt es meist einen Chef der einspringt oder im Notfall Aufgaben verteilt.",
      "score": 79.2,
      "language": "GERMAN"
    },
    {
      "id": 5621045,
      "meta": {},
      "text": "Core of SCRUM:  \nSCRUM is an agile Methodology, it helps with delivering  software products for clients who could change the requirements during the project. \nThe Product Owner set the product backlog: all the stories needed to be done during the project, then during the Sprint planning meeting the user stories for the next sprint will be decided and a SprintBacklog will be created which is a list of user stories for the upcoming sprint. \nEach sprint has a time span between 2-4 weeks. \nThere are also Scrum team(s) that work on the project ( developers and a SCRUM master ) , they meet every day in a daily meeting to give an update of what was achieved the day before and give promises and objectives for the current day. \nA sprint review meeting and a sprint retrospective at the end of each sprint to analyse the results of the sprint, are also possible.\n\nAdvantages of SCRUM:\n\n-Scrum can be easily adapted to changes, it is flexible and works well for dynamic and fast-moving projects.  \nHowever, using the spiral model you cannot make changes once an activity is completed.\n\n-Scrum proved its efficiency in saving time and improving productivity of several companies because it is agile. \nWhile using the spiral model can make the companies lose time because if it takes time to resolve the risks and if they could not be resolved, the whole project is terminated.\n\nDisadvantages of SCRUM:\n- SCRUM can put pressure on developers or harasses them by demanding daily and continuous progress: some developers could not handle it, while with spiral model developers could be more relaxed while working because everything is linear and clear from the beginning.\n\n- While requirements change, a developer could find himself repeating/changing a big part of his implementation again, which is not the case with spiral model because once a step is done, it is over.",
      "score": 87.5,
      "language": "ENGLISH"
    },
    {
      "id": 5621093,
      "meta": {},
      "text": "The core essence of SCRUM is to deal with interruptions and solving customer problems with team work including performance centred process with constant reflection. The model of SCRUM helps to split the customer problem into small sub-problems and solve those in a short and fixed time to have the first step to a usable product.\n\nDiscussion:\nSCRUM helps with an effective use of resources like time and money as different views of the team get together and ease the adoption process. The fixed time slots and the Potentially shippable product increment at the end of each sprint saves a lot of time. \nExample: When creating a new algorithm, this also needs a lot of adoption in the process.\nMoreover, with SCRUM a team adopts feedback from customers/stakeholders quickly which helps them to be agile with the continuous change in requirements.\nExample: For a customised painting a continuous feedback is better than an unsatisfied customer who is nor will to pay in the end.\n\nHowever, the large teams, SCRUM needs, can be challenging and lead to failure due to a lack of good communication and cooperation. \nExample: Two departments need to be connected closely to discuss the specific needs/requirements but due to miscommunication the wrong requirements were delivered and a not-needed-product without is being created costly.\nFurthermore, the transformation within the organisation to a new model could be challenging as not everyone is accepting, adopting to this new model or willing to collaborate and work as a team.  SCRUM however is only efficient/working if everyone accepts it. \nExample: Can be found especially in traditional companies.\n\nComparison to Spiral Model:\n1. In terms of the effective use of resources both models are relatively alike\n2. For feedback adoption however, only SCRUM includes this. spiral does not take feedback into consideration, which could be fatal at the end.\n3. The team size of the spiral model does not necessarily has to a big team with different skills like in the SCRUM model, but therefore there is a smaller set of divers skills.\n4. In this specific case the spiral model is already established and therefore working and probably being accepted. When overcoming this with the SCRUM model the benefits would outweighs this challenge.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621960,
      "meta": {},
      "text": "Scrum is an agile development method with a heavy focus on vertical integration, effectively always having\na potentially shippable product increment. The entire process is subdivided into several short sprints, which\nalways aim to tackle a subset of product requirements and integrate them fully into the already partially \nfinished codebase from previous sprints. The reason for the short sprint duration is the increased flexibility\nand adaptiveness as the product owner's requirements can change which can be addressed during the following sprint.\n\nAdvantage 1: vertical integration\nA feature that scrum has but the spiral model lacks is risk mitigation through continuous integration. \nThe spiral model's 9 iterations follow a linear bottom-up horizontal integration philosophy which makes\nit prone to unpleasant surprises in later phases of development. Integration and system testing for example\nis fairly late down the line in the seventh iteration. If suddenly severe architectural mistakes are found\nwhich cannot be resolved the project has to be terminated. Scrum mitigates this by integrating the bare bones\narchitecture early so it is clear from the beginning if everything works together as intended.\n\nAdvantage 2: adaptiveness\nThe spiral model is, and this is also due to the linear approach, not really capable of incorporating changes.\nIf a change is forced down to the development team at a later iteration it is mostly not possible to adapt as\nthe spiral model focuses on testing and integration during during the end of the software development lifecycle.\nScrum on the other hand can change architecture and implementation details even in the last sprint to satisfy\nthe customer.\n\nDisadvantage 1: software quality\nScrum is an agile approach to software development and thus adapts to changes frequently. This can also be\na bad thing because the team may have come up with a fitting architecture and adequate data structures to\nrealize the initially requested features, but these features can be scrapped in the middle of the project\nand replaced by different ones. Such a scenario would result in worse software quality overall as the\nunderlying foundation was not made with the new features in mind. The spiral model does not have these problems obviously.\n\nDisadvantage 2: lots of meetings\nScrum is full of unnecessary meetings like the sprint-review-meeting and the sprint-retrospective.\nThe team shouldn't need all of this if they went through with the daily sprint-meetings.\nTo my knowledge the spiral model doesn't require any mandatory meetings.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644443,
      "meta": {},
      "text": "Scrum is a technique to manage and control software and product development when the requirements and the technology may be rapidly changing during the project. Also scrum improves the cooperatin and communication between teammembers which leads to better risk management\n\nThe first advantage about scrum is that a large project can be divided into manageable sprints to prevent analysis paralysis, i.e. an inability to make a decision due to over-thinking a problem, and to shorten the time until a first prototype is built. The spiral model works best for large projects (so it is good for dealing with large projects)\nAnother advantage would be that new requests and feedback can be adopted faster which ultimately means that the project is finished earlier in comparions to sequentiel process models in which feedback is only provided at the end of the project.  This can be very usefull if, e.g. the government requires new rules for example regarding privacy or security. The spiral model also allows for change within the requirements.\n\nA disadvantage about scrum is that it cannot be scaled to large teams. Some project might be to complex to divide them into smaller problems and since scrum has a strong focus on communications that can lead to inefficency due to extremly long meetings. The spiral model on the other hand is applicable towards, and works best with, complex and large problems.\nAnother disadvantage would be that to many new changes can reduce the efficency of the development. This can e.g. happen if the customer keeps comming up with new requests which means the developers cannot really concentrate on their inital task but have to deal with the new changes. Since the spiral model also reacts to change this is also a disadvantge for the spiral model.\n",
      "score": 100,
      "language": null
    },
    {
      "id": 5644805,
      "meta": {},
      "text": "Scrum is an agileModel, which means you can rapidly deal with change occurring while developing. You have sprints (= Timeboxes) in which you work on tasks that from the productBacklog and after each sprint you create a shippable product, you have a review and planning meeting for the next sprint. But first you must create a productBacklog, which only are items or tasks of your project and are prioritized by ProductOwner, who talked to the client.\n\nA advantage of scrum is that you have a high quality product because you continuously improve, increment your product and you collaborate much. The Teammembers can reflect and improve their processes by Sprintreviews and retrospectives. For example you finished a Sprint then you have a Sprintreview and a Sprintretrospective where you say things like 'the team should start asking someone for help when they have a problem and cannot solve it directly'.\nAnother advantage is that you can control risks. You have an optimized predictability and you can rapidly react to changes like if the ProductOwner changes the Productbacklog by deleting items and adding another items like 'the MusicPlayer can add, remove and order songs in the queue'. You have an improved communication by the meetings and can easily react on that change to reduce risks.\nA disadvantage is that it requires a trained team to implement this. All members must understand scrum and the benefits to rely on that method. They need to understand the specifics. For example you are used to a Linearmodel like the Waterfallmodel and now the Projectmanager wants to apply the agileModel and then first you need to know how it works.\nAnother disadvantage is that scrum is not related to the overall deadline. It only involves smaller deadlines like the sprints. For example you have several sprints and then you finish all the sprints but you realize that the deadline is over because in some sprints you may not finished what you wanted.\n\nIn the Spiralmodel you also have iteration evaluations so my first advantage is also an advantage for this.\nSecond advantage is no advantage for the Spiralmodel because you cannot deal with change within an activity only between activities. In scrum you can within an activity.\nFirst disadvantage is also a disadvantage for the Spiralmodel because the Spiralmodel has 4 activities that are applied in 9 iterations and those have to be implemented and learned first.\nIn the Spiralmodel you don't have Timeboxes for the iterations and so you also don't involve an overall deadline and therefore the disadvantage is also a disadvantage for spiral model.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644971,
      "meta": {},
      "text": "1) Core essence of SCRUM:\nSCRUM is an agile project development tool that delivers the customer frequently the preliminary results based on repeated sprints conducted by the SCRUM team members. Thereby the project team is much more reactive to the client's wishes and can implement these into their (e.g. weekly) sprints via a product backlog. \n\n\n2) 2 advantages/ disadvantages of SCRUM + comparison to Spiral:\n\n1. advantage\nThe major advantage of SCRUM is the ongoing feedback received by the client. Thereby the process and product can be much more focused on the concrete wishes of the client.\nE.G: Developing the Covid app of Germany could be optimized by constantly delivering a preliminary result and listening to the client's wishes and then adding those changes. For example, if the client then wishes that you can upload a test certificate you could do this in another sprint. \n\nSpiral slightly lacks constant feedback here as you don't have these frequent deliveries to the customer. \n\n1.1. disadvantage\nSCRUM needs mire constant effort of all team members by implementing weekly or even daily sprints and on top of that sprint meetings. This can be exhausting for some team members. \nE.G. if you decide on having a daily SCRUM meeting at 2 o clock, the chances are high that not all members can show up and some will be annoyed after time. \nSpiral just poses some major meetings in the risk calculation beforehand. \n\n2. advantage\nSCRUM is highly reactive to changes by external factors, from the environment, economic side, technical side, or just the wishes of the customer. By adding those changes to the product backlog and conducting these in the sprints you can react faster.\nE.G. As the EU implemented the General Data Protection Regulation many companies had difficulties. In a SCRUM environment, you could react faster to these changes by adding them to the product backlog. \n\nIn Spiral as a part of the waterfall development types, this can pose difficulties as the previous plan can be completely obsolete.\n\n2.1. disadvantage\nCalculating and presenting a customer a concrete financial plan and time plan can be difficult in SCRUM as it is rather uncertain how many sprints you need until the customer is satisfied with the project. \nE.G.  If the customer has certain time and cost budget it can be a risk for him as the software can exceed these with SCRUM\n\nIn Spiral this can be minimized as you determine the major risk beforehand and can estimate the time and financials beforehand.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620288,
      "meta": {},
      "text": "\nScrum is a technique that deals with interruptions (change), that in our current fast changing  and dynamic work environment is an proactive player for managing and controlling software and product development with rapidly changing requirements.\nIt improves risk management by improved communication, cooperation and the delivery of product increments.\n\n+It's adaptable and flexible. Scrum is suitable for a wide variety of environments and situations that don't initially have clearly identifiable requirements and require a flexible approach. Sometimes the customer does not know what he wants until during the process of building him his solution. In the Spiral Model if a requirement changes, the spiral just can deal with it in between of activities , and not within one. with scrum just would add the new requirement to its product backlog and deal with it in another sprint.\n\n+It encourages creative approaches. With Scrum teams working together and analyzing ideas from all its members, creativity is encouraged and new ideas are likely to appear. with scrum every problem is spoken of various times and very quick after occurring. Everybody can think of it and contribute to the solution. The spiral model could lead to \"go with the flow\" because there are not clear steps, and everybody is stuck with their own problems.\n\n-It requires the use of small teams. The Scum methodology usually works best with teams of at least three people but no more than 10. With a big Project with 20 people the scrums could get inefficient because not everybody can contribute. Here you could do scrums of scrums to overcome this problem. The spiral model has more work packages, so that more people can be divided.\n\n-It can be difficult to scale. Using the Scrum approach for large projects can be challenging, as implementing it on a bigger scale requires extensive training and precise coordination. Also here scrums of scrums could help, it would be a hierarchial scrum system. The spiral model is even difficulter in my opinion, the \"spiral\" just gets bigger, a clear structure that expands is not possibl.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620341,
      "meta": {},
      "text": "SCRUM is an agile development strategy which is focused on reacting to changes in both the requirements and the real world. By using short sprints to achieve smaller milestones, SCRUM tries to maximize productivity and communication between the team memberes.\n\n* An advantage is the constant adaptation to change. Sprint goals are usually decided every other week and can therefore always be set to support the latest technology, requirement or challenge. This is rather unique to SCRUM, as other development strategies tend to write their plans into stone, never to change again. One example for this might be a version of windows that becomes available in the middle of development. With scrum, such a change in requirements can easily be integrated in the next sprint. With the Spiral Model, all requirements are decided upon during the first stage, making such adaptions later in development almost impossible.\n* Another advantage is the amount of communication required by the developers. During the daily scrum meetings and the sprint meetings, the developers must divide the goals between them and talk about how to integrate the different systems into another. In other methologies, such meetings are more rare and systems would often only be integrated at the very end of the development cycle, which would lead to issues. In the Spiral Model, once the design for the cycle has been agreed upon, the developers are doing their thing until the end of the cycle, at which point interfaces might not match up etc.\n\n* A disadvantage of SCRUM is its target team size of ten or less (vaguely). For bigger teams, it becomes impossible to coordinate all the different team members and include everybody in the meetings. The daily meetings are ideally less than 15 minutes, but there is no way 200 people can talk about their progress and problems in that time. The Spiral Model is better fitting for larger teams, as the developers are told simply told what to do, requiring less communication.\n* Another disadvantage with SCRUM can be that the final product is not determined until very late in the project. For projects that require a clear vision at the beginning (like video games, ...), SCRUM does not provide a way to ensure that vision eventually gets implemented. In the Spiral Model, a clear product design is decided upon in the beginning and then iterrated upon until it is achieved. However, for some projects this might also be an advantage, as such a vision for the final product is not always present.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620666,
      "meta": {},
      "text": "What is Scrum?\n\nScrum is an effective organisational process which splits the work up among a team and reviews the done work in regular periods in meetings. The one who leads those meetings is the scrum master. The time to work is called Sprint.\n\nPros : \n\n- Work runs parallelly  --> all aspects of the project are started and continued parallelly\n\n- Teamwork is important \n\n- Effective organisation of project completion\n\n- Weekly reviews help in proper completion\n\nCons : \n\n- Pressure on individual team members --> if one isn't finished, it will affect the work of others\n\n-  Meetings are tiresome and the same time could be needed for development\n\n- Organisational effort needs to be put in by the scrum master\n\nVs the spiral model :\n\n- no risk-based development but goal-based \n\n- Determination of work done before each Sprint\n\n- One can undo any older code or work and redo it\n\n- No termination after a problem ",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621417,
      "meta": {},
      "text": "SCRUM is a project management framework that provides a structure for  Agile teams to prioritize, manage, and execute work.\nIt's a way to facilitate the groupwork and make it more efficient in terms of time and quality. \nThe main concept in SCRUM is the sprint, which should occur regularly and be preceded by a planning and finished with a review. This happens during meetings. \n\n+SCRUM is quick : it allows the ability to change some  stuff without any problem and without changing all the work from the beginning. The Spiral model is different in this way. If you have to change something in the implementation, you must go back to whole spiral and that increases the costs.\n(adding an interface)\n\n+High customer collaboration: we don't need  to wait till the end to know if our work is appreciated by the customer, we make changes in every part of the scrum, differently to the spiral.\n(the customer changes his preferences during our work.) \n\n- SCRUM require little planning. This seems to be a good idea, but this will let the chance of making mistakes so high, because we don't treat a project with a unified big planning that covers all the work to be done, but as separate parts to every sprint. In this way, Spiral model may be more efficient ,it goes from a unified planning that covers all.\n(a customer wants you to design a webpage, you do it quickly and show it to him, he doesn't like it, you go another time and repeat the work and then lose too much time, because you didn't have enough informations about the webpage, you have only a little list of TODOs which cannot cover all the ideas.)\n\n- SCRUM is known to have a big interaction with the customer, which we can take as a benefit and a good way to make more and more communication. But, that go in a negative way. A customer can have too many requests that should be done and we are supposed to make him happy in every implementation, even if he doesn't have any idea about how should the work be done. \n(a customer of medical science gives some requests and you made what he wanted, but the quality of the product decreased.)",
      "score": 64.6,
      "language": "ENGLISH"
    },
    {
      "id": 5644924,
      "meta": {},
      "text": "Scrum is a framework for organizing projects, which is iterative and incremental. At the beginning the team has a project kickoff meeting, where they decide what the requirements for the final product are. Then the team goes into a sprint, usually of about 2 weeks to one month, where they work on a specific goal set at the beginning of every sprint. At the end of the sprint, the results are evaluated, and the next sprint is planned. The team also has a daily meeting of approx. 15 minutes to share concerns that they might have and keep the rest of the team updated.\n\nThere are some advantages and disadvantages to applying Scrum to our Software startup: \nOne of the key aspects of Scrum is the daily meeting. Which brings together all the members of a team every morning. The advantage of this is, as said above, that all the members are kept up to date with the current progress and can organize themselves accordingly. The big disadvantage of this is its very bad scalability. As a startup we still have small teams, where the meetings are short and you can keep track of your team members. But as we grow our teams, we would have to take longer and longer daily meetings, where you not always hear \nrelevant information to your specific task at hand and it could become a big waste of time. \n\nAnother advantage of sprint is the fact that the short sprints allow for very quick changes based on feedback of the last sprint. This is possible if every team member is honest about the problems and the work they did after every sprint. The mayor disadvantage of this, would be that if the person organizing the scrum, as a scrum master is not trusted by the team, team members, in fear of appearing low performant or losing their job, are not honest about certain problems in the project. So, problems aren't resolved correctly.\n\nIn comparison to the spiral model, the first point would be very much in favor of scrum, since it will take a long time until the startup starts growing at a rate where scrum is no longer practicable. So it would be more time and money efficient to apply scrum.\nTo the second point, as we are a startup, the hierarchy of the teams tend to be flat. So trust in the scrum master wouldn't be so hard. Also startups usually have to be very flexible, which scrum allows much more, because of the daily meeting than the spiral model.\n\n\n\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644933,
      "meta": {},
      "text": "Scrum is \"a framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value.\" Scrum has regular and fixed length sprints, as well as roles such as product owner scrum master and develpoment team.\n\nADVANTAGES:\nScrum divides large projects into easily managable sprints. Example: If a customer wants a giant project such as search engine to be implemented, it is impossible to have it done in a short notice. Instead, development team just divides it into parts and improves it with every sprint. By doing so, at the end of every sprint, customer gets to see the sprint result and gives feedback regarding it.\n\nThe individual effort of each team member is visible during daily scrums. So there is no one who makes credit off of other people. Example: If a team member does not do given task, scrum master as well as other team members can evaluate that during a scrum meeting. He / she could have been warned or replaced.\n\nDISADVANTAGES:\nDaily meetings can frustrate team members. Example: If a team member has to show the progress of the part he/she is dealing with every single day and has sort of an anxiety, due to visibility, it could seem like he is not doing the sprint well, even though he/she is successfully doing the sprint.\n\nThe chances of project failure are high if individuals are not very committed or cooperative. Example: It is a team work and if someone thinks that he/she is better than others and tries to do the whole work or does not participate due to lack of trust to other team members, it would affect the team members and it would be a failure.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644979,
      "meta": {},
      "text": "Scrum is a framework which focuses on working together as an team. You work in two to four week spans and you try to create an increment of your product that you can ship to the client. After one week span, you revise the problems you had and you try to adapt to it. \n\nScrum lets you better react to change from the client. When the client finds out, that his requirements changed and the software needs to be revised, he can therefor just ask the development team to do the revision in the next sprint e.g. change the conversion rate from euro to dollar. It would not be possible (or hard) with the waterfall model. It also facilitates team work and team health. Because after every sprint you revise your problems, the team can therefor learn from them and adapt. This reduces friction. When you need one more person in a division (because you couldn't make all tasks) you can therefor just restructure your team. But one disadvantage is that it requires experienced personal. It has many steps and it can be difficult for management to track all the changes. You can easily mismanage your team if you dont know what you do. You could use to many resources (time) for unnecessary meetings (e.g dailys) that  return nothing of value. Furthermore you may need to restructure your organisation to work with scrum. You need personal for e.g a scrum master or project owner and you also need small teams to work best with scrum (Creating new sub-domains).\n\nThe spiral model does not react as good to change as scrum but it does not require big organisational changes to work. Furthermore it is easier to implement and the personal doesnt need to be trains as well as in scrum. It is a working model but for a lot of organisations, reacting to change is more important \n",
      "score": 29.2,
      "language": "ENGLISH"
    },
    {
      "id": 5645062,
      "meta": {},
      "text": "The difference between Spiral and Scrum methodology is the planning. Spiral follows a one-time planned execution strategy like a ‚ÄúMaster Plan‚Äù and is divided into phases where all stages of execution, design, development, and testing are completed into a phase. Scrum on the other hand does not plan for the complete project in the beginning. A scrum team plans for one iteration and works on it. Typically a cycle lasts 2 weeks. While it is less planning intensive in the beginning, every day you review the backlog and see its progress. \n\nThe benefit of scrum is that because it is iterative when there is a change in product requirements, it is easy to alter the plan and prioritize certain features. If implemented correctly, a Scrum team is very transparent. It prioritizes shared knowledge, due to the fact that there are daily status updates as well as sprint planning and retrospective sessions where teams review and continuously improve on their working styles and communication.\n\nWhile Scrum at first makes sense, it may not be the best option as it is very hard to implement. A proper scrum team needs to have a well-trained team of engineers who are able to work on different problems and are not specialized in just front-end or back-end development. To properly train and equip a scrum team requires significant effort for engineers to share their knowledge and develop the skills to work on all types of problems. Another problem with Scrum is that it is hard to implement within a team if they are not fully committed to it. It is a lot of work to run daily meetings, and the testing requirements for Scrum are quite aggressive for each iteration. This can cause burn-out for team members and sometimes make them lose motivation.\n\nSpiral is great when the end-product is well defined and requires minimal changes to the requirements. However, due to the flexibility of the iterative model that Scrum provides, for products that require lots of user feedback and changes, a Scrum approach may be the better option.",
      "score": 56.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620294,
      "meta": {},
      "text": "- Core essence: Scrum allows work to be performed in parallel and it is a great way to deal with changes. There are several roles within a scrum team who focus on one objective at a time, and scrum meeting is aimed to achieve the goals of the project.\n\n- Advantage: Scrum is flexible, since agile processes deals with interruptions in a efficient way. E.g. the product owner can add new requirements to the product backlog or change the existing tasks during the project and different roles are played in the scrum to finish the task in parallel. Whereas spiral model doesn't allow change withn an actiity.\n\n- Advantage: Reduced risks. E.g. there are several scrum meetings conducted frequently during a project to discuss the progress of the individual team members and also to report any difficulties in the process, which improves the communication and cooperation, and problems are found more quickly. The spiral model is suitable for high risks projects, there are 9 iterations withn a spiral model and risks can be identified and resolved in each iteration.\n\n- Disadvantage: Scrum is simple set of roles, responsibilities and meeting that never change, and it is appropriate for small group, when there are more than ten members, they could delay the decision-making process hence slows the work. The Spiral model is a traditional software development model which combines elements of both incremental and prototyping in stages.\n\n- Disadvantage: Scrum is hard to implement and requires skilled members. The team needs to go through an aggressive testing process to implement the quality successfully. Adopting the Scrum methodology involves extended periods of intense work and everyone involved needs to have experience and skills to quickly and successfully perform their own tasks. The Spiral model also requires highly skilled and experienced team members.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620983,
      "meta": {},
      "text": "Scrum is a framework mainly used by software developers but can also be used in all kinds of different industries. It s a way of work that focuses on different team members (Scrum-team) to work together and develop an end product with multiple sprints (runs) with a potentially shippable product (prototype) at the end of each sprint. In a scrum team, there are developers, a product owner, and a scrum master who manages the developers. The artifacts of Scrum are the product backlog (decided by the product owner), sprint backlog( planned tasks of the sprint), and the potential product. There are also meetings before every artifact and a daily scrum meeting and a sprint review meeting. \nScrum is used by many companies as it can be really useful as it divides big projects into sprints. This dive and conquer tactic helps developers as they just focus on the daily sprint and don't get caught up on the other many details of the project.\nIt also favors product owners as they can get an insight at end of the each sprint and can comment on the strengths and the not desired part of the project. \non the other hand, scrum requires an extensive planning phase. Every sprint must be taught in detail beforehand.\nIn addition to this, scrum requires constant communication through daily meetings which can take a lot of time.\nSpiral modes is an \"old\" method based on constant risk analysis. It is harder to adapt to changes coming from the product owner during the development process. It requires a much more detailed and extensive plan compared to Scrum.\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621338,
      "meta": {},
      "text": "Scrum is anframework for teams to work together, organize and adapt to simple or complex problems and tasks with 3 roles: The Product owner defines the work and states the problem in the product backlog. The Scrum team works in repeated sprints where they complete a selection of work to create a product increment at the end of every sprint and they meet in daily scrum meetings and thus constantly improve the result. The scrum master ensures that everything works as intended with the scrum structure and is the link between owner and team to support and enable everyone.\nAdvantages:\n1. tasks can be completed quickly and efficiently and create increments frequently due to parallel work and good communication.\nIn our EIST team project e.g. we meet every week to see what tasks we have completed and what tasks we still have to work on and assign new todos for every subgroup and individual team member and makes the teamwork more efficient.\n2.adaptable and flexible since it is suitable for many different environments and tasks\nE.g. in our EIST project we realized there are more tasks than expected in the scrum meeting. we just assigned the new tasks as todos for our subgroups and individual team members over the next sprints.\nDisadvantages:\n1. difficult to use for larger projects due to close coordination and precise planning \nE.g. in our EIst project with 5 team members, we sometimes already have problems finding meeting times where everyone is available, and also for the meetings with our tutor (scrum master) it is rare that all team members can participate which becomes more difficult for bigger teams.\n2. Every team member needs to be experienced, motivated and skilled in the work he/she needs to do.\nE.g. If one team member is new to the company/project and can't complete the tasks assigned, the entire team lacks behind since the time plan is very tight.\n\nIn comparison to the scrum model, the spiral model is less effective in resources and time and also less flexible since the project is mainly planned once in the beginning and there is less communication and feedback.\nHowever, the spiral model is much more suited for larger projects and one team member that is not very skilled has less of an impact on the spiral model.\n",
      "score": 87.5,
      "language": "ENGLISH"
    },
    {
      "id": 5621523,
      "meta": {},
      "text": "\nScrum is an adaptive technique model which is prepared to react to the changing requirements and to deal with interruptions. It involves managing a project by dividing it into multiple phases and repeating a cycle of planning, executing, and evaluating at every phase. Scrum's cycles are called sprints and typically last between two and four weeks, with the entire work reviewed after each sprint.\nAdvantages are actually intuitive. Its agile development is exactly its selling points. I have worked with this methodology to implement a game called‚Äù Bumpers‚Äù. When our team is almost done with this program, a sudden change in requirement from the customer is occurred, that we should figure out some more creative car types and interesting Gameboards to attend a competition. Thanks to the Scrum model, we start immediately a sprint retrospective meeting, and we finally work this out. However, our current Spiral model may not be able to adapt this change because the Implementation process has finished, it is hardly to start a new iteration. From the same instance, another advantage is ready to come out. We Scrum teams working together and analyzing ideas from others, creativity is encouraged, and new ideas appears. Such collaboration leads us to better quality program. Everyone take full responsibility and is productive. Therefore, we won a prize in the end.\nWhat is most difficult for a Scrum is that the team requires extensive training. My team has been through a lot before we win the prize. We are well-trained and skillful and need to understand the benefits and particularities of the certain approach for the project to be a successful one. Other difficulty is that we may need transformations within our company. For example, during the process of a Scrum, different departments of our companies are required to collaborate and work as team. But I don‚Äôt think it impossible since we are at startup and are full of energy!\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622646,
      "meta": {},
      "text": "Core essence of scrum: With the scrum method, it is possible to manage and control software development with rapidly changing requirements. It's a project management system that relies on incremental development and through improved communication, it enables better risk management.\n\nAdvantages:\n- Flexibility and adaptively. E.g: Product owner has a feedback that needs to be implemented. -> The scrum team can amend change in any part of the project without affecting the project output\n- Lower costs. E.g: Product owner has a limited budget -> Scrum method lowers the costs by reducing the insignificant documentation and controls and therefore the overall costs\n\nDisadvantages:\n- Doesn't bother about the deadline. E.g: Product owner has a strict deadline -> Scrum ensures that every team member meets their personal deadlines, it doesn't take the project deadline into account.\n- Not appropriate for large and complex projects. E.g: Product owner has a large-scale project -> Scrum method is most suitable for small and medium-scale projects \n\nComparison:\n- As in scrum method, spiral model also provides flexibility in requirements. We can easily change requirements at later phases and they can be incorporated accurately. Also, additional Functionality can be added at a later date.\n- Spiral model is more costly than scrum model\n- It is also hard to manage time with spiral model as in scrum. The number of required phases is often unknown, which makes time management very hard.\n- Spiral model is more suitable for large-scale and complex projects\n\n\n\n\n\n\n",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5619766,
      "meta": {},
      "text": "SCRUM is a empirical approach where you develope your product, after creating a product and sprint backlog, in short time periods of 2-4 weeks and short daily scrum meetings, the sprints, so you can quickly adapt to changes. After every sprint you have a potentially shippable product. It's a incremental approach with transparency that everyone can see the process and it gets inspected frequently so you can quickly detect problems and fix them.\n\nAdvantages:\nYou can easily deal with interruptions because of the short time periods and scrum meetings. You can quickly change the next sprint backlog to deal with the change of the interruption.\nA second advantage is that it is easier to develope large products because you split it into small pieces that are managable to implement in a sprint, so you don't get lost. The code of the sprint also gets reviewed every sprint so you can quickly detect errors.\n\nDisadvantages:\nIf there's a big feature that needs more time than a sprint is's complicated to develope it because you can't split it into pieces and can't manage to do it in one sprint, so you are weeks behind and don't have shippable products.\nYour team members need to adapt to the daily meetings and the whole SCRUM system, if they don't fit they can slow down the whole developement process by not finishing their tasks on time so you can't continue with the follow up tasks.\n\nComparison to Spiral:\nSCRUM and the Spiral are both iterative concepts that have a lot of similarities\nA difference is that the requirement won't change a lot during developement in the Spiral concept so interruption dealing is a lot harder. In scrum they are really flexible.\nBecause of e high risk analysis dealing with large products is a lot harder in the Spiral model.\n\nLarge products are also an advantage of the spiral model because it has lot's of risk analysis.\nLike SRCUM, the team members have to be skilled and need to understand the concept.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620067,
      "meta": {},
      "text": "Scrum, just like the spiral model is also a non-linear model which is based on several iterations to create the final product. Every iteration, the team tries to a implement certain points from the product backlog (a list that describes the parts that have to be implemented in order to statisfy the customer), with the goal to extend the functionality of the potentially shippable product. During these Sprints the team holds daily meetings and at the end of every sprint a sprint review meeting is held to evaluate the performance and issues which  occured during the sprint.\n\nThe main advantage is the adaptability of SCRUM: e.g. the customer demands changes or additional features, the product backlog simply has to be updated and the changes can be implemented in the next sprint, without having to wait for the project to finish.\nIt's Highly parallel, as developement on all layers is possible. E.g. there is no need for the Server-Side Software to be completely implemented, before development on the UI can begin. As long as some basic functionality is provided, they can work in parallel.\n\nDisadvantages would be: the meetings requires a lot of communication and cooperation between team members in order to be effective. E.g. inexperienced/ newly founded teams can struggle to use Scrum effectively, as there is no knowledge of each other and how everyone works/ behaves. \nAlso, in case a single team member isn't working properly the entire team will suffer, as this member of the team will act as a bottleneck regarding performance. E.g. one member is not able to complete his part of the sprint-backlog -> the entire development is held back if other parts of the program depend on it.\n\nThe Spiral Model is focused on solving risks, which were not anticipated at the beginning. This analysis before every phase is complex and time consuming. Scrum on the other hand focusses more on the adaptability of the development process, allowing changes from the customer. Also it's simpler to plan, as every sprint just takes some points from the product backlog.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620400,
      "meta": {},
      "text": "Core essence: \nScrum is a technique in project management that allows for projects to be adapted to continuously and rapidly changing requirements. This is particularly relevant in software engineering. A project is split up into multiple sprints, that each have a potentially shippable product at the end. The product is incremented every sprint and each sprint is followed by extensive communication about progress and things to be improved. \n\nAdvantages / Disadvantages Scrum: \nOne advantage of scrum is clear communication and transparency. There are daily/weekly fixed meetings to communicate any issues and the progress of every developer so everyone is up-to-date. If eg a problem is encountered on the client Side, the daily meeting can be used to update everyone and included new info in the entire project almost immediately.  With the Spiral model there are no set meetings, therefore some important information might get lost. \nAnother advantage is that scrum is centered around flexibility and changes. This means that every day small changes can be communicated and plans can immediately be adjusted. Bigger changes to requirements can be included with every new sprint. When the client wants additional features and abandon others, the product backlog can be adjusted in the sprint review meeting. The spiral model allows for changes only at the end of every activity, not mid way through.\nA disadvantage of scrum is that a lot of time that could be used for implementation is used for communication, due to fixed meetings. Eg, if a day went by without many news or issues, the daily meeting still needs to be held, which takes time away from developing without bringing additional value. The spiral model does not include fixed meetings, therefore meetings are only done when necessary.\nAnother disadvantage of scrum is that sometimes the big picture can be disregarded, as the focus is only on a few tasks every sprint. Eg when the task is to build a sustainable city and every sprint new important buildings are added, the big picture of the correct infrastructure or usability may be disregarded. The spiral model focuses heavily on eliminating risks with every iteration. Therefore the big picture could be disregarded when focusing too much on individual risks. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620959,
      "meta": {},
      "text": "Scrum is a technique that deals with interruptions (change) and helps to manage and control software and product development with rapidly changing requirements. After each development cycle (sprint) a working minimal viable product is designed. Scrum enables parallel process development and will improve the outcome for our customers through feedback.\n\nOne of the main advantages of scrum is the prototype created after each sprint. All members of the team need to think customer-oriented to produce an MVP with the customer requirements in the backlog. Therefore even large projects can be broken down into small easy to understand steps and nothing is overanalyzed. The best example is how we divided the bumpers game into small working pieces. \n1) Drive car \n2) Collision function \n3) Right before left rule \nSimilarly, the spiral model works also in iterations but focuses more on risk assessment than on creating an MVP. Moreover, it uses a linear execution model which is not as agile as Scrum.\n\nAnother advantage of the scrum approach is the daily scrum meeting which motivates and acknowledges the work done by employees. For instance, in our current stand-up meetings for the EIST restaurant case, each team member presents their achievements. In the spiral model, daily meetings are not as common as in the scrum approach but can be implemented. \n\nA disadvantage of the scrum approach could be that it is more difficult to estimate the total costs of the project. You are not able to anticipate all changes in the customer. For instance, in our software company, it would be harder to negotiate contracts because internal costs can increase rapidly after customer feedback loops.\n\nAnother disadvantage is that customer changes can reduce development efficiency. For example, constant requirement changes from the customer can lead to the distraction of the core project focus. More time is spent on implementing changes than getting the project done. \n\nSpiral doesn't have that much customer feedback which could increase efficiency and easier cost forecasting. However, it may lead to worse customer satisfaction and changes in the customer in the end. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621703,
      "meta": {},
      "text": "SCRUM is a method that works very well for complex development of products. The team receives the product backlog, a list of necessary tasks to prioritize in the project, from the product owner and breaks it into small chunks. These will then be implemented in a certain time duration chunk by chunk, by holding meetings to share daily updates and updating their progress within the team and the manager.\n\nThis advantages in agility of the project, as the manager and the team get constant progress updates and feedbacks making it easy to adjust on new orders from customers, as well as in visibility, due to it's nature of dividing a project into easy manageable chunks and it's constant update of individual progress.\nThe execution of Spiral model is less agile and visible, as it divides the project into four parts, instead of multiple small implementations. Though, the Spiral model has a high avoidance in potential risks, as they test the implementation out before going to the next step.\n\nThough, it's flaw is it's difficulty to exchange information if the team is too big, as sharing progress to a lot of people is time-taking and makes the progress less visible. Also, it requires a with-SCRUM- well-experienced team as committing to SCRUM without understanding it's benefits of the approach can be frustrating, since it eats up time in meetings.\nThe Spiral model does not have such daily meetings, therefore is not harmed by big teams. Though, it also needs members that are experienced in risk handling.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644760,
      "meta": {},
      "text": " Scrum is a software implementation methodology within a software development project that puts a special focus on the effectiveness of the implementation. It is a technique that deals with interruptions. With all the changing requirements of the project, scrum improves the risk management between them and controls the software and the product development. \nScrum holds so many advantages, first it can help teams complete project deliverables quickly and efficiently as they can actually prevent risks and works on the product development. And also developments are coded and tested during the sprint review. \nAs there are some disadvantages to scrum, like the daily Scrum meetings and frequent reviews , they require substantial resources like product owner requirements and decisions which are really important in the completion of the product. Also, the sprint backlog should not be changed within the Sprint to protect the team from too many changes.\nIn Spiral Model, likely to Scrum, it can deal with changes between activities, but does not allow change\nwithin an activity like the scrum doesnt allow changes withing the Sprint. And also as scrum completes project quickly and efficiently if it meets the owner's requirements and he accepts it , with Spiral model , there are 4 phases  and 9 iterations that it must go through and that could take longer. ",
      "score": 52.1,
      "language": "ENGLISH"
    },
    {
      "id": 5619590,
      "meta": {},
      "text": "Scrum is a an agile process methodology in which software is being developed incrementally. \"Reacting to change is more important than following a plan\" and \"Working software is more important than documentation\" are guiding two of its guiding principles.\n In fixed timeframes, the developers work on clearly defined goals (chosen before) while the process is monitored and steered by a scrum master.\n\nChange may occur very often during software development. A big advantage of scrum is the ease with which the developers can adapt to it. If our customer would like to have a feature added to his website very soon, the agility of scrum may help the developers fulfill hist request.\n\nScrum ensures efficient use of resources, such as time and money. The daily meetings enforce early communication which minimizes high-impact  errors that may arise from problems growing undetected for a notable period of time. A working student may fail to fulfill his tasks because he has been  left unsupervised for a long period of time. Daily meetings could prevent that.\n\nA possible disadvantage of scrum is so-called scope creep. If the projects goal overall has not been defined properly before beginning development, it may grow uncontrollably due to more and more aspects being added to it. In our example of web-design, a project intended solely as a static webpage may develop into a webshop, a logistics managing tool and business planning tool if not constrained early in the planning phase.\nAlso, the daily meetings might annoy the developers might consider it a waste of time. \n\nThe spiral model can not adopt to change as easily as scrum, thus scrum is clearly superior in this aspect. Also, the spiral model does not enforce frequent communication as does scrum, so scrum manages risk more effectively  than the sole evaluation of risks before the development of the product.\nThe more static approach of the spiral model makes scope creep less likely than scrum. Also, as no mandatory meetings are stipulated in the spiral model, developers not too fond of scrum may like it better and save some time.\n \n",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5620140,
      "meta": {},
      "text": "Scrum is a methodology that enables changing requirements during development and attaches importance to effective communication and work-sharing. In scrum teams, there are certain roles and meetings. Basically, in project kick off meeting, the scrum team gathers and determines what has to be done for the project and puts this to the product backlog. Until the project finishes, team participates in sprints with constant durations. Sprints are well organized with the help of planning and review meetings.\n\nIn scrum teams, the communication among members and their motivation is important. Scrum has sprint retrospective meetings that makes every sprint better than the previous one. So, members give feedbacks to each other openly and scrum master makes sure that everyone focuses the project and resolve problems if the burn down chart is unsatisfactory. But in spiral model, there is no special meeting for discussing problems among team, and there is no scrum master who checks if the progress is going well.\n\nScrum is perfect if the requirements change frequently. Scrum follows vertical integration, so team doesn't finish a part at once like in spiral model. For example the customer isn't so sure about what they want and wants to change something, if the team uses spiral model, you are stuck because probably the team has already finished the iteration that the change depends. But in scrum, you can reimplement any changing requirement in the next sprint.\n\nBut in scrum, since the whole project is not fully planned at the beginning, there is no hard deadlines and also no expected cost for the project unfortunately. Scrum is designed for change. In spiral model, you plan the whole project at the beginning and you follow a horizontal integration with prototypes in every iteration and they help the team to estimate a cost for the project.\n\nIt may not be a good idea to use scrum for a huge project. There is one scrum master and one product owner for the team. If the number of developers is too much, they can have difficulty in managing and coordinating the team and most probably the daily meetings may last forever if the team is crowded. However in spiral model, you don't have such roles and meetings so it is simpler to use for a large project. And the prototypes in every iteration helps the team and customer to see what they are doing especially in a long project. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620916,
      "meta": {},
      "text": "Scrum ist eine agile Softwareentwicklungsmethode. In dem sogenannten Product Backlog werden zun√§chst alle Anforderungen, die umgesetzt werden m√ºssen, in Form von User Stories festgehalten. In den sogenannten Sprints werden diese Backlog Items dann schrittweise abgearbeitet. Ein Sprint dauert in der Regel zwei bis vier Wochen, kann aber individuell festgesetzt werden. Vor Beginn eines Sprints, wird bestimmt, welche Backlog Eintr√§ge bearbeitet werden sollen. Entschieden wird dies auf Basis von Wichtigkeit und Aufwand der einzelnen Anforderungen. Falls eine Anforderung im Rahmen des Sprints vollst√§ndig erledigt werden konnte, wird sie im n√§chsten Sprint fortgesetzt. Am Ende von jedem Sprint wird in einem Review bzw. einer Retrospektive gemeinsame das Erreichte evaluiert. Eine Besonderheit bei Scrum ist au√üerdem, dass am Ende jedes Sprints ein ausf√ºhrbares Produkt steht, das theoretisch an den Kunden ausgeliefert werden kann. Bei der Arbeit mit der Scrum Methode gibt es verschiedene Rollen. Zum einen gibt es das Team der Softwareentwickler. Der Product Owner definiert die zu entwickelnde Software aussehen soll und welche Funktionalit√§ten umgesetzt werden m√ºssen. Der Scrum Master koordiniert den Ablauf des Entwicklungsprozesses und leitet beispielsweise die Scrum Meetings.  \nEin wichtiger Vorteil der Scrum Methode ist, dass die Entwicklung jederzeit angepasst werden kann, falls sich die Anforderungen √§ndern. Falls der Kunde beispielsweise w√§hrend der Entwicklung sich doch noch eine zus√§tzliche Funktionalit√§t m√∂chte oder eine bereits umgesetzte Anforderung √§ndern m√∂chte, dann kann einfach ein neuer Backlog Eintrag hinzugef√ºgt werden, der dann im Rahmen der Sprints abgearbeitet wird. Ein weiterer Vorteil ist, dass nach jedem Sprint bereits ein Prototyp der Anwendung vorhanden ist. Der Kunde kann so schon vor der vollst√§ndigen Fertigstellung das Produkt inspizieren und m√∂glicherweise auch schon teilweise einsetzen. Das Spiralmodell bietet nicht die M√∂glichkeit so flexibel auf √Ñnderungsw√ºnsche des Kunden einzugehen.\nDie Scrum Methode hat allerdings m√∂glicherweise den Nachteil, dass die zeitliche Planung f√ºr das gesamte Projekt sich etwas schwieriger gestaltet. Je mehr √Ñnderungen w√§hrend der Entwicklung gemacht werden m√ºssen, desto schwerer ist es den Zeitplan und auch die geplanten Kosten einzuhalten. Au√üerdem k√∂nnen st√§ndige √Ñnderungsw√ºnsche, die √ºberhand nehmen, beim Entwicklerteam zu Unmut und Demotivation f√ºhren.  Wenn beispielsweise eine Komponente, die mit viel Aufwand implementiert wurde, sp√§ter doch nicht ben√∂tigt wird, kann dies demotivierend sein. Beim Spiralmodell ist die Umsetzung der Entwicklung insgesamt vorhersehbarer.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 5621713,
      "meta": {},
      "text": "Scrum is designed to enable development teams to quickly adapt to changing environments (requirements, technologies) while trying to ensure incremental progress over several fixed time frames.  This is done by defining a flexible project backlog in which requirements for the software are kept and which is updated/evaluated constantly to reflect changes, and by distributing development over sprints in which small vertical increments are delivered - each adding to a working system with increased value.\n\nAdvantages of Scrum\n- In Scrum, risk analysis is done implicitly by frequently communicating progress and impediments in daily meetings.  This way, problems can be resolved at all stages during a sprint and efforts can be shifted to do so in an effective manner.  This is often required when, e.g., working with new technologies that a team has little prior experience with and must learn on the go. In the Spiral model, risk analysis is only done in dedicated phases, which makes it more fragile in constantly changing environments.\n- In Scrum, development focuses on vertical increments, while the Spiral model is rather concerned with horizontal increments. The former is more sensible in most software development environments today as change becomes more frequent with rapidly evolving technologies. Here, Scrum ensures a working increment at the end of each sprint, keeping the overall workflow flexible, while in the Spiral model it becomes hard to adapt to, for example, a new or changed requirement that enters the project midway through, as is often the case when developing mobile apps where feedback can be gathered rather quickly from (potential) customers.\n\nDisadvantages of Scrum\n- Scrum is not as easy to scale as the Spiral model. Without modifications, it is, for example, not possible to run a whole company or department thereof on Scrum. There are ways to introduce scrum on different levels of granularity, though this requires even more coordination and commitment from several people involved in the process.\n- Scrum seems complex on the outside as there is no clear set of milestones that are reached in succession. To measure progress, managers, e.g., have to understand the project backlog.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622681,
      "meta": {},
      "text": "Scrum consists of sprints, a sprint is a period consisting of different \"phases\", the sprint planning session determines different backlog items that the team is supposed to solve by the end. During the sprint every day short \"daily scrum meetings\" take place in which every team member is supposed to share the progress they achieved. At the end a review of the sprint takes place with the product owner. \n\nDisadvantages\nScrum can be very difficult when it comes to coordination.\nIf you work in large teams in scrum, the coordination is a factor which sometimes ends in mess if not done right, this can potentially end in too long meetings to fix the confusion created by wrong coordination.\nExample: Say a development team consists of 15 members, they now get assigned backlog items as a whole, if the communication now fails or the sprint planning session led to confusion potential mess is the result.\nIn the beginning of the spiral model every team member gets fixed with a specific task.\n\nThe success of scrum depends on the skill level of the team members (more than in other models).\nSince scrum is a very \"open\" or \"free\" development model, team members need to be very experienced when it comes to development or guiding the development process. The consequence of this is that often only very experienced teams can really succeed with this model.\nExample: If a team consists of 2 experts and 3 beginners, the beginners might not be able to work alone without being told what EXACTLY they are supposed to do, or don't understand the level of communication that is needed to succeed in scrum.\nIn the spiral model it also is good of course to have experienced team members but also beginners succeed because of a more defined structure (for example the exact definition of who has to do what).\n\nAdvantages \nWith the right team scrum can be very efficient.\nThe structure of scrum helps a good team to be very efficient because it has a very open and free working climate, also a lot of communication and working together is needed which with the right team basically ensures efficiency.\nExample: A development team has to finish a project in a short time, they all feel good in their working environment and work really well together which helps them finish their job and the problems they are supposed to solve faster.\nSpiral can be efficient too of course but is overall less free and more restricted.\n\nLarge projects can be divided in small manageable pieces.\nDividing the big problem in smaller problems (backlog items/ sprint cycles) makes the project more transparent and easier manageable.\nExample: In our Eist team we first tried to divide the whole project in smaller pieces, database them apis then GUI and in the end we connected everything this seemed much easier to manage than trying to do the project as a whole.\nThis is also the case in Spiral.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622745,
      "meta": {},
      "text": "As an agile software lifecycle model SCRUM heavily focuses on being able to adapt to requirement changes. This is realized by working in iterations (sprints) which each comprise the possibly parallel implementation of a set of features (sprint backlog) resulting in a product increment. After each of the sprints the pool of unimplemented features (project backlog) can be adjusted according to requirement changes.\n\nOne of SCRUM's major advantages is that customer satisfaction can be increased. While the spiral model focuses on realizing the requirements specified by the customer in the beginning, SCRUM allows the customer to continuously adjust requirements throughout development. An example might be a customer realizing that he dislikes the styling of the UI when reviewing a certain increment and consequently being able to change it.\n\nAnother strength of SCRUM is the allowance of continuous verification throughout the whole development. In this way software quality/resource management are improved. The spiral model uses linear processes to realize the objectives of each iteration. This causes verification to happens rather late resulting in late problem detection and thus increased resource consumption (money, etc..). In contrast, SCRUM embraces the vertical/parallel development of features enabling independent verification of individual features. A bug influencing the whole system for example could be detected earlier avoiding a lot of redesign.\n\nOn the other hand progress tracking in SCRUM is not as easy as with the spiral model where you have a fixed set of objectives. Here you always now how much of the project is currently completed. In SCRUM some unpredictability is introduced by allowing change of requirements which could pose a problem for some customers. For example a customer might not be able to involve the completion date of the product into his business plan.\n\nFinally the administration of a SCRUM project is more complex than a spiral oriented one as agile methods require a lot of communication/planning. This is avoided in the spiral methodology by using one set of requirements and linear components within the process. Requirement changes in SCRUM for example need to be communicated to the whole team.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623200,
      "meta": {},
      "text": "1)\nScrum is a process, that has been created to control process, and make sure to specifically apply the lean thinking method. The thought behing Scrum is to implement an incremental and iterative approach that specifically allows to optimize risk and predictability. Through Sprints, Product Backlogs and Sprint Backlogs we arrive at a Potentially shippable product increment. \n2)\n1. An advantage of the implementation of Scrum, is that teams are able to quickly and efficiently implent/complete project deliverables, through well planned and effective usage of time and money. Thus productivity and working hours of people in a company are used efficiently. \n2. Another advantage of Scrum would definitely be the testing process of Scrum, ongoing during and after the development of the Code. Through many different smaller Sprints, which are time dependent periods during which teams work on specific parts of the project. The sprints, that have many different testing stages affect the productivity, also making sure no risks are taken for the future.  \n3. A disadvantage of Scrum would definetly be the complexity to scale, due to enormous amounts of training required to have people that are competent to use Scrum. Thus implementation of Scrum may mean companies start to lose money.\n4. Finally a last disadvantage of Scrum would be the large adaptation of the standards and ways of working at a company making changes of programs costly, whilst not all projects necessarily require Scrum and that these are relatively complicated sometimes. Such models should help a company, not bring it down. \n2)\n1. through a more easy timetable of the project, each step can be changed or improves at later stages of the project, whilst risk analysis or handling occurs on a regular basis, and is efficiently implemented in the functioning of the company, with regularities. \n2. Software is produced early in the software lifecycle, with a high comatibility with high risk projects, thus products or projects are highly customisable and at the same time managable. \n3. The high customisability, makes it very complicated and expensive for small project to use it. Whilst at the same time the end time of the project is not necessarily known at the beginning. \n4. Companies often have standards, objectives and/or milestones set which are relatively complicated to defined at beginning or during the project. Not necessarily a model to be implemented for any kind of project.",
      "score": 54.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644678,
      "meta": {},
      "text": "SCRUM explanation:\n\nSCRUM is an agile model, which allows to implement changes afterwards or during the project with lesser risk, since a lot of meetings are being held in which the problems can be discussed and the team can react on time, creating an emphasis on the teams communication and cooperation.\n\nSCRUM advantages:\n\n1. One possible advantage of SCRUM is always having a potentially shippable product ready after the sprint, since it is an important part of Scrum to use vertical integration and with that constantly having a product increment, so in case the client would like to see how the progress the team has a working prototype ready to present.\n\n2. Another possible and important part of SCRUM, since it is part of the agile model, is the techniques agility that allows changes to be integrated rather easily, so when the client all of a sudden decides to add a new function, it is easier to implement it afterwards\n\nSCRUM disadvantages:\n\n1. Since SCRUM heavily relies on the communication between all the team members, the Product Owner and the Scrum Master. Through bad communication the project can be endangered. For example if one part of the team is experiencing troubles but does not tell about it in the sprint meeting it will endanger the project.\n\n2. Due to possible changes the end date can not be determined, it is easy to take on a little bit too much or too little and having to deal with not fulfilling all of the requirements and a project that would not fulfill the clients wished requirements for example.\n\nAdvantage comparison between SCRUM and Spiral Model:\n\n1. The Spiral Model does not deliver a potentially shippable product as SCRUM, since it follows the iterative model instead.\n\n2. The Spiral model is not as flexible as SCRUM, since you have to iterate over the last part again or in the worst case cancel the whole project if changes occur.\n\nDisadvantage comparison between SCRUM and Spiral Model:\n\n1. The Spiral model also relies on communication, although not as intensive as SCRUM.\n\n2. The Spiral model, being an iterative model, also can tempt the developers to keep iterating on a certain project.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619475,
      "meta": {},
      "text": "\tScrum is a technique that is used to manage and organise complex product development processes, while dealing with rapidly changing requirements and environment. By daily scrim meeting, scrum review and scrum retrospective the progress is being updated and adapted.\nSome of the advantages of scrum-framework are :\n\t+ The constant short daily sprint meetings provide up to date feedback and enable fast and flexible response to changes\n\t Example : during developing of  a music streaming service the client decides, that functionality of \"favourite songs\" list is no longer required. Due to daily meeting team can almost instantly react to the change (review and update the models of the system/ source code )\n\t+ During the daily scrum meetings the individual effort of each developer can be easily tracked and acknowledged\n\tExample : because of daily meetings of the team the effort and engagment of a hard-working team member is visible and can be encouraged, which could positively influence the general motivation   \nThe disadvantages are :\n\t- Scrum method can not be easily adapted for project development in larger teams\n\tExample : in a team of over 10 developers, daily scrum meetings would last too long, making them inneficient and time-consumptive. Splitting the team into multiple scrum teams would require a lot of organisational effort  due to necessity to organise quick communication between teams for better change management\n\t- The lack of accuracy of the defined task could lead to inaccurate estimated time and costs\n\tExample: because of vague task definition negative feedback of client / users could create a necessity to update/review/etc the project, that could lead to additional sprints required and result into missed deadline and costs, previously not discussed with the client \nComparison to spiral model :\n-> Change adaptivity : spiral model can adapt to change better than other sequential models (in the planning phase), however not as fast as scrum due to absence of daily meetings\n-> Individual effort : in comparison to scrum, spiral model  provides the supervisors less opportunities to track the effort of each developer\n-> Bigger teams : intense planning and absence of every day meeting makes spiral model suitable for bigger teams\n-> Time/cost accuracy: The precise evaluation of risks and constrains of spiral model allows to estimate the required costs and time more accurate then with scrum. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620856,
      "meta": {},
      "text": "The essence of Scrum\nThe essence of Scrum is to focus on the team and the product, that is, to solve the customer's problems by delivering a product.\n\nDisadvantages of Scrum\n1. The Scrum process is only suitable for small and medium sized projects. This is because companies adopting Scrum at the organisational level may face challenges with Scrum scalability. But the spiral model is suitable for large projects.\nExample: Bumpers game is a small game, use the Scrum process to divide the Bumpers game into manageable sprints.\n2. Quality is difficult to achieve until the team has progressed through aggressive testing. The team needs to go through an aggressive testing process to successfully implement quality. The scramble process requires significant skills and judgement. Teams can only learn skills on the job, which involves coaching, and this can take time. But the spiral model builds large system products in small segments to a high level of quality.\nExample: In the Bumpers game each sprint phase is followed by a new executable version of the game or a new feature, but does not exclude the existence of efforts in between.\n\nAdvantages of Scrum\nThe Scrum process makes it easier to adapt projects to changes because Scrum is People oriented, but the spiral model is Process Oriented and is not very flexible when adjusting requirements or projects because it relies too much on risk analysis etc. and the process is complex.\nExample: In the Bumpers game customer requirements are constantly changing and the Scrum process adds and removes changes to them at each sprint.\n2. Scrum ensures efficient use of time and money, thus reducing development costs and allowing faster delivery of the product to the customer. Because the scramble method reduces costs by reducing unimportant documentation and controls. But too many iterations of the spiral model can increase development costs and delay commit times.\nExample: Use the Scrum process to divide the Bumpers game into multiple sprint phases, thus reducing time and making costing easier.\n",
      "score": 77.1,
      "language": "ENGLISH"
    },
    {
      "id": 5621393,
      "meta": {},
      "text": "Scrum is a lightweight framework that helps people, teams and organizations generate value through adaptive solutions for complex problems. In the beginning a product backlog is created where all functional requirements for the product are listed. Then intervals are defined in which a subset of the product backlog are implemented that get discussed and validated afterwards.\nOne advantage of scrum is that large projects are divided into easily managable sprints whereas in the spiral model although there is an iterative way where the software increments, there is no specific dividing in subsets.\nAnother advantage would be that the team gets clear visibility through scrum meetings because through the (usually weekly) scrum meetings, there is a very good communication in the team and reduces the propability of  misconceptions whereas in the spiral model such meetings do not exist (although there is an evaluation part)\n\nA disadvantage of scrum is that it tends to lead to scope creep as there is no definite end-date defined but there is also no enddate defined in the spiral model.\n\nAnother disadvantage is that adopting scrum requires very experienced team members especially in larger projects (e.g. because you need good scrum masters and scrums of scrums...) whereas the spiral model is easier to adopt.",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5621652,
      "meta": {},
      "text": "Scrum is a methodology for agile software development. The goal of SCRUM is to respond quickly to change, deliver working software frequently and a close customer collaboration. This is realized by \"sprints\" - fixed time periods - in which potentially shippable product increments - defined by the \"Scrum Master\" based on requirements of the \"Product Owner\" - are developed by the \"Development Team\". \n\nAdvantages SCRUM:\n[A1] Scrum can help teams complete project deliverables quickly and efficiently; e.g. when a game is developed, different characteristics can be developed incrementally. First, the game structure can be developed, later the additional graphics and modifications of game settings. \n[A2] Large projects are divided into easily manageable sprints; this \"divide and conquer\" scheme can be applied e.g. when developing a University App whereas the requirements of the university (\"Product Owner\") change frequently and features should be changed during the project. This might be the biggest advantage of SCRUM: reacting to change as fast as possible and collaborating with the costumer as close as possible to ensure satisfaction. \n\nDisadvantages SCRUM: \n[D1] There is no maximal \"Sprint\" count, which could lead to projects lasting very long; e.g. if a costumer is unhappy with a product, the SCRUM framework will never propose an end of the project\n[D2] No risk management; e.g. potential development risks could be thought through insufficiently \n\nComparison to \"Spiral Model\": \n[A1] There is not necessarily a \"shippable product\" at the end of each iteration in the \"Spiral Model\"\n[A2] Similar for the \"Spiral Model\"\n[D1] The absolute length of an iteration is not defined. However, the projects ends after 9 iterations (-> clear project ending)\n[D3] The risk management plays a central role in the \"Spiral Model\".\n\nIn conclusion, Experts recommend the \"Spiral Model\" for long projects that have high risk since the model highly depends on risk management. For smaller teams and projects with high requirements volatility, the SCRUM model is proposed since it enables very quick adaptions to change. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622174,
      "meta": {},
      "text": "Scrum is a framework of an agile methodology for effective collaborations among teams working on complex products. The Scrum Team consists of Product Owner, Scrum Master and Development Team. Scrum defines 3 artifacts: Product backlog, Sprint backlog and Potentially shippable product increment. The Product Backlog is an ordered list of everything that is needed in product, whereas Sprint Backlog is a set of Product backlog items that team tries to achieve in a given Sprint. Product increment is the sum of all Product Backlog Items completed during a Sprint (Time-box uo to 1 month during which the team creates a potentially shippable product increment and have constant durations throughout project). Also in Scrum is Daily Scrum-a every day 15-minute time-boxed event for the Development Team to inspect progress toward the spring goal. Of course, there are some pros and cons of Scrum. Scrum ensures effective use of time and it's an adoptive framework, which means that changes in requirements won't affect rapidly negative, conversely, based on feedback from customer and stakeholder it can enhance product. On the other hand, as it was mentioned, scrum is team based, which means if any team member leaves in the middle of a project, it can have a huge negative impact on the project and the framework can be successful only with experienced team members. For example, during project, suddenly, customer comes with new requirements and demands to add new features on a later stage, in case of SCRUM, it's not going to be increadibly time-consuming and difficult, because it's easy in SCRUM to adopt to changes and as tasks are divided into team members, it wouldn't cost so much time. However, when suddenly one of the team members decide to give up on a project, it will create chaos, because it will cost time to replace this team member and find experienced one. Actually, in order to create a product based on SCRUM framework, it's neccesary for team to consist of experinced developers, which is almost always hard to fulfill. In case of Spiral Model, we also can add new features on a later stage. However, in Spiral Model the successful completion of the project is very much dependent on Risk Analysis. Without very highly experienced experts, it is going to be a failure to develop a project, as was mentioned before with SCRUM.",
      "score": 45.8,
      "language": "ENGLISH"
    },
    {
      "id": 5644750,
      "meta": {},
      "text": "Scrum is a example for a agile software development system. The core of every agile system is to be able to react to any kind of interruption and change. Scrum in particularly is designed for team with ten or fewer members, and can adjust quickly because there are daily meetings and sprint reviews every 2-4 weeks.\n\nA huge advantage for Scrum is definitely the customer satisfaction, as there is a meeting with the customer so that he can give feedback on the current work and therefore influence the outcome of the project. Another advantage is for sure the flexibility and adaptability of Scrum, as it can be used for a wide variety of environments and can even adapt to one.\nDisadvantages on the other hand are that it is commonly used for smaller teams (ten or fewer people) and can therefore not really used by larger companies/teams. That is because it is harder to manage and distribute work between more people. Another disadvantage could be that a unexperienced team, which have never worked with each other before, will probably perform worse than with a traditional system, because they don't know the limits and capabilities of there colleagues.\n\nThe Spiral Modal is a iterative development system; that means that it has all aspects of a lifecycle - requirements analysis, risk analysis, planning, design, architecture and of course the release of a prototype. This is different from Scrum, since Scrum is iterative and incremental and the iterations are shorter. And after each iteration there is not a release of a prototype but a release of a working program (product increment).",
      "score": 60.4,
      "language": "ENGLISH"
    },
    {
      "id": 5619704,
      "meta": {},
      "text": "Vorteile von Scrum:\n1. Anpassungsf√§higkeit und Flexibilit√§t\nDas Scrum-Framework ist eines der flexibelsten Frameworks, das immer bereit f√ºr √Ñnderungen ist und sich an jede Art von Situation anpassen kann. Am Beispiel der Pandemie, wo die Arbeit aus der Ferne durchgef√ºhrt werden musste, hatte Scrum bereits die Idee des Remote-Arbeitens, das die Anpassung an den Remote-Produktentwicklungsprozess erleichterte. Scrum eignet sich am besten f√ºr Situationen oder Umgebungen, die unsicher sind und in denen die Anforderungen zu Beginn der Arbeit nicht genau definiert werden k√∂nnen. Es ist der Ansicht, dass im weiteren Verlauf der Arbeit das Feedback und andere Faktoren den Weg f√ºr den Prozess der Produktentwicklung ebnen w√ºrden. Flexibilit√§t erm√∂glicht es den Entwicklern, innovative Produkte zu entwerfen und kreative L√∂sungen f√ºr komplexe Probleme zu finden, die das Produkt l√∂sen muss.\n\n2. Innovation und Kreativit√§t\nWenn es eine wettbewerbsorientierte Welt da drau√üen gibt, ist es das beste Unternehmen, das die innovativsten Produkte gem√§√ü den Bed√ºrfnissen des Kunden herausbringt, das √ºberlebt. Jeder will das beste Produkt f√ºr den Preis, den er bezahlt, und das Unternehmen muss die Bed√ºrfnisse des Kunden erf√ºllen und zufrieden stellen. Das erfordert viel Kreativit√§t und Innovationskraft, die das Scrum-Team mit exzellenten Ideen beweisen muss. Scrum f√∂rdert eine agile Denkweise und eine Umgebung, die Ideen von allen Teammitgliedern f√∂rdert und ihnen hilft, die Ideen zu diskutieren, sodass der Gesch√§ftswert maximiert und die besten Produkte geliefert werden k√∂nnen.\n\n3. Bessere Qualit√§t\nQualit√§t hat bei Scrum schon immer oberste Priorit√§t, da die mit dem Scrum-Framework entwickelten Produkte einen hohen Wert aufweisen. Die Entwickler im Scrum-Team √ºbernehmen die volle Verantwortung f√ºr das zu entwickelnde Produkt und arbeiten in einem sich selbst organisierenden Team. Dies schafft eine Umgebung, in der freie Gedanken und Ideen umherstreifen k√∂nnen, wodurch die Entwickler hervorragende Produkte entwickeln k√∂nnen.\n\n4. Kundenzufriedenheit\nDa Scrum Kunden w√§hrend des gesamten Prozesses der Produktentwicklung einbezieht, ist die Produktqualit√§t √ºberlegen und wird von den Endbenutzern gemocht. Die Produktinkremente, die dem Produkt hinzugef√ºgt werden, basieren auf dem Feedback der Benutzer. Dies erh√∂ht die Wahrscheinlichkeit, dass die gelieferte Endversion des Produkts von den Kunden akzeptiert wird und sie zufrieden stellt. Die Eingaben und R√ºckmeldungen helfen dem Entwickler auch, sich ein Bild davon zu machen, was der Kunde erwartet, und w√ºrden ihn davor bewahren, ein falsches Produkt zu entwickeln.\n\nNachteile von Scrum\nDa jede Medaille zwei Seiten hat, gibt es Nachteile von Scrum, die man kennen muss, bevor man Scrum in seiner Organisation einf√ºhrt. Hier sind einige Nachteile, die unten aufgef√ºhrt sind:\n\n1. Scrum erfordert F√§higkeiten und Training\nUm den Prozess in Scrum so zu verstehen, dass die Unternehmen ihn erfolgreich umsetzen, ist ein erheblicher Schulungsaufwand erforderlich. Unternehmen neigen dazu, Geld bei der Schulung zu sparen und die Mitarbeiter √ºberhaupt nicht √ºber Scrum zu schulen, was in sp√§teren Phasen zu Chaos f√ºhren k√∂nnte. Sie verstehen nicht, wie wichtig es ist, und unternehmen nicht den angemessenen Aufwand, der f√ºr die Mitarbeiter erforderlich ist, um den Prozess vollst√§ndig durchzuf√ºhren. Daher entwickeln viele Entwickler Produkte mechanisch, ohne die Prinzipien hinter dem Framework vollst√§ndig zu verstehen, was auf lange Sicht unwirksam wird.\n\n2. Scrum erfordert eine Transformation auf der Ebene der Organisation\nWenn ein Unternehmen durch den Einsatz von Scrum erfolgreich sein soll, sind die √Ñnderungen auf organisatorischer Ebene erforderlich. Dies erfordert, dass die Gesch√§ftsanwender im Geiste mit den Entwicklern zusammenarbeiten und zusammenarbeiten. Dazu m√ºssen die organisatorischen Barrieren beseitigt werden, was nur schwer oder gar nicht m√∂glich ist.",
      "score": 0,
      "language": "GERMAN"
    },
    {
      "id": 5620327,
      "meta": {},
      "text": "SCRUM:\nWhile the spiral model is an iterative software development model, Scrum is an agile development model, meaning it can deal not only with change between activities, but also allows changes within an activity (deals better with frequent change). Through an iterative design and frequent meetings, Scrum can improve risk management. Scrum typically consists of a sprint that lasts 1-4 weeks, recurring meetings, backlogs, and predefined roles.\n\nADVANTAGES\n- As mentioned above, Scrum can deal with change between activities AND change within activities. After every sprint, we have a shippable product, and can therefore collect customer feedback on the product increment (e.g. a new software feature), which facilitates further development and allows changes to be decided and made quickly. This is similar to the prototype verification in the spiral model, however, since the coding only begins in the 5th iteration, customer feedback on the actual product cannot be collected before then.\n\n- In addition, the extensive communication and many meetings in Scrum allow problems to be identified and dealt with early on. For instance, if a developer is blocked by something and therefore cannot continue their work, the Scrum Master will know this very quickly due to the daily scrum meetings. In the spiral model, since there are no specific rules concerning regular communication, this may not be identified.\n\nDISADVANTAGES\n- In a spiral model, the developers can use most of their time on coding. In Scrum, developers‚Äô work may be interrupted by the frequent meetings (e.g. the daily meetings, which may not always be necessary). Thus, the time available to code is reduced heavily, which may reduce productivity and also frustrate developers.\n\n- Moreover, while the final objective is always clear in the spiral model, the ever-changing conditions in Scrum can lead to a lack of clarity and direction in product development. The scrum master and product owner have to ensure that the development still follows a roadmap and works towards a product vision, instead of simply working through the backlog.\n\nATTENTION: I took EIST last year, but sadly did not pass the final exam, and am therefore reusing my answer from last year (with some tweaks). Kind regards, Giulietta",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621006,
      "meta": {},
      "text": "Scrum is a technique that deals with change, it improves risk management by communication, cooperation and the delivery of product increments. It is based on an empirical process control model. \n\nLets talk first about the advantages:\n  1- Scrum ensures effective use of time and money: think about a problem that appear during the project, thanks to the daily meetings where we share the status, impediments and promises of the current project, we can detect the impediments quickly and put more effort on it and thus we save time and money. \n  2- Scrum can help teams complete project deliverables quickly and efficiently: thanks to the daily meetings and also to the sprint retrospective where we inspect the previous sprint and create a plan for improvements to be enacted during the next sprint.\n\nLets now talk about the disadvantages:\n 1- The chances of project failure are high if individuals aren't very committed or cooperative: this occurs because in the scrum the main point is to communicate with the other team members about the problems that appear during the project and cooperate with them to solve it.\n 2- Daily meetings sometimes frustrate team members: think about one team member that always brings impediments to the daily meetings due to his part of the project and see that all other team members improves correctly and do not have any impediments, it can frustrate him.\n\nWith the spiral model if a risk cannot be solved, the project is terminated immediately and no changes can be added within an activity, those are the main differences between the spiral model and scrum but they also have similarities as they both determine objectives and alternatives.",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622240,
      "meta": {},
      "text": "Scrum is basically agile software development or project management. There is not one person who is delegating the tasks but team members are working self-responsible and distribute the tasks once the requirements for the product are defined. The essence of SCRUM is that it is not a linear process but you work in cycles, meet every day to discuss the progress and once one sprint is over, the results are discussed and reviewed and the goals for the next sprint are defined.\n\n2 Advantages:\n- you really focus on the quality of the outcome! E.g. all small bits and pieces are developed and tested on a very frequent basis! This ensures minimization of coding issues or errors. You regularly receive feedback and everything is very clearly visible. With the spiral model, customers can also evaluate the software and give feedback between activities.\n- You can easily correct mistakes early on and you can change direction if necessary before it is too late. This is an advantage because clearly, you lose less time and it is more efficient. Example: You start to develop a method and before connecting various interfaces with it or implementing it with a lot of dependencies that have to be changed later, you can early on detect mistake and change interfaces and dependencies. With the spiral model for example it is not possible to change direction within an activity. Only between activities, so you cannot react to frequent changes.\n\n\n2 Disadvantages:\n- There is no person who guides you so you need to have experienced team members. This is a disadvantage because you do not always have only experienced team members in your team. Example: New team members who start working there after their bachelors and have never worked with scrum. In the spiral model you have management, a leader that guides what you are doing.\n-In scrum you always only focus on the product increment and little parts of the whole project and working on them isolated for that sprint. this is a disadvantage because you might lose the feel for the bigger picture and where you want to go in the end. you do not have an overview. Example: I want to develop a restaurant reservation system but i only focus on little increments so i implement different restaurant types. Then I realize later I implemented a fast-food restaurant type but you cannot even make reservations in a fast-food restaurant. With spiral model this is less probable because it is a linear process for each prototype development. You develop a full prototype and not only an increment.",
      "score": 95.8,
      "language": "ENGLISH"
    },
    {
      "id": 5622804,
      "meta": {},
      "text": "1) Scrum is an agile software development methodology in which teams create value through adaptive, i.e. agile, solutions to complex problems. The core idea of Scrum is transparency, control and adaptability, all of which are necessary for successful software development. These core ideas help the team to update work and adapt to problems in each sprint review.\n\n2) \nScrum is an easy-to-control method where work progress is updated through regular meetings. As a result, project development is clearly visible and low-risk, as the developer and client communicate regularly. Developments are coded and tested at each sprint review, which helps to fix problems at each development step. On the other hand, adapting Scrum to a larger team is challenging because the quick, regular meetings are not useful for a large team. Also, daily meetings can sometimes be too rigorous and frustrating for team members.\n\n3)\nIn this case, the spiral model is better for large missions with larger teams because it is iterative and meetings are held only after each iteration, which makes it better for a larger team. But for smaller teams, Scrum is a better option. With regular meetings, every step of the project development is controlled and visible to all developers and customers. Also, the spiral model has limited use because new prototypes are developed in each iteration. In contrast, usability is high in Scrum because developers regularly communicate with each other and reuse existing code or adapt it in each sprint. In Scrum, the development of a software product depends entirely on the product owner, so user/customer involvement is very high, which is much higher compared to the spiral model. Every step is done in every sprint, so the direction can be easily changed if the requirements change.\n\nAll in all, both models have their advantages and disadvantages. But after looking at both models, we can clearly see that Scrum is an agile software development that our company needs to adapt to the requirements during software development and create a product that is accepted by the customer, who is also involved in Scrum.\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 5622833,
      "meta": {},
      "text": "Scrum is an agile model based on empirical process control. Projects starts with a kickoff meeting with a product backlog and then divides the working phase into different sprints, each 2-4 weeks long. During each sprint, there will be a daily meeting for 15 minutes for communication  and at the end of the sprint a review meeting is held with the potentially shippable product incremment and sprint retrospective follows.\n\nAdvantage:\n1. agile processes. Deals with interruptions and changes. Software engineering and programming always faces the problem that there will be not always linear activities and the customer has changable ideas. with scrum we can just add the new requirement to the product backlog and plan it in the next sprint to work on it. \nCOMPARE: sprial model is also flexible comparing to linear models. Changes is also avilable for it.\n\n2.  It encourages creative approaches. With Scrum teams working together and analyzing idaeas from all its menbers, creativity is encouraged and new ideas are likely to appear. In brainstorming process, there will be different ideas comming together. And also in sprint, the teammates will help eachother. If we talk with others about our ideas, there might hit our teammate¬¥s mind and comming up some new ideas. (Like pair programming and so on...)\nCOMPARE: In sprial model, rules and protocols mmust be adhered to strictly throughout the development. There will be no daily meeting or brainstorming. That reduce the creativities.\n\nDisadvantage:\n1. not entirely planned from the beginning to the end. There are so milestones to track the prograss. Example:  There will be no apparent deadline to deliver the finished product and the changing might make the making process longer and longer.\nCOMPARE: Same as Spial model. There will be difficulty in time management. As the number of phases is unkown at the start of the project, so time estimation is very difficult.\n\n2. strongly depends on teamwork. It requires the use of samll but experienced teams. Everyont involved needs to have experience and skills to quickly and successfully perform their own tasks. And the team works best with at least three people but no more than 10. Example: if the team is very large and some of them are not well experienced, the scum might be less effective.\nCOMPARE: not strongly depends on teamwork. But the project depends on risk analysis and requires highly specific expertise. It is necessary for involved personnel to have expertise in risk assessment. Because the entire project can be aborted if the risk is deemed too great.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644844,
      "meta": {},
      "text": "Scrum ist eine agile Arbeitsweise, die es uns erm√∂glicht, in k√ºrzester Zeit den gr√∂√üten gesch√§ftlichen Nutzen zu erzielen. Durch Scrum l√§sst sich ein Produkt sehr agil in Hinsicht auf Ver√§nderungen w√§hrend der Entwicklungsphase entwickeln. Beim Sprint Planning Meeting werden f√ºr einzelne Teile des Produkts verschiedene Priorit√§ten gesetzt und dann analysiert welches Team sich um welchen Teil des Produkts in diesem Sprint k√ºmmern. Am Ende jedes Sprints gibt es ein fertiges Produkt √ºber das entschieden werden kann, ob es ver√∂ffentlicht wird oder ein weiterer Sprint eingelegt wird. Durch t√§gliche Meetings w√§hrend des Sprints wird daf√ºr gesorgt, dass jeder auf dem neusten Stand ist, √ºber Ver√§nderungen informiert wird und anderen Teammitgliedern geholfen wird. \n\nDer wohl gr√∂√üte Vorteil von Scrum ist es, dass sehr gut mit Ver√§nderungen des Produkts w√§hrend der Entwicklung umgegangen werden kann. Da t√§glich Meetings vorgenommen werden, wird jeder Arbeiter schnell dar√ºber informiert, wenn sich Erwartungen des Kunden ver√§ndert haben. \nEin weiterer Vorteil ist, dass der Kunde durch die Aufteilung in Sprints auch w√§hrend der Entwicklung sich das nach dem Sprint fertige Produkt schon anschauen kann und dann entscheiden kann, ob es seinen Erwartungen entspricht und was noch verbessert werden soll.\nEin Nachteil ist jedoch, dass einiges an Zeit durch die h√§ufigen Meetings und den gro√üen Kommunikationsaufwand untereinander verloren geht, die in anderen, steiferen Projektmanagementmethoden in die Entwicklung geflossen w√§re.\nEin weiterer Nachteil ist, dass eine gro√üe Gefahr dahinter lauert, dass durch falsches Planen relativ einfach sehr viel Zeit verloren gehen kann, zum Beispiel wenn zu defensiv geplant wird und dadurch Teams unterfordert sind w√§hrend eines Sprints. \n\nW√§hrend beim Spiral Model das ganze Projekt am Anfang geplant wird und dort Iterationen mit Risikomanagement sehr lange dauern, in der Gr√∂√üenordnung von mehreren Monaten, wird bei Scrum hingegen immer nur f√ºr den n√§chsten Sprint geplant, der in der Gr√∂√üenordnung von Wochen dauert. ",
      "score": 56.3,
      "language": "GERMAN"
    },
    {
      "id": 5619416,
      "meta": {},
      "text": "Firstly, what is scrum, Scrum is an agile project managment framework, which incoperates meetings, tools and different roles that work in a simbiosis together, key attributes of scrum are it beeing adaptable , fast and effictive.  Scrum aims to satisfy the customers need through permanent communication with the costumor, it manages and controlls software and product development with rapidly changing requirements and improves riskmangement. Scrum itself consists of a scrum master, who guides the team, a product owner, who ownes the product, the development team which logically does the programming work aswell.\n\nThe first big a advantage of scrum, since its agile, work is performed as performed in parallel where as work in linear processes is performed squentially. (linear processes including iterative approaches such as the spiral model). The second big advantage of scrum are its flexibility and adaptively. Scrum glances in relatively uncertain enviroments where it isnt easy to define the requirement and solutions before staring a project. A key factore of scrum therefore is a sudden change in requirements, where as in the spiral model u have a one time planning followed by an execution phase. U therefore have much less time and opporunity dealing with sudden changes. \n\nTwo main disadvantages of scrum are it ignoring the project deadline, in scrum u have no definite deadline or timeline, every work is based on each sprint. Scrum focuses on continues improvement however having no deadline projects can get drawn out for a longer period of time which can prove to be a disadvantage. Then inn the spiral model each iteration gets planned before hand. \nAnother big disavantage of using scrum is that it works best for smaller teams (4-6 teams) so therefore this can be a problem if the team size is too large. (Hard to do daily sprint meetings etcs with a couple hundreds of developers. This then also gets amplified by scrum removing unnecessary activites that waste time and effort which and then results in a lack of risk managment. The spiral model is the opposit. There you are focusing on riskmanagement and plan each iteration accordingly.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619742,
      "meta": {},
      "text": "we use an example for explain the core essence of scrum, like we create a software that customers needed , then delivering or going live, it is all based on the customers' requirements. And change it for real-world scenarios, and release the version again.  Scrum Agile development is an iterative, step-by-step approach to development that focuses on the evolution of user requirements. \n\nfor example when a customer want to have a product, scrum is very suitable for him, the advantage is, at the beginning customers will be very satisfy with this software process, but at the same time, the disadvantage is they must have a large number of communication between programmer and costumer; \n\nand the second example is about the change of programmer, because the scrum means the whole team, every people has its own duty, if the whole teams solve the problems always together, it will be more easily to deal with change (Focus on rapid market responsiveness), on the opposition, if there is too much turnover in the project staff, it can make maintenance difficult, so this is also one of the disadvantages for the scrum. we can't avoid this problem in the process of work.\n\ncompared with the spiral model, although both of them  have a high degree of flexibility throughout the process and are free to respond to changes at any stage of the development process, the overly flexible development process for the spiral model is not conducive to coordination between the customer and the developer who have signed the contract. and it may only suitable for the large software engineering. \n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622757,
      "meta": {},
      "text": "Scrum is an agile and incremental Software development Lifecycle Model. You begin it with a Kickoff meeting where you define the Produkt backlog. Then you go through several Sprints which are about 2 to 4 weeks long, wich start with a sprint kickoff meeting, then repeatedly Daily Scrum meeting and in the end of a Sprint you do a Sprint review and a retrospective and you goal is to gain a potentially shippable Product increment.\nIn a Scrum team about 5-7 members there is one Scrum Master, one Product owner and a couple developers.\n\nScrum is very transparent, because of the daily meetings, and therefore developers can coordinate their work much better. While in the Spiral model we only had meetings between two activities every for every iteration.\nOn the other hand doing so many meeting can be a communication and logistic Overhead so you have to keep them short and efficient.\nScrum is very agile can adapt on changes from outside, because it works on all parts of the project in parallel. In the Spiral model if the Client wished for changes we had to go back and redo all the activities we had already finished.\nBut it is harder to measure progress and there is no view to the Projekt deadline. ",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5636991,
      "meta": {},
      "text": "The core essence of scrum: Firstly you have project kickoff meeting, where you create the product backlog, which is a bucket with all the things, that need to be done for the project to be finished. Then you have sprints of 2 to 4 weeks, where you pick yourself some of the tasks from the product backlog, that will be handled in the sprint and at the end you want to have a potentially shippable productr increment. In order to further organise the process you have a daily meeting.\n\nOne advantage is that you can easily deal with change. Within a sprint you don't chance the sprint backlog, but between sprints it is no problem to add or change tasks in the product backlog. For example if within a project the specification of the design changes, you change the specifiy tasks in the product backlog and then they will be handled in a sprint, when they are picked. That is a biog difference to the spiral model. There if you have left one iteration you don't go back to reevaluate something.\n\nAnother advantage is having working potanitally shippable product increments. So you can show you client fastly how thing will look like and he can give feedback which you can react on and consider for the rest of the project. For example when the layout in unclear you work on a layout in the first sprint and then show the product increment to the client. If he is not happy there is much less to chance, than it would be if the client could only see something after the whole software is finished. These product increments is something you don't have in the spiral model.\n\nOn disadvantage is that the team  has firstly adapt to the change of the working style. And we all know that structures in companies don't like to change. You wouldn't have that problem when staying with the spiral model.\n\nA last disadvantage is that you will more likly have to change different thing within the structure of the project, as not all tasks are considert at a time. For example if you have a sprint considering some functionality and later you want to add more functionality you will most likly have to change the layout in order to find space for new buttons. You don't have that problem in the spiral modal as you have a iteration considering the Detailed design considering all requirements.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619612,
      "meta": {},
      "text": "The idea of scrum is that it a technique that deals with interruptions and it also handles rapidly changing requirements by managing and controlling software and product development. Additionally by improved communication, cooperation and the delivery of product increments it helps improve risk management. By introducing sprints lasting 2-4 weeks it enables parallel work of the product backlog by the team and improvements by sprint reviews.\n\nScrum uses meetings to further improve upcoming steps. Problematic is that daily meetings take up lots of time of engineers that could have been used to solve problems. For example if the current sprints task of engineer Felix is to code the user interface of an app and they use daily scrum meetings of up to 30 min he will loose 2 1/2 hours a week, wasting 10 hours per month only in meetings. The Spiral Model does not have that problem as they only have one meeting reviewing and planning the next iteration. Another disadvantage of scrum is to use it in large teams. It might be really challenging to have a clear scrum structure in large teams because the communication gets messy. Imagine Felix having to talk to 20 people about his UX daily there would be way too much unstructured communication. The spiral model can handle large teams as they can be split up in smaller groups and iterations.\nPositive speaking for scrum is that this model is not entirely planned from the beginning but rather adapts to the current process, problems and needs of the team or the client. Therefore if Felix needs more time or help for his code he can ask to adapt the next sprint such that he has a second engineer helping him. That is really similar to the Spiral Model which plans their new iteration only if the prior one was sufficient. \nLastly large projects are divided into easily manageable sprints. Short sprints enable changes based on feedback a lot more easily and solve the problem in each detail. Differently the Spiral Model tries to solve risks in their iterations rather than projects.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621168,
      "meta": {},
      "text": "SCRUM is a project management framework, that can help fixing the problems of a Project.\n\nThe framework of SCRUM suggests, that after the product owner has defined the features and have a idea of what should be achieved, along with a product backlog, which is basically a prioritized list of features, the team will run through sprints.\n\nA Sprint usually last a few weeks, and within one sprint the team will plan, then build on the project, test it and review it, during this time, a ceremony called \"Daily Scrum\"will take place, which are breef standup meetings where the team discuss the progress, whether they need help. At the end of one sprint, there would be a usable end product which is called increment, where the accomplishments of this sprint will be highlighted. The progress will be demonstrated to the product owner at the sprint review and then it will be worked on how to improve. Then a new round of sprint will begin and at the planning stage the team will meet together to discuss the sprint backlog, which contains a list of userstories, items and bug fixes, the size will be estimated and prioritized, the team will select the items they would like to work on, the team will enter the building phase and so it will keep on running in this cycle, until the project is accomplished.\n\nSCRUM has many advantages: Because of the often plannings during each iteration, it is a highly fleixible and adaptive system approach. Also, because SCRUM does not expect one time planning but instead individual planning for each iteration, SCRUM starts working earlier.\n\nOfcourse SCRUM also has it's disadvantages, first of all it is best fit for a smaller team and not for a big one, as too many participants will extends meeting time and delay the project. It is also not plan driven as it is heavily based on user feedback.\n\nCompared with the spiral model, SCRUM is fit for smaller projects while spiral model is made for bigger and more complex  and plan-driven projects",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 5621486,
      "meta": {},
      "text": "SCRUM is an agile software developing method splitting work in small parts which are resolved in so called sprints. In this way the project is built incrementally through the process of sprints.\n\nAdvantages:\n- Visibility: Because of daily meetings all actions are visible at all times. The team members exchange their progress and all their decisions. Visibility is advantageous because due to the strong communication misunderstandings are rare and planning the next steps is easier. \nExample: If a team member changes something in the project, everyone will know and can adapt their work.\nspiral model: There is a review in each iteration but not as often and detailed as in Scrum.\n\n- Adaptability: With Scrum a team can handle change pretty fast by adapting the sprint backlog to new requirements or adjusting old ones. In today's competitive world this is crucial to be able to keep up with the continously changing conditions. \nExample: If a software relies on another constant, e.g. displays a function for a car, the software needs to adapt to the cars conditions. \nspiral model: can handle changes but not as frequently\n\nDisadvantages: \n- no fixed deadline: By only setting tasks for the next sprint and not distributing all tasks over the weeks there is no concrete deadline. This is unfavorable because many customers want their product done until a certain point of time.\nExample: If you work on a huge project you will have a hard time predicting the termination of your work because each task takes a different period of time to finish and sometimes needs to be worked on for several sprints.\nspiral model: end of the project is also not defined at the start \n\n- small teams: The method works best for small teams because the organization and communication is easier. This is a disadvantage because for big projects the workload increases. \nExample: In a big team it is more likely to have different goals and not work efficiently in the same direction. \nspiral model: works well in large teams ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644338,
      "meta": {},
      "text": "SCRUM is a Project-management method for agile development. SCRUM structures the development process, into shorter processes called Sprints. During each sprint, a potentially shippable product increment is produced.\n\nSCRUM is an agile method and therefore inherently good in dealing with change. SCRUM is flexible and can adapt easily to changing Requirements. For example if the customer decides that he wants to add a new feature not previously thougt of to his app (e.g. creating playlists in a music app). SCRUM can just add this new feature to the product backlog and work on it in the next sprint. This is similar to the spiral model, which also operates in iterations and therefore is adaptable to changing requirements.\n\nThis example also shows another upside of SCRUM. It enhances the customer relationsship, and gives the customer an opportunity to give feedback on the development early in the process as the product is already usable after every sprint and within this also the opportunity to request changes. For example if the customer does not like the layout of the homescreen of an application he can say so early. The spiral Model does not have this upside as the product is only shippable after the end of the process.\n\nA downside of SCRUM might be its scalability. SCRUM is designed for small teams and might run into problems when applied to a larger context. For example when you would take a whole company, the product backlog would be massive. The spiral model might also have such a downside but not in the same extreme way.\n\nAnother downside might be that it requires everybody working to be familiar with scrum, as everybody has to participate in meetings and make meaningful contributions in order for scrum to work. For example if an intern does not understand SCRUM and never updates the sprint backlog, there can be a lot of problems. The spiral model allows managers to assign certain task more easily to specialiued people and might not have quite this problem.\n\n\n\n\n\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644862,
      "meta": {},
      "text": "SCRUM is a lightweight framework which helps to find solutions for big problems. \nStructure: \n1. sort in the problems for your project in product backlog.\n2. The SCRUM team with one SCRUM Master, chose out of the backlog a small number of problems which they try to solve in on sprint. \n(A sprint is a short working period for example 2 weeks in which a number of smaller task are done.)\n\n3. after the sprint the SCRUM team and the owner are reviewing the complete tasks and make changes for the next sprint. (or even rewrite some of the problems in the backlog)\n\n4. repeat the process.\n\nBut the structure is left open to change to the individual needs!\n\nAdvantages:\n- very effective use of resources (money, time, personal) -> because you have small groups working on small problems.\n- goes after the principal divid and conquer (Large problems are split in smaller better to handle sprints) -> again small groups work very effective then larger ones.\n\nDisadvantages:\n- works with small teams not with big ones -> self explaining works with big ones but not that effective\n- it maybe need big transformation inside the company to make it working -> It can be very challenging for the management of many small groups.\n\n\n\n\n\n\n",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 5644912,
      "meta": {},
      "text": "Core essence\nScrum is a framework for software development. It is a relatively new way of structuring the process of developing software in a team.\nIt consists in dividing the time in many short units that are called sprints.\nAt the start of the project, a product backlog is prepared wich contains all tasks that are to be accomplished. At the start of every sprint (time unit) some of these tasks are moved to the sprint backlog, which contains the tasks that are to be accomplished in the sprint which generally lasts one month. During the sprint daily meetings are conducted within the team and one last meeting at the end of every sprint.\n\n2 advantages with example and compared to spiral\nScrum has become the standard in a big part of the industry and it has many advantages. The first big advantage is the flexibility it provides to the developers, since the tasks to be completed are determined once every month or even more often. This is very helpful, when the requirements are changing dynamically (Which is common in the software industry).\nFor example a team X is commissioned to create the game bumpers as we saw it in the lecture. But after some weeks, the client decides the game should be played in multiplayer form, rather than single player. Since the working schedule is dynamic, this changes can be incorporated in the product backlog and taken into account in the next sprint meeting.\nAn other big advantage is the constant (short) meetings that ensure the team stays in contact and up to date. This makes for a better collaboration and communication within the team, which improves productivity.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620564,
      "meta": {},
      "text": "SCRUM is an agile development framework that deals excellent with change management. It works in iterations, in which a sprint backlog is defined and a potentially shippable product is delivered. It considers three roles: the product owner, responsible for the deliverable product, the Scrum master that manages the process of software development, and the development team.\n\nAdvantages:\n- Scrum deals better with environments that change more frequently, since it allows adapting the process of software development after a deviation has occurred, even in late stages of a project. Changes management with Scrum takes place often through Scrum meetings carried out during the project. For example, review and planning is performed in daily meetings for smaller tasks, and periodically for aspects of greater scope like the sprint review. Spiral model doesn't deal well with constant changes because it still requires following a linear structure or sequence of activities on each iteration that can't be modified. \n\n- With Scrum, the customer gives timely feedback. For example, they don't have to wait until a full product is ready to test it, like in the spiral model, instead they test every product increment in shorter and periodic periods of time called Sprints. With the Spiral model, only prototypes result in each iteration, there is not a new version or deliverable that the client can test after each iteration.\n\nDisadvantages:\n-  The people working in a SCRUM environment should be able to deal with changes well, it therefore requires an effort of the team to learn working different from spiral model. For example, activities will no longer consist of a step-by-step process along each iteration. Instead, activities will be planned in each sprint, the work will be dynamic and change oriented. Spiral model still follows defined linear activities in each iteration.\n\n-  Extensive documentation will no longer be the main goal, but still good documentation is required. For example, the team should prioritize the delivery of functional software in each sprint, instead of extensive documentation. Since spiral model is not an agile method, it doesn't follow the Manifesto for Agile Software Development.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622324,
      "meta": {},
      "text": "Scrum ist ein agiles Entwicklungsmodell, das darauf ausgelegt ist, schnell auf √Ñnderungen und neue Anforderungen zu reagieren. Der Entwicklungsprozess wird in feste Zeitabschnitte mit konstanter Dauer, sogenannte Sprints, unterteilt. Das Ziel ist es, nach jedem Sprint ein Teilst√ºck des Gesamtsystems zu erhalten, das bereits lauff√§hig und theoretisch auslieferbar ist.\n\nVorteile:\nDie Bearbeitung von Aufgaben wird effizienter, da man sich immer auf eine begrenzte Anzahl von Aufgaben w√§hrend eines Sprints konzentrieren kann. Bsp: Erh√§lt ein Entwickler st√§ndig neue Anforderung von au√üen, die er parallel zu den bestehenden Aufgaben ausf√ºhren muss, kann die Qualit√§t in der Erf√ºllung einzelner Aufgaben leiden.\n‚Äì Im Spiral Model wird zwar in Iterationen mit verschiedenen Inhalten unterteilt, eine Begrenzung der parallel auszuf√ºhrenden Aufgaben findet jedoch nicht statt.\n\nDie Entwickler erhalten unmittelbares Feedback vom Kunden. M√∂gliche Diskrepanzen zwischen Anforderung und Implementierung k√∂nnen so schnell erkannt werden.  Bsp.: Nach der Implementierung einer Benutzeroberf√§che kann es sein, dass die Vorstellungen des Kunden von der Umsetzung abweichen, da solche Strukturen nur schwer pr√§zise beschrieben werden k√∂nnen.\n‚Äì Im Spiral Model werden Ziele, Alternativen und Risiken zwar regelm√§√üig diskutiert, aber es werden keine Vorversionen der Software erstellt, die dem Kunden geliefert werden k√∂nnten.\n\nNachteile:\nEs ist schwer eine feste Projektdauer, bzw. einen Liefertermin einzuhalten, wenn die Planung immer nur bis zum Ende des n√§chsten Sprints reicht und st√§ndig neue Anforderungen hinzukommen d√ºrfen. Bsp.: Wird ein Termin zur Fertigstellung eines Datenbanksystems im Vertrag mit einem Kunden festgelegt, kann dieser nicht eingehalten werden, wenn bis zum Ende der Projektphase neue Anforderungen (z.B. automatisierte Abfragen) gefordert werden.\n‚Äì Die Projektdauer l√§sst sich im Spiral Model besser planen, da die Anzahl der Iterationen feststeht und durch fr√ºhzeitige Risikoabsch√§tzungen Verz√∂gerungen erkannt und behoben werden k√∂nnen.\n\nDie Umsetzung von Scrum in gro√üen Teams kann sich schwierig gestalten, da das Modell insbesondere von h√§ufiger und direkter Kommunikation zwischen Entwicklern profitiert. Bsp.: Geht es darum ein Computerspiel in einem begrenzten Zeitraum zu entwickeln, m√ºssen mehrere tausend Entwickler an einem Projekt arbeiten, in dem sich Aufgaben oft √ºberschneiden.\n‚Äì Die Kommunikation zwischen Entwicklern ist selbstverst√§ndlich in jedem Entwicklungsmodell notwendig, jedoch sind h√§ufige Meetings kein elementarer Bestandteil des Spiral Model.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644402,
      "meta": {},
      "text": "The core essence of SCRUM is that you break the problem down into small pieces that are put into the backlog, fast development in a sprint in a small group that produces a runnable increment. Also in SCRUM you have lots of meetings  very frequently so that you can change direction quickly and adapt your work. \nAn advantage of SCRUM is that it allows the team to be agile if requirements change, for example if something is no longer needed that backlog item just gets removed. Another advantage is that errors in design and code get noticed early, because there is frequent testing and a runnable version produced after every sprint. \nA disadvantage of SCRUM is that it comes with a certain overhead of meetings or tests. There are daily meetings which of course take some time. Also producing a runnable increment could be viewed as unnecessary if the backlog item is a small amount of work and the whole application doesn't really make sense with the increment from one sprint.    \nThe spiral model we use currently is less agile than SCRUM as there is a fixed order of events, code errors could propagate a bit further as there are tests only once per full circle in the spiral model. There are similarities too, as in both models we are moving cyclic, so going back and forth between implementation and testing. The spiral model has less meetings and and less overhead because we can integrate larger parts of the system at  a time.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620538,
      "meta": {},
      "text": "Like the Spiral Model scrum has a repeating circular structure. In contrast to the Spiral Model Scrum these circles, called Sprints, don¬¥t extend the previous circle but rather are mostly independ from each other and as a result finish their objective as a potential shipable product or a complete component of one. These Sprints start with short daily meetings to keep every team-member informed about the current state.\n\nA switch to Scrum would provide following advantages to us:\nFirstly we get quicker finished components. This gives us the ability to use these for further testing or presenting to our stakeholders or customers. Additionally we gain further knowledge about possible changes we have to implement. In Spiral Model we would gain this inside only at the end. \nSecondly we can use our teams more effective. Since the Sprints are more independ from each other then in the Spiral Model, so if one Sprint team needs more time this doesn¬¥t effect every other team and causes massive delays.\nWe should also consider the possible disadvantages of a change.\nFirsty the change requires a big amount of organisation power. Initially we have to school every employee about the new system, especially the team leaders. Afterwards we need enough competent teamleaders, because they need to moderate the daily Scrum-Meeting in their team and to organize each sprint. \nSecondly our workforce couldn¬¥t accept the change. Thsi could result in a loss of productivity or a refuse to change. Especially the daily meeting can be seen as tedious or a complete waste of time. Additionally the need to finish and test every sprint can become a very challenging task every sprint, if it wasn¬¥t superebly planned. This may result in a worsening in the working place motivation. ",
      "score": 62.5,
      "language": "ENGLISH"
    },
    {
      "id": 5620789,
      "meta": {},
      "text": "Scrum is an agile development lifecycle model (consisting of several sprints) that makes handling change easier. In a initial project kickoff meeting a prioritized product backlog is created. In each sprint items from the product backlog are implemented and at the end of each sprint a potentially shippable product increment exists. Scrum works without hierarchies and relies on daily feedback between a scrum master and developers and regular meetings between the scrum master and a product owner.\n\nAdvantages:\n- lower risks. Because the developers and the scrum master meet daily to briefly discuss their current work everyone knows in which direction the implementation is going. \n-> Developer A and B are working on project x. Developer A tells B in the daily scrum meeting that he wants to implement class Y with a certain package P. B knows that his part of the implementation has to be compatible with package P as well. \nWhen an activity is planned well when using the spiral model there would be no problems in this scenario. If the activity is not planned well a lot of work might be rendered useless.\n- good adaptation to change. If the ordering party decides that they want the system to handle a task differently than specified before, scrum teams can adapt to that, because they did not plan for current components to never change anyways. \n-> Team T has created class C to implement service S. The ordering party wishes for S to do something different than specified before. Team T does not disrupt any plans by simply taking S as item to the next sprint backlog. \nWhen using Spiral model this work would need to be scheduled into a time preoccupied by something else.\n\n\ndisadvantages: \n- responsibility in case of problems. Because there are no hierarchies there is not one person responsible in case of failure, data breaches, security issues etc. \n-> lets say software S developed by scrum team T does not adhere to European data protection laws. There is no leader who could be held responsible. \nthe spiral model normally does not have this problem because it operates with usual hierarchies.\n- progress measurement. Because no detailed plan got laid out at the beginning it might be hard to tell whether a team is in time. \n-> Scrum team T has been working on a project for 5 months. The ordering party wants to know how much of the system is already implemented. T can't tell exactly. They can only name the things they have done up until now.\nWhen using spiral model a software system state can be compared to the hard schedule worked out beforehand.\n\n\n//\nI tried, but it's Impossible to do this task in 350 words.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621030,
      "meta": {},
      "text": "Core essence:\nScrum is a software development technique with regular coordination, suitable when requirements can change quickly during the project. There are three main roles: Product owner, Scrum master and the development team. \n\nIn the sprial model we have 4 activities, applied in 9 iterations. Risk management is in the focus, while SCRUM focuses on delivering a product increment. The sprial model is more suitable for large projects with large-scale teams, while SCRUM is better for smaller teams. \n\nAdvantages:\n1. Feedback is provided often and change can be adopted faster. This leads to more efficent process and a better fulfillment of requirements.\nExample: In Bumpers, feedback was required trough Artemis. Because only a few backlog items where implemented in sprints, it was easier to implement the feedback. \n\n2. After every sprint, there is a shipable product increment with already fully implemented functionality. The customer can follow the progress, test and provide feedback.\nExample: In Bumpers, it was possible to play the game after every sprint. There were many new ideas coming in mind to extend the game, which was helpful for H02E03. \n\nDisadvantages:\n1. It is hard to estimate the total cost and duration of the project at the beginning because nobody knows how many changes will occur.\nExample: in our group project we planed in the beginning to finish implemention of all backlog items end of June. Now it is mid of July and there are still backlog items open, because so much changed over the last sprints. \n\n2. The customer may not think hard enough at the beginning and name all the requirements, knowing that they can always make changes. This leads to the project becoming inefficient and the developers getting frustrated when new changes come in all the time, which could have been clear from the beginning.\nExample: A music player should be implemented only for playing songs. After some sprints the customer wishes to also include videos in the system, which would require a different technical setting. If the sytem supports videos or not is a strategic question that should be clear in the beginning. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621538,
      "meta": {},
      "text": "Das Grundprinzip von Scrum ist, den Prozess in Sprints aufzuteilen, die von fester Zeildauer sind und denen man einen vorher bestimmten Arbeitsteil erledigen muss. Nach Beendigung eines Sprints wird die geschaffte Arbeit evaluiert und bestimmt, ob diese zufriedenstellen ist oder bei m√∂glichen Fehlern diese in den n√§chsten Sprint noch mal aufgenommen wird. Zus√§tzlich besteht jeder Sprint aus t√§glichen Meetings bei dem die Mitglieder sich √ºber den Prozess informieren und sich bei potenziellen Schwierigkeiten gegenseitig austauschen k√∂nnen.\n\nVorteil: \n- Beispielsweise m√∂chte der Kunde eine neue Funktionalit√§t einbauen. In deisem Fall ist Scrum vorteilhaft.  Es kann sehr flexibel auf aufkommende Ver√§nderungen reagieren, da die klassischen Projektphasen nicht lienear, sondern paraellel ablaufen. Das Spiral Model hat im Vergleich dazu einen linearen Ablauf, sodass man  bereits abgeschlossene Projektphasen nicht mehr ver√§ndern kann.   \n- In Scrum liegt ein Fokus auf den  t√§glichen Meetings. Dadurch stehen die Team Mitglieder in st√§ndiger Kommunikation und k√∂nnen sich bei aufkommenden Schwierigkeiten gegeseitig helfen. Beispielsweise hat mein Kollege X gute Kenntnisse in backend Programmierung und durch die t√§glichen Meetings ist die Hemmschwelle ihn um Hilfe zu bitten geringer.   \n\nNachteile:\n- nach Beendigung eines Sprints k√∂nne unerf√ºllte Aufgaben in dem neuen Sprint hinzugef√ºgt werden. Das k√∂nnte zu gro√üem Stress f√ºr die Entwickler f√ºhren, da sie zu den eigentlichen Aufgaben noch zus√§tzlich die alten bearbeiten m√ºssen. \n- Da der Prozess nicht linear ist und viele Prozesse parallel ablaufen, ist es schwierig zu beurteilen in welchem Stadium sich das Projekt befindet. Daf√ºr bietet sich das Sptral Model gut an, da man hier gut sehen kann in welcher Phase man sich befindet. Beispielsweise muss das Produkt bis zu einer gweissen deadline abgegeben werden, aber es ist f√ºr den Vorgesetzten schwerer zu verfolgen wie gut das Projekt vorankommt und den weitern Verlauf vorzuplanen. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622740,
      "meta": {},
      "text": "The essence of Scrum is that the process is iterative and flexible. Developing a project is split into so-called sprints; short time intervalls after each of which the project is already in a potentially shippable state.\n\nWith Scrum, you can easily adapt to requirements change, as new requirements can almost immedeately be incorporated. For example, if the client requests a new feature you can start working on that already in the next sprint. Scrum thus is a lot more flexible than the Sprial Model which might, depending on the requirements change, need to go back some iterations to incorporate the change.\nAnother obvious advantage of Scrum is that after every Sprint you could potentially ship the product. Thus, developement deadlines are less of a problem. For example, the situation that you have a lot of trouble keeping a deadline cannot exist with Scrum. If you are not finished at this deadline, you just deliver your potentially shippable product increment from the last sprint. This is an advantage to the Spiral Model with which you can only ship your product at the very end.\n\nA disadvantage of Scrum is that, because you aim for having working software immedeately, you can't put a lot of time into planning. Thus, design decisions need to be made very quickly which might lead to bad decisions that later need to be revised. For example, if you develope a large networked softwaresystem, you might want to invest more time into more careful planning. This can not happen to this extent with the Sprial Model, as you invest a lot more time into planning with it.\nAnother potential problem of Scrum is that one might need to redo parts of the project multiple times as you need to ensure a working product increment after every sprint. For example, if you develope a game engine with scrum, you might end up rewirting half of your renderer every second sprint. This can also happen with the Spiral Model if, for example, you realize design flaws later during developement, but the risk is smaller than with Scrum.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622755,
      "meta": {},
      "text": "Scrum is an agile  framework for developing, delivering, and sustaining products in a complex environment.  It breaks the project  into goals that can be completed within one or more iterations(sprints). These sprints are repeated until all requirements are met. \nAdvantages of scrum:\nThe first advantage is the agility to develop software. Thereby if changes occur, it is easier to react to these changes in the developement. For exemple if the customer want to develop a software for retail and want some changes regarding the user interfaces, the requirements in the procduct backlog can be changed and then eventually be implemented in the software. Here the spiral model is not that good, because it works more sequentiel and can not react to changes as good a scrum. \n\n\nThe second advantage is the structure of the process, everyone knows what role he has and what his requirements and obligations are. The process and the supervision of the developement is therefore much easier compared to other developement techniques. For exemple if you want to develop an app,  a team member can according to scrum only be the  product owner, the scrum master or a scrum team member.  Therefore there is a clear role separation and therefore the development process for the app is easier to manage and overview.  Here the spiral model is more confusing, becaus ethe roles within the spiral model are not as clear as in Srum.\n\nDisadvantages of Scrum:\nThe Adoption of Scrum for  teams is very challenging, because scrum demand  training and skills from the employers. THe prblem is that not every member of the team is williing to get trained or don`t understand the principle sof scrum and the positive impacts on the developing process. For exemple if a firm wants to change its developement process and therefore wants to use scrum, the success depends on the willingness of the employers to adapt to these changes. Otherwise there will be a failure in the developement. Since the Spiral model is a very complicated sequential and iterativ eprocess, for the Spiral Model the team needs also additional training to learn and apply the model. \n\nThe second Disadvantage is that scrum requires for many companies a organizational restructuring because business units and developement units are working tightly togehter. Therefore some barriers have to be overcome between the busines units in order to be succesfull. For exemple if a company wants to develop an app, in order to have a functioning developement process, the R&D Unit have to work together with the business Units. Since the Spiral model is rather complicated, a organizatiol restructuring is also needed to gain the maximum out of that model. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5637440,
      "meta": {},
      "text": "Mittels SCRUM kann agil auf Ver√§nderungen w√§hrend des Projektes reagiert werden. Wenn der Proct owner √Ñnderungen verlangt k√∂nnen diese sofort umgesetzt werden. Es muss nicht auf einen neuen Sprint oder sonstiges gewartet werden. Des Weiteren wird in SCRUM auf Erfahrung gesetzt und diese in die Planung mit einbezogen.\n\nVorteil: \n- Paralelle Abarbeitung von Tasks. W√§hrend bei anderen Methoden die Aufgaben nacheinander abgearbeitet werden, wie die Implementierung, das Testen und Bug-Fixing, werden diese bei SCRUM parallel bearbeitet, weshalb sofort auf √Ñnderungen reagiert werden kann und diese beachtet werden k√∂nnen und nicht wie bei den anderen Modellen, bis zum n√§chsten Meeting abgewartet wird.\n- Der Product Owner wird sehr stark in das Projekt mit einbezogen. Er hat volles Mitspracherecht und kann st√§ndig W√ºnsche und √Ñnderungen √§u√üern. Er kann auch Priorit√§ten setzen, welche features wichtiger sind und welche weniger. -> Kundenfreundlichkeit\n\nNachteil:\n- Der Product Owner entscheidet am Ende, wenn bereits Zeit in Testing und Coding investiert wurde, ob der Teil des Projekts √ºbernommen oder verworfen wird. Wird die Arbeit verworfen, wurde unn√∂tig Zeit verschwendet. Das ist bei weniger agilen Methoden weniger der Fall, da nach der Implementierung bereits eine Entscheidung gef√§llt werden kann und somit die Zeit f√ºr das Testen m√∂glicherweise eingespart wird.\n- Durch die parallele Abarbeitung kann es passieren, dass zu viel Zeit in die Kommunikation und Planung gesteckt werden und somit nur noch wenig Zeit f√ºr die Implementierung √ºbrig bleibt. Daraus folgt ein chaotischer code und eine ineffiziente Arbeitsweise. Das schadet nicht nur der Software sondern auch dem Team, da das Dev-Team st√§ndig unter Zeitdruck arbeiten muss.\n\nSCRUM vs Spiral model:\nBei SCRUM werden die Aufgaben parallel bearbeitet w√§hrend beim Spiral model die Aufgaben in Phasen unterteilt werden. \nDurch die sequentielle Abarbeitung der Tasks kann im Spiral model der Project owner nur zum gegebenen Zeitpunkt mit einbezogen werden. W√§rhend den anderen Phasen kann nichts ver√§ndert werden. Das ist bei SCRUM einfacher. Hier kann der Owner st√§ndig Verbesserungen vorschlagen und die Requirements nach eigenem verlangen ver√§ndern.\nDadurch, dass im Spiral model die Bereiche der Planung und Implementierung strikt voneinander getrennt sind, wird, nicht wie bei SCRUM bis zu einem bestimmten Zeitpunkt geplant und dann umgesetzt wobei bei SCRUM st√§ndig √Ñnderungen akzeptiert werden, was die Arbeit eben ineffizient machen kann, da die √Ñnderungen st√§ndig beachtet werden und nicht wie beim spiral model das festgelegte Ziel sequentiell erarbeitet wird.",
      "score": 85.4,
      "language": "GERMAN"
    },
    {
      "id": 5620188,
      "meta": {},
      "text": "Scrum ist eine Technik, um ein Projekt zu managen. Dabei erstellt man Anfangs einen Product Backlog, den man in mehreren sogenannten Sprints abarbeitet. Ein Sprint dauert beispielsweise 2 Wochen und nach jedem Sprint hat man ein ausf√ºhrbares Programm, welches man dem Kunden pr√§sentieren kann und wenn es keine neuen Anforderungen gibt, kann man sich neue Ziele f√ºr den n√§chsten Sprint setzen (neuer Sprint Backlog) und die Sprints solange wiederholen bis das Produkt zuende ist.\nNachteile: \nDa bei einem Sprint eine exakte Zeitspanne bis zum Sprintreview festgelegt wird, kann es sein, dass man mit machen Zielen aus dem Sprintbacklog nicht fertig wird oder kein ausf√ºhrbares Programm erstellt werden konnte. Das kann beim Spiral Model nicht passieren, da es dort kein festgesetztes Zeitlimit festgelegt wird und alle Ziele w√§rend einer Iteration abgearbeitet werden.\nIndem man bei Scrum schon direkt am Anfang einen Product Backlog erstellt muss man diesen nach jedem Sprint  eventuell anpassen und ver√§ndern, was Zeitaufw√§ndig ist. Dies hat man beim Spiral Model nicht, da man dort bei jeder Iteration neue Ziele definiert und nicht am anfang einen kompletten Product Backlog erstellt.\n\nDiese beiden Punkte sind im gegenzug jedoch auch gro√üe Vorteile, welche meiner Ansicht nach stark √ºberwiegen:\nDa einen festen Zeitraum festlegt, wei√ü man, dass man nach zwei Wochen ein ausf√ºhrbares Programm mit den Anforderungen aus dem Sprint Backlog erstellen muss, welches den Druck erh√∂ht und somit die Projektgeschwindigkeit erh√∂ht. Im vergleich zum Spiral Model kann man sich beliebig viel Zeit lassen und somit kann sich ein Projekt stark ziehen. Wenn man au√üerdem die ein oder andere Aufgabe aus dem aktuellen Sprint Backlog schaffen sollte, dann kann man diesen auf den n√§chsten verschieben.\nEbenso ist die Absprache mit dem Kunden sehr gut, da man nach jedem Sprint ein fertiges Produkt hat. Dabei wird vor allem das Programm validiert und sichergestellt, dass man √ºberhaupt das - aus Sicht des Kunden - richtige programmiert. Dies macht man in √§hnlicher Form auch beim Spiral model, da man nach der Implementierung jeder Implementation erst einmal das Programm analysiert, bevor man die n√§chste Iteration plant.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621307,
      "meta": {},
      "text": "Scrum is a Life cycle model for software development that belongs to the agile models of software development. It is an iterative and incremental model and it includes 3 scrum roles: the product owner, scrum master and scrum team member. The development process is devided into backlogs that are worked off in sprints up to a potentially shippable product. Scrum works well with changing requirements since due to iterative approach and the sprint review meetings, where the product owner can change and add new requirements, like in bumpers in the first weeks of EIST, where changing the sound was applied. compared to the spiral model it can also deal with changes. Another advantage is the cross-team collaboration for consensus and thus meeting the requirements correctly, that the spiral model doesn't have.  A disadvantage of scrum could be that the final deadline won't be met due to constant iterative redoing of finished evetually steps, e.g. redoing the first sprint in bumpers over and over again. The spiral model in contrast has defined steps for every iteration. Another disadvantage of scrum are the daily meetings that waste the time for the developers to implement maybe easy task. We don't need a daily meeting when finishing the first sprint in bumpers, since it is simple. The spiral model doesn't define a daily meeting a that way. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621367,
      "meta": {},
      "text": "SCRUM is a technique used for software and product development processes that supports flexibility and allows teams to react adaptively to fast-paced changing environments. Its main idea is based on improving communication between team members and on delivering product increments after sprints that are limited to only a couple of weeks (2-4 weeks). \n\nAdvantages and Disadvantages: \n- Scrum is specially beneficial for fast-paced environments that deal with frequent changes in requirements. Due to its methodology of working on specific tasks during a short period of time (sprints) and promoting regular communication between members (e.g. via daily scrum meeting), the overall development of the software as well as the resources can be rapidly adapted to new circumstances and needs. Similarly, this methodology allows teams to take some time after sprints to do a retrospective meeting and gather feedback from different stakeholders (e.g. developers, product owner, ...) that helps them improve upcoming sprints. For instance, when developing an app, scrum makes it possible to divide the whole project into smaller tasks based on e.g. app features that can be prioritized and developed step-wise, while also including new requirements submitted spontaneously by the client. \n\n- On the other side, it is difficult to adopt the Scrum technique for very large projects, since it needs tight coordination between team members, as well as enough training to prepare everyone for the structure of the methodology. Consequently, it might suppose a difficulty to coordinate everyone involved in the process. In addition, Scrum focuses on short-term and continuous deadlines but does not consider the overall project's deadline, which makes it difficult to keep the overall timeline in mind. For instance, depending on the scale of the previously mentioned app, as well as on the number of features that need to be implemented by different teams, the amount of people involved in the project might not manage to efficiently communicate all important information on the (daily) sprint reviews. \n\nIn comparison to the Scrum model, the spiral model is rather used for projects that do not have frequent changes but rather sporadic ones. However, it also allows teams to gather feedback, since after each prototype development and verification, results are evaluated and the next iteration is planned. The spiral model could be used for larger projects because communication and coordination between team members is not as frequent as with scrum and the teams go through the 9 iteration phases step-wise. By having these fixed 9 iterations, the overall timeline of the project is also kept in the foreground and the focus does not solely rely on short-term working units \n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621722,
      "meta": {},
      "text": "Scrum is an agile model in software development, people work iteratively. In the beginning, a sprint backlog is to be determined, scrum team members work on each iteration(sprint), and there are daily scrum meetings to deal with change and interruption. After that potentially shippable product increment will be considered and at the end, we will probably have a sprint review meeting and sprint retrospective meeting. \n\nAdvantages: \n1. The Scrum model is more flexible, it can deal with changes more easily.\nexample: the requirements of the customer suddenly changed, if we use the Scrum model the team can talk about the changes in daily meetings and adjust the change. In the case of the Spiral model, which has a very specific defined process, the whole program cannot change within an activity, can only change between activities to adapt to changes. \n\n2. The Scrum model is able to let the programmer better communicate with the customer so that the product will be better.\nexample: sometimes the requirement at the beginning shall not very exact, so through the Scrum model, the programmer is able to figure out what costumer wants. But with the Spiral model, if the changes from the customer happen more frequently, change during the phase may lead to the cancellation of the project and cannot communicate with the customer so conveniently. \n\nDisadvantages:\n1. While the Spiral model provides a simplistic view, that there are 9 iterations and within each iteration, there are 4 activities to be applied.  But the Scrum model can't represent the progress of the task so easily.\nexample: If there is the customer wants to look at the overview of the progress, with the Scrum model it is not so clearly and quickly to show an overview plan but with the Spiral model we can easily provide it with a clear structure. \n\n2.  The Scrum model requires a team that works efficiently and has very good communication skills.\nexample: At the beginning, the member of the team may not be that collaborative and cannot reach an agreement quickly, so they may not work very efficiently with the Scrum model. Since the Spiral model doesn't need too much communication, people just need to finish their tasks in each iteration. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621859,
      "meta": {},
      "text": "SCRUM agile good\nSCRUM ",
      "score": 0,
      "language": null
    },
    {
      "id": 5622751,
      "meta": {},
      "text": "SCRUM is an agile software development lifecycle model. It's purpose is to deal with frequent change in requirments and interruptions, to help manage risks. It does so by making development adaptiv, improving communication and delivering product increments. \n\n+\nHelps respond to more frequent change: as apposed to Spiral Model which documents and deals with such risks in extensive early stages,  Scrum jumps straight in and due to it's agile nature can deal with change even during a sprint.\n\nHelps deliver most valuable product by prioritizing user experience: detailed and frequent reviews and testing allow for more agile and user/client oriented development, while if Spiral tries to keep up like this during every iteration, then it's due to fail or get cancelled.\n\n-\nNo fixed project time - it's done when it's done and does not scale well: unlike Spiral which is manages risks and   and sets cost boundaries and deadlines in early stages, Scrum is going to go through as many product increments as it has to. Sometimes and may be too much and paired with scope creep it is not favorible for large projects.\n \nRequires a highly trained and experienced team: the Sprints in Scrum assume that the team can limit their scope of tasks if needed, prioritize tasks and communicate extensively and efficiently in order to deliver an increment once every 1-2 weeks. No such pressure is assumed in a Spiral model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622777,
      "meta": {},
      "text": "SCRUM ist ein Ger√ºst, welches ein komplexes Problem in mehrere kleine Teilschritte unterteilt, wobei Developer und Kunde (der Product Owner) immer im direkten Austausch stehen. In sogenannten \"Sprint Meetings\" werden Aufgabenbereiche den Teammitgliedern zugeordnet, die im nachfolgen \"Sprint\" ausgef√ºhrt werden. Die fertig gestellten Teilaufgaben werden dann nochmal in den nachfolgen Meetings besprochen, zus√§tzlich werden die Ziele f√ºr den n√§chsten Sprint angesprochen. \n\nDie Vorteile von SCRUM sind vielf√§ltig, ein Vorteil w√§re, dass Teams geholfen werden kann, komplexe Projekte bzw. fertige Teilprodukte vergleichsweise schnelle und effizient geliefert werden k√∂nnen. Bewiesen wird diese Aussage dadurch, dass man nach jedem Sprintmeeting sein Inkrement dem Produkt Backlog hinzuf√ºgt, w√§hrend bei \"normaler\" Herangehensweise die Developer das Produkt erst kurz vor Ende funktioniert. Beim Spiral Modell wird das Projekt auch in Teilbereiche unterteilt, allerdings nicht mit w√∂chentlichen Meetings.\n\nAu√üerdem ist SCRUM sehr transparent, man wei√ü immer, wer welche Teilaufgaben hat, und auch welche Teilbereiche und Probleme bereits gel√∂st wurden. Grund daf√ºr ist, dass es auch einen Sprint Backlog gibt, in dem die genannten Punkte aufgeschrieben werden. Ein Beispiel w√§re z.B. unser aktuelles Teamprojekt, f√ºr den wir w√∂chentlich einen Sprint Review abgeben. Diese M√∂glichkeit ist nicht bei dem Spiral Modell gegeben.\n\nEs gibt aber auch Nachteile, einer w√§re beispielsweise, dass die M√∂glichkeit eines gescheiterten Projekts h√∂her sind, da einer der wichtigsten Punkte eine gute Teamzusammenarbeit ist. Wenn jetzt als Beispiel ein Teammitglied wenig kooperativ oder unmotiviert ist, dann kann man in einem Sprint Meeting nicht herausfinden, welche Teilbereiche bereits gemacht wurden oder welche Probleme aufgetreten sind. Dadurch arbeitet man ineffizient, da man m√∂glicherweise auch doppelte Aufgaben macht, oder Probleme sich durch das ganze Projekt ziehen. Dadurch, dass alle Teammitglieder an dem selben Teilbereich arbeiten, ist das Problem beim Spiral besser abzufangen.\n\nAu√üerdem ist die Methode des SCRUMs ein wesentlicher Mehraufwand. Es m√ºssen t√§glich Reviews gehalten werden, und die Chance, dass Teammitglieder die Motivation verlieren, ist wesentlich h√∂her. F√ºr zeitlich begrenzte Projekte kann dieser Mehraufwand sich negativ auf das finale Produkt auswirken, denn man m√ºsste z.B. einen Wunsch des Product-Owner vernachl√§ssigen, da man sonst diese Meetings zeitlich nicht hinbekommt. Dies ist bei Spiral nicht der Fall.\n",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 5644742,
      "meta": {},
      "text": "Scrum is an agile software development lifecycle model, and specifically an empirical process control model. Since there are continuous fixed-length sprints resulting in potentially shippable product increments, scrum is known for its adaptability to change. This introduces the first major advantage of Scrum:\n\nAdvantages:\n+ Its adaptability to change. Thanks to the sprint review meetings and daily scrum, teams using Scrum can easily adapt to changing requirements. For example, after a sprint, the product owner decides to change an existing requirement. The product backlog can be immediately updated and the next sprint backlog will reflect the change. Therefore the team can easily deal with evolving requirements. For comparaison, the spiral model can only deal with changes between activities, and not within an activity.\n+ Allows teams to learn from their experiences and gives them room to reflect on previous sprints and communicate. For example, if someone has been facing a problem doing something, this will be immediately known in a daily scrum meeting. If an entire team has been facing problems, they can reflect on what went wrong in the sprint retrospective meetings and reorganize with the help of the scrum master. On the other hand, the spiral model doesn't really reflect on previous activities, as it merely evaluates their success.\n\nDisadvantages:\n- Requires extensive training and Coordination. For example, a company can't directly switch to scrum without hiring scrum masters and training their employees to make sure they're able to work in agile environments. On the other hand, the spiral model does not require specially trained employees (scrum masters) or special skills to make sure it succeeds.\n\n- Ignores project deadlines. Because scrum works in continous sprints, it never takes into account the project's deadline, and just relies on the team implementing the entire product backlog. For example, a team that keeps on implementing the product backlog bit by bit never has to worry or think about the project deadline, and just keeps on moving from sprint to sprint. On the contrary, the spiral model identifies constraints (i.e. deadlines) at the start of each iteration.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644837,
      "meta": {},
      "text": "- SCRUM is a methodology that consists of several elements: product backlog, which determines the scale and tasks of the whole project, and sprints, which are time-boxes during which the team completes possible product increments. Before each sprint, the sprint backlog is to be determined which consists of tasks for this particular sprint. After each sprint, there is a sprint review, where the results are presented and an evaluation is made.\n\n- Because of its flexibility SCRUM works well with small projects. Spiral on the other hand is more complex, requires following protocols, and is more suitable for long projects. If we want to develop an easy app, with Spiral we would still have to go through all 4 phases and 9 iterations. Meanwhile, with SCRUM it could be completed in a few sprints.\n\n- SCRUM is more transparent than Spiral because of daily sprints where the team shares any updates or changes. In the EIST team project, it is important to have a full picture even of minor details.\n\n- The disadvantage of SCRUM includes poor risk management, especially in the Spiral model, which has risk management as one of its strongest advantages. Unlike Spiral, where risk management is one of the essential phases, SCRUM does not account for risks and simply adapts to changes. If we consider the EIST group project, SCRUM would not account for the risk of one of the teammates dropping out, and this would result in an increased workload for other students.\n\n- In long-term projects, incremental delivery can affect the project negatively. Since the final result is not known until the last moment, it is hard to estimate associated costs or time. If the group worked not\n intensively enough during the sprint, the project can be longer than expected and might not be finished in time, and cost more. In Spiral, a prototype is developed early so cost estimation is easier.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5619413,
      "meta": {},
      "text": "The core essence of SCRUM:\nSCRUM is an agile way to develop a software. In the Scrum, the product development process is divided into several Sprints. In each Sprint, the developers choose a part of requirements of the product, implementing, testing them, and finally reviewing them.  \n\nAdvantages of SCRUM:\n1.The product owner and the customer can give feedbacks timely so that the efficiency of the development can be enhanced.\nExample: In a sprint review meeting, each team member shows what has done in the last sprint. The product owner and the customer check whether the product meet their requirements. The developers can then develop by following the feedback. \n\n2.Scrum is agile, it helps developers adapt changes in the software development easily. \nExample: When the product owner wants to add or delete some functions to the software, the new requirements can be easily added to the product backlog, then the develop team can realize it during the sprint afterwards.\n \nDisadvantages of SCRUM:\n1.In the scrum, a task can be deleted from the sprint backlog only when it's totally finished, which can discourage the team.\nExample: If the tasks in the backlog contains a lot of complex work and there isn't any task deleted from the sprint backlog after a period of time, the team menbers must be frustrated because it seems that there isn't any progress being done. \n\n2.Scrum is not suitable enough for a large team. \nExample: In a large team, the scrum master must handle too many issues and it's also difficulties to hold only 15 minutes daily scrum meeting. The efficiency will not be improved but even can be probably reduced.\n\nComparision\nAdvantage 1 also happens in the spiral model, after each iteration the developers and the product owner can evaluate the result together.\n\nAdvantage 2: Compared to the scrum, it's not easy to go back and change the product in the spiral model.\n\nDisadvantage 1: The spiral model is more suitable for the complex product than scrum.\n\nDisadvantage 2:  The spiral model works well for a large team.\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620187,
      "meta": {},
      "text": "SCRUM is a methodology for agile software development providing a fixed set of meetings and roles. It works best for small self-organizing teams, breaking their work into small chunks which are incrementally worked on in iterations with a fixed short timeframe, like two weeks. SCRUM heavily relies on user / client feedback after each sprint which makes the development adaptable to requirement changes.\n\nOne of the main benefits of SCRUM is the flexibility to change the project requirements at any time, which also means, that not every single detail has to be specified before the project starts, but rather can be decided and changed during the development. SCRUM embodies this through the nature of the sprint backlog which can be easily adjusted, for example during sprint review, where the stakeholders are presented with the current product version.\nThe spiral model isn't really designed for changing requirements, just some adoption can be done after each cycle.\n\nAnother advantage is the continuous user / stakeholder feedback due to the regular and often held sprint review meetings. This short user feedback loop ensures that the developed product is exactly what the stakeholder desire. For example, if the project is some software for elderly people, the UI might have some usability issues, that the client can easily point out.\nIn the spiral model, there might be some user feedback after each cycle, but each cycle has a duration of months or years, which means, that there is only spare client feedback.\n\nA problem of scrum is that it isn't really suited for projects that require predictability and upfront planning, due to the nature of SCRUM's short term planning and reliance on feedback, making the project development hard to predict.\nThis is an advantage of the spiral model, because it requires upfront planning making it more predictable and furthermore has a focus on risk reduction.\n\nScrum works best for small teams, making it hard to apply the methodology the larger teams of developers, requiring the company to split the team into multiple smaller teams, which might not be that easy, if the project can't be split into distinct parts.\nThe spiral model is well suited for large teams and doesn't require the company to change the any team and management structures.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621147,
      "meta": {},
      "text": "SCRUM is an agile software development model with the focus on dealing with interruption in an environement, where requirements change rapidly.  By dividing the whole project into sprints with a constant duration up to one month and by improving communication with regularly occuring team meetings, risk management and  cooperation, the constant delivery of product incrementals can be maximized. \nOne expect which makes scrum valuable is the constant delivery of potentially shippale product increments after each sprint. In contrast to the obsolete top-down or bottom-up integration approach the client is able to see his product in different stages of development and can therefore easily evaluate, if the work fits to his imagination.  If the client is not satisfied, changes can be adapted quickly and the risk to have to start from scratch again is small. \nAnother reason to decide in favour of SCRUM is its property to deal with change at every time in the project in such a way that the team is able to respond quickly but beeing not overwhelmed with to many adaptions. After one sprint -normally lasting no longer than a month- is finished, the sprint backlog for the next sprint can be filled with new items adapted to the new requirements in order to realize the client's whishes fast.\nEvery method - however well elaborated - has its disadvantages. SCRUM includes a high communication and coordination effort which might in some cases lead to lower productivity because a considerable amount of time is spent in planning activities. \nOne more problem occurs when sprints a planned to pessimistic or optimistic. Because the sprint backlog can not change during a sprint, a pessimistic sprint planning results in a loss of time whereas a too optimistic sprint planning can exert high pressure on team members and leads therefore to overload and stress. \nThe Spiral model is in contrast to SCRUM an iterative model going like SCRUM through different activities multiple times to correspond to change. However in the Spiral model one is not table to react to change during one activity but must wait until the next iteration.  \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621465,
      "meta": {},
      "text": "The core essence of SCRUM is to deal with change in an agile development process of a product at any time. It does that by having teams work in sprints after which the results are discussed in a sprint review and it is decided what to change and what is good. \n\nOne advantage of SCRUM is the flexibility of the process. Often it is tough to have every requirement and objective set before starting a project and since SCRUM uses sprints, new requirements can be easily dealt with. In the spiral model one would have to go through one full iteration before redefining the objectives.\n\nAnother advantage is that the SCRUM development process is time efficient compared to other models. First of all you start working right away instead of having to plan out requirements in the smallest detail which saves time. In addition you do not have to go through a long process before realizing that something could be better and adapt after each sprint. In the spiral model you would have to define requirements and even evaluate alternatives before starting to work and go through a lengthy iteration.\n\nOne disadvantage of SCRUM is that is has the prerequisite of a somewhat SCRUM experienced team since a big part of the process is team internal feedback. Feedback needs to be precise and helpful to not slow down the process. In the spiral model good feedback or evaluation is also important however since there are less instances when this happens it does not slow down the process as severely as in SCRUM when the feedback is bad. \n\nAnother disadvantage of SCRUM is that it is fragile since if the team does not commit to each of the stages the whole process will fall apart. For example if the project does not commit to thoroughly testing after each sprint the final products quality will probably suffer. This is the same in the spiral model just again less severe since there are less stages and thus the effect won't add up as much.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5623199,
      "meta": {},
      "text": "Scrum is an agile model that deals well with interruptions and change.\n\nThe scrum framework consists of a scrum team, three artifacts, and five scrum meetings. The project starts with the project kickoff meeting where the product backlog is created by the product owner. The product backlog consists of a list of requirements for the whole project. The development team breaks the product Backlog into sprint backlog and plans its implementation during the sprint planning meeting which happens at the start of each sprint. The sprint backlog is a list of requirements and tasks for one iteration (sprint). The sprint backlog is a list of requirements and tasks for one iteration (sprint). The team gathers every day for the daily scrum meeting, which is a short meeting where the development team shares updates blockers and goals with the Scrum master (moderator- resolves impediments and is responsible for the process). At the end of each sprint, there's a sprint meeting where the backlog items are presented to the product owner. After each sprint the sprint retrospective meeting takes place. During the meeting, the previous sprint is inspected and a plan for improvements is created and to be executed during the next sprint. This process continues until all sprints are completed \n\n\n1. The scrum technique deals exceptionally well with interruptions and change due to the constant communication between the participants. The spiral model can also deal well with change as newly added functionalities could be added to a later stage. \n\n2. The scrum technique also reduces risks by having constant meetings that help with communication and cooperation among the participants. Due to continuous and repeated developement which help in risk management, the spiral model could deal with medium to high risk project.\n\n\n1. However, adopting the scrum technique in large teams is challenging.\nThe spiral model requires risk assessment expertise which is disadvantageous for small projects due to its high cost.\n2. In order for the Scrum technique to succeed it requires commitment and cooperation of all parrticipants. The spiral model has the risk of not meeting schedule or budget\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644404,
      "meta": {},
      "text": "Mit Scrum kann man m√∂glichst gut Software entwickeln, an welche sich die Anforderungen oft √§ndern.\nScrum besteht aus einem \"Product backlog\", in welchen Aufgaben/Anforderung gespeichert sind, welche in der Zukunft mal bearbeitet werden m√ºssen. Im \"Sprint Backlog\" befinden sich angehende Aufgaben. Ein Sprint dauert 2-4 Wochen. Jeden Tag wird ein \"Daily-Scrum\" Meeting abgehalten. Am Ende eines jeden Sprintes soll es ein nutzbares Produkt geben.\nIn Scrum gibt es drei verschiedene Rollen. Der \"Product Owner\" bestimmt was und wieso ein Feature umgesetzt werden soll. Der Scrum Master k√ºmmert sich um den Scrumablauf. Die \"Scrum-Team Members\" sind letztendlich diejenigen welche die Aufgaben umsetzten.\n\nDer gro√üe Vorteil von Scrum ist, dass es sehr flexibel. Nach jeden Sprint k√∂nnen die Aufgaben im Backlog bearbeitet werden und neu priorisiert werden. Auch neue Aufgaben k√∂nnen aufgenommen werden. \nIm Spiral Model ist von Beginn aus festgeschrieben welche Aufgaben und in welcher Reihenfolge bearbeitet werden. Dadurch ist dieses sehr unflexibel.\n\nDas Testen des Codes erfolgt zeitgleich mit dem Entwickeln des Codes z.B. durch Testsystem die bei jeden Push den Code testen. Auch die Entwickler testen selbst ihren Code mittels z.B. Unit-Tests. Im Spiral Model werden wird immer erst nach dem Entwickeln getesteten. Dadurch fallen gr√∂√üere Fehler erst teilweise sp√§t auf und k√∂nnen dann erst in der n√§chsten Code-Phase behoben werden.\n\nEin Nachtteil von Scrum ist, dass teilweise sehr schwer sein kein es in einem gr√∂√üeren Team umzusetzen. Bei Scrum fallen Teilweise viele Meetings an und diese mit einer gro√üen Personenanzahl durchzuf√ºhren kann sehr tr√§ge sein und viel Zeit in Anspruch nehmen. Im Spiral Model gibt es deutlich weniger Meetings. Allein des t√§gliche Scrum Meeting f√§llt bei diesem weg, welches in einem gro√üen Team lang dauert.\n\nEin weiterer Nachteil von Scrum ist, dass das gesamte Team sich mit Scrum auskennen muss. Durch die vielen asynchronen Prozesse in Scrum muss alle Teilnehmer sehr selbst√§ndig arbeiten und sich in ihrem Bereich auskennen.Im Spiral Model ist es √§hnlich, dort muss jeder Mitarbeiter selbst√§ndig arbeiten aber in diesem werden verschiedenen Phasen wie \"Code\", \"Unit-Test\", ... als Team durchgangen was bei Scrum nicht so ist.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644907,
      "meta": {},
      "text": "You got some sort of a customer who has a problem which can be solved by developing a product. In order to solve the customers' problem, we put together a team, which has or can acquire the skills needed to build that product. This team interacts with the customer to better understand the problem. Together, the team and the customer, decide on the most important first steps in solving the larger problem, which is stored in the so-called product backlog. The team develops a small, usable product in a short, fixed time to take that first step, solving a small part of the problem (sprint). Having reached the end of that first sprint, the team reflects on how they worked and determines how to improve that(retro). The team and customer play with what was created and together choose the best next step.(shippable) product after each sprint) This cycle continues until there is no more problem to solve. It is possible to react fast on changes in the environment, because you are evaluating the product and planning the next steps after each sprint, which usually is lasting around 2 - 4 weeks\n\n\n+You get a working prototype (Potentially shippable product) after each sprint(iteration). The whole project is developed in incremental steps on each level in parallel (Vertical integration).\nIn the spiral model encourages comprehensive documentation. But in the scrum, priority is more on working software but not on the documentation. Because the documentation is useless without quality, working software.\n\n+Scope/requirements can change over time. SCRUM enables the team to focus on the requirements the customer really needs. In comparison to where customer feedback only possible after project completion\n\n\n2 Disadvantages of SCRUM:\n-Scrum is not that easy to scale up because it works with rather small teams. The spiral model is not suitable for small projects as it is expensive.\n\n-It can be difficult to integrate with a classic project management approach. The spiral model with its rather linear approach is more suited for classic project management. \n\n\n",
      "score": 72.9,
      "language": "ENGLISH"
    },
    {
      "id": 5620805,
      "meta": {},
      "text": "Scrum is an agile software development model. That means it allows the team to adapt to changing conditions and requirements. Thus it allows to get the team things done at the right time and maximize the value of the delivered product.\n\n1. One huge benifit of scrum is that a complex problem can be divided into many smaller problems (\"divide and conquer\") by dividing large projects into easily manageable sprints. A perfect example is our EIST teamproject where we have a large problem statement and with dividing the problem in small sprints it was way easier to manage the project. \n2. On the other hand this can also be a disadvantage because it can leed to a scope creep. This can be the case if a team underestimated the difficulty of a functional requirement and it is at the end of the product backlog. They will get in trouble with delivering the product within the deadline.\n3. Another advantage of Scrum is the ability to adapt to feedback of the customer. For example if the customer do not like the GUI design of the product he can five feedback to the team. And they can just add this into the product backlog or even directly into the sprint backlog for the next sprint.\n4. On the other hand if the requirements are very clearly defined and it is not expected that the customer have much to critizise it can also be a waste of time to have all the meetings (Daily meeting, sprint review...). For example if the customer wants you to rebuild a existing software the requirements are clear and you do not have to adapt to feedback every two weeks and can save a lot of time.\n\n1. The spiral model does not give this opportunity to divide the problem as good as scrum does\n\n2.The sprial model can also lead to a scope creep\n\n3.The spiral model can also let the team adapt to feedback but not as fast as scrum\n\n4. In this case the sprial model has an advantage compared to scrum",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644729,
      "meta": {},
      "text": "Don't we all hate it when we are meticulously developing software with utmost care, and then, all of the sudden, the surrounding conditions change, rendering all the effort we have previously put into the project pretty much useless? But it doesn't have to be this way! The solution is called scrum and it has made fast and apt responses to such changes its top priority by following a simple concept: It takes the idea of splitting the development process into several iterations, which you're already familiar with (spiral model) and which is already significantly reducing the risk of being completely obstructed by changes: Now, instead of having individual iterations that focus on entirely different aspects of development (hence requiring the completion of several iterations before ending up with ANY shippable product increment), scrum achieves shippable product increments after EVERY interation (so-called sprints) by focusing on minor tasks each time, sorted by importance. Say you want to develop a web-browser: With the spiral model, you'd have to spend numerous iterations modelling and designing the entire system to near perfection, without having coded a single line. Scrum, on the other hand, starts the coding process almost immediately, e.g. by building the system's start page. By being able to produce visible and testable output early on, we arrive at the second benefit of scrum: Everything is way more flexible: Unlike the spiral model, there is no unalterable contract, which the developers must adhere to at all costs, but rather the opposite is the case: The product owner is often consulted during sprint reviews, therefore changes can be made way faster than with other techniques and for each sprint, the developers themselves decide what they'll able to accomplish. Such freedom is great for teams that know each other really well, but newly formed teams along with inexperienced product owners might fell rather overwhelmed by such a loose structure, resulting in very little increments (compared to already laid down requirements by contracts). Team sizes might be a problem as well: Scrum works best in small teams (max. 10). Upscaling (scrum of scrums) is possible, but a lot harder to do, compared to the spiral model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644758,
      "meta": {},
      "text": "Scrum is a management framework that teams use to organize and effort towards a common goal. It consists of a set of meetings, tools, and roles for effective project delivery. Like a sports team practicing for a match, Scrum practices allow teams to self-manage, learn from experience, and adapt to change. In Software Development teams use Scrum to solve complex problems cost effectively and sustainably.\n\nPros-->\n1- Big projects are divided into easily manageable sprints\n\tLike if 10 people as a Team working on a Development of a Software, in every Sprint ,Sprint backlogs are \t \n        created and worked upon .When these are completed next sprint take place and new Sprint Backlogs are \t \n        created.  \n\n2- Scrum as agile, adopts feedback from customers and users\n\tIf Software is developed and deployed ,then feedback from the users and the Client will be taken to \n        improve the System deployed and remove the Bugs which appeared during use.\n\n\nCons-->\n1- Project Deadline is not the Focus\n\tif a team is working with a deadline of every Sprint backlog assigned to them, then the prime focus of \n        delivering the product on time gets opaque and unimportant to the Employee working on it.\n\n2- In large teams using Scrum will be difficult\n\twhat if a Team of 1000 people working on making a Rocket, in this case holding a Scrum meeting with \n        everyone at same time is not possible ,so multiple scrum meeting is required which will increase the time \n        majorly and therefore difficult.\n\t\n\nCOMPARISON OF SCRUM AND SPIRAL MODEL\nAs in scrum, project is divided in sprint backlogs whereas in Spiral Model it has phases and an Objective will be specified in every loop. \nSimilar as Feedback in Scrum ,Spiral Model also supports Feedback after every Loop and reduce the Risk Factors.\nProject will be manufactured in early stages of Spiral Model, whereas Product will be completed after going through every Phase specified in Scrum framework.\nActually Spiral Model is more effective in big teams and easy to be implemented.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644821,
      "meta": {},
      "text": "SCRUM ist ein Modell f√ºr den Entwicklungsprozess von Software, welcher sehr gut auf Ver√§nderungen innerhalb der Entwicklung reagieren kann. Bei SCRUM wird stets ein Backlog mit allen ausstehenden Aufgaben gepflegt, aus welchem heraus in regelm√§√üigen Abst√§nden Aufgaben f√ºr die sog. Sprints entnommen werden. Ein Sprint hat eine Dauer von meistens 2 bis 4 Wochen und umfasst Aufgaben aller Bereiche, wie Ops, Testing und Entwicklung und ist meistens durch t√§gliche Austausch- und Updatemeetings aufgebaut, in welchen sich die Mitglieder einzelner Teams synchronisieren und austauschen. Nach Ende eines jeden Sprints werden die Ergebnisse betrachtet und der n√§chste Sprint mit neuen Aufgaben geplant.\n\nEin Vorteil von SCRUM ist, dass sehr schnell auf √Ñnderungen reagiert werden kann. Dies geschieht dadurch, dass zu den Daily‚Äôs alle Teams aufeinander Treffen und ihre Probleme ansprechen und diskutieren. Die enge Kommunikation aller Bereiche und der Product Owner erm√∂glicht es, auch im Softwareentwicklungsprozess √Ñnderungen an die Anforderungen zu stellen oder Features zu √ºberdenken und den m√∂glichen Problemen der Entwicklung anzupassen. Zum Beispiel kann auf Probleme mit einer Datenbankeinbindung mit einer √Ñnderung der Architektur hin zu einem anderen DBMS reagiert werden, oder Ergebnisse der Unittests k√∂nnen in Designentscheidungen einflie√üen. Beim Spiral Model ist dies nicht m√∂glich, da alle Iterationen nacheinander ausgef√ºhrt werden und es nur in eine Richtung geht.\n\nEin weiterer Vorteil ist, dass bei SCRUM alle fast Prozesse parallelisiert werden. Im Gegensatz zum Spiral Model, wo erst entwickelt wird und danach Unit Test gemacht werden und erst im Anschluss Integration Tests durchgef√ºhrt werden, geht die Softwareentwicklung bei SCRUM idR. schneller, weil alle diese Aufgaben in jedem Sprint gleichzeitig stattfinden. Zum Beispiel kann ein Feature direkt nach seiner Implementierung getestet werden und Probleme dabei k√∂nnen direkt in den n√§chsten Sprint als Ticket des Featureteams eingearbeitet werden. Auch hier kann dadurch wieder schnell auf √Ñnderungen in anderen Bereichen reagiert werden. \n\nNachteilhaft an SCRUM ist, dass man den √úberblick √ºber den gesamten Entwicklungsprozess verliert. Beispielsweise ist einem Entwickler nicht unbedingt bewusst, wie der aktuelle Stand des Uni Testings ist. Beim Spiral Model ergibt sich dieses Probleme nicht, da durch die Iterative und aufeinanderfolgende Abarbeitung einzelner Themen f√ºr jeden \"Bereich\" ein einzelner Iterationsdurchlauf vorgesehen ist.\n\nDadurch, dass jeder an seinen Tasks arbeitet kann es leicht passieren, dass man diese einfach nur abarbeitet und nicht das Gesamtprojekt im Blick hat. Dieser Tunnelblick kann beim Spiral Model nicht ganz so stark aber auch passieren.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644901,
      "meta": {},
      "text": "Scrum is a framework for project management, which manages software development from the beginning until the end so that it deals with the upcoming changes and interruptions. The idea is, that there are different sprints (each sprint 2 - 4 Weeks) and daily scrum meetings so that the team is regularly updated during the project and they can set up short-term goals. There are three roles: Project Owner, Scrum Master, and Software Developer (Scrum Team Member). \n\nThe time costs a lot of money, so the development should be as quick and effective as possible. When it comes to the time, the Scrum project development framework varies from days to weeks. Because of the daily meetings and short sprints, it is possible to work more cooperatively and more efficiently as a team, which ables the development team to finish the project on time. The spiral model takes more time because it is defined in terms of years and months. There are more iterations, with each iteration more tasks and fewer meetings. \n\nDocumentation is always a big question when it comes to project development. It takes a lot of time and workload for the team members. Scrum is a good solution to avoid spending a huge amount of time on documentation of the project. There is minimal document rather than no documentation. The level of the documentation remains up to the team to decide on a case-by-case basis. By the spiral model, the documentation is done iteratively at each phase. \n\nThe scrum model has also some disadvantages. When it comes to bigger teams, it is more difficult to adapt the Scrum framework. Because the scrum master has to organize the daily meetings, that there are just a limited amount of persons, to be able to finish it in max 20 minutes. By the spiral model, there is no time pressure when it comes to meetings, so the number of people does not play a huge role. \n\nBecause of the high flexibility and only a few limitations, it is easy to slack and let the discipline go. By the spiral model, there are well-defined tasks and activities, which has to be fulfilled during the iterations. \n\n\n\n",
      "score": 81.3,
      "language": "ENGLISH"
    },
    {
      "id": 5645044,
      "meta": {},
      "text": "Advantage:\n\n   - It is a lightly controlled method that insists on frequently updating the progress in work through regular meetings. Thus there is clear visibility of project development.\n \t - For example, in each sprint, we have planning meetings, retrospectives, review meetings, and daily scrum meetings which tell what you did yesterday, what you plan to do today, and the problem during the work.\n  \t- The Spiral Model also has the advantage.\n\n   - Due to short sprints and constant feedback, it becomes easier to cope with changes.\n       - Because the team members meet frequently, so the project can have quick feedback and quick adjustments.\n\n\nDisadvantage:\n  - Adapting the Scrum framework to larger team is challenging. The scrum is more suitable for a small team.\n  \t- Compared to Sprial Model, the spiral model is more suitable for a larger team.\n\n  - Scrum often leads to scope creep due to the lack of a clear end date.\n\t- \n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 5619450,
      "meta": {},
      "text": "Scrum is a nowadays often used framework, in order to develop a complex project in a team. It starts with a product backlog from the product owner, continues with a sprint planning meeting and a sprint backlog. Afterwards, you have regular meetings in which you discuss individual tasks worked out so far. Those meetings intend to stay focused, work effective and self-organize yourself. Everybody gets updated about what each other team member did so far, since everybody is presenting their work. In order, everyone gets feedback immediately and knows what more to consider. The short cycles should create flexibility and new requirements must be implemented quickly. This could be both: An advantage, but also a disadvantage. Interaction and communication are needed, but can also pressure some team members: \nEverybody needs to stay focused and reliable. This is the main reason why scrum is only a framework for a certain group of people: Not everybody is a ‚Äúteam person‚Äù. As soon as one person neglects the team, the project gets obstructed and the project could fail, or at least take more time to get finished. \nIn Scrum, a project leader, namely the scrum master organizes the flow of activities. He/she structures the team, so that the team can work and cooperate effectively. As this role is an important leadership role, the person must be constructive and top of everything.\nThe spiral model is best used in large, expensive and complicated projects, whereas Scrum is best used in easier projects and smaller groups. Another argument speaking for the framework Scrum is the time management: Managing time with the spiral model is more difficult than with scrum: the number of required phases until the project is finished is often not clear at the beginning of the project. In order of that, there happens to be a risk of taking more time than expected and project is getting more expensive.\nConsidering the high cost and complexity of the projects working with the spiral model, I think it would be great for you and your team to try Scrum for less challenging projects. ",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5619764,
      "meta": {},
      "text": "1) Scrum is a framework for agile Softwaredevelopment, It is based on a team with a scrum master and scrum team members. The assigment from the stakeholders is divided into diffrent smaller parts which are developed in a so called sprint which is between 2 and 4 weeks. The teame has also daily meetings (Daily Scrum), where they quickly evaluate the progress of the development. After every sprint is also a scrum meeting, where the teame presents their work to the stakeholders and get feedback or new inscructions for changes. If you put it in a nutchell Scrum is a scrum is a team based software devloping technique that deals really good with changes because they divide the product in working phases and hold a lot of meetings with feedback an new instructions.\n\n2) \n\nOn the one hand we have the teambased structure with many meetings, which improve the risk mangament and the communication, but on the other hand the hole development depens on how the teammates interact withc each other, so the project failure are high if individuals aren't cooperative with each other.\n\nAlso throw the Sprints rapidly changing requirements can be controlled but their is also a risk that the project fails because of no definite end date, because the project deals to long with the same part because of periodic changing requirements or are more lazy because of no dead line.\n\n3)\n\nThe scrum and the spiral model use iterations, (sprint and iterations throw the spiral model). THe spiral model has a definite deadline, after 9 iterations if the risk could not be resolved, the project is terminated unlike the srcum method. The spiral model has 4 cleare defindet parts of every iteration which have their own usage in the development. In scrum their are no definde",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620468,
      "meta": {},
      "text": "Scrum is a system to manage and control software and product development with rapidly changing requirements. The system originates from rugby, where it was a way to continue the game after an interruption and therefore, Scrum is an agile software and product development process that can adapt quickly.\nThere is a product backlog, which defines what the future product should look like and tasks from the product backlog are then passed on to the sprint backlog which is created based on a Sprint Planning meeting, a sprint usually lasts between 2 and 4 weeks and the task of the sprint is to do all the TODOs from the sprint backlog within that period.\nMoreover, there is a daily scrum, which is like the small brother of a sprint - with daily meetings - in order to work on the project. After each sprint, sprint review meetings are held and before the first sprint, a project kickoff meeting is held.\nAt the end of each sprint, a potentially shippable product increment is ready for delivery. \nA sprint retrospective meeting is also held to evaluate the previous sprint.\nThere is also a scrum master, who is the interlinking part inbetween the developer team and the product owner (mostly coordination). He also creates a burn-down chart in order to keep monitoring the project progress. The product owner specifies, what product he wants. The developers decide, HOW that goal is reached.\n\n\n\nOne advantage of SCRUM is, that it is very agile and flexible. A software project being run under SCRUM rules can therefore react to change really quickly as there are daily meetings (sometimes even more) and sprints that can implement new features in no time. For example if a bug is found, the team can react the same day and fix it at the end of the daily sprint.\nComparison to spiral model: The spiral model can also react quickly to change as it is an iterative model which is based on rapid prototyping.\n\nMoreover, by involving the customer directly - who is communicating with the scum master - the best possible desirable outcome can be reached. This is very helpful to avoid misunderstandings as communication between developers and customers without the necessary knowledge can be quite challenging. E.g. if the scum master tells the product owner, that the software product can display weather in Celsius only but then the product owner wants the team to add Fahrenheit as he has customers overseas, it can be quickly adapted.\nComparison to spiral model: The spiral model, in contrast to SCRUM has no forseen direct contact with the prodcut owner and might therefore not result in the exact implementation of the owner's wishes.\n\nA disadvantage is, that the scrum master - who is usually the most skilled person - has to trust their developer team and does not code actively himself. He's just the interlinking part between customer and developers. That could marginally decrease product quality. For instance, the team could be struggling with a httpResponse bug and according to the SCRUM guidelines, even if the scrum master knew the solution to the problem, it wouldn't be part of his role to help.\nComparison to spiral model: In the spiral model, there is no \"master\" of the project who talks to the product owner as well as to the development team.\n\nLast but not least, there is no pre-defined deadline for the project. It's just \"as many sprints as we need\" which can be inappropriate to some customers who need precise timing of their software project and not \"as long as it takes\". If the development team knows, that the deadline is in 3 days, they will have a different kind of motivation to finish the product quickly than when they know they can take as long as they want to.\nComparison to spiral model: Again, the spiral model is quite similar in this point to SCRUM, because, being an iterative model, it does not have a pre-defined deadline as one can not be sure what will happen on the way to the goal.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644813,
      "meta": {},
      "text": "SCRUM:\n-> agile framework for effectively managing software development projects dealing with risk & frequent change by focusing on improved conversation &cooperative working styles \n-> SCRUM Team consisting of 3 roles: internal product owner responsible for suitability of requirements &working results, SCRUM master as process leader & conflict solver and diversely experienced software developers\n-> product requirements are identifed within a product backlog whose parts are iteratively worked out in multiple Sprints with each period including a Sprint planning meeting for kick-off, daily Sprint reviews for information exchange & Sprint review meetings for product increment presentation\n\nAdvantages:\n-> SCRUM incorporates agile thinking effecting in flexibility to immediately react to occuring changes & problems identified during daily meetings reducing cost due to early risk identification of developing incompatible or unneccessary features. Compared to spiral model both follow principle to include more flexibility via frequent control meachnism and feedback; spiral model within each iteration through alternative determination and prototype verification, scrum model through agile sprint planning and reviews;\n-> each sprint period delivers a potentially shippable product facilitating to deal with time delays making postponed feature delivery via updates possible. Additionally, this increment ensures correct software configuration & functionality through iterative testing ensuring quality in each sprint from project start. Similar for spiral model each iteration delivers a so called build, which can be given to customer for feedback.\n\nDisadvantages:\n-> scrum technique is more demanding in terms of management effort & scrum expertise, therefore company need trained employees (esp. scrum master) for effective application requiring time and money. Similar spiral model as well requires a more active management & more organisational effort as opposed to sequential models due to its iterative nature through repetition of 4 activities, where the iterations display different software development stages.\n->in SCRUM verification steps & the mixing of development stages hardens allocation of responsibilities and focus- keeping on desired & current status. It bears risk to inflate the project scope with resource-blowing features and activities due to the reversible scrum product backlog.. This requires discipline, good documentation and a focused SCRUM master. Here spiral model is more inflexible as it only allows for analysis within each iteration to determine early if the project is still feasible and adapt for change in a next iteration,but it does not allow for change and adaptation within iterations;\n\n(taken & adapted from own submission last year - h09e01/02)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619827,
      "meta": {},
      "text": "SCRUM ist ein leichtgewichtiges und agiles Softwareentwicklungs-Framework, das sich auf Zusammenarbeit, Kundenfeedback und iterative Entwicklung konzentriert. \n \n Die beiden Vorteile von SCRUM sind: \n \n 1. SCRUM kann sich an sich √§ndernde Projektanforderungen anpassen. \n 2. SCRUM gibt Ihnen eine bessere Kontrolle und Kontrolle √ºber Ihren Softwareentwicklungsprozess. \n \n Und zwei Nachteile: \n \n 1. SCRUM kann in gro√üen Organisationen schwierig zu implementieren sein. \n 2. Nicht alle Teammitglieder sind mit dem f√ºr Scrum erforderlichen Ma√ü an Transparenz zufrieden. \n\nVergleich mit Spiralmodell: \n \n 1. Das Spiralmodell kommt mit √Ñnderungen nicht gut zurecht, aber Scrum ist darauf ausgelegt, sich anzupassen. \n 2. Spiralmodelle k√∂nnen schwierig zu verfolgen und zu verwalten sein, aber SCRUM bietet mehr Einblick in den Prozess.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 5621215,
      "meta": {},
      "text": "Scrum ist ein agiler Entwicklungsprozess der Softwareentwicklung, dessen gesamter Ablauf sich in Sprints mit einer zeitlichen Dauer von ca 2-4 Wochen gliedert. Es gibt anstelle eines klassischen Projektleiters einen Scrum Master, der √ºberwacht, dass die Regeln und Methoden von Scrum eingehalten werden. Er bildet die Schnittstelle zum Product Owner, welcher f√ºr die Wertmaximierung zust√§ndig. W√§hrend der Sprints entwickeln vor allem die Entwickler die vorher im Sprint Backlog festgelegten Funktionalit√§ten der Anwendung, wor√ºber hinaus es ein t√§glichen Daily Scrum gibt, indem jedes Teammitglied kurz seine vergangenen Todos, Kritikpunkte...etc in offener Runde bespricht. Der Kern von Scrum ist, der kontinuierliche Verbesserungsprozess w√§hrend des Projekts, durch st√§ndige Reflexion, Anpassungen & Verbesserungen im\nLaufe des Projekts.\n\nVorteile \nScrum ist sehr dynamisch und flexibel anpassbar in den Arbeitsschritten. So k√∂nnen immer neue Aufgaben, die z.b w√§hrend des Projekts anfallen, ins Produkt Backlog aufgenommen werden und dann schlussendlich durch die Aufnahme in ein Sprint Backlog auch ausgef√ºhrt werden. Ein Beispiel w√§re hier z.b ein externes Software Beratungsprojekt, bei dem der Kunde immer wieder neue Anforderungen stellt, weshalb w√§hrend des Projekts neue Aufgaben hinzukommen. Bei dem Spiral Modell ist es √§hnlich, weil dort das Projekt auch in verschiedene Zyklen unterteilt wird. Dadurch kann iterativ die Zielformulierung bzw. das Projekt stetig an die neuen Vorgaben vom Kunden angepasst werden und neue Arbeitsschritte formuliert werden.\n\nEin weiterer Vorteil ist die gute Kommunikation und Reflexion, w√§hrend des Projekts. Durch Daily Sprint Meetings, ist jedes Teammitglied up to date und weiss √ºber die Aufgaben aller anderen Projektmitglieder bescheid. Ein Beispiel w√§re hier, dass wenn Projektmitglieder √§hnliche aktuelle Herausforderungen bei Ihren Aufgaben haben, k√∂nnen Synergien genutzt werden und sogar durch die t√§gliche Absprache Doppelarbeit unterbunden werden. Eine t√§gliche vorgeschriebene kurze Austausch/ Kommunikationsphase wie der Daily Scrum gibt es im Spiral Modell nicht, wodurch dort eher Absprachprobleme untereinander entstehen k√∂nnen.\n\nNachteile:\nEin Nachteil von Scrum ist der hohe Kommunikationsaufwand w√§hrend des Projekts durch Daily Wrap up sessions, sprint review meeting f√ºr die Retrospektive nach einem sprint. Dieser muss z.b bei einem externen Beratungsprojekt extra in die Angebotskalkulation f√ºr den Kunden mit einkalkuliert werden, was auf Unmut sto√üen kann. Beim Spiral Modell wird zwar iterativ bzw. inkrementell gearbeitet, jedoch ist der Kommunikationsaufwand nicht so gross wie bei Scrum, weil es z.b keine Daily Wrap up sessions im Projektteam gibt.\n\n\nEin weiterer Nachteil ist bei einem externen Beratungssoftwareprojekt, bei dem das zu beratende Unternehmen Scrum nicht kennt. Dadurch kann die Akzeptanz f√ºr diese agile Methode sehr gering sein, wodurch Unstimmigkeiten entstehen k√∂nnen. Bei z.b Workshops/Arbeitssessions mit den Mitarbeitern der Firma kann es auf Unvertr√§glichkeiten mit den Projektteam kommen, weil dies im Scrum Framework arbeitet und die Mitarbeiter des Unternehmen nicht. Beim Spiral Modell ist das √§hnlich, weil das Unternehmen auch dieses Arbeitsmodell und das Arbeiten z.b hier in Zyklen nicht kennen k√∂nnte und dadurch z.b. Unstimmigkeiten in der Erarbeitung der Probleme mit dem Kunden als Unternehmen entstehen k√∂nnen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622619,
      "meta": {},
      "text": "Scrum ist ein Vorgehensmodell zur agilen Softwareentwicklung, welches mit Unterbrechungen und √Ñnderungen umgehen kann. Deswegen erfolgt die Planung schrittweise iterativ in sogenannten Sprints und das System wird parallel entwickelt, sodass es nach jedem Sprint ein potentiell fertiges Produkt gibt. Die Teamstruktur und verschiedene Meetings helfen bei der Kommunikation, Zusammenarbeit und dem Reagieren auf √Ñnderungen.\n\nDurch wiederholte Feedbackschleifen werden die Risiken der Fehlentwicklung eines Systems minimiert, denn wenn der Kunde und die Developer sich zum Beispiel in der Beschreibung der Aufgabe missverstehen, so f√§llt das schon fr√ºh auf und man kann das kl√§ren und beheben.\n\nDie Motiation des Teams wird auch gest√§rkt, denn durch die Sprints hat man innerhalb kurzer Abschnitte ein greifbares Endprodukt, man sieht, woran man arbeitet. Zum Beispiel wenn man etwas wie das Eist Projekt programmiert, aber zuerst Backend macht, dann sieht man nicht, ob es funktioniert (abgesehen Tests). Wenn man gleichzeitig an der Website arbeitet, motiviert es, wenn die Verkn√ºpfung der beiden Teile und Funktion funktioniert.\n\nAllerdings gibt es eine geringere Planbarkeit, bzgl. Kosten und Zeit. Da das Projekt nur schrittweise genauer definiert wird, k√∂nnen Problemquellen oder Aufgaben, die viel Zeit brauchen auch potentiell sp√§ter erkannt (beim Implementieren) und gel√∂st werden, z.B. wenn man eine Datepicker-Komponente einbindet und sie sich nicht verh√§lt wie beschrieben.\n\nDes weiteren steigt der Druck auf das Team gegen Sprint Ende, da das Produkt funktionsf√§hig und potentiell shipable sein sollte. Wie im Eist Projekt, wenn man was vorstellen musste am Ende des Sprints, aber noch nicht alle Ziele erreicht hatte.\n\nIn beiden hat man Fehlerminimierung durch Schleifen, im Spiral Model wird sogar die Risikenminimierung wichtiger. Auch k√∂nnen in beiden neue Requirements hinzugef√ºgt werden und der Kunde wird miteinbezogen.\n\nDie Motivation ist ein schwer messbar, aber auch im Spiral Model hat man durch Prototypen Ergebnisse, allerdings gibt es nicht so viele Meetings und durch die vermehrte Kommunikation in Scrum ist dort wahrscheinlich der Teamzusammenhalt und die Motivation besser.\n\nBeide sind sehr schwer planbar und k√∂nnen in eine Endlosschleife gelangen, d.h. Kosten undd Zeit sind schwierig abzusch√§tzen.\n\nDas Spiral Model ist sehr komplex und f√ºr kleinere Projekte mit wenig Risiko nicht sonderlich gut geeignet und man hat auch die Unterteilung in einzelne Phasen und somit den Druck gegen Ende.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644381,
      "meta": {},
      "text": "Scrum is an agile framework for software development that is built to be adaptive to changes. Scrum requires a product owner, describing and validating the requirements of the product, a scrum master, managing the usage of the scrum framework and a development team, developing the actual product. Scrum gets its agile character through its process. During the kick-off meeting, the team creates a product backlog, consisting of tasks and aspects of the final product, that is eventually used to develop the product within different sprints. Whereas, each sprint produces a new product increment.\n\nScrum allows the users to apply changes quickly and to test changes to the product regularly. This way, it saves money and gives the customer more freedom to request changes and thus develop products with long term perspective. The spiral model on the other hand doesn‚Äôt allow any real changes to the product requirements. For example, a customer can easily ask for a simpler user interface for the web application that is being developed and wouldn't cause any troubles within the development.\n\nEven though this might sound  great, the team and especially the scrum master require a lot of training to effectively use this framework. The scrum framework requires a lot of work from the whole team to enable effective communication and planning of the sprints. This is why, Teams that na√Øvely use this framework might not see any positive results. The spiral model also requires some training, but isn‚Äôt too different from traditional development lifecycle and is more intuitive for most teams. A team without any experience might, for example, not be able to effectively communicate their ideas during the daily scrum meetings.\n\nScrum also doesn't comply with the tradition overall deadline for projects, since progress is a lot harder to measure in scrum than in other frameworks, because of its many subprocesses like the daily scrum meetings. After all, The spiral model uses 9 iterations and provides a clearer assessment of the overall progress. For example, the progress of a web application might not be very clear, since changes can lengthen the development at all times, by adding more sprints.\n\nStill, the scrum framework allows developers to regularly discuss their thoughts about the current stage of the project and to apply them into the product. This eventually leads to a higher satisfaction within the team and higher quality work. The spiral model doesn‚Äôt allow the team to completely go back to a previous stage, and thus limits the quality of communication. For instance, a developer can easily communicate and include changes to the database if he considers it to be too inefficient.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644784,
      "meta": {},
      "text": "SCRUM is a method that deals with rapidly changing requirements in software development, where work is performed in parallel, which also improves risk management through among others regular selfreflection, and the regular delivery of potentially shippable product increments after each sprint. In a Project kickoff meeting, the product backlog is determined, which consists of different requirements, which can always be changed and reprioritized. In a Sprint, which always has the same time length, product backlog items are selected that can be realized in this sprint, which is than called the Sprint Backlog, meaning the goals of development for this particular sprint.\n\n\nadvantages:\n- way more flexible to manage changes in requirements because the development team is used to changes within theproduct backlog:\ne.g. If the customer wants changes in the GUI, this is simply added to the product backlog and this item is then a potential item for the next sprint backlog.\nIn Spiral Model we cannot deal with rapid changes that good.\n\n- large projects are divided into easily manageable sprints. Each sprint has the same length and if you devide big projects into small items, it becomes more easy to know what to do and to keep track of the progress:\ne.g. When developing a flightbookingsystem, it makes sense to first divide the large project into smaller requirements, which in turn consist of various tasks that must be completed in order to fulfill a requirement.\nIn Spiral Model we don¬¥t devide our problem that fine and we don¬¥t have sprints of equal duration.\n\ndisadvantages:\n- May require major transformations within the organization because it takes effort and time to setup the structure. This means that you need new roles in a team and it requires training for everyone involved, to get used to SCRUM:\ne.g. In any company that has not worked with agile methods before, a major change is necessary if SCRUM is now to be used.\nIn Spiral Model we don¬¥t need so much effort to implement this method.\n\n-Requires the use of small teams with everyone having its role in the team, so it`s difficult to work with less than 4 people in a group:\ne.g. very difficult in a startup with only three people to work with SCRUM approach.\nIn spiral model it doesn't matter what size the team is and there are not so many roles.\n",
      "score": 87.5,
      "language": "ENGLISH"
    },
    {
      "id": 5644829,
      "meta": {},
      "text": "Scrum ist ein agiles Projektmanagement-Framework, das darauf ausgerichtet ist, schnell und flexibel auf √Ñnderungen zu reagieren. Es hilft Teams, komplexe Probleme zu l√∂sen und Produkte schneller und effizienter zu entwickeln.\n\nVorteile: \n- Scrum bietet einen klaren Rahmen f√ºr die Zusammenarbeit im Team und die Kommunikation mit dem Kunden. \n- Durch die regelm√§√üigen Sprints ist es m√∂glich, schnell auf √Ñnderungen zu reagieren und das Produkt entsprechend anzupassen.\n\nNachteile: \n- Scrum ist nur f√ºr kleine Teams geeignet. Bei gr√∂√üeren Projekten kann es zu Koordinationsproblemen kommen. \n- Scrum erfordert ein hohes Ma√ü an Disziplin und Engagement vom gesamten Team.\n\nIm Gegensatz dazu ist das Spiralmodell ein risikobasierter Ansatz, bei dem einem Produkt iterativ neue Funktionen hinzugef√ºgt werden. Der Hauptunterschied zwischen den beiden Methoden besteht darin, dass Scrum auf die Bereitstellung von Werten in kurzen Sprints ausgerichtet ist, w√§hrend das Spiralmodell auf das Risikomanagement ausgerichtet ist. Scrum ist daher besser f√ºr schnelle und flexible Entwicklungsprozesse geeignet.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 5644841,
      "meta": {},
      "text": "SCRUM is a technique for agile software development. It is based on incremental iterations (vertical integration) as well as communication, reflection and requirement assesment in between the sprints. Because of this, it is particularly suited for projects in an environment of frequent change, as it allows to delivery potentially shippable product increments after every sprint.\n\nAn advantage of SCRUM is the adaptability and flexibility it brings. Due to the frequent team meetings, there is a lot of communication and the requirements can be assesed and adapted after every sprint.\nThis also leads to another advantage: higher customer satisfaction. Due to the good and frequent communications, more customer needs can be met.\nExample (for both advantages): A newly founded headhunter company wants to improve its matching by using an AI. The development takes months and meanwhile the company entends the criteria for matching. With the help of SCRUM the changing requirements can be incorporated during the development instead of being added afterwards at a high cost. Because of this, the company feels all of its needs are being met adequarely and it is very satisfied with the end product.\n\nNow the disadvantages: \nBecause SCRUM is so heavily based on communication between all the team members, it is hard to use it for bigger projects where it might not be possible to have plenary team meetings where everyone can contribute without taking up a lot of time. \nAdditionally, the daily meetings might be hard to schedule so that everyone has time. And even if it works, they might frustrate the team members because they take up time. \nLet¬¥s take the AI example again: The software development team consists of 20 people, half of them work remotely in different time zones. This makes communication very difficult. Team meetings with 20 people take forever and most of the time someone is missing because they have something else scheduled.\n\nThe spiral model is not as flexible, because the requirements are already determined in the second out of 9 iterations. Changes might only determined in the acceptance test. This makes going back and incorporating them very difficult and time-costly and therefore decreases customer satisfaction.\nOn the other hand, the spiral model does not require as many meetings. Tasks can be easier divided and be carried out independently which makes it easier to work in big teams unlike with SCRUM. Also there are no daily meetings.\n\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5645049,
      "meta": {},
      "text": "Scrum is an agile framework based on an iterative and incremental processes. It allows quick adaptations to fluctuating conditions and maintains a close connection with the customer needs. Scrum development process includes a product backlog, sprint planning, sprint backlog, daily scrum meetings, increments, sprint review and sprint retrospective.\n\nScrum advantages:\n+ leads to better quality work process\nIn our eist-project the responsibilities of every member were strictly defined, which made the productive environment well structured in general.\n\n+ provides satisfaction of most customer requirements\nConstant adjustments based on internal and external feedback of our tutor and team members resulted in a product with almost all wanted properties of the \"customer\" (problem statement).\n\n\nScrum disadvantages:\n- Shortage of people\nChange to a scrum framework resulted in a shortage of the personal in my company as it requires a much smaller amount of participants and collaboration of people from different departments was very un successful at the beginning.\n\n- Adjustments in the company are needed when switching to scrum framework\nUsing the same example workers with a classic project management approach found it challenging to adjust to a new personal workflow, daily discussions of personal accomplishments with the team, becoming very agile within the work in general.\n\nComparison with the Spiral model:\n\nThe spiral model has emphasis placed on risk analysis.\nThe exact number of phases needed to developed can be varied by the project manager depending upon the project risks.\nTherefore it doesn't allow precise determination of approximate expenses compared to the precision of scrum, as it is represented in the radius of the spiral at any point, which depends on the number of phases.\nDivination into 4 activities makes it comparable with scrum methodology.\nSpiral model is more suitable for larger teams and complex projects.",
      "score": 54.2,
      "language": "ENGLISH"
    },
    {
      "id": 5619520,
      "meta": {},
      "text": "The core essence of Scrum is the agile possibility in reacting the right occurrences. At all times the client / owner and developers see if new features are needed / everything goes well and is in time or if the owner doesn't like where the project goes. At anytime you know how the project behaves and in what state it is.\n\nThe advantage is that after a sprint session the teams can look back and discuss what actual tasks of the current sprint where rightfully fulfilled and what parts still need work. Also the client can always have a word. It's easy to react to new input from the client and its also easy to react to unwanted problems which could possibly occur. For example if the owner isnt happy with the user interface or has new ideas about features which should be added. \nThe spiral cannot go back at any given point and there will be a huge hole between developers and the client.\n\nAnother advantage is that the team will daily discuss on what they will work and how their progress behaves, also if they possibly stumble upon new obstacles. For example if they build and engine and needs more time than needed on physics. Without physics the engine wont work. It's easily to communicate on such problems and shift priorities / resources towards it.\nIn the Spiral model wont be a daily structured communication between teams and team members. Misunderstandings will happen.\n\nThe disadvantage with scrum is that after a sprint its possible to define more and more new features. A undefined project deadline will be the result. For example if the client wishes more and more features for his product.\nThis wont occur in the Spiral model because there is a lack of communication and observation of the client towards the state of the product.\n\nAnother disadvantage is that Scrum is made for smaller and more socialized teams. If few members choose rather hold back in communication this can lead to huge misunderstandings. For example wrong communication can lead to unfinished dead ends of parts of the product. Noone would know if it wont be communicated early enough.\nThe Spiral model wont catch on such things because its clearly defined how to work each task in which order. Its way more stricter and straight to the point.\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619753,
      "meta": {},
      "text": "SCRUM ist eine Methode um Projekte agil zu managen. Dabei kann ein Entwicklerteam, dass einem iterativen Projektaufbau mit wiederholten Absprachen mit dem Produkt Eigent√ºmer folgt, gut auf Ver√§nderungen innerhalb des Projektes eingehen und diese auch w√§hrend dem Entwickeln noch umsetzen.\nDer erste Vorteil ist, dass Ver√§nderungen in den Anforderungen umgesetzt werden k√∂nnen. Das ist sehr hilfreich, da man auf die W√ºnsche des 'ProductOwner' gezielter eingehen kann, da dieser aktiv durch R√ºcksprachen in den Entwicklungsprozess miteinbezogen wird. Ein konkretes Beispiel w√§re, wenn der ProductOwner ein Website f√ºr seinen OnlineShop m√∂chte und beim ersten Entwurf der Benutzeroberfl√§che noch nicht mit der Grafik zufrieden ist, sieht er durch die Sprint Reviews diesen Entwurf zeitnah und kann somit nochmal √Ñnderungsw√ºnsche einbringen. Im Spiral Modell hingegen werden in der zweiten Iteration die Requirements behandelt, wodurch eine sp√§tere √Ñnderung dieser problematisch werden k√∂nnte.\nWas neben der guten Kommunikation auch noch zur Sicherheit einer m√∂glichst guten Umsetzung des Produkts beitr√§gt, ist die Flexibilit√§t innerhalb des Entwicklerteams. Wenn zum Beispiel eine Aufgabe, die f√ºr einen Sprint geplant war, nicht geschafft wurde, kann diese in den n√§chsten Sprint verschoben werden. Wenn in einem Sprint die Grundstruktur des Programms getestet und zus√§tzlich noch eine neue Funktion hinzugef√ºgt werden soll, und das Testen aber zu viel Zeit in Anspruch nimmt, wird die neue Funktion in den n√§chsten Sprint verschoben. So wird daf√ºr gesorgt, dass z.B. das Testen nicht zu kurz kommt und somit die Funktionalit√§t des Programms verbessert wird. Im Spiral Modell gibt es durch die Iterationen eine feste Vorgaben f√ºr das Entwicklerteam.\nDieser Punkt kann aber auch zum Nachteil werden, wenn alle Aufgaben immer in den n√§chsten Sprint verschoben werden und somit, dass Produkt nicht fertig wird, weil das Team z.B. zu viel Zeit die graphische Gestaltung steckt. Im Spiral Modell w√§re dies wieder durch die festgelegten Iterationen nicht m√∂glich.\nEin weiterer Nachteil kann sein, dass durch die vielen Meetings und Absprachen Zeit verloren geht, die besser in die eigentliche Entwicklung des Projekts gesteckt werden sollte. Es gibt z.B. das Sprint Planning und die Review vor und nach jedem Sprint. Im Spiral Modell sind diese Meetings nicht n√∂tig, da bereits strukturiert ist, was wann erledigt werden soll.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5620339,
      "meta": {},
      "text": "SCRUM is an agile method that should simplify work on complex projects. It is an empirical process control model in the sense that processes are not entirely planned and the model allows for spontaneous adaptions. In SCRUM, all tasks are put in to a so-called product backlog. Each iteration, which in SCRUM is called Sprint and usually lasts a day, tasks are moved into the sprint backlog and are worked on. After each Sprint, there is a potentially shippable product increment.\nAn advantage of SCRUM is that independent tasks can be completed concurrently. For example, a sprint backlog can contain one task dealing with the backend development while another one deals with the frontend. In the Spiral model, the iterations follow a predefined oder which is harder to change.\nAnother advantage of SCRUM is that a Sprint retrospective meeting can be held to reflect about the team's work itself. For example, if a team member has feeling that the team should share their codes more often, he can ask them to push the codes to the repository more frequently. The Spiral modle does not have a meeting comparable to the Sprint retrospective meeting.\nA disadvantage of SRUM could be that the the prioritisation of backlog items by the product owner or the difficulty assessment by the development team could be wrong or biased. For example, the development team might think that the cross-platform integration of a software is the most difficult part to implement while it is actually the database system. Same could happen in the Spiral model though. In each iteration, risks must be assessed which could be prone to errors. \nAnother disadvantage of SCRUM could be a lack of communication between product owner, scrum master, and Scrum team members. For example, if the development team does not communicate which items must be refined after a sprint and ends up delivering a product increment which the product owner did not expect, this can lead to conflict. This is less of a problem in the Spiral model since there are not defined roles as in SCRUM.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621407,
      "meta": {},
      "text": "The scrum model is an agile framework for managing software development, where development is divided into short cycles or sprints. This allows for frequent feedback and at the end of each sprint the team delivers a potential shippable product.\n\n1st advantage is that scrum allows for flexibility and can therefore work around customer requirements better. Scrum teams can adapt quickly to changes in customer requirements. This helps the team to ensure they meet customer needs. This \n\n2nd advantage is the increased transparency. All scrum team members are always aware of the progress of the project at all times and therefore more people are able to collaborate as well as making informed decisions.\n\n1st disadvantage is that scrum can be difficult to maintain over long term periods of time, since scrum requires high commitment and effort from all team members.\n\n2nd disadvantage is scrum requires more meetings and planning than the spiral model so this means that team members will have less time to do individual work. \n\nThe spiral model is a much more structured and rigid model where the 4 stages are clearly defined and are a clear ordering. This means that the spiral model is much more suitable for projects with a clear structure and where the project does not necessarily require customer feedback during each stage of the project. The scrum model is in comparison a much more flexible model, allowing for frequent deliveries and frequent feedback as well as changes in project features/structure. ",
      "score": 29.2,
      "language": "ENGLISH"
    },
    {
      "id": 5621526,
      "meta": {},
      "text": "SCRUM is a process model of project management and product management for agile software development. The core essence of SCRUM is like this example. A customer has a problem and this could be solved by developing a product. For this, a team envolves in building and developing this product.\nTwo advantages of SCRUM are given. Huge size of projects could be divided into each sprints, so that the whole project can be finished earlier and easier. For example, a huge project is making a car. For this, we divide this project into many sprints such as earning raw materials, designing and car manufacturing, stamping, painting, testing the finished car. Through this division, the whole project gets easier and can be finished faster.\nSecond advantage is that the team is well informed about the status of project through scrum meetings. In this example of manufacturing a car, every team gets information about current status through scrum meetings, so that they are informed about the updated status and have idea what to do next. This is definitely an advantage because if you are not informed about the updated status, you could work on the previous version which has already been modified. That means you should work again on a new version which takes much more time.\nStill, there are disadvantages of SCRUM. If individuals involved in project are not cooperative and motivated, the risk of project failure is really high. If for example person who is responsible for obtaining raw materials does not work properly, the whole work standing after this process cannot be continued and hence, the whole project takes longer.\nSecondly, if one team member leaves during the project, it could have a big negative impact on the whole project. If a person responsible for designing car leaves, the team member who has the next role does not know what to do. It also takes long to find an alternative one to replace this person. So, this can lead to a huge delay of whole project.\n\nBoth of SCRUM and spiral model have testing, planing and assessing phases. However, in compared to spiral model whose main principle is risk management, SCRUM is lack of the risk management. So, the spiral model will be used for long and big projects which have a high risk. In compared to that, SCRUM is suitable for huge projects which can easily be divided into each sprints.\nWhile SCRUM actively interacts with customer to check if the customer is satisfied with the product, in the spiral model the interaction with customer is less and this model usually deals with lots of risks.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621686,
      "meta": {},
      "text": "To define SCRUM in 2 - 3 sentences, lets take a scenario where theres a team which has a common goal which can be any solution to create. The team gets splits up with different tasks and their own smaller teams to solve the task the sub team has to complete. The SCRUM meetings will be based on sub teams and also general big scrum meetings held by the SCRUM master who is tasked to ensure tasks are met and completed in time.  The advantage of scrum is that it helps teams work together quite efficently and also allows for taks that become to diffcult be done in a group setting than a sole individual one, another positive aspect is that Agile methods can be applied to the framework of SCRUM to make it more efficent. The negative aspect is that the question on how to develop or derrive solutions is ambigous and it leaves members working quite lost and clue less. Another aspect is that if the SCRUM master doesnt take control then tasks are just completed or uncompleted and there is no gernal point on where the stand of the solution is and what the other sub teams need to do next.  \n\nComparing the advanatge of SCRUM with spiral model is that the Spiral model efficently uses their time to engage,develop and release the solution. The disavantage of SCRUM vs Spiral model is the aspect of risk management and it is fairly easy to distort the SCRUM implementations that the Spiral model.    ",
      "score": 29.2,
      "language": "ENGLISH"
    },
    {
      "id": 5622897,
      "meta": {},
      "text": "SCRUM is a framework for agile project management with clearly defined roles in which continuous improvements are realized in successive regular sprints of fixed length through organization, prioritization, experience and reflection. There is a SCRUM master who ensures that a product owner collects tasks in the product backlog, the SCRUM team implements a selection of these during the sprint to a potentially shippable product increment and then the results are reviewed and adjusted for the next sprint.\n\nAdvantages:\n- Thanks to consistent, rapid work periods, the team remains motivated and customer satisfaction is ensured through fast, visible progress for users. Since SCRUM is not horizontally integrated but vertically, a product increment results in e.g. a usable feature for users. The Spiral model, in comparison, may have inconsistent work cycles and iteration results in a prototype rather than a potential product increment.\n- SCRUM brings a high flexibility to adapt to changing requirements, goals or situations. If user feedback generates new requirements after a Sprint, it can be documented, evaluated, and prioritized for direct implementation in the next Sprint. This can reduce risks and costs, deliver benefits faster, and accelerate time to market. In comparison, changes due to e.g. user feedback cannot be reacted to as quickly in the spiral model.\n\nDisadvantages:\n- With SCRUM, it is not possible to define a project end date, as the scope can be continuously changed. It can happen, for example, that an certain launch date or budget, required by management, cannot be met. In comparison, the spiral model offers greater planning certainty due to regular risk analysis, but may also have the same problems. \n- SCRUM does not work in large or inexperienced or untrained teams. If a team consists of 20 people this leads to inefficient communication and if the framework and specifics of SCRUM are not understood by all members, the methodology does not work well. A missing Scrum Master can also be a reason for wrong usage. The spiral model as comparison is also complex, but detailed planning upfront can structure work better than SCRUM and communication is not as important.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619625,
      "meta": {},
      "text": "The SCRUM method is adaptive in the sense that it responds well to changes during activities in a project. There is a great emphasis on maintaining communication between the development team and the customer to ensure continuous reflection and improvement of the product. The project would be split into a series of consecutive so-called sprints aka iterations which are timeboxed, where the product is brought to a potentially shippable state at the end of each sprint.\n\nSCRUM provides the advantage of implementing requested changes by the customer quickly which mitigates the risk of not meeting customer specifications at the end of the project. For example, during the EIST team project, the team coach provides feedback regularly at the end of every 2 weeks long sprint which can be used to implement the necessary changes to the product increment. On the other hand, the Spiral Model doesn't allow change within an activity until it is over.\n\nAnother advantage of SCRUM is that at the end of each sprint there exists a potentially shippable product increment with some implemented functionality which can already be demonstrated to the customers. For example, in the EIST team project, there is already an executable application that can be shown to the team coach. In the Spiral model, the customer will know of their product only after the final release. \n\nA disadvantage of SCRUM is due to its flexible nature on the number of requirements imposable by the customer, this could impair cost and time estimation for the project. For example, a development team developing a simple application could suffer from time and cost uncertainty if the customer keeps adding too many requirements to the product. The Spiral model on the other hand doesn't alter the requirements very much during each iteration. \n\nLastly, SCRUM can be disadvantageous for large-scale projects with large teams due to its self-organising nature. For example, a team of 30 may find it hard self-organising for daily scrum meetings and assign roles. Spiral Model is on the other hand better for high-risk-bearing, large-scale projects.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621981,
      "meta": {},
      "text": "Scrum is a subset of Agile Software Development which is a method based on iterative and incremental approach. It a technique that deals with interruptions (changes), Scrum enables us to work in parallel using repeatable cycles ,called Sprints to divide the project development phases.\n\nThe main advantages of scrum are the facts that it manages and controls software and product development with rapidly changing requirements.\nFor example, a team that is using scrum as their project development method , if the client changes his mind about some feature in the project and happens to change it with another or remove it. The team can apply the modification by the beginning of the next iteration ( the next Sprint).\nFurthermore Scrum improves risk management by improved communication , cooperation and the delivery of product increments. \nIt means, on daily bases , all effort, changes, ideas done or created by team members of a project are shown and discussed on the daily sprint meetings which makes work more effective.\n\nHowever , Scrum can also hide some disadvantages as it can represents challenges when we want to apply it for big Projects . In this case generally all team members should be experienced and have great idea on Scrum to assure the success of the project otherwise it can create problems.\nIn addition , Scrum is so dependable on team members contributions , if for example and individual of the team is not cooperating or committed enough that can affect the project and even leads to failure.\n\nTo compare Scrum to Spiral Model we can say that they both have things in common such as test , plan and evaluation phases. In fact they both are able to handle risk management as they are based on cycles/phases .But now let's take a look on the main differences. We said earlier that Scrum can easily adapt to changes and manage quickly to add them to the project. Spiral Model can also do that but in later farther stages which can make the project not meet its schedule and create conflicts with deadlines. We also said that Scrum is hard to be applied to big projects , Spiral Model on the other hand is completely the opposite as it's not recommended to be applied to small Projects as it can costs a lot in term of money. It is also following a strict protocol that needs to be followed to assure the success of the project.",
      "score": 54.2,
      "language": "ENGLISH"
    },
    {
      "id": 5623039,
      "meta": {},
      "text": "Basically during Scrum the Product Owner creates a Product backlog that is subject to change. The product backlog will be refined in parts that the team can work with in so called sprints. Everyday there is a meeting to discuss their progress and what went well/wrong and the sprint process will be repeated till the expected result.\n\nAdvantages:\n- Flexibility\n\tchanges to the product backlog can be easily implemented \nin the spiral model\n\tcan be changed as well later on\n\n-Transparency\n\tbecause of the daily meetings everyone is up to date with the progress of the project\nSpiral model\n\tthere are no meetings to discuss things similiar to the daily meeting\n\t\n\nDisadvantage\n-does not work in large groups\n\tcommunication becomes harder in larger groups\t\n\nspiral model\n\tno issues.\n\t\n-there is no fixed deadline \n\tonly a deadline for each sprint but no deadline for the final product which means the final product can be delayed indefinitely \n\nspiral model\n\talso applies here",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644268,
      "meta": {},
      "text": "Scrum is a an agile development process, that allows for rapid changes during the development process.\nIt partitions the teams workload into \"sprints\" so that after every sprint (about 2 weeks) a product increment has been made. \n\nADVANTAGES:\n1. The daily scrum meeting allows the developers to share their current progress, and get feedback on it, so that the errors of one developer can be detected and avoided by the others. For example: a junior developer is building a system based on a deprecated set of functions, but the senior developer notices it since he is sharing his procedure in the daily standup. \n-The spiral model doesn't have a daily standup \n\n2. Since the team always produces a Potentially shippable product increment, the stakeholders can get a good impression of the product they want and can adapt rapidly to unexpected problems or new ideas that come up on the way. For example: The UI the client wants isn¬¥t really intuitive, with a typical development method, this issue could have surfaced after may months of development, when the product is actually usable for the first time.\nWith scrum issues like that can be noted after one or two sprints since a ruff version of the final Ui already exists after the firsts sprints.\n- In the spiral model this would be avoided by prototyping\n\nDISADVANTAGES:\n1. It isn¬¥t suitable for larger teams, since the scrum process defines tightly the work for every single on of the team members. Correctly distributing the workload on more than 10 people, having their personal skillset in mind is difficult and time consuming. For example: in the sprint planning a task for every of the 100 team members has be found, so that it also fits their skillset and area of expertise. \n- The spiral model works well for larger teams \n\n2. Due to the emphasis on team involvement, scrum can create a planning overhead especially on projects that dont require the flexibility of scrum. For example: A straight forward project, where all the planning is done and there cant be any divergence from it\n\n\n\n\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644585,
      "meta": {},
      "text": "SCRUM is an agile software development lifecycle model that quickly reacts to change and builds the software feature by feature.\nIn SCRUM developing is split into sprints lasting about 4 weeks, with each sprint having a sprint backlog of features or bugs that are being worked on, after which a (potentially) shippable software can be compiled from the code.\nEvery day the developers meet for a daily scrum meeting, so they are informed about what changed in the other parts of the codebase.\n\n\nAn advantage of SCRUM would be, that the customer gets a usable product with new features after every sprint; even though it's not finished. The developers can start working on the most important features in the beginning, so that the basic product is finished quickly.\nIn the spiral model, the prototypes after the early cycles are not usable software, but most likely models or prototypes.\n\nAnother advantage would be the possibility to react to changes quickly. When the customer wants to change part of the software, the product backlog can be modified (add/remove/edit tasks) and the next sprints will work on that.\nAs the spiral model is iterative, it's only useful when change happens rarely. When the customer wants something changed, the previous phase needs to be redone or the project needs to be canceled (e.g.  too expensive).\n\nA disadvantage would be, that the daily meetings might annoy or frustrate the team members, as they might think they are talking more than coding, or have to tell that they didn't get much done during the previous day (as they might have spent the full day debugging a single part).\nIn the spiral model, this is not possible, as there are no daily meetings.\n\nAnother disadvantage is, that the projects deadline is hard to judge. As each sprint's deadline only requires some parts of the features, it is hard to tell if all the features can be implemented until the final deadline.\nIn the spiral model, the risk assessment can check if the project is likely to be finished on time.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5645039,
      "meta": {},
      "text": "The core essence of SCRUM is being able to deal with change during development. You can make steps backwards and react to this change, different to the the non-agile models. It also uses vertical integration of the product instead of horizontal and therefore always produces a potentially shippable product.\nadvantages of SCRUM:\nA first advantage is the possibilty to deal with changes in the requirements. If the customer decides he for example wants another feature for the user interface it is possible to integrate this when using scrum because it can just be added to the product backlog. In the spiral model this is only possible if the UI has not been implemented yet.\n\nA second advantage is that you always have a shippable product which you can show to your customer although it might not have all wanted features yet, which allows the customer to give feedback and requests for change much better and sooner. If the customer is shown the current product and for example decides he doesn't like the current way the system works or realizes there is a need for another different feature. Showing the current state of the project is not possible when using the spiral model because you only have a shippable product when the development is done.\n\ndisadvantages of SCRUM:\nA disadvantage of SCRUM are the difficulties you get when trying to use SCRUM with big teams. This makes the meetings and Sprint plannings rather difficult due to the sheer amount of people involved. In this situation the advantage of the good communication with SCRUM can become a disadvantage because there are too many people involved. An example for this would be the time sprint meetings take when there is a group of 100 people developing a system together. This problem does not exist in the spiral model because there is no need for weekly meetings.\n\nA second disadvantage is the additonal effort it takes because of all the meetings.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619842,
      "meta": {},
      "text": "The main idea of SCRUM is to make the development of software easily to adapt changes from the requirment.  It runs rapidly to make the development more adaptive to the changes by improved cooperation, communication and the delivery of the product increments, so that it can help the team to have more changes to avoid risks.\n\nAdvantage:\n 1.it has a rapid market response capability, which is easily to adapt changes from the requirment. For example if the supervisor wants to add some new function or change some function from the software during the development, it is easily for the develop team to achieve these requirment by next period of the sprint. \n2. improves the cooperation, communication and the delivery of the product increments, so that risk mangement is also improved and the develop team can be more efficient. For example every springt review can tells the team what is going on and is every work doing well or not, so that the scrum master can change the job or the group of people to slove the problem.\n\nDisadvantage: \n1.when the turnover of staff is high, it is difficult to do a maintenance for the team, because it is a continuously process for every memeber of the team. For example if the scrum master and half of the team turnover. It is hard to find a new team to adapt the project and continues this scrum, because they dont have enought information on this project. They need to start a new scrum and it costs more time.\n2.veteran should take more time to help the beginner and it will make the scrum not so efficient anymore. For example in the team project if there is only on person knows html,  springboot and gradle, he needs to teach other 4 people how to use them to make sure the team can work. It is really unfair for him because he need to spend more time on it and do more work and the team is still not efficient.\n\nAdvantage from SCRUM:\nLower risk\nEmbrace change for market\nContinuous improvement\nHigher customer satisfaction\nHigher team satisfaction\nGreater flexibility\n\nAdvantage from Spiral model:\nFlexibility in design\nEasy to be evaluated\nThe client is always involved at every stage of development, ensuring that the project stays on track.\nThe client is always kept up to date with the project, so that he or she can interact effectively with management.\n\nDisadvantage from SCRUM:\nDifficulty in accurately defining essential documentation\nDifficulty in capturing overall product consistency\nDifficult to predict finite endpoints\n\nDisadvantage for Spiral model:\nDifficult to convince users that the results of this evolutionary approach can be controlled\nLong construction cycle but software technology develops really fast, so that it may causes large gap between the completion of software development and the current technology\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620207,
      "meta": {},
      "text": "SCRUM tries to incrementally add parts to the product, constantly improves the product with respect to constantly changing requirements. There's a kickoff meeting at the beginning to summarize all product requirements. There are sprint planning meetings, where items to work on in the next sprint (period of 3-4 weeks) are picked. After a sprint a shippable product exists, feedback sessions are possible and the product backlog (requirements) can be changed along the way. Daily meetings to discuss the process and problems are required.\n\nAdvantages Scrum:\nThe team is able to handle fast changing requirements during software developing. E.g. if there's a change in the customer requirements or a problem during current activities, this can be added to the product backlog or the problem can be solves due to the incremental developing approach.\nSCRUM can additionally deal with changes during developing activities while spiral model only deals with changes between activities.\n \nSCRUM comes up with a potentially shippable product after each sprint as the product is developed incrementally. E.g. after two sprints, the User Interface is implemented and the temporary product is shown to the customer. He can provide feedback to avoid misunderstanding which (in the end) can be costly.\nBoth models share this advantage: SCRUM comes up with a potentially shippable product and the spiral model with a prototype.\n\nDisadvantages SCRUM:\nYou need an experienced, trained team. Everyone needs to understand the SCRUM process. E.g if there's no trained personnel, the roles of the Scrum Master/Product Owner cant be filled adequately which leads to chaos in the process, inefficiencies, loss of quality. Compared to the spiral model. SCRUM is harder to grasp and needs more constant training.\nWith SCRUM, it's harder to manage risk and to keep track of the progress of a product: It is only done if it's accepted by the client. E.g. large software projects need risk management to not waste resources. If there are too many risks, you terminate the product in spiral model (extensive risk management there) and in SCRUM you might not see these and carry on developing.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620216,
      "meta": {},
      "text": "Scrum ist a process where we start with a product backlog and then move into a sprint that starts with a sprint backlog where a subset of items/tasks have been moved. You go into a cycle to finish these items. As part of the sprint you have daily scrum meetings for two weeks to be updated and in the end you have a sprint review meeting to evaluate what went wrong to incorporate that in the next sprint. \n\nAn advantage of scrum is that it gets projects done efficiently. In fact, the daily meetings are short and don't take much time for the members but they are time saving on the long run, since they are straight forward and help them detect what is still missing fast.\n\nScrum also makes large projects easier, since it divides them into small sprints, that enable fast changes and easy management. If the bumpers game gets divided into parts, the implementation gets easier.\n\nHowever, scrum being empirical can be inefficient since you don't plan for complete project at beginning, and it doesn't have a deadline, which makes it to expand to several sprints.  Example : a project that gets delayed by a few months because of the increasing number of sprints.\n\nAnother disadvantage is that sometimes daily meetings can be unsuccessful, or frustrating to the members. An example is a member doing multiple meetings for multiple projects at once.\n\nLike scrum, it is possible to get things done efficiently using the spiral model. They both have test, plan, and evaluation phases, and require regular updates to solve any sudden problems.\n\nThe spiral model also divides the project in parts, just like scrum. However, there's a fixed amount of phases that gets determined at first.\n\nWith the spiral model, feedback meetings can't be unsuccessful since they're not daily but they also work towards the creation of a prototype, so every member has a goal to reach.\n\nUnlike scrum, with the spiral model the deadlines can't be missed, since the number of phases and the time spent on each one is fixed at the beginning. \n\n\n\n \n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620701,
      "meta": {},
      "text": "Scrum is an agile technique that helps teams to act in complex, rapidly changing environments. It helps to adapt quickly to changing requirements by increasing communication and delivering product increments. Requirements are broken down into small tasks, done in so called sprints, time intervals of 2-4 weeks, where at the end should be a potentially shippable product increment. There are many meetings to ensure the high communication. Special is, that the team organizes itself so there are no hierarchies within a team. \n\nOften scrum leads to more satisfied customers. Because of the potentially shippable product increment that you present in the end of every sprint to the customer, there is ongoing feedback of the customer. You can therefor for example quickly respond to changing requirements of the customer resulting in better products and also lower costs.\nMoreover scrum increases employee motivation and satisfaction. This is for example because there are no hierarchies within the team and each team member takes full responsibility of his own work.\nBoth of these points are also advantages over the spiral model as they are achieved by the high flexibility and mentality of scrum. Compared to the spiral model, the scrum technique is more adaptive which is helpful if there is a high frequency of changes. The spiral model does not allow changes within an activity. \n\nHowever, it can be difficult to use scrum for very big projects. E.g. if projects are large and many teams are involved it can easily get messy and difficult to organize.\nFurther, it can be difficult to integrate a scrum team in the organizational environment. Scrum has no defined end date which can lead to strong delays. If for example other departments of the company depend on the product developed in the scrum team they have to deal with this possible delays.\nIn both points a more structured way of working, like it is in the spiral model, could be more appropriate  as it is a bit more organized as it provides a guideline. If a project needs a defined plan and requires predictability scrum is not suitable. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621872,
      "meta": {},
      "text": " The core essence of the SCRUM\n\nSCRUM is an iterative technique of software development that means dealing with frequently changing requirements of the product development. The SCRUM also means the parallel development and completing the tasks within one iteration and reviewing them at the end of each phase. That technique includes cycles (sprints) of planning and executing at every stage of software development and at the end of each, the team is getting the potentially shippable product.\n\nAdvantages\n\nBecause of the frequent communication between all of the team members, daily and weekly meetings, SCRUM is very adaptive and flexible. If the product requirements are changing rapidly, this technique allows the team to solve them instantly and add to the working process.\n\nThe SCRUM gives the whole team, project owner and customer very good predictions and visualisation of the product development process. The cycles help to understand the current tasks and see which features will be done in this iteration. That gives good transparency in the development and helps to control the process and add new changes or corrections.\n\nDisadvantages \n\nBecause of the planning the tasks only for one iteration (very often only for one week), the SCRUM doesn't give an opportunity to calculate the project deadline, because the team doesn't know how much should be done for the whole project.\n\nSCRUM has another disadvantage in the form of transforming the organisation and preparing the team for this technique. SCRUM needs the special environment and good team experience and communication to be fully effective.\n\nComparison between the SCRUM and the Spiral Model.\n\nIn the spiral model, the team prepares everything and then has to complete all of the tasks before going to the next phase. In SCRUM, the team doesn't plan the activities for the whole project. Instead of that, the plan contains the tasks only for this iteration and if they are not done before finishing, they go to the next iteration. SCRUM is empirical, the spiral model is not.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5622168,
      "meta": {},
      "text": "Scrum core essence:\nScrum is a software development technique that is focussed on adapting to changes during developement and has a good risk management. The main workflow of scrum is seperated into sprints, can take 2 -4 weeks and have daily scrum meetings during which progress and problems are communicated between the team members. Each sprint takes some tasks from the product backlog and delivers a potentially shippable product increment at the end.\nAdvantages:\n- Can deal with major changes at any stage.\n  The spiral model can't deal with major change that can't be resolved during the current itteration.\n- Client regulary recieves a potentially shippable product.\n  The client only recieves a working product in the very end.\nDisadvantages:\n- No linear tracking of progress possible\n  In the spiral model it is possible to acuratly estimate the current progress and completion of the project based \n  on the number of finished itterations and progress in the current itteration.\n- Time could be wasted on early finishing of a sprint\n  If a task is finished in the spiral model, the next one is started immediatly.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622768,
      "meta": {},
      "text": "The core essence of Scrum involves having short development cycles called Sprints where at the end of each sprint we have a slightly larger working product. We select a number of tasks from our product backlog for our sprint backlog, and this can change after every sprint, allowing us to be more flexible in our incremental approach, and revisit past tasks if the client requests. It also involves daily quick meetings so that we can communicate and raise potential issues before we reach them.\n\nAdvantages:\n1 Allows us to revisit past tasks if client changes specification it gives us feedback; for example they decide that instead of using an external data storage, they would prefer to have an internal database.\n2 We have fewer issues with integration later on, as each sprint must result in a working product, so must be integrated during the sprint\n\nDisadvantages:\n3 It can be difficult to scale, as typically relies on small dynamic teams - if the company gets bigger and starts having more Dev teams, it can become difficult to manage this efficiently.\n4- It requires fairly skilled developers, who are able to work efficiently in short period time frames.\n\nCompared to the spiral model, with point 1. Scrum is much more flexible because the spiral model moves past the tasks met, whereas scrum allows items to be added to product bacog at any time. With point 2 it is debatable whether scrum is better, because both use an incremental approach, however scrum may be better because it requires a functional increment, which is not necessary for spiral.\n3. Is handled better by spiral, because you can scale it much easier as there is no need for small teams.\n4. as there is no hard time limits or extreme urgency generally, we can argue that the spiral model is better for junior/less skilled developers ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644260,
      "meta": {},
      "text": "Scrum is an agile project management methodology that can be applied flexibly to various projects. In a scrum there is no longer a project management that distributes the tasks to the team members and there are no classic project phases, but so-called \"sprints\", which can last between one and four weeks. The goal is to have a potentially deliverable product at the end of each sprint, which continues to mature with the number of sprints until it is completed.\n\nAdvantages:\n\n1.\tScrum is very  adaptable and flexible. It is suitable for a variety of environments and situations that initially have no clearly identifiable requirements and require a flexible approach. For example, the needs of the customer are oftentimes changing during the development phase because of bottlenecks they face. In the spiral model you are always moving forward towards the end goal, so it‚Äôs hard to make changes with steps that are already done.\n\n2.\tScrum reduces the risk of customer dissatisfaction because of the improved communication and cooperation with the product owner. For example, having everyone on the team working to the best of their abilities and constantly adjusting to internal and external feedback can result in products and solutions that are better for the end user. In the spiral model there is no frequent communication with the product owner.\n\nDisadvantages:\n\n1.\tImplementing the Scum method in a team requires training. Before committing to Scrum, everyone within the team needs to understand the benefits and particularities of this approach for the project to be a successful one. Developers who worked with one method their whole life probably need training and convincing to adjust to the new method, for example. This also holds for the spiral model. \n\n2.\tIf any team member leaves in the middle of a project, it can have a huge negative effect on the project. Everyone is giving roles at the beginning of the project and if someone quits it is hard for them to be replaced and to be updated on the current state of the scum. This person also needs to be experienced in scrum. In the spiral model it is not that bad because there are no role assigned ton team members and everyone is going through the same tasks.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621805,
      "meta": {},
      "text": "SCRUM is a software development methodology that allows you to effectively develop programs in an environment of constant change. The development time is divided into so-called \"Sprints\", which last approximately 2-4 weeks and at the end of each of which there should be an already working shippable product that can be shown to the client. Thanks to this approach, developers immediately receive feedback from the client, new instructions, and can develop a project adapting to new client requests.\n\nAs it was written earlier, one of the main advantages of Scrum is development in conditions of constant change. When using other technologies, such as waterfall or V model, it is no longer possible to make changes to the project logic after the \"Implementation\" phase, however, using Scrum is not a problem. In the spiral model, it is also possible to make changes at each iteration.\n\nAlso, another important advantage of Scrum is regular meetings, thanks to which all developers get a general idea of ‚Äã‚Äãthe state of the project, what other developers are doing and can effectively adapt to each other. In the spiral model, there are no rules about the frequency of meetings and types of meetings.\n\nDisadvantages. Since there is no clear step-by-step plan in Scrum, the success of using this methodology largely depends on the Scrum Master or Team Lead, who must correctly organize the work. In the spiral model, there is a clearer division of work into stages, so the dependence of success on the organization of work is not so great.\n\nAlso in Scrum there is constant communication with the client, which can slow down the development process if the client is not always able to give quick feedback. In the spiral model, there is also communication with the client, but less than in Scrum.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622779,
      "meta": {},
      "text": "Die Kernidee von Scrum ist, dass viel Kommunikation zwischen den Teammitgliedern durch regelm√§√üige meetings stattfindet, wodurch man sich schnell an Ver√§nderungen anpassen kann. Zudem soll man am Ende jedes Sprints ein pottenziell lieferbares Produkt haben, dass man dem Product owner zeigen kann.\n\nVorteile:\n- man kann leichter auf unerwartete Ver√§nderungen reagieren. Wenn z.b, einer im team merkt, dass die urspr√ºngliche idee so nicht umsetzbar ist, kann er den anderen fr√ºhzeitig mitteilen, dass etwas ver√§ndert werden muss.\n- man hat immer realtiv schnell ein potentielles lieferbares Produkt, wodurch man leichter mit dem Kunden besprechen kann was noch fehlt und ob es seinen erwartungen spricht. wenn man in bumbers car z.b. ein multiplayer feature implementiert, dieses aber dem product owner dann doch nicht gef√§llt, kann er sagen, dass es doch ein reines singleplayer spiel sein soll.\n\nNachteile:\n- Scrum meeting nimmt Zeit in anspruch und nicht jeder kommt ausf√ºhrlich zu wort. Wenn ein Scrum meeting etwa 15 Minuten dauert und es gibt 5 teammitglieder kommt jeder nur etwa 2-3 minten zu wort. oft ist das nicht genug um √ºber alles wichtige zu reden. Zudem sind das insgesamt 15 minuten, in denen man nicht programmiert.\n- Scrum funktioniert nicht f√ºr gr√∂√üere Teams. In einem Unternehmen in dem etwa 400 Leute arbeiten ist es unm√∂glich, dass alle in einem Scrum meeting teilnehmen. dadurch ist nicht gew√§hrleistet, dass jeder von jedem ungef√§hr wei√ü an was er gerade arbeitet.\n\nVergleich mit spiral model:\n- im spiral model kann man innerhalb einer Iteration nicht direkt auf eine Ver√§nderung reagieren. man muss zuerst auf die n√§chste Iteration warten\n- beim spiral model wird nicht so stark darauf geachtete, dass man m√∂glichst schnell ein lieferbares Produkt hat.\n- da man beim spiral model keine t√§glicyourself to a maximum of 350hen team meetings hat, haben die Programmierer mehr Zeit zum programmieren. Dies ist ein Vorteil des spiral models.\n- das spiral model funktioniert besser f√ºr gr√∂√üere teams als scrum, da es festere aufgaben gibt die verteilt werden. Und nicht jeder muss von jedem Wissen was er gerade macht.\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5623161,
      "meta": {},
      "text": "Core of Scrum: In comparison to linear processes, where work is performed sequentially which holds risk in case of changes, scrum is an agile process with backlogs, that can handle requirement changes because tasks are carried parallel and progress is evaluated with meetings.\n\n+Changes are frequent in software engineering. Scrum is by definition a process that deals with changes. We can deal with changes by updating the requirements in scrum sprint backlogs.\nIn Bumpers game, initial requirement for collusions was for cars to crash horizontally. Later in the project this changed, and the game also has to support vertical collisions. In next sprint, we can focus on expanding the collision evaluation as newly specified.\nSpiral: Similar to Scrum, because spiral is also an iterative model, we can incorporate requirement changes accurately.  \n\n+ In scrum, risk management is improved because the team communicates often in daily scrum meetings and gives feedback about progress of project. If a member is having problems, this is discussed and handled earlier on before it effects other parts of the project. \nIn Bumpers game, member who was supposed to implement the car movements failed, but in the sprint meeting this was discovered and discussed. If it wasn‚Äôt scrum and wasn‚Äôt discussed earlier, the part where the crash needs to be evaluated also wouldn‚Äôt work correctly because it depends on the car movement. \nSpiral: Spiral model is highly focused on risk analysis starting with the highest risk. If a risk is resolved, then the team moves to the next iteration. \n\n-Scrum is not suitable for big teams. Because the model requires the members to work closely all the time, have meetings and give each other feedback, this approach might be hard to realize in big projects with more than 10 members.\nExample: We have a big project, and 10 teams working on this project. When we have this many teams and Product Owners of these teams, they all can become rather independent and lose focus on the main goal, making it hard to cooperate. \nSpiral: Spiral model works rather better for bigger and complex projects with high risks, as it is more expensive. It requires less meeting than Scrum so more team members could work with spiral. \n\n-Scrum lacks a definite end-date. During the process there are many smaller deadlines, but this does not involve or determine when the project will reach its final. \nExample: The team completes each sprint according to the deadline,  but in some sprints there are new requirements so a certain end date for the project end is hard to estimate. \nSpiral: Similar to scrum, the number of phases is also unknown at the start, so the end of the project is not known early.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644903,
      "meta": {},
      "text": "the core essence of Scrum is that, in simple words, there is a customer who has a problem that is worth solving by developing a product. To help that customer, we team up a group of people with different backgrounds who together have or can acquire the skills needed to build that product. But the process is not so easy: it is a process that deals with interruptions and has different activities going on in parallel.\nAn advantage is that is flexible and adaptable: it is useful for a variety of tasks and situations that at the beginning don't have any kind of defined requirements. Another advantage is that ensures continuous feedback: the methodology needs daily check-ins for progress reports and the team gives feedback at an individual level to the customer and internally, the reason is that many follow-ups of a project at every level ensure the project becomes better in the long run.\na disadvantage is that sometimes the project deadline is not met. the method only ensures that the team members meet their expectations with personal deadlines to create a certain amount of work daily. On the other side, it doesn‚Äôt give so much importance to the project deadline itself, which can delay the work.\nThen, it is more suitable for small-medium teams which are below 10 people, that is because more members delay the decision-making process and eventually slow the work.\nThe spiral model is also pretty flexible as the changes made to the requirements after development has started can be easily adopted and incorporated, even if the number of iterations and step can be harsh. Also, it ensures feedback with the customer as well: the customer will be able to see and evaluate their product in every phase and say about dissatisfaction or changes before the product is built entirely.\nAs the number of required phases is often unknown, making time management is almost impossible. Therefore, there is always a risk for falling behind schedule and delay the delivery. and Finally, opposite to SCRUM is suitable for big projects as it would be too expensive for a small one and time consuming.\n\n",
      "score": 39.6,
      "language": "ENGLISH"
    },
    {
      "id": 5645047,
      "meta": {},
      "text": "Scrum is a structured system designed to help during agile software development. Some would define scrum and say that it might require transparency, teamwork, but scrum is much more simple than that. In the end scrum is all about keeping people updated while consistently having code increment.\nSome of the advantages in scrum include:\n-The task being divided into manageable sprints\n-Scrum offers a system that opens up a lot of discussion among developers\nOther disadvantages would be that scrum is perhaps inefficient with large teams, or it can cause problems in large projects. In large projects there is a scaling issue. We have a problem that can be hard to divide, and sprints aren't useful in the current situation because the developers might take more time on specific components, more than they usually would. This can cause confusion and anxiety for instance in daily meetings, but more so communication is wasted at times. Another issue with big projects would be managing the workload, because a big project is more likely to need extensive testing which can because of the scrum system mean an increased deadline.\nLarge teams have a harder time integrating this because a daily meeting with a lot of members is taxing and the agile part and communication part is lost, simply because during the meeting most people have heard too much different information, currently unrelated to their work. \nOn the other hand, in smaller teams, dividing into sprints and working on the task is very useful.  The workload is organized and most projects that aren't too big will be solvable before the deadline.\nAnd communication is something that I have mentioned a lot, but what are the uses of communication. It is true that developers can support each other better when they all know what the other is doing, so from an efficiency standpoint it is definitely worth while. Additionally, most developers and especially young ones have an opportunity to get to hear a few thought processes and ways of working on certain problems in other meetings. ",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5645048,
      "meta": {},
      "text": "The core essence of scrum is that it is an agile technique that is dealing with changes. The process start with its product backlog where all requirements are specified for the software and prioritized by the product owner. Some requirements come in the sprint backlog, which is the amount of task that should be done in one sprint. The sprint takes 2-4 weeks and every day there is a daily scrum meeting to evaluate the process and addressing possible problems. After all sprints are done a potentially shippable product is developed. There a 3 team roles: Product owner, Scrum Master and the Scrum Team Members, which have different tasks. Du to the split of the roles and the enhancement of direct communication, the communication is improved. \n\nThe first advantage is that it manages software with changing requirements.\nOne example for it is that due to daily scrum meetings problems could be adressed and this could be implemented into the next sprint directly. Hence, new requirements could be added in the next product backlog.\nCompared to the spiral model this is better, since in the spiral model changes could occur between the activities but not within the activities. Also the spiral model is more a linear process. Therefore agile methods are better.\nThe second advantage is that it improves risk management because the communication, cooperation and the delivery of the product increments is improved. For example, in SCRUM the people have different roles. Each role has its own task and are therefore specialised in this subject. Due to direct communication between the Scrum members, a high level of communication could be reached. \nCompared to the spiral model this is better since in the Spiral Model, there is not split between the roles, and therefore it is not so structured regarding the communication. \n\nThe first disadvantage is that the high level of communication is very time intensive and therefore could be also an disadvantage. This means that there is a high coordination effort between the different roles of they communicating. \nCompared to the spiral model this method is more complexer and more time intensiv. Since the spiral model is more simpler.\nThe second disadvantage is that you have o overall view of the complete project route.\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5619646,
      "meta": {},
      "text": "Scrum is a kind of Agile Development whose core lies in iteration. In a complete Scrum process, there will be three roles: product owner, scrum master and developer. Everyone performs their own duties, starting from a Product Backlog, refining it into each iteration cycle, and then using the Daily Scrum meeting to update everyone's development progress. \n\nAdvantage 1: Requirements are flexible.\nRequirements of SCRUM are based on meetings between product owner and developer. The product owner is only responsible for management of requirements. Easy to change directions as the requirement changes. But requirements of Spiral model are compatible with all the key system, stake holders, and expectations. The nature of requirement will not change very much during development and evolution.\nFor example, it is not easy to define requirements and solutions accurately before the project starts.The scrum team can amend change in any part of the project without affecting the project output. So best applies for a relatively uncertain environment.\n\nAdvantage 2: SCRUM is most suitable for small and medium-scale projects. But Spiral model doesn‚Äôt works well for smaller projects. It is good for large and complex projects. \nFor example, for a small and low-risk project, the Scrum can produce quicker and cheaper result by minimizing critical documentation, processes and management.\n\nDisadvantage 1: Compared with spiral model it requires a small Team Environment. Using Scrum in large teams is a challenge.\nFor example, if a team has more than 10 members, then more members can delay the decision-making process, which slows down the work. So it is appropriate for small teams.\n\nDisadvantage 2: Compared to spiral model, Scrum relies more on teamwork and requires active input from each member.\nFor example, each member needs to provide feedback to the team. If a team member leaves in the middle of a project or members are not very engaged or cooperative, it can have a huge negative impact on the project. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619974,
      "meta": {},
      "text": "SCRUM is a highly iterative and agile model. It is bases Sprints which are 2 week time frames in which new features from the product backlog (a collection of required functionality of the program) are implemented. After each sprint the product will be potentially shippable.\n\nOne advantage of SCRUM is that we always have a shippable product at hand. Feedback can be given immediately. This makes it easy to detect potential problems early in development and reconsider decisions that were made.\nThis is not the case with the Spiral Model where the product is shippable at the end of the project lifecycle.\n\nAnother advantage of SCRUM is that the product backlog can always be changed between sprints. That makes the project more flexible if difficulties arise or requirements change.\nThis is also not the case with the Spiral Model where there is a predefined plan which mostly cant be changed.\n\nA disadvantage of SCRUM is that it is very difficult to scale which means that large projects are difficult to handle with this approach. The reason for this is that it requires a lot of internal coordination which can get difficult when the team or project gets larger.\nThis is not necessarily the case with the Spiral Model, it has a rather clear structure and it doesn't need that much communication to get work done.\n\nAnother disadvantage is if one team member hangs behind. Because work is done in parallel, the slowest team member will be a bottleneck for production. Every team member needs to perform accordingly to not slow down the process.\nThis can also be a problem in the Spiral Model but it is much more severe in SCRUM.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621123,
      "meta": {},
      "text": "Scrum utilizes a high frequency of meetings to establish good team communication and fast adaptation of changes. The goal is not to have a finished product at the end of the project but produce working product increments after each Sprint (the time between two meetings) with each Sprint having its own set of requirements.\n\nAdvantages:\n> Quick response time to changes. Scrum is an iterative process and does not follow a linear flow of events. New requirements can easily be integrated into the project planning. For example, if the customer requires particular changes to certain parts of the software, e.g., appearance, then these changes can be added to the product backlog. In the next sprint planning meeting, the open product backlog items will be discussed and considered in the next sprint. In the Spiral model changes are connected to risks. Chosing the lowest risk option might not be the option that the customer wants. \n\n> The way testing is integrated into scrum. In projects with linear process flows testing is usually one of the last activities. Scrum tests the product increments continously during each sprint. Therefore, issues and bugs can be recognized and fixed even at the early stages of the project. Testing a finished project/ product might result in issues that are not easily fixable thus may cause time plan changes and additional costs. In the spiral model testing is done on new implemented features after each phase. This is similar to scrum but scrum tests product increments.\n\nDisadvantages:\n> Being able to adopt changes and requirements at any point of the project can easily lead to an growing amount of backlog items and a loss of control of the project scope. This might cause the original goal to get lost in reconsiderations and thus result in a never ending project. For example, if requirements elicitation is done poorly and the client constantly requests changes. This is also an issue that can occur in the spiral model.\n\n> Since teamwork is essential in scrum, it is important to have a well connected team. If team members were to resent each other, this could lead to major disagreements that could disrupt the project flow. As a result, scrum is highly dependent on a working and unified team. However this is not always easily to control. In the spiral model the team takes a less central role. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621424,
      "meta": {},
      "text": "Scrum is a framework that helps teams work together, where there are different roles, like the Scrum Master, who identifies deviations from the plan and resolves them, the development team, who realize the product increment and the product owner, who defines the product and is responsible for the result. Scrum usually starts with a project kickoff meeting, where the product backlog is defined. The working period is called a Sprint which is 30 days long and before a Sprint there is a sprint planning meeting, where the sprint backlog is defined. There are also short daily scrum meetings to discuss the progress.\n\nAdvantages of Scrum:\n1) Large projects are divided into more easily manageable sprints. Scrum seperates different components of a project and resolves them seperately in sprints, which makes it clearer and more structured than all at once. For example: A team needs to model 4 different models in 2 months. Using Scrum they can seperate that into 2 Sprints, where they model 2 models each.\nThe spiral model has a similar kind of seperation, with a difference being that in the spiral model the 9 iterations are predetermined. \n2) Short sprints enable changes based on feedback a lot more easily. For example: take our team from before. After the first meeting, the client decides, he wants to change a functionality in one of the models not modeled yet. When planning the next sprint, the team can easily change this funtionality.\nThe spiral model also supports change at later phases which can be incorporated accurately.\n\nDisadvantages of Scrum:\n1) Daily meetings sometimes frustrate team members. If a team member spent all day trying to fix a bug or other issues, which he/she wasn't able to resolve, he/she doesn't have anything productive to add to the meeting. The time spent in the meeting could then have been used trying to fix the bug instead of sitting in the meeting for an hour listening to other team members talk about their progress, which isn't interesting to our developer.\nThe spiral model obviously doesn't have this issue as there are no frequently planned meetings in advance.\n2) Adopting the Scrum framework in large teams is challenging. When the team is very large (~100 people) it can be quite difficult to adopt the Scrum framework (daily meetings, new sprint planning every 30 days etc.). For example, a rather large team is highly unlikely to get all people in the daily sprint meetings, as not everyone is in the office and some people may be sick. This could hinder the progress of the project.\nThis issue isn't present in the spiral model, as that framework is specifically designed for larger projects.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621997,
      "meta": {},
      "text": "> THE CORE ESSENCE\nScrum is a very common framework for project management, it is often used in IT projects. Its main advantages are efficiency in team management, control over the entire process, and the possibility of constant monitoring of the progress. The team consists of the Scrum Master (who runs and supervises the team and maintains the appropriate motivation of all project members), the Product Owner (a person representing the client-side), and the Development team (a team responsible for product delivery).\n\n> ADVANTAGES\n- Scrum provides task prioritization. First, you develop the ticks of the main \"to do\", and then you also implement a \"backlog task\" list. This last one includes tasks that can be described as \"nice to have\". In this way, you can be sure that the team is currently working on the most important functionalities. But, assigning priorities also happens in the spiral model in step 2 of the 4 major activities. For example, in a development of a smartphone app, the most important functionalities are a basic structure and UI. After that, little things like design, APIs, and other stuff can be added. \n- Scrum is also an effective methodology from the client's perspective. Thanks to daily meetings, the client can be up to date with all current work. His feedback is also taken into account. The client in the spiral model is only involved in the acceptance test. If the client of the smartphone app, for example, decides to get implemented a basic functionality, this can be developed right at the beginning if the task is highly prioritized. \n\n> DISADVANTAGES\n- Daily meetings can be frustrating for team members who present the results of their work because some team members may be working on a task for multiple days or just didn't make any progress. For example, in a startup, it would be very frustrating for team members to not proceed with their tasks because of the \"micromanagement\" with the daily standup. This can even further increase demotivation. In the spiral model, there is not really a time frame, only the iterative model with 4 major activities and the general iterations.\n- The Scrum Master role is critical. If he does not perform his duties duly, it may lead to delays in the project. For example, if the scrum master is ill for a long time, or doesn't see the project as his first duty, this would lead to a significant decrease in the team's performance for the project. In the spiral model, there doesn't really exist a specific master for the project. This may just be the director or manager in general. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622675,
      "meta": {},
      "text": "1-The product owner derives a product backlog, a prioritized dynamic list of all the work that might be needed for the product. \n2-. During sprint planning, based on the sprint goals, the sprint backlog is created.\n3- Once a day, the scrum team needs 15 minutes for the scrum to inspect the progress of the sprint goals.\n4- At the end of each sprint, the scrum team invites the product owner for the sprint review and collectively inspects the results.\n5-After sprint review, the scrum team runs a sprint retrospective, where they evaluate how they worked and build a plan on how to improve.\n\n1- One of the core advantages of SCRUM is that it allows change during the development process by allowing the product owner to change the product backlog or add new requirements after each sprint in the sprint review meeting. As compared to the spiral model, it is also an iterative model, which also allows making changes during the development. \n2- Large projects are divided into easily manageable sprints, which helps the development team complete project deliverables quickly and efficiently. The spiral model is also divided into 4 major activities, which help the development team work efficiently and evaluate the results continuously.\n\n1-If a team member of the scrum team leaves in the middle of the project, it can have a huge impact on the project.\n2-Unrealized sprint backlog items are candidates for the next sprint, however in the spiral model, if the risk could not be resolved within that iteration, the project will be terminated.\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644724,
      "meta": {},
      "text": "SCRUM is a way of working which helps teams develop a product under frequent changes, which is currently almost a default for software products, especially up-and-coming software startups. SCRUM is all about flexibility and adaptation. SCRUM achieves flexibility and adaptation through cross-functional small teams and small units of tasks that can be planned ahead in a short amount of time and all tasks are ready to be redefined.\n\n\nAdvantages of Scrum are:\n1) Performs well on fast-moving projects. Fast-moving projects like startups thrive when customer requests are handled fast. SCRUM enables customer feedback added to project backlog, prioritized, and developed in short cycles called sprints. For example, in a CRM product, a new customer can expect a type of report and we can just add it to the next sprint.\n2) Daily scrum meetings are one the essentials of SCRUM. This meeting makes visible the individual effort of each team member and achieves inter-team alignment. This ensures efficient allocation of resources. For example, without daily meetings some members can create similar methods or codes that result in serious merge conflicts.\n\nDisadvantages of Scrum are:\n1) Adopting the Scrum framework is challenging, the adoption process becomes harder when team size increases. Since SCRUM roles create additional responsibilities and require small-sized teams. This results in structural changes in the company. For example, resistance to change may occur among some employees.\n2) SCRUM often leads to scope creep, due to changing requirements and requests. It makes it harder to set long-term plans and may result in losing the focus of the project as a whole. For example, different requirements along the project result an inconsistent user interface.\n\n\nThe spiral model is an Iterative model while SCRUM is an agile, adaptive model.  Iterative methods help the development processes by redoing or reworking phases. Adaptive methods help the development process by improving the flexibility to the changing customer needs. At an up-to-coming software, startup changes would be frequent hence SCRUM is more beneficial.\n\n\n",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 5644909,
      "meta": {},
      "text": "Scrum is a lightweight, iterative, and incremental framework for developing, delivering, and maintaining products. One of the key principles of Scrum is the recognition that there will be unforeseen challenges for which forecasting or planning methods are not suitable. These changes come from a variety of sources, but according to Scrum, understanding why is irrelevant and should be simply embraced, accepted, and analyzed for benefit.\n\n- Scrum helps teams complete project deliverables quickly and efficiently\n- Suitable for fast-paced development projects, as it is focused on get a working product as fast as possible\n- Big projects are divided into manageable and overseeable sprints\n- Coding and testing of development during Sprint Review\n- Team members gain good understanding of the project through scrum meetings\n- Scrum is agile and flexible, as it accepts feedback from customers and stakeholders\n\n- Projects are likely to fail if individuals are not engaged or cooperative enough\n- Scrum often leads to uncontrolled growth in a project‚Äôs scope because there is no definite end \n- Introducing a Scrum framework in a large team is challenging\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5619728,
      "meta": {},
      "text": "SCRUM is an emprical process control of software lifecycle mode which deals with change. The main goal is to realise potentially shippable product increment starting from product backlog to sprint backlog which will be dealt with in each sprint with the help of a development team that is leadt from a scrum master, who will be reponsible of realising the product, and the product owner who defines the product.\n\nAdvantages:\n*it ,as mentionned, deals with change. In each sprint changes can occur and the team can deal with the change and realise the potentially shippable product increment. (building the bridge in the tutor group with changes from the product owner)\n*Teamwork within the development team which makes the work easier and more efficient through sharing the sprint backlog and the daily scrum to share updates. (EIST project: sharing sprint backlog(FR or NFR))\n\nDisadvantages:\n*Disputes or disagreements can occur within the developing team: each member wants his own idea to be dominant.\n* Heterogeneous developing team members can lead to product failure: the member of teams have different background knowledge.\n\n\n\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5619990,
      "meta": {},
      "text": "Scrum is an agile project management framework that has three actors(Product Owner, Scrum Master, Developers), who find adaptive solutions to complex problems. It has a non-algorithmic approach and encourages teams to learn through experience . This is achieved through sprints(2-4weeks) that produce a potentially shippable product increment and the daily (scrum) meetings ensure that the project is progressing towards the right path.\n\nScrum achieves customer satisfaction, because after each sprint there is a sprint review and the product owner gets the chance to state new requirements. Similarly at the end of each iteration in the spiral model progress is reviewed. For example when developing a video game, after the team has met all requirements the product owner could ask for an extra character(new requirement).  Through an extra sprint/iteration it can easily be implemented, without disrupting the flow.\nScrum can also be good for large projects since they can be broken down to small sprints, which are easier to manage. Spiral model is also suitable for large projects, since it also has iterations and additionally it deals with risk, which can be very important in large projects. An example would be the development of a website to book hotel rooms.\n\nA disadvantage of Scrum is scope creep, that is when a project grows beyond the original scope/plan it had. This will lead to an indefinite end-date and cost will rise with each sprint. It is the same for the spiral model. Each iteration costs, so adding more requirements will drive up the cost and time spent on development. This is relatable to startups At some point they have to settle with a prototype and release it or else the release date will extend to 3, 6, 10months, etc.\nIn order for Scrum to work effectively the team members have to have a pretty high level of expertise with the  framework. This is because team members have to have experience to give validated feedback and to improve upon it. This also applies for the spiral model, since it requires highly specific expertise. As an example we can take any project, because no matter what project, getting through the steps of these frameworks requires expertise.\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621306,
      "meta": {},
      "text": "core essence:\nSCRUM is an iterative, agile product and software development technique that deals with changing requirements. The development process in SCRUM is divided into different time-boxes (Sprint), which take a subset (Sprint backlog) of tasks from the predefined product requirements (product backlog), finish them, resulting in a working product increment at the end of each Sprint. There are three different team roles, Product owner, SCRUM master and development team.\n\nAdvantages:\nSCRUM has a vertical integration development approach, meaning that instead of a sequential execution of development steps, first building the database, then middle ware, then user interface, ... etc. those activities are done in parallel, resulting in a working product increment at the end of each Sprint. The customer is able to provide direct feedback, change the requirements and potential errors or communication gaps can be corrected more easily in early stages of the development process.\nAnother advantage is, that large projects are divided into easily manageable sprints. The whole product backlog is prioritized and refactored at the beginning of each sprint, making sure that the most important tasks are done quickest and no task is not finished at the end of the development process. \n\nDisadvantages:\nA disadvantage of SCRUM is, that is requires extensive training. There has to be a SCRUM master, who is very well trained in the methods of SCRUM in order for the process to work properly.\nAnother disadvantage is that the process is not directly related to the project deadline due to the product backlog being able to evolve/change over time. It is not possible to spread the tasks evenly in the beginning over a given time period to ensure the deadline is met since it contradicts the agile process of SCRUM, defining the sprint backlogs from sprint to sprint, not in the beginning\n\nComparison:\nThe spiral model also has an iterative development approach, but in contrast to SCRUM it can have just one iteration. If it has a vertical integration development approach is not given, but can be decided by the project manager.\nIt also divides a big problem into subproblems solved in each loop. The total number of loops is dynamically adjusted during the development process by the project manager. \nThe spiral model requires less extensive training, since the process is not as strict as the SCRUM process and you don't have a certain master like in SCRUM, who has to have a special knowledge. \nSince it is also dynamic, the spiral model makes it also hard to set a deadline.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621609,
      "meta": {},
      "text": "The essence of scrum is to offer a way of organizing software development that is able to handle change and ambiguity. In scrum, development is clustered in sprints, fixed time intervals during which previously defined tasks are to be fulfilled. The idea is that breaking up work into these sprints allows the team to react to changes more quickly, as well as improve their way of working within the team.\n\nOne of the advantages of scrum is that after every spring, the team delivers a potentially shippable product increment, meaning every sprint creates value. An example would be a game project, where, after every sprint, a new level would be released to its users.\nAnother advantage is the high involvement of engineers in sprint planning. This creates more investment from their side, as they are not simply told what to do, when, and how to do it. An example would be when the product owner has an idea for a feature, however, one of the engineers comes up with another idea that is much better and is then implemented.\nOne disadvantage of scrum is the high frequency of meetings, which, can feel like unproductive time wasted, especially for engineers who are new to scrum. It can feel like they are doing way too much stuff besides coding. One example would be doing 1-week sprints with big sprint retrospective meetings after every sprint. \nAnother disadvantage of scrum is that it can be hard to implement in large teams. The process is built for smaller ones, so bigger organizations might find it hard to implement. An example would be an established company that currently does not use cross-functional teams trying to switch to scrum, however, they are used to having their work clustered in large departments.\n\nWhile both scrum and spiral are iterative approaches, one of the differences between them is that spiral is much more complex and expensive, thus not suited for smaller teams. Scrum is easier to implement. Flexibility and risk handling are the main characteristics of spiral, where every phase can be seen as a small waterfall iteration. Scrum is all about reacting to change. \n\n\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5638865,
      "meta": {},
      "text": "Scrum is a methode to organize sofware development projects wich is build up circular. Thge base for Scrumi is the product backlog wich contains the core tasks for the projekt. Inthe sprint planing, a sprintbacklog will be determined, wich includes the tasks for the upcomming sprint. In this sprint wich is a fix timeperiod of worktime, so called daily scrums will be practiced daily in every Scrum team, the target of the sprint is a potentially shippable product increment. These Sprints repeate with new tasks or old tasks wich are not finished as log as the product isnt finished.\nA disadvantage of this methode is the missing overview over the whole project, wich can lead f.ex. to problems with the compatiblenes of the Project when there wasnt a clean communication between different scrum teams wich isnt so likly in the spiral model. Another disadvantage of Scrum is the load of communication wich needs a lot of time, f.ex. if the scrum team have all other ideas, thene a scrum meating can go longer to find the best way. But in the Spiral model you also have to calculate a lot of timr for communication.\nOn the other hands side, a big advantage espacilly in our case is the simplicity of the concept of Scrum, f.ex. whene Scrum should be implemented new in a company its quite easy to understand also if its the first time working with Scrum. Other the the spiral model, wich is very complex and not easy to understand. Another advantage of Scrum is, that you have at a very early time in the project some explicit results to show to the client. For example some simple functionalitys for a game you develope also if the main part isnt implemented. In the siral model it taks a lot more time to show the client a real result. This could also increase the satisfaction of our costumers.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644399,
      "meta": {},
      "text": "(1)\nExplanation: Scrum is a product development technique: Instead of sequential work, the required work is performed in parallel. SCRUM is capable of controlling rapid changes in software / product development through improved collaboration / communication between stakeholders and continuous results through product increments. \n___\n(Pro 2.1) Increased flexibility through regular project review and changeable backlog. Common example would be that a certain feature is reprioritized, e.g., the implementation of a different element arrangement in a webshop checkout, because payment options may need the team's attention first. \n\n(Pro 2.2) Full transparency over working packages: Allows for easy tracking of project progress. Common example would be that a web agency customer can see the backlog and the current status of the shipped increments. It allows to identify that the budget might be insufficient, and thus, certain de-prioritized features might be cut completely, but a shippable product is still received in the end. \n\n(Con 2.3) Lost time for sprint capacity that is not fully used, thus, inefficient. This can happen if the team overestimates certain features and might finish the implementation of, e.g., the different arrangement in the check-out (#2.1) earlier than expected.   \n\n(Con 2.4) Difficult coordination of multiple teams. In large corporations relevant departments might be already established in different time zones making the needed communication difficult. \n\n___\n(Pro 3.1) The spiral would be not as flexible: Once the requirements and product design have been iteratively fixed, the team starts coding. If this change happens while the team is coding or later, it is not really possible  to go back. \n\n(Pro 3.2) Although transparency is certainly possible to a certain extend, a heavy chunk of the budget might already be used before the coding phase starts making it impossible to finish within budget scope.\n\n\n(Con 3.3) The spiral model is different in a way that there is no idle time as in itself it uses the linear approach for prototype development.\n\n(Con 3.4) The spiral model can enable clear handover points for each sub-section of the development phase. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644577,
      "meta": {},
      "text": "The core essence of SCRUM is based on the scrum method from rugby (all players push together and parallel towards the ball). SCRUM is an agile software development method that allows speedy reactions to changes. SCRUM has direct communication with the product owner and all developers (all participants). The development process is divided into sprints, time boxes (1 month and 24 hrs) full of activities, tasks, and prioritization of them. \nThe most common advantage of the SCRUM is low costs. Everything can be organized with lower expenses on the documentation and not so much control is needed. For example, a group project in EIST. The students are developing small software without many costs and the scrum master doesn't have to overview every step of the students (developers). It's easier than with Spiral Model. The spiral model requires more costs, because of every risk monitoring. Not efficient for students.\nAlso, I want to mention the good quality of work. All team members' ideas can be heard during scrum meetings and implemented. Also, everyone takes full responsibility for their own work and is doing what he can do the best. Also, during meetings, it could be realized. \nAs a disadvantage of the scrum, I can say work in very small teams. It brings directly another problem as inexperienced personnel. For example, students during group project are very good at coding, but not so experienced in modeling and planning. It requires people with different \"strong sides\". And in the Spiral model, it is possible to have more than 10 people in the project.\nThe second disadvantage is scaleability. For people working with the scrum, the method is pretty hard to scale the deadline and the amount of work needed to be done. The students during eist group project can badly scale how much work they should do during every sprint. But in the Spiral model, there is a lot of documentation and it is possible to watch the live progression. On another side, in scrum people are working one step at a time and do have to spend not many costs.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644735,
      "meta": {},
      "text": "The core essence of Scrum is to allow a team to work faster and more efficiently on a complex problem where requirements can change rapidly as it involves a lot of communication and cooperation.\n\nAdvantages: \n\t-  Reaction to changing requirements is fast because tasks can be adapted in the daily scrum meetings. \n\t  (e.g.: The customer wants an additional feature, which can then be implemented in a short amount of time\n\t  as the changed requirement is instantly communicated in the daily scrum meeting)\n\t  This is a clear advantage in comparison to the spiral model because there aren't daily meetings in the spiral \t \n \t  model, in which you can react directly to new tasks.\n\n\t- Improved Customer satisfaction since the customer is informed of the progress of a project and can \n\t  influence the prioritization of tasks. (e.g.: The customer knows the current progress of the project as he was\n\t  participating in the sprint retrospective meeting and isn't satisfied with the current state of the project. \t\n\t  Therefore he tells the team to prioritize tasks that he considers more important. Then those tasks get\n\t prioritized, which satisfies the customer))\n\t  In the Spiral Model the customer is not closely involved in the development process which can often lead to\n\t  miscommunication.\n\nDisadvantages: \n\t- The efficiency decreases the larger the teams are as it becomes harder and more time-consuming to \n\t  communicate between a large group of people and keep track of each person's user story.\n\t  (e.g.:  In a Scrum meeting of 100 people it is going to be nearly impossible to keep track of which person \n\t  is doing which task. in a reasonable amount of time) (Can be reduced by using Scrum of Scrums) \n\t   This disadvantage is also present in the Spiral model, but it is smaller because there is less communication.\n\n\t- The ability to react to change quickly can also lead to more bugs. since often changed code is more \n\t  error-prone. (e.g.: The customer changes the requirements on a daily basis which confuses developers)\n\t  The Spiral Model doesn't have this disadvantage as the requirements can't be changed that often.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644902,
      "meta": {},
      "text": "In contrast to the spiral model which can be classified as a iterative model, scrum is an agile model, which has its main goal of being adaptable to the changes happening during a project. During software development, things rarely go as planned at the beginning and changes are part of the process (changes in goals, personnel etc.)\n\nScrum has daily sprint meetings where different members/teams can give updates regarding their work inside the bi-weekly sprint cycles taking place. Communication between teams is key so that the parallel processing of work can be handled.\n\nScrum and the agile model focus on customer delivery, so it has a lot more customer interaction than the spiral model, due to frequent sprint meetings, the scrum model doesn't need much documentation. On the other hand the spiral model focusses on handling risks and proper documentation is needed to understand the different development iterations. The customer insteraction, and the adaptability to changes is less than the agile model due to the focus on eliminating risks and it's causes. \n\nIn comparison to the spiral model, scrum also allows the whole project to be broken down into small parts so that different teams can work at different aspects of the project at the same time. By doing this difficult aspects of the project can be simplified by giving different teams the opportunity to work simultaneously on different things. F.e. if one was developing a text editor (f.e. word), the teams could work on different aspects, like layout for one team, GUI for another etc, and possibly another team already testing the prototype for faults. This is not possible for the spiral model since the iterations are strictly defined and you can't handle content from a later iteration before a former one is finished\n\nOn the other hand, Communication is key in the scrum model, and if teams arent able to rely on each other to finish work on time, there can be huge delays f.e. when one team depends on another team to finish their work so that they can combine their efforts to work on the next task. When a single team doesn't meet the deadline it already becomes hard for the project as a whole to move on steadily.\n\nScrum also has other disadvantages though, instead of having a final deadline things remain rather flexible. Especially when new requirements/demands keep pouring in from the clients and the sprints keep on changing there is the danger of things spiralling out of control.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 5644922,
      "meta": {},
      "text": "Scrum follows the princip of divide and conquer with reversive team meetings that allows the exchange of information within the team and that allows more flexibilty regarding to change. \nIn the so called 'sprint planning meeting' the project is divided into sprints. Each day there is a 'daily scrum meeting' where the team comes together and exchanges news, changes, status and else. If the project is finished there is a meeting to review the whole project and discuss problems and so on.\n\n\nAdvantages of Scrum are the flexibilty and agibilty about changes during the project. For example, the customer wants to change a requirement. The new requirement is put in the Sprint Backlog and will be changed in on of the next sprints. Because of its iterative structure such change is as well handable in the Spiral model.\n\nThe team stays in near contact with a high transparency, i.e., if somewhere occurs a problem, e.g. with the interface between two subsystems, it can be communicated fast and solved within the team. The Spiral model does not have such an closely provided contact within the whole team. Communication could be less.\n\nOn the other side it costs time and needs a good structure to meet every day with the whole team, why Scrum is moreover not useful for quite big teams. Everyday the team members \"loose\" at least 15 minutes for the meeting, plus the everybody is in the same room and quite and afterwards talks about the weekend... In the Spiral model we do not have such repeating meetings. This saves time, but looses connectivity in the team.\n\nAs well, maybe a work time flexibility gets lost, because everybody needs to be in the same office at 8 am. (Spiral model has no repeating meetings.)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621838,
      "meta": {},
      "text": "SCRUM handles changes all along its process. Its goal is to decompose the objective in multiple subtasks (Product backlog), which are in turn resolved during sprints (2-4 weeks duration). At the end of each sprint, the team can deliver a potentially shippable product increment.\n\nAdvantage:\n1) Can incorporate changes well in the development process.\n\tIf the team realises that a model should be modified, it is always possible to do so at any point in time.\n2) Its incremental way of working allows for fully implemented functionalities to be tested even though others haven't been started yet.\n\tSuppose an application using the MVC model is developed using SCRUM, it could be that at the end of the first sprint, the model, the view and the controller all have a start of implementation and that it is already possible to display info about the app (help functionality). Even though all three components will be expanded in later sprints.\n\nDisadvantage:\n1) As all tasks are running in parallel (Design, Implementation, Testing) and can influence each other, it is difficult to give an effective percentage of completion of each task.\n\tSuppose the Design was \"finished\" at the beginning of sprint 5 but while implementing a new feature we realise that it won't be possible with the actual design, we would have to redo some parts of the design.\n2) The development team must communicate a lot which requires organizing meetings and having a communication canal always available.\n\tTo react to changes, the whole team has to be aware of them, otherwise, hours will be lost.\n\nComparison between SCRUM and the Spiral model:\nBoth SCRUM and the Spiral model have cycles, but where SCRUM has all activities in one sprint, the Spiral model has only one divided activity per iteration (and defined in a particular order). And with that, the Spiral model cannot go back to modify a previous part. One thing which contributes to the robustness of the Spiral Model is that at the end of each cycle, the produced prototype is verified, and the risks are evaluated. But this is still less robust than SCRUM. Even though having sprints in which everything can be refined requires a lot of organization and communication, the whole Software development benefits from it as we can always recover from mistakes, adapt to changes in the environment and incorporate new features during the whole project.\nIn scrum, each end of a sprint means a potential shipping increment, whereas in the Spiral model, real code is only produced after the first 4 activities, and in each iteration only a prototype come out.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622091,
      "meta": {},
      "text": "The Scrum method is a framework for teamwork in which an interdisciplinary team organises itself and works together efficiently in order to be able to react flexibly and quickly to the changing requirements.\nInstead of precise work instructions, there are defined activities, important documents and fixed roles. \nOn one hand, the Scrum has many advantages. Scrum framework is fast moving and money efficient. The daily scrum is held on every working day of the Sprint to have detailed discussions about adapting or re-planning the rest of the Sprint‚Äôs work. It helps the team to achieve their goal faster and remove unnecessary activities that waste time and effort while the most important principle of the spiral model is how to deal with risks. As Scrum framework rely on constant feedback therefore the quality of product increases in less amount of time. In the end of every sprint become the team feedback on the product from customers. Only the most productive and the newest product can get a position in the market. This helps the team to have the most suitable software. However, the spiral model mainly deals with risks but have less interactions with customers.\nOn the other hand, the Scrum also have a few disadvantages. Scrum framework do not allow changes into their sprint. Once the goal of a sprint is set, no changes are made that would endanger the sprint goal. If our goal of this sprint is to build the car engine, we can not build the wheel. This may make the Scrum not that \"agile\". And spiral model is flexible. By using this model, late stage requirements change requests can be accurately incorporated. The daily Scrum meetings and frequent reviews are resource intensive. It costs time, energy to prepare for the daily Scrum and may frustrate team members. Moreover, this event repeats every single day in the sprint. The spiral model also needs proper documentation.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622593,
      "meta": {},
      "text": "In Agile processes Scrum is a technique that deals with interruptions and constant change. It manages and controls software and product development with rapidly changing requirements and improves s risk management by improved communication, cooperation and the delivery of product increments. \nThe first advantage of scrum is that the work isn't performed sequentially like in linear processes, but work is performed in parallel, this way you can coordinate between the different project parts better and combine them together more easily. Another advantage is that scrum always tries to reach a potential shippable product, which means, that any almost any given moment you can show the client your work, because you began with the basic structure of the product and started adding new features with each sprint. One of the disadvantages of scrum, is that it can be difficult to scale. Using the Scrum approach for large projects can be challenging, as implementing it on a bigger scale requires extensive training and precise coordination. Although ways to adapt Scrum to bigger projects have been developed, they're usually difficult to understand and implement. Another disadvantage is that it requires extensive training. Although using the Scrum framework can potentially deliver quick and high-quality results, it requires a well-trained and skillful team to properly implement it. Before committing to Scrum, everyone within the team needs to understand the benefits and particularities of this approach for the project to be a successful one. \nThe first big difference between the spiral and the scrum techniques, is that the spiral technique is an iterative model, which means work gets done one task at a time not parallel. This also means that you don't get a potentially shippable product till the very end of the working period. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 5622936,
      "meta": {},
      "text": "SCRUM is a method or a technique that allows to deliver software in a case of the constantly changing requirements. According to SCRUM work flow consists of sprints, that implement a specific change to the project and at the end of each sprint there is a potentially shippable product increment. \n\nOne of the main advantages of SCRUM is the ability to deal with changes that happen during the development. The example of that could be a requirement change, for instance during the development the product owner decided that the game that is in development should support multiple players mode and according to SCRUM this change could be integrated into the project really easily.\n\nAnother advantage of SCRUM is that a potentially shippable product increment is available after each sprint, meaning that the product could be viewed by a product owner in every stage and that means that he/she can add new requirements in the process of work. Example of that could be that a product owner has reviewed the current version of a product and saw what should be changed.\n\nThe one of SCRUM disadvantage is the lack of predictability. Because of all the changes, is not always possible to say when the final version of the project will be ready. The example of that could be the situation where there were so many changes to the product that the deadline was exceeded.\n\nAnother disadvantage of SCRUM is that all members of a team should know the basic methology of SCRUM in order for it to be sufficient. For example there is a SCRUM team of 3. One of them is called Peter. Peter doesn't know how SCRUM works, so for him it is difficult to work.\n\nSpiral model is also an iterative model. It is similar to SCRUM in this aspect, the developers should evaluate the results of each iteration and plan the next one. The main difference between SCRUM and Spiral model is that in Spiral model each iteration is different because each one is a next step in development, so that a product is developed linearly.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5623168,
      "meta": {},
      "text": "Scrum is a project management framework that focuses on iterative, incremental work cycles and consistent communication among team members. To that end Scrum defines three pillars: 1) Transparency means that everyone is clear on the process and work, which enables 2) Inspection, in which problems or miscommunications can be spottet such that the process can undergo 3) Adaption, to readjust onto a more desirable path. Scrum has only few core aspect which need to be implemented and leaves much unspecified such that Scrum can adopt to any existing process and infrastructure.\n\nAdvantages: \n1. Scrum is adaptable to changing conditions and requirements. In Scrum requirements could change after every sprint (roughly 2 weeks); in the spiral model requirements can only change at the start of a new cycle.\n2. Scrum ensures continuous feedback. In Scrum a daily standup ensures everyone knows what everyone else is working on and sprint planning and review meetings ensure communication on a larger scale. In the spiral model each individual may only work on their specific task without knowing about what the others are doing until the next big planning meeting.\n\nDisadvantages: \n1. Quality control can be challenging in scrum. Scrum does not have dedicated testing phases, so quality control has to be done 'manually'. Waterfall has specific phases for validation and verification.\n2. Scrum only works in small teams of up to 10 people. Scrum requires small teams while the spiral model specifies no particular team size.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644650,
      "meta": {},
      "text": "SCRUM is a agile Project Managment Framework. It consists of multiple sprints until the product backlog is empty or the deadline is due. Each sprint starts with a sprint planning meeting, defining the sprint backlog. Throughout the sprint there are daily meetings. Each scrum team consists of a product owner, a scrum master and a development team. \n\nIn my opinion the biggest advantage of scrum is the transparency of the work progress. The daily meetings are a very simple but effect way to spot problems early. For example the spiral model isn't as transparent as the scrum model. The project gets divided into 4 parts and only if the often called \"Identify and resolve risk\" part is reached problems will be spotted. \nAnother advantage of scrum is its agility. If in any circumstances the product backlog should change the new tasks can be moved into the sprint backlog in the sprint planning meeting of the next sprint. The spiral model isn't as transparent as the scrum model. Although the spiral model has iterations these aren't as short as sprints and therefor requirement changes can't be realized that easy. \n\nBut Scrum has also some disadvantages. To be the most effective all team members need to be well-trained. Especially every team member needs to understand the benefits of scrum and needs to motivated to implement it. Of course also using the spiral model a motivated team is needed. But this approach is more conservative and easier to understand than scrum. \nAlso scrum isn't related to the project deadline. Scrum makes sure that every individual team member meets  their expectations, but it doesn‚Äôt take the project deadline into account. Therefor the scrum master needs to make sure that the project can be finished in time. In comparison the spiral model has no or at least less problems with the project deadline. The different iterations can delay the project but overall the spiral model can work with project deadlines.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644781,
      "meta": {},
      "text": "Scrum is an agile team software development process that allows you to produce a working shippable product in a short time. It has various stages of planning, development and discussion of the stages made. Also there are various roles for more optimal management of team members.\nPros :\n+ working shippable product at the end of sprint (agile process) :\nThe customer/client can see how this or that thing is implemented even before the complete system. In case he does not like it, it can be taken into the next sprint and finalized. Without this, if the customer/client saw it at a more advanced stage of development, then redoing this thing could take more time and costs.\n+ Saving time and planning costs : \nIf we are given a small project, then its planning of all stages and implementation in turn will already be costly. Scrum allows you to immediately start a project, breaking it into small sprints, without wasting time and costs on excessive planning.\nCons :\n- Daily/Review Meetings can be tiring for developers :\nWe have an experienced development team and everyone is following the project. Nevertheless, the Scrum Master arranges meetings quite often and goes through all the points there. In turn, this tires the developers and they are completely uninterested in these meetings and simply waste their time.\n- Hard to scale :\nWe have about 100 team members and a big project. Breaking it up into a bunch of little sprints and periodically having a meeting with all the participants is not exactly the right solution, as this will lead to a lot of time. Often in such cases, the Scrum process is changed and all the participants are broken into several teams. However, Scrum does not say what communication and distribution of responsibilities between teams should look like.\n\nSpiral model : \nScrum is better in both pros. It takes more time to get the first working prototype in the spiral model and it requires more time and resources for planning.In both cons, Scrum is inferior to the spiral model. Since there are no often meetings and the spiral model is more suitable for large and complex projects.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644951,
      "meta": {},
      "text": "SCRUM is an agile development model where development phase is composed of multiple 2-4 week long sprints. For each sprint a number of requirements from the product backlog is chosen to be implemented in a potentially shippable product. There are sprint planning meetings and sprint reviews before and after each sprint and daily scrum meetings are held during sprints to report progress.\n\nAdvantages of scrum:\n- Reaction to change in system requirements during development\nIf the client requests to add a functionality to the system during sprint 3, the new requirement can simply be added to the product backlog and implemented in one of the following sprints.\nIn the Spiral Model this is not possible, because determining software requirements is done in a different iteration to coding and switching between iterations is not allowed\n- Quick identification of problems through improved communication \nIf developers face a problem that makes them unable to reach their implementation goals for the sprint, they can report this at the daily scum meeting.\nThe Spriral Model partly it has a iteration phase dedicated to identifying risks, but it is much harder to react to problems found during the development phase.\n\nDisadvantages:\n- Planning of the whole development process is harder\nWhen more sprints than initially planned are needed, the development has to be extended.\n- ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620269,
      "meta": {},
      "text": "Scrum is a framework for developing and sustaining products in a complex environment with rapidly changing requirements. It's designed for small teams whose members split up their work into smaller steps and goals that are accomplished in so called sprints. Within these sprints the team always assesses their progress and reviews their performance and the end result of these recurring sprints is a finished product that can be delivered.\n\n1. Pro\nA major advantage of scrum is the high flexibility because the high communication and the recurring sprints allow fast change in the division and planning of work. If for example the client changes a requirement during the development process the scrum team confers how to apply this change and can implement it easily within the next sprint for example. In the spiral model applying a change wouldn't be that easy because of the way longer iterations in comparison to a sprint.\n \n2. Pro\nScrum has few rules, is easy to understand and quick to implement in a team. Once a sprint is understood, which is quick because a sprint doesn't take long anyway, the concept of scrum is self-explanatory.\nFor a small project, for example, it is easy to introduce scrum to the responsible team and is not a big effort. The spiral model is much more complicated and would cause more trouble.\n\n1. Con\nA quintessence of scrum is the high level of communication, which, however, is also associated with a lot of time and effort and can quickly lead to ineffectiveness. Due to the many meetings a lot of time and effort is spent on communication, especially within the team. For example if the team chemistry doesn't fit, most of the communication is an unnecessary waste of time. In spiral model this is not such a big deal because communication is not that present as in scrum. \n\n2. Con\nWith scrum you don't have such a good overview of the entire project, because in the individual sprints you work on small tasks and usually only the progress of the individual sprints is reviewed. With larger projects, for example, you quickly lose track of the actual goal and individual tasks are no longer implemented as they should be. with the spiral model, large projects are well suited because the iterations are much longer and the overview can be better maintained here.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620507,
      "meta": {},
      "text": "Scrum is a framework to foster software and product development that caters to changing requirements. It reduces risk by allowing better communication and cooperation and as well by producing small deliverable increments of work. Scrum is organized through different roles, sprints and artifacts. \nAdvantages of Scrum:\n-potentially shippable product increments are produced in every sprint oppose to working on a project with no visible progress at all, with scrum's shippable project increments motivation can stay high within the team and the client can also feel safter, as he can see the work progressing.\n-it's highly adaptable for the requirements and environments the team is working with. while other frameworks might be more rigid with scrum the people actually working on the projects have the freedom to make the best choices for themeselves.\n\nDisadvantages of Scrum:\n-it requires time for teams / organization to learn the process of Scrum and and this time has to be invested. obviously it would be easier to use a simpler framework.\n- the scrum process works best on smaller teams and is hard to scale. therefore implementig this approach in big organizations might be too complicated as many small teams would need to be formed but it would also need to be guaranteed that communication and cooperation isn't lost.\n\n\nComparison to Spiral Model:\n-in the spiral model there technicsally also is shippable product increment. A product needs to be tested and integrated and those are the last steps of each iteration of the spiral model, therefore a shippable product could exist after each such iteration\n\n-both are able to evaluate and adapt to changes as they both have a carved out time to do so\n\n-the spiral model is also complex and just as scrum will require training and time to be fully understood by the team\n\n-potentially also hard to be performed with big groups as every iteration needs to be evaluated and the next one needs to be planned\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621697,
      "meta": {},
      "text": "Scrum is a procedural model for project- and product management with an emphisis on agile software development and processes. This technique manages, controls and deals with interruptions and delevopment with rapidly changing requirements.\n\nAs decribed the Scrum methodology can easily cope with mistakes and changes that happen during/ throughout the course of development, since srum constits of many short sprints with feedbacks. Moreover, due to the many sprints all stages and progress are visible to all team members.\n\nHowever, scrum also has some disadvantages: it doesn't come with any time limits and cost valuations. Therefore the project development can easily expand to several sprints. This methodology is mostly successful with smaller project groups, where all teammembers work together well. Otherwise it can lead to misunderstandung and a lack of cohesion.\n\nIn contrast to the spiral model, scrum revisits problems and changes of former tasks. In the spiral model each task is constrained in an iterative model, where first objects, alternatives and constraints are determined. Then alternatives are evaluated and identified risks are to be resolved. Then the prototype should be developed and when all risks and problems are resolved the next iteration should be planed. In scrum you the development is more agile and changeble.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5623038,
      "meta": {},
      "text": "Basically Scrum is derived from rugby where scrum restarts the gone after the ball has gone out for play. Applying this interpretation in technical terms a software scrum gets the team back together and everyone is moving in appropriate direction. However with scrum, if the task is not well defined estimating project cost and time will not be accurate. Also adapting scrum framework in a larger team is challenging. But the spiral model is good for large mission censorious projects. It is also more suitable for high risks projects where business needs may be unstable. The advantages of scrum are that due to short sprints and constant feedback it becomes easier to cope with changes. Also it works well for fast moving developments project. Basically the plan of the rugby game can change really easily, however it will be hard to identify how everything will pan out before hand, which makes panning the budget or the amount of offensive running players harder. Since the game of rugby should easily adapt itself according to the plan of the other team such consistent and short paused meetings make more sense. But if the team consists of 1000 players a meeting would be almost impossible to make.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5623091,
      "meta": {},
      "text": "Scrum is a dynamic workflow for handling complex problems with changing requirements. It consists of one kickoff meeting, where the first requirements are written up, a sprint planning meeting, where the work batch (called a sprint) for a given time period is defined, and daily scrum meetings, where progress and slumps are reevaluated daily so as to maintain the granularity mentioned earlier. The closing event is a sprint review meeting, to check if the given work batch corresponds to expectations, and the whole process is repeated.\n\nAdvantages of SCRUM:\n- The team has a high degree of integration. An example here should be comparative: other models such as Spiral Model and the unified model don't have explicit meeting requirements.\n\n- Scrum is empirical, which works best for real-word changing scenarios. A good example is the context of a startup, which needs to work closely with stakeholders to make sure financing is secure. Scrum embraces that by the relatively short-termed sprints and various feedback-driven approaches.\n\nDisadvantages of Scrum:\n- Difficult to scale. Bigger projects usually have many requirements and many subsystems which can be span different teams. This means acceptance and testing require coordinating many previously unrelated teams.\n- Very team-member dependent. If one of the members cannot continue with a project, there's a big performance hit, since Scrum Projects are highly modular and integrating a new member requires explaining the whole product backlog.\n\nComparison to Spiral:\n1. Within a Scrum Framework integration is more incentivized as the workflow focuses on team structure rather than project structure, such as the case of the Spiral Model\n2. The Spiral Model is still relatively feedback-driven, since testing through prototype iterations is required and requirements are always reevaluated for a new prototype.\n3. The Spiral Model is more adequate for projects with a big scope, since it is tackled as one big unit which maintains a certain level of centrality required for extremely complex projects.\n4. The Spiral Model is not very team dependent (generalizations to edge cases are obviously counter-productive), since requirements are batched at once at the beginning and are very clearly delineated. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644981,
      "meta": {},
      "text": "Scrum is entity centered agile software development model. The main goal of scrum is to deal with changes in every aspect of development. With help of close communication with product owner during the whole project, scrum guarantees potentially shippable product increment. \nFirst and most obvious pro of scrum is agility. Product owner can change product backlog at every time of the project and it will not affect development nor developers. For example if we did an application for some store and implemented some logic, e.g. entity control and boundary objects. But suddenly chief wants a website instead of app. We just add new item in product backlog and change the boundary part of the system. \nSecond pro of scrum is communication and resulting effects from it. What i mean is, that everything in scrum is set in order to make everybody clear what and how will happen. Starting from user story ending and all the diagrams ending with daily scrum meetings, everything helps and provides appropriate information. Which leads us to a good developed and documented system. I do not have concrete example for that, but imagine yourself an ordinary failed project. What was the reason? Most likely lack of communication.\n",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 5619836,
      "meta": {},
      "text": "Scrum is a very good model to deal with changes in the project, because the schedule isn't fix in the beginning. Before the project, all goals of the goals for the project are written in the producr backlog, but then it will be chosen dynamicly (depending on how fast the progress is), which backlog items will be dealt with in the next sprint. The items which aren't dealt with in the end of the sprint will go back to the product backlog, and will eventually be dealt with in the next sprint.\n\nOne advantage of SCRUM is that the team is much more flexible in the project management, then in the spiral model, if one sprint backlock item is not finished, or new problems occur, the team can take the needed time to fix it properly and fix it in the next sprint. The spiral model has the danger that if the team does not consider all problems in time, that the project fails.\n\nAnother advantage is that in SCRUM the participants are encouraged to talk a lot about occured problems in the weekly scrum meetings, for example if an used API is not free anymore, but it was during planning, the developers can easily communicate the problem with the scrum master in order to find a solution together. In the spiral model there are no obligatory meetings.\n\nOne disadvantage is that there is not necessarily a time schedule, the project can loose it's time goals really quickly if the participants don't pay caution! For example the developpers spend to much time in details - and just work on one backlog item over weeks. In the spiral model there is also not a fixed time plan, \n\nThe other one is that SCRUM could lead the team to not making their planning good enough in the beginning, because they think that they will do everything under way - danger of poor planning! In the spiral model there is enough time planned for the planning.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621145,
      "meta": {},
      "text": "SCRUM is an agile software lifecycle model with a short iteration duration. The basis is the product backlog, which is a list of features that have to be implemented, and a regular sprint iteration, in which a team of developers implements a set of prioritized tasks from the backlog, which is called the sprint backlog. After each sprint, the team has developed an increment to the final product and starts with a new sprint.\n\nAdvantages are:\n-  SCRUM is better in adapting to rapid changes in requirements. For example, if our clients require a different feature that has not been planned and we were not able to react to that change, our client might want to aquire another company. Using the Spiral Model, the phases are to long to react to changes.\n- In comparison to the Spiral Model, SCRUM helps making faster increments, whereas the Spiral Model is better for improving an existing product. As a start-up, we have to deliver as quick as possible. \n\nDisadvantages are:\n- The team has to be dynamic for SCRUM to succeed, as it heavily relies on each member. If they are not able to adapt quickly (e.g. they are not able to split up the tasks in little increments or don't properly communicate with each other), SCRUM won't work well. The Spiral Model on the other hand gives our team more time. \n- If our team grows, SCRUM will be harder to implement. Coordination between team members would have to be really good, which often does not work, when we don't want to loose time for actually developing our system.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621243,
      "meta": {},
      "text": "Scrum is a framework for agile development. The product is created over a series of sprints incrementally building the project, during which a part of the project is implemented from start to finish, such that that part could potentially be shipped to the customer. To ensure adaptability and customer satisfaction, the product backlog is reviewed after each sprint, taking into consideration the clients feedback on the current state of the project. \nOne main advantage of SCRUM is its adaptability to change through constant customer communication and reevaluation. While both spiral and SCRUM build the project incrementally, in spiral there is no customer communication during development. For example with SCRUM after building part of the user interface, the client looks at the newest increment and says that he doesn't need part of it. With scrum it will simply be deleted in the next sprint and not drain further resources, whereas in spiral the mistake would remain unnoticed until the end.\nAnother advantage of scrum is that it's easy to implement. It focuses on few simple principles, such as doing the project step-wise, meeting regularly, customer communication, regular (re)-evaluation of progress and schedule and adapting to change. The SCRUM-Guide by the creators is only 14 pages long. Spiral might be considered even simpler, as it's basically a subset of the above.\nA weakness of scrum is that it works best with small teams as regular meetings are part of the process that aim to be short as not to waste time. This becomes increasingly difficult with team size, therefore scaling SCRUM can e.g. lead to complex structural decisions, such as multi-layer representative meetings. This doesn't happen with the spiral model as scrum-style meetings are not part of the process and thus don't hinder scaling.\nFurthermore since SCRUM focuses on adapting to change rather than adhering to a fixed schedule, SCRUM itself doesn't actually ensure meeting the project deadline. While spiral includes creating one fixed schedule in advance, SCRUM does not, so meeting the project deadline has to be ensured separately.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644694,
      "meta": {},
      "text": "Scrum is a Projektmanagement-Framework often used in Software development. The core essence of scrum is that it is an agile process divided into small, constant and repeating working cycles so called sprints and different meetings. Before each sprint you decide in a meeting on the work you want to do in that sprint from the requirments of the whole project and important is that after each sprint you should have a potentially shippable product increment. There are 3 roles: the product owner, representing the client, the Scrum master, which is the project manager, and a team of people who work on the tasks.\n\nA disadvantage of scrum is that it is difficult to scale. And challenging to use for large projects, as implementing it on a bigger scale requires precise coordination due to its difficulty to manage. For instance the necessity of the breakdown of the big meeting into smaller meeting require the people to be divided into teams with fixed roles and fixed assignement, the coordination of which has shown to be diificault. \n\nA disadvantage of scrum is that it requires experienced personnel. Scrum involves periods of intense work where everyone involved needs to have the experience and skills to execute their own tasks. For example, everyone needs to be able to work on and provide feedback on the results and overall process of the project.\n\nAn advantage of scrum is its that it improves customer satisfaction. The ability of being constantly abel to adjust based on internal and external feedback result in products and solutions that are more popular with the client. For instance even wishes of the client long after the project has begun can still be integrated into it.\n\nAn advantage of scrum is its ability to adapt and deal with frequent change. For example it is suitable for a wide variety of project that don't initially have to have clearly identifiable requirements or will have changing requirements and require a flexible approach.\n\nUnlike the Spiral model, which can deal with changes between activities, but does not allow change\nwithin an activity. The big advantage of scrum over spiral is its ability to deal with change.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 5644942,
      "meta": {},
      "text": "A product owner crates a backlog of tasks, which acts as wish list for all the requirements of the customer. Then the Scrum team conducts a sprint planning session where the requirements to complete the backlog are broken down into smaller and more easily solvable chunks. Now the scrum teams decides the length of each sprint and they select the scrum master, who with stakeholders and product owner overlook the scrum sprints and meetings. \nOne of the big advantages of scrum as well as spiral system is the ability to divide large and complex project into smaller and more easily developable and controller chunks/tasks, this helps to finish the requirements for large project more quickly and efficiently. Another advantage is that small sprints allow the scrum team to have feedback more quickly from the customer and adapt the project requirements accordingly, spiral model can similarly, easily add or adapt task in later dates, however this model doesn't support form of quick feedback.\nThe biggest disadvantage is that adaptation of scrum in large team is complicated because we only have one scrum master the it harder to hold meetings consistently with more people. Spiral model is hard nor easy to adapt in a larger team. On the other hand it is more expensive to finance. Other disadvantage of scrum is if some of the members leave the project can come to a sudden halt or it can have a huge impact on the integrity of the scrum team, so scrum is not useful for high-risk project, however spiral model is ideal for high-risk project, because it has risk management unlike scrum.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621452,
      "meta": {},
      "text": "SCRUM is a management framework in which one or more cross-functional, self-organised teams create a product in increments, i.e. in stages. There can be about seven people in a team.\nSCRUM has a system of roles, events, rules and artefacts. In this model, teams are responsible for creating and adapting workflows. Scrum uses fixed-length iterations called sprints. They typically take 1-2 weeks (up to 1 month). Scrum teams aim to create a delivery-ready (quality tested) Product Increment in each iteration.\n\nUnlike SCRUM, Spiral model is not iterative, its execution it divided in 3-4 parts. When in SCRUM you plan only for the nearest iteration, but not the whole project, Spiral model plans more widely.\n\nThere are obvious advantages of such a method: the team works in short phases, each of which defines goals and ways of achieving them, which speeds up the work process. The team works on different project tasks at the same time, which makes it faster to achieve the desired goal. \nAnother advantage is that financial risks are minimised by reacting quickly to changes and correcting errors. Client can easily make adjustments for the next sprint. \n\nWhen it comes to disadvantages, it is not always possible to adapt the scrum method to the business sector, as there are projects which require an exclusively planned approach to work. For example, some products require fixes right after the sprint, as they can not meet the client's expectations, and SCRUM philosophy conflicts with unpredictability. \nAlso, it requires regular communication with the client, which sometimes slows down the process because feedback cannot be received. Whereas with SCRUM method the work doesn't stop, and it can just be reviewed later, as the final goal is already discussed.\n\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621973,
      "meta": {},
      "text": "Scrum ist eine Technik mit Change umzugehen. Dadurch hilft es, den √úberblick sowie die Kontrolle √ºber software- und product development zu bewahren und somit den sich stetig √§ndernden Anforderungen gerecht zu werden. Durch verbesserte Kommunikation, Kooperation und den erzeugten product increments wird das Risikomanagement verbessert.\n\nScrum weist mehrere Vor- sowie Nachteile auf. \nAls Pro-Argument l√§sst sich festhalten, dass durch die aufgrund der t√§glichen Scrum-Meetings implizierte Kommunikation eine gewisse Kontinuit√§t in der Entwicklung durch das Vorbeugen von Unstimmigkeiten gew√§hrleistet werden kann. Dies l√§sst sich auch an einem Beispiel visualisieren: Mehrere Entwickler arbeiten an einem Projekt, dessen Implementierung Schnittstellen aufweist. Durch Kommunikation wissen sie, welche Funktionalit√§t bereits durch andere gestellt wird, und k√∂nnen ihre Arbeit daran anpassen.\nEin weiterer positiver Punkt ist der Umgang von Scrum mit den sich stetig √§ndernden Anforderungen. Durch Scrum wird Flexibilit√§t gew√§hrleistet. √Ñnderungen k√∂nnen schnell vorgenommen werden. Beispielsweise kann eine neue Zielgruppe angesprochen werden. Die Anforderungen √§ndern sich also, dennoch kann die Benutzerfreundlichkeit f√ºr die neue Zielgruppe schnell garantiert werden. \nEin Nachteil von Scrum ist die Regulierung in der Gruppengr√∂√üe. Um Kommunikation und Kooperation auf einer effektiven Basis gew√§hrleisten zu k√∂nnen, sind zu gro√üe Teams nicht haltbar. Bei einem Team aus zwanzig Personen werden bei einem daily meeting sicherlich nicht alle koordiniert auf die anderen eingehen geschweige denn ihre Anliegen vortragen k√∂nnen.\nEin weiterer Nachteil ist die implizite Abh√§ngigkeit von den Teammitgliedern. Jeder leistet seinen Beitrag zu dem Projekt und ist essenziell wichtig f√ºr den Erfolg und Fortschritt in der Entwicklung. Verl√§sst ein Teammitglied die Gruppe in der Mitte der Entwicklung, hat dies z.B. gravierende Folgen f√ºr den Rest des Teams, das seine Arbeit nun untereinander aufteilen muss.\n\nKommunikation ist eine Sache, die im Spiral Model nicht in dem Ausma√ü existiert. So k√∂nnen Unstimmigkeiten auch nicht vorgebeugt werden, sondern m√ºssen sp√§ter als Fehler betrachtet und somit behoben werden.\nAufgrund der linearen Ausf√ºhrungen der Iterationen kann das Spiral Model nicht flexibel agieren. √Ñnderungen sind im Nachhinein dementsprechend nicht mehr m√∂glich.\nEine Einschr√§nkung der Gr√∂√üe der Teams ist f√ºr das Spiral Model nicht von Relevanz. \nAuch eine Abh√§ngigkeit zu einem bestimmten Teammitglied besteht nicht, da die Bearbeitungen der Iterationen vorgegeben ist.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644323,
      "meta": {},
      "text": "Scrum is method of managing software projects by dividing development into sprints which may last up to a month. For each sprint a few features from a global product backlog get chosen to be moved into a sprint backlog which is then being worked on during the sprint. Everyday there is a daily scrum meeting where progress and problems are discussed and at the end of every sprint a potentially deliverable product increment is finished, unfinished tasks move back into the product backlog and the product backlog may be adjusted to changes.\n\n\nAdvantages:\n\nThe biggest advantage of scrum is that it's highly adaptable to change, as after every sprint new requirements can be integrated into the next sprint. Implementation planning is also done in the sprint, so there is no need to plan ahead for the entire project. \nE.g a shop wants a website with everything it sells on display but stops selling shoes during development and can tell the developers a shoe-page is no more needed. As the implementation of it has not been planned yet no progress is lost and it can easily be removed from the product backlog.\nThe spiral model is not as adaptable as once a iteration has been started applying changes to it afterwards is difficult and costly.\n\nA second advantage of crum is that the communication between developers and customers is very direct.\nEvery scrum master communicates regularly with the costumer and assures that the outcome is as close to the customer's needs as possible. \nThe above example is a good one for this advantage too, as direct communication was essential for telling the change.\nIn the spiral model this is not the case.\n\nDisadvantages:\nIt's hard to track progress as every part of the system is incrementally developed in parallel. \nIt's for example not possible to say \"implementation is complete, unit testing is 50% done\".\nIn the spiral model this is easier as there is a clear structure when which activity is done.\n\nManaging big teams is hard, as sprints have to be synced up.\ne.g. a 5000 people scrum needs a lot of teams or else scrummaster-developer ratio is fatal\nIn spiral model this is easier, as there are not that many small teams.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644432,
      "meta": {},
      "text": "Scrum is an agile process modeling technique which helps people, teams and organizations tackling tasks through adaptive solutions for complex problems. Basically scrum starts of by splitting a formally defined product backlog, containing all steps needed on the way to the finished product into smaller chunks of items which are tackled in so called sprints. In those iterations, daily scrum meetings are held to keep track of whats being done. After each iteration (\"Sprint\") a shippable product increment is delivered and the sprint gets reviewed, which allows immediate reaction to occurring problems by changing requirements and adjusting the product backlog accordingly.\n\nAdvantages:\n1. Large projects can be divided into smaller more manageable chunks that are tackled in different sprints\ne.g. our team project seemed huge and overwhelming in the beginning with a long list of requirements and many different components/frameworks, but dividing the workload into different, smaller chunks made the project more handable, thus not leading to any state of numbness where we all feel overloaded.\nThe spiral model also breaks the project down into 9 iterations that all go through 4 different activites, however these are more or less predefined, making it not as flexible as SCRUM.\n\n2. Fast reaction time to changes occurring during the project.\nChanges like new requirements from the customer or feedback often emerge during a project, which make it very advantageous if you can react quickly and precise to it with shorter sprints e.g. the product owner defines a new functionality which conflicts with an older backlog item; the you should stop developing the older item and focus on how to incorporate the newer requirement. The spiral model is less responsive than SCRUM due to its incapability of dealing with changes within an activity.\n\n\nDisadvantages:\n\n1. SCRUM can lead to scope creep. \nDue to its adaptive style of reacting and implementing to new changes, the project work load can quickly spiral out of control and exceed what was originally planned. For example a product owner wanting new functionalities or changed his mind about one function can frustrate the development team if they spend their last sprint developing a feature with all their heart just to be shut down by the product owner. Spiral models limit scope creep to an extend due to its less reactive manner.\n\n2. Implementing SCRUM for larger teams is challenging and very difficult. \nBecause precise coordination between all the team members and good communication is needed, extensive workshops and training is needed to let SCRUM become second nature to every team member. For example bigger teams can struggle to find a fitting slot for the daily SCRUM meeting or some members might feel excluded from the team because of the nature of bigger groups. The spiral model doesn't face this problem to the same extend as it doesn't require as much interaction between members, as it deals with less change.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644691,
      "meta": {},
      "text": "SCRUM helps to address complex adaptive problems. It is an iterative, incremental approach to optimize predictability and control risk. The main principles are: transparency, inspection, and adaption. \n\nTwo advantages are for example, that within SCRUM developments are coded and tested during the sprint.\nFor example, a method is implemented within one sprint and test methods are already implemented. This leads to the second advantage of a constantly growing product, adapted to the customers' needs and feedback (communicated to the SRUM master) during the development, and increases the team's motivation.  The motivation is increased by the aspect that the individual effort of each team member is visible during daily SCRUM meetings. Additionally, roles and tasks are clearly defined.\n\nOf course, there are also disadvantages: For example, the success of the process is highly affected by the commitment of the individual. If a team member leaves the team during the project it has a high negative impact on the project. The commitment of the other team member is affected. Another contra point is that the daily SCRUM meeting often frustrates team members. Often the employees feel as if they are being kept from work or they are frustrated by the additional \"management\" and do not see the benefit.\n\nAlso within the spiral model output of the project is produced in the early status. The team is also motivated due to this early output, but the individual effort is often not represented within the Spiral Model, due to the missing daily meetings. Also testing is done during the whole lifecycle process.\n\nDue to the missing representation of the individual effort, a loss of a team member does not affect the motivation and project results as much as in SCRUM. The missing frequently meetings lead to less \"waisted time\".",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644793,
      "meta": {},
      "text": "SCRUM\n\nSCRUM is a methodology to manage projects and work in team for a very dynamic environment with a very quick and frequent changes. SCRUM works with the principle of ‚Äúdivide and conquer‚Äù, it consists of sprints. Each sprint has a goal and tasks that need to be accomplished. \n\nAdvantages of SCRUM\n\n1. It is flexible and dynamic: Adaptable.\n    \n    SCRUM provides a model that can deal with the changes that happens so quick and frequent. The sprints planning make the variation and redirection of the tasks easy and efficient. It has not just one approach that needs to be followed, it is actually so changing and dynamic. \n    \n    For example, when the team is working on a project and a new version of some framework is released during the sprint, in the next one this can be discussed, and if necessary, change to the new version, can be done. \n    \n    The Spiral Model also provide a very flexible and dynamic model. With each iteration of the spiral model, changes can be made. \n    \n2. Produce a better quality work.\n    \n    The work based on the SCRUM is so efficient and ensure a good quality. The presence of the Product owner in the SCRUM is very important because it make the production monitored and supervised. When there is some wrong details in the production, the Product owner can tell the SCRUM Team and clarify the issue and how it needs to be corrected.\n    \n    For example, if the Product owner remind the developing team that there is some details (like: functionality working in a specific way) needs to be implemented. This practice will prevent the faults while working on the project. \n    \n    On the other hand the spiral model, maintain also a good quality work, because after each iteration there is evaluation of the iteration and there the problems will be corrected in the next one.  \n    \nDisadvantages of SCRUM\n\n1. It requires a major transformation in the company or organization. \n    \n    The structure of the SCRUM is not easy to integrate in organization, especially at the beginning. If the company for example is using the spiral model with many team members and there is neither product owner nor SCRUM master, it will be hard to reorganize everything the create the small teams each with their backlog. \n    \n    As an example, if a company decides to use the SCRUM model, they need to reorganize the whole company and all the teams working on the project and divide them into small team with product owner and scrum master.\n    \n    On the other hand, the spiral model does not require a big change in the structure of the organization. The main change happens on the level of the leadership of the team.\n    \n2. It requires a small team.\n    \n    The Problem with SCRUM is that team size must be small. In general is it recommended that the number of the Team member stay under 10 members. That makes a problem when working on a large project. That means that the tasks of this large project need to be decomposed to many small task, and create many small teams using the SCRUM structure. \n    \n    for example, if a company is working on developing a big system, the work must be divided in many small subsystems. We cannot make a big team that work on the whole system. \n    \n    on the other hand, the spiral model does not have this problem, because there is no restriction on the number of the team member, and for large project, no decomposition need to be done.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644819,
      "meta": {},
      "text": "SCRUM is a method of agile software development. Specific rules are applied to enable flexible and adaptive work in the team. In so-called sprints, which take several weeks, the team continuously updates itself and makes progress together.\n\n+ SCRUM can apply changed requirements by the client during the development easily.\nYou simply add the changed requirements to the product backlog and consider them in the following sprints.\nE.g. the client decides, that his new ERP-system should also be able to create invoices and send them directly to the customer. This functionality can simply be implemented in the next sprint by the SCRUM team.\nThe spiral model is not that flexible. If you are already in one of the later iterations (e.g. Unit test) you cannot add new functionalities after the Code iteration.\n\n+ continuous feedback within the team during a sprint ensures that the project is successful in the end.\nE.g. the team share problems and solutions at an early stage so everybody can benefit from each other's experience.\nThe spiral model follows four activities during an iteration which also reduces risk.\n\n- If one team member is not motivated or leaves the team early, the whole team suffers.\nBecause SCRUM comes with high responsibility for each team member and everybody contributes individual skills.\nE.g. the team member responsible for the view of the gui is lazy. The team members responsible for 'controller' and 'model' can not try, whether their implementation works because they can not see the outcome in the software.\nProblems with team members are always bad for teams, so spiral is also affected. Although the responsibility of every single team member in SCRUM is exceptionally high and therefore probably a higher risk.\n\n- teams can perform badly because they lack experience and knowledge about SCRUM.\nE.g. the team members are used to getting tasks and instructions from the boss. Now they have to think about it for themselves. Also, they may not stick to the principle of sprints and daily sprints.\nThe spiral model is a more traditional way of working and therefore should be easier to understand for employees.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621334,
      "meta": {},
      "text": "SCRUM is an agile software development model that's best suited for handling a rapidly changing environment. Its approach is iterative, which means that developers work on a cycle-basis. Each cycle, a small portion of the work gets done, reviewed and refined. The output of each cycle is an additional feature to the endproduct.\n\nAdvantages: \nSCRUM is very well suited to react to changing client requirements. E.g. if a client needs another functionality, it is easy to react to this change by adding the necessary adjustments to the next cycles agenda. \nThe Spiral Model is more geared towards handling risks, so the goals of the two models are different. Based on the type of project it might be better to chose one over the other. \n\nSCRUM makes it easy to show clients the progress that has already been made. For example, as soon as the login functionality is finished, it can be shown immediately to the client, since frontend and backend are working on this product increment simultaneousely. \nSo, client interaction is higher and more frequent than with the Spiral Model\n\nDisadvantages:\nSCRUM has a lot of communication overhead, which means that it can be suboptimal, if no changes in development are expected or the project is very small. If a client only needs a small website with 3 pages, the overhead of holding all the meetings and other communication is probalby more time consuming and costly than the development itself.\nThe same is true for the Spiral Model. It is also not well suited for small and risk-free projects. \n\nSCRUM at its core has fixed deveopment roles and values, which means that it can take quite a while for the staff and management to get adjusted to the new development model. So, training our new or old employees will take some time and ressources.\nWhile the Sprial Model doesnt have predfined roles, it also has a structure that people need to get used to. But because we have already worked with the Spiral Model, this problem currently only concerns SCRUM. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621487,
      "meta": {},
      "text": "SCRUM is a framework for developing complex products in a quick environment. It consists of a first kick-off meeting where the product backlog is defined, meaning all the tasks that need to be done in order to deliver a product and sprints where this product backlog is developed, reviewed and supplemented. Normally, there are sprint meetings regularly, where each team member discusses what they have achieved for this sprint. The normal Scrum team consists of a SCRUM master, who checks that everyone is doing their tasks and helps if anyone is stuck, and the product developers. \n\nThe first advantage of SCRUM is that it is really quick to set up and start working. You just need to find the team, do the kick-off meeting and start working on the product backlog, since it is empirical and you only need to focus on the first iteration. If you want to develop a reservation app table, just think about its requirements, functions and deliverables, like having a list of restaurants, and then start building the product backlog. The spiral model however requires a lot of planning at the beginning of the project. \n\nOn the contrary, if the company or team is not aware of how SCRUM works and has no previous experience with it. It might get complicated to implement the first time. An old company that follows a classic product development approach, will even have to train their employees into this new way of product development. The spiral model is a more classical way to approach software development. \n\nAnother advantage is that it is quite easy to adapt the product during the development phase. Due to the flexible product backlog and the constant sprint meetings, sudden changes to the product will be easy to implement and as we know every client wants to implement sudden changes to their product. On the spiral model you would need to start planning again from the first prototype if a crucial change is done. \n\nOn the other hand, it does not pay any attention to the deadline of the final product. SCRUM is made to constantly be fulfilling short quick deadlines of the product backlog, however it does not provide any support to the actual deadline of the product and either the SCRUM master or the stakeholders of the company have to be aware of that. The spiral model does take care of this. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621649,
      "meta": {},
      "text": "Scrum is an agile process for software and product development, that can manage requirement changes. It is based on a clear communciation, that reduces risks and is done by sprint planning, sprint review and daily sprint meeting. A Sprint is normally 2-4 weeks and in every sprint results in a potetially shippable product increment. \n\nAdvantage 1:\nThe process helps the team to get more productive and work together better, because it has the Sprint retrospective meeting after each sprint, that is exactly about what went wrong and how can it be improved in the next sprint. Like if somebody had nothing to do or the communication between the sub teams was bad.\nCompared to Spiral Model: There is no such concept in the spiral model.\n\nAdvantage 2:\nThe project can easily adapt to requirement changes at the beginning of every sprint phase, when the backlog for the sprint is created. \nCompare to spiral model: Changes can be implemented after the beginnig of the project, but always just to a specific point and then nothing can be changed anymore. If you have the operational prototype, no change is supposed to happen after that.\n\nDisadvantage 1:\nA lot of organization neccesary for it to work. For example for all the meetings, like daily, planning, retrospective, review. Where all team members have to be there, can get difficult if you are working on more than one project. Which is often the case in companies. \nCompare to spiral model: Also takes a lot of organization and meetings, but not that often. Like there are no daily meetings for example.\n\nDisadvantage 2:\nTrained personal needed at least for the position of Scrum Master and product owner, which may take time and money to achieve. \nCompare to Spiral model: \nAlso experience needed, but since it is nearer to classic/historic develpoment processes, maybe less training needed.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623001,
      "meta": {},
      "text": "Scrum is a strategy for managing and controlling the development of software and products when the project's needs and technology may change quickly (rapid changing environment). Especially in a VUCA world (V=Volatility, U=Uncertainty, C=Complexity, A=Ambiguity), adapting to rapidly changing extneral factors is really important for developing products and software. This is why SCRUM as agile working framework is used to find a way to best work and adapt to the VUCA world.\n\nAdvantages of SCRUM: \n- Feedback and requested changes may be implemented more quickly, resulting in software that more effectively meets its (customer and user) requirements.\n‚Ä¢ One example out of the EIST lecture would be that in Artemis the tutors offer feedback for the homework after each sprint rather than at the conclusion of the semester. Also in the team EIST project, feedback of the tutor can be provided after the Sprint Review (at the end of the Sprint).\nIn comparison changes between activities can be handled by the spiral model, but changes inside an activity are not permitted and therefore customer feedback is delayed.\n-In the SCRUM framework the focus is to create \"shippable products\" after each Sprint even if they are not 100% perfect yet. Therewith the time to market is shortend which may result in higher revenue.\nOne example for those shippable products would be the bumpers game. Here, we developed shippable products of the bumpers software after each Sprint. The spiral model is based on iterations and at the end of those iterations high-quality code is implemented. In Scrum, on the other hand, working \"shippable products\" are developed iteratively and incrementally after each Sprint.\n\nDisadvantages:\n-The scrum approach emphasizes communication, and every team member must be actively involved since regular scrum meetings and other forms of communication are crucial to the system's effective growth.\nOne example would be, in our team EIST project one of our team members could not participate in the Sprint Planning and therefore it was hard for him to understand the product backlog and tasks, In the Spiral model there are not as many fixed meetings and therefore the focus is not as much on communication.\n-It is often hard to calculate and estimate the total costs of such a SCRUM projects due to the various changes that can be requested. \nOne example would be that in a project at work, it is therefore quite hard to negotiate SoWs and contracts with the client for the managers. In the Spiral Model it is somewhat easier to estimate the total costs, since no changes within activities occur.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644269,
      "meta": {},
      "text": "Scrum is an agile development methodology, which means that one can adapt to change fast. With scrum there is a shippable product at the end of each sprint, thus the customer is always up to date. With each iteration, new features get added and old ones get revised.\n\nAdvantages:\n- The team can react to changes quickly, due to the large amount of meetings and can start working on them in the next sprint. Thus it is very easy to implement new features and develop the product to the customers content.\n- Scrum is transparent, because there is a shippable product at the end of each sprint. The customer is always informed on the current state/progress of the product. It is also helpful for the team to see how much work is left.\n\nDisadvantages:\n- Not scalable. It is best for smaller teams due to the amount of meetings. Because every member has to talk about their work, this can take very long.\n- It does not have a definite timeline. Which means that there is no specific final iteration or deadline, because scrum focuses on continuous improvement.\n\nComparison to the Spiral model:\n- React to change:\nThe Spiral model is not able to react to changes as fast as scrum. Due to the longer development phases between reviews, the team is only informed about the changes there, while the team in scrum is informed almost immediately, so they can choose, when they want to work on those changes.\n\n- Transparency:\nThe Spiral model is less transparent than scrum, because there is a fixed model that states that there are only three prototypes before release. The client has no information about the progress between these prototypes.\n\n- Scalability:\nThe Spiral model is better suited for larger teams, because there is a set planing phase where everyone gets together and discusses the current status (so it does not interfere with the development)\n\n- Timeline: \nThe Spiral model has a set timeline, thus there is a deadline that scrum does not have. Every developer knows how much work has to be done in during the projects lifetime.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644275,
      "meta": {},
      "text": "Scrum as a framework belongs to the Agile methodology, which is a process involving directing a project by splitting it into several stages and by repeating a cycle of planning, realizing and evaluating at every single stage or after respectivly. The cycles of Scrum are named sprints and they usually last somewhere between two to four weeks, with results being reviewed after every iteration. There are three different roles involved in the SCRUM process: the product owner, he is the representitive of the company, the Scrum master, who is the project manager, and a team which carries out the tasks.\n\nAdvantage 1: SCRUM usally leads to a better work quality because everyone has to take full responsibiltity and ownership for their work. this encourages people to do the best they can. \nFor example if one is working on a project and a team member doesnt fullfill his or her task it will be directly seen at the next daily scrum meeting.  \nIn the Spiral model this is likely not the case because there are no daily meetings in which each individuals performance can pe evaluated.\n\nAdvantage 2: Due to its agility Scrum enables quicker changes based on feedback by customers and stakeholder. The reasons for this are the short sprints and that one can easliy change the product backlog after each sprint. . An Example for that would be that a custzomer who initially just wanted a plain website now wants to include a contact field for communication. \nThe Spiral model should be able to deal with that too since it is comprised by many iterations.\n\nDisadvantage 1: A lot of experience is needed for the framework to function. This is Due to the quite comlex structure with all the meetings and cycles one has to understand.. E.g There are two new team mebers who both dont have experience with scrum therefore they dont understand the importance of the regular meetings and dont give as much effort.  \nIn the Spiral model that shouldnt be an a big issue since the indivdual iteration are straight forward.\n\nDisadvantage 2: Can be hard to reach overall deadline. Because it is focused on the many smaller deadlines. E.g A team developing an app gets lost in detail during the different sprints and therefore gets delayed overall.  This could happen in the Spiral model as well since it is not clear how many iterations there will be.\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644371,
      "meta": {},
      "text": "The core essence of Scrum is continuous improvement and adaptation to change. It's all about reacting to new requirements and obstacles and continuous learning together as a team.\n\nAdvantages of Scrum:\n- Scrum is very easy to understand because it's built on simple components like roles, meetings and backlogs. For example, a developer team who have never worked with an agile framework like Scrum before won't have a hard time understanding all the concepts.\nWhile the spiral model doesn't have a role system it's also built on a simple concept: the four activities.\n\n- Daily meetings that are common in Scrum help to reduce risks and avoid problems to become big problems. For example, a single developer who is not able to cope with an obstacle will most likely talk about this in a daily meeting and together the team will try to solve this. \nThe spiral models takes a similar approach for risk reduction by evaluating risks four times per iteration.\n\n\nDisadvantages of Scrum:\n- Although Scrum is easy to understand, it might be hard to get used to this new way of thinking. Let's look at the example with the developer team from earlier. Most likely they will understand the concepts of Scrum very fast, but getting used to this framework with \"strange\" roles like Scrum master and product owner and this agile way of thinking in general might take some time.\nThe spiral model might be easier to get used to since it builds on the traditional way of developing, but improves it by splitting the whole software life cycle in iterations.\n\n- Scrum isn't really suited for big projects for it gets more complex with every new team member. Imagine a daily scrum meeting with fifty people - pure chaos.\nThe advantage for the spiral model here is that it has less meetings and that not every team member has to be involved in every kind of meeting.\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644803,
      "meta": {},
      "text": "the core principle of SCRUM is a executable method to repetitively keep continuous increment with huge tolerance of unpredictable changes  by software development. According to the estimation of priorities and difficulties by product owner and developer teams, they are able to decide wisely the order to handle multiple items by divide them into smaller tasks in order to complete the hole project with integration at the end of each cycle. One advantage of SCRUM is its potential adaptive ability when facing unwanted interruptions: scrum allows team to determine in which degree should plan be adjusted and offers buffer zone so that too detailed plan do not need to be organized. For example, if the developer team finds out one contradiction between two items based on original requirement, then this task would not be completed in this period and the requirement would be checked and changed before next period. In Spiral Model, if developers meet problems in developing prototypes, then they are not capable to handle them, which causes by previous progress, because in this step Spiral Model is using linear model, which not allow turn back operations. Another advantage of SCRUM is its attention of customer-developer collaboration: In this case, product owner take the role of customer and reflect the desire and needs of them. By communicating with not only scrum master but also scrum teams, teams should have enough possibilities to check the difference between expected and observed product and improve its quality. For example, if team understands the meaning of requirement wrong, product owner will realize it in the coming discussion. In Spiral model, the communication between customer and developer are not so tide. However SCRUM are also not perfectÔºåone obvious problem is its precondition: each team member should be capable to understand the principle of SCRUM and know the basic recommended reaction in various situations. For example, if someone just have knowledge of programming, then this person might forgets to do daily report to team and makes team slower by reacting not in time. People using Spiral Model also need additional training in order to efficient follow the principles of 4 major activities and realize sufficient collaboration with other members. On the other side, SCRUM is not enough efficient when the project is highly predictable. In this case, lineal model is in comparison of SCRUM much better, because it omits the occurrence of unpredictable cases and offers a much clear result for evaluating the current rate of hole progress. For example, if the type of project has been confirmed as easy type, which should normally occur very less problem in a team consists of well developers, then SCRUM is not a good choice. Spiral Model are same as SCRUM in this situation: the flexibility by unknown cases inside this method is unnecessary and interrupts universal inspection during project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621077,
      "meta": {},
      "text": "Scrum, which's name comes from Rugby, is a modern, state of the art software modeling strategy which is specifically designed around dealing with interruptions and changing requirements. It accomplishes this by splitting the project in many little parts, so called sprints, with review & planing meetings in between. The goal is to have a potential shippable product at any given time and to improve it step after step in the mentioned sprints, which makes it a very agile process, able to react quick and easy to changed requirements often given in modern projects.\nThe key advantage of Scrum clearly is its nearly always shippable nature. Because of that, the Scrum Master & the Product Owner can watch the project grow and can intervene immediately if the projects goes in the wrong direction which prevents misunderstandings like - referring to Bumpers - a feature of a car which was defined not clearly enough in the Functional Requirements. Because the Spiral-Model is much more intransparent here, such a fault would probably not be found that quickly.\nAnother advantage of Scrum is of course that this approach allows a change of requirements on the fly. If it's a Requirement where it haven't been worked on yet, you simply change it without facing any problems. If it's one which is already done, you simply add another sprint to redo it. The spiral model would be much more conservative here and relies on stable requirements. If there are changes, a lot of progress is lost.\nA possible disadvantage of Scrum could be that it requires many meetings in order to manage everything. There have to be Planing & Review meetings after & before every sprint with all developers working on the project which can be time consuming. On the other hand this is probably also the case with the Spiral approach. Every group-project needs management and common exchange of information between the client, the managers and the devs.\nSomething which also have to be mentioned is that Scrum is not linear. Neither bei design, nor by progress. Some sprints may be more productive than others, depending on overall work-moral of the team and, of course, on the according Sprint backlog. If someone didn't know how to do things right or there was a miss-understanding, he may not be able to contribute anything until the next meeting. With the spiral model such problems can probably be faced earlier.\n\nI hope this solution meets the requirements. Thank you!",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621119,
      "meta": {},
      "text": "**Core essence**\n\nMost software projects are empirical in nature, i.e. one does not know everything before starting and therefore regularly encounters previously unknown information. These discoveries often disturb the development process and need to be accounted for, as they often induce new or changing requirements. Scrum is an agile software development lifecycle model that addresses these observations and allows for adaptation to frequent changes.\n\n**2 advantages**\n\nScrum encourages early information sharing, e.g. during the daily Scrum meeting, which improves risk management. For example, one team member might have misunderstood how two components should interface, which gets discovered early during the daily Scrum meeting. Although the Spiral model also encourages early risk identification, it isn't as people-oriented as Scrum, i.e. involving all team members in a daily meeting, where TODOS are shared and discussed to early identify risks. \n\nScrums allows to adapt to feedback. The role of the product owner and the artifact of the product backlog facilitate adaptation to changing requirements and frequent feedback. E.g. if the product owners get's informed that a software should also support imperial scale as the company wants to scale the software to other countries, a new item to the product backlog can be introduced. As the spiral model is also an iterative model it also allows for flexibility in requirements. \n\n**2 disadvantages**\n\nScrum can have difficulties with large teams as there's a high dependence on communication and established coherence within the team. E.g. if you would have 100 team members in a Scrum team, the daily scrum meeting wouldn't be feasible. In contrary the spiral model is suited for large projects as there are less human-centered bottlenecks.\n\nScrum is highly dependent on the willingness of team members to embrace the scrum philosophy (openness, direct communication). E.g. if a team member has had personal issues with another team member, this might have a serious impact on the teams effectiveness. Team work in the spiral model might also suffer from that, however as teams can be bigger possibly to a lower degree.\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621685,
      "meta": {},
      "text": "Scrum is an agile method that manages a software development process, in which changes occur frequently. In a scrum team there are three roles: a product owner, who represents the client and manages product backlog (a prioritized wishlist of tasks in the project), a scrum master, who is responsible for ensuring that the team has everything they need in order to deliver a product and finally a development team, that deals with the software and basically the solution of the project. From every product backlog item, a sprint backlog will be produced which explains the things that have to be done in next 2 to 4 weeks and at the end of this time period in which every day a daily meeting is done to communicate the progress, a potentially shippable product increment is created by the development team. \n\nAdvantages\nContinuous feedback, thus better results. --> For example, if something was not good in a spring which affected the speed or efficiency of the sprint, it can be discussed in the sprint retrospective and can be improved in the next sprint. In Spiral Model 4 different phase occur in a loop so feedback can also be given in spiral model.\n\nOffers Motivation for the members --> Communicating the things that are done in daily meetings and seeing the potentially shippable product increment after ever sprint creates a motivational atmosphere for the members of the team. In Spiral Model managing the time is difficult, thus the end of the project is unknown for a time, which can be not very motivational for the team members.\n\n\nDisadvantages\nTeam members --> In a scrum team there should be in maximum 10 people for an efficient work and three different roles, which can make it harder to build a team. In Spiral model there is no such thing as roles and maximum number of people for a better outcome.\n\nNot for large and complex projects --> Since the team has to be small for efficiency, large and complex projects cannot be done with the classic scrum structure. However, the spiral model is appropriate for these kind of projects.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622039,
      "meta": {},
      "text": "Scrum is an agile software development process where the main purpose is to adapt to changes that occur during development. As software development is not a linear process Scrum uses so-called sprints which is a determined period of time to work on the project with the goal to produce a running software. Communication also plays a big part in Scrum, so there are frequent meetings during a sprint to reduce the risk that comes from a lack of communication between different developers.\n\n The mentioned above also is a huge advantage of Scrum: Integration of subsystems that would fail due to a significant change in the interface, can be communicated during a daily scrum meeting and other components can be adjusted almost instantly.\nA disadvantage would be that changes to the product backlog - a checklist of functionalities of the system - can only be made after a sprint. So an urgent change of the priority of an item, can't be worked on immediately.\nAlso Scrum is non-linear, so the time it takes to finish a project isn't determined as changes can occur all the time during development and the Team tries to adapt to these changes the best way possible. Of course a schedule can be made beforehand, but the reality can deviate from that.\nBut the biggest advantage of Scrum is, that you have a running program after each sprint and therefore no surprises can happen in the end due to a \"big bang\" integration. This is also nice for people who not directly work on the project can have a better understanding of the current state of the system.\n\nIn the spiral model there is no force to frequent meetings and one could argue that this is wasted working time, but the time to fix problems that emerge from this can be much longer.\nAlso there's not even the opportunity to make changes to the \"plan\" after the requirements analysis.\nThe spiral model also is non-linear when you start from scratch after failing an attempt to build the system.\nDevelopment is happening in the end so it is no vertical-integration as in Scrum.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622770,
      "meta": {},
      "text": "Scrum is a nowadays often used framework, in order to develop a complex project in a team. It starts with a product backlog from the product owner, continues with a sprint planning meeting and a sprint backlog. Afterwards, you have regular meetings in which you discuss individual tasks worked out so far. Those meetings intend to stay focused, work effective and self-organize yourself. Everybody gets updated about what each other team member did so far, since everybody is presenting their work. In order, everyone gets feedback immediately and knows what more to consider. The short cycles should create flexibility and new requirements must be implemented quickly. This could be both: An advantage, but also a disadvantage. Interaction and communication are needed, but can also pressure some team members:\n\nEverybody needs to stay focused and reliable. This is the main reason why scrum is only a framework for a certain group of people: Not everybody is a ‚Äúteam person‚Äù. As soon as one person neglects the team, the project gets obstructed and the project could fail, or at least take more time to get finished.\n\nIn Scrum, a project leader, namely the scrum master organizes the flow of activities. He/she structures the team, so that the team can work and cooperate effectively. As this role is an important leadership role, the person must be constructive and on top of everything. \n\nThe spiral model is best used in large, expensive and complicated projects, whereas Scrum is best used in easier projects and smaller groups. Another argument speaking for the framework Scrum is the time management: Managing time with the spiral model is more difficult than with scrum: the number of required phases until the project is finished is often not clear at the beginning of the project. In order of that, there happens to be a risk of taking more time than expected and project is getting more expensive.\n\nConsidering the high cost and complexity of the projects working with the spiral model, I think it would be great for you and your team to try Scrum for less challenging projects. ",
      "score": 45.8,
      "language": "ENGLISH"
    },
    {
      "id": 5620226,
      "meta": {},
      "text": "SCRUM is a modern technique which allows to develop software and products in a fast changing environment. Through agile work flows the communication and cooperation between the developers, the SCRUM team and the customer can be optimised and product increments can be delivered regularly. \n\nPros: \nSCRUM enables all team members to take responsibility, e.g. every developer has to take up on a task from the sprint backlog and present the results to the team in one of the regular meetings. Therefore, no developer will be left without work or responsibility and so do the SCRUM master and the product owner as well, everyone is busy and works towards a common goal. \nMoreover, in the whole SCRUM process there is a high transparency regarding all needed tasks and division of work. For example, if one developer wants to know what the colleagues do in order to collaborate better, he or she can look in the task overview and see which task is assigned to which colleague. Also, the process plan and meetings are known to every team member.\n\nA disadvantage of SCRUM is the high amount of meetings and therefore the enormous effort of communication. Additionally to the daily business of each team member everyone has daily SCRUM, sprint planning/review and retrospective meetings which is very frequent and sometimes there will be meetings with no or only a few not urgent news, but the meetings will still take place. \nAlso, there is often too much focus only on tasks which can lead to a tunnel vision. E.g., if the product backlog is only generated at the beginning and no one checks up on it during the process but only tasks up on tasks and performs them, the risk of some tasks being unnecessary or some will be missed is very high. \n\nCompared to the iterative spiral model which includes 9 iterations from concept to implementation with each the 4 activities determination, evaluation, development and planning SCRUM does not end the process when risks cannot be resolved and it has a better improvement process. On the other hand, the risk management in spiral is more present and extensive than in SCRUM and has less meetings in total. But both models have planning, developing, testing and evaluation phases with high transparency. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621074,
      "meta": {},
      "text": "SCRUM is a technique of managing product development. In SCRUM entire time is divided into Sprints, that are approximately 2-4 weeks long and after each there is a meeting, where team discuss what is done, what should be done next and whether what was done is exactly what product owner wanted (here communication between SCRUM master and product owner is important). In SCRUM there are also daily meetings that allow to monitor current progress.\n\nAdvantages:\n+ Product Owner can easily add new requirements for next sprints (in Spiral Model Product Owner can see and evaluate product in every phase); For example: if he changed his mind and wants online mode for his game, it can be added to project, although project already started.\n+ Clear structure and constant length of sprints (In Spiral Model project is divided into iteration and activities (instead of sprints), but time of iteration isn't well defined.) For example: It can be important for Product Owner to know when can he expect new iteration of the product.\n\nDisadvantages\n- In SCRUM only what should be done in the next sprint is thoroughly planned, so it's hard to estimate possible deadline for entire project - and that could be very important for product owner (Spiral Model has the same problem, because length of iterations is undefined) For example: Product Owner wants to announce release date of his game a few months earlier to have time for marketing (and not start it too early) It might not be possible with SCRUM\n- Hard to implement in larger project with many people working on it- SCRUM relies heavily on communication between project owner and SCRUM master, and between team members (On the contrary, Spiral model is designed for large projects) For example: If there are 20 SCRUM teams (normal size) working on the same project, product owner might not have enough time to evaluate progress of each team. And if it were only 4 SCRUM teams, but with more members each - it's difficult for SCRAM master to manage such team",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5621199,
      "meta": {},
      "text": "CORE ESSENCE OF SCRUM: Scrum is an AGILE development methodology based on iterative and incremental processes. Scrum is very adaptable, fast, flexible, and effective methodologygy, which is very adaptive to changes within and between the activities. That is, frequent changes can be handled easily.\n  \n Advantages over Spiral model:\n 1-It is agile in nature which leads to easy handling changes within the activity whereas the spiral model fails to handle such changes \n\nExample: If there is any change in customer requirement, it can be discussed in the daily scrum and resolved on the same day. for e.g client wants to change the look of the product, it would not be possible to make changes during curent iteration of spiral model, one needs to wait for the next iteration.\n\n 2-The scrum takes feedback from the product owner and stakeholders. In addition to that, it involves frequent interaction with customers leading to high customer satisfaction and better product .\n\nExamples: If there was a misunderstanding during requirement elicitation, it can be approached at the very beginning of the project as customer interaction is very frequent in the Scrum model, whereas it is too late to reimplement the whole part as the customer is contacted in later stages of the project in spiral model. In this way, using Scrum, products can be delivered within the deadline leading to higher customer satisfaction.\nCustomer said his shopping  app should be user friendly and the developers assumed that user should be able to place order within 6 clicks, but in the very FIRST feedback meeting(inSCRUM) with client, client said the order should be placed within 4 clicks. The issue was resolved at the beginning instead of at the point of product deleivery.\n\n Disadvantages of Scrum:\n1:  Scrum functions not very well for small projects, whereas the spiral model is considered suitable for small projects as it has a clearly defined set of steps. \n  \nExample: As there is less uncertainty in smaller projects , they can be lead using the spiral method because it will take less time and cost less money as compared to scrum. (SCRUM)As daily meetings must be held to deal with changes, which costs time and money, if there are no frequent changes there is no need for high spendings(regular meetings). A simple school student attendance application can be made using spiral without any need for scrum meetings etc.\n\n2:  Scrum does not involve intense documentation of project information, whereas the spiral model strongly emphasizes documentation throughout the project's lifecycle \n \n.\n\nExamples: If there are new members in the team, the thorough documentation of information in the s mpiralodel helps the new member to understand the project set up better, whereas, in the scrum, a team member has to explain everything to the new member which doubles the spent unproductive hours. A basic stock price-tracking app is under development using the spiral model as only standard parameters need to be considered. A team member leaves the company unexpectedly, but the new member can easily understand the project setup with the help of documentation. In the case of Scrum, it would have been a difficult task.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622785,
      "meta": {},
      "text": "SCRUM is a agile software development model that focuses on adapting to change during the development. In SCRUM you start with a product backlog, were all the goals of the project are written down, then the process is divided in various sprints. You choose some tasks from the product backlog and put it in the sprint backlog, the goal of each Sprint is to have an potentilly shippable product. \nAn advantage of SCRUM is its ability to adapte to change. After each Sprint the you may add new goals to the product backlog and if the client is not happy with the potentelly shipable product you can change it in the next sprint without losing valuable time. \nIn SCRUM it is easy to detect and correct undesirable behaviours during the project. After each Sprint there is a Sprint review where the team may discuss what went well during the Sprint and what not. If someone is not happy with the curent process it can easealy be changed for the next Sprint. \nAn disadvantage of SCRUM is that it is possible that you lose a lot of time with meetings that may not be very productive. There are 5 types of meetings and every day there is a stand up meeting where the progress of the project is discussed. This doesn't mean does meetings aren't necessery, it means that in SCRUM you need a little more effort for planning each phase of the project. \nOne thing that is important in SCRUM is that you must have a product in the end of each Sprint. In the beginnig of the project this may seem nonsense because you will create a product that doesn't really fulfills your final goals. Developers are pressured to not completly finish a task or a feature because they are focused on having a product in the end of the sprint.\nCompared to the Spiral model SCRUM offers a bit more of liberty to the SCRUM team. In the Spiral model you follow the iterations and at any time of the project it is clear what must be done. In SCRUM the team must decide which tasks they will do during the next Sprint.\n\n",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5622797,
      "meta": {},
      "text": "Scrum is an agile software development tool that offers the posibility to adapt quick to changes in the environment. It does so by constantly working on incremental products in sprints lasting upto 4 weeks at a time. If changes occur they are added to the backlog of items to be implemented to achieve the desired product.\nOne main advantage of Scrum is its adaptability dependent on changes in the requirements of the client. For example during the project the client may decide a certain design which can easily be added to the product backlog. Another advantage is having a working incremental product at the end of each sprint giving the oppurtunity to get feedback on a regular basis if the project is heading in the right direction or not and adding the oppurtunity to again refine the requirements backlog if necessary. But there are also disadvantages to Scrum, such as managing and coordinating with increasing team and project size. For example if a larger firm wants create a new complex application with high complexity the team size might become unmanagable for using Scrum methods such as daily standups. Another disadvantage might be the required expertise necessary to use Scrum correctly. For a firm to adapt the methodology the team must be trained use the framework correctly or its effective will suffer imensly. Most importantly the Scrum master must bring the required knowledge and tools for overseeing and instructing a project using Scrum.\nCompared to the Spiral model both are iterative models. The Spiral model follows a clear 9 iteration process trying to minimize and resolve risk in every iteration and if not succesfully the project is terminated. Scrum on the other hand goes through as many iterations as necessary to finish the project. Both models have prototypes at the end of each iteration, however the Spiral uses a linear model for prototype development wheras in Scrum everything is agile. Both models also plan their next iteration at the end of an iteration.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5619662,
      "meta": {},
      "text": "Die Idee von SCRUM ist, die Organisation einen Projekts m√∂glichst effektiv und ohne Verschwendung von Ressourcen zu gestalten. Wichtige Eigenschaften eines gelungene SCRUM sind Transparenz, Kontrolle und Anpassung. Ein SCRUM Team besteht aus einem SCRUM Master, einem Product Owner und mehreren Developers, wobei jeder eine klar definierte Aufgabe hat. SCRUM zeichnet sich durch verschiedene Arten von Meetings auf, die in regelm√§√üigen Abst√§nden dazu dient die Interessen aller Beteiligten auf einander abzustimmen.\n\nEin Vorteil von SCRUM ist, dass die Methode eine hohe Flexibilit√§t bietet. Die SCRUM Meetings bieten immer die M√∂glichkeit den jeweiligen Backlog anzupassen und somit neue Ziele f√ºr den n√§chsten Zeitraum zu definieren. Zum Beispiel wenn eine Br√ºcke gebaut werden soll, und sich die Anforderungen an die Br√ºcke zwischenzeitlich √§ndern (Beispiel aus der ersten √úbung), dann kann das im n√§chsten SCRUM Meeting besprochen werden und im n√§chsten Sprint Umgesetzt werden. \nDas Spiralmodell ist ein linearen Modell, folglich kann man sobald eine Phase abgeschlossen keine Anpassungen der Phase mehr vornehmen, wodurch das Modell weniger flexibel ist. \nEin weiterer Vorteil von SCRUM ist, dass die Kommunikation innerhalb des Teams gest√§rkt wird, was ma√ügeblich zu dem Erfolg eines Teams beitr√§gt. Bei Scrum steht das Team im Vordergrund. Durch die regelm√§√üigen Austausche sind alle Beteiligte immer auf dem aktuell Stand. Dadurch f√§llt es leichter, dass alle Mitglieder des Teams √ºber Ideen und Probleme diskutieren k√∂nnen. So k√∂nnen alle Mitglieder des Teams ihr Wissen einbringen und durch eine derartige Gruppendynamik entstehen einzigartige Ideen. Zum Beispiel im t√§glichen SCRUM Meeting werden alle Mitglieder des Teams auf den aktuellen Stand gebracht und k√∂nnen √º bei Ideen und Problem diskutieren, das st√§rkt die Kommunikation innerhalb des Teams.\nDas Spiralmodell legt ebenfalls wert auf Diskussionen innerhalb des Teams (z.B bei Risken), jedoch ist nicht so eine ausgiebige Kommunikation wie bei SCRUM geben (t√§glich).\n\nEin Nachteil von SCRUM ist, dass man bei der Fokussierung auf die einzelnen Sprints den Gesamt√ºberblick √ºber die komplette Projektstrecke verlieren kann. Da bei SCRUM die Konzentration auf dem n√§chsten Sprint liegt kann es passieren, dass man sich in Details verliert und das gro√üe Ziel aus dem Auge verliert. Ein Beispiel w√§re hier, dass man sich im n√§chsten Sprint immer um neue √Ñnderungen kommen (gr√∂√üere Br√ºcke) muss, wobei die Entwicklung des Projektes auf der Strecke bleibt und vielleicht nicht rechtzeitig fertig wird. Zum Beispiel dann lieber eine kleine Br√ºcke als gar keine. \nDas Spiralmodell ist ein linearen Modell, folglich wird zu beginn geplant und dann umgesetzt. Dabei bleibt das Gesamtziel immer im Fokus.\nDer Vorteil, dass die Kommunikation innerhalb des Teams gest√§rkt wird kann aus ein Nachteil sein. Die regelm√§√üigen Meetings stellen f√ºr die Teammitglieder auch einen hoher Kommunikations- und Abstimmungsaufwand dar. Zum Beispiel bei einem Team, dass die grobe Planung eines Projekts bereits abgeschlossen hat und einige Deadlines anstehen, kann es √ºberfl√ºssig sein noch ein t√§gliches SCRUM Meeting zu machen. Das wird dann zu einem Nachteil, wenn die Abstimmung zu viel Zeit ben√∂tigt, dass das Projekt nicht rechtzeitig abgeschlossen werden kann.\nDas Spiralmodell legt ebenfalls wert auf Diskussionen innerhalb des Teams, jedoch haupts√§chlich in Bereichen bei denen es um Risiken geht, dadurch beschr√§nkt sich die Kommunikation mehr auf das wesentliche und der Kommunikations- und Abstimmungsaufwand ist geringer als bei SCRUM.\n\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5619847,
      "meta": {},
      "text": "Scrum is a framework for developing, delivering and maintaining software products. It was created with the frequent changes a software engineering project is subjected to in mind. This is achieved by breaking the project down into small parts which are each being subsequently worked on in a goal-oriented way, in short time intervals, between which meetings are held.\n\nAn advantage of Scrum is that it works well in complex systems that are subject to constant change. For example, when a new operating system becomes very popular for certain devices, Scrum would allow the developers to adapt to the changed requirements and allow the software to support that operating system.                                          \n\nScrum ensures that there's a functioning and shippable product increment in regular intervals without having finished the complete project. For example, when the continuation of a project isn't possible anymore for any reason, Scrum would make it possible to salvage parts of the software for later repurposing.\n\nA disadvantage is that it might be hard to get used to for people who have no prior experience with Scrum or agile methods in general. It might be particularly difficult for instance, for the developers to get value out of the meetings, if the Scrum Master doesn't know what they are doing or the developers themselves don't know how best to communicate with the others in this setting. \n\nAnother disadvantage could be that Scrum is intended to be used with small teams. For example, if the \n big hardware and software company A wants to use Scrum for all of their engineering projects, it would be difficult to restructure their large workforce to allow engineering in small teams.\n\nThe Spiral Model is an iterative model meant to address the issues with the Waterfall-Model. The Spiral Model also has high adaptability to changing requirements but to a lesser extent compared to Scrum. As opposed to Scrum, the length of iterations in the Spiral Model is undefined, which might pose a problem in smaller projects or a larger project with a tight deadline. The Spiral Model produces software early in its lifecycle but there's it's not necessarily shippable unlike product increments in Scrum. The Spiral Model is also very technical and puts smaller emphasis on people and, pertaining to that, communication.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621488,
      "meta": {},
      "text": "Scrum is a technique that deals with interruptions(change) and work is performed in parallel. A project is divided into many tasks and after each periodÔºàSPRINT) several tasks are solved and an increment is produced. Then the product owner gives feedback and the team goes on to next Sprint with consideration of the feedback(change) and repeats the process until all tasks are completed.\n\nAdvantages:\n1. Agile to the changes: new requirements can arise and be fulfilled quickly\n2. Product Owners more satisfied: they see the requested result quickly\nExample: The team completed their first sprint and had an increment, which fulfilled the requirement of showing searching results. The product owner thought too many results are shown in one page and the new requirement is: users should be able to adjust the number of the results shown in one page. This requirement can be immediately worked on and fulfilled in the next sprint, which proves the agility to the changes. Meanwhile, the product owner can see if his new requirement is fulfilled in the very next sprint, which improves his satisfaction.\nDisadvantages:\n1. Not related to the project's deadline: only many smaller deadlines are made\nExample: In each sprint review meeting new requirements keep arising and the team has to deal with them in following sprints. It may slow down the progress and make the team not meet the project's deadline.\n2. Personnel change has negative impact\nExample: Anna in the scrum team quitted the job in the middle of the progress and a new member Tom comes. Tom doesn't get along well with the other members because they don't know a lot about each other. Now they cannot work as efficiently as earlier.\n\nBoth spiral model and scrum model are agile to changes and improve the satisfaction of product owners. Both have the difficulty in time management. Spiral model is suitable for big projects while scrum for small projects, so under spiral model there must be a larger team and the impact of little personnel change won't be a problem for spiral model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644508,
      "meta": {},
      "text": "Scrum:\ngreat and agile!\nIn Scrum you have multiple sprints (working periods of around 4 to 6 weeks) until the project is done. Before each sprint you think about what you want to have done after the sprint (but this could also change during the sprint) and what made it difficult to reach your goals last time. \nBecause you don't have to set the goals of the sprint months before, you're able to react to changes at least at the beginning of each sprint which makes it easy to react to changes in the requirements of the product. E.g. if the market analysis shows that the app you're developing needs a new dark mode you can (at any phase of the project) simply make it a goal for the next sprint and it will be done after that sprint. In the spiral model you are not able to change requirements after the second iteration and this feature could not be implemented. Another advantage of scrum is the regular retrospective which adds to the sharing of knowledge.\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 5644771,
      "meta": {},
      "text": "Scrum, in agile software development process, is a way to deal with interruptions and changes. Its core features are basically to adapt to the ever-changing requirements in the software development cycle. Team members hold regular sprint meetings to discuss their progress and are supposed to follow a list of rules to keep the development process more consistent.\n\nThe main advantage of scrum is that it fits the agile development process. Nowadays as software become larger and larger scaled, linear development process is really hard to be implemented and adapted since a software development team consists of lots of members. Thus scrum provides a great platform to make the software development process parallel.\n\nAnother advantage of scrum is that it improves communications and cooperations between different members in the software development process in order to enhance risk management. Since daily scrum meetings and regular sprints are hold, every team member has a clearer structure of the project and knows what the others are contributing for the project, which allows the team to cooperate with each other seamlessly.\n\nOne big disadvantage of scrum is that it requires extensive training. Scrum is not easy to be implemented and requires scrum masters and team members to be educated enough in order to make it works in an ideal way. Every single team member needs to understand and fully comprehend what scrum delivers in order to make sure that progress can be made.\n\nAnother disadvantage of scrum would be the fact that it is hard to be integrated into classic and traditional management approach. Since scrum is a modern and newly devised management system, it is drastically different to traditional working convention. The integration of these two might be extremely problematic for some teams or companies.\n\nComparing to the spiral model, scrum is definitely a more modern way to manage a team, since it is way more flexible. Spiral model, on the other hand, might be extremely not agile and would be hard for each member to comprehend the progress made within the entire project. Nevertheless for large software projects, it is easier to retain structural clearance and satisfy clients using the spiral model.",
      "score": 77.1,
      "language": "ENGLISH"
    },
    {
      "id": 5644984,
      "meta": {},
      "text": "Definition\nScrum is an agile-based project management framework. Scrum seeks that teams learn through experiences (empirical approach), self-organize while working on a problem (lower hierarchy) and reflect on their work (to continuously improve). This framework structures the work by sprints (2 - 4 weeks) which allows to provide value to the customer on a regular basis (each sprint), to receive constant feedback from the customer and also to be able to adapt quickly to changes in the environment.\n\nAdvantages of Scrum\n1. Provides greater control and flexibility in project management (especially in larger projects). For example, when developing a management system for a new university, Scrum would be notoriously advantageous because it would allow the client and developers to constantly monitor and validate the direction of the project and thus meet the needs of the university. This way the client does not have to wait until the end of the project to see the result or to be able to request changes at the last minute. It is common in large projects that there are changes from the customer and also from the environment.\n2. Scrum is efficient in resources and time. Considering the same example, in each sprint the development team will seek to validate and improve the potential incremental product with the customer. On the one hand, this avoids having large and costly changes at the last minute and on the other hand, it allows the team to discard and/or change functionalities with greater agility, which translates into less rework time.\n\nDisadvantages of Scrum\n1. When working iteratively, there is no clear scope or closing date for the project. For example, at the time of developing the system for the university, each sprint will be working on a new and improved version of the system that the university may already be using. This can generate some ambiguity since the product becomes a living thing that will not stop improving over time. It may cause some friction with more traditional customers.\n2. Requires customer involvement. In the previous example, if the client's team does not actively participate in the project, the developers will not be able to validate or receive feedback on their product, which will cause them to work without a clear direction and finally end up opting for a traditional work scheme.\n\nComparison with the spiral model\n\nScrum does not have project risk management, which is an important consideration in the Spiral Model. It relies more on agility and periodic meetings with the customer to make decisions on these issues. \nFor this reason, some experts claim that the Spiral Model is more suitable for long and risky projects.\n\nFinally, while Scrum is all about flexibility and adaptation during project execution, the Spiral Model can deal with changes between activities but does not allow change within an activity. The use will depend on the customer's needs at the time, it all depends on the scope of the project and the user requirements.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5620032,
      "meta": {},
      "text": "Scrum is a agile development method where you start with a list of features (Product backlog). Every 2 - 4 weeks you start with a part of this list and try to implement these features. After this time you end up with a shippable version of the project and you start with another interval until you think everything important is implemented. \nThe first advantage of scrum is you get a shippable version regularly. This means you can show your client every 2 - 4 weeks a functional version for examle. Furthermore, Scurm breaks big projects into smaller pieces. This means e.g. that if your project is large, complex and confusing it will be much easier to manage.\nOn the other hand, it is really hard to hit deadlines because they are not defined clearly. For example if you implement every 2-4 weeks some features it is really hard to guess how much longer it will take, because scrum does not set end-date deadlines. In addition, if the developer team becomes to large people get confused and organizing every task get really hard. For example meeting with 10+ members just to communicate daily tasks is not very effective.\nThe spiral model does have a shippable version after each iteration as well. But it breaks a project in each problem/feature and tries to solve them separately. But it is not as agile as Scrum because it does not include frequent meeting etc. . As far as it goes with deadlines, you have the same problem. Because you plan just each iteration and not the complete project. Because everybody is working more separate it can manage more people.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620205,
      "meta": {},
      "text": "Scrum is a technique for managing software development with a focus on the change that will occur during a project. A sprint takes 2-4 weeks in which certain tasks are taken over from the product backlog which describes the planned activities. Having improved communication in daily meetings, a potentially shippable product increment is delivered at the end of every sprint.\n\nAn advantage of SCRUM is the efficiency in terms of time and money invested. By delivering product increments regularly, the satisfaction of both client and the team will increase. Estimating the required time and delivery is very difficult in the Spiral model, since objective, verifiable milestones are missing.\nAlso, visibility though SCRUM meetings is enhanced. For example, communication will be enhanced when team members know about the current tasks their colleagues are working on. Since regular meetings are not predefined in the Spiral model, visibility depends on the individual situation and is likely to be missed.\n\nA disadvantage of  SCRUM could be that the required constant team setup may lead to problems or even failure of the project. For example, fluctuation of a project member to another project could have a huge impact on the overall outcome, since knowledge is lost. Here, the Spiral model is more flexible in terms of team setup.\nAlso, daily meetings can be time-intensive and frustrating for the team, when the time required feels wasted. The Spiral model does not predefine narrow requirements and allows more flexbile communication channels.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623176,
      "meta": {},
      "text": "Scrum is an agile software development method. Idea of the Scrum is to divide work to smaller subtasks noted in product backlog. These tasks are tackled in sprints, usually length of approximately a month. Scrum has product owner, Scrum master and developers.\n\nGreat advantage of Scrum is that it enables parallel working. For example in Spiral testing is done after coding, but in Scrum it can be done during all sprints. This way some members of the team can begin testing already before all code is implemented and improve efficiency.\n\nIn Scrum number of the sprints is not predefined. A new sprint is started after old one ends until product is ready. Spiral usually consists of nine iterations, but length of each iteration is not predefined. Scrum differentiates in this aspect. Length of each sprint in Scrum is constant. This makes monitoring of progress of project easier. In sprint review Scrum master discusses with other team members how last sprint went and this is a great place for improvements in working or in the product backlog. \n\nDaily Scrum meetings help team to recognize and react to risks and changes. If one team member notices a problem he has an easy way to communicate this to whole team in an early stage and other team members can take that in to consideration in their work. On the other hand these daily meetings can become time consuming if they are not well organized. Also Spiral tries to recognize problems and discuss results, but the interval between these discussions can stretch since length of each interval is not defined beforehand.\n\nOne problem of the Scrum is that it can be hard to scale for bigger problems, whereas Spiral is considered to fit best for big and complex projects. Usually Scrum teams have less than 10 members. Meaning that if the product is big development time would increase to too long. One solution to this is Scrum of Scrums where different teams work on different parts of the product.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621643,
      "meta": {},
      "text": "SCRUM is a repeating the process of 2-4 weeks called sprint, which has tasks to be done. These tasks are called sprint backlog and are selected from product backlog at the scrum planning meeting which holds before the every start of the sprint. The team reviews their work and status every day, every end of the sprint to adjust their goals and tasks. \n\nThe SCRUM method has some advantages over the Spiral model. First, it is more suitable for the smaller projects than the Spiral model, since it requires less resources. For example, the Spiral model costs relatively more than the SCRUM, because of the risk analysis and requires highly specific expertise. Also, it's better way to improvise and to have more interactions with customers. The team can deliver the product at the end of each sprints, get feedbacks from the customers and adjust their goals and deal with the changes. For example, if the customers gave negative feedbacks, the team can add or modify the tasks in product backlog and deliver the product again after the sprint. This advantage is that the spiral model does not have.\n\nHowever SCRUM also has disadvantages. It might make it hard to keep the project's deadline. It involves many sprint deadlines, but it does not guarantee all the tasks can be done in its overall deadline. For example, the team may not be able to complete all the tasks in the sprint. If this situation is repeated, project deadlines may not be met. However, this is the same for the Spiral model. Also it lacks the risk management relatively to the Spiral model. For example, the Spiral model has a step to identify and resolve the risks, but Scrum doesn't.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623165,
      "meta": {},
      "text": "Scrum is an agile way of developing software whose main focus is dealing with change. To achieve this scrum uses sprints which are short time spans where the team tries to solve certain tasks. After each sprint the situation is evaluated and a new sprint is organized.\n\nTwo major advantages of scrum are that there always is a shippable product and that one can test practically from the very start of the project onwards. The first advantage can be of great importance if the customer needs a working product as soon as possible. While not all functionalities might be implemented yet the result of a sprint nevertheless always is a working product and the customer might be able to use it. The missing functionalities can be added in further sprints. The second advantage is great as we do not have to wait with integration or system testing until the whole project is finished. If any problems occur while testing the team can react accordingly and quickly thanks to scrum.\n\nTwo disadvantages of scrum are that it is difficult to scale and it requires reorganization within the company. The first one is owed to the very nature of scrum which is communication. One of the goals of scrum is to improve the communication with team members which is only possible in fairly small teams. As a manager it can be hard to direct and manage a lot of small teams. Furthermore, as scrum requires smaller teams than other models, many teams within the company have to be restructured which can be a lot of work for a big company.\n\nIn comparison, the spiral model does not always deliver a working product but only does so at the end of the entire process. To continue, testing also is not done while writing the code but after it has been written. However, the spiral model is more fit for larger teams and is therefore a lot easier to scale as it does not require a manager to look after a lot of different teams. Naturally the company does not need reorganizing either.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644415,
      "meta": {},
      "text": "SCRUM can be best understood as a non-linear process of solving problems. It is used as an agile software lifecycle model and it is used as an empirical method to the problems. SCRUM contains product backlog in which one delivers requirements, sprint backlog, in which one prioritizes the requirements, weekly meetings and daily SCRUM meetings and a deliverable product after this SCRUM session.\n\nAs one can see first SCRUM can be used for chunking large projects into smaller projects. Since these sub-projects would be implemented in a parallel way, there is no need to worry about whether the product will be deliverable. For example, we need to reimplement a whole class. By chunking reimplementing this class into smaller projects (for example changing the method, changing the issue) it can be done more easily. In a Spiral Model however, we are planning on a linear system which actually is not very easy to implement because if there is an issue in a first step then we must stick to that issue and can't concentrate another issues.\n\nAnother advantage of SCRUM is that it has a great feedback loop. Since one can experience it very harshly in a Spiral Model based system, there is not a great feedback loop since there is an if-else case in every single project in Spiral Model. If the risk has been resolved, then it is okay. If not, then terminate the project. In SCRUM however, with daily meetings and SCRUM meetings one can get feedbacks from other developers very rapidly, leading to more communication and less error. Without meetings for example, there could be lower efficiency.\n\nHowever, there are also some disadvantages of using SCRUM. One above all is that everything runs in parallel so, even though it is more time efficient, in a worst case for example where all the projects are undermined by some risks then it would be really hard to assign each risk to each developer and let it be done. However, in Spiral Method there is a linear system and also a more detailed insight to the risks and observations which makes the structure of a project more stable.\n\nAnother disadvantage of SCRUM would be the stack of each and every developer's role. Since it is one of the most agile models, one can jump from one project assigned to her/him to another, leading to inefficiency in each and every project this developer has been assigned to. However, in a Spiral Model, one can not do that because it is more stable.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644653,
      "meta": {},
      "text": "Scrum is one realisation of the Agile Framework on how sustainable Software Development Lifecycle should look like. It's core characteristic is adaptability, or \"embracing change\" - keeping high dynamics within teams by means of frequent interactions (= scrum meetings). This is also achieved by incorporating iterative & incremental approaches, which translate into \"prototyping from day one\" and iterating over this MVP (Minimum Viable Product) throughout the lifecycle.\nScrum's agility is a mix of previous lifecycle models' ideas, including the Spiral Model's, with an additional priority on flexibility.\n\nADVANTAGES\n1. There is always a working product increment (MVP) available, which means a minimum time until deployment and maximum amount of small changes. This is also great e.g. for vertical testing right from the beginning.\nSpiral might also iterations, but they rather follow up on each other, with the testing being done in later iterations.\n2. Scrum can be means of organisations to flatten hierarchies & enhance productivity. Though this surely is desirable, it also requires discipline and the openness of employees to unfold its value (as mentioned as the second disadvantage). Spiral on the other hand typically is steered by some form of top-down management.\n\nDISADVANTAGES\n1. Scrum is designed for small teams (not more than 10), expects teams to be together for a given period of time (from Project-Kickoff to finish, usually <1 month) and also to be close to each other during development (Standup Meetings). Spiral on the other hand is much more flexible in that regard, which makes it easier to control processes of globally operating teams and varying sizes.\n2. Scrum relies on openness of its team members during \"Daily Scrums\" and \"Sprint Reviews\" to unfold its full potential. Without collaboration Scrum will not come to value and organisations may fare better choosing Spiral due to its more linear nature as far as project \"checkpoints\" within its four activities (that make up one iteration) are concerned.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644827,
      "meta": {},
      "text": "Der Kern in der Softwareentwicklung mit Scrum liegt in der Agilit√§t und der damit verbundenen schnellen Reaktion auf changes w√§hrend der Entwicklung. Die Entwicklung wird parallelisier und das Riskiomanagement durch ausgepr√§gte Kommunikation und der regelm√§√üigen Aktualisierung der \"product increments\" gef√ºhrt - Unterst√ºtzung durch Teamaufteilung, wie auch durch ein vorgegebenes empirical control model (auch agil).\n\nDer offensichtlichste Vorteil liegt in der Agilit√§t und schnellen Reaktionsm√∂glichkeit. Anforderungs√§nderungen k√∂nnen schnell aufgenommen und k√∂nnen schon im n√§chsten Sprint bearbeitet werden (Sprintbacklog). \n\nEin Videoportal f√ºr einen Tennisverein soll nun auch noch Bilder verwalten. Diese Anforderungs√§nderung wird dann in den Produkt Backlog aufgenommen - so auch irgendwann in den Sprint backlog.\n\nDer Hauptunterschied zum Spiralmodell ist, dass das Spiralmodel nur √Ñnderungen zwischen verschiedenen activities erlaubt, jedoch nicht in einer - weniger Agilit√§t.\n\nEin weiterer Vorteil in Scrum ist, dass nach jedem fertigen Sprint ein auslieferbares Produkt existiert, welches dem Auftraggeber pr√§sentiert werden kann - Minimierung des Risikos der Unzufriedenheit und fr√ºhes Feedback.\n\nBeispiel: eine Management-Software f√ºr Noten. Durch ein fr√ºhes shippable product k√∂nnen die Lehrer schnell zur√ºckmelden, wenn f√ºr sie wichtige Funktionen nicht wie gew√ºnscht funktionieren/unintuitiv sind.\n\nIm Spriralmodell √§hnlich: es wird in der dritten Phase die n√§chste Version des Produktes entwickelt, um sie dann in der Vierten dem Auftraggeber zu pr√§sentieren und Feedback einzuholen.\n\nNachteil bei SCRUM: Stark auf Feedback des Auftraggebers angewiesen - fehlt  dem Auftraggeber eine konkrete Vorstellung des Produktes oder es gibt h√§ufige √Ñnderungen, so geht der rote Faden schnell verloren.\n\nBeispiel: Entwicklung eines Shops: jedes mal soll die Ansicht ge√§ndert werden. Dieser Wunsch wird jedes Mal in den Backlog aufgenommen, angepasst und muss wieder verworfen werden.\n\nDies ist beim Spiralmodell √§hnlich - jedoch wird hier versucht durch ausgepr√§gte Risikenminimierung solchen Entwicklungen fr√ºhzeitig entgegenzusteuern.\n\nEin weiteres Problem von SCRUM liegt in der Nichteinsicht der gesamten Produktionsstrecke. Somit ist das Absch√§tzten von Zeit und Kosten fast unm√∂glich.\n\nF√§ngt ein Projekt zur Erstellung einer Website f√ºr eine andere Firma, an, so wird ein Prodctbacklog erstellt - Dinge aus dem Sprintbacklog k√∂nnen jedoch einfach in den n√§chsten Sprint mitgenommen werden: Zeitraum uneinsichtig.\n\nSpiralmodell: immer weitere Iterationen der Phasen: Einsch√§tzten von Zeit und Kosten schwierig (jedoch Distanz zum Mittelpunkt Gesamtkosten).",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621458,
      "meta": {},
      "text": "SCRUM incorporates changing requirements and is more flexible compared to iterative models like our Spiral model. For SCRUM the project will be broken down into smaller tasks that can be solved within a certain timeframe of a sprint. A Sprint includes the Sprint planning to set the goals for the sprint, the Sprint review for reflection on the outcomes and changes that need to be made to the product backlog, which contains all the project tasks and the sprint retrospective, which provides feedback and tries to enhance quality and effectiveness.\n\nThe main benefit of SCRUM would be to adapt to changes significantly faster and more efficiently compared to the spiral model in case one of our clients changes their mind or comes up with different requirements. During the sprint review these changes can easily be added to the product backlog and then be implemented in one of the next sprints. \nThe new model would also be more transparent. The stakeholders in our company as well as the developers would interact in different sprint meetings and thus be informed about the state of the product as well as progress and expectations. Whereas the iterative spiral model does not contribute to much interaction and engagement.\n\nFor more mature products and legacy systems the SCRUM method could be counterproductive, since a product incrementation needs to be fully tested and developed in a single sprint. Hence, if vast safety and regression testing is required the spiral model would be more suitable since the testing occurs at the end. But since most of our projects are innovative and fast-paced the SCRUM model will most likely be preferable.\nDespite of having many benefits SCRUM can potentially prolong a project substantially and even lead to failures of sprints. With a lot of changing external requirements from stakeholders and high user acceptance testing the planning of sprints gets more complex and prone to delays which can be detrimental to the project in terms of missing deadlines.\n\nOverall, the SCRUM model possesses great potential for enhancing the work environment and style of our startup.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 5621669,
      "meta": {},
      "text": "How scrum works:\n‚Ä¢ First, you define a product backlog, which is basically a to-do list of everything you need to create/develop. \n‚Ä¢ Then you have multiple Sprints, in which previously defined parts of the product backlog (the spring backlog) get implemented, during which there are daily meetings to discuss progress and after which you reflect on whether you managed everything you wanted to do in said Sprint. \n‚Ä¢ After each Sprint you have a potentially shippable product increment. \n\nPros of Scrum:\n‚Ä¢ Very adaptive: If a requirement changes, you can be very fast to respond to those by including them in the next sprint.\n‚Ä¢ After each sprint, you have a working product. While it may not be complete yet, you have something that works and can be shown off to get valuable feedback early on to know if you correctly understood the customers need. \n\nCons:\n‚Ä¢ Using scrum with very large teams can be challenging: Because there are so many people, it can be difficult to know who should work on which part of the sprint backlog as you don‚Äôt necessarily have fixed roles.\n‚Ä¢ Defining the sprint backlog can go wrong: If you don‚Äôt choose enough tasks, you waste time and the entire project takes longer, but if you choose too many, the developers might not manage to implement everything in that sprint, so some things have to be postponed and the ‚Äúpotentially shippable product increment‚Äù might not be working.\n\nCompared to the Spiral Model:\n‚Ä¢ Spiral Model provides little advantages for smaller projects because you have a lot of overhead.\n‚Ä¢ Both models can respond to requirement changes and communicate with the customer early on.\n‚Ä¢ Spiral model handles risk very well due to analysis of risks, whereas scrum does not \n‚Ä¢ With the spiral model, it‚Äôs hard to predict how much work is needed until a product is finished (number of phases is unknown), but with scrum you can see by looking at the product backlog how close to completion you are.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644412,
      "meta": {},
      "text": "TO begin with, Scrum is a framework, which allows people to tackle highly adaptable problems. In contrast to the spiral model, scrum is an agile model. It is built to adapt through changing product requirements and improve risk management in case a change of requirements occur. Like the spiral model, scrum is iterative.\n\nThere are several advantages of scrum. The first one is that there is a high communication between the team and the customer, as after each sprint, the customer can review increment and give feedback. For example, the team developes an engine program for a car, after the sprint the customer can already look at the engine and they can then discuss what the customer like and dislike. In comparison to the spiral model, the spiral model has less interaction with the customer. \n\nAnother advantage is that the team can easily adapt to the change in requirement, due to short sprint sessions. For example, the aforementioned engine program, if the customer doesnt like a certain implementation, the team can simply add it to the sprint backlog and recktify it within the next sprint. Back to our spiral model, while it is also highly flexible, it focuses on risk handling, while agile seeks to please the customer.  \n\nNow to the disadvantages, usually the methods developed during scrum is not tested enough, since the testing is usually during sprint review. For example, not testing the car engine enough will lead to program failures in the future. In contrast, the spiral model is specialised to risks, and are less prone to these problems.\n\nAnother disadvantage is that the individuals have to be trained in the agile method, not every programmer possess the skill of agile working.  For example, since we are use to the spiral model, transitioning to scrum will require training and time. Bad execution of scrum leads to chaos within the team. Similar to scrum, the spiral model, individuals also need training to properly execute the framework.\n",
      "score": 87.5,
      "language": "ENGLISH"
    },
    {
      "id": 5644417,
      "meta": {},
      "text": "Scrum is a technique from software developers as teams to solve tasks from clients that also approach the client and daily/week teams' feedback in between the process. Scrum divides the task into 3 team roles which are product owner, scrum master, and development team.\n\nAdvantage: \n1. The amount of daily/weekly meetings could be an advantage. During meetings, each team can convey their problems and difficulties to other teams and that may help them to find solutions and broaden their point of view. Even though the spiral model is also an iterative model, the iteration isn't as often as scrum, and it's divided only into 4 major activities.\n\n2. By including the customer as a team, we are sure that the end product is what the client wanted. The same as scrum, spiral model also will iterate the process with customer feedback and customer also evaluate the product in every phase. \n\nDisadvantage:\n1. The second point of our advantage, could also be a disadvantage. Including clients in the process, it may make it harder and more complicated for the team if the client keeps changing their needs and it also could affect the deadline, and this also applied to spiral model.\n\n2. By using scrum it may be harder to receive the goal of your project because separate teams may have different opinions on how to approach the goal. not to mention the amounts of daily/weekly meetings that occur on scrum. which could lead to various and complicated approaches. Even though the spiral model also has iteration, it has clearer phases and stages of execution, and if the risk could not be resolved the whole project will be terminated.\n\n\n(partly taken from my last year's answer)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644738,
      "meta": {},
      "text": "Scrum besteht aus einer Gruppe von Entwicklern, einem Besitzer, der die Anforderungen stellt und einem Scrum Master, welcher die Entwickler und deren Fortschritt √ºberwacht. Der Arbeitsbetrieb besteht aus t√§glichen Meetings, in denen sich die Entwickler absprechen k√∂nnen und meist mehrw√∂chigen Sprints, die ein potentiell fertiges Produkt liefern. Innerhalb mehrerer Sprints wird dann ein vollst√§ndiges Produkt erstellt.\n\nVorteile:\n- Bei Scrum muss nicht ganz so umfangreich geplant werden wie bei anderen Modellen. So kann T√§glich das heutige Vorgehen geplant und daraufhin auch beurteilt werden.\n-> Beim Spiral Model wird viel Zeit in der Planung und Entscheidungsfindung verwendet.\n\n- Es gibt mehr Kommunikation, wodurch besser gearbeitet werden kann. In den Meetings k√∂nnen die Entwickler absprechen und zb. Fehler oder Verwechslungen verhindern.\n-> Das Spiral Model enth√§lt auch viel Planung aber nicht w√§hrend der L√∂sung einer Aufgabe.\n\nNachteile:\n- Es wird sehr viel Zeit damit verbracht sich mit den anderen Entwicklern zu beraten. Angenommen ein Meeting dauert eine Stunde, dann geht die t√§glich von der Arbeitszeit verloren, auch wenn die Gespr√§chsthemen nicht f√ºr jeden Relevant sind. \n-> Im Spiral Model gibt es eher eine gro√üe Planung pro Iteration. Demnach erst, wenn es wieder ben√∂tigt wird. \n\n- Zu dem zusammenstellen der Sprints ist nichts vorgegeben, dadurch kann es zu Unregelm√§√üigkeiten bei schlechter Planung kommen. Wenn zb. die Komponenten eines Sprints stark voneinander abh√§ngen, ben√∂tigen die Entwickler noch mehr Zeit sich abzustimmen.\n-> Das Spiral Model gibt vor, das mit den schwierigsten Sachen begonnen werden soll.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5620266,
      "meta": {},
      "text": "SCRUM is a framework that helps people to generate value through adaptive solutions for complex problems. It essentially requires the team (or an organization) to split into three roles: 1) Scrum Master, who ensures an environment where 2) a Product Owner orders the work for a complex problem into a Product Backlog, 3) The Scrum Team turns a selection of the work into an Increment of value during a Sprint, and The Scrum Team and its stakeholders inspect the results and adjust for the next Sprint. The process is repeated throughout the whole duration of creating a product.\n\nAdvantages:\n\t1) It is easy to implement changes. For example, when the product owner comes up with a new functionality they want to be implemented, there is no need to start the project from the beginning - the change can be simply implemented in the next sprint. That is similar to the spiral model, where additional functionalities or changes can be implemented at a later stage as well\n\t2) The product more often than not gets delivered at the right time. During the SCRUM bigger problems are broken down to smaller ones and therefore, it is easier to keep track on them and solve them. However, in the spiral model there is always a risk of not completing the project in time due to its complexity.\n\nDisadvantages:\n\t1) The Scrum methods work best when the team is small. For example, in a team bigger than 4 people it becomes hard to communicate and communication is key. In spiral model the number of developers is not a problem.\n\t2) It is usually hard for developers to adapt to Scrum model if they have never done it before. In Scrum, there is no one who oversees one's work and the developer has to be responsible for his work and meeting the deadlines himself. And sometimes it turns out to be a challenge. For example, a developer who has just begun to work in SCRUM model has to adapt to a whole different approach to his work and it can cause delays. In spiral model the timeline of the process of creating a product is linear and it is easier to adapt to it.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620910,
      "meta": {},
      "text": "About Scrum:\nScrum is a methodology that aims to smoothly deal with the interruption and change that arises during software development. Its focus on communication and cooperation leads to an improved risk management, as well as a constant increment on the minimum viable product. Scrum is built around sprints: time intervals where the team discusses the goals to be achieved at that interval, divide and assign tasks, and work on them while having daily scrum meetings to share their status, impediments and promises. After each sprint, the product is shown to the product owner and stakeholders to get feedback, which is later considered during the sprint retrospective, which inspects the previous sprint and creates a plan for improvement for the next sprint.\n\nAdvantages and disadvantages:\nDespite Scrum's overall efficiency, the model can also end up failing if the team member's aren't fully committed to the project or how the methodology is executed. On the same note, some members might struggle with Scrum's approach to working. Furthermore, such levels of communication are easy within small teams, but complicated with bigger teams. For example, daily meetings can end up frustrating inexperienced team members by making them have to present their progress every single day in front of large groups of people.\nHowever, in the long run and being adapted correctly to the available ressources, Scrum provides a higher quality of the end product. By breaking down big tasks into smaller and easier-to-work-on tasks, the team can opperate in the most efficient way possible. Adittionally, since the goals are flexible, a Scrum project can accomodate change effortlessly by implementing it in the upcoming sprint. \n\nIn comparison to the Spiral Model:\nAlthough both Scrum and Spiral models execute iterations, the Spiral model does not deal well when change happens during an activity, but rather waits until a full cycle is finished to deal with it. This, in the long run, turns the model inefficient.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621258,
      "meta": {},
      "text": "The core essence of Scrum describes a methodology/an agile framework where people are able to address complex problems as well as in parallel deliver creatively & productively products of the highest possible value. The Scrum framework consists of a Scrum Team with predefined roles (e.g. product owner or Scrum master) and several steps (e.g. sprint review meeting) that have a specific purpose to react - in sprints - on changing requirements of a potential (customer) project.\n\nPros:\n+ Lower Costs/Complexity:\nScrum as an agil framework lowers the costs of projects due to several reasons. The spiral model, which is best used in large, complex or expensive projects, is not suitable for small projects as it is Scrum. Exemplary Scrum has lower costs due to a reduced overhead which results from reducing unnecessary control requirements & documentation. The spiral Model needs to follow protocols which increases documentation and results in complexity. \n\n+ Time-to-Market/Time Management: \nCompared to the Spiral Mode, with 9 Iterations each 4 phases, Scrum has not such a thing or better to say as a min/max Sprint count. A project is done, when the customer is approved it. On shorthand you can deliver minimal viable product increments, where you get fast feedback from stakeholders/customers e.g. through the App Store feedback function which then can be implemented again. Compared to the Spiral Model, where it is hard to manage time, because the number of required phases is often unknown within a project. That makes time management almost impossible and often results in the risk for falling behind schedule or worst going over budget.\n\nCons:\n- Risk management: Scrum lacks in risk management compared to the spiral model. As Scrum is empirical you only plan the risk for one iteration. The Spiral model highly focuses on the risk analysis & the evaluation of alternatives in each iteration. E.g. within the spiral model the risk of a failed dev. process is minimized due to the regular controls & continuous documentation.\n\n- Chances of project failure is high e.g. if individuals aren't very committed/cooperative during constantly changing requirements. So it can led to frustration within the team. For example team members get frustrated by the daily meetings because it's not their working style. Training and skills are required and even sometimes an organizational transformation is needed to make it successful and work collaboratively as it is intended in Scrum. The Spiral Model doesn't have these problems as it's not agil as Scrum. \n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622229,
      "meta": {},
      "text": "Scrum ist eine agile software development Modell, die sehr gut f√ºr die Entwicklung der software geeignet ist, deren Anforderungen sich h√§ufig ver√§ndern. Scrum ist wie eine Schleife, deren jede Iteration(Sprint) mit fixierter Dauer eine potentiell lieferbar Produkt produziert. Dabei werden die Aufgaben jeder Iteration(Sprint backlog) vor dem Begin jedes Sprints aus der Liste aller Aufgaben(Product backlog) rausgezogen. \nVorteile von Scrum:\n1. Scrum kommt sehr h√§ufige Ver√§nderungen in den Anforderungen aus. Z.B. entwickelt man einen Spiel, die in h√∂chstens 3 Schritte starten soll. Diese NFR wir nun in Sprint backlog hinzugef√ºgt. Danach beginnt Sprint. Pl√∂tzlich m√∂chte product owner, dass das Spiel in h√∂chstens 2 Schritte starten muss. Das kann man in diesem Sprint auch ver√§ndern und alle auftauchende Seiteneffekte in sp√§teren Sprints entsorgt werden.\n2. Scrum zerlegt das ganze Projekt in kleinere und leichtere Teile. Z.B. bekommt man eine Aufgabe in der man einen Sobel-filter entwickeln muss. Aus erster Sicht ist die Aufgabe ziemlich kompliziert. Aber wenn man diese Aufgabe in kleinere Teile zerlegt, scheint die Aufgabe nicht so schwierig zu sein als vorher. \nNachteile von Scrum:\n1. Fixe Zeitgrenze. Z.B. bekommt ein Team f√ºr einen Sprint ausschlie√ülich Aufgaben, die sehr schwierig sind und viel neues Material enth√§lt. Dann braucht dieses Team mehr als einen Sprint, was den ganzen Entwurfsprozess langsamer macht.\n2. Ist effektiv nur mit erfahrener und einiges Team. Z.B. bekommt ein neu erstelltes Team, deren Mitglieder einander kaum kennen, Aufgaben zum Sprint, dann wird dieses Sprint h√∂chstwahrscheinlich misslingen. \nWenn man Scrum mit Spiral Model vergleich, dann stellt man fest, dass Scrum flexibler zur Ver√§nderungen in Anforderungen als Spiral Model ist. Bei Scrum wird die ganze Aufgabe in kleinere Teile zerlegt, was f√ºr Spiral Model untypisch ist. Aber bei Spiral Model gibt es keine Zeitgrenzen f√ºr jede Iteration wie bei Scrum. Aber f√ºr beiden ist es typisch, dass diese Modelle nicht effektiv bei unerfahrener und uneiniges Team.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644287,
      "meta": {},
      "text": "Scrum is a solution for interruptions(change).It can restart the processes after an interruption.Because it has the iteration,it is a good model for the product or software which have rapidly changes(product owner update new requirements).In every iteration(sprint) it can manage and correct some requiremnts and tasks and also make the plan for next iteration(sprint).Every iteration the team can receive the feedback from the product owner,and improve it in the next sprint.The team will have more time to communicate with the product owner and deliver product increment.All of them improve risk management.But Scrum only works when the work is performed in parallel,because the team members always work in small groups with different tasks,and integrate datas or outcome together at the end of the iteration.\n\nAdvantage:\n1. More customer involvement: Customers are users of the software . Without customer involvement, it is difficult for developers to understand the real needs of customers.\nNow our team must develope a new software,and in our development process,customers often have new needs,and they hope to check the process multiple times to facilitate modification.In this case our team decide to choose the scrum model,and at the end of each sprint,the customers can check the new software ,and make a suggestion.\n2. Greater flexibility and stability,better respond to changes.\nNow our team must develope a new software,we initially designed several functions,but we are not sure if these functions will be added or modifed.In this case we use Scrum model to finish the work,so we can change the plan in each iteration and not cause so much unnecessary consumption).\nCompare:If we use spiral model,only if an activity is completely finished,the next one can start,if we want to change something,we need to wait for this activity finish,and it cause too much time and also the resourse consumption.\n\nDisadvanatge:\n1. Now our team develop a new software,and use the Scrum model,in each iteration the customers always give many feedback,which means we need change more tasks in next iteration.There are a lot of tasks,and now we also need to add ,delete or change tasks,unfortunately the customers do not give us too much time .Resigned due to changes in goals,which ultimately resulted in us not being able to deliver on time\n\n2. Projects that use scrum model generally have less clear goals,due to constantly changing customer requirements.The team will feel more pressure at the beginning and take up a certain amount of working time.\nCompare: unlike scrum, spiral model do not have this problem.The task of every activity is stable.\n\nDifference between scrum and spiral:\nDifferences:\n1. different use of core method(iteration):\nSpiral model:each cycle of this model consists of 4 phases(requirements definition,risk analysis.engineering realization and review),and iterates through these 4 phases.And the waterfall model method will be used in each project phases. \nScrum model:the purpose of each iteration is to complete a list of tasks and requirement,release to the product owner,and create the new plan for next iteration.\n\n2. different dimensions:\nSpiral model:do not say any specific methods,just described the abstract concept of iteration\nscrum model:is iterative development,which include a complete implementation method,and is practicable",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644796,
      "meta": {},
      "text": "In Scrum teilt man Aufgaben auf mehrere Sprints auf. W√§hrene eines Sprints gibt es t√§gliche Meetings, um den Fortschritt und m√∂gliche Probleme zu besprechen, und die Kommunikation zwischen einzelnen Gruppen aufrechtzuerhalten. Am Ende eines Sprints hat man die erste Version des Produkts fertig und plant, welche Themen im n√§chsten Sprint bearbeitet werden sollen und was man im Vergleich zum vorherigen Sprint verbessern k√∂nnte.\nScrum hat den Vorteil, dass es regelm√§√üigen Austausch zwischen Teilgruppen gibt, sodass der Code von allen Gruppen gut aufeinander abgestimmt ist. Beispielsweise k√∂nnen Gruppen wenn sie wissen, dass eine Funktion in einem bestimmten Kontext besonders oft genutzt wird, den Code auf dieses Szenario anpassen um durchschnittlich bessere Laufzeit zu erhalten. Ein weiterer Vorteil ist, dass man fr√ºhzeitig auf Probleme und √Ñnderungen reagieren kann. Wenn man erst bis zum fertigen Produkt wartet, bevor man Sachen √§ndert, verschwendet man nur Zeit, Aufwand und Kosten. Durch die t√§glichen Meetings kann, wenn beispielsweise der Kunde seinen Auftrag √§ndert, schnell darauf eingegangen werden und dir Arbeitsziele f√ºr den Sprint entsprechend angepasst werden.\n\nIm Vergleich dazu schreibt das Spiralen Modell keine Meetings vor. Dadurch kann es zu Kommunikationsproblemen zwischen den Teams kommen. Auch wird dort strikt eine Sache nach der anderen gemacht, theoretisch werden zwar Teile wiederholt, aber sobald etwas abgeschlossen ist, sieht das Modell nicht vor das Thema wieder aufzugreifen. Sp√§ter auftretende √Ñnderungen kann man in diesem Modell also nicht behandeln.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 5645032,
      "meta": {},
      "text": "SCRUM is an agile software developement process focused on dealing with changing developement requirements, by dividing total developement time into so called \"Sprints\", developement periods where after each a shippable product increment should be finished. According to the end review of the previous sprint adjustements to the product feature backlog and the new sprint backlog can be made, there maintaining flexibility when assessing the products featureset and requirements.\n\nAdvantages:\n- Vertical Integration: shippable increment after sprint allows for end to end testing, therefore increases robustness of end product. Also allows for easier accomodation to changing deadlines.\n\t- example: Web Application, when Frontend and backend are both working, end to end testing of CRUD operations can be done\n- Increased Communication: in each sprint review there is direct communication between (changing) requirements (Product Owner) and provided features (Team Members). This assures that that the product in developement never moves to far from client requirements, and that the developers know exactly what is expected of them.\n\t-example: Client communicates disapproval of a design decision with the product owner. Instead of the Team Members continously doubling down of this decision during further developement, further reducing client satisfaction with the end product, the owner communicates the clients interest during the next sprint review, and plans can be readjusted accordingly.\n\nDisadvantages: \n- Demands a larger workforce for large projects: To deliver a shippable increment after each sprint, a considerably larger team of developers is required to actually develop all parts of the vertical integration in parallel, especially for large projects.\n\t-example: web dev, while a single full stack developer could move from backend to front in a linear process, with SCRUM it would be necessary in a larger project to employ more specialised team members to work on each part in parallel as to archieve shippable increments in time.\n- Complicated management: Due to the agile nature of scrum long term planning for managers becomes harder, as drastic changes to employement \n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620988,
      "meta": {},
      "text": "SCRUM ist eine agile arbeitsmethode bei der zun√§chst ein Productbacklog durch das Team und den Productowner geschaffen wird, der zusammenfasst welche features das System alles in Zukunft bieten soll. Nachdem der Produktowner diese nach wichtigkeit sortiert, setzt das Team einen Teil des Backlogs in einem Sprint um undErweitert damit das bestehende Produkt. Danach werden die Ergebnisse zusammen mit dem Produktowner und anderen Stakeholdern reviewt und direkt darauf beginnt dieser Prozess von vorne.\n\n1Vorteil :ScrumKann Teams dabei helfen das Projekt schnell und effizient zu erbringen. Denn es wird sich w√§hrend eines Sprints nur die zu erf√ºllenden Aufgaben konzentriert, wodurch Ablenkung vermieden zB bei unserem EIST Teamprojekt. Hier soll am Ende eine gesamte fertige Buchungsplatform stehen. Durch SCRUM kann man w√§hrend jeden sprint sich nur auf eine kleine erweiterung konzentrierenz.B. (eine Funktion mit KNopf zum buchen). Beim spiralmodel ist das komplizierter, da hier jeweils fertige l√∂sungen erstellt weden m√ºssen was wieder viele aufgaben mit sich bringt.\n2Vorteil: Scrum schafft Transparenz zwischen Auftraggeber , Unternehmen und Mitarbeitern untereinander. Denn geringf√ºgige √Ñnderungen an einem beliebigen Teil des Projekts werden f√ºr jedes Mitglied sichtbar. So kann z.B. bei unserem EIST Team projekt unser tutor, also Kunde, jederzeit sehen an welchen Tasks wir gerade arbeiten und welche Erweiterung als n√§chstes implementiert wird. Auch wenn man beim spiralmodel sieht wie die produkte am ende aussehen, sieht man nicht die einzelnen tasks undWoran welcher mitarbeiter arbeitet. \n\n1Nachteil: Scrum eignet sich vor allem f√ºr Produkte / Projekte, die keine umfassende Planung und Strategie vor der Entwicklung erfordern. Denn es wird von vornerein ein fertiger Productbacklog und kleine schritte vorausgesetzt. Bei mir auf der Arbeit beim Projekt w√§re nicht m√∂glich, da wir einen service f√ºr Hausbesitzer implementieren und vorher viel Research betreiben m√ºssen und die L√∂sung erst \"gefunden\" werden muss. Das Spiralmodel ist hier deutlich besser geeignet, da es verschiedene L√∂sungen findet und danach erweitert. \n\n2Nachteil Es ist nicht leicht zu lernen und erfordert deswegen ein  geschultes und kompetentes Team.z.B. in einem gro√üen UNternehmen m√ºssen dann erst alle Mitarbeiter geschult werden, um dieses neue konzept umsetzen zu k√∂nnen. Das spiralmodel ist auch nicht einfach zu lernen und relativ kompliziert.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 5621105,
      "meta": {},
      "text": "Im Scrum werden die in einem Backlog gesammelten Requirements in mehreren Sprints implementiert, hierbei wird f√ºr jeden dieser Sprints ein eigener Sprintbacklog erstellt. W√§rend des 2-4 w√∂chigen Sprints kommt das Team t√§glich zu einem Scrummeeting zusammen, hier wird eine Person bestimmt, welche die Rolle des Scrum-Masters √ºbernimmt, das Meeting also moderiert und die Kommunikation mit dem Productowner regelt. W√§hrend diesen Meetings wird das Vorrankommen besprochen und Probleme fr√ºh mitgeteilt, dies f√ºhrt zu einer agilen Entwicklungsphase, zudem liegt nach jedem Sprint ein shippable Product vor.\n\nEin Vorteil von Scrum ist, das durch dieses Verfahren bereits w√§hrend eines Sprints auf Change reagiert werden kann, will der Kunde z.B. w√§rend der Entwicklung einer Commerce Applikation doch auf ein sichereres Verfahren zur √ºbermittlung pers√∂nlicher Daten umsteigen, wird dies einfach im t√§glichen Scrum Meeting mitgeteilt und von nun an daran gearbeitet, selbst wenn die Implementierung des alten Systems bereits in diesem Sprint angefangen wurde.\nDadurch ist Scrum deutlich dynamischer und agiler als das zuvor benutzte Spiral Model, da hier m√∂glicherweise Iterationen vermeidbar mehrmals durchlaufen werden m√ºssen.\n\n\nEin Nachteil von Scrum ist, das daf√ºr das bereits bestehende System oft drastisch ver√§ndert werden muss, da Scrum eine kleine Teamgr√∂√üe ben√∂tigt, sowie in manchen Hinsichten radikal anders ist, als der klassische Management Ansatz. Um Scrum z.B. in einem gro√üen Entwickler Team von 70 Leuten zu integrieren, ben√∂tigt es einiges an Aufwand, da man die 70 Leute zuerst f√ºr Scrum schulen, sie in Teams von 5-7 aufteilen, sowie geeignete Personen f√ºr die Rolle der Scrummaster finden muss.\nHier ist nun zu √ºberlegen, ob die Einf√ºhrung von Scrum in unser Arbeitsumfeld unsere Produktivit√§t um so ein Ma√ü steigert, sodass sich der Aufwand der Umstellung tats√§chlich lohnt, das Spiralmodell funktioniert immerhin bereits.\n\n",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 5621833,
      "meta": {},
      "text": "Scrum is a method to organize teams of preferably a small-ish (5-9 members) size with the goal of requirement flexibility in mind.\nIt rests on the two principles of face-to-face communication of team members and short work-periods with a set objective called Sprints. A product is incrementally developed, reviewed and tested during said sprints, with teams being split into 3 roles: A single Scrum Master, a single Product Owner, and the rest (\"Developers\").\n\nAdvantages:\n1. SCRUM adopts very well to changes, since Sprints are comparatively short, and tasks for the next sprints (in consideration of changed requirements) can be changed/adapted before the next sprint even starts.\nThe spiral model, while being much more rigid in terms of planning overall, can also adapt somewhat quickly thanks to its \"Phases\". \n2. SCRUM is non-hierarchical, with team members assuming roles rather than power positions. Development teams are self-organized, which can lead to increased productivity since the members decide workflow specifics for themselves. Since sprint retrospective is also an essential part of SCRUM, this leads to a continuous cycle of self-improvement of the team.\nThe sprint retrospective is entirely missing from Spiral Development, meaning teams cannot reflect well on their progress.\n\nDisadvantages:\n1. SCRUM does not work when, for whatever reason, communication between team members is difficult or impossible, due to strong reliance of collaborations. Language barriers for example can be a problem here.\nSpiral doesnt necessarily suffer the same fate since it is much more pre-planned and hierarchical (i.e. a \"Boss\" can just tell you what to do without a long \"meeting\").\n2. SCRUM is team based. Positive reinforcement outside of inner-team politics (\"Thank you\") is somewhat difficult, especially if your line manager (\"Boss\") has no control or insight over what the team does in the first place, and individual contributions within the team are more or less sidelined in favor of strentghening team spirit. \nIncluding line managers into teams (ESPECIALLY not as Scrum Master) is strongly discouraged by the model itself, giving them even less insight.\nSpiral on the other hand has line managers more in control and offers more insight for them, also allowing them to reward individuals more based off their performance.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622583,
      "meta": {},
      "text": "Scrum allows agile Software Development with its adaptive, incremental and iterative nature. Work is broken into goals that are realised in sprints (time-boxed work-units that are up to one month) and are guided by artifacts that are developed throughout the project. The product backlog is developed first (after the project-kickoff meeting) and each sprint receives a subset of this document (sprint backlog). \nThe main advantage of scrum is its high responsiveness to frequently occurring change: As a potentially shippable product is produced in every sprint, in the Sprint Review meeting (after every sprint), the project is presented to the project owner, who then gives feedback. Project backlog can also be changed here. This allows high interaction with the user/stakeholder which is much less present in the spiral model. For example if the project owner decides that a certain requirement is useless, the spiral model wouldn't allow such a drastic change, but in scrum the project backlog can be modified.\nAnother advantage is the interaction between the team members: it is direct and frequent (thanks to time-boxed daily stand-up meetings) and therefore less costly than in the spiral model that relies highly on documentation in every phase. For example, if a FR is to be developed in a certain sprint, then the team-members who are responsible of testing can communicate directly with the ones who are implementing the FR and if change occurs in the implementation for example, testers are able to directly react to that with minimal costs, as minimal efforts are put into useless documentation.\n\nThe main disadvantage of scrum is that it is not easy to follow progress of the project. Requirements are for example changed frequently, which can be overwhelming for the developers and the project manager. The spiral model is however more \"stable\" in this aspect, which allows a more accurate quantification of progress. \nAnother disadvantage is the difficulty of practicing scrum in large teams. As communication between team-members is high and influences the work of the team throughout the sprint, this can be counterproductive in large teams. \n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5622704,
      "meta": {},
      "text": "Scrum is an agile project management method that manages and controls software and product development encountering rapidly changing requirements. As it is a technique dealing with interruptions and change, the adaptive development improves the reaction to changing customer need. The work flow follows vertical instead of horizontal integration. A scrum project consists of several sprints, which are time-boxes during which the team creates a potentially shippable product increment. A scrum team consists of a development team and the scrum master.\nOne advantage of scrum is that as an agile project it adopts feedback from customers and stakeholders. Since direct communication is heavily encouraged in scrum (there are daily scrum meetings) there is not only the more exchange between team members but also with the customer. Sometimes the customer may even join meetings of the srum team. As ‚Äòpeople don‚Äôt know what they want until you show it to them‚Äô, a customer might in the beginning of the project believe to want something for his product which changes after seeing some shippable product increments. An example would be a customer asking for a game in which a car drives through the desert. After seeing a first shippable product of the graphical user interface however he perceives the colours to be monotonous and changes his mind to rather have a ship driving in the sea. As interaction with the customer does not occur as often in the spiral model, the spiral model is less adoptive.\nA further advantage is that through short sprints changes based on feedback can be adopted a lot more easily. One sprint is usually only up to one month long. This is followed by a sprint review meeting and interactions with the customer. Since the time period is short and feedback occurs often, the development team does not ‚Äòwaste‚Äô time doing something which is ought to be changed in the next feedback, which would be costly and frustrating for the team members. Taking the above example, if a sprint review meeting would occur much later then after a month the development team might have already implemented a lot of graphical details of the desert landscape and introduced different types of car, which are not needed in the end and the decision to have a ship in the sea would have been taken by only seeing a very simple prototype of the car in the desert. Although changes are allowed in the spiral model, change only occurs sometimes (longer time periods) and leads to the iteration of the previous phase.\nOn the other hand, one disadvantage of scrum is that it often leads to scope creep due to the lack of a definite end-date. Having an agile project without a too narrowed down plan does provide many advantages, however it bares the risk of scope creep, meaning the project is often changed and grows beyond the scope of the project which leads to the project enduring for a long time and becoming very costly without being able to set an end. For the above described game the customer may come up with various wishes such as not only including ships but riding the bike next to the sea and the development team changes the project often to adapt the customer's wishest. In contrast the spiral model sets an ending as there is more planning done. Furthermore, it is the best development model to follow regarding the risk analysis and risk handling at every phase and has strong approval and documentation control.\nAnother disadvantage of scrum is that adopting a scrum framework is very challenging in large teams. An important feature of scrum is that individuals shall be very committed and cooperative. To build up this kind of team spirit is easier in smaller teams and it is easier to set up a product and sprint backlog in smaller and less complex projects. If difficulties between team members occur this can be better observed and tackled in smaller teams. If in the above example the game shall include a whole series of different levels for different consoles it would be much more difficult to seperate tasks into sprints and achieve good coordination in scrum. The spiral model on the contrast is very suitable for large and complex projects.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644705,
      "meta": {},
      "text": "The product owner develops a product backlog that includes all tasks that must be completed. The team produces a sprint backlog, which consists of smaller tasks, their implementation, and a time frame for each sprint. Every day, a scrum meeting is held to share daily updates with other team members, and at the end of each sprint, a sprint review meeting is held to show the product owner the completed backlog.\n\nAdvantages:\n- Unlike projects with Spiral model, projects with Scrum model don't rely on documentation (documentation is not obligatory or is not always required).\n- In contrast to the Spiral approach, the Scrum methodology emphasizes the delivery of an increment to the customer after each Sprint, resulting in more regular interactions between customers and stakeholders.\n\nDisadvantages:\n- Scrum adoption in big teams is difficult since everyone on the team must participate in daily meetings, which can be difficult to plan.\n- Scrum does not involve such a deep risk analysis, which can lead to problems and, in the worst case, project failure (usually in very long projects with high risk).\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5644906,
      "meta": {},
      "text": "SCRUM is a method which is supposed to ensure agile project management. It is a framework for teamwork in which an interdisciplinary team organizes itself in order to react flexibly and quickly to changing requirements. Instead of fixed instructions from a leader, there are predefined activities (e.g. Sprints) fixed roles (e.g. Scrum Master) and Documents (e.g. Sprint backlog).\n\nDue to the division of a project into several sprints, there is a very high degree of flexibility. After the review of the sprint, the next steps are adapted (if necessary) and expanded by the newly gained knowledge. Thus, e.g. a problem can be identified and fixed fast and if a customer e.g. changes his requirements you can also adapt these fast.\nThe spiral model is due to the different \"rounds\" also pretty flexible and as each round a new prototype is prepared, problems are seen fast.\n\nWith Scrum, the team is in the foreground. Through regular exchanges, e.g. Daily Scrum, the participants know what the current status is in their own team and of the entire project. Problems and ideas are discussed together and knowledge as shared which leads to the best possible result. E.g. if one team has a problem but doesn't find a good solutions maybe the other teams find solutions which makes the process faster.\nIn the spiral model the team is not in the foreground and there aren't predefined meetings with standard documentation which leads to less motivation and overview.\n\nOne problem may be that you have high communication and coordination effort due to the regular meetings. E.g. if not every team needs help or still has work to do, daily meetings are a waste of time.\nAs the spiral model has less regular meetings/ team work which may not be needed alll the time, they may work more efficiently and faster.\n\nAlso you don't have any predefined time limits or cost valuations and thus, the project may expand to a lot of sprints. And then e.g. you might not meet the deadline. The spiral model also needs a clear defined end in order to work.\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620394,
      "meta": {},
      "text": " Scrum is often described as an agile project management framework and includes meetings, tools and roles that work together to help structure and manage teamwork. It manages and controls software and product development with rapidly changing requirements. It improves risk management by improved communication,\ncooperation and the delivery of product increments. \n\nAdvantages:\n\nScrum makes efficient use of time and financial resources because Scrum teams plan ahead and budget their finances before starting a project. This helps avoid unforeseen expenses and wasted time. Towards the end of each sprint, Scrum teams test their product before release so they can find and fix any bugs. \n\nAnother aspect of Scrum is the daily Scrum meetings that the Scrum team attends. This helps the entire team keep track of the progress of each iteration and identify any hiccups in the early stages of the project. It also presents the tasks that each team member has completed on a daily basis, providing better validation of the team's hard work.\n\nDisadvantages:\n\nScrum teams sometimes have difficulty adopting the Scrum method because it is a big change from their traditional working methods. Scrum teams work relatively independently and the scrum master and project manager don't always have to monitor and manage their tasks, which can prove to be an obstacle. It can also be difficult for Scrum team members to adopt a completely different way of working, which can lead to delays. Especially if teams are not sufficiently trained and educated in agile and Scrum methodologies, the lack of experience and expertise can lead to problems.\n\nSometimes teams don't test as hard as they need to with each iteration, which can negatively impact the quality of the final product. Scrum teams need to be fully committed to their project and every part of the Scrum process to make it work effectively.\n\nSpiral Model:\n\nThe Spiral model is suitable for those projects that are prone to various kinds of risks that are difficult to anticipate at the beginning of the project. Therefore it can better handle the risks.\n\nSpiral model isn't efficient for smaller projects. \n\nIn Spiral Model, workers need also good expertise.\n\nIn Spiral Model, risks need to be considered. So they have to be concise in their project. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620717,
      "meta": {},
      "text": "SCRUM is an agile method to manage projects. firstly we include all the requirements and product details in the Product Backlog which can be changed at any time and then we deal with the product backlog in each meeting and sprint and will review it regular time to see whether any things have to change. after several meetings and sprints, we have a final review and finish the project.\n\nSCRUM\nadvantage:\n1) it is flexible, eg. if a team wants to develop a car with green color, the customer can decide to change the color in the sprint retrospective meeting, and the team can list it in the next sprint planning meeting and revise it. spiral is relatively not flexible because it cannot change during each iteration of activities\n2)it can develop fast, eg. if a team wants to develop an app with a function then can develop it immediately in the first spirit and decide which details they want to add in the later meeting if needed. spiral is time-consuming because the changes might totally waste the previous progress(phase).\ndisadvantage:\n1) it might be too complicated to integrate after several meetings eg. the customer asks for decorating their house but it is already too much decoration in that house to put things inside after several meeting\nSpiral is relatively easy to integrate because its phase is easy to follow so it can find a problem step by step\n2) a new member might hard to follow the previous meetings eg. the app is already changed several times and it is lack documentation to describe the needs of customers because they always change their needs so fast. a new engineer is hard to follow the following step for these needs. Spiral is relatively easy to follow because each phase has clear steps for a newer to follow ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620861,
      "meta": {},
      "text": "Scrum is based on an empirical process control, iterative and incremental approach to optimize predictability and to control risk. The three main principles of scrum are transparency, Inspection and Adaptation.\nWhen working on a project using scrum some of the benefits are that the workflow is constantly managed and de progress of each individual is periodically being checked. This process of separating the workload  helps complete project deliverables quickly and efficiently. Another benefit of scrum would be the managing of large projects is made easier, by dividing it into easily manageable sprints. \nScrum also brings a lot of disadvantages with it, as for example scrum works best when working with small teams, because keeping everything and everyone organized is easier that way, in contrast when working with large teams can come with its own challenges. The daily meetings can also cause frustration for team members, because no one works on a project every day and it can get tiring hearing the same updates over and over if someone is stuck.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621394,
      "meta": {},
      "text": "Scrum is Framework that enables iterative and incremental product development and it starts with a vision of a product or a system to be developed - even if that vision might be vague. Out of this vision a so-called product backlog is developed which contains basic product requirements. After the presentation of the product backlog by the product owner, a sprint backlog containing the concrete features that are to be implemented is created and then processed by the developers in an iterative manner - with each iteration delivering a shippable product increment.\nThe advantages of scrum are for one quick and efficient delivery of project, which is why Big Tech companies like Google, Meta and Apple are using scrum in their development cycles. Another advantage is flexibility of the development process. If for example the product owner suddenly has a new feature idea for his or her application, it can be adopted in to the product backlog and then easily translated into the development process. \nThe Scrum methodology does come with its disadvantages however, one of them being the delay and postponement of goals, due to the lack of a real end date. If for example the product owner needs a project to be completed within 6 weeks, it could lead to the delivery of an incomplete project, since the team could lay on another product increment to match the demands.  Another disadvantage is the scalability of scrum development teams. When for example the team size is too large (more than 9 members) the daily meetings could become very long and draining, which in turn also leads to less motivation within the group. A theoretical solution would be to divide a large project into multiple scrum teams.\nComparing Scrum to the Spiral, there are some differences as well as similarities, the first one being cost and efficiency. Compared to the efficiency of Scrum, the Spiral model relies on a long and costly development process minimizing risk. However the Spiral Model is just as flexible as Scrum allowing for later adoption and implementation of changing requirements and feature concepts. The problem of delays and postponed still persists in the Spiral Model in the same way as Scrum. A major difference is the suitability of the Spiral Model for large and complex projects while maintaining low risk and high stability, which is something Scrum lacks.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621671,
      "meta": {},
      "text": "Scrum is an agile project management framework designed for small groups to work out tasks that are on the product backlog presented by the product owner. Overseen by a scrum master, scrum is executed in small \"sprints\", lasting 2-4 weeks, where the scrum team turns a selection of work into a product increment. In a sprint review meeting, the team inspects and adjust its work for the next sprint and  the whole process continues from the beginning till the product is complete and working.\nOne of the positive factors of scrum is that it creates room for creative problem solving that achieves the goal of adaptability. The scrum team can work together to deal with change, for example changes in organizational structure. On the other hand, the spiral method is limited by risks and if a risk cannot be resolve it could result in a project being terminated.\nScrum  focuses centrally on smaller deadlines created for sprints, leaving the project manager and stakeholders with the task of making sure the project is on track to meet the end deadline. This however, increases productivity in the team but adds pressure to the project manager. Similarly, the spiral method has difficulty with determining the end deadline, since new risks or constraints may arise.\nDue to the limited documentation and micromanaging needed, scrum tends to be low costs, which is an appealing quality to many companies. In contrast to that, the spiral method uses heavy documentation. Coupled with the indefinite spirals that tend to occur, this can make the framework more expensive to implement.\nAlthough scrum is highly praised, it is difficult to implement on larger projects and would require extensive training and often result in incomprehensible plans. The spiral method, however, was made for complex projects. Each phase has an easier overview and is overall easy to follow and document on a larger scale.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5634658,
      "meta": {},
      "text": "Scrum is an agile working method. The essential part of scrum is a sprint, at the start of which the team decides which features will be implemented in the sprint. When a sprint is finished, a new sprint starts immediately.\n\nWith scrum you can react to changing requirements. Because sprints happen constantly, features can be implemented earlier than in a traditional model. An example would be a bug fix. While it can be included in the next sprint with scrum, one might has to wait until the project is finished in a traditional model. Therefore, bug fixes can be addressed earlier with scrum. Since the spiral model is iterative, frequent changes can be difficult to deal with and take longer than with scrum.\n\nThe scrum process brings improved communication through daily scrum meetings and direct communication between different developers and the product owner. This can lead to a better understanding of the features. An example for this are features that require deep knowledge of the business case. In this case, increased communication with the product owner will lead to a better and faster result. The spiral model does not integrate communication like scrum does.\n\nA disadvantage is that you cannot change the spring backlog while you are in a sprint. This prevents working on very important tasks until the next sprint. An example are security issues which need to be fixed asap, otherwise it can have disastrous effects. But with scrum, this could only be done in the next sprint. The spiral model allows to account for changes made between activities, but not in an activity.\n\nAdditionally, applying scrum requires knowledge of the scrum model. If the team members are not confident with scrum, it could even lead to a slowdown. An example for this is a company switching from a traditional model to scrum without teaching their employees. The employees will have a hard time and it will lead to a lot of questions, more work and confusion - which are the exact opposite effects of scrum! The spiral model follows an iterative approach and is therefore easier to adopt.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644379,
      "meta": {},
      "text": "Scrum is an agile software development cycle most suitable for development within a rapidly changing environment and circumstances. The main idea behind scrum is the specification of tasks to be done in a set amount of time (a sprint), and by the end of it to produce a shippable product increment. During each sprint, the team of developers meets daily (daily scrum meetings) to compare progress and communicate on different tasks. \n\nScrum cons:\n\t- Inflexible sprint duration which doesn't account for completed tasks and can lead to many WIP tasks.\n\t\t--In the spiral model, each iteration uses a linear model, which means that during each iteration all tasks \n \t\tare first completed and then the project moves onto the next stage.\n\t- Spring backlog is fixed and unchangeable, which can lead to problems if during a sprint a feature becomes \n \tunnecessary, or a new critical priority feature is introduced that can't wait until the next sprint.\n\t\t--In the spiral model, iterations are similarly planned at their beginning with change only at the risk \n \t\tevaluation and resolution stage\nScrum pros:\n\t-  Daily meetings between the developers and the Scrum master allow for constant feedback and \n \tcommunication with the product owner, in case there is a change in how a task should be implemented.\n\t\t--In the spiral model, due to the use of linear development within each iteration, it is far harder to \n \t\tchange HOW a task is implemented.\n \t- After each sprint, there is the aim to produce a shippable product increment, which, if realized, will motivate \n \tthe developers that can see results of their work.\n\t\t--The same goes for the spiral model, which has product prototypes at the end of each iteration.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644420,
      "meta": {},
      "text": "SCRUM macht es m√∂glich Software schnell zu entwickeln, wobei man auf h√§ufig eingehende √Ñnderungen  reagieren kann. Gleichzeitig werden durch SCRUM Risiken, wie ein Ausfall der Lieferung, deutlich minimiert, aufgrund von Kommunikation und st√§ndiger Fertigstellung von lieferbaren Produkten.\n\nSCRUM bietet einen Wert f√ºr den End-User, da dieser am Ende eines jeden Sprints potentiell eine neue Version des Produkt benutzen kann. Welches den Vorteil hat evtl. Feedback vom End-User in den Entwicklungsprozess mit einzubinden.\nBspw. in dem EIST-Team Projekt konnte man immer wieder, von seinem Tutor anhand des potentiell fertigen Produkt Feedback bekommen.\nIm Vergleich dazu muss man beim Spiral Model bis zum Schluss warten, um ein fertiges Produkt zu haben.\n\nSCRUM steigert die Team Moral, was zu einer Verbesserung der Perfomance f√ºhrt, da nach jedem Sprint ein \"Retrospective\" stattfindet, wo sich der SCRUM Master und das Dev Team trifft und festlegt was im folgenden Sprint besser gemacht werden kann.\nBspw. kann man nach einem Sprint von den einzelnen Schw√§chen und St√§rken der Team Members lernen und dadurch die Aufgaben des neuen Sprint Logs entsprechend besser verteilen.\nDas Spiral Model hingegen kann man beim Planen der n√§chsten Iteration evtl Anpassungen im Team vornehmen, jedoch steht man nach jeder Iteration vor einer neuen Herausforderung.\n\nDurch die Agile Entwicklung in SCRUM ist es schwierigen den Fortschirtt zu tracken. Es ist vorallem f√ºr die Manager schwierig herauszufinden, wie weit das Produkt in der Entwicklung ist, da das Produkt potentiell nach jedem Sprint fertig ist.\nBspw. muss man evtl. am Ende der Deadline auf gewisse Features verzichten, da man nicht vorrauschauend seine Sprints geplant hat, sondern sich lediglich auf die Sprint Deadline konzentriert hat.\nBei dem iterativen Spiral Model, sind die einzelnen Iterationen festgelegt und man kann leicht bestimmen in welcher man sich greade befindet, wodurch man dann evtl das Tempo anpassen kann.\n\nBei SCRUM ist es wichtig, dass sich jedes Team Mitglied mit SCRUM auskennt.\nBspw. muss ein Team Mitglied verstehen was in einem Sprint Review Meeting gemacht wird, um einen produktiven Beitrag leisten zu k√∂nnen.\nBei dem Spiral Model m√ºssen die Entwickler nicht erst verstehen wie das Projekt gemanaged wird, sondern nur in welcher Iteration man sich befindet.\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5620021,
      "meta": {},
      "text": "Scrum is a framework that helps teams to self-organize their work through an iterative, incremental and adaptive approach in order to deal with change successfully. This is achieved by dividing the project's working period into fixed-length \"sprints\" which will consequently result in an improvement of the desired product and can be further subdivided into daily meetings, meant to share the current state with each team member, and review meetings at the end of each sprint in order to look back on what increments have been realized. Scrum also assigns different roles to each team member, the product owner defines the product, while the scrum master is responsible for leading the respective meetings and looking over the entire process and the development team that actually implements the desired functionalities.\n\nAs previously mentioned, a huge advantage of Scrum is, that the concept is able to deal with frequent changes quickly and successfully. If for example the customer demands a change in the product, the developers will be able to address this situation already the next day and adapt their tasks. Also, by subdividing big tasks into small chunks of work, Scrum helps in making difficult seeming tasks easier to implement. If for example the team is asked to implement a website, they could potentially give each developer the task to implement one certain page of the website. However, Scrum works best with small teams, since meetings will take too long otherwise, which is why a company might have to restructure their workforce if they want to implement Scrum. Also, if a team member falls out for some time, due to the small size of teams it will be very difficult to compensate the decrease in workforce.\n\nThe spiral model on the other hand is meant to work with big teams and thus can be easier to introduce as a working framework and also in case of a team member dropping out it will be easie to make up for his tasks.\nRegarding the handling of change, with spiral model it is not neccessarily intended to be able to deal with change frequently. Also the spiral model doesn't recursively divide tasks into smaller pieces but rather linearly implements parts of the product. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621592,
      "meta": {},
      "text": "+ core essence of SCRUM :\n\t- scrum team geteilt in 3 rollen: product owner, scrum master, scrum team/ development team. Jeder hat\n\t  eigene aufgaben.\n\t- geh√∂rt zu dem Agile project management was das hauptziel hat schnell auf √§nderungsw√ºnche (von p. \n\t  owner) anzupassen, schnell zum projectsschluss zu kommen.\n\t- hohe comunikation und cooperation zwischen product owner, scrum master, scrum team durch \n\t  verschiedene metings (Daily scrum meeting, sprint planning meeting, sprint review meeting, ...), reduziert\n\t  risiko factor im projekt.\n+  2 advantages and 2 disadvantages of SCRUM:\n\t+ man bekommt nach jeden sprint feedback von stackholder, produkt kann also beim n√§chsten sprint genau \n\t   darauf verbessert werden. zb. product owner will ein verbrennungsmotor -> team entwickelt ein diesel-\n\t   motor -> er wollte aber ein benzin verbrenner also z√ºnkerze beim n√§chsten sprint einbauen\n\t+ Entwicklungs-Zeit : kurze entwicklungszeit bzw. reduziert gesammtentwicklungaszeit durch parallele und \t\n\t   constante arbeitsprozess (sprint max 30 tage,...). zb. jedes mitarbeiter (von development team ) haben ein\n\t   festen arbeitspaket und deadline am ende des sprint, dadurch keine zeit verschwendung.\n\t- nur f√ºr kleine projekte geeignet. zb f√ºr gro√üe projekte ist das development team entsprechent gro√ü, f√ºr so \n\t  hohe comunikation aufwand bei scrum also schwierig zu managen.\n\t- komplexe methode : das scrum team muss knowhow mit bringen, es erfordert von allen team mitglieder \n\t  erfahrung. zb. bei verz√∂gern von einen team mitglied oder nicht cooperativ von mitglieder hei√üt hohe \n\t  verz√∂gerung oder scheitern von projekt.\n+ comparison between SCRUM and the Spiral model:\n\t+ spiral model f√ºr gro√üe projekte geeignet, scrum f√ºr kleine\n\t+ √ºberschaubare Zeitmanagement im srcum model, bei spiral model ist die nummer von loops am anfang \n\t   nicht wirklich bekannt",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 5621885,
      "meta": {},
      "text": "Scrum is an incremental and iterative software development methodology that assists teams to develop, deliver and maintan software in an agile manner. Due to rapidly changing requirements, Scrum allows for the agile adaptation of software and improved risk management that is provided by continuous communication between the development team and stakeholders of the project.\n\n\n<-> Scrum‚Äôs adaptive, incremental and iterative development allows developers to efficiently react and implement changing requirements that the customer needs. \n-> E.g. A customer initially asked for a menu with many options to personalize his software, after the incrementation of the feature, the customer instead decided for a seach-bar to quickly search for the desired options.\n-> The Spiral Model also allows for early feedback on the incremented development after every iteration.\n\n<-> Scrum allows for cross-functional development teams align skills and work together to efficiently resolve issues that might occur during sprints.\n-> E.g. A client-side developer doesn‚Äôt know how to implement a specific API-Endpoint, therefore he mentions it during the daily scrum meeting and his experienced team members give recommendations.\n-> In the Spiral Model, developers could also coordinate with team members to come up with solutions together by resolving risks.\n\n\n<-> Scrum‚Äôs framework cannot be applied for every development project, due to the adaptive nature that fits the empirical processes well, but fails on projects with strictly defined processes.\n-> E.g. Completely predefined projects which establish planned processes that follow strict rules and avoid deviations are in extreme contradiction to Scrum‚Äôs methodology. \n-> The Spiral Model would also be in contradiction, due to the constant adaptation thourgh the evaluation of alternatives for the risks found in the risk analysis.\n\n<-> Requires high level of cooperation between developers and stakeholders, teams of developers are required to have great communication skills which can become an issue.\n-> E.g. If stakeholders don‚Äôt provide feedback or if the developers within a team don‚Äôt communicate important aspects, then the coordiation of sprints and increments could significantly fail.\n-> The Spiral Model could also fail if team members are neglectant to communicate with eachother during risk identification.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621958,
      "meta": {},
      "text": "Core Essence:\n\nScrum is an agile project management framework that is widely used for software development and organizes the responsibilities of each team member and the value creation process. The team consists of the Product Owner who represents the customer and orders their product requirements into a prioritized, dynamically adapting list of the items needed for the product (called product backlog) and the Scrum Master who keeps oversight over the whole development process and acts as a communication link between the product owner and the team members, who turn these backlog items into a potentially shippable product increment. Such a product increment is created during a set time box with a constant duration of usually 1 month which is called ‚ÄúSprint‚Äù and includes thorough planning, and daily meetings, and is succeeded with a further Sprint until the project is finished.\n\nAdvantages:\n\n\t1. As compared to the Spiral Model, Scrum prepares developer teams for product development with rapidly changing requirements rather than not allowing change during the product development. Nowadays, considering the speed of technological progress, products may be already outdated by the time they are delivered so that an adaption of the requirements of an ongoing software development project is more frequently likely. Developer teams should be prepared for and be able to deal with such changes. However, changes lead to a termination of the project in the case of the Spiral Model.\n\n\t2. Scrum facilitated communication, cooperation, and the delivery of product increments. Thereby, it improves risk management. On the opposite, the Spiral Model does not focus at all on the communication during each iteration (e.g. through daily meetings), but only on communication at the end of the iteration to plan the next one. However, cooperation and good communication between the stakeholder guarantees a smooth and quick process.\n\nDisadvantages:\n\n\t1. As compared to the Spiral Model, a Scrum project has no definit end date that is clear from the beginning.  The prject is completed once the customer accepts the product increment. Therefore, it is important for the Scrum Master to make sure that the project is completed in time. The Spiral Model however, has set out 9 iterations after which the project should be completed.\n\n\t2. While the Spiral Model focuses on risk identification and dealing with such wo that each product increment minimizes risk, Scrum focuses on devilvering a shippable product increment with each iteration regardless of the risks. This makes the thorough testing of the product in the end a much lengthier process where unforseen problems may arise if the developed software is very faulty.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622627,
      "meta": {},
      "text": "Scrum is an agile process that was created to deal with Interruptiones and change. The Idea is that you have a product backlog that you reduce to smaller sprint backlogs. These sprints are short time frames in which a potentially shippable product increment is created. This process is repeated until the product backlog no longer exists. Lastly it is important that the communication within and outside the team is increased by multiple different scrum-meetings\n\nThe first Advantage of Scrum is that it is able to manage and Control software and product development, even if the requirements often quickly change. Especially if there is frequent change in the development an agile model like scrums works best. For example if a client of the start up suddenly wants to change an aspect of the already programmed software, this is easily implemented with scrum, since it is just added to the product backlog and implemented in the next sprint.\n\nThe second Advantage would be the improved communication and cooperation in the teams. Scrum has a very unique Team build consisting of the product owner, the scrum master and the scrum team. In scrum, there are daily meetings within the team and furthermore there sprint retrospective meetings, where the development team discusses how the last sprint was performed. For example once a Month the product owner could participate in the retrospective meeting and see how the team works, how the Projekt is going and add his own ideas and critics.\n\nNevertheless Scrum also has disadvantages, scrum is relatively new and it can often be hard to integrate it in teams or the entire company. For example if the entire company has been working with sequential workflows it can be very hard to train and transform the employees to effectively use scrum.\n\nThe second disadvantage of scrum is that it is not that simple to scale it. Since using scrum in big projects the teams have to be precisely coordinated and trained. For example if the start up has a big and new project re organizing the way we do things can be very difficult and can also lead to mistakes.\n\nThe main difference between the Spiral model and Scrum model is that iterative models (spiral model) are not able to deal with change within an activity, but rather only changes in between. This where the scrum works best, since it is designed to incorporate these unforeseeable quick changes. The spiral model has 4 major activities and these are applied in multiple iterations. Scrum does not have fixed activities or iterations but is more flexible and has a predefined workflow, which is adapted for each individual projekt.\n\n\n\n\n",
      "score": 68.8,
      "language": "ENGLISH"
    },
    {
      "id": 5622837,
      "meta": {},
      "text": "SCRUM is an agile project management method/technique that splits the work into several sprints including constant monitoring and discussion of the progress and current risks that need to be resolved. Therefore, It is used in projects which have to deal with rapidly changing requirements. SCRUM is a way to deal with these changes in time by taking a step-by-step approach through regular communication and delivering product increments to ensure qualitative progress.\n\nOne advantage is the ability to respond to changing requirements quickly without wasting too much progress and time. E.g., while working on a certain functionality of the app, a new software update forces us to make some minor changes in the code so that the app stays compatible. This risk can be addressed during a daily scrum meeting and actions can be taken early on. The spiral model does this only at the end of each iteration, meaning that this risk has a bigger impact on the overall progress.\n\nMoreover individual contributions are visible through daily scrum meetings. This prevents procrastination or unnecessary waste of time and ensures consistent progress. E.g., we often just need a different perspective to come to a better solution during problem solving. Having team members to see what you're struggling with can save a lot of time as they can come up with solutions that you would/could not have thinked of. The spiral model doesn''t allow for that during the iteration which can lower efficiency.\n\nHowever, daily meetings can lower moral. Team members could feel too much pressure resulting in dissatisfaction which could affect the personal efficiency and motivation to an unhealthy degree. The spiral model handles most of the communication at the beginning and at the end.\n\nMoreover, coordination efforts can increase and become counterproductive if the project and therefore the team is too large/big. E.g. daily scrum meetings can become useless for some team members if they are working on tasks that are completely independent of the progress of other team members' work. With the spiral model we are not forced to have daily meetings.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644746,
      "meta": {},
      "text": "SCRUM is a framework which helps teams to best devlop a product by dividing it into multiple phases and repeating those. The self-organizing teams are working for an uninterrupted period with daily meetings to create an increment value that will to be presented. SCRUM improves the developing process with quick/ regular feedback and deliveries, so changing requirements and improvments can be implemented sufficiently at the right moment. This encoureges the creativity, fexibilty, focus of the team.\n\nDisadvantages: \n-For scrum to work the way it is supposed to we need a well trained and competent and skillfull team. For example if we want to implement scrum at a company who usually works in a linear way for its product developments the change to scrum can be drastic, if not done right it could lead to chaos in later stages. The whole team needs to understand the benifits of it to be able to  deliver quick and high-quality results. The spiral method is easier to understand\n\n-Scrum is not meant for very large projects since it needs precise coordination and a skilled team where everyone understand the process. The scalability can also be a problem for the organisazion of the company, it would likely have to changed comepletly to fit the new requirements. The spiral method is easier to orginize since it can be planned and iterates the same steps\n\nAdvantages:\n-Scrum provides Adaptability and Flexibility on a high level. Since meetings are regular and a product is presented every 2-4weeks changes can be adapted really quick. It would be bad if eg the product owner would decide that he wants different storytelling style after the whole video game is already finished. The spiral method is a little stiffer since it always iterates the same 4 activities and limited number of iterations\n\n-Scrum brings out high quality products since the team is focused and uses its time well in an enviroment where free thoughts and ideas can roam with boasts the creativity. Because the teams concentrate on small goals and get immidiate feedback on the productIncrements. The spiral also does a good job at giving feedback after each iteration \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644927,
      "meta": {},
      "text": "Scrum is a model for agile software development, which is often needed nowadays because we have rapidly changing requirements. It works by starting off with creating a product backlog that includes functional requirements for the entire project and every 2-4 weeks you have a sprint meeting where you'll create a smaller sprint backlog for the next sprint.\n\nadvantages:\n- When having frequent changes and especially many per programming phase, it is very hard to deal with with an older model.\ne.g during a sprint the developers notice that Requirement 5 is unnecessary and later they notice that Requirement 14 needs to be changed a bit. With scrum, this is not a problem as the developers can just react to that in the next Sprint meeting or the daily meeting\n-> The Spiral Model can deal with some changes, but the time between them has to be larger.\n\n- We can have a functioning product after a few feeks, so we can show the customer how his software is doing, that can see the product\ne.g. We program a banking app and we're about 50% finished, so we show him the app and discuss how you can already manage transfers and look at your stock-portfolio. The bank can the tell us what it doesn't like about the app and we can put it on our product backlog or next sprint backlog.\n-> The Spiral Model does not have something like this, as it is a horizontal integration approach.\n\ndisadvantages:\n- Organisation plays a bigger role in SCRUM than for example the waterfall model and also takes more time.\ne.g. The Sprint Review meeting for the project I do at university (\"EIST\" - a very good course) needs ~ 120 minutes. \n-> The Spiral Model has the same problem, as it's processes also need a lot of time.\n\n- You need to change existing structures\ne.g. large companies like BMW often have rigid structures and it's hard for managers to adapt to things like scrum, because scrum completely changes the way we work.\n-> The Spiral Model mostly does not have this problem, because it is a pretty traditional method and is similar to other traditional methods.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619479,
      "meta": {},
      "text": "SCRUM is a technique for agile project management with different participating roles. The project is divided into small tasks which are placed in a backlog where they are then being chosen for completion in the so called \"Sprint planning meeting\". These so called sprints usually last for 2-4 weeks where in daily \"scrum meetings\", progress is discussed and after the post-sprint \"Sprint Review\" there is a product increment and the next sprint with new tasks is started.\n\nWith SCRUM large projects can be divided into easily manageable sprints which then decreases complexity and allows for more efficient use of time and division of labour. The developement process of a social media platform can be divided into comments, profile, reactions... and even further which makes this complex task more approachable for everyone.\n\nA disadvantage would be that it is quite hard to implement in large teams. This is because everyone having to be present at the daily meetings can cause quite alot of frustration and one cannot ensure that everyone is able to participate everyday.\n\nOn the upside, this frequent communication through meetings allows for problems to be noticed quickly and provides everyone with information about how the whole project is coming along. Imagine you are working on implementing a map into your product and the api you decided to use doesn't support adding waypoints. You can address this at the scrum meeting and a solution can be discussed with everyone else. In this case maybe the api has to be exchanged.\n\nAnother disadvantage would however that really every teammember has to be commited and cooperative because this whole technique is dependent on trust and communication. Say that someone has a problem and gives up right after the sprint started, doesn't mention anything in the sprint meeting or lies about their progress then the progress is slowed down considerably if the feature is expected to work by the next review.\n\nNow to compare SCRUM with the Spiral model. While SCRUM has fixed timeslots for meetings there is no such thing in the Spiral model. Also with Spiral, there is a fixed plan of 9 iterations which might help with getting things done whereas SCRUM is more flexible and not as clearcut. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622188,
      "meta": {},
      "text": "The core of Scrum lies in the rapid and iterative adaption to changes from the external environment, requirements and other paramaters in the software development process. This is achieved by strong communication with the actors due to constant retrospective and stand-up meetings as well as clear defined roles and a process that only focuses specific tasks to achieve a functioning product that is adapted and extended more and more. The process involves cycles with defined tasks (User Storys) in which the development is done and after each a Potentially shippable product is finished that is continously checked with the customer.\n\nOne advantage is the strong transparency due to a lot of communication. Every team member knows their tasks, the tasks of other team members and how the project and the progress is performing due to the regular stand up meetings. This means no work is done simultanelously by two persons and the knowledge transfer is a lot better. In the Spiral model, there is also result evaluation after each iteration but the constant and daily commuication between team members is not done.\n\nAnother advantage is that after each sprint there is a working prototype that can be shown and tested which makes the communication with the customer (product owner) a lot easier. This is also partially done in the spiral model but the acutal development of the operational prototype is done primarily at the end of the development process.\n\nA disadvantage of Scrum is, that the development can in some cases more time if to many changes are done to the requirements and the product needs to be changed to many times. In the Spiral model there is room for changes in the requirements but not to the extend of Scrum, as there is a commitment to the objectives at a certain point\n\nAnother disadvantage is that the Scrum Methodology can only work if each team member is properly trained and commits to their role and objectives, especially the Scrum Master has a lot of theory that has to be properly applied. The spiral model is simpler in the usage and does not the extensive training as Scrum does.\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623223,
      "meta": {},
      "text": "the concept of scrum is to update the recources to develop methodes of the project. this can easily be reoriented during the phases of developement to make it easy to do changes and manage the project.\n\nwe can identify the first advantage of scrum the fact that the deal with change between 2 activities of the project is much more flexibel.",
      "score": 8.3,
      "language": null
    },
    {
      "id": 5644259,
      "meta": {},
      "text": "Scrum is an agile methodology that splits the project managed by a scrum master into cycles - here called sprints - which last around two to four weeks. Within each sprint, a few tasks will be picked out a product backlog (created by the product owner), written into a sprint backlog an worked on within that time frame. Progress will be discussed daily and the Result is a potentially shippable product that can be presented to the customer after each sprint.\n\nAdvantages:\nSay a developer visits a daily scrum meeting. There, one of his collegues explains what of her/his ideas, inspiring you for a new idea you haven't thought of yet. \nIn the spiral model however, meetings usually aren't valued as highly compared to in Scrum, potentially leading to less creativity.\n\nAnother advantage is that Scrum encourages better results by involving customers: Imagine you are a customer: you get to see a potentially finished product every 2-4 weeks and you can give feedback accordingly. You as a customer will feel more involved into the project than usual, which also leads to a better product at the end. \nThe involvement of customers here is similar to the spiral model as in the spiral model customers will be involved at an early phase of software development.\n\nDisadvantages:\nOne issue of Scrum is that with it can be difficult to track down the time generally needed for the project. This is mainly due to the fact that the amount of sprints is unknown at the start of the project. Imagine you are a stakeholder: Of course you want to make sure that your project is finished on time. With Scrum, this can be difficult to estimate, however. \nThe Spiral model has a similar issue as the number of phases is unknown previously. \n\nAlso, Scrum generally works best with small teams not bigger than 10 people. Say you company has thousands of developers: it will likely be quite difficult to rearrange everyone into such small teams. \nIn the spiral model, a size of smaller teams is not defined, meaning that such issues might not occur here.\n",
      "score": 72.9,
      "language": "ENGLISH"
    },
    {
      "id": 5644879,
      "meta": {},
      "text": "Scrum can be summed up by saying that it is a loop of having the product owner state wishes for the product which are added into the product backlog, having the development team implement a part of the product backlog during a sprint so that a product increment is developed and then having everyone review and retrospect the work done to prepare for the next sprint.\nOne of the disadvantages of scrum is that it needs a lot of coordination. Needing to hold many meetings with the whole team present and having relatively short time spans for each sprint leads to a very fragile environment.  This leads to the second disadvantage which would be the requirement of an experienced and reliable team.  I would say that the EIST projects are actually good examples for these two disadvantages: it is very hard to get back on track after encountering some problems/having uncooperative teammates. The spiral model, in contrast, is capable of being used at larger scale seeing as the model doesn't focus on meetings/retrospectives/reviews, but rather written communication.\nAs for the advantages of scrum, firstly, every increment is a concrete, functional product (part of a product) (e.g. after the first sprint you have a simple client that communicates to a server, after the second sprint you can also send text messages, after the third sprint images etc). The nature of the Spiral model can lead to longer waiting before an actually functional system is realized. This can for example happen because of the spiral model having a much longer designing phase. Having said this, scrum, not concentrating on designing a big part from the get-go, is very friendly towards changes of plan. It is easier to add a new idea onto the functional increment from the last sprint than having to integrate it into a half-done prototype. (e.g. we have the chatting application that can send images and now we also want the users to have personal profiles). This would be difficult in the spiral model, seeing as all spirals are planned from the beginning.",
      "score": 70.8,
      "language": "ENGLISH"
    },
    {
      "id": 5644916,
      "meta": {},
      "text": "The core essence of SCRUM is that the working is  parallel and the team members communicate directly each other. With SCRUM, team works shortly during the sprint and have sprint review and check complete/incomplete tasks. For example, with SCRUM, members don‚Äôt wait until other work is done.\n\n- Advantages of SCRUM:\n1. With short sprint and feedback, team can deal with changes easily and fast. For example, one of the function can‚Äôt be implemented because of technical issue. During sprint(usually once per 1-2 weeks) team members can notice it fast and think about an alternative.\nOn the other hand, with spiral models, team works within iteration. They move to next steps after evaluation, unlike SCRUM do all steps at the same time.\n2. Responsibilty of team members increase. Every sprint checks list of tasks and who did which functions. It makes team members work hard. For example, if someone didn‚Äôt do nothing this week, the others can know it and make him do that. Otherwise, in the worst case, the others might notice it shortly before deadline of project.\nSpiral model emphasizes individuals less than SCRUM. It focuses whether the risks can be resolved or not and how to do it.\n\n- Disadvantage of SCRUM:\n1. When the works are not defined sufficiently, the costs and plans will be inaccurate to bring about negative project. For example, team members do works shortly and fast with SCRUM and they can misunderstand with not-detailed task definition.\nOn the other hand, with spiral models, they at first think about not only objectives, but also alternatives and constraints.\n2. It can be burdensome for members to have many meetings. For instance, team members have lots of meeting and works except SCRUM, so some of them feel tired of it. Spiral models works within iterations which is less regular meetings than SCRUM, so it can be less burdensome.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644957,
      "meta": {},
      "text": "In contrast to the usual Spiral Model, Scrum is an agile development model. It works by periodically completing backlogged tasks to produce potentially shippable product increments. \nOne of these periods is called sprint and consists of a sprint planning meeting, daily scrum meetings and a sprint review meeting.\nEach one of those takes around two to four weeks to complete.\nIn comparison to the Waterfall Model, the Scrum Model can react quickly to changes in technology, demands and functionality. This is due to the planning meeting being repeated in every sprint, which enables developers to react quickly.\nScrum also allows for better control and transparency, because of the scrum meetings and with the dedicated roles of Product Owner and Scrum Master.\n\nA negative Aspect of Scrum is the large amount of meetings happening, which reduces total time for development. Planning and Reviewing Meetings can be not only time consuming, but also arise coordination problems.\n\nLastly, every one of the Roles of the Scrum Process, i.e. Scrum Master and Prodcut Owner, has to be filled. This is not possible in every type of company, especially small startups.\n\nIn comparison to the spiral model, which is fitted better for large and complex Projects and which produces a lot of the software early on in the software lifecycle, Scrum would be better fit for medium large groups of developers for a software project, which needs to be responsive to developments, for example in the area of artificial intelligence or machine learning.\n",
      "score": 54.2,
      "language": "ENGLISH"
    },
    {
      "id": 5621399,
      "meta": {},
      "text": "Scrum is a way of managing and controlling software and product development. A Scrum Team consists of a Product Owner (who makes sure his requirements are met), a Scrum Master (who is responsible for the proper conduct of the process) and the Scrum Team Members (the developers). A Scrum Project is made of a product backlog (a list of all the tasks involved in completing the project), that is then divided in Sprint backlogs (where major task are divided into smaller ones): each sprint has the same duration throughout a project and a new sprint starts immediately after the end of the previous one. At the end of each sprint, the results are reviewed. It is based on working in parallel, communication, adapting to change, and resolving issues as soon as possible.\nScrum is perfect for projects that don't have clearly identifiable requirements and require a flexible approach. For example, for the developing of an app, many constraints or additional requirements might arise, that would need quick adaptation.\nMoreover, it improves customer satisfaction: everyone on the team is working to their best and is constantly adjusting to internal and external feedback. For example, for the development of a game, it makes a lot of sense to use Scrum so that it is precisely what the customer wishes for.\nHowever, it requires extensive training: everyone needs to understand the benefits and specificities of this approach for a project to be successful. For example, if you want your team to use the Scrum methodology, you need to make sure everyone understands and masters it.\nMoreover, it is not related to the project's deadline: although there are many smaller deadlines, the overall deadline is not really considered. Therefore, the Product Owner needs to make sure the team understands his time constraint.\nSpiral and Scrum both work with iterations. The Spiral Model's iterations (one circle) do not have a specific length.However, whereas the Spiral Model highly depends on risk management, there is no risk management phase in Scrum.\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621625,
      "meta": {},
      "text": "At the beginning of a project, a product backlog is created in which the general requirements of the project are defined. Then in each sprint, which is usually a period of 2-4 weeks, items from the product backlog are taken and divided into individual tasks, in order to develop a shippable product increment. The progress of these tasks is discussed daily and the overall sprint performance and what has been done is discussed at the end of a sprint.\n\nAn advantage of SCRUM is the adaptability to incoming changes and that the requirements don't need to be fully defined at the beginning. This is important, because customer requirements often change during the development process and the team has to be able to react to these changes. Another advantage is also related to the customer: because in SCRUM a product increment is produced after every sprint, the customer can give a lot of feedback, even during the early stages of development. \nHowever, a disadvantage of SCRUM can be that the process has a lot of meetings that can keep the developers from actually developing. In agile software development like SCRUM, it is common to focus on working software and not in comprehensive documentation. This can make it a lot harder for new starters in the team, because they have to look through the (sometimes rather cryptic) code in order to understand the project, instead of being able to learn through a well-designed documentation. This can be especially problematic, when this person does not know the programming language/technology.\n\nCompared to SCRUM, the spiral model relies on heavy planning before the development process, which makes the process less flexible. When comparing the product increment, in a spiral model there is a prototype after each iteration, but it is usually not considered shippable, while this is important in SCRUM. \nBecause the spiral model is very formalized upfront, there might be less meetings required during the development process. However, the extensive design upfront can (but does not have to) result in a code that is easier to understand and well documented.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622101,
      "meta": {},
      "text": "Scrum is a technique that is not only used in software, as its original definition comes from Rugby and other sports(\"a Scrum is a way to restart a game after an interruption\"). In its base, Scrum is a technique that can deal with change in agile processes, for example as it was used in games, to deal with interruptions. In software it manages and controls software and product development with rapidly changing requirements and improves risk management by cooperation, improved communication and also the delivery of product increments. I will now list 2 advantages and 2 disadvantages of Scrum and give common examples on each of them. The first advantage is the benefit from the daily scrum meetings. By constantly facing the task, the entire team can be more productive and exchange things on the product every day in their scrum meeting. This maximizes the spread of information and therefore helps to adapt change, for example when the product owner decides to add certain requirements that need to be fulfilled in the end product, the team can immediately adapt on this in their daily scrum meeting where the product owner can also participate. One disadvantage of this is that in every meeting the Scrum master needs to discuss the things that didn't work well in the previous working period. As the Scrum master overviews the work of the entire team, it might take time to analyze faults everyday and it would be fatal if he misses only one mistake. The presence of this scrum master is also another advantage tho as he enables direct communication between the product owner and the scrum team members. Each team member is asked to identify specific things that the team should be doing or not doing during the scrum meetings. Then the scrum master can adapt the requirements of the product owner to imrpove the productivity/output of all the team members. Another disadvantage can develop when certain team members stop to communicate directly. As the \"Scrum method\" and its success is purely based on team work, just a few people in that team are enough to slow the work flow down immensely, by being lazy or by being short on communication. For example when one person doesn't manage to present the required output on time, all the other team members are slowed down as well even if they already are on time with their work. So as you can see the \"Scrum method\" has a lot of potential in Software engineering, tho there are also a few risks to it.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644578,
      "meta": {},
      "text": "The essence of Scrum is quite simple, it's a philosophy, you may say, for solving problems. There is a customer who has a problem that is worth solving and that can probably be solved by developing a product (for example Software)\n\nStarting with the advantages : Probably the most important one is The Daily Scrum meeting. For example after setting the product backlog and then the sprint backlog, the daily scrum meeting has the purpose of verifying that the work should be done in time and efficiently. So all team members can be on the same page while working on the project and not just focus on his task and forget about the connection between tasks in the project. In comparison with Spiral Model that is restricted with the phase idea. where planning and communication happens first then all the phase's work is done before reviewing.\n\nThe second advantage is Sprints, that result with more involvement with the client in comparison to the spiral model. In every Sprint a backlog is determined (for example 3 tasks are determined in a project, the sprint isn't over until every task is totally accomplished) and of ourse after the sprint review where the client is consulted for feedback, a product increment happens.\n\nDisadvantages of Scrum: Scrum isn't made for always finishing a project. For example it can have the task of only developing the System design of a software. In opposition to the Spiral model that it's determination is to finish the whole project from the beginning .\n\nIt can also be difficult to integrate with a classic project management approach. Although it's usually a good solution for projects that need constant adjustments,  Scrum may not be suitable for projects that require predictability and a well-defined plan, with a defined deadline, here is where the Spiral model shines\n\n",
      "score": 85.4,
      "language": "ENGLISH"
    },
    {
      "id": 5644726,
      "meta": {},
      "text": "SCRUM:\nScrum is a software and product development technique to manage and control processes, especially in rapidly-changing environments. There are some roles and phases in scrum system: \n-Product owner is who orders the work into \"Product Backlog\" in Product Backlog Meeting,\n-Scrum team is the developer team who work in sprints with sprint backlog and daily sprint meetings and eventually creates increment of value in these sprints. \n-Scrum team and product owner meet in \"Sprint Review\" meeting in order to inspect and adjust the result and discuss if a further scrum is needed. \n\nADVANTAGES/DISADVANTAGES OF SCRUM:\nAdvantages:\n1) Large projects can be divided into manageable sprints to prevent analysis paralysis. So in scrum, unlike sprial, teams do not have to overplan things they can not know yet. \nExample:  In scrum meetings, it is aimed to do the simplest thing that can possibly work and work is refactored continuously. So this approach prevents analysis paralysis in long-run.\n\n2) In scrum system, unlike spiral, testing is done at every sprint.\nExample: Inconsistencies in system design can be noticed in early phases and thus, system development is much more efficient. \n\nDisadvantages:\n1) It is hard to estimate total cost and duration in the beginning of the project because changes are not seen beforehand. So, in scrum system, unlike spiral model, there is no risk management in sprints. In long, risky and costly projects, spiral can be a wiser choise.\nExample: managers may not want to collaborate in uncertain/risky projects\n2) Too much interruptance can lead to inefficiency. Unlike scrum system, spiral model does not allow to change requirements frequently. In spiral model, all requirements are defined in the beginning and they will be worked on during next phases. \nExample: constantly changing requirements lead to uncertainities for developers trying to concentrate on these tasks. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644824,
      "meta": {},
      "text": "Scrum deals with changes in the environment and requirements by delivering steady product increments to the customer, that can be tested and are operable. The essence of scrum is the concept of sprints: in each sprint, some activities are selected in an initial meeting from the product backlog, which includes all requirements for the finished product, and a working product with those selected items is created (duration 2-4 weeks) and reviewed in a final meeting. In the next sprint, the additional items are selected and the sprint builds up on the last working product and adds the new requirements, making it easier to adapt to changes in the environment or new/altered requirements by the customer based on the last working product.\n\n+\nAdaptation to changing requirements:\nSCRUM can adapt since new requirements can be added after each sprint. In the spiral model, it is hard to include new or changed requirements in later stages.\nHigher communication:\nThe incremental design of scrum allows for steady communication between each sprint, to minimize discrepancies. This is not necessarily a disadvantage of the iterative model, as communication can for instance happen during prototype creation.\n-\nOften hard to implement:\nDevelopers must be familiar with the concept, which is fairly different from classical models, for it to really work. The spiral model is not as complex and can be adapted easily.\nDevelopment might take longer:\nAs scrum allows for constant changes, it is easy to get lost during development because of unnecessary changes, that create a lot of new workloads. The spiral model does not have to deal with this.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644825,
      "meta": {},
      "text": "Scrum is a technique which is using an agile model to handle change and uses a so called Sprint to accomplish that. Therefore in each Sprint one ore a few tasks are chosen from the Product Backlog(basicaly a to-do list) and put into the Sprint Backlog which is a smaller and more precise to do List for developers which they will try to work off. The Actual Sprint is about 2 to 4 weeks long and after this period an increment should be provided which is later discussed in the so called sprint review. After that the team returns to Sprint planing and chossing their Sprint Backlog items.\n\nOne advantage of SCRUM is its very high Flexibility. Thanks to short iterative Sprint periods the team can choose which problem they would like to focus on next. Also they can add for Example items to the Product Backlog if the team realizes that they are absolutely neccesarry while trying to solve another Backlog items.\n\nAnother advantage is SCRUMS high transparency which is provided by daily Scrum meetings. Each morning every developer shortly summarizes what he is working on or what he/she has achieved in the last day(s), which helps everyone to keep track on where they stand and provides transparency\n\nOne disadvantage of SCRUM is that this method may be unfit for small projects. Having this method using sprints can therefore be slower than other simpler Methods. Also creating Backlogs can take quite some time and may be uneccesary.\n\nAnother disadvantage is the individual responsibility everyone has. The Scrum team has to be put together perfectly so every individual fits into it. Otherwise if a mismatch happens its is very hard nearly impossible to fix the issue during the sprint.\n\nThe flexibility advantage of scrum is also an advantage of the Spiral Model. Change requests can be realized in a later iterative repetition.\nThe spiral model is not quite as transparent as the scrum model but still in especialy in the second phase the best possible strategy is discussed by the team so everyone knows what they are working on.\nExactly as Scrum the spiral model is unfit for small projects as it can be implemented in an less Expensive(time, money,...) way.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5645016,
      "meta": {},
      "text": "Scrum is a framework, which intends to support team work. For that, it uses meetings, tools and roles to structure and manage a group project. It often is described as agile, meaning the workflow isn't as strict as other frameworks.\n\nScrum's pros are that it splits a huge project up into smaller sprints, making a project more managable. For example instead of describing project goals as \"finishing a fitness app\" it disassembles the big task into smaller ones such as \"designing the UI\", \"implementing a heart rate tracker\". \nAlso it is agile, meaning the developer can implement feedback from the customer. Instead of strictly adhering to a goal, which is stated from the beginning, scrum evaluates the goals and tasks with every sprint, so you can apply changes really quick, after spotting the need for it.\n\nCons are, that without a definite end-date, which comes with its agility, scrum projects often develop out of scope. Instead of focusing on finishing the fitness app, the developer of the scrum project might lose themselves in the details of the subtasks, spending way too much time on designing the UI for example.\nDaily meetings which come with scrum can also be frustrating for the people involved. For sprints to work, the team has to do daily standups, to update the scrum master of their progress. Especially for introverted people this can be really frustrating and uncomfortable and it can also waste a lot of time, when less experienced workers don't know what to say.\n\nA project in the spiral model is split up into phases, but those phases are not comparable to scrums sprints, considering their scope. This requires a lot of preparation and planning for a phase. Implementation of customer feedback is only possible after a phase, which makes the project more strict.\nProject goals are determined at the beginning of the project. While it does consider alternative solutions, the adaptions don't happen sprint wise. \nTime management is also difficult for the spiral model, as the end date is not known during the early phases. There are recurring meetings for the spiral model as well, those aren't as frequent as in scrum, though.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619494,
      "meta": {},
      "text": "Scrum is a Framework for developing and sustaining complex products , it helps people or teams to address complex adaptive problemes, it also handeling changer/interruptions. This technique requires a so called \"Scrum Master\" who creates an encouraging environment for discussion he stands in contact with the product owner (product Backlog)  and his team that works selectively with tasks to increment the value, during the sprint this stage keeps on repeating itself until the product is finished. \n\n\nthe first advantage is that more worke can be achieved since every member of the team is parallel working on his/her part, like in the EIST project where I am doing fronted-end and don't have to worry about database since someone else is working on that stage. \nOn the other side one hardly relies on its team members if one would leave the entire project could fail, as I know an EIST group where a member has dropped out of college the rest of the team struggles to get the extra tasks done.\nHaving said that in order of having a working scrum framework daily meetings have to take place, which helps to discuss problemes and the further planing of solving the problem, he I relay again on the EIST project, we meet once a week to help each other, like I hab a probleme with button and someone had an idea of fixing it or when we discuss/plan our next move and tasks that need to be done till the next meeting. \nLast but not least since the team members relay on each other the team hast to function meaning each member should be able to fullfill the work that is given to him/that he/she chooses, cause if thats no the case and again I've seen that in an EIST project the entire group and by that I mean 2 members that have to carry the work of 3 people and thats quite the suffering.  \n\nSo the first pro can be found in Develop and \nverify prototype (everyone is working on s.th.), the scond pro in )Plan next iteration. The fist and second con in Determine objectives since every maber has to dedicate him-/herself to the product.\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620069,
      "meta": {},
      "text": "SCRUM is an efficient way to develop software, which divides the whole project backlog into many sprint backlogs to manage the entire progress. And it's more likely to add different product increment to improve software's quality.\n\nAdvantages:\n1. Scrum can quickly adapt to changing requirements and release on time. E.g for a ticket purchase app, the customers want an addtional component to add departure time into the calendar on the phone. This new requirement would be discussed in next sprint planning meeting and then be developed.\n\n2. Scrum enables high production effiency and quality. Every producer could be a project manager, which ensures to eliminate misunderstandings as much as possible. E.g. for a project, the developer has chance to directly communicate with customers. Through feedbacks one by one, the progress of software development gets boosted. Issues that could affect testing will be resolved soon.\n\nDisadvantages:\n1. The organization of Scrum depends highly on the team members' location. Face to face meeting is critial for getting real-time feedbacks and improving daily sprint plans. Please imagine what would happen if a project team consists of people from different regions. An obvious block is schedule conflict. Day time in Europe but night time in America. Time difference would cause delayed feedbacks, thus making members more tired and hindering the smooth progress of the project.\n\n2. Experienced team members are needed and the team size should be not too big. Otherwise it may create confusion and extra burdens for sprint meeting organization. In Scrum there are lots of meetings to hold. If the team size is huge, maintenance of daily meetings must cost a lot of energies and time, which would definitely lower the efficiency. And it's more difficult to hear different voices from all project participants and to improve each sprint.\n\nCompared to Spiral model, Scrum can react to changes much more quickly due to its higher iteration frequency. While Spiral model would analyse risk of project, it's suitable for huge risky project, focusing much on quality. A step-by-step approach can lead to timely termination of the project in case of unavoidable huge risk.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620842,
      "meta": {},
      "text": "Scrum is a way to engineer software, where sprints are used to implement the features one after another. The team coordinates themself by holding daily meetings. After each sprint the sprint is reviewed and a new sprint begins afterwards.\nThe biggest advantage of scrum is adapting to changing requirements. For example if the customer wants to change the requirements, the development team changes the product backlog for later sprints. In comparison to the spiral model, the spiral model only looks at software requirements in phase 2. Afterwards there can be no change.\nThe second advantage is that scrum has a functioning product version after every sprint. This way the product can always be tested as a whole and there are less integration problems. For example a project that uses big bang integration, can have multiple conflicts and problems in the ending phase. Scrum limits those problems by integrating every sprint. Spiral has the problem too because all of the integration happens in the seventh phase, which makes it a process very susceptible to problems.\nOne disadvantage of scrum is the time used on meetings. There are 2 meetings per sprint and daily meetings. Over the project lifecycle this adds up. A small team would therefore lose time by using scrum, because organisation in a small team is not complex. Spiral doesn't have those meetings and thus saves a bit of time compared to scrum every day.\nThe second disadvantage is that by allowing the customer to easily make changes during development, a lot of work used during development could become useless or the workload may increase a lot without an increase in time or money. For example an indecisive customer may change his opinion on a requirement every sprint. This would make development a lot harder compared to making a single contract in the beginning and then following this contract for development. Since spiral has such a rigid structure, only very important changes by the client will be accepted. This removes the option for decision making on less important topics.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621386,
      "meta": {},
      "text": "Scrum is a software development technique that focuses on an agile process. It follows an iterative and incremental approach. That means in certain time intervals a potential shippable product increment will be generated. The strength of scrum lie in the fact that there is frequent information sharing work is inspected often.\n\nAdvantages:\nReduced Risk: The developers of a scrum team have to share their progress and problems, so these deviations can be taken into account in the future.\nFast Results: At the end of the sprint a potentially shippable product increment is produced. This could theoretically already be used by the customer.\n\nDisadvantages:\nCommunication Overhead: Every day there is a daily scrum meeting and there are also the sprint planning, sprint review and sprint retrospective meetings. All of these together take up a lot of time, which could be spent working.\nDoesn't Scale Well: Scrum was conceived as being used for small teams of around 7 people. If a company with thousand employees wants to implement scrum they would end up with lots of teams which would all require a clearly defined subset of tasks that they should execute in a given project.\n\nComparison:\n1: In the Spiral Model the risks are only analyzed once during every iteration. There is no way to reevaluate them.\n\n2: A shippable product with the spiral model is only realized when ALL iterations are completed.\n\n3: The spiral model also requires lots of communication and planning but the developers aren't included that much.\n\n4: Scalability of the spiral model is good as some of the activities can be planned ahead and there is a clear structure that everyone has to follow.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622739,
      "meta": {},
      "text": "Changes in scope or complications during development are inevitable, so how do we tackle these problems? Answer to these and many more questions is: Scrum. Agility and adaptivity are the key. \n\nScrum: First you need to create a list of all the things you'd need for the project(project backlog) then one needs to choose a stack of items from aforementioned list(Sprint backlog). After that a Sprint can start. A Sprint consists of daily meetings and sprinting aka developing the components. At the end of a Sprint an evaluation checks the stack if all implemented, if not they wander back to the project backlog and a new Sprint can start with another stack of items. Scrum is finished after the last sprint, which is finished after all desired items are implemented.\n\n1) Scrum is flexible and so is also the deadline for a Scrum project. There is no set deadline for a Scrum project, which might hurt the business due to delays. Let's say a a crucial element of the product could not be implemented for 4 Sprints, the project owner is furious and lost hope and would probably never work with us.\n2) Scrum needs training and change in company. Each and every member needs to understand how Scrum works to use Scrum effectively, which is valuable company hours not working on a project.\n\n1) This might not be a problem because; Scrum Projects offer faster time to market than other conventional models such as Spiral. Because of its flexibility it can overcome problems faster.\n2) Another positive of Scrum is the the Flexibility itself. Too often we try to be rigid with our deadlines and lack the quality. This kind of flexibility would better the quality of our products.\n\nSpiral is not as flexible per design but Sprints can be compared to phases/circles. Time to market has been mentioned but Spiral does not need as much training as Scrum. Also the Spiral is specifically for projects with high risk,  the model highly depends on risk management. So deadlines would be better with Spiral.\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623205,
      "meta": {},
      "text": "Scrum:\nDer Klient gibt dem Team eine Liste an Anforderungen, das Product Backlog woraus dann ein Sprint Backlog gemacht, voller Punkte die man in einzelnen Sprints dann Abarbeitet. Jeder Sprint beginnt mit einem Meeting zur Aufgabenverteilung und endet damit, ob das bisherige Teilprodukt den Anforderungen gerecht wird oder ob was noch hinzugef√ºgt werden muss. W√§hrend des Sprints gibt es dann t√§gliche Meeting, wo der bisherige Fortschritt besprochen wird und dann vom Scrammaster(Teamleader) an den Klienten weitergegeben wird.\n\nVorteile: \n- das Entwicklerteam kann schnell auf pl√∂tzlich Anforderungs√§nderungen des Klienten oder auftauchende Probleme innerhalb des Sprints reagieren, da die Aufgabenverteilung klar ist und es t√§gliche Meetings gibt\nBsp.:  ein Klient m√∂chte bei seiner App, dass bestimmte Dinge gespeichert werden wie Vorlieben oder Aktivit√§ten des Nutzers, das Team kann es dann in diesem Sprint noch machen oder dem Sprint Backlog hinzuf√ºgen\n- hilft generell der Zusammenarbeit\nBsp.:  jeder kriegt eine feste Aufgabe und kann sich nach dem Zeitplan orientieren \nNachteile:\n- das Entwicklungsteam muss gut zusammenarbeiten k√∂nnen und auch lange arbeiten k√∂nnen, da es t√§gliche Meetings gibt und die Arbeit an sich m√∂glichst ohne freie Tage bis zu mehreren Wochen dauern kann\nBsp.: Nach 2 Wochen harter konzentrierter Arbeit k√∂nnen einzelne nicht mehr mithalten oder erleiden Burnouts  was den Zeitplan dann durcheinander bringt\n- ist generell nicht f√ºr gr√∂√üere oder komplexere Projekte gedacht\nBsp.: gro√üe Bauprojekte brauchen viel Zeit f√ºr Dinge wie Material oder Rechtsfragen, wobei t√§gliche Meetings eher behindert als wirklich hilft\n\n",
      "score": 16.7,
      "language": "GERMAN"
    },
    {
      "id": 5630112,
      "meta": {},
      "text": "Scrum is a software lifecycle model which allows quick response to changes in the product requirements. There are time boxes with given duration, called sprints, in which the product gets an increment in functionality. Therefore the software is shippable from a very early point.\n\nThe biggest advantage of scrum is the possibility to respond to changes in the requirements. The product backlog just has to be extended. And respective to its importance, the new requirement can be implemented in the next sprint. For example, if the client suddenly wants a new feature although you already started developing.\nWith the spiral model this would not even be possible without restarting the whole process.\n\nAnother advantage of scrum is that the customer is satisfied early in the developing process. Therefore the client gets a working result since an early point in time. This also can take away the time pressure because the customer sees that there is progress and is less afraid that he wasted his money.\nWith the spiral model customers can also possibly see the progress when asking the team how it is going but only receives a result at the end of development.\n\nA disadvantage of scrum is that making sure that the product fulfill a certain list of requirements is quite complicated. Most customers say they want this functionality until this date. With scrum it is harder to keep an eye on the deadline because there is no deadline, there are multiple small deadlines. For example if you have time for three sprints until the client wants his final software, you have to be finished by then. But with scrum you want to have the possibility to push todo points to the next sprint what is not possibly here.\nThe the spiral model keeping track of the deadling is easier because it is designed for having a deadling.\n\nAnother disadvantage is that the team has to be well trained. A team that never worked with scrum before will need some sprints before being perfectly efficient.\nThe spiral model is quite simple to use because of its linear progress.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644297,
      "meta": {},
      "text": "Bei dem Begriff Scrum handelt es sich um eine Vorgehensweise, welche prim√§r zum managen von agilen Softwareprojekten genutzt wird. Dabei soll Scrum die Zusammenarbeit innerhalb eines Teams unterst√ºtzen, indem in regelm√§√üigen Meetings alle gemachten Fortschritte mit allen Teammitgliedern und den Verantwortlichen des Projekts kommuniziert werden. Dabei werden unterschiedlichen Personen unterschiedliche Rollen mit jeweils anderen Verantwortlichkeiten zugewiesen.\n\nEin Vorteil von scrum ist die Abwesenheit von vielen komplizierten Regeln. Durch diese simple Tatsache wird es dem Entwickler-Team erm√∂glicht viele unkonventionelle Methoden zu w√§hlen, da kein beispielsweise kein Verfahrensschritt zu einer bestimmten zeit durchgef√ºhrt werden muss. Somit kann z.B. beim ersten Scrum Meeting beschlossen werden direkt mit den Test cases f√ºr die nachfolgende Implementierung zu beginnen. Somit besitzt das Entwickler Team bei diesem Vorgehen gr√∂√ütm√∂gliche freiheit.\n\nEin weiterer Vorteil von Scrum ist die St√§rkung der Kommunikation innerhalb des Teams. Dies geschieht direkt durch die in regelm√§√üigen Abst√§nden abgehaltenen Scrum-Meetings. Hierbei wird jedes Teammitglied dazu ermutigt sich in den Diskussionsprozess einzubringen. Beispielhaft kann ein Teammitglied nachdem es den w√∂chentlichen Fortschritt und die Gedanken eines weiteren Mitglieds geh√∂rt hat Verbesserungsvorschl√§ge zu dem behandelten Thema geben.\n\nEin Nachteil von Scrum ist der m√∂glicherweise auftretende Zeitverlust bei zu unambitionierter Sprintplanung. Aufgrund der Betonung des Team Aspekts kann es dazu kommen, dass der Product Owner bzw der Scrum-Master nicht ausreichend Durchsetzungsverm√∂gen besitzt um das Team zu h√∂heren Leistungen zu bewegen. Da der Product Owner oft kein technisches Vorwissen hat kann dieser nicht einsch√§tzen welcher Zeitrahmen f√ºr die Erreichung der Ziele angemessen ist. Somit kann es in einigen F√§llen zu der Verschwendung kostbarer Resourcen und Zeit kommen.\n\nEin zweiter Nachteil von Scrum liegt in dem mit dieser Vorgehensweise verbundenen hohen kommunikationsaufwand. Hierbei muss vorallem f√ºr gr√∂√üere Teams regelm√§√üig ein gro√ües Zeitintervall eingeplant werden, in dem jeder jedem anderen seinen Fortschritt mitteilt. Auch hier handelt es sich wie bei Punkt 1 um einen potentiell minimierbaren Nachteil. Vorallem bei Teams mit √ºber 10 Mitgliedern sollte aber darauf geachtet werden dass die Kommunikationsphase in Relation zu der Arbeitszeit geplant wird.\n\nDas Spiral Model besitzt im Vergleich zu Scrum eine deutlich rigidere Vorgehensweise die durch mehr Einschr√§nkungen einen festeren Handlungsrahmen produziert. Ausserdem setzt das Spiral Model anders als Scrum die klare Unterteilung von Projekten in einzelne Phasen voraus. Hierbei sollte der bearbeitete Teil der Arbeit nach der Iteration fertig sein. \n\n\n\n\n\n\n\n\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 5619673,
      "meta": {},
      "text": "Scrum is a framework for project management that emphasizes teamwork, accountability and iterative progress toward a well-defined goal. The framework begins with the premise: Start with what can be seen or known. After that, track the progress and tweak, as necessary. Scrum is often part of Agile software development. The Scrum process encourages practitioners to work with what they have and continually evaluate what is or is not working (e.g. via Daily Meetings)\n\nAdvantages:\n\tFlexibility\nThe scrum approach best applies in a relatively uncertain environment where it isn‚Äôt easy to define the requirement and solutions before starting a project accurately. The scrum team can amend change in any part of the project without affecting the project output. Flexibility and adaptiveness are significant to define the requirements of a project as it proceeds extensively. e.g. \n\tComparison:\nWith its limited cookbook approach the project using the spiral model have longer adaption circles than Scrum and therefore arent as flexible as the agile approach of scrum.\n\n\tAgile Nature:\nScrum is suitable for a wide variety of environments and situations that don't initially have clearly identifiable requirements and require a flexible approach. Changes in requierments are easy adaptable. e.g. A new requirement comes up in a daily scrum meeting that the team can immediatly work on.\nComparison:\nThe iterative steps of the spiral model are much longer and changes can't be implemenent on a daily basis as it its possible with the Scrum Model and its Daily Scrums.\n\nDisadvantages\n\tSmall Teams requiered:\nThe Scum methodology usually works best with teams of at least three people but no more than 10. Although this can promote collaboration and teamwork, some organizations may find it difficult to rearrange their workforce into teams.\nComparison\nThe Spiral Model is also suitable for larger Teams as the group work in each step is not limited to accomodate flexibilty.\n\n\tScaling is difficult\nUsing the Scrum approach for large projects can be challenging, as implementing it on a bigger scale requires extensive training and precise coordination. e.g. Having a team of 100 People that need to be split up into scrum teams of max 10.\n\tComparison\nThe Spiral Model s often use for large scale Projects as its brings the costs down. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620075,
      "meta": {},
      "text": "SCRUM, is by definition, an agile framework for working on teams that creates value through adaptively solving problems and fostering parallel work that can quickly iterate as requirements change. Scrum relies on a cross-functional team (Developer, Product Owner, Scrum Master) that all adhere the style of working (Sprints, Daily Scrums, Planning, Reviews, Retrospectives) and pay attention to Artifacts (Product Backlogs, Sprint Backlogs, Increments) to deliver high quality work in regular, fixed, accurate timelines (e.g. 2 weeks) with potentially rapidly changing requirements.\n\nAdvantages of SCRUM:\n1) Scrum regularly gets feedback from customers and stakeholders, a common example being that after creating a requested collision type for the bumpers game for a client and going through a client acceptance test, the customer wants to change the collision.\nCompared to the Spiral Model, one must go through the entire spiral before working on the next iteration, which may waste time, and resources.\n2) Risk of incomplete software is lower in scrum, since smaller increments of work are shown regularly to product owners and the client, example being that if a sprint item was changing the car color from red to blue, if this becomes a large challenge for the team, it can be clearly discovered and addressed by the end of the sprint.\nCompared to the Spiral Model, one may have to go through the full spiral loop including unit/integration/system testing before realizing the risk of the increment.\n\nDisadvantages of SCRUM:\n1) Large teams might face issues. Common example: working in parallel on a large iOS update at Apple may use lots of time in meetings and retrospectives that are not so efficient.\nCompared to the Spiral Model, the linearity is clearly defined, so no time must be used on discussions until the whole iteration is done.\n2) Scope creep might occur. Common example is adding more features to the iOS update (new calendar, more settings) since there isn't always a defined end-date to the product backlog.\nCompared to the Spiral Model, the original requirements should be defined, and then undergo prototyping, so scope is relatively defined.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620302,
      "meta": {},
      "text": "SCRUM is an agile software development model. Its core essence is the fast reaction to rapidly changing requirements. It is organized in sprints. Each Sprint a few tasks of the entire project are chosen and a potentially shippable product increment is created. \n\nThe biggest advantage of SCRUM  is the possibility to react properly to rapidly changing requirements. \nIn each Sprint  the developer team chooses which items they will work on this sprint. The product Backlog can change in the background and the new requirements are easy to deal with next Sprint. \nExample: In game development the requirements can rapidly change during development because only through actually playing parts of the game it is possible to evaluate the gameplay and the actually necessary features. \n\nAnother advantage of SCRUM is the potentially shippable product increment which is created after every sprint. That way there is always a working version of the product ready to be deployed even if it doesn't have all the features yet. \nExample: You and your competitor develop a simple online shop for books. Whomever launches his shop first will have a huge advantage on the market. With Scrum you can deploy your product increment with less features and finish the product in the next sprints. \n\nOne disadvantage of SCRUM is the danger to start development without a proper design of the product. Companies often want to start the actually sprints as soon as possible which often leads to neglecting a proper design phase of the product. \nExample: A company develops an online shop for their products, because they want it to be ready as soon as possible the developers have to start right away. Without a proper Design on which they can orient themselves the developers will take way longer to actually finishing the shop.\n\nAnother disadvantage is the danger to plan sprints as if they are linear.  Project Manager often like to plan as much of the project as possible which clashes with the philosophy of SCRUM where you work highly adaptively to the problems during development. \nExample: A project manager plans out all Sprints and dictates the Product increments after each Sprint. Now SCRUM has actually become a linear model instead of being true to its nature. \n\nWith the Spiral model you can't adapt as frequently to change as In SCRUM, because The Iterations themselves are still linear. You create prototypes in both models but in SCRUM this prototype is also at all times potentially shippable. In the Spiral model a determind phase for product design is given, which SCRUM misses. And the process of the Spiral model is well defined while SCRUM can be adapted to the wants and needs of the company. \n\nhallo",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620831,
      "meta": {},
      "text": "SCRUM\n\nScrum ist ein beliebtes Vorgehensmodell der agilen Softwareentwicklung. Mit diesem Modell wird einem eine Technik geboten, die mit vielen Requirements Changes gut umgehen kann. Bei Scrum werden aus einem anfangs erstelltem Product Backlog Sprint Backlogs f√ºr einen Sprint abgeleitet, die iterativ stattfinden. Dadurch wird das potentielle Produkt immer weiter inkrementiert. \n\nEin gro√üer Vorteil von Scrum ist seine Flexibilit√§t in Bezug auf Requirement Changes. Durch seine iterative Natur k√∂nnen √Ñnderungen schnell behandelt werden. Da erst bei Sprint Planning das weitere Vorgehen geplant wird, kann gut auf √Ñnderungen eingegangen werden. Das Spiral Model hat durch seine Iterativit√§t die gleiche St√§rke. Da man immer zum Management der Projektes (aufgrund der Spirale) zur√ºckkehrt, kann gut mit Requirement Changes umgegangen werden. \n\nProblematisch jedoch an Scrum ist die fehlende √úbersichtlichkeit bei der Software Entwicklung. F√ºr die vielen h√§ufigen kleineren Sprints werden Sprint Backlogs erstellt, die einem nicht das Gef√ºhl der √úbersichtlichkeit des gesamten Projektes bieten. Man besch√§ftigt sich bei der Software Entwicklung somit eher mit kleineren Aufgaben und verliert das Projekt in seiner G√§nze aus den Augen. Bei dem Spiral Model ist dies √§hnlich - auch wenn es aber m√∂glicherweise auch gar nicht anders geht. Das Spiral Model wird in der Regel f√ºr komplexere Projekte verwendet, bei denen es ohnehin auch schwer w√§re, eine √úbersicht zu behalten. \n\nEine gute Koordination in gro√üen Projekte ist f√ºr Scrum eine Schwierigkeit. F√ºr ein gro√ües Projekt sind mehrere Entwicklungsteams von N√∂ten. Aufgrund des starken Kommunikationsbedarfs von Scrum erschwert das die Software Entwicklung immens und ist somit kontraproduktiv f√ºr das Projekt. Das Spiral Model dagegen ist sehr gut f√ºr gro√üe Projekt geeignet. Durch das Risk Management in jeder Phase wird das Risiko minimiert und macht das gro√üe Projekt skalierbar.  \n\nEin weiterer Vorteil von Scrum ist die darausresultierende Kundenzufriedenheit. Durch die verschiedenen Sprints werden immer Product increments geliefert. Somit sieht der Kunde nach jedem Sprint Fortschritte an seinem Produkt und ist zufrieden. Beim Spiral Model kann man mit einer √§hnlichen Kundenzufriedenheit rechnen. Der Kunde kann gut in der Fr√ºhphase der Entwicklung einbezogen werden und Software wird direkt in der Fr√ºhphase des Projekts produziert. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5620852,
      "meta": {},
      "text": "Scrum is a process model of project and product management, especially for agile software development, used to organize the software creation process within a team, including the scrum master (supervises the process), the team members (developers) and the product owner (customer). The project is structured through sprints that are used to impelment a previously stated set of tasks, are repeated within fixed time frames as long as there are open tasks in the product backlog (an dynamic set of requirements to complete the project) and include a daily meeting and a review as well as a sprint-retrospective at the end of the sprint. \n\nAdvantages of Scrum: \nIn comparison to the Spriral model, Scrum facilitates management and control of software and product development with rapidly changing requirements, for example if the customer asks for an additial feature or does not need a specific feature anymore.  Spiral model deals with change between activities, but does not allow change within an activity. \n \nIn comparison to the sprial model, Scrum improves risk management by improved communication, cooperation and the delivery of product increments for example through the daily meetings, where misunderstandings ect. can be addressed already very early. The sprial model does not specify these kind of meetings which might lead to the fact, that communcation is being neglected. \n\nDisadvantages of Scrum: \nAs scrum is very agile, the roles of the team members must to a certain extend also be dynamic and people need to adapt to changes very quickly which might be a disadvantage as this assumes that people are able and willing to do this. For exapmle if a certain application must be tested and all other developers are occupied by other tasks, a person that might not favor to test the code might however be aksed to do that in order to complete the sprint in time. The spiral model has more pre-defined tasks through the iterations and does therefor not face this problem. \n\nAnother disadvantage of Scrum is that it is not possible in advance to guarantee for a submission date or deadline, as the creation process is dynamic and changes are not clear from the beginning on. The same however hold for the sprial model, whereby there are no changes within the iteration but between the iterations.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621462,
      "meta": {},
      "text": "SCRUM is a framework for software development by structuring processes in time-boxed short sprints that are reviewed on a regular basis allows quick iteration and incorporation of user feedback into the development process. A product backlog is translated into a sprint backlog which teams work on for a pre-defined time period, after which the work is reviewed by important stakeholders, needed iterations defined and further items from the product backlog chosen to. This helps teams work together more effectively. \n\nThere are two key advantages of SCRUM. \nFirst, the framework is ideal for environments with frequent changes as it allows us to iterate on a more frequent basis to quickly adjust to changed requirements. Therefore, it brings value especially in fast moving environments where user feedback needs to be incorporated more quickly, similar to the spiral model. This means that the roadmap is adjusted continuously when risks arise, whereas for the spiral model all risks are identified in the beginning, then tackled in a linear way by developing a prototype. \nSecond, it is a very efficient way to develop software as it ensures clear focus for teams through continuous development and makes the individual effort of each team member visible during daily scrum meetings. Also for the spiral model repeated development helps in managing risks, however the spiral model relies on more documentation in contrast.\n\nThere are two main disadvantages of SCRUM. \nFirst, it can be challenging for large teams to adapt the framework as it requires lots of communication and experience with high time effort for daily meetings. This is contrary to the spiral model which relies on documentation and is better suited for larger projects.\nSecond, the lack of a definitive end date and constant adoption of changing feedback can heavily delay processes and quality can only really be implemented in the very end. This is similar to the spiral model where there is also a chance of meeting neither budget nor schedule in case risks cannot be resolved. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621611,
      "meta": {},
      "text": "SCRUM ist ein zyklisches Arbeiten, bei dem nach jedem Zyklus, bei SCRUM Sprint genannt, ein in der Theorie ver√∂ffentlich bares Produkt herauskommt und von Sprint zu Sprint dieses mit mehr Features ausgestattet wird. Dabei treffen vor und nach jedem Sprint alle Teammitglieder mit dem Kunden zusammen, um das Vorankommen des Projekts und des Teams zu besprechen.\n\nDabei bietet SCRUM den Vorteil, dass es im Gegensatz zum Spiral Model sehr gut mit h√§ufigen Ver√§nderungen klarkommt, da die Struktur von SCRUM recht viel Freiheit l√§sst und man jeden Zyklus den weiteren Verlauf neu planen kann, w√§hrend das Spiral Model keine Ver√§nderung w√§hrend einer Aktivit√§t zul√§sst.\nSo kann, wenn nach einem Sprint eine App auf einmal doch nicht f√ºr nur 100 Nutzer, sondern auf einmal 1000 Nutzer gebaut werden soll, beim SCRUM die Umplanung einfach im neuen Sprint vorgenommen werden, auch wenn die vorherigen Aufgaben noch gar nicht abgeschlossen wurden. Beim Spiral Model m√ºsste erst die Aufgabe abgeschlossen sein, um sich dieser √Ñnderung anzunehmen.\n\nZus√§tzlich ist die Kundenabsprache bei SCRUM um einiges besser, da dieser bei den meisten Meetings dabei ist und so den Prozess mitverfolgen und bei diesem auch mitentscheiden kann. Beim Spiral Model kann dieser nicht wirklich mitentscheiden nachdem er seine Anfangsanforderungen gegeben hat.\nSo kann der Kunde bei SCRUM, wenn er sieht, dass ein Feature nicht so umgesetzt wurde, wie er sich das dachte, dieser das einfach bei einem Meeting anmerken und dann wird dies beim n√§chsten Sprint bedacht.\n\nNegativ muss man allerdings bedenken, dass bei SCRUM das Team selbst den Sprintbacklog bestimmen muss und mit mangelnder Erfahrung dieser evtl. nicht eingehalten werden kann, was zu Verz√∂gerungen f√ºhren kann, w√§hrend dies beim Spiral Model mehr gegeben ist.\nDadurch kann es passieren, dass ein Team, das SCRUM zum ersten Mal verwendet sich ma√ülos √ºbersch√§tzt, was dazu f√ºhrt, dass sie hinter den Zeitplan geraten.\n\nZus√§tzlich ben√∂tigt SCRUM sehr gute Kommunikation, was im Spiral Model durch die gegebene Struktur nicht zu schwerwiegend ist.\nSo kann z.B. durch mangelnde Kommunikation eine Website nicht weiterarbeiten, da Frontend und Backend nicht richtig miteinander kommunizieren, sich aber ihre Probleme nicht richtig mitteilen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621827,
      "meta": {},
      "text": "Scrum is a widely used subset of agile model. It is known as a software product development strategy that organizes software developers as a team where all the members have the same goal.\n\nBenefits of scrum: \n1) Reviewing each sprint before the team moves on to the next one spreads testing during development. \nIn this way, developers have the opportunity to immediately see and fix the mistake made at the beginning or in the middle of the development. This fact makes testing much more easier comparing to spiral model where they test the product just at the end of the development.  \n\n2) Developers who want the freedom to make decisions thrive in scrum teams. Developers have the right to make their own decisions throughout development, as they work on the work assigned to them on the developer team on their own. This will boost the morale of the team comparing to the team of spiral model.\n\nDisadvantages of scrum: \n1) Losing any team members can hurt the progress of the project. Since every developer in the developer team has his/her own work, they have to be finished until deadline in order to  move on the next sprint. If one of the developers leaves work, it interrupts the whole process. In the spiral model, this situation can be handled more easily because they work as a team and don't divide work into sprints.\n\n2) Scrum teams do not work well when the scrum master micromanages their work. When the scrum master can not manage dividing product into sprints and personals, whole process interrupts and lots of problems occur throughout development. Since there isn't a scrum master in the spiral model, they don't have this risk at all.  ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623089,
      "meta": {},
      "text": "Essence of scrum: \nScrum is a way in which teams work together to develop a product. The Product development with Scrums occurs in small pieces, which are called sprints, with each piece building upon previously created ones. Its like divide and conquer algorithm, which helps members of the team work creatively and effectively, and also helps developers respond to feedback and change, to build exactly what is needed.\n\nAdvantages of Scrum:\n1.Easy visibility of all stages of the process throughout the development:\nA good overview of the development process helps finding possible issues\n\nSpiral model is divided into several phases, which can be large, which doesnt help to keep the overview.\n\n2. Ability to adapt to changes effectively:\nBecause  Scrum iterations occur every week, and the plan is normally limited to one week, the next plan for the next week can be adjusted to include needed changes.\n\nIn Spiral model, there are only several phases in beginning of which the plan can be adjusted to changes.\n\nDisadvantages of scrum:\n1.Because Scrum is often being used in small groups, the leaving of a team member has a signitficant negative impact on the development\n\nIn Spiral model, development process in lead by a phase plan and normally is being used in bigger groups, where the levaing of one team member is not very important\n\n\n2. The pressure on team members is big, because every week a considerable progress must be made, because other team members count on you and you have to tell the progress in sprint review at the end of the week\n\nIn spiral model, the phases are more extended in terms of time, so a team member can for example work not so much on the first week, but on the other weeks he makes a good progress. In scrum, every week must have good progress, in spiral model the phase must just be completed at the end\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623162,
      "meta": {},
      "text": "SCRUM is an agile method in Software development that can handle frequent change. In SCRUM, work is performed in parallel by self managing teams and divided in small and easily maneagable cycles of about 2 weeks called sprints.\nAdvantages:\n1. SCRUM can deal with change better than Spiral. Spiral is iterative and can deal with change between iterations but not within the iterations, so the time of response to changes is lower than SCRUM. Example, during the development of a delivery app, the customer wants to add a new payment method spontanously, because they have signed a contract with a financial company. SCRUM  allows to add this method in the next sprint (in the following 2 weeks aproximatly).\n2. The use of sprints help to divide the required tasks of the software development in small tasks per cycle. Spiral gets cumulative with each  itearions, this causes that the lasts iterations deal with a lot of more of complexity and information that makes the development harder. Example: the development of the software for a plane can be divided in small tasks and this avoids mistakes.\n\nDisadvantages:\n1. It requires too many meetings. Example: during the development of a small project of a browser extension, and you only have 2 months for this, the daily meetings consume too much time and are not necessary.\n2.  Ir requires several roles and this can be a problem for small teams. Example: in a startup, with a team of 5 people, the need of 3 roles  (scrum master, product owner and development team) can bring over complexity to the team and make the development harder than other method like Kanban.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5623206,
      "meta": {},
      "text": "in Scrum you first describe a product backlog, that has all of the tasks that you need to do, out of those tasks you describe some into a sprint backlog. The scrum team will work on the tasks in the sprint backlog over an entire week called sprint and they will have a daily scrum meeting in which they describe what they did and still have to do. After the sprint week they might have a product increment, which might be shippable, and then follows the sprint review meeting in which the tasks that were completed are discussed and the things that were not yet done, afterwards you iterate over the process again and start with the description of this weeks sprint backlog again, by taking not finished tasks out of the product backlog again, until the product is finished.\n\nAdvantages: \n\t\t1. Scrum can help teams complete project deliverables quickly and efficiently\n(as mentioned after each sprint you possibly have an increment that can be shippable for example. the design of a website, or the first functions, etc. )\n\t\t    2. Large projects are divided into easily manageable sprints.\n(on large problems/projects you might not know where to start and what has already been done, with scrum you always have a direct plan due to the product and the sprint backlog)\n\n\nDisadvantages: 3. It requires training so that the iterative system of scrum works as intended\n\t(if you have never done scrum, it will be hard to just start out with it, for example, the iterative system and the daily scrum meetings have to be planned out well. You need proper communication when working with scrum)\n\t\t\t4. It requires work to be done in small teams\n(for example, groups with less than 3 or more than 10 people will have a hard time working together in a scrum)\n\ncomparison: 1. while both models help to create project deliverables scrum does it more efficient and quicker than the spiral model does, as the spiral model, creates an entire prototype of the entire system, instead of just small parts of it, which is very cost-efficient, as you have to do it multiple times as you fix the bugs.\n\t\t2. the spiral model creates prototypes of the entire system, and iterates over them by bug fixing and comparing the prototype to the system requirements while working on small parts of the project at a time is more efficient and can even relieve some stress on the workers, as they are not getting overwhelmed by a big amount of work at once.\n\t\t3. getting used to scrum may need training at first but in the long run, I deem it to be way more efficient for the company and the workers compared to the spiral model, which we got used to (but would also need training if you were to change into that model without any prerequisites)\n\t\t4. scrum has a downside, that it should be done in small teams/groups, while the spiral model can be worked on no matter how many people, but if you make multiple small scrum teams, that work on different sprint backlogs, you can finish the process / the tasks of the product backlog faster. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644289,
      "meta": {},
      "text": "Welcome, everyone, to my presentation about Scrum. \nToday, I will be explaining the essence of Scrum and its advantages and disadvantages. In its essence, Scrum is a framework that helps teams work together by encouraging teams to learn through experiences, self-organize while working on a problem, and reflect on their wins and losses to continuously improve. Work is performed in a parallel manner and the main roles are Product owner, Scrum Master and Scrum team members, each one of them has a significant role in the Scrum empirical process. Teams go through sprints, where the team creates a potentially shippable product increment. In these sprints, the team accomplishes all the agreed-upon backlog items, and evaluates it accordingly. This sprint-backlog is put together by the team in the beginning of every sprint. It is a subset of accomplishments from the product backlog, which is the collection of items and requirements prioritized by the product owner.\n\nScrum has many advantages, since it ensures effective use of time and money. Also, through the various scrum meetings, the team gets clear visibility and overview of the project. All work done is evaluated on a regular basis, for example through the daily scrum meetings. Scrum is a framework, where work is performed in parallel, whereas work in the spiral method is done sequentially. Moreover, Scrum works for any type of project, but the spiral method isn't suitable for small projects, since it relies on Risk analysis and requires highly specific expertise. The spiral model isn't always time efficient, since work is done sequentially and cycles are highly complex, so that an individual loses overview. This also makes the timetable of the project hard to anticipate.\n\nHowever Scrum isn't free of flaws, since Scrum can only be successful if all team member are cooperative, and if any team member leaves, it has a huge negative impact on the project. Quality is also hard to test unlike the spiral model, which has many testing phases and good documentation of the whole project. Thank you for your attention.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 5644295,
      "meta": {},
      "text": "Scrum is a software development method. It structures the development im multiple sprints that are around 2 weeks in length. At the start the product backlog is filled with the wanted features and every other week the sprint backlog is filled with the features for the sprint. The goal is to have a potentially shippable product increment after a sprint.\n\n\nThe advantage of scrum is to have a potentially shippable product increment after every sprint. In our team project we could still launch our site fuud.place without implementing every feature.\n\nAnother advantage is the high agility of the team. Due to the rather short sprints and smaller teams, it's easier to pivot. For example we could still change the features of our site without a big disturbance.\n\n\nA disadvantage is the small size of team members of a scrum team. It limits the maximum productivity of the team. Ex: in larger projects you need multiple scrum teams.\n\nScrums progress is harder to predict as it doesn't have a clear time plan. It's to agile for that. Ex: other managements have a strict release date etc\n\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644627,
      "meta": {},
      "text": "So, SCRUM in it's core is an agile way of developing software in a team. The main point is, that all the work is done in parallel, in several phases called sprints, where each day a meeting is held to discuss the work that has been done. \nThe main advantage of SCRUM is, that it allows for pretty frequent change in the product. That way if the customer now also wants to change something in the user interface mid project this can be done mid project. This can't be done this easily done in the spiral model, because going back steps isn't that easy.  This leads to another advantage in that initially a project that doesn't have clearly identifiable requirements in the beginning can still be developed in a efficient way. Like if the customer wants an online shop, but doesn't really know yet, what it should look like. Here the spiral model also fails, because it needs a more specific requirements to even start.\nBut scrum also has it's disadvantages, because of the agility involved it's hard to scale to big teams, for the reason that it's then it's harder to be as agile as with smaller teams. In real life this could be an issue with big software companies like Google who have a team of 20 devs on one project. Here the Spiral model is better, because it has a better hierarchy and this leads to a more organized structure.\nBecause of the agility scrum is hard to plan so it's not that easy to have a final deadline. So it can happen that so many changes come in later in the project that no clear deadline is in sight. The spiral model does this a lot better because it has a much clearer path of when to finish.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619417,
      "meta": {},
      "text": "Scrum is a framework, which includes a Product Owner orders the work for a complex problem into a Product Backlog, the Scrum Team turns the work into an Increment of value during a Sprint and the team and its stakeholders inspect the results and adjust for the next Sprint. \n\nA great advantage is the decreased time to market. Incrementally delivering value to the end customer means that the ¬≠highest-value and -risk requirements can be delivered before the lower-value and risk requirements. When developing a server, we don‚Äôt  need to wait until the entire server is complete before releasing anything into the market.\n\nAnother Advantage is short sprints enable changes based on feedback a lot more easily. If we are developing a server, we can incorporate daily testing and the feedback of product owner into the development process, so we can address issues while they‚Äôre fresh. \n\nA disadvantage is that Scrum often leads to scope creep, due to the lack of a definite end-date. For example, when developing a server, we need to complete the sprint backlog that needs constant adjustments but there is no predictable deadline of the whole project.\n\nAnother disadvantage is It requires experienced personnel and training. When we need to complete a large project, it will be divided into many sprints and requires daily meeting which means a longer period of intense work and everyone involved needs to have experience and skills to quickly and successfully perform their own tasks. \n\nSpiral model is good for large and complex projects but using Scrum framework in large projects is challenging. Spiral model allow us easily change requirements at later phases and additional functionality can be added similar to scrum framework. And it is also difficult to estimate the end-time for spiral model same with scrum model, because the number of phases is unknown at the start of the project. \n\n\n\n\n\n\n ",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5619747,
      "meta": {},
      "text": "In Scrum a scrum team develops a product defined it the product backlog within multiple sprints of several weeks.\nThe Product Backlog is the in multiple subparts splitted up Product goal, where is every sprint only some goals are realized. In Scrum there are daily meetings where the team members tell each other what they have done the last day, so problems get noticed early.\nOne advantage of scrum is that the development is agile so its most time possible to add additional parts to the product like an additional feature. In the spiral model its harder to add additional features as it has limited iterations, where you cant add new features after a certain point.\nAnother advantage is that after each sprint you have a \"shipable product\" so if the money runs out you have at least a runnable product (even if it can a negative aspect when you get fired because your current product is good enough). In the spiral model you havent really a \"shipable product\" in each iteration, as you work towards the final result and not towards a sub goal.\nA negative aspect is thats its hard to use scrum in large projects, as its impossible to make daily meetings with more than 20 persons. In the spiral model its not really eazier to use it in larger projects as there are meetings too.\nAnother negative aspect is thats its very hard to use when you have to implement a single algoritm in a perfect runtime, as its hard to split the product up into a product backlog. In the spiral model its eazy when you want to implement a single algoritm as the spiral madel is optimised for this.\n                            ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620390,
      "meta": {},
      "text": "Scrum is a framework approach to research and control the development of complex products through continuous iteration. Project members work on a 2-4 week sprint cycle and discuss the goals for the next sprint with the customer upon completion. Sprint Planning, Daily Scrum, Sprint Review and Sprint Retrospective are defined prior to the start of each sprints.\nThe advantages of Scrum are: \n1) It increases team collaboration and coordination. Because at the beginning of each Sprint cycle, the Scrum team participates in a Sprint planning meeting. In this meeting, each member participates in a discussion about what the sprint needs to achieve and first selects which person will do which part or job. Then they get the Sprint Backlog, they collaborate with each other during the sprint, and they hold a Daily Scrum where they review how to improve the teamwork after the end of the sprint. So Scrum can increase teamwork.\n2) Scrum improves progress visibility. This is because Scrum teams meet every day. They can be kept up to date with the progress of each team member. Then if they have a problem while performing a task, they can also raise it in time and can stop it at any time. This minimizes the risk of errors.\nThe disadvantages are: \n1) If the objectives of the tasks are not defined accurately, thieves can lead to a lot of uncertainty in orientation. This is because if the Scrum team does not define the objectives clearly in the discussion at the beginning of each Sprint, or if the division of labor is not clear, the project objectives will not be met and the project costs will increase. If the project is not clearly defined at the beginning, it will not be well understood by the team members, which will also delay and increase the cost.\n2)The Scrum Master will have lost everything before. Because the Scrum Master cannot interfere with the team, they have to reasonably trust their team. But too much intervention can lead the project to failure.\nThe advantage of Spiral Model for Scrum is that it ensures that the results of the project will not be deviated, because the client will always follow the development phase and give suggestions in real time, and changes can be made at each phase of the project. But the disadvantage is that the project time is too long, and then the product will not keep up with the current mainstream products. This can lead to product obsolescence.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 5620887,
      "meta": {},
      "text": "The core essence of Scrum:\nIn comparison to the traditional approach to a software development project, Scrum enables the team to react to changes and deal with the interruptions caused by it. In Scrum the requirements for the software are collected in the product backlog, which can always be changed and reprioritized during the project. The team works on these items in parallel and not in a sequential manner like in other methods. \n\nAdvantages and disadvantages:\n+ it's easy to react to changes in the requirements of the software since Scrum consists of small changes and constant feedback. (e.g.: The customer checks the product increment and comes up with other requirements that come to his mind during the presentation of the current state. Then it's easy to react to these new requirements. It would be much harder to react, if the product was already completed when this idea comes up)\n-> The spiral model is also flexible when it comes to changing requirements. It is possible to react to these changes also at later phases \n\n+ Scrum ensures the best results by involving the customer. With Scrum the developer team gets regular feedback from the customer and can directly react to his needs to ensure that the customer is happy with the software that gets shipped in the end. If the developer team gets less feedback, the risk is higher, that the customer is not happy in the end. \n-> in the spiral model it is also possible to involve the customer in early stages of the development and in comparison to Scrum, the software is developed early in the software life cycle.\n\n- Scrum projects have no predicted time limit and cost forecast. It can happen that the team needs several sprints to finish the software, which can lead to high costs. \n-> The spiral model has also a big risk of not meeting the schedule or to exceed the budget and it is also possible that the spiral goes on indefinitely, which will also lead to extremely high costs, making it unsuitable for smaller projects. \n\n- Scrum works best in small teams. This can be challenging for some companies that have a lot of employees, because they have to rearrange the workforce into small teams that are able to work together in a productive way. \n-> In comparison, the spiral model works best for large projects, which require also more people working on it, because it is more work to do. It is therefore also suitable for larger teams",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622686,
      "meta": {},
      "text": "Core essence:\nThe main goal of scrum is responding changing requirements quickly by following agile methodology. The work is followed with parallel process which improves efficiency. By having daily scrum meetings, the communication between team members is improved and risk can be realised earlier.\n2 advantages:\n- The potentially shippable product is delivered quickly which is at the end of sprint (2-4 weeks). In spiral model, you have the end product at the end of all the iterations which is late. \n-Even if there are impediments the project continues and after the sprint finished, the approach is improved by team members. In Spiral Model, if the risk could not resolve the project is terminated.\n2 disadvantages:\n-Having daily scrum frustrates team members. \n-The project's deadline is hard to implement. As the project is implemented with the sprints the team need to make sure that the project is on track to be completed on time.\nComparison:\nThe spiral model can deal with changes between activities but the agile method allows to respond change more quickly by responding the changes at the end of each sprint.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622796,
      "meta": {},
      "text": "Scrum is a well defined agile software development framework that is widely used by many teams. At its core, it's made up of a continuous chain of two to four week sprints. In each sprint, new features are implemented to culminate in a potentially shippable product increment by the end of the sprint. A sprint planning meeting takes place before each sprint to move a set of deliverables from the product backlog, a collection of features to be implemented for software system, into the sprint backlog. During the sprint, teams meet daily to discuss their progress on the deliverables in the sprint backlog and further steps. At the end of the sprint, there are sprint review and sprint retrospective meetings to evaluate the new product increment, the performance of the team, and to move any unfinished deliverables back into the product backlog to be picked up in the future.\n\nOne advantage of scrum is that the short sprint period allows for quick changes to the direction the team is moving in as requirements for the software system change. For example, if a new market research report shows that users are actually younger on average than expected, the scrum team can quickly respond and adjust their software product to appeal to a younger audience. This is opposed to the spiral model, which does not allow for spontaneous changes to the envisioned software solution. Another advantage is that there is a high degree of transparency in the process due to daily scrum meetings and a high degree of autonomy of the software engineers. For example, if one software developer discovers a previously unknown dependency for the deliverable they are working on, they can easily reach out to the team to discuss how to handle the situation, drawing on the entire teams expertise. This level of communication and teamwork might not be achieved with the spiral model because teams software engineers don't always have to communicate to complete their tasks.\n\nA disadvantage of scrum is that it is harder to measure progress. In a spiral model, a project manager might be able to measure progress by looking at the percentage of the final product is completed. However, in scrum there is no final product to measure against, making it hard to quantify progress outside of a single sprint. Another disadvantage is that there is a lower focus on deadlines, which might put less pressure on the team to deliver results on time. On the other hand, the spiral model still has concrete tasks that are easy to assign a deadline too.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644897,
      "meta": {},
      "text": "Core Essence of Scrum:\nScrum is a model which should solve a customer problem by developing a product, whereby they will work directly with the customer to have a better understanding of the problem. The development team will work closely with the Product owner and will subdivide the wishlist of all the tasks of the problem into smaller tasks that should be solved from week to week.  The development team will have a daily meeting to share the progress of their work. After each working period, the development team will present the progress of their work of that period to the customer and will make forward development decisions based on the updated progress of work together. The process repeated itself till all the tasks are finished.\n\nAdvantages of Scrum:\n The team has a very clear overview of the working progress---\nThe team will have a scrum review of every working period(1 week for example). In the scrum review meeting, they will notice how many tasks they have successfully finished and the unfinished tasks will move back to the product backlog to be finished in the further sprints. The product backlog acts like a checklist where the team can have a clear overview of finished ad unfinished tasks and so to make forward development decisions.\n\nThe team has a very clear problem understanding since they work very closely with the customer\nThere are meetings like the sprint retrospective where the customer can participate to discuss how the last sprint went out, and what should be improved or sprint review where the customer can add additional tasks to the product backlog based on the current progress. So therefore the development team will always exchange information with the customer during the development phase.\n\nDisadvantages of scrum:\nScrum does not have a given end date where the product should be finished, which can lead to a long development period. In every scrum review, the customer can add some new tasks to the product backlog because they want to have some additional features for the product. And also if the team can not finish the sprint backlog in one sprint, they can just move the unfinished tasks back to the product backlog and finishes it later. This can lead to a very long development process, sometimes much longer than it should be.\n\n\nComparison:\n\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620739,
      "meta": {},
      "text": "Scrum is a framework that helps teams work together. It describes a set of meetings, tools, and roles that work in concert to help teams structure and manage their work. In a nutshell a Scrum team, composed of a product owner, a scrum master and the scrum team members, repeat the same processes (sprints) over and over again, namely organizing the backlog with the tasks that still have to be done and then choosing the ones that'll be performed this sprint in a process called \"Sprint Planning\". Afterwards the scrum team works together and finishes the increments of the current sprint and reviews it afterwards. \n\nThrough scrum large projects can be divided into easily manageable sprints. A project such as a video game require years of work. If it isn't divided into smaller sections team members and supervisors will lose the control over who does what. Additionally scrum, being agile, adopts feedback from customers and stakeholders and can change along the way. For example if the product owner didn't like the interface changes after a sprint he can add that to the backlog and it can be changed in as little as a sprint. \nOn the other hand scrum often leads to scope creep, due to the lack of a definite end-date, for example when  the backlog keeps on filling and the work seems to \"never end\". Quality sometimes also lacks, as it's hard to implement until the team goes through an aggressive testing process. For example after a sprint the new component is tested, but the whole software including the component is not.\n\nThe spiral and the scrum aren't too different. With the spiral model, large project can also be divided into smaller parts and it also has a dimension of \"review\" to it, but it's not that important. The scrum framework works better when there is a \"product owner\" that has the exact vision of the whole project.\nMoving on to the disadvantages, the spiral model is called a spiral because the team gets closer and close to the end so there is more of an idea of an ending to a project. Also the spiral model has an extensive part called \"development and testing\" where the integration of the component is more extensively tested than in the scrum framework.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621673,
      "meta": {},
      "text": "SCRUM is an agile development methodology. The framework follows a structure timeflow via sprints of fixed length. Within each sprint, the product is incrementally developed and at the end of each sprint, there is a shippable version of the product.  \n\nThe biggest advantage of SCRUM is the minimisation of risk from possibly changing requirements. Since it is an agile process there is constant communication and evaluation of the current version of the product and its requirements. For example, if after a sprint, the requirement is changed, then it can be incrementally added/modified within the next sprint, while in some linear processes, the framework does not allow for changes during development process. While in contrast, Spiral Model does not allow for change within each activity due to more defined activity phases.\n\n\nIt is also arguable that an advantage of SCRUM is easier workload management. Each sprint, the team identifies the sprint backlog, which is a subset of features from the total product backlog, that will be realised only within this sprint. It allows for better efficiency as the team will not be overworked, as well as better overview of time-period planning. While in contrast, within the Spiral Model, the workload for each activity may grow exponentially if there are more features added to the product backlog.\n\nA main disadvantage of SCRUM, is that it requires smaller teams. Which may be difficult to transition to within a big organisation. A point can be made to use the SCRUM of SCRUMs approach, but even then, it becomes very difficult to set up if the organisation is big enough. \n\n\nLastly, SCRUM requires that the team is familiar with the methodology and roles within SCRUM, which leads to a necessary training of staff to be done. \n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621225,
      "meta": {},
      "text": "Core essence of SCRUM:\n- Framework to manage complex product development. \n1. Project kickoff meeting: Whole team develops a so called product backlog in which the requirements of the stakeholder are documented and also the criteria for the technical implementation.\n2. First Sprint planning meeting: Create a smaller documentation in which you pick some of the requirements of the product backlog, which you want to solve and execute in this sprint (2 to 4 weeks time for implementing the requirements)\n3. Daily sprint meetings with the whole team, in which you discuss what you already did, what the\nproblems are and so on. After the time slot you have a sprint review meeting, in which you present the\ndone work of the sprint to your stakeholders.\n4. After sprint: Sprint review meeting: Inspect the previous sprint and look for improvements. When the stakeholder is still not happy with the result or there are still requirements on the product backlog who haven't been solved in a sprint, then the next sprint begins and your start again with the sprint planning meeting. \n5. After some sprints you hopefully can present a potentially shippable product.\n\nAdvantages of SCRUM:\n- You can always change things that you have done in previous iterations and if you see that a special requirement is not ready for implementation you can skip it and still finish the phase, but you will have to restart this requirement in a later phase. In a Waterfall model you can't change things from previous phases.\n- Ein weiterer Vorteil sind die daily sprint meetings. Diese f√ºhren dazu, dass es keinerlei Missverst√§ndnisse im Team gibt, oder falls es welche gibt, dass diese dann gleich aufgekl√§rt werden, damit es in der Entwicklung nicht zu Schwierigkeiten kommt. Das gesamte Team ist also immer in jedem Entwicklungsschritt auf dem neuesten Stand. Beim Waterfall model hingegen kann es sein, dass Aufgaben auch in bestimmten Teams gel√∂st werden, diese Teams sich aber nicht regelm√§√üig absprechen, sodass deren L√∂sungen vielleicht am Ende im Konflikt stehen.\nDisadvantages of SCRUM:\n- Der Vorteil, dass man w√§hrend eines sprints in scrum etwas √§ndern kann und auch von vorherigen Sprints ist gleichzeitig ein Nachteil. So viele √Ñnderungen bedeuten, dass sich der Prozess verl√§ngert und die Entwicklung au√üerdem keinen strickten Plan hat. Beim Waterfall model hat man hingegen einen strikten Plan und hat nach jeder Phase ein Ergebnis das fertig entwickelt ist. \n- Ein Nachteil ist, dass SCRUM in gr√∂√üeren Gruppen nicht umsetzbar ist. Je gr√∂√üer die Gruppe, desto schwieriger wird es, in den daily meetings alle Probleme oder neueste Entwicklungen zu besprechen, da sich diese Meetings sehr in die Breite ziehen. Au√üerdem verliert man dort dann schnell den √úberblick, wenn das Team zu gro√ü wird.",
      "score": 62.5,
      "language": "GERMAN"
    },
    {
      "id": 5644782,
      "meta": {},
      "text": "In essence SCRUM is a framework for efficient collaboration between teams for solving complex problems. SCRUM is amazing at managing and controling product and software development with changing requirements, as well as improving risk management through better cooperation, communication and steady delivery of product inceremnts.\n\nA process like the spiral method is very slow and inefficient unlike SCRUM only one task at a time can be performed while in SCRUM tasks can be worked on in parallel. Therfore it is very adaptable and flexible leading to better quality work, efficiency and and its structure allowing for more time and efficient money expenditure. Unlike in the spiral method which is less time effective and higher cost needing more documentation and time being a linear approach.\n\nHowever it is often challenging to apply it to larger teams. Unlike the spiral method which is straight forward. This however can be solved by spliting up a larger team into many smaller teams another benefit of SCRUM leading to productive and efficient work. However for this to succed it requires experienced team members as it can get a little complicated and the communication between the teams and members needs to be on point for it to work. Therefore training may be required before hand. Compared to the spiral method which again is straightforward and simple with not much training needed however because of this a trained SCRUM team can more cost efficiently and time effectively better and quicker complete a task.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644994,
      "meta": {},
      "text": "Scrum is a modern, widespread method of developing software, which allows for flexibility in the goal and structure of the project. By developing in focused sprints of 2 weeks, and having a potentially tangible and useable piece of the end-product by the end of it, the developers and customers can reflect and improve their ideas and methods, and re-aim the project.\n\nThe difference between Scrum and the Spiral model, is that the spiral model makes iterations over the entire product in each layer, and each iteration takes more time and resources compared to Scrum. Scrum's sprints are usually around 2 weeks, but there's more of them in a project, and they focus on clearing some specific predefined backlog items.\n\nPros: \n\n\t- Flexibility: \n\nIf the Customer and Developers made a mistake when defining the requirements of the software, e.g. the requirements have changed, with the Spiral model, the project would have to be either re-done completely, or heavily changed. With scrum, this problem would be mitigated, because of the constant iteration, reflection and reassessment, and the smaller chunks of useable product peaces produced in the sprints.\n\n\t- Delivery speed and Testability:\n\nIf the customer's idea isn't that great and refined when it's specified and development starts, even the Spiral method is way too set-in-stone to easily make changes to it, and ship a test or Alpha version for affirmation from test-groups. But, Scrum can provide a rough, but use-ready version of the software rather quickly, and test it in units on the go, which also saves time. \n\nCons:\n\n\t- Difficult integration:\n\nScrum requires extensive training, organizational changes, the deadlines may change during the development and managers don't like any of this. Scrum also requires significantly more work from the customer and other stakeholders, because of the reflection and re-aiming parts of it.\n\n\t- Hard to scale:\n\nIn large-scale projects and organizations, the Scrum hierarchy can get very complex. Having Scrums of Scrums of Scrums gets confusing really quickly, and 1 mistake or delay can cascade and have large consequences.",
      "score": 54.2,
      "language": "ENGLISH"
    },
    {
      "id": 5620752,
      "meta": {},
      "text": "Scrum is a technique where you have short development cycles paired with regular meetings in order to react to changes quickly. There are different roles like the Scrum master who manages the meetings and communication, the product owner who gives the contract, and the developers who implement the app.\n\nThe advantages of Scrum are that you can quickly react to changes in the environment or in the requirements and that the developers have the authority to reach out if there are any uncertainties. The disadvantages are that because of the small cycles it can happen that you never get into a good flow of development because it gets interrupted so often and that you can lose your initial goals out of sight when you change too much during development.\n\nYou can react more quickly to changes as with the spiral model and in the spiral model, there's no authority to reach out to. But when you are in the spiral in the development phase, you can work without interruption and also the targets won't change once you begin development",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621601,
      "meta": {},
      "text": "Scrum is an agile methodology in the field of project management. It differs from classic project management  patterns like the Spiral Model in that there is no longer a project management that distributes the tasks to the team members. Furthermore, Scrum has no classic project phases, but so-called \"sprints\" which are project phases that can last between one and four weeks with the goal is to have a potentially shippable product at the end of each sprint, which matures with the number of sprints until it is completed.\n\nOne advantage is that roles are distributed differently than in classic project management. There is not one project manager who controls everything in terms of content and organization, but a product owner who is responsible for the product, a Scrum master who organizes meetings and is responsible for the product and sprint backlog, and then the development team. This ensures mutual control and allows continuous work, which is not given if only one person controls everything, as is the case in the hospital model. For instance, if the Scrum master is ill on short term, the team can for sure go on with all tasks asking the product owner and vice versa.\n\nAnother advantage is the incremental work in sprints. In this way, new small work packages are constantly being completed so that a big and whole picture emerges. If the development in a sprint does not match the target picture at all, this is noticed at the latest during the sprint review and it can be reacted to at short notice. For example, if an App is to be programmed in which cars are all red, and the color of the cars is implemented in sprint number three, then it will be noticed at the latest during the review if they are blue. In the Spiral Model, this would only be noticed at the very end in the finished product and might have to be corrected at great expense.\n\nOne disadvantage of the Scrum model is that it requires extensive training. Top down old-school project management is very straightforward, where one project manager manages a team of developers. But with Scrum, all participants need training beforehand to become familiar with the nature of work and the roles they got assigned. And training is costly and needs time. If, for example, new developers are recruited from companies that only did classic project management so far, it might take some time until they can work effectively in an agile team. \n\nAnother disadvantage can be that it requires more effort if strict deadlines for delivery of the product are involved. Within traditional project management, the plan is precisely to be done with everything at a certain time. In agile models like Scrum, this is a bit more uncertain, since a new work package is completed in each sprint. So if an absolute showstopper is identified in a sprint just before the deadline, it can become more difficult to meet the deadline. In classic models like the Spiral Model, this might have been noticed earlier.\n\n\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622698,
      "meta": {},
      "text": "Scrum is an agile method of software development. It embraces parallel work processes, as well as the ability to quickly adapt to sudden changes in project requirements or work barriers.\n\nAdvantages:\nUsing scrum, each sprint results in a potentially shippable product, increments of the spiral model only result in prototypes. Sprints might end in features with only partially working subfeatures, spiral prototypes might have all necessary functionality of certain systems, which potentially don't work together to form a complete product.\n\nTake Bumpers sprint 3 for example: the game is playable, but not all features are fully fletched out yet. Would the game have been realised using the spiral model, certain parts like the cars or collision logic might have been completed, but the gameboard as their connection could have been missing completely, resulting in an unplayable prototype.\n\nDisadvantages:\nThe spiral model allows for a risk analysis segment in its software life cycle, which can be helpful in deciding wether a project is worth continuing given its potential problems.\nScrum only allows for the analysis of occuring problems in the development, and their respective pushback to later sprints.\n\nAgain, using Bumpers sprint 3 as an example, should the implementation of the code responsable for the cars movement turn out to be impossible to do in the selected framework or current computaional environment, using the risk analysis of the spiral model could prove the project doomed to fail, while scrum can only push it back so far in its sprint backlog.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622841,
      "meta": {},
      "text": "(1)\nSCRUM is a project management method, which is split up into different sprints. Each sprint (same duration) tackles a few specific items and concludes in a potentially shippable product. The benefits are the reflections that occur regularly and make it possible to adapt to change while adding items in each sprint to the product.\n\n(2)\n(+) Changing circumstances can be easily adapted because every sprint represents a new start and therefore changes can be taken into consideration. For example, when developing a new app, which shows short videos and testing demonstrates the duration is too long, the feedback can be taken into account in the next sprint.\n(+) SCRUM helps to work in the most efficient way because due to the feedback loops everyone is on the same page and knows what works and what doesn‚Äôt. Moreover, teamwork is being improved due to the ongoing interaction and collaboration. \n(-) Products that have regulations like medical products can‚Äôt be easily tested after one sprint, because the outcomes might have really bad consequences and therefore need a long duration to develop in order to be really sure it will not be harmful.\n(-) Products often have relationships with other departments of a company. Therefore the SCRUM sprint in its timeframe won‚Äôt be possible. For example, when developing a new car a lot of departments like engineering, design, production, and suppliers are needed to complete a sprint. With that many players involved, it will be very hard to actually complete a sprint.\n\n(3)\n(+) Changing circumstances can also be tackled by the Spiral Model due to the iterations\n(+) The Spiral Model also requires the team to work closely together and therefore provides the benefit of improved teamwork.\n(-) For regulated products, the highest risk would be tackled first and for that, a prototype would be developed. The prototype is developed with a linear model and therefore would improve the situation compared to SCRUM because also longer durations are acceptable.  \n(-) For more complex products, the Spiral Model would fit better because there is no real limitation for one iteration and therefore developing a prototype will work better.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623095,
      "meta": {},
      "text": "The core essence of SCRUM is the idea of dealing with constant change/interruptions. This means that the approach for software & product development is one that is able to react and adapt to rapid changing requirements throughout the entire process, with processes working in parrallel. This results in improved risk management by improving communication, cooperation and delivery of product increments. SCRUM is comprised  by a product backlog, a sprint back log, increment, daily scrums, sprint reviews and sprint retrospectives.\n\nADVANTAGES:\n1- The scope of a project can be managed easier by using the sprint approach (the project can be divided into smaller tasks that are easier to control and achieve) (best for small/medium projects).\n2- SCRUM helps team adopt easier the feedback from customers/stakeholders thanks to its agile approach (assuming simplicity, chosing to embrace change and having change be incremental).\n\nDISADVANTAGES:\n3- Requires high commitment/cooperation from all team members (if one team member fails to commit to things such as daily scrum meetings it can put at risk the integrity of the whole project)\n4- It is hard to implement the quality principle as it requires on the job learning and even coaching. SCRUM requires an aggresive testing process for successful quality check which teams may lack (in terms of skill/judgement)\n\nCOMPARING TO SPIRAL MODEL:\n1- Also good at managing the scope of a project by splitting it in 4 key phases (better for larger/complex projects)\n2- It is more complicated to apply changes, as the Spiral model can only deal with changes between activities but not within.\n3- Doesnt rely heavily on commitment of team (i.e, daily meetings) but instead relies heavily on team following documentation requirements and following the spiral model protocol\n4- Like SCRUM, quality is difficult but for different reasons. Spiral can be expensive, with the outcome depending heavily on risk analysis (which requires highly specific expertise to be applied correctly).",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623230,
      "meta": {},
      "text": "Scrum is an agile development process which deals with change during said process. It helps managing and controlling development with rapidly changing requirements. Also it improves risk management by improving the communication between team members and the delivery of smaller product increments.\n\nAdvantages:\n- Large projects can be divided into better manageable portions (sprints):\n\tThe software in development will have many functions which don't heavily rely on each other. With Scrum \n\tthe team can focus on some few functions each sprint and chaos doesn't break out.\n- The team grows together and gets to know each other better through the scrum meetings:\n\tA company has a large team working on a big project. With the help of the daily meetings the members of \n\tteam will get to know each other better and will be able to help each other more.\n\nDisadvantages:\n- Possibility of the project being dragged out:\n\tWith the practically endless amount of scrums a project can be dragged out and may not get finished \t \n        since \"the work can just be done next sprint\" and there's no end/due date.\n- Daily scrum meetings can be frustrating for some team members:\n\tDuring a project some people might just want to finish their task and then having to sit through other \n\tpeople talking about their problems during a scrum meeting can be demotivating/demoralizing.\n\nSpiral Model Comparison:\n- Kinda similar with activity 1: \"Determine objectives [...]\". So the spiral model also determines what part to do now, at the beginning\n- No daily meetings therefore that extra team building is missing in the spiral model\n- The spiral model has a clear \"ending\". The project will be terminated if the current risk couldn't be resolved\n- No, daily meetings with unforeseen problems of other team members, therefore less frustration for the other team members",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644385,
      "meta": {},
      "text": "SCRUM is part of agile project management which allows for teamwork in cross-functional teams, accountability of the involved people and an iterative progress to reach the defined goal.\nFor that reason, the product owner of the project initially creates a product backlog containing a \"wishlist\" of requirements for the whole project, which is tackled by the developer team in a defined timeframe called sprint and is monitored along the way by the SCRUM master. For each sprint, a small part of the product backlog is divided into the sprint backlog, worked on during the sprint, progress is evaluated in the daily SCRUM meeting and in the end and the potentially shippable work is reviewed in the sprint review and retrospective, this process is repeated until the project is done.\n\nAn advantage of SCRUM is the flexibility in changes, which makes it easy to adapt in uncertain environments where requirements are hard to define. If a new requirement needs to be added because it wasn't clear in the beginning, it can be added to the backlog.\nThe spiral model is also known for the flexibility, requirements can also easily be adapted in later phases.\n\nAlso, SCRUM lowers the costs since the required documentation and controls aren't significant, making it suitable for smaller projects. The spiral model however is quite expensive, so a cost-trade-off can happen for smaller projects.\n\nHowever, SCRUM doesn't take into account the deadline of a project, it only defines expectations of the team and personal deadlines, rather than the time horizon of the full projects. A project can take 5 sprints but could potentially also take 1000.  The spiral model also has difficulties in time management, here, the number of phases needed is also not clear from the beginning.\n\nThe chances of a project failing in SCRUM are highly depending on the contributing individuals, how they are cooperating and how they are trained, for example if the product owner doesn't pursue clear goals or keeps track of challenging risks. In the spiral model, the focus lies heavily on risk identification and reduction at every phase, making it suitable for large and complex models.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644931,
      "meta": {},
      "text": "SCRUM is a software development model that is made in a way that the software can adapt to changes over time. The teams of developers do weekly meetings where they come up with tasks to do during the week (sprint) and daily meetings during the week (daily scrum) to update each other on their status.\n\nSCRUM Advantage: Concurrency among different developer teams. This is an advantage since the software would be completed in shorter time as more people do their work simultaneously. Example: making an automobile, where all parts of the automobile are simultaneously, and then combined. Doing this linearly (waiting for the engine production to finish to make the chassis etc.) would take too much time. This is different to the spiral model where some teams wait for others to start their work, like testers waiting for several iterations.\n\nSCRUM Advantage: Adaptability to change. Since the developers work in short sprints and all of them add features daily, a potential mistake can be fixed easily without changing the whole software system. Different again to the spiral model, where the project is potentially terminated if such a risk occurs. Example: writing a thesis, if we write everything in one week then we won't have time to adapt, but if we do little steps constantly, we can adapt to potential changes.\n\nSCRUM Disadvantage: Harder to manage, because it requires a lot of cooperation between teams and the leaders have to be able to manage the tasks well. This is easier in the sprint model because the process is more linear compared to SCRUM. Example: similar to managing a small software team vs. a whole company.\n\nSCRUM Disadvantage: The end product could potentially differ from the initial idea. This is also possible in the spiral model, but the potential in SCRUM is bigger since everything component is implemented in an isolated way to adapt to changes. Example: Like making an automobile again, but since we don't have the complete model if the car yet, we do it part by part, and in the end the final product is different to what we initally had in mind.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620479,
      "meta": {},
      "text": "Scrum Definition: Das Team √ºbertr√§gt in einem festen Zeitabstand Tasks aus dem Product-Backlog in den Sprint-Backlog welche dann bis zum Ende eines Sprints umgesetzt werden. W√§hrenddessen gibt es t√§gliche Meetings. Am Ende jeden Sprints gibts es dann ein potential shippable product increment welches die neu umgesetzten Punkte enth√§lt als auch ein Sprint-Review und ein Sprint-Retrospective zur Nachbesprechnung und Verbesserung des Sprints um darauffolgend das anf√§ngliche Sprint planning f√ºr den n√§chsten abzuhalten zu k√∂nnen. Beendet ist der Prozess wenn der Kunde das Produkt am Ende eines Sprints als vollendet akzeptiert.\n\nVorteile: Sehr flexibles nicht lineares Vorgehen. Erlaubt theoretisch das sp√§tere Erg√§nzen von z.B. weiteren Anforderungen des Kunden im laufenden Prozess oder das verschieben von nicht geschafften Fortschritten in den n√§chsten Sprint. Bei Spiral k√∂nnen √Ñnderungen schwieriger mit eingebracht werden da dies auch z.B. eine erneute Planung des vollen Arbeitsprozessen unter allen Aspekten wie Kosten etc. zur Folge h√§tte.\n\nStarke Eigenverantwortung des Teams und somit z.B. mehr M√∂glichkeiten f√ºr das Team nach Ihrer individuellen Arbeitsweise zu arbeiten was nicht nur den Teamgeist f√∂rdert sondern auch effizienteres Arbeiten erm√∂glicht. Bei Spiral wird das Projekt ja vorher durchgeplant und l√§sst so weniger Raum f√ºr eigenverantwortliche individuelle Planung.\n\nNachteile: \nGeringe Planbarkeit im Punkt von z.B. Kosten und Zeit durch die flexible Planungsweise und die Unterteilung des Projektes in kleine Planungsphasen ohne einen √úberblick √ºber den Gesamtkontext wie bei dem Spiral Model wo das Gesamte Projekt anfangs durchgeplant wird wobei auch das risk management wesentlich besser zu h√§ndeln ist.\n\nGeringe Struktur innerhalb des Sprints somit kann es z.B. ohne gute Kommunikation zu Missverst√§ndnissen kommen wie z.B. bei der Reinfolge der Umsetzung ben√∂tigten Abh√§ngigkeiten durch verschiedener Teammitglieder. Bei Spiral sind solche Faktoren da sie von Anfang an betrachtet werden bereits fr√ºh zu erkennen und zu umgehen.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 5620702,
      "meta": {},
      "text": "1. quick explanation:\n\nScrum is an agile development methodology used in the development of Software based on an iterative and incremental processes.  \nScrum is adaptable, fast, flexible and effective agile framework that is designed to deliver value to the customer (Project Owner) throughout the development of the project after each Sprint.\nThe primary objective of Scrum is to satisfy the customer‚Äôs need through an environment of transparency in communication, collective responsibility and continuous progress.\n \n2. advantages / disadvantages:\n\n+ Large projects are divided into easily manageable sprints. While developing a software you set up new sprint goals after every sprint review in a small time period for a long term goal.\n\n+ Improves risk management by improved communication, cooperation and the delivery of product increments. If you develop a website its very important to handle any arising risk issues. As Scrum just has a small group of people and sprint meetings occur quiet often its very likely to improve risk management with frequent communication. \n\n- longer duration -> Scrum projects do not have a definite timeline, because work is based on each sprint. Therefore projects can get drawn out for longer times than expected.\n\n- more Testing necessary -> Sometimes, teams do not test as aggressively as they need to with each iteration, so it can negatively impact the final product‚Äôs quality. Scrum teams need to be fully committed to their project and each part of the Scrum process for it to work effectively.\n\n\n3. comparison between SCRUM and the Spiral model:\n\nScrum is best suited in the case where a cross functional team is working in a product development setting where there is a non trivial amount of work that lends itself to being split into more than one 2 ‚Äì 4 week iteration. Scrum is also useful for smaller projects, because it's agile, adopts feedback from customers and stakeholders and it's not very complex.\nHowever the Spiral Model is suitable if its a large and complex project, because it's better to have a larger team working on the product, but also for projects in which cost and risk analysis is important.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621112,
      "meta": {},
      "text": "Scrum ist ein iteratives, inkrementelles und adaptives Model bei dem es drei Rollen mit unterschiedlichen Aufgaben und Verantwortlichkeiten gibt, sowie verschiedene Meetings. Ein Durchlauf, der auch Sprint genannt wird, dauert jeweils ca. 2 bis 4 Wochen und am Ende hat man ein potenziell auslieferbares Produkt-Inkrement, welches dann mit jeder Iteration erweitert wird. In einem Sprint werden ausgew√§hlte Items aus dem sogenannten Product-Backlog bearbeitet, dieses kann sich im Laufe des Projekt agil ver√§ndern. \n\nDadurch dass bereits nach dem ersten Sprint ein Produkt-Inkrement zur Verf√ºgung steht, welches dem Kunden auch pr√§sentiert werden kann, ergibt sich der Vorteil, dass der Kunde hier eventuell schon Abweichungen von seiner Vorstellung fr√ºhzeitig erkennen kann und intervenieren kann. Dadurch werden Differenzen in der Vorstellung des Projekts zwischen Scrum-Team und Kunde fr√ºhzeitig eliminiert. Sollte es bei einem Projekt erst am Ende m√∂glich sein, dem Kunden die Software zu zeigen, so kann hier beispielsweise eine Unstimmigkeit auffallen, die das gesamte System beeinflusst und nicht leicht zu korrigieren ist, sodass erhebliche Mehrkosten anfallen.\nEin weiterer enormer Vorteil ist, dass das Product-Backlog w√§hrend des Projekts ver√§ndert werden kann, hierdurch ist es m√∂glich √Ñnderungen des Kunden zu ber√ºcksichtigen. Sollte zu Beginn des Projekts ein bestimmtes Feature f√ºr den Kunden wichtig sein, im Laufe eines l√§ngeren Projekts ist die Implementierung dieses Features durch ein beispielsweise neues Gesetz nicht mehr m√∂glich, so kann dieses Feature aus dem Product Backlog entfernt werden und spart so Kosten. Ebenso kann eventuell als Ersatz ein neues Feature hinzugef√ºgt werden.\nNachteilig ist durch den agilen und iterativen Ansatz, dass kein klarer aktueller Stand zu erkennen ist und das gesamte Projekt in seinen Abl√§ufen komplexer ist. Man kann beispielsweise nicht sagen, dass die Implementierung abgeschlossen ist, da hier immer wieder Erg√§nzungen kommen.\nAu√üerdem besteht durch die zahlreichen Meetings ein hoher Kommunikationsaufwand, der die eigentliche Arbeit aufh√§lt. \n\nAb der Entwicklungsphase sind beim Spiralmodell keine √Ñnderungen mehr m√∂glich und der Kunde kann bis auf die Konzeptionsphase nicht so eingebunden werden wie bei Scrum. Allerdings ist beim Spiralmodell der aktuelle Stand durch die klar definierten Iterationen erkennbarer und der Kommunikationsaufwand ist geringer.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 5621959,
      "meta": {},
      "text": "core essence of scrum:\nflexible software development life cycle which makes reacting to changes easy and efficient\nwork in close contact with customer & adapt to customer's whishes\nenables devs to ship a semi-finished result instead of nothing in case the time/money runs out\n\npro:\n- quickly adapt to changes during development phase (sprint) => minimize losses, when customers opinion changes\ne.g.:\nin our EIST team project we repeatedly had to adjust the structure of our REST API, as new problems arose\nthis had to be done as quickly as possible, as the work of the other team members depended on it\n=>in spiral model you can only adapt to changes when the current activity is over\n\n- low risk at release -> every sprint results in potentially shippable product increment => project won't fail prematurely\ne.g.: \nyour team implements feature after feature in the EIST team project\nnow the time runs short but you still have the sorting feature of the POIs map missing\nluckily you still have a potentially shippable product increment that has all the features except this one and is working fine -> can be released without any \"major\" detriment\n=> spiral is high risk, as one monolithic release happens at the end -> possibility of not finishing the project in time\n\ncon:\n- additional time overhead due to management (e.g. daily scrum meetings, sprint retrospective)\nyour scrum team has daily scrum meetings during the sprint and sprint retrospective meetings after each sprint => more time means less crunch time for the dev team & higher quality product\ne.g.: \nthese meetings don't take much time on its own, but if you combine the time investment during the whole project, the team might have had time to implement the poi sorting feature that's now missing at the end of the EIST team project\n=>risk analysis as a phase in the spiral takes time, but there are no daily meetings\n\n- requires specially trained personnel (product owner, scrum master) => huge investment of the company\ne.g.:\ncompanies like google often hire special employees for the position of product owner or scrum master\nwithout the concept of scrum the salary of these managers might have been invested in the development process otherwise, which could've extended the monetary deadline of the project by weeks\n=> spiral requires risk analysis experts -> also huge investment",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622838,
      "meta": {},
      "text": "SCRUM is an agile software lifecycle model focusing on a vertical, incremental and adaptive developement process using self-organization and constant reflection. It is structured into cycles (called Sprints) with a fixed time interval, where each sprint contains all steps from analysing to testing in order to create a potentially shipable product after each iteration. All features of the software get added to the product backlog and for each sprint a set of those tasks gets picked into a Sprint-backlog to fulfill them in the sprint. \n\nDisadvantages: \n\n1) It requires time to set up: SCRUM has multiple roles, meetings and workflows which makes it harder to setup than the spiral model, where you just need to iterate over the same 4 activites for 9 iterations. A team needs to have experience about the workflows (meetings), time spans (sprint duration) and roles in SCRUM, which makes it a little bit more complicated using it for the first time. \n\n2) It is harder to scale: SCRUM works nice for small teams, but it requires a lot of organisational effort to use it for big teams. The spiral method has a very simple 4 steps, 9 iterations workflow and therefore can be easier scaled. Using SCRUM in a big team, you might end up having a SCRUM of SCRUMS, which can get complicated to manage. \n\nAdvantages:\n\n1) Adaptability: The biggest advantage of Scrum is the ability to cope with changes. You can simply add the changes to your product backlog and work on them in one of the next sprints. In the spiral model, if you finish for example the software product design iteration, you dont come back to this phase, making it hard to add changes during the development. In SCRUM you iterate over designing in every sprint, which allows you to for example design the changes in another sprint. \n\n2) Customer statisfaction: Direct communication with the Product Owner is one of the key ideas of SCRUM, which leads to developing a product the customer is more likely to like, because his involvement in the process was higher. In the spiral model the team focuses on the requirements defined in the beginning, but dont really adapt them along the way, which might lead to a product the customer doesnt like as much as one that has been developed with him closely involved like in a SCRUM process. \n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5644660,
      "meta": {},
      "text": "scrum ist eine Vorgehensweise , in der man w√§hrend der Softwareentwicklung vor√ºberlegte Pakete zu einem fertigen Produkt entwickeln will. Dabei verlaufen die einzelnen Schritte des Entwicklungsprozesses iterativ , sodass zwischen den einzelnen Schritten immer wieder meetings stattfinden bei denen sich die beteiligten unter einander austauschen und ggf ver√§nderungen vornehmen.\n\n-Vorteile von scrum liegen zum einen darin, dass man schnell entstandene Probleme wie code issues nach jedem austausch zwischen entwicklern zeitnah erkennen und beheben kann.\n Dies ist beim spiral modell nicht immer m√∂glich da dort weniger Kommunikation herrscht und man daher nicht in kleinen Zeitabst√§nden mit einander austauscht. Fehler werden aber trotzdem recht in jeder Iteration erkannt und gefixt,  meist aber erst zu einem sp√§teren Zeitpunkt behoben, was evtl noch aufw√§ndiger w√§re da dann weitere Fehler entstanden sein k√∂nnen. \n\n\n.-Zum anderen k√∂nnen Entwickler mit scrum schneller auf request changes reagieren. Beispiel daf√ºr w√§re, wenn der Kunde f√ºr die Entwicklung eines spiels auch noch weitere Funktion haben m√∂chte wie Spielerauswahl etc . Da die Entwicklungsschritte iterativ sind k√∂nnen diese \"Pakete\" ebenfalls aufgenommen und in die entwicklung mitber√ºcksichtigt werden. \nBeim spirall modell ist das m√∂glich, auch wenn nicht immer zeitnah. Da in jeder Iteration die phase detemine constrains stattfindet, k√∂nnen neue W√ºnsche des Kunden w√§hrend der Entwicklung aufgenommen werden.\n\n- Nachteile von Scrum w√§ren wiederum der stetige hohe Kommunikationsaufwand was sehr viel Zeit in Anspruch nehmen kann . Ein Spieleentwicklerstudio verliert dadurch wertvolle Zeit und es sogar den Arbeitsfluss behindern. Dadurch kann das Spiel nicht fristgerecht fertig gestellt werden , oder kommt unfertig auf dem Markt. \nDIeses Probleme ist beim spirall  modell nicht vorhanden da die Arbeitsschritte dort ohne gro√üe Kommunikationsaufwand wie eine Spirale verlaufen. \n\n-Und zudem k√∂nnen hohe Kosten erfordert werden. Wenn der Kunde kurzfristig zu einem eigentlichen Singlemodus Spiel w√§hrend der Produktion eine erweitererte Verson mit Multiplayer unterst√ºtzung sowie besondere Features wie Spezialeffekte etc haben m√∂chte, braucht das Team unter Ber√ºcksichtigung der Entwicklungsfrist mehr f√§hige Entwickler mit einem Know How in diesen Bereichen.\nBeim spiral modell ist das Problem √§hnlich, eine Kundenrequest kann sogar im schlimmsten Fall ein Risiko mitsich bringen welches nicht zu l√∂sen ist und das Projekt beendet werden muss.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622215,
      "meta": {},
      "text": "Scrum consists of working phases (sprints) that last 2-4 weeks and require you to solve a certain backlog of tasks from all tasks that are part of the product backlog. A scrum-team has 4-8 members and two special roles: The product owner responsible for the customer's desires and the scrum master who guides the process. Each sprint has recurring meetings with different aims and ends with a potentially shipable product increment.\n\nAn advantage of Scrum is the frequent interaction of employees within a team. Example: During our daily sprint meeting I can give an update on my achievements and raise awareness for necessary help from colleagues which speeds up the process. The spiral model has no regular meetings. There are iterations which give some structure to the work and tell employees what needs to be done currently.\n\nAdvantageous, is the fast reaction to changing requirements while having a potentially shipable product increment after every sprint. Example: A customer wants to change something 2 months after the developement start. With Scrum requirements/functionalities can be changed without going back in the process which would delay other tasks. The spiral model focuses on risk and has no specific way of dealing with changing requirements. Changing things means going back int the process which is not supposed to happen.\n\nDisadvantageous is the major disruption of the way people work. Not everyone feels comfortable working this way. For example, the meetings have caused problems at the company I work for, for people working part-time, at unusual hours or from the homeoffice. A talented Scrum Master is necessary to introduce Scrum. Coming from a linear model, the spiral model is also a disruption. However, less than Scrum and therefore it is easier introduced. \n\nLastly, Scrum needs small teams. Every member is valuable and important which causes problems if an employee quits. While there is strong communication within a team one might lack conversations to other teams which is crucial for bigger projects. For example, at Google thousands of engineers work on their services and it is difficult to split all of them up to small teams. The spiral model is suitable for bigger projects/teams and not that suitable for smaller projects/teams. Good communication and administration remain crucial.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622819,
      "meta": {},
      "text": "SCRUM: Scrum is an agile software development process, which is more sensitive and adaptable to changes. Larger tasks divided into more smaller tasks in the product backlog: thus more smaller cycles has more impact and tangible results compared to the conventional methods.\n\nAdvantages:\n- Easy to adapt changes.\n\tNew bug with the moderate amount of affect on user experience has been found in an shopping app. This can be discussed and taken into sprint backlog and prioritized. \n\n-More tangible results in shorter time\n\tAfter every sprint a Potentially shippable product increment emerges. Thus product owner can better experience the app and find out potential crucial development points or future plans.\n\nDisadvantages:\n-Daily Scrum meetings could make the group more stressful.\n\tAs an example, mobile game companies put a lot pressure under coworkers and daily scrum meetings can worsen and result in a burn out in the employees. Maybe more casual and less frequent daily meeting could help.\n\n-Scrum mainly adapted with low or moderate amount of people. Trying to adap changes and organizing the group in larger groups may result inefficient processes.\n\tLarge firms with fairly risky and huge projects may not be suitable for the scrum. For instance new software system for cars in BMW. This might take a lot of number of software engineers as well as project managers etc. Trying to create a scrum system might lengthen the process.\n\n\nComparison to spiral model\n\n-Easy to adapt change: \n\tIn the scrum model we have 30 day sprints and this sprints can be altered according to the need, thus change can be responded quickly. On the other hand spiral can also respond changes but in a more slow way. Current activity needs to be finished or current phase depending upon the change. \n\n-Tangible results in shorter time\n\tScrum can deliver an increment on the product at the end of every sprint. Spiral also delivers prototypes at the end of each iterations. Thus they are similar but spiral model iterations might take much longer.\n\n-Daily Meetings\n\tDaily meetings help scrum group to follow the project, keep motivation and adapt changes. In the Spiral model there isn not daily meetings meetings can be held periodically in longer periods: this might still accomplish the scrum daily meetings outcome without putting too much pressure on the group.\n\n- People Quantity\n\tSpiral modal is used more in bigger projects with more people to assess the risk and to solve them. Thus more robust and secure software can be developed. Scrum is more suitable for lesser people, implementation is quicker and risk assessment compared to spiral modal is lesser.\n\n\n-",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644684,
      "meta": {},
      "text": "Scrum is a technique to manage and control software and product development with rapid changes in requirements\nAdvantages of Scrum:\n1. Large project can be split into smaller sprints, thus avoiding the analysis paralysis, whereby in Spiral Model the method focuses on risk management approach, which can however lead to analysis paralysis if not enough information is needed.\n2. By the end of each sprint in Scrum there is a fully functional and shippable product increment to be delivered to end-users, whereas with Spiral, it's just a prototype.\n\nDisadvantages of Scrum:\n1. The customer may lack cooperation, for example if the changes can be communicated during the process, the customer may not feel the need to specify the requirements at the beginning of the project as detailed as possible.\nHereby Spiral Model requires as many details as possible by the requirement specification in the beginning to avoid risks.\n2. If the project does not have a clear definition, it is difficult to build a product backlog, since it is not clear what the product should be",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5645054,
      "meta": {},
      "text": "SCRUM ist eine Methode f√ºr Agile Development welche im Bereich der Software Entwicklung oft eingesetzt wird. Ziel hierbei ist es den Entwicklungsprozess in kleine Teile zu unterteilen in welchen man sich auf zuvor festgelegte Funktionalit√§ten konzentriert und in jedem Teil des Prozesses ein funktionierendes und theoretisch fertiges Produkt besitzt.\n\nEin Vorteil des SCRUM Models ist zB. die Transparenz, die sich aus den t√§glichen SCRUM-Meetings ergibt. Dies erm√∂glicht den SCRUM-Team Mitgliedern an jedem Teil der Entwicklung teil zu haben oder diesen zumindest zu verstehen. Dies gew√§hrleistet einen nahtlosen Austausch im Team.\nBeispiel: \nUI Designer und Client Programmierer tauschen sich st√§ndig aus und k√∂nnen somit leichter zusammen finden. \n\nAber auch die h√∂here Kundenbindung beim SCRUM Model ist f√ºr den Entwicklungsprozess vorteilhaft. Indem der Kunde von Anfang an in den Prozess der Entwicklung eingebunden wird, ist ein effizienteres Arbeiten m√∂glich.\nBeispiel:\nDer Kunde sagt schon w√§hrend der Entwicklung, welche Funktionen ihm wichtig sind. Somit kann Zeit gespart werden, mit Funktionalit√§ten die der Kunde nicht braucht.\n\nSCRUM kann aber besonders in gro√üen Teams schwierig umzusetzen sein. Da es sich um ein dezentrales Vorgehen handelt, kann die Kommunikation auf langen Wegen und mit vielen Personen umst√§ndlich und ineffizient sein.\nBeispiel:\nMan kann sich nicht jeden Tag sehen -> Man schreibt E-Mails die oft nicht direkt beantwortet werden k√∂nnen.\n\nAu√üerdem wird ein hohes Engagement von den SCRUM-Mitgliedern erwartet. Das fokussierte arbeiten erfordert viel Konzertration und beansprucht w√§hrend den SCRUM-Sprints viel Zeit. Auch das ist mit einer gro√üen Anzahl von Personen schwer umzusetzen.\nBeispiel:\nUrlaubstage bei vielen Mitarbeiten √ºberschneiden sich oder fallen in einen SCRUM Sprint. Somit ist kein effizientes arbeiten gew√§hrleistet.\n\n",
      "score": 54.2,
      "language": "GERMAN"
    },
    {
      "id": 5620922,
      "meta": {},
      "text": "Scrum is an agile model for managing (software) projects. The main idea is, that at the beginning of the project a backlog is created and then there are sprints, that have a subset of the issues from the backlog and these issues are solvable in this sprint. This way after every sprint an increment on the software was made and you remain flexible, when a new issue arises, because you always only plan the next sprint and can easily reprioritize issues.\n\nAn advantage of scrum is, that you get a Potentially Shippable Product Increment after every sprint. This way you prevent a potential big bang at the end of the product and are more flexible if the time to finish the project changes. (1)\nAn other advantage is, that you are more flexible and can react fast to e.g. customer feedback, because you did not plan the whole project at the start, but can easily integrate new things in the next sprint. (2)\nOn the other hand scrum also has some downsides. One is, that it is hard to scale. If you are a team of 5 people and use scrum it is totally fine, but if you are 50 people it becomes complicated. The meetings take way too long if you have to check the progress and problems of everyone. You can separate the team in multiple scrum teams, but this way a lot of work needs to be put in synchronizing the teams. (3)\nScrum is also quite hard to get used to if you used a not agile project management framework for your whole life. It can be hard to make everyone in the company understand scrum. (4)\n\n(1) The spiral model is also quite good in this point as there are multiple prototypes produced during the development and not just the finished product, but scrum still produces more frequent product increments.\n(2) In this area scrum has a huge advantage, because in the spiral model you plan the whole project at the start and it is hard to react to short term changes.\n(3) In scalability the spiral model is better than scrum because you don't have the daily meetings and less meetings in general.\n(4) The spiral model is equally hard to understand as scrum.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621641,
      "meta": {},
      "text": "Scrum is a popular technique used to manage projects in an agile way. Scrum contains of a team of people with each one having a specific role to fulfill. In so called sprints each of the members are implementing their assigned tasks from the sprint planning meeting independently from each other. In the end of each sprint, one then has a shippable product and can then start the next sprintmeeting and sprint to add additional features and adapt to new changes. \n-advantage would be that all parts of the software are developed concurrently and work is performed parallel which ensures time efficiency. The sprint review meetings also help in order to make it even more efficient since things which didnt work well in the sprint are discussed and tried to be solved. For example the implementation team had a lot to implement in one sprint and that didnt work so well due to time pressure, the next time it will be reduced. \n-another advantage is that big projects are divided into easily manageable small sprints that are not too overwhelming and dont  intimidate the team. Instead of focusing on the whole thing which seems like a lot of work, one focuses on the small little tasks one has in the sprint and do that. \n-Disadvantage could be that the whole team is depending on each other. Since everyone is doing tasks which are independent of each other, if 1memeber is f.ex sick noone is doing that tasks and that can delay the whole project.\n-2. disadvantage could be that the pressure on each individual member is really high and that can lead to members dropping out and screwing the whole project. There is a lot of pressure because each individual has a task and is just because of this task in the group. If he cant fulfill that task in comparision to the others, he might feel judged and pressured to perform better\n\nThe spiral model is different to scrum, since it is not an agile model, but a interative model. Scrum is empirical while the spiral model isn¬¥t. It uses iterations to solve risks/problems but it uses a linear-model-approach to try to solve these.\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5621910,
      "meta": {},
      "text": "Scrum is a lightweight, iterative and incremental framework for developing, delivering, and sustaining complex products and is good to deal with changes. Scrum manages and controls software and product development with rapidly changing requirements and also improves risk management by improved communication, cooperation and the delivery of product increments.\n\nScrum has good flexibility and is easy to deal with changes required by client. Additionally, daily meeting helps to find mistakes and solve them on time, which leads to better work output and efficiency.\n\nHowever, Scrum also has disadvantages. Firstly, it has high demands on the team and if one of the team members leaves, the development will be influenced negatively. Secondly, new requirements may be delivered continuously with no predicted time limit and cost valuations.\n\nWe can take the development of a reservation software as example. The client required basic reservation functions like storing the name, date of reservation or other important information of customers. The Scrum team had project kickoff meeting and begins to work. The team had daily Scrum meeting and they solved problmes like unexpected crash on time. The client had new requirements of advertisement, so the team updated sprint backlogs. After a period of development, one of the team members was ill, so he left the team. The part he was responsible for must be transferred to another people, which wasted a lot of time. Additionally, the client required recommendations of dishes again. The delivery of software could only be delayed.\n\nThe previous Spiral Model also has flexibility in requirements. Requirements can changed easily and incorporated accurately. Spiral Model is also good for risk handling and has control over whole process. However, just as Scrum, the development team also needs highly specific expertise and leaving of team member brings bad impact. It also has difficulty in time management and time estimation.\n\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5621938,
      "meta": {},
      "text": "Scrum is an agile Development model, wich Structures the development lifecycle into multiple working periods called sprints. Scrum heavily emphasizes loose Project structures and good communication to create a more flexible adaptive method of project development.\n\nIn comparison to more linear models such as the Waterfall model scrum offers a more responsive approach to a problem. Roles and Tasks can easily adapt to solve arising Problems. By not separating Phases of the Project such as testing and implementation, Problems can be solved at the root and are therefore easier to spot and solve.\n\nHowever the progress of a scrum Project is hard to gauge. Keeping a hand on the pulse of the status of the project requires it's own role in the team and presents a challenge. Projections on when the project will finish are hard to make. Using scrum requires team members to meet up daily and discuss their progress on their tasks. This can be relatively time consuming.\n\nScrum solves some problems that come from using the spiral model while coming with it's own issues. The spiral model has more clear cut roles and structures wich make the development less agile and flexible. This stands in the way of an equal work distribution. By separating phases in the spiral Bugs are can manifest at the root of the project and pose a threat to the functional integrity of the entire project. Having multiple prototypes rather than incrementally building up a project can be very redundant and wastes project rescores. On the other hand the status of the project is relatively transparent and tangible. Since roles are relatively clear cut and straight forward in comparison, less communication is necessary. This leaves more time for the team to complete their work.",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622092,
      "meta": {},
      "text": "Scrum is a framework for developing, delivering, and sustaining products in a complex environment. It is designed for small teams, who break their work into goals that can be completed within time-limited iterations, called sprints, which takes two weeks. The scrum team assess progress in daily meetings of 15 minutes or less, called daily scrums. At the end of the sprint, the team holds two further meetings: the sprint review which demonstrates the work done to stakeholders to elicit feedback, and sprint retrospective which enables the team to reflect and improve.\nPROs:\n-> Scrum can help teams complete project deliverables quickly and efficiently\n-> The team gets clear visibility through scrum meetings\n-> Scrum, being agile, adopts feedback from customers and stakeholders\n-> Compared to Spiral Model. You plan for one iteration and work. You don't plan for complete project at beginning. One iteration get planned and then execution takes place. Best part you review your plan every day during iteration and adjust it if needed. You again review your plan for whole iteration at the end of it to find improvement areas. You take these improvement ideas and try to plan next iteration better than previous iteration. So basically you continuously review and adjust your plan for better delivery.\n\nCONs:\n-> The chances of project failure are high if individuals aren't very committed or cooperative, when team members not experienced with this framework.\n-> If any team member leaves in the middle of a project, it can have a huge negative impact on the project\n-> In Spiral Model, every part usually called Phase so 1st phase pickup some work and complete all stages of execution i.e. design, development and testing etc and then move to next phase\n\n",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5623005,
      "meta": {},
      "text": "The concept of Scrum is a method for developing software in teams based on empirical process control, good communication and lean thinking that fits best systems with changing requirements. In Scrum the work on the project is organized in 2 to 4 week long sprints organized by the scrum master with the team processing the backlogged requirements, meeting daily to share their works status. After each sprint there are potentially shippable product increments showable to the product owner. \n\nOne advantage of Scrum is its agile structure allows to adopt feedback. As there is a potentially shippable product after each sprint, the product owner can review it and adapt the product backlog according to new functions and wishes. For example when on new applications you can offer them early to the customer including incoming feedback into further development. The Spiral Model doesn‚Äôt allow this kind of agile developing with its step by step  dependent structure and integration to an end product. \n\nThrough its frequent meetings the team is also provided with project overviews. For example with split tasks (frontend and backend) the scrum meetings provide team members with information about all parts of the project. This daily communication keeps updated about the status of the project, reducing risk of misunderstandings. The spiral model may has less communication between the team members, but as it relies on documentation and iterations, they can provide themselves with an overview at any time. \n\nBut Scrum can be tricky with deadlines, as short sprints and adaptable requirements make it vulnerable for overperfectionism and scope creeping. For example working on large projects like OSs with many requirements and sprints, keeping an eye on timetables and is tricky, as incoming feedback or new requirements extend sprint durations. In the Spiral model this isn‚Äôt a problem it doesn‚Äôt include external influences like changing requirements and follows a concrete plan through the iterations to a deadline. \n\nAnother disadvantage is Scrum being suitable for small teams. Even if daily standup meetings work in these working environments, for example the size of our startup, when working on huge projects the overhead of daily scrum meetings increases rapidly, e.G. making it frustrating telling everyone daily about unsolved problems. The spiral models can handle this by using divide & conquer to split the identified risks to several teams as it doesn‚Äôt rely on communication between all members. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644727,
      "meta": {},
      "text": "Scrum is an Empirical Model, where you only plan for what to do next instead of planning the whole Process of Development at the Beginning. It Operates in 2 week cycling Sprints, which are preceded by Sprint Plannings. After each Sprint you should get a potential Product Increment.\n\nAn Advantage of Scrum is its Versatility. Since Scrum is empirical, it is more Flexible than the Spiral Model. If for Example some unforseen Problem comes up, Scrum can deal with it easily while in a more strictly planned Model it can mess up the whole Schedule.\n\nAnother Advantage is the more work-friendly approach Scrum gives with it's Flexibility. If for Example not everything that should have been done in a Sprint gets done, it will just be put into the next one. With strict Plans, this wouldn't work and undone Work has to be rushed.\n\nA Disadvantage of Scrum is it's Disconnection to the Deadline of the Project. If the undone work is too much for the amount of Sprints left before the Deadline, Scum cannot compensate, whereas the Spiral Model is secure from such a case due to it's foreplanning.\n\nAnother Disadvantage is the Fact, that Scrum only really works on small Teams. For Big Projects Scrum can either be applied poorly or not at all, where the Spiral Model can work on any sized Teams.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644804,
      "meta": {},
      "text": "Scrum is an AgileModel with which you can deal with changes. Thats because, you have there an empirical process, which consists of ProductBacklog, followed by an SprintBacklog and it can handle changes, because if something is added to the ProductBacklog, you can still add it to the SprintBacklog, because you work on the SprintBacklog for 2-4Weeks(Sprint). And during the Sprint there are dailyScrums(Teammeetings) and after the Sprint you have a shippable product and you can repeat this process until all points from the ProductBacklog have been processed. \n\nAdvantage of Scrum is the Timely Prediction, so that you can approximately say when a point of the ProductBacklog will be delivered. For example a point in the ProductBacklog is that you want to develop a search function and this point is then added to the SprintBacklog and the sprint goes for 2-4 Week, and the team wants to finish this point during the Sprint. So you can estimably say that this point will be delivered in 2-4 Weeks. \nAdvantage is a Better quality product, because of collaboration and through continues improvement, because of the SprintRetrospectives and SprintReviews. For example in the SprintRetrospectives you say what to start doing and stop doing. For example they should start doing to help each other more.\nDisadvantage is that it requires the use of small teams. And forExample some organizations find it difficult to rearrange their workforce into teams of 3-10people.\nDisadvantage is that it requires experienced personal. For example everyone need to have skills to perform their tasks on their own quickly and successfully and they need to be able to provide educated feedback. And not all Employees have these experience.\n\nFirst Advantage is a disadvantage for SpiralModel, because you can't say when a point of the ProductBacklog is finished, because you iterate there without Timelimits on each iteration.\nSecond Advantage is also maybe an advantage for SpiralModel, because in SpiralModel you also evaluate the results at the end of one iteration and also plan the next iteration, but you do so only if a risk is resolved successfully.\nFirst Disadvantage is an advantage for SpiralModel, because there you don't need small teams.\nSecond Disadvantage is maybe also disadvantage for SpiralModel, because there you also need ExperiencedPersonal to forExample evaluate and identify risks and to evaluate the results and to plan.\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620374,
      "meta": {},
      "text": "Scrum ist eine Methode im agilen Projektmanagement, welche sich hervorragend f√ºr mittelgro√üe bis gro√üe Projekte eignet. Bei Scrum handelt es sich um folgendes: Erst ein mal wird eine nach Wichtigkeit priorisierte \"Wunschliste\" mit allen requiremets von dem Produktinhaber (product owner) zur Verf√ºgung gestellt, auch genannt Product Backlog, nun wird sie Schritt f√ºr Schritt abgearbeitet. In sogenannten \"Sprint plannings\" wird immer ein neuer Teil der Liste genommen (ein Sprint Backlog) der w√§hrend dieses Sprints, der normalerweise zwei Wochen geht, bearbeitet wird. Unter anderem gibt es noch die Daily Scrums, dabei wir sich t√§glich getroffen, um √ºber Fortschritte oder aufkommende Probleme zu diskutieren. Abschlie√üend zu jedem Sprint gibt es noch eine \"Sprint review\", bei der ein vorzeigbares Produkt dem Produktinhaber vorgestellt wird, und eine Sprint Retrospektive, bei der der vorherige Sprint analysiert und bewertet wird. Diese Sprints werden solange wiederholt bis der Product Backlog abgearbeitet ist und der Kunde zufrieden ist. Noch zu Letzt wichtig zu erw√§hnen ist, dass Scrum vom ScrumMaster geleitet wird, dieser leitet die daily sprints und sorgt daf√ºr, dass das Team fokussiert bei seinem Ziel bleibt.\n\nVorteile von Scrum:\nDurch die daily meetings k√∂nnen aufkommende Probleme, wie z.B. gewisse Implementierungsschwierigkeiten, schnell erkannt werden und im Kollektiv behoben werden. Bei dem Spiralmodell gibt es keine t√§glichen meetings, wodurch es zu Anpassungsschwierigkeiten f√ºhren k√∂nnte bzw. zu zus√§tzlichem Zeitaufwand um die Arbeit der einzelnen Entwickler aufeinander anzupassen.\nUnter anderem kann Scrum schnell in einem Betrieb eingef√ºhrt werden werden, denn es hat wenige Regeln und ist leicht verst√§ndlich, wo hingegen das Spiralmodell um einiges Komplexer ist und Spezialisten f√ºr Risikoanalyse ben√∂tigt.\n\nNachteile von Scrum:\nEiner der gr√∂√üten Nachteile von Scrum ist die geringe Planbarkeit des Kosten- und Zeitaufwands, denn es ist nicht Vorgegeben wie viele Sprints stattfinden und st√§ndige geforderte √Ñnderung durch gro√üe Zusammenarbeit mit dem Kunden f√ºhrt zu h√∂heren Zeitaufwand. Dieses Problem gibt es auch beim Spiralmodell, doch durch den Schwerpunkt auf der Risikoanalyse k√∂nnen die Kosten des Softwareprojekts schneller abgesch√§tzt werden, jedoch k√∂nnen damit trotzdem nicht die erforderlichen Iterationen abgewogen werden.\nNoch ein Nachteil von Scrum ist, dass w√§hrend den einzelnen Sprints eine geringe Strukturierung vorhanden ist, w√§hren im Spiralmodell jede Iteration ihre genaue Struktur hat.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5620800,
      "meta": {},
      "text": "Scrum ist ein Framework, das eine Struktur f√ºr agile Teams bietet, um Arbeit in der Software- und Produktentwicklung zu priorisieren, auszuf√ºhren und zu verwalten. Es ist damit ein iterativer und inkrementeller Ansatz zur Verbesserung der Vorhersagbarkeit und Risikokontrolle in einer sich schnell ver√§ndernden und anpassungsf√§higen Umgebung. Die wichtigsten Grunds√§tze sind hierbei Transparenz, Inspektion und Anpassung.\n\nEin Vorteil von Scrum ist die Transparenz. Jedes Teammitglied hat zu jedem Zeitpunkt die M√∂glichkeit, sich die zeitliche Planung, Fortschrittsdiagramme und den Backlog anzusehen. Dadurch k√∂nnen Probleme fr√ºh erkannt und nach L√∂sungsm√∂glichkeiten gesucht werden.\nIm Gegensatz dazu gibt es im Spiralmodell nicht den Anspruch einer so hohen Transparenz.\nEin Teammitglied bearbeitet nicht die vorhergesehenen Aufgaben. Dadurch dass andere Teammitglieder wie auch der scrum master einen √úberblick haben, kann man das Teammitglied fr√ºhzeitig darauf hingewiesen werden.\n\nEin weiterer Vorteil von Scrum ist die erh√∂hte Flexibilit√§t. Sowohl nach dem Review Sprint Meeting als auch innerhalb einer Phase k√∂nnen die nachfolgenden Teilprojekte angepasst und Anforderungen √ºberarbeitet werden.\nDahingegen kann das Spiralmodell nicht mit Ver√§nderungen innerhalb einer Phase, sondern nur zwischen zwei Iterationen umgehen.\nBei einem Computerspiel kommt eine neue Idee des Project Owners auf, der sich eine neue Funktionalit√§t w√ºnscht. Autos sollen nun auch fliegen. Da bei Scrum im SrintPlanningMeeting jedes Sprints die Aufgaben neu festgelegt werden, ist es m√∂glich diese Funktionalit√§t noch im Nachhinein einzubauen.\n\nEin Nachteil von Scrum ist der erh√∂hte Kommunikations- und Abstimmungsaufwand. Da es nicht eine F√ºhrungsperson gibt, sondern alle Teammitglieder im gesamten Prozess Verantwortung √ºbernehmen und bei Entscheidungen mitwirken d√ºrfen, werden Entscheidungen h√§ufig sehr lange aufgeschoben oder erst gar nicht getroffen. Dies nimmt folglich sehr viel Zeit in Anspruch und kann auch zu Verunsicherung und Demotivation f√ºhren. \nBeim Spiramodell gibt es wie in den meisten anderen Teams einen Vorgesetzen, der Entscheidungen selber treffen kann.\nInnerhalb eines Teams k√∂nnen sich die Teammitglieder nicht auf konkrete Umsetzungsarbeiten f√ºr jedes Backlog Item entscheiden. Dadurch kann es passieren, dass es zun√§chst zu keiner L√∂sung kommt und keiner anfangen kann.\n\nEin weiterer Nachteil von Scrum ist der m√∂gliche Verlust des √úberblicks √ºber das Gesamtprojekt. Durch die Fokussierung auf den jeweils n√§chsten kleinen iterativen Schritt kann es passieren, dass die Teammitlgieder den √úberblick √ºber das Projekt verlieren oder das √ºbergeordnete Ziel aus den Augen ger√§t.\nIm Spiralmodell wird das Projekt auch in viele kleine Schritte unterteilt, jedoch ist der Prozess hierbei auf 9 Iterationen beschr√§nkt.\nBei der Entwicklung einer FoodDeliveryApp ist ein Team f√ºr viele kleine Aufgaben wie die Auswahl eines Kuriers und die Bezahlung des Kuriers zust√§ndig. Durch den Fokus auf die schrittweisen Aufgaben k√∂nnen die Mitarbeiter den Gesamt√ºberblick verlieren.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621553,
      "meta": {},
      "text": "SCRUM is an agile software development model, whereas spiral is an iterative one. SCRUM is perfect for projects with fast changing requirements. Communication, between all parties, is key to reduce risks. \nThe big advantage of SCRUM, which I already metioned is that it can easily deal with frequently changing requirements. Almost a daily change is possible because of the daily SCRUM meeting.The Spiral model enables no change during an Iteration just inbetween. E.g. a new text-based AI hit the market. The manager wants this AI implemented into the current project. In SCRUM the product manager would assess the priority of the AI implementation and note it into the product backlog. The scrum master will then incorporate the implementation into the sprint backlog. This way also new requirements can be implemented.\n\nAnother advantage of SCRUM is that after each increment there is a shippable product. Spiral first has to go over each iteration before it can deliver anything. E.g. Designing a Website: with SCRUM you would have a basic website with all core functionalities after the first sprint, whereas with Spiral you would have several prototypes after completing every step.\n\nOne disadvantage is that SCRUM heavily relies on team communication. While in Spiral you have different teams working simultaneously on several prototypes in SCRUM you have a group of people that all have to do certain tasks. E.g. While designing a new text-based AI two people started to work on the same task without telling their team. So at the end both designed different versions of the AI that cannot be merged together and another task wasn't done at all that should have been done.\n\nAnother disadvantage is, that it can easily happen to lose overview of the project. In Spiral every team works on its prototype and checks all requirements having a good overview while in SCRUM it is easy to just focus on the tasks that are assigned to you. E.g. you got the task assigned to create a new nav bar for your website. You start out with a great looking nav bar and incorporate it into the website only to find out that the person who was responsible for the new footer designed it entirely different making both designs incompatible.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621784,
      "meta": {},
      "text": "Definition:\n\nScrum is a framework for a specific type of project management. It is characterized by lean processes, step-by-step development and regular feedback loops. \nAt the heart of Scrum is an incremental, iterative process: in individual, self-contained phases (= sprints), different product versions are created one after the other. These sprints are repeated until a satisfactory finished product is obtained.\nThe term Scrum means something like \"crowd\", e.g. in rugby. This should illustrate the close cooperation in the team and the concentrated work in phases.\n\nAdvantage and comparison to previously used Spiral Model:\n\n1. Large projects are divided into easily manageable sprints:\nOne large software program is divided in the backlog and e.g. every week you select a certain item out of it and plan for one iteration and work. You don't plan for the complete project at beginning. Compared to the Spiral Model you plan one at the beginning followed by execution which get divided in 4 iterations. \n\n2. It's adaptable and flexible:\nScrum is suitable for a wide variety of environments and situations that don't initially have clearly identifiable requirements and require a flexible approach. E.g. if the customer wants sth different it can be easily implemented during the next sprint. Spiral models are more rigid because they more or less plan the project right from the start, which means that changing requirements are more difficult to implement during the project.\n\nDisadvantage and comparison to previously used Spiral Model:\n\n1. It is unclear how many sprints you will need until the customer accepts it:\nE.g. after every sprint you have an incremental product which could be the final product or you will need a bigger amount of sprints. Using the Spiral Model you have such thing as a minimal Sprint count because you set this at the beginning of the project.\n\n2. It can be difficult to scale in the implementation of large projects:\nFor example if you have the task to implement a large software project it can be challenging, as implementing it on a bigger scale requires extensive training and precise coordination. Spiral Model may be the more clever way in that case because you plan at the beginning of the project and so you need less expense during the project. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621816,
      "meta": {},
      "text": "So SCRUM is a way of developing software in which you focus on iteratevily doing \"sprints\" to develop a software piece by piece simetaniously and focus and focus on potential changes during development. Each Sprint is planned and a couple feautures that are not yet implemented are chosen to be focused and all the others are ignored.\nThe Main advantage of Scrum is to be able to adapt to changes, due to the flexible product backlog. For example, if a company decides to create a new website and during the development realizes the \"Darkmode\" feaure is not needed, they can just say that and if it was not yet implemented it gets removed from the backlog/to-do List. (same goes for adding new feautures)\nScrum is also very usefull when working on bigger Projects with bigger teams as (apart from the first Meeting) no big communication has to be done by the individual Task-Forces (Scrum Teams) to the others, rather each team can work on their own. For example if a comapny wants to develop a Flight-System, a Team of Leaders get together, workv and plan everything and then they leave to their individual teams and one works on the database, one on the client side etc.\nA big disadvantage of SCRUM is that developers need to get used to this and thus might not be as effective in the first days/weeks of SCRUM. If for example a Team is used to the waterfall model, learning the new proccess, choosing a scrum master, planning like that migth take some time for everyone to restructure and adjust to.\nAnother disadvantage is the final deadline of the project, if the planning goes wrong or some milestone-deadline is just straight up missed, the whole project can get completly delayed. If for example a Team plans everything but forgets to add \"security\" to the Product-Backlog, it might be forgotten completly and they only realise this shortly before the final deadline.\n\nThe flexible changes are also present in the spiral model, but the splitting up is not as easy as it is in scrum, getting used to it is irrelevant as they already are but the final deadline risk is very low in the spiral model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622285,
      "meta": {},
      "text": "What's Scrum: \n- Scrum is a methodology used in the Software development based on an iterative and incremental processes.\n- The main idea is to divide the project into many tasks (Project backlog) and by every iteration (Sprint), part of these tasks (Sprint backlog) should be done. \n- After each sprint, there's a sprint review meeting between product owner, scrum master, and developers to discuss what's done and which tasks should go to the product backlog again. \n\nAdvantages:\n1-However the project is still ongoing, each Sprint produces a product that's Potentially shippable.\n*For example: a chatting app is to be done. After the first sprint, the initial version of the app, which provides the basic chatting service, can be released. After the second sprint, the app is updated to include emojis and Auto correction services.   \n2-Flexible to changes, as by the end of each sprint there's a meeting to discuss the progress and the changes to be done. \n*For example: the owner of the chatting app changed his mind and didn't  want the Auto corrections service anymore and wants to add voice note service. In this case, the team can be informed during the Sprint review meeting.\n\nDisadvantages: \n1- the tasks can be handled wrong if the scrum master doesn't deliver the information correctly. \nFor example: the project owner wanted to add some new feature, he spoke with the Scrum master, but the scrum master didn't deliver the information to the developers correctly, so they made a different task.\n\n2- it causes scope creep, as there's no definite end date.  \nFor example: if by the end of a sprint meeting, there were tasks that wasn't yet implemented, so it goes back to the product backlog, which causes delay in the time plan.  \n\nSpiral compared to Scrum :\nAdvantages:\n-The main focus is risk handling, starting with the highest risk. \n- It is good for large and complex projects.\nDisadvantages:\n- The Spiral Model doesn't say much about the length of an iteration. \n- If the risk could not be resolved, the project is terminated",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622795,
      "meta": {},
      "text": "- scrum is an agile software development method that is able to deal with changes during the development process\n- it starts with a project kickoff meeting that determines a list of requirements for the final product, called product backlog\n- the scrum process is divided into partitions that take up to a month each (sprints): in each sprint, a number of items from the product backlog are selected initially (sprint backlog) and implemented as a product increment\n\nadvantage:\n- flexible product backlog: unfinished items from a sprint backlog can be added back to the product backlog, as well as completely new requirements -> can react to changing requirements from the client or other stakeholders, for example: during the development of a game, it is later decided that it should have a multiplayer mode\n- due to vertical integration, multiple teams can work in parallel and therefore increase development speed, for example: teams can work on single player and multiplayer modes separately and thus reduce development time\n\ndisadvantage:\n- a rather large amount of meetings (project kickoff meeting, sprint planning meeting, daily scrum, sprint review and sprint retrospective meetings) cost time, for example: people might think it is not necessary to have a fifteen minutes meeting at the start of every day, especially if there isn't a lot of day to day progress\n- potential delay or uncertainty of the project deadline when teams are unable to finish every item from their backlog, so those are added back to the product backlog; meanwhile, the client might have added new items as well, for example a sprint team isn't very committed to the project and completes very few items every sprint\n\nSpiral model:\n- in the spiral mode, if risks are not resolved, the entire project is terminated whereas in Scrum, items can be added back to the product backlog; in addition, there is a set number of iterations\n- the spiral model works sequentially: they deal with one risk at a time, in the order of their priority\n- in the spiral model, there are only evaluations for the solutions to each risk but no daily meetings or a review of the team itself\n- due to a fixed number of iterations and steps, and linear models within each prototype development, the spiral model is more likely to adhere to a given project deadline",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623033,
      "meta": {},
      "text": "Scrum is an agile model. In Scrum, work is performed in parallel, and split into multiple working phases called \"Sprints\", so that the team can adapt to changes as well as reflect on the result from the previous Sprint, so that they can improve on the next one. The core essence of Sprint is therefore \"learning by doing\".\n\nAdvantages:\n-Resilience against changes during the process of development: Since the work is split into multiple phases, changes can be easily dealt with in the next Sprint.\nExample: The customer changes their mind about one of the requirements in the middle of the development process. Compared to the spiral model, which is also able to react to changes of the customer, Scrum deals with this in a more efficient, cost efficient way. \n- Emphasis on the communication with the product owner: Sprints can be planned based on the given priorities of the product owner. In the spiral model the developers determine the objectives and risks based on their own assessment. \nExample: A requested product doesn't fulfill all requirements after the deadline. If the developers know about the priorities of the requirements, they can prioritize finishing up important requirements first, so that even the unfinished product might be acceptable for the customer.\n\nDisadvantages: \n- No link to the actual deadline: Since every Sprint is planned independently, the risk that the project won't be finished after the actual deadline rises. To guarantee that the amount of planned Sprints is sufficient for the whole project, there needs to be additional planning.\nExample: Given deadline is 2 months. The team finishes 1 requirement during every 2-week long sprint. After the deadline, the product isn't finished, because the number of requested requirements was 8.\nThe spiral model has this disadvantage as well, however the additional required planning is calculated into the plan.\n- Developers using Scrum need to actually know about Scrum: Scrum doesn't work well, if the developers don't know about the advantages & disadvantages of Scrum, and how to maximize efficiency. Just like other models, like the Spiral Model, Scrum needs experienced Developers to actually make use of the advantages.\nExample: Untrained personnel tries out Scrum. They were never properly trained to work in teams and to communicate with each other. The project fails.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644778,
      "meta": {},
      "text": "SCRUM is an efficient software development method. There are three active parties involved:\nthe product owner, the development team and the SCRUM master. \n\nSCRUMs purpose, is to achieve an end-product through iterative and incremental product development. Therefore functionalities are added through each iteration (sprint). The sprint-backlog is created from the product backlog. The team then figures out how to develop the backlog requirements and hold a daily meeting to communicate their results and problems, as well as their plans for future sprints. After each sprint, we got a shippable product, which gets new functionalities added through each sprint.\n\nDaily Meetings are a huge advantage, because they also reduce the risk of miscommunication. An example would be, that a team member misinterpreted the requirements and corrected his code after reporting to his fellow developers. In comparison with the spiral model, both models are good in risk handling, since the spiral model also handles risk well by doing a risk analysis as well as a risk handling at every phase.\n\nAnother advantage comes with the fact, that there‚Äôs a leading role through the SCRUM master, who could be compared to a conductor. Like a conductor, he leads the orchestra of developers and admonishes them, when they are losing the rhythm, or in our case, the working flow. The spiral models project manager is very similar to his role, except his overview is a little bit tighter.\n\nA disadvantage would be the huge dependency as well as the trust you have to set in each member. If a central person like the scrum master leaves, it would definitely pack a punch for the team, since he‚Äôs the MVP, who manages the whole project and plans it with the product owner. The same problem would also apply for the spiral model if the project manager.\n\nAnother disadvantage would be, that SCRUM wouldn‚Äôt be fit for bigger teams. That‚Äôs because it would be very hard to keep track on a team which consists of like 10 members, which have to present their progress daily. Unfortunately, the same also applies in the spiral model because the system lacks when it comes to improved communication design.\n\n\n\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644842,
      "meta": {},
      "text": "die Grundidee von Scrum:\n- Agile model (Spiral Model: iterative model) \n- 3 Rollen:\n      - Product Owner (kommuniziert mit Scrum Master und Scrum Team Members) \n      - Scrum Master (kommuniziert mit Product Owner und Scrum Team Members) \n                                (√ºbersieht die Arbeit des Scrum Teams) \n      - Scrum Team Members (kommunizieren mit Scrum Master) \n                                             (setzt Forderungen von Product Owner um) \n- Aufteilung des Arbeitsprozesses in direkt aufeinanderfolgende Sprints: \n      - bis zu einem Monat \n      - am Ende eines Sprints: lieferbares Produkt \n      - Aufgaben in einem Sprint: - Daily Scrum Meeting\n                                                   - bearbeiten der Aufgaben im Sprint backlog (Teil des Product backlogs)\n                                                   - Sprint Review\n                                                   - Sprint Retrospective \n\nVorteile von Scrum (im Vergleich zum Spiral Model): \n- M√∂glich schnell auf Ver√§nderungen zu reagieren. Das ist beim Spiral Model nur zwischen den Aktivit√§ten aber nicht w√§hrenddessen m√∂glich. \n(Bsp.: Die Konkurrenz des Product Owners bringt ein neues Produkt mit einem neuen Feature auf den Markt. Der Product Owner fordert das Scrum Team dazu auf, dieses Feature ebenfalls in das zurzeit entwickelte Produkt einzubauen, um konkurrenzf√§hig zu bleiben.)\n- Fehler k√∂nnen fr√ºh erkannt werden, aufgrund der intensiveren Kommunikation (im Vergleich zum Spiral Model: regelm√§√üige Meetings mit Kundem nicht explizit geplant) mit dem Kunden und dem Vorzeigen des lieferbaren Produkts nach jedem Sprint.\n(Bsp.: Dem Product Owner wir eine erste Version einer Website gezeigt. Urspr√ºnglich hatte er gefordert das Firmenlogo ganz oben zu platzieren. Als er die erste Version der Website nutzt, f√§llt ihm auf, dass das Firmenlogo nur zu sehen ist, wenn man am Anfang der Website ist, somit ist die meiste Zeit bei Besuch der Website kein Firmenlogo zu sehen. Deswegen soll, selbst wenn der Nutzer nach unten scrollt, immer oben das Logo sichtbar sein.)\n\nNachteile von Scrum: \n- nicht m√∂glich exakt anzugeben, zu welchem Anteil das Projekt bereits fertig ist, da immer wieder auf Ver√§nderungen reagiert werden kann und somit Dinge nicht als abgeschlossen gesehen werden k√∂nnen. \n(Bsp.: Der Product Owner m√∂chte wissen zu wie viel Prozent das Projekt abgeschlossen ist.) ",
      "score": 70.8,
      "language": "GERMAN"
    },
    {
      "id": 5644875,
      "meta": {},
      "text": "Scrum: the  requirements and the technology may be  changing during the project very fast, So scrum is a technique to manage and control software and product development\nadvantage:Feedback and change requests can be evaluated faster which  a software product can realise the customer requrements in a better way\nin compare to spiral model the customer can not provide feedback until the end of project. which can lead big changes, when the customer give feedback in the end of project. In opposite the team has very big effciency.\nExample:in artemis EIST course the tutors and artemis provide feedback after each spirnt in our first senond week and third weeik Bumpers Programming homework, and we know how we improve our bumpers after sprint, it is better than in the end of project feedback.\n2. Individual working result of team members is knwon by other teammates in the Daily Scrum Meetings\nExample:In our project  daily start meeting, every team member tells the rest of the team their \nstatus, problem issues, and their plan. it is better for other teammate to understand and collabtate their status with your status.\nIn compare to spiral model the other teammate doesn t know other teammate status. It is very difficult the unit system finished product to merge them together with other teammate finished product. Advantage the developer can work on their own team work, and increaase his efficiency.\ndisadvantage:\n1.a project doesnt have a clear definition, the product backlog is difficult to make\nExample Customer need is that we must develop a software to calculate the corna infection daily people. It is hard to plan a product backlog,which platefrom should we use, what are the requirements. and so on\nIn compare to spiral model the spiral model is defined the definition in the beginning of the project. It has a big advantage for devlop team\n2.too much requirenments change can reduce the team work efficiency.\nExample: Eist project requriement changes.too many change request can cause the very difficult unsure things, when their requirements are finished. the develpoer must work on incorporate things instead continue working on the porject.\n\nIn compare to Spiral model spiral  the customer doesnt provide requirements change and feedback until the end of project, so the team will only focus on the plan, which they have. But they develop the software not to fulfill the customer in the best way. Because in the end of project, when the software doest meet the customer requirements, it is difficult to change the software content in a better way.\nBut it increase the large team effciecny. \n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621174,
      "meta": {},
      "text": "Scrum is a framework, that allows constant validation, inspection and improvement of a project a team is working on. Scrum is designed to react fast and efficient to interruptions and changes in an agile and complex environment. Scrum splits up a project in multiple parts, which are implemented in multiple cycles.\n\n\nOne advantage of Scrum is its adaptability and flexibility. Because of daily Scrum meetings, the team constantly exchanges information during a sprint. In case of any problems, the scrum master can decide how to continue/adapt. \nIn the spiral model, changes can only be addressed between iteration-cycles, which makes it less reactive.\n\nAnother advantage of Scrum is that it can be very cost-effective. Each team member is always updated on the current state due to the daily meetings, which requires less documentation and control. Furthermore, the individual effort of each team member is visible during the meetings. Of course, nobody wants to attend a meeting empty-handed.\nThe spiral model ensures that the project progress stays on track with its risk analysis in each iteration. But once a project passes the risk analysis it can't be stopped, and growing problems might only be recognized once it is too late.\n\nOne disadvantage of Scrum would be that it is not related to the deadline of the project. In each sprint planning, a deadline for the current sprint is set, but there is no connection to the actual deadline of the project. Time management is the job of the Scrum master alone.\nThe spiral model includes a life cycle plan and a development plan at the end of each iteration. These plans give the entire team an overview over the project, but time estimation is still very difficult.\n\nAnother disadvantage of Scrum is that it requires the use of small teams. Especially, the daily sprint meetings get significantly worse for every participant if too many people attend and share their information. That just prolongs the meeting for everyone. \nThe spiral model works for larger teams as well, but therefore also requires a lot of documentation, which is expensive.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619404,
      "meta": {},
      "text": "In essence, Scrum is an agile technique in software and product development that deals with rapidly changing requirements. The technique improves risk management due to improved communication, cooperation and the delivery of product increments. \nOne main advantage of Scrum is the quick and efficient completion of project deliverables. For example, in the group project of EIST our group is creating a restaurant reservation and management system. As we work through sprints each week, we have small deliverables each week. Overall, this process is very efficient. In comparison, the Spiral Model would first assess risk and assign project priorities accordingly. Furthermore, scrum enables large projects to be divided into easily manageable sprints. The whole project is very large, but was divided into small parts and every week we have sprints in which we work through these small packages. The Spiral Model does not make such a division, so the project remains large and difficult to handle. However, Scrum is not related to the projects deadline and can lead to scope creep, meaning an uncontrolled growth of a projects scope. As we develop the Restaurant Management System, we keep coming up with new features and it keeps expanding. Therefore, Scrum can lead to scope creep. In the Spiral Model, however, the goal and constraints are defined at the beginning, which protects well against scope creep. Also, Scrum requires the use of small teams and doesn't scale well. In companies that run extremely large software projects can work poorly with this method, because with increasing team size the complexity of management and communication increases very strongly. The project would have to be divided into small sub-projects for Scrum. The Spiral Model is an iterative process that can also be carried out with large teams.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621341,
      "meta": {},
      "text": "Scrum parts the whole developement process into two-week segments called sprints.\nAt the start of developement, all the requirements are put in a big backlog, from which a few are selected to be worked on during the sprint, called the sprint catalogue. Before and after each sprint, there is a meeting to plan the sprint / review what went well and what needs improvement. \nAdditionally, there is a very short meeting each morning, where the developers catch up to speed and shortly discuss what the need, expect, and plan on doing.\n\nA big advantage of this system is the agility. If requirements change, or a particulat solution is found to be better, the backlog can be adjusted and developement can continue. \nThe spiral model is more rigid, since it is based on iterative software development.\n\nAnother advantage of Scrum is the communication between developers. At each scrum meeting, every develpoer states what they promise to do, and have space to state what impairs them in theri current developent phase.\nThis way, communication between developers is improved, since they have a dedicated time to state what they need and what they will do.\n\nA disadvantage of scrum however is that it doesn't scale too well. Scrum was concieved for teams with up to nine people, so it is of no surprise that it doesn't scale to large projects. This is because every moring, each developer gets a few minutes to talk about their current development process in a meeting that shouldn't last more than 15 minutes. So it makes sense that this system can't scale to a few hundred people.\nHere, the spiral model has an advantage since it applies well to a large number of developers.\n\nAnother disadvantage of Scrum is that it requires intensive training to become a good scrum master so that the daily scrum meetings are effective.\nIn order to guarantee a good work flow, both the scrum master and the team members have to practice leading the conversation so that the discussion leads to effective development.\nThis is a disadvantage relative to the spiral model, where the development is a much more rigidly set process.\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5622765,
      "meta": {},
      "text": "Scrum is a framework that helps teams work together. Scrum encourages teams to self-organize and learn through experiences while working on a problem and reflect on their wins and losses to continuously improve.\n\nAdvantages of scrum:\n\n1. More transparency and project visibility. The daily meetings allow the members of the team to know exactly what they need to be doing. Issues are also identified in advance allowing the team to get rid of them before it becomes too big. The spiral method also documents the progress quite frequently so it has no issues with transparency and project visibility.\n\n2. Increased team accountability. Since there isn't a project manager telling the team what to do and when the team can collectively decide on what they need to work on next. This allows everyone in the team to work collaboratively and be more independent. The spiral model requires the development team to follow strict rules in order to work effectively. This means that the team could have less flexibility when working together.\n\n\nDisadvantages of scrum:\n\n1. Risk of scope deep. Since scrum doesn't have a definite end date, it is easy for the customer to keep requesting new features to be added. The spiral method has a definite deadline so this can be prevented.\n\n2. Team requires experience and commitment. Since scrum doesn't have clearly defined roles and responsibilities it requires team members with technical experience. The team members also have to commit to daily meetings and stay on the team. The spiral method also requires the team members to have experience and show commitment to the project.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622930,
      "meta": {},
      "text": "One supervisor is assigned, a so called product owner who creates a prioritized wishlist called product backlog. The project is split into different two to four week sprints for which the team decides which pieces from the product workload should be worked of during that sprint (sprint backlog). After each sprint the changes are talked about in the team and can be shipped to the customer.\n\nOne advantage of SCRUM is that the team can focus on few of the items that are most important to the customer during each sprint. For example the customer wants two features. In an Hardware request process each employee should be able to start the process instead of the team leader collecting all the item wishes. the other feature should be that a copy of each request is stored on the company server. If one of the features is more important the team can do that one first and then do the other one in the next sprint.\nIn the Spiral model the team just works on everything at the same time and tries to finish it.\n\nAnother advantage is the Daily Scrum. This daily meeting is used to discuss problems any member might have encountered and then he can be helped by the other members. Also every member states what he/she is going to work on on that day. This helps the supervisor hold them accountable and ensures productivity.\nIn the Spiral model there is no way in which communication between team members is ensured.\n\nOne disadvantage is that only experienced team members can be used, as they need prior and intimate knowledge of scrum and the process. When one member isn¬¥t familiar with the procedure it practically ensures failure because of missed meetings and missing team chemistry.\nIn Spiral everybody can participate because only project knowledge is needed.\n\nAnother disadvantage is that the project can be endless because too few items are finished in each sprint. \nThat can¬¥t happen in spiral as all the items are worked on simultaneously. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623131,
      "meta": {},
      "text": "SCRUM is an agile project management model where you work at the project in so called \"sprints\". You store your project tasks in the project backlog, at the scrum meeting you assign tasks from the product backlog to the sprint backlog, within the sprint the sprint you have daily, short, sprint meetings, at these meeting everyone says what he/she is working on at the moment. At the end of each sprint you have a potentially shippable product increment. After the sprint you have \"sprint retrospective\", in this meeting you discuss what went well and what don't.\n\nA big advantage of scrum is that is very agile. If you encounter any difficulties in the process of development you can easily change your direction of the development in the process. For example, if you are in the Detailed design stage of your project in the spiral model, and your customer comes around with some last minute changes (big) you may need to change your system and thus move back some steps in the spiral model, while in scrum you could just put it in the project backlog and start implementing it in the next sprint.\n\nOn the other hand spiral is way more plannable than scrum. In scrum you have your meetings every sprint and your product backlog, but you do not have an outlining structure of you project progress, while in spiral you have your underlying plan. E.g.: it is way easier to plan on the timing of milestones with spiral than with scrum.\n\nAnother disadvantage could be the team size. scrum only works in small teams, because if the teams get too large the meetings would take too much time and it would get chaotic. E.g.: If you have a team of 30 people, and in the daily meeting everyone tells about his progress, this meeting would end up lasting hours, if your team is only 5 people you can have productive, short meetings.\n\nLastly a big advantage on scrum is the \"testing on the go\", with scrum you test your implementations all the time during the sprint, because in the end of each sprint you want to have a potentially shippable product. E.g.: If you have a larger software project a you are testing on the go with scrum, you will not encounter huge bugs or errors at the end of the project. With spiral your testing is not connected to your programming, you could face huge bugs and errors in the testing phase and you would have to go steps back to the programming phase.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619978,
      "meta": {},
      "text": "Scrum ist ein agiles Rahmenwerk. Keine konkrete Vorlage gegeben, sondern eine Struktur, die sowohl f√ºr die Softwareentwicklung, als auch f√ºr allgemeines Projektmanagement genutzt werden kann. Im Zentrum steht das Team: Dieses organisert seine Arbeit selbst; liefert regelm√§√üig lauff√§hige Zwischenst√§nde; reflektiert stetig seine Arbeitsweisen; kommuniziert innerhalb des Teams und extern mit dem Management, um Transparenz √ºber Fortschritt und Risiken zu schaffen.\nScrum hat keine ausufernde Dokumentation sondern konzentriert sich auf das schnelle unerm√ºdliche Aufdecken und L√∂sens eines jeden Problems, dass sich dem Team in den Weg stellt.\n\nVorteile:\n- Hohe Transparenz, kurze Kommunikationswege. Beispiel: Einf√ºhren einer neuen Auth.-methode am Domain-Controller. Alice gibt bekannt dass heute das sie das neue Windows-Update auf allen Rechnern installiert; Bob wei√ü somit, dass er morgen die neue Authentifizierungsmethode aktivieren kann. Im Spiral-Modell wird im Voraus geplant. Alice hat einem bestimmten Zeitplan f√ºr das Windowsupdate. Bobs Planung wurde darauf abgestimmt. Sollte sich das Update von Alice verz√∂gern, kann das Bobs Planung kompromittieren ohne, dass Bob davon erf√§hrt.\n\n- Hohe Flexibilit√§t durch adaptives Planen. Beispiel: Alice Windowsupdate verz√∂gert sich. Im Daily-Meeting legt Alice offen, dass das Update fehlgeschlagen ist. Bob reagiert darauf und verschiebt den Rollout der neuen Auth.-methode. Er arbeitet in der Zwischenzeit an einem anderen Task. Die anderen aus dem Scrum Team warten mit der Bekanntgabe der neuen Auth.-methode an die Kunden. Im Spiral-Modell das m√ºsste Projektteam im Ernstfall die aktuelle Runde neu planen und neu starten.\n\nNachteile:\n- Scrum ist f√ºr kleine Teams ausgelegt. Beispiel: Entwicklerteam von 40 Personen \"m√ºsste\" jeden Tag ein Meeting halten √ºber aktuelle Ver√§nderungen und Fortschritt -> Kostenaufwand (Zeit), Un√ºbersichtlich. Das Spiral-Modell hat eigentlich keine Gr√∂√üenlimitierung, was die Teamgr√∂√üe angeht, da jede Runde im Voraus geplant wird und nur einmalig die angesprochenen Kosten entstehen.\n\n- Die Zeitabsch√§tzung ist schwer. Beispiel: Entwicklung einer Restaurant App, die dem Benutzer das Reservieren erleichtert. Die Entwicklung geht schnell voran. Im Verlauf des Projekts werden dauernd weitere Probleme aufgedeckt. Im Spiralmodell kann das beschriebene Beispiel auch passieren,aber es wird sp√§ter auf die aufkommenden Probleme eingegangen, da diese erst in der Planungsphase der n√§chsten Runde einflie√üen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5620350,
      "meta": {},
      "text": "Scrum is defined as an agile model which allows to control the development of a product by adapting to the constantly changing requirements, and thus minimizing the potential risks by coordinating well and improving the product delivery in various increments. Mainly there are 3 roles: Product Owner, Scum Masters and a cross-functional development team.\n\n>  Scrum advantages:  Due to the concept of sprint review and sprint retrospective ensures the feeback is easily and smoothly integrated into the development phase during the sprints, allowing better and more agile dynamics to make changes. E.g. if the product owner realizes a major bottleneck in the project, the changes can be made by ammending the product backlog after sprint review.  Moreover, scrum allows simplification of a sophisticated idea. e.g. a large product and complex project with a large product backlog can be divided into smaller goals for specific sprints, allowing more clarity and ease.\n\n>  Scrum  disadvantages: Due to its empirical nature, abiding by a deadline is challenging. E.g. adapting the project during every sprint would lead to greater uncertainty in the time period to achieve the goal, making it hard to determine a precise timeline during the planning meeting. Furhtermore, the efficient nature of scrum can be detriorated depending on the caliber of the team members. e.g. if the team members don't have the determination, expertise, knowledge and motivation to fit the idea of emperical development, then it may cause extreme inefficencies instead. \n\nSimilar to scrum , the spiral model uses an iterative approach for planning, developing, and reflecting on each iteration allowing feedback to be integrated with high risk management, which even the scrum lakes. Unlike scrum, it is challenging to define objectives and smaller foals for a sprial model, not leading to the level of clarity as in scrum. Spiral model suffers from the problem of lack of precision in terms of deadlines, at a larger extent than scrum, as it may go on infinitely. Like scrum, spiral model also requires competent and determined employees, although with one factor different than scrum, the adaptive nature isn't required. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620567,
      "meta": {},
      "text": "Scrum is a process framework which manages and controls software and product development with rapidly changing requirements. It consists of 3 main parts: The product backlog, where the requirements for the finished product are defined, the Sprint backlog, where the requirements for the iteration are defined and the sprint, which ist an 2-4 week process to solve the requirements. Each sprint consists out of daily sprints including team intern meetings in order to share the current status, difficulties and successes, review and reflect the process and define and prioritize the requirements. After each big sprint the customer is consulted regarding the sprint process and the process is repeated unitl the project is finished. \n\nIn comparison to other models, SCURM is much more flexible with respect to customer demands. For example. if you are developing the new camera functionality of the new generation of an iphonel. but than samsung is launching a new version with a better funktionality and apple decides they want to adapt this funktionalities in their new product as well. than you can easily adapt this needs in your next sprint. \nIn the spiral Model on the other hand you have 9 fixed iterations an it is much more complicated to make changes once the product development process has started. \n\nanother advantage is that scrum is very flexible to the effort of the project. so small projects can be developed in 1-2 sprints whereas large projects can need more than 10 sprints. an example of this is the development of a simple app. for example, an alarm clock app. it only has a few functionalities (alarm clock on, alarm clock off and snooses). it should be able to be completed in 1-2 sprints in the scrum model. in the spiral model, on the other hand, it has to go through all 9 iterations and therefore takes an unnecessarily long time.\n\nOne disadvantage is that due to its flexibility, the scrum model can quickly become confusing, especially for large projects. It is easy to lose focus and get lost in unimportant topics. for example, it can happen that a customer is particularly perfectionist and always finds something that he doesn't like 100%. due to the possibility of infinite iteration, it is therefore easy to get lost and keep changing small things without advancing the process as a whole. with the spiral model, on the other hand, it is defined when which topic is to be worked on and when it must be completed. this danger does not exist here. \n\nAnother disadvantage is that it is very hard to adapt and difficult. it requires a well-trained and skillful team to properly implement it. So it needs time and costs inorder to implement it. For example if you had a team that is working on a prepland modle like the spiral modle you first have to teach tem how to do scrum and why it is also benefiting for them to switch to such a model. The spiral model on the other hand has a strikt plan an does not need as much training in order to follow the model. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620679,
      "meta": {},
      "text": "Scrum is a technique used to work in a team in an agile manner on a complex project where many unpredictable changes in the requirements happen while developing the software.\nYou start with a product backlog where you state all requirements you need to fulfill and then decide on a few of the requirements to do in a so-called sprint where you, together with your team, create a first increment (basic product). After one sprint you review your increment and continue doing more sprints until all points in your product-backlog are done.\nOne advantage of Scrum is that it can react very well to change compared to the Spiral model can only account for changes between the activities but once one activity is finished, it will not be reopened. If, for example, you are working on a delivery app and during the development the owner wants to have a functionality for contactless payment then with Scrum you can add that in your next sprint whereas with the Spiral method, if you already finished the payment function that would not be possible.\nAlso, in Scrum you start from scratch whereas with the Spiral model you already have an existing system which you improve. This leads to possible legacy system dependencies which pose a danger to your project. The ‚Äúdeutsche bahn‚Äù, for example, uses some legacy systems for their railways which you would need to rely on or must safely switch with better functionalities with Spiral whereas with Scrum you could rebuild it from scratch and know of all dependencies.\nDisadvantages:\nLet‚Äôs say you already built the delivery activity for an app and then get a new requirement, then in Scrum you change the activity whereas in Spiral this activity will not be touched again. That makes it difficult for the management to determine which percentage of all tasks are done since any activity can be reopened again in Scrum.\nScrum is also harder to do in an unexperienced team compared to Spiral.\nImagine you are told to build a booking app with a new team then you first need to get used to working on different tasks simultaneously and start from scratch whereas with Spiral you can start with an existing system which eases the process.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621787,
      "meta": {},
      "text": "SCRUM is an agile software development methodology, which prioritizes the customers needs and deals with equidistant interruptions, in order to adapt to constant change (for instance in the customers requirements). As such the development of the underlying software is transparent, and the customer is in very close contact to the SCRUM team, which provides potentially shippable product increments for each so called sprint, that lasts normally around 2-4 weeks. The development is very structured; the consumer specifies his requirements in the product backlog, and which each sprint iteration the SCRUM team works on fractions of these requirements. \n\nAn advantage of SCRUM is the openness and transparency toward the customer. The customer can follow the development of his software and can see the progress the SCRUM team makes after each sprint, as the team delivers a potentially shippable product. This is an advantage, because the customer can interact with the team and introduce changes to his project requirements early on in the project, and thus save important time, money and manpower. \nThe customer can for instance remove unnecessary features, that he doesn't need, which may grow in complexity as the project development progresses (e.g.: linking of multiple devices support).\nOn this front, the spiral model is less flexible, because it is structured in 4 activities and allows for change only between these 4, and not within but also has a very high transparency toward the consumer.\n\nAnother advantage is that is normally leads to more quality work, a better end product and higher customer satisfaction. Since every member of the SCRUM team is assigned to work on a certain segment of the sprint backlog, they are forced to take full responsibility of their work, which in most cases motivates them to work harder, produces a more productive work environment and improves overall product quality. \ne.g.: work environment and productivity in big companies such as google.\nIn the spiral model, the responsibility is more distributed throughout the team.\n\nA disadvantage is that SCRUM works best when used in small teams. This might hinder overall productivity and some big companies such as google or Facebook might find it hard to restructure their entire company model, and is as such inappropriate for very large an intricate projects. Of course there is the possibility of merging many scrum teams together, but this only adds to the complexity.\nThe spiral model does not have a cap on how many members should work in a team, which makes the realization of bigger project more viable. \n\nThe last advantage of SCRUM is that it requires time to train the SCRUM team to work in syntony. Why introduce a new software development method, if there is already a working one? Introducing new models takes time and money to train new personnel. If there is already a working model, e.g. sprial model, this might not pay off in the long run.\nFor any other model, including the introduction of the spiral model, this premise holds, and is a disadvantage, that need to be considered.\n\n\nI apologize for the length of my response. I do realize the schedule of tutors are very tight :(",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622212,
      "meta": {},
      "text": "Scrum is an agile software development lifecycle model that can deal with rapidly changing requirements. Scrum consists of sprints (2 - 4 weeks each), where the parts of a product backlog moves to the sprint backlog and is being processed in the sprint. After each sprint there is a potentially shippable product increment.\n\nThe main advantage of scrum is that it's very flexible and changing during a phase can lead to reengineering the requirements of the design, while in the spiral model a change may lead to the previous iteration or even to the cancellation of the project, because a change addresses activity that has already been completed.  Another advantage is that in scrum the team doesn't have a strict organization of a work, while in the spiral model there is a plan what part when should be done.\n\nOne disadvantage of scrum is that it better suits better for the small teams and for the bigger teams it becomes impractical. A daily meeting with a very big number of developers doesn't sound doable.  Also there isn't any exact deadline in a scrum project, while in a spiral model it is determined by when the work should be done.",
      "score": 70.8,
      "language": "ENGLISH"
    },
    {
      "id": 5623156,
      "meta": {},
      "text": "Die Hauptidee von Scrum ist die M√∂glichkeit zurechtgekommen mit den √Ñnderungen, was sehr hilfreich ist bei der Kontrolle und Unterst√ºtzung von Software und Produkt Entwicklung, wo eigentlich die Forderungen ver√§ndern sich sehr schnell. Es besteht aus 3 Produkte - Produkt Backlog, Sprint Backlog und Potentially shippable product increment. Es gibt auch 5 Scrum Meetings, die schaffen das - Projekt kickoff Meeting, Sprint planning Meeting, Daily Scrum Meeting, Sprint review meeting, Sprint retrospective. \n-Ein Vorteil ist die Verbesserung der Risk Management durch Verbesserung der Kommunikation durch diese Meetings, der Beziehungen(R√ºckmeldung von dem Endbenutzer) und der Lieferung, weil die Aktivit√§ten - Arbeitsprozessen k√∂nnen parallel laufen im Vergleich zu Linearen Processen. Bei Spiral Model ist das Risk Managemt auch einen grossen Vorteil, es ist iterativ Verfahren und die zweite Phase einer Iteration ist ganz von Evaluate alternatives,, identify, resolve risks befuellt, was das RisikoBehandeln von moeglichen Fehlern optimisiert, wenn die Risikos priotisiert werden.\n-Ein Nachteil ist , dass die Verifikation nicht eine sehr wichtige Rolle spielt, die Aktivit√§ten k√∂nnen ungewollte Forderungen vorstellen oder wichtige Bedarfe l√∂schen, was bei Scrum der Fall sein kann.  Bei Spiral model  gibt es strenge Genehmigung und Dokumentation Kontrolle, es ist besonders sinvoll fuer hoch Risiko Projects, Acceptance Test ist auch vorhanden.\n-Vorteil von Benutzung von Scrum ist die Moeglichkeit zu der vorherigen Phasen zur√ºckkommen, bei Scrum das ganze Process ist verteilt in kleine, wiederholende Periode, in Kreis. Bei Spiral model gibt es auch verschiedene 9 Iterationen und jede Iteration ist verteilt in  4 Iterationsphasen und diese Phasen wiederholen sich auch wie die Periode in Scrum in jeder Iteration.\n- Ein Nachteil ist der Mangel an gute Dokumentation, es ist nicht alles  vor dem Process festgelegt alles und vorhergehend geplant,  der Lauf ist unbekannt und unvorhersehbar, was aber auch nicht schlecht ist f√ºr entstehende Ver√§nderungen, Scrum erm√∂glicht Flexibilit√§t und auch Testing ist m√∂glich nicht nur am Ende, sondern im Laufe des Processes, was leichter macht Fehler und Bugs fr√ºher zu entdecken und sie zu beheben. Bei Scrum gibt es auch mehr Interaktion mit dem Kunden im Vergleich zu den anderen Methoden und auch die Iterationen machen m√∂glich die Wiederholung von Prozessen und auf diese Weise ihre Verbesserung.Bei Spiral model gibt es auch hohe Flexibilitaet, weil die Ziele am Anfang von jedem iterativen Zyklus neu festgelegt werden, es gibt auch hier verschiedene Tests - Unit test, Integration and system test, Acceptance test. Es ist auch die letzte Phase jeder Iteration zustaendig fuer Planung der naechsten Iteration hier. Allerding bei Scrum - ScrumMaster auch beobachtet fuer Abweichungen von dem Plan and Daily meetings sind sehr gut, damit es klar ist , wer was erledigt bis diesem Moment hat, fuer bessere Koordination.\n\n\n\n\n//hallo, ich benutze Teile von meiner Loesung letztes Jahr :)",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5643060,
      "meta": {},
      "text": "SCRUM is an agile software development model, that is intended to deal with frequent changes in a projects requirements and is based on a concept of frequent meetings and sprints. Each sprint lasts about one month and before each sprint the sprints current goals are chosen in a meeting. After every sprint follows a sprint review meeting, in which the progress is evaluated. \n\nOne advantage of SCRUM is that changes to the requirements can be adjusted to very quickly, since the current tasks can be chosen anew before every sprint. For example if a client wants a new feature, this can simple be added to the next sprint backlog.\n\nAnother advantage is, that it is possible to achieve a working product very quickly, since it is built up incrementally, with more features being added as time passes. This means, that the time to market can be incredibly short. For example it might be possible to implement a basic, functional website in just a fraction of the time the whole project will require. \n\nOne of the disadvantages of SCRUM is, that the project might fall into utter chaos, since the team members are mostly self organizing. If for example some team members don't communicate, the code they produce might not be compatible at all.\n\nAnother issue with SCRUM is, that it might take a comparatively long time to adapt it, as SCRUM is drastically different to other software development models. This might take a rather long time for the team members to get used to. For example the waterfall model is a completely different approach to software development.\n\nUnlike SCRUM, the Spiral Model does not allow for change within an activity, making it far less adaptive to frequent change. The software is also developed in incremental releases, meaning that in contrast to SCRUM the releases are less frequent and time to market is longer. \nThe Spiral Model also has a lot stricter defined Phases than SCRUM, which reduces the risk of mismanagement and chaos.\nIt is also far more alike to other models, making it easier to adopt than SCRUM.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644809,
      "meta": {},
      "text": "Core essence of SCRUM:\nChanges and interruptions in our environment, including the requirements of the project in its entire development lifecycle are constant and sudden. SCURM is a technique which makes adapting to these changes very smooth and natural. Not only that, but it ensures daily proper communication, progress checks, risk management and properly manages small increments to the software.\n\nAdvantages of SCRUM:\n1. Feedbacks and progress checks are continuous\nExample: with the help of daily scrum meetings, everyone in the team is aware of where exactly the project has reached and how much more work is required and when.\nThe spiral model does not offer this facility.\n\n2. Gives the entire team an idea of the development lifecycle as a whole\nExample: Before starting any project the entire team is aware of how its going to start and how its going to end. The potential timeline of the development cycle, delivery date, good idea of potential development costs, everything is visible.\nThe spiral model totally discards the project if the prototypes aren't good enough or recommends to start another project. SCRUM is way better at managing constant changes in the software requirements.\n\nDisadvantages of SCRUM:\n1. Whichever tasks get pending from the previous sprint, get pushed on to the next sprint. This breaks the time certainty of completion the project and also leads to uncertainty when it comes to evaluate the total project cost.\nSpiral model ensures no changes in the cycle and smooth coding experience once started.\n\n2. Daily scrum meetings can be frustrating to some team members and not everyone has something new to share, and would rather like to begin with work right away.\nThis is not there in Spiral model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644830,
      "meta": {},
      "text": "Scrum is a framework, which manages a team developing products. It is laid out to be very agile and handles changes in requirements very well, by defining an number of tools, meetings and roles. In practice, the entire product development is split up in sprints and before each sprint, the team determines the goals and after a sprint, a shippable product increment is created or updated.\n\nSCRUM is a very agile system and by using it, a team can adapt to changes in requirement very fast, by just updating the shippable product increment during a sprint. When a bumpers game f.e. needs controller support, a sprint run can be used to implement it and add it to the product increment.  \n\nIt also leads better problem solving, since everyone has full responsibility over what they are doing. When implementing collision detection for a bumpers game, one has full ownership over the development process and so has a lot of free room for creative ideas over how to and which types to implement. \n\nBut Scrum has some downsides too like developers having to firstly learn how to work with SCRUM, since for the framework to function successful, it requires a well-trained and skillful team to properly implement it.  Scrum has many notions for meetings, tools and items and they all need to be learned and understood before one can participate in a scrum team. \n\nAnother downside is that using it in huge teams is really challenging, since someone has to precisely coordinate it. Having multiple sprints for many parts of a system happening at the same time, one has to take care that each solution fits to each other so that every component fits together. \n\nThe spiral model on the other hand is much easier to use in large scale projects. This is why spiral model is more often used in those cases. When it comes to agility, scrum and spiral are both very applicable, but scrum has more flexibility into it. They are both hard to learn but also give developers free space for creative implementations. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619800,
      "meta": {},
      "text": "Scrum is a technique to manage and control changes in a software development process by improving communication, cooperation, and risk management. Meetings take place at certain fixed time intervals to talk about the requirements and tasks for each sprint and about the requirements of the product itself. After completing a sprint, the developers present the results to the product owner, and this process is repeated until the implementation is completed.\nAdvantages:\n1.\tScrum involves low costs as it usually requires less documentation and control. The spiral model, on the other hand, is expensive and requires proper documentation. Scrum can be implemented in small projects, which involve teams of 2-3 developers and a scrum master only. \n2.\tWhile the Spiral model needs predefined documentation, Scrum is adaptive and flexible. It doesn't initially have clearly identifiable requirements and requires a flexible approach. \nDisadvantages:\n1.\tScrum requires the use of small teams. Although it can promote collaboration and teamwork, some organizations may find it difficult to rearrange their workforce into teams if the teams are too big. So, it is best to work with a team of 3-4 people and there should not be more than 10 people. \n2.\tThe Spiral model is adequate for projects, which might bring various risks with them during the implementation. Scrum, on the other hand, is suitable for large products that can be easily divided into small parts.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619887,
      "meta": {},
      "text": "SCRUM is an agile software lifecycle. A list (product backlog) contains all desired features of a product and their importance, a few of them are selected and implemented in a sprint which takes a few weeks. After the sprint, the implemented features are shown to the customer and a potentially shippable product increment is finished. Afterwards a new sprint with other features is started.\n\nAn advantage of scrum is an effective use of time and money. When using the spiral model, it can be very expensive to analyse the risks and implement prototypes. Especially for smaller projects that could be developed fairly quickly and cheap, using the spiral model needs too much extra effort. In Scrum the risks aren't analysed and the focus lies on implementing the most important features of the product.\n\nAnother advantage of scrum is that after every sprint, so after a few weeks, a potentially shippable product increment is finished. Therefore, the application gets new features on a regular basis. In the spiral model, the product gets improved continually, because the spiral model is an iterative model. So there is no clear end when using the spiral model because the system could potentially be improved infinitely often.\n\nA disadvantage of scrum is that the sprints have a fixed length. This can lead to features on the sprint backlog which can't be finished during the sprint and are therefore left halt implemented. At the next sprint this can lead to challenges because now potentially someone else has to continue working on a feature that another developer started and due to time pressure maybe didn't document well. This problem doesn't occur in the spiral model because the iterations take as long as they need to in order to create a prototype that addresses the currently tackled risk.\n\nAnother disadvantage of scrum compared to the spiral model is the lack of risk management. In the spiral model there is a team dedicated to evaluating and minimising the risk before every iteration. This does not happen in scrum because the developers just estimate how long the implementation of the sprint backlog will take.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619933,
      "meta": {},
      "text": "SCRUM is an agile approach in software development which can react due to its structure very fast to changing requirements. It consists of a product backlog whose parts are form a goal of every sprint backlog. Every day meetings and sprint cycles (2-4 weeks ), which represent the main development phase, gets repeated several times until all things from the product backlog are implemented. Each Sprint ends with a potentially shippable product increment which is a part of a program that the user can already use.\nAdvantages:\n- high flexibility and adaptability to changing requirements\n\tDue to a recent survey about technology wishes of the people the product owner decides to delete \t\n\tcertain points of the product backlog and replace it by others.\n- continuing improvement process\n\tA software cannot be developed within one sprint because bugs appear after each product increment \n\tthough the developers did some testing -> several sprints not just enhance the functionality but also \t\n\tresolve deviations from the desired state that are often just recognized by the end user\n\nDisadvantages:\n- low estimation possibilities about duration and cost of the whole software development\n\tDue to its highly adaptable structure to changing requirements it may incur lots of cost for redoing things \n\tthat are not needed anymore which increases overall development time. The end user cannot be sure\n\twhen he receives a fully implemented and optimized product because a fix timeline is missing.\n- elaborate communication\n\tEvery day mandatory sprint meetings might lead to unnecessary communication if advances from one day \n\tto the other are very small. In this case, the meeting acts rather as a productivity reducer because too \t\n\tmuch time for organisational things is utilized.\n \nThe spiral model is a iterative model with 9 iterations with 4 major activities . These are clearly settled that's why this model is in contrast to SCRUM not very applicable to frequent changing requirements. (one activity has to be finished completely).\nIt is focusing on creating a working product after all iterations are done though it cannot be seen as a continuing improvement process where you go back to the requirements analysis phase if some changes are necessary.\nWith the fixer structures the spiral model enables better time and cost planning before starting the realization of the project.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620048,
      "meta": {},
      "text": "Scrum is a method of software developement  in which a team works parallel and make changes quickly as they are needed f.e. in requirements.\nYou define the problem in a product backlog and divide them into sprint backlogs and each sprint will be lead through meetings.\nThe product owner can add new requirements to productbacklog or change depending on situation.\n\nAn Advantage is that through the  backlog, large Projects are divided into easily manageable sprints. Team Members get better overview and are more productive. For example through the bumperscar problemstatement, the task were not clear, but through the product backlog, the 12 tasks were clear.\nSpiral model has a weakness bc as the number of phases is unknown at the start of the project, so time estimation is very difficult. there is no good planning as in scrum.\n\nThe quality is an advantage. For example Having everyone working including diffrent talents and constantly adjusting based on feedback  can result in customer-likeableproduct and  quality. If someone notice he was better in testing than in developing, he can tell that in the scrum meetingsand maybe another tester notes,that developing is his strengt so they can change. \nSpiral model doesnt have metings so there is better communication within the team with scrum\n\nA disadvantage is that Scrum method in large teams is challenging and better for 6-9 people. For example the daily scrummeeting which shouldent take more than 20 minutes could take alot and frustrate members.\nSpiral  model is good for large teams and complex projects due to risk management and iterative way.\n\nThe chances of project failure are high. For example  scrummaster has to organize everything well through backlog product and s.o. otherwise project can lead to failure. If individuals aren't very committed or team member leaves in the middle of a project  it can have a huge negative impact on the project, bc it is dependent on needing very experienced people.\nThe spiral model Risk handling is one of biggest advantages , it can adjust well to situation due to the risk handling at every phase.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620542,
      "meta": {},
      "text": "Scrum is a framework that helps teams manage their work by a set of periodical meetings, during which the team members plan what needs to be done or review what has been done. A team creates a product by using the scrum for transparency and adaptation.\nAdvantages:\n1.  Changes can be integrated into the project during development period. For example, if the product owner wants to add more car types for game Bumpers. The change can be mentioned in Sprint planning meeting and added into the product backlog so that new features will be implemented.\n2. Projects are divided into product backlog with different priority level, so that complex projects can be solved step by step and important task can be finished earlier.  For Bumpers, we listed everything that might be needed for initial product backlog. And then we chose \"Cars drive on the game board\" and \"the player starts and stops the game\" as the sprint backlog for Sprint 1. And for every sprint we will update the backlog until the project is finished.\nDisadvantages:\n1.  The project might fail if individuals aren't very cooperative or they are frustrated about meetings . When some individuals are not comfortable with the daily meeting and they don't really provide valuable information, some important problems will be ignored which may cause failure in the future.\n2.  The project will be negatively impacted due to resignation of team members. For example if the Scrum Master leaves the team, the new Scrum Master needs time to be familiar with the requirements and to fit in the team, which might cause delay of delivering final product.\nComparison:\nSpiral model is also suitable for large complex projects as it solves the big projects step by step. Besides, changes can also be incorporated in the later stage of development. But the influence caused by resignation of team members is not as bad as it is for Scrum. And Spiral model does't not ask as many meeting as Scrum.\nHowever for spiral model, we don't know if the project can be finished or when the project will be finished. Time management is bad for this model.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622239,
      "meta": {},
      "text": "SCRUM instead of Spiral model\n\nScrum is a very useful and efficient management system for developer groups. One scrum master, which is predefined, is responsible for all of the communication with the customer, as well as managing the team whilst going through iterative \"sprints\" (short time periods in which problems are to be solved). After one sprint the team goes through all finished tasks and picks the next most relevant tasks. \n\nSo far we have been working with the spiral model which in current times has become more and more outdated. Instead I propose a change in structure towards a scrum model. It would include multiple quality of life improvements for the developers. \n\nOn one hand, the scrum method is an agile model, which means that change in requirement on the customer side can be easily implemented and integrated into the current workflow. If the customer wants a new feature, like a creating new tab in an app, he just adds it to the product backlog and mentions it at the next sprint planning. So far with the spiral model, only in specific parts of the process a new change could've been added, which introduces some risks of unnecessary work being done because the understanding of the customer's needs as well as communication with him aren't very clear, frequent and constant. \n\nOn the other hand the scrum model can easily fail if co-workers lack the necessary communication and cooperation between each other. If no one talks about made changes and the customer also feels no need to communicate new changes and only adds them to the product backlog, it all falls apart pretty quickly because nobody knows what specific task they should work on. The spiral model counteracts this problem by only having one available next step to take, but can still be cumbersome without proper planning and communication. \n\nDevelopers can also be frustrated if they have to join a meeting every morning in which they are told what to do, frustrating them and also wasting their time, especially if the meetings aren't productive and keep on going for too long. In our spiral model this doesn't happen because there are no daily meetings, meetings are only issued when necessary to determine the next best step to take. \n\nFinally the scrum model is still very beneficial and intuitive to developers, because the well known principle of \"divide and conquer\" directly translates to scrum, in which a big project structure is divided into smaller, \"bite-sized\" sprints. If a developer group wants to implement an online shop, they don't just implement the shop but start with a product ordering system, then a payment system etc. The spiral model doesn't follow this concept tightly, but developers just finish the necessary tasks to finish the current concept to then be tested and finally further improved and worked upon. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623187,
      "meta": {},
      "text": "SCRUM is an agile modern software model that is designed in a way that it can dynamically react to changes and deal with interruptions. The concept is that by performing parallel work and prioritising certain activities over other an existing product gets a working increment in a certain time box called sprint. The to do tasks can be stored orderer by priority in a so called product backlog, during a sprint some of this activities, which now are in the so called sprint backlog, shall be elaborated.\n\nAdvantage one: \nA big advantage of scrum is tha projects can be divided in smaller more easily managable parts following the concept \"divide and conquer\".\nThis advantage can not be found in the spiral model, although every iteration is divided in 4 activities and is way more managable than other software models like the waterfall model, it still makes things complex in comparison to the way easier SCRUM.\n\nAdvantage two:\nSCRUM can easily be adapted in direction of the wishes of the product owner due to its organizational structure in sprint slots. \nThis advantage can not be found so strongly in the spiral model, as changes of a iteration may only happen during the second activity, but no in another subsequent iteration. Thus once an iteration was completed it can not be extended like in SCRUM.\n\nDisadvantage one: \nA big disadvantage of scrum is that big projects are very difficult to scale as teams are relatively small. While there do exist some approaches to use SCRUM in large projects, it is rarely used as it requires a big coordination overhead.\nThis disadvantage can not be found in the spiral model, as the second activity of every iteration includes risk management, the risks get simnifically reduced and thus spiral models are still used in large scale projects.\n\nDisadvantage two:\nSCRUM requires experienced workforce than shall to only be able to complete the given tasks in a sprint, but everyone in the team shall be able to provide understandable feedback about the changes. Due to a lack of personal in the IT-Branche, sadly personell with the right qualifications sometimes is hard to find for a reasonable wage (from the companies point of view).\nThis disadvantage can also be found in the spiral model, as especially risk analysis is not a skill that every average programmer possesses.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5627894,
      "meta": {},
      "text": "SCRUM is a way of managing software developments and product developments. It is a technique that helps with frequent changes in technology during the course of the project and serves to control the entire project.\n\nAdvantages:\n- Feedback can quickly be adopted, which leads to an overall better software product fulfilling its requirements\nExample: The tutors in the EIST course are giving feedback every single week for every task, which is better than giving feedback only once at the end of the course due to a better learning effect. Spiral model could also not work in this process because it is not agile.\n-Provides the possibility of sprints which divides larger projects into much smaller pieces\nExample: Instead of building the Bumpers application in the EIST course all at once, the project is divided into smaller subtasks, leading to a more efficient development of the game. Spiral model cannot deal with frequent changes as it is not an agile model.\n\nDisadvantages:\n- It is very difficult to estimate the costs of a projected also the project length cause it is extremely difficult to foresee all the changes in a project\nExample: A merger in a big firm. It is easier with the spiral model as it does not anticipates many changes.\n- Frequent changes are hindering the success of a successful development. SCRUM is based on changes, however frequent changes can also lead to a more complicated development.\nExample: Employees or developers are increasingly focused on changes and divert their attention to the changes instead of the actual original task. Spiral model is better here as it does not anticipate many changes",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644579,
      "meta": {},
      "text": "Essenz von Scrum:\nScrum ist eine Technik zur selbstorganisierten Zusammenarbeit in Teams, dessen Kern es ist, das Produkt agil zu entwickeln -> gute anpassbar an regelm√§√üige Ver√§nderungen. Bei Scrum ist die Produkt-Entwicklung in kleine Abschnitte (Sprints) aufgeteilt, in denen das Team ein potenziell lieferf√§higes Produktinkrement entwickelt und ein Sprint-Planungsmeeting abh√§lt. Bei Scrum sind drei Rollen beteiligt, der Produkt-Besitzer, der das Produkt definiert, der Scrum-Master, der verantwortlich f√ºr den Prozess ist und das Entwickler-Team, das das Produktinkrement umsetzt.\n\nVorteil 1: Durch Scrum kann sich die Projektentwicklung rasch an Ver√§nderungen anpassen, da das Produkt bei Scrum inkrementell entwickelt wird. Beispiel: Eine Chat-App wird entwickelt; Kunde stellt feststellt, dass er auch Gruppenchat-Feature braucht -> In den regelm√§√üigen Sprint-Meetings kann der Product-Backlog erweitert werden, ohne dass dadurch Fortschritt bei der Entwicklung verloren geht.\nBeim Spiral-Model lassen sich Ver√§nderungen dagegen nicht so leicht umsetzen: W√ºr m√ºssten f√ºr das Gruppenchat-Feature zur√ºck zu der Iteration einer fr√ºheren Phase gehen. \n\nVorteil 2: Am Ende jedes Sprints: gibt es ein lieferf√§higes Produktinkrement. Beispiel Chat-App: Wir entwickeln nicht Datenbank, User-Interface, Application-Server nacheinander, sondern alles gleichzeitig und verbessern es St√ºck f√ºr St√ºck. Dadurch: nach jedem Sprint ein lieferf√§higes Produktinkrement. -> Der Kunde kann sofort Feedback geben, ob Produkt den Anforderungen entspricht. Beim Spiral-Model gibt es dieses Produktinkrement nicht und das Acceptance testing findet erst in einer sp√§ten Iteration statt.\n\nNachteil 1: Bei Scrum gibt es sehr regelm√§√üige Meetings (Daily-Scrum-Meeting). F√ºr diese Meetings muss sich das ganze Team koordinieren. Beispiel: Wir entwickeln eine Chat-App und m√∂chten daf√ºr das Daily-Scrum-Meeting abhalten. Team-Mitglieder haben aber unterschiedliche Arbeitszeiten -> Schwierig, Termin zu finden. Beim Spiral Model sind t√§gliche Meetings dagegen nicht gefordert.\n\nNachteil 2: Scrum ist nur f√ºr kleine Teams geeignet. Die Empfohlene Team-Gr√∂√üe liegt bei Scrum unter 10 Personen. Beispiel: Der Kunde unseres Startups ben√∂tigt eine komplexe Banken-Software, an der duzende Leute arbeiten werden -> Team-Gr√∂√üe zu gro√ü f√ºr Scrum. Das Spiral Model ist dagegen f√ºr gro√üe Projekte gut geeignet. Daf√ºr ist das Spiral Model bei kleinen, Risiko-armen Projekten vielleicht zu teuer.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644802,
      "meta": {},
      "text": "Scrum is a popular technique in software development that's used to deal with the constant change. The Scrum team members' roles are divided into Scrum Master, product owner, and the rest of the development team. its main idea is to create at first a Product backlog and then a  Sprint backlog, and the team will have a sprint every 2-4 weeks and a daily scrum.\nScrum has many advantages such as the ability to adapt to change based on feedback a lot more easily thanks to the short sprints for example if the customer wanted to change a requirement in the Potentially shippable product the backlog could be changed easily while in Spiral Model its a lot harder.\nScrum also Improves error handling and risk management due to improved communication and the delivery of product increments but at the same time, the spiral model is suitable for risk analysis and handling.\nBut Scrum also has some disadvantages:\nDue to the lack of definite end-date Scrum could take too much time as an example we can consider a constantly changeable customer requirement, on the other hand, it's true that with the spiral model there is more documentation control but at the same time it could go on indefinitely.\nAnother disadvantage could be resource planning.\nit's so hard to predict the costs of the project because the developers don't know the result at the beginning of the project. if consider that the requirement could change and that the duration is unknown we could understand the cause and the spiral model might have a similar problem but it is more noticeable in the scrum.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620415,
      "meta": {},
      "text": "Core essence: SCRUM is an agile framework that can be used to run a project in an agile way. \nSCRUM divides the workers into different groups (Product Owner, Scrum Master, Developer). At the first kick-off meeting, goals (product backlog) are set and then parts of these goals (sprint backlog) are implemented in small sprints. At the end of each sprint, reviews are held and the interim results are evaluated. Often sprints also have a so-called Daily Scrum, which, according to the name, operates on a daily basis. \n\nAdvantages: \n1. Feedback from customers and stakeholders can always be addressed in the sub-steps of the project and the product can thus be improved. For example, the customer can be shown how, for example, the login of his software looks and he can complain and thus receive a more adapted software in the end.\n2. Very large projects with a complex design and structure can be processed in small sprints with the help of Scrum. For example, a large enterprise software (e.g. SAP) can be broken down into small modules and the login is processed independently of the database, so everything is manageable on its own.\n\nDisadvantages:\n1. The previously discussed Daily Meetings can sometimes be very frustrating for developers. For example, when (almost) everyone is at the same level of knowledge about the development of the project, these meetings are not as useful as usual.\n2. A team with experience is needed for a Scrum project. For example, feedback from an employee with little expertise can lead to incorrectly implemented features, which is detrimental to the project.\n\nSpiral Model Comparison:\nAdv.1: The goals of the Spiral Model are fixed from the beginning and are not changed in an agile way \nAdv.2: Very large software projects are difficult to do with the Spiral Model because there are a lot of risks involved and if one risk is not solved, the project will be terminated.\nDis.1: Repeatedly defining risks can also be very frustrating for workers\nDis.2: Experienced workers are also needed here, as a high level of expertise is also required for risk assessment and solution finding.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620712,
      "meta": {},
      "text": "The core of SCRUM is Agile and flexible development process. This doesn't means the whole project will be finished in a short period. Rather, it means that the customer can see the product development process in regular stages. Just like a restaurant serving food one by one to keep customers from waiting too long and getting hungry. And as developers, we can clearly capture the needs of our customers or the direction of the market at the end of each shorter cycle.\nAdvantages:\n1. Regular phased delivery of products to customersÔºö\nThis allows the customer to experience the finished product and give some feedback, while the team is always ready to make changes based on the customer's needs and feedback. Agile development works with the client to add new requirements to the project prototype until the client is satisfied, allowing the client to change the features they want as the project is developed.\n\nCompare to Spiral Model:\nFor the spiral model, each time a new model is generated, it is refined from the previous version. Thus, it is not possible to make very timely and flexible changes to customer requirements.\n\n2. The level of understanding and consistency of thinking among development members\nBecause of the Daily Scrum: the team members meets together at a fixed time every day for a small meeting, and spends about 15 minutes reporting their progress to each other so that everyone has an idea of the general work progress. Each team member has to summarize what he did yesterday, what he will do today, and whether he meets any difficulties.\n\nCompare to Spiral Model:\nThe spiral model is mainly suitable for developing large-scale software projects. For a project with a long duration and large content. This software must also have a lot of developers. This does not hold true for the daily stand-up meetings in SCRUM.\n\nDisadvantages:\n1. Difficult to grasp the consistency of the overall product\nBecause when teams develop components in different cycles, the overall output tends to become very fragmented rather than a tightly assembled whole internally.\n\nCompare to Spiral Model:\nThe spiral model's emphasis on options and constraints helps make software quality an important goal of software development.\n\n2. Difficult to do accurate resource planning\nSince the team does not know the \"final look\" of the product from the beginning, but gradually learns the true end state of the product by exploring the needs of the users during the process, this poses a great challenge for the initial planning (cost, time, resources).\n\nCompare to Spiral Model:\nThe spiral model then first identifies the goals and constraints for this iteration then evaluates the alternatives and identifies them, defusing the risks. So it is clear about the various costs required.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621232,
      "meta": {},
      "text": "Scrum is an agile development methodology relying on incremental and iterative processes.\nIt usually requires a team where each member has a specific role (Product Owner, Scrum Master, Development)\nIt starts with a a list of objectives that build the project plan.\nScrum basically consists of bits called sprints that range from two to four weeks. Each sprint has gets planned, offers the complete results, and then gives a variation of the final product(Increment) delivered to the client. \n\n\n+ Scrum is very flexible because of the scrum meetings and the increments after each sprint. The team evaluates every sprint and can discuss changes for the next sprint \nIf for example the product owner wants to change parts of the product while in production he/she could talk about that at the next scrum-meeting with the team, while in our spiral model the product owner has to wait until we have the final product.\n\n- Requires a small team and is not suitable for bigger teams if you are not using scrum of scrums --> limiting\nScrum requires a set teamsize and large projects often need more than five people working on it which forces you to use a different development methodology.\nOur spiral model has no limits to teamsize.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622126,
      "meta": {},
      "text": "1. use 2-3 sentences explain SCRUM:\nScrum is a technique that deals with interruptions i.e. change and it is based on empirical control and lean thinking. It uses iterative, incremental approach to optimise predictability and to control risk.\n\n2.\npros 1--It is easy to cope with the changes\nreason--SCRUM consists of short sprints with constant feedback.\nexample--The clients have another new requirement for the product. So they inform the team in the middle of the project development. In the Sprint Review meeting, the team adjust the product backlog to cope with the change required by clients.\n\npros 2--Removing mistakes or rectifying them is easy with SCRUM.\nreason--SCRUM incorporates daily meetings, which helps in identifying problems and resolving them in time.\nexample--During daily SCRUM meeting the team can reduct the risk through early information sharing and discussion. There is also a SCRUM master, who resolves impediments and responsible for the process. \n\ncons 1--Consumed time and cost can be more than needed. \nreason--There is no predicted time limit and cost valuations, which can make it to expand to several sprints.\nexample--The Team is developing a project, because there is no deadline and cost valuation, the work is supposed to finish in five Sprints, but in fact they used seven Sprints. \n\ncons 2--Requires a group of experienced people for accomplishing tasks.\nreason--The Scrum teams work fairly independently, and the Scrum Master and project manager do not always have to oversee and micromanage their tasks. In case some members are not up to the task, it can lead to grave problems.\nexample--In a team, most of them lack experience and expertise. During development, they can not apply their commitments and the process of development is much slower than planned. In this case, the daily SCRUM meeting is meaningless and frustrating for the whole team. \n\n3.compare with Spiral Model\nThe Spiral model is best suited for large scale projects which need more planning and risk management. SCRUM is more suited for small teams and there is no risk management. But they are both easy to cope with the changes caused by clients or other conditions and removing mistakes or rectifying them is easy in both of them. And because they all use iterations to develop the project and have no deadline, the consumed time and cost can be more than needed. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622648,
      "meta": {},
      "text": "The founders of SCRUM define it as an easy to implement project-management framework. Meaning SCRUM provides a relative loose structure on how to take on the development of a project. SCRUM works with many small iterations and doesn't plan the whole project ahead of time.\n\nWorking only in small intervalls (sprints) allows for better adaptability, incase the client requests changes in the backlog. Picture a small social media app being developed, suddenly the client thinks to share pictures is far more important than to voice your opinion. This change will be discussed in the next daily scrum meeting, preventing the waste of resources in the future. \n\nSCRUM allows you to work with small teams and still yield results, thus saving on budget. SCRUM allows to have great results without inflating your employee count, since there are atmost 10 employees in a team. Imagine you run a large company with alot of people working on a project. it's almost impossible to determine whether everyone is working effciently. \n\nThe Methodology relies heavily on self-supervised working. Therefore it's important that your employees are very experienced and can work a releativly long time without the help of others. Suppose you run a tech company. You need to find employees, who are experienced enough to work alone most of the times. This will be tough due to the shortage of specialists.\n\nEmployees are under alot of pressure. Many features depend on them almost solely. This may result in voluntary overtime, but is worsens long-term mental health. you can't and shouldn't sprint a marathon. Burnout rates at larger tech companies go as high as 50%. Running a company with SCRUM could cost you alot of money and worsen your employee retention.\n\nIn the Spiral methodology adaptability is not as good as in scrum, because projects are in contrast to SCRUM atmost divided into 4 phases. Time and resources may be wasted developing a feature, which is no longer required. SCRUM makes use of daily meetings to prevent this. Additionally team-sizes can vary strongly within the spiral methodology but are generally larger. larger teams help to exchange ideas and enable less-experienced developers to do their part and gain experience. Therefore projects with the spiral methodology do not depend on very-experienced developers. Lastly because of larger teams the pressure on individuals isn't as great as with SCRUM, which can improve employee retention. \n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644440,
      "meta": {},
      "text": "I want to tell you today about a collaborative software development model called Scrum. Unlike linear collaborative models, Scrum is an agile model, which is based on work that is being done parallel-wise. Essentially, there is a Project Kickoff meeting, which creates the product backlog, which is then used to do the whole Scrum process. In Scrum, you usually have a Sprint, which lasts for 2 to 4 weeks. You can imagine a Sprint as the working phase, in which everybody is working on an item from the Sprint backlog. You might ask yourself, \"What is the Sprint backlog\". As you come up with the product backlog, you do a Sprint planning meeting, in which you decide with a team what you will do in the next Sprint. Every day, you kinda show your results and others too in the so-called Daily Scrum. It's an event in Scrum, where you as a team look at the Sprint product and decide whether the work is done according to the Sprint backlog. So there are usually more than one Sprints. If the product backlog is done, with the Sprints, you now have the Sprint review meeting in which the product owner and the team as a whole review the product which has been done and determine if it is ready to ship. If not, there is an event called Sprint retro perspective in which you discuss what's gone wrong and what needs to be worked on again. Comparing it to the spiral model, it is a lot less complex and modular and fault-proof.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 5644777,
      "meta": {},
      "text": "SCRUM is an agile project managment framework that focuses on structured incremental sprints. The team working on a SCRUM project consists of the product owner who defines the wanted product and is responsible for the outcome, the SCRUM master who makes sure progress is made and leads the meetings and the developers working on the project.\n\nIn the beginning a product backlog is created and the timeframe for the project, sprints and regular meetings is decided. At the beginning of each sprint items are moved from the product backlog into the sprint backlog and assigned to the various teams or team members. The team(s) work on these tasks for the whole duration of the sprint while having daily meetings to clear smaller problems and report progress.\n\nAt the end of each sprint there is a sprint review in which the team delivers the finsihed increment of the product and discusses the last sprint. Depending on the progress items might be moved back into the product backlog or new items might be added.\n\nThen in the sprint planning meeting the next sprint is discussed. Iterating through these sprints allows the teams to work in parallel and use vertical integration to deliever working increments of the product that can already be tested and evaluated in part.\n\nAdvantages:\nAt the iteration of each sprint, a new version of the product is finished which can be presented to the customer to clearly show the progress made which is an aspect the spiral model has as well. An example would be a webpage for which different functionalities can be presented after every iteration.\n\nSCRUM is less costly as it does require significantly less documentation than the spiral model approach. As an example the identification and resolution of risks has to be documented in each iteration of the spiral model.\n\nDisadvantages:\nSCRUM is difficult to be scaled for larger projects due to it requiring more precise coordination and training whereas the spiral model is better structured for larger projects.\n\nSCRUM is not related to the projects timeline since the number of sprints is not regulated which can lead to late deadlines, a problem the spiral model suffers from as well.\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 5644780,
      "meta": {},
      "text": "Essence of the scrum is that product owner creates the product backlog(wishlist). The developer team creates a sprint backlog by breaking the wishlist into small more manageable parts and set time duration for every sprint.\n\n+Scrum help  teams complete project quickly and efficiently on budget. By division of labor one has clear tasks on oneself. For example while adding a new feature to one application before the implementation is done one can already prepare tests with the Mocking pattern so both implementation and tests would be ready at the same time which shortens the work time and  the budget. On the other hand spiral model during finding alternative solutions and then choosing the best among them and the risk analysis on every phase takes long time. Unknown number of iteration of the phases makes it harder to do time management and expensive.\n\n+At scrum improving the delivery speed enables team to constantly try , fail and find the solution, respond quickly to change communicated through the scrum master from the customer. So scrum being agile adopts feedback from customers and integrates them to the process. For instance while developing an app communicating from the beginning about the requirements enables to make sure the product is exactly as wanted. With this feature of scrum and spiral model's customer evaluation show similarities.\n\n-With scrum risk of failure is high if the team is not very committed or cooperative. Because at scrum team work is the essential thing so that everything is communicated and done correctly. Considering the human nature it is not always the easiest thing to gather people with same motivation, qualification and communicating skills. For example by improving the app if the developers don't communicate correctly and sabotage each other then scrum loses essential meaning. At spiral model it is more of essence that requirements are met rather than how the developers work together because the risk management is iterated often.\n\n-If a team member leaves a scrum project in the middle of the project it can have a negative impact on the product delivering process. For example if the Test developer for the Mocking leaves, replacing the developer and finding someone new qualified, understanding and integrating would lengthen the project. delivering time. Also spiral model for evaluating and reviewing project needs expertise and qualified personal. So the project to use spiral model should be better high risk so that the money and time spend on the project worth it.",
      "score": 72.9,
      "language": "ENGLISH"
    },
    {
      "id": 5644998,
      "meta": {},
      "text": "Die Rollenverteilung in Scrum besteht aus einem Besitzer, einem Scrum Master, der das Geschehen kontrolliert, und den Entwicklern. Beim Kick-Off-Meeting werden die Kriterien festgelegt, die eine Implementierung erf√ºllen muss. Anschlie√üend geht es √ºber in die Sprint-Phase. Ein Sprint dauert eine Woche; er ist unterteilt in t√§gliche Meetings, in denen der Fortschritt besprochen wird. Pro Sprint wird ein kleiner Aspekt des Projekts erledigt. Nach jedem Sprint wird evaluiert, was gut lief und was verbessert werden sollte. Potenziell entsteht nach jedem Sprint ein Produkt, dass so verkauft/bereitgestellt werden k√∂nnte. Ein klarer Vorteil dieses Modells ist, dass immer wieder die eigene Arbeit evaluiert wird. Dadurch kann verhindert werden, dass sich Fehler durch das ganze Projekt ziehen. Jeder kennt das noch aus Gruppenarbeiten in der Schule. Zu Beginn wird einmal kommuniziert, was gemacht werden soll. Anschlie√üend arbeitet jeder f√ºr sich drauf los. Am Ende entsteht ein Produkt, das fehlerhaft und inkompatibel ist, da jeder die Aufgabenstellung f√ºr sich interpretiert hat. Da auch das Spiral Model eine zyklische Behandlung des Problems sowie eine Evaluierung des bisherigen Zwischenprodukts vorsieht, entsteht dieses Problem auch dort nicht. Ein weiterer Vorteil von Scrum ist die St√§rkung der Mitarbeiter in einem Unternehmen. Zum einen verst√§rkt sich deren Kommunikation erheblich, da bei Scrum alle Parteien durchgehend in regem Austausch miteinander sind. Dieser erh√∂hte Kommunikationsaufwand ist aber zugleich auch ein Nachteil von Scrum, da ihn nicht alle Unternehmen bewerkstelligen k√∂nnen und er enorm viel Zeit kostet. Zum anderen lernen die Mitarbeiter Verantwortung zu √ºbernehmen, weil jedes Teammitglied wichtig ist f√ºr die Entwicklung des Projekts. Durch diese Verantwortung erh√∂ht sich auch die Motivation der Mitarbeiter. Wenn du jeden Tag deinen Fortschritt pr√§sentieren musst, R√ºckmeldung erh√§ltst und merkst, dass das Projekt ohne dich keine Perspektive hat, erh√∂ht sich deine Motivation und dein Selbstbewusstsein. Das Spiral Modell setzt nicht allzu sehr auf die immer wieder erfolgende R√ºckmeldung und diese H√∂he an Kommunikation, weshalb es nicht so sehr dazu beitr√§gt. In kleinen Projekten jedoch f√ºhren wiederholte Aufarbeitungen und die vielen Meetings zu einem so gro√üen Zeitverlust, dass sich Scrum kaum lohnt. Das ist dann der Fall, wenn von einem Meeting zum n√§chsten kaum Fortschritt entsteht oder langsamer an dem Projekt als eigentlich n√∂tig gearbeitet wird. Wie oben beschrieben (nicht so viele Meetings) hat das Spiral Modell dieses Problem eher weniger.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 5620149,
      "meta": {},
      "text": " Scrum is an agile software development model, the most important part of which are the so-called sprints and meetings. A sprint is a period of time in which a set of tasks is completed. Before and after each sprint the team holds a meeting to share their progress and plan the next sprint.\n\nOne of the great advantages is that, due to the many meetings, information is exchanged within the team at an early stage, which prevents risks and errors. For example, if two people are working independently on different parts of the software, the meetings ensure that bugs are prevented because both people get a basic understanding of the code. Risks are also taken into account in the spiral model, but they cannot be eliminated in such an agile manner.\nAnother advantage is that changes of any kind can be quickly incorporated and adapted in the project. For example, if the product owner changes a functional requirement, the team can quickly implement it. In the Spiral Model, this can only be adjusted in the next iteration and is therefore not as reactive.\n\nOne disadvantage is that Scrum is only efficient up to a team size of 10 members, otherwise it becomes too complex. For example, it is difficult to hold a 15-minute meeting with 20 employees so that everyone has enough time to present their work. Here the Spiral model has an advantage, because the tasks and conditions can be distributed to more than 10 people.\nAlso, employees need to be experienced with Scrum for it to be effective. Otherwise, it will be difficult for the meetings to provide a meaningful exchange. For example, a more inexperienced person may not know what the main key points are to present in the meeting.Whereas this is similar to the Spiral model in that the task risks need to be properly assessed. Whereas this is similar to the Spiral model in that the tasks and risks need to be properly assessed. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621512,
      "meta": {},
      "text": "Scrum is a technique for managing agile processes and projects, while dealing with constant change. During the scrum process the requirements of the customer are defined in a product backlog, which is partly managed in different sprints, that are reviewed in a fixed iteration process.\n\nOf course there are disadvantages of Scrum, one is the lack of  a timeline. It is difficult for managers to make decisions when there is no planned go-live date. For example in an SAP project, where every additional day costs a huge amount of money because of all the external parties involved, it is  important to have a clear timeline. But the same disadvantage appears with the spiral model. As it is also an agile model, there is no fixed timeline either.\n\nSecondly, the employees working with scrum need a certain skill set, to be able to work in the sprints. For example you need one scrum master who is responsible for the scrum process. There is also the possibility to get a certificate as scrum master. So we have to train our employees in order to use Scrum. Of course also in the spiral model the employees need a special skill set, but as we already use it, they are trained.\n\nOne advantage is the effective allocation of money and time using Scrum. As requirements might change during the development process there is the possibility to adapt very quickly. For example one requirement could be adapted. Then the development team is informed in one of the sprint reviews and they can easily adapt the product backlog. They do not loose any time, because the product owner is very close and is able to give constant feedback. Also the Spiral model can adapt to changes, but the customer is not involved as close in the process.\n\nSecondly, Scrum leads to a high transparency between team members and the customer and therefore also reduces risk. In every sprint review the team members discuss the completed sprint with the customer, which creates synergies. For example one team member might have an idea for solving a problem that occured at another team member's task. This is also a huge advantage over the spiral model. There the iterations go through the four steps in an repetitive manner, and therefore risks are reduced, but the 9 steps of software development stay the same and synergies are limited.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621745,
      "meta": {},
      "text": "SCRUM is a framework which can be used to manage software projects in a very efficient and risk-avoiding manner. The core essence of SCRUM is to maximize efficient communication across all involved parties or teams which maximizes productivity whilst also lowering risk of undiscovered issues through early-stage information. It involves very quick daily meetings as well as pre-timed sprint meetings and allows very agile adaptation to changes during the production phase. With SCRUM, a project can be built piece-by-piece concurrently over all areas, improving and adding functionality with focus on reaching the goals of the current sprint.\n\nOne big advantage of Scrum, that I already mentioned is the low risk because of very early-stage information. A developer can e.g. inform all involved parties about issues that he/she is experiencing that can then be tackled right from the beginning instead of late and more destructive discoveries of issues. Another key aspect of SCRUM is the structured process with very clear roles as well as a known time schedule so that every person knows exactly what to do at a certain stage of the project. Through this, it can e.g. be avoided that two developers accidentally cover the same thing or two people haviing a conflict in whose domain a task is. Timewise, a developer e.g. always knows which goals to implement and when there is opportunity to update others and also get updates from the other teams/scrum master/product owner.\nDisadvantages are e.g. that companies that have never used such a structured framework are often not prepared to suddenly switch. A team e.g., that has never heard of SCRUM would require lots of training to implement and benefit from this framework rather than being disabled by it. \nAnother limitation of the framework is its scalability concerning both the size of the project as well as the team. SCRUM e.g. is designed for teams of max. 10 people. As one can imagine the meetings would get too crowdy and counter-productive with more people. Same applies for the size of the project as it becomes more difficult to overview because the product backlog e.g. would be immense for a huge project.\nIn comparison to the spiral model, SCRUM is also iterative but it offers more structure and time planning than spiral does. It demands regular meetings and therefore secures steady flows of information. However, badly implemented SCRUM can also be less effective and time-wasting. SCRUM is also a bit more flexible as iteration over early phases because of the goal-orientation is possible while sprial dictates more solid stages of a project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622012,
      "meta": {},
      "text": "SCRUM\n\nCore essence\nScrum is a technique that\ndeals with interruptions. It consists of a product backlog, a scrum backlog followed by a sprint which takes around 2-4 weeks and requires daily scrum meetings.  After that comes a shippable\nproduct increment or the process starts again after review.\n\n\nImproves risk management by improved communication,\ncooperation and the delivery of product increments. It's for example easier to identify problems if a team is in constant daily contact rather than meeting once a week for example. \nIn the Spiral model this is also an advantage as evaluating risks is the second in each iteration.\n\nShort sprints enable changes based on feedback a lot more easily. A team which does short sprints can adapt to new requirements a lot easier, because there is only a small amount of work done each time rather than doing a lot more and having to change everything afterwards. This would probably make things worse. \nIn the spiral each iteration has to repeat all 4 steps, whereas in the scrum the sprint there are more differences and iterations are splitted.   \n\nOn the other hand daily meetings sometimes frustrate team members\nIf you meet daily with the same people and only little progress is made or there are conflicts between team members it can be very frustrating and lead to bad results. Whether daily meetings are held or not is not defined in the spiral model.\n\nAdopting the Scrum framework in large teams is also challenging. If you want to implement scrum with a team that is too large it will be difficult to assign the roles and you can loose oversight when there are so many meetings and sprints happening. Adopting the spiral model can also lead to a bad overview because of the many different parts and assigning teams can be hard too. \n\n\n\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622014,
      "meta": {},
      "text": "Scrum beschreibt ein bestimmtes Vorgehensmodell, in welchem Sprints (2-4 Wochen) einen regelm√§√üigen Rhythmus festlegen und sich f√ºr Aufgaben mit Ver√§nderungen/Unterbrechungen eigenen. Zu Beginn eines Sprintes legt man die Anforderungen und Ziele fest, und versucht dann diese umzusetzen und mit Feedback zu arbeiten(z.B. 15min√ºtiges Meeting). Die drei Verantwortlichen sind ProductOwner, ScrumMaster und Entwickler. \n-SCRUM Vorteil: dass man die sprints regelm√§√üig reviewed und anpasst. Somit kann man auf Kundenw√ºnsche besser eingehen als bei spiralmodel in den 9 iterationen. \nBeispiel: Wenn man ein Handyspiel (SubwaySurfers) entwickelt, wo die Figur nicht nur geradeauslaufen, sondern z.B. drehen soll, dies aber erst gegen Ende erw√§hnt, ist es schwer diese kurzfristig innerhalb des 8/9 sprints zu implementieren, weil dieser schon f√ºr anderes verplant ist. Scrum ist also flexibler.\n-Scrum Vorteil: Software wird dem Kunden schon in einer fr√ºhen Phase gezeigt und eignet sich f√ºr kleinere Projekte sich gut. Beim spiralmodel m√ºssen erst die 4 Aktivit√§ten durchlaufen werden, before man am Ende die Ergebnisse evaluiert und dann weiter fortf√§hrt. Dadurch, dass die Aktivit√§ten (z.B. bauen einer Reihe von Prototypen) viel Zeit in Anspruch nehmen kann und die Risiken evaluiert werden, nimmt das spiral model viel Zeit in Anspruch. Somit kann Scrum gut auf kleine Projekte, die nicht viel Analyse ben√∂tigen besser eingehen:\nBeispiel: M√∂chte der Kunde, dass ein Handyspiel funktioniert und das Ziel eine schnelle Implementierung ist, ohne auf anderen Ger√§ten kompatibel zu sein oder ohne Risiken wie Internetverbindung etc, auszuschlie√üen, eignet sich das spiralmodel mit der ausf√ºhrlichen Analyse nicht.\n-Spiralmodel Vorteil: Risikoanalyse, der bei Scrum nicht so ausf√ºhrlich ausgepr√§gt ist. Dadurch eignet es sich gut f√ºr gro√üe Projekte mit viel Risiko. M√∂chte man z.B. eine neue Software einf√ºhren, die nat√ºrlich mit viel Risiko verbunden ist, sollte man durch die Risikoanalyse des Spiralmodels Risiken so gut wie m√∂glich ausschlie√üen, dies passiert bei Scrum nicht so gut.\n-Scrum Nachteil: kein festes Ende wie beim spiralmodel gibt. Beim Spiralmodel endet alles innerhalb von 9 iterationen. Im Anschluss gibt es das fertige Produkt. Bei Scrum ist das Ende nicht definiert. So kann man nach beliebig viele \"Iterationen\" einf√ºhren und das Projekt zieht sich in die L√§nge. Beispielsweise m√∂chte ein Kunde eine App mit verschiedenen Funktionen, die er nach und nach √§u√üert. Dadurch. dass das Projekt bei Scrum endet wenn der Kunde zufrieden ist, zieht sich das Ganze in die L√§nge und kann √ºber mehrere Monate oder Jahre andauern.\n\n\n//Teilweise siehe letztes Jahr: https://artemis.ase.in.tum.de/courses/121/text-exercises/4341/participate/960947",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622299,
      "meta": {},
      "text": "The core essence of scrum is to adapt to changes rapidly. Communication between team members is valuable to minimize the risks. \n\nAdvantages: \n1- Not to prevent failures, but to detect failures as soon as possible.\nExample: In the daily standup, a junior developer specifies that she refactored a code and it was accepted after review. At the same time, a test engineer says there is an error regarding a connected product. So it is easy to correlate both events without it being too late. \n2- It adapts to change\nExample: A client wants another UI style with a dropdown menu. Then the team puts that into product backlog.\n\nDisadvantages:\n1- It is hard to manage scrum if the team members are not that dynamic/ open to communication/ committed.\nExample:  A developer within team does not attend meetings, even if she attends she does not collaborate.\n2- It might not be a good choice if the project is so big.\nExample: A company that is developing a flying car would not use agile methods. It is because the project is so big and the teams are large. Of course they can split up the teams, and implement agile in each team. However, this also requires a good planning approach\n\nSpiral model is an iterative model, while scrum is both iterative and incremental. Spiral model is better than linear models when it comes to adapting the changes, however, the changes happen after each iteration. In scrum, changes are considered rapidly.",
      "score": 29.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644310,
      "meta": {},
      "text": "Scrum consists of several sprints which are working towards finishing a so-called product backlog with all tasks in it. Each sprint focuses on a subset of tasks, called a sprint backlog, which are selected in the sprint planning meeting and produce a product increment. Each sprint is evaluated directly afterwards in a sprint review meeting and every day a daily standup meeting is held.\n\nSince scrum is an agile model, responding to change is very easy. E.g. regular sprint planning meeting allow to discuss adaption to change efficiently. An example for change might be a requirement change from the customer asking to include support for another language that can simply be added to the backlog.\nMeanwhile the the spiral model might already be planned several iterations ahead leaving less room for change.\n\nThe constant reflection on the processes is deeply rooted in the DNA of scrum. Sprint review and retrospective ensure reflection upon the process and what could be improved. This can then be applied in the next sprint planning meeting. For example it might become obvious that the scrum master ask more often about the state oof the product because certain tasks might be neglected since they're less favorable to accomplish.\nThe spiral model does not account for these optimization meetings by design.\n\nFor scrum in its purest form there are a lot of meetings and communication in general which of course is also time consuming. E.g. for teams of two sharing a office space there are not as much meeting needed since they already communicate extensively and are also not that much people.\nSince the spiral model provides a much clearer outline the need of communication is reduced since the next activity is always define clearly.\n\nA backlog items of a sprint backlog might be dependent from each other. Maybe a database client must first be written (\"code\") before the system can be integrated with the database (\"integration and test\").\nThis can not be accounted for well in scrum while the spiral model for example uses a linear process models inside \"Development\" activity.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644327,
      "meta": {},
      "text": "Scrum geh√∂rt zu den agilen Softwareentwicklungsmodellen. Das bedeutet, dass mithilfe von Scrum Projekte flexibel und adaptiv entwickelt werden k√∂nnen. Das Ziel von Scrum ist es nach einem sogenannten Sprint ein teilweise fertiges Produkt liefern zu k√∂nnen, welches mit jedem weiteren Sprint verbessert wird.\n\n+ Mit Scrum k√∂nnen Projekte sehr flexibel entwickelt werden. Das bedeutet, dass mittels Scrum sehr gut auf √Ñnderungen in der Anforderungen reagiert werden kann. Zum Beispiel hat ein Kunde den Auftrag f√ºr ein Handyspiel gegeben, welches Hochkant gespielt werden soll. Mitten in der Entwicklung des Spiels will der Kunde aber doch, dass der Spieler aussuchen kann ob er lieber Hochkant oder Querformat spielen will. Die √Ñnderung kann in einem neuen Sprint in den Backlog aufgenommen werden.\n+ Dadurch, dass nach jedem Sprint ein potenziell fertiges Produkt entsteht, hat der Kunde besseren Einblick, wie sich das Produkt entwickelt und kann schon fr√ºh bemerken, falls etwas falsches entwickelt wird. Das Team erh√§lt Feedback und kann die gew√ºnschten √Ñnderungen durchf√ºhren. Beispielsweise sieht der Kunde bei einer geforderten Buchhaltungssoftware, dass die GUI aufgrund der vielen Optionen viel zu un√ºbersichtlich wird und beschlie√üt einige Funktionen wegzulassen um die Bedienbarkeit der Software aufrecht zu erhalten. \n\n- Scrum hat keine festgelegte Deadline f√ºr das Projekt. Scrum ist nicht daf√ºr ausgelegt auf eine allgemeine Deadline eines Projektes hinzuarbeiten. So kann beispielsweise eine Web-App, welche f√ºr zwei Monate Zeit angesetzt wurde, mehr Zeit beanspruchen, da aufgefallen ist, das MongoDB keine passende Datenbank f√ºr dieses Projekt ist und jetzt zu einer SQL-Datenbank gewechselt werden muss.\n- Scrum schreibt eine begrenzte Anzahl an Teammitgliedern vor. Dadurch kann es sein, dass das Skalieren durch mehr Teammitglieder schwer ist. Zum Beispiel soll nun YouTube von Grund auf entwickelt werden. Dazu werden viele Entwickler in Teams aufgeteilt, welche durch neue Organisatoren abgestimmt werden m√ºssen.\n \nMit dem Spiralmodell besteht weniger Flexibilit√§t beim Entwickeln eines Projektes. Das Projekt wird einmalig geplant und dann werden einzelne Phasen durchlaufen. Das Spiralmodell liefert auch kein teilweise fertiges Produkt. So kann es sein, dass das Produkt von den Kundenerwartungen abweicht. Das Spiralmodell hat aber Deadline und kann unbegrenzt Teammitglieder in einem Team haben.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644696,
      "meta": {},
      "text": "The essence of scrum include solving customer problems, the relationship between team members, reflection to promote team growth and spirit. The ultimate goal must be to satisfy the customer, satisfy the customer‚Äôs end-user, and help the customer solve his problem. As a scrum master, one should ask themselves and the team whether they have helped the customers solve their problems. \n\nSo what are the disadvantages of SCRUM: \nOne major and mostly common disadvantage is the adaption of the Scrum framework in large teams, as it is extremly challenging. Therefore smaller teams of selected memebers are needed. The teamspirit becomes less and less the communication doesnt work quite right between the team members. These are just a few examples for a failing project. \nSo one common but rather curcial disatvantage of scrum would be the cooperation of each team member. If one does not cooperate very well or does not show a certain degree of commitment, the project will likely loose more of its team spirits and fail ultimatly. This can happen for example when a team member leaves in the middle of the project. It will drag down the entire team. \n\nOf course these disadavantages and scenarios can and have to be evaded. As working with scrum, if used and leaded well by the scrum master, can lead to customer satisfaction of the final product. Perfect is Scrum, being agile, adopting feedback from customers and stakeholders better and easier. So the ultimate goal of for example satisfaction of the customer can be achieved. \nThrough scrum, the functionallity of being able to host short sprints to enable changes based on feedback, will be made a whole lot easier. So for example the visiability for each team memeber will and can be as well achieved. \n\n\nAs for my last point of this presentation, I will present another option besides scrum. The usage of the spiral model. This model is an iterative model with four steps: Determining objectives, alternatives, and constraints; \nEvaluation of alternatives and identifing risks, resolving risks by assigning priorities to them;\nDeveloping a series of prototypes for the identified risks starting with the highest risk;\nevaluate the results of the iteration and plan the next iteration\n\nthese four steps will be iterated through for nine times. It does have a resemblance to the sprint model. Because taking a closer look at the sprint model, every sprint does work as an iteration. Where as in the sprint model the tasks are already devided in four sections. These can contain of tasks under the task. In the SCRUM it depends on the planing of the scrum master. So advantages and disadvantages might be quite similiar.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644812,
      "meta": {},
      "text": "Scrum is an agile software development method where in its essence the team meets regularly in a \"scrum\" after working together for a period of time i.e. a \"sprint\". During these \"scrum\" meetings, the members of the team share the status of the task that they're working on. Scrum also has \"sprint planning/review\" meetings where the team can decide what the product backlog should be and how it can be adjusted, and at the end of each sprint a potentially shippable product increment is made. \n\nOne advantage of scrum is that it responds to change well, since there are numerous scrum meetings to reassess the direction the team is going in and adjust accordingly. The spiral model can also  respond to change well due to the regular risk analysis stages of the process. Another advantage of scrum is that it can lead to higher customer satisfaction, since it can respond well to change in customer requirements, similarly because of the numerous meetings and the incremental approaching to building the product. Likewise, \n\nA disadvantage of scrum is that staff must be trained to be able to use it, especially for specialized roles such as Scrum Master. Similarly for the spiral model, some employees may required specialized training to be able to complete the risk analysis. Another disadvantage of scrum is that it might not be efficient or suitable enough for projects which involve very little change and standard procedure, since there will be too many unnecessary scrum meetings as there won't be much adapting being needed. Likewise, the spiral model might also be not suitable for such straightforward projects, since the risk analysis report would be redundant as the risk level would be quite low since everything is so predictable. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620929,
      "meta": {},
      "text": "SCRUM is an iterative, incremental approach to software development. At its core, it represents the idea that small teams consisting of a product owner, scrum master and developers work in short sprints of 2-4 weeks and complete each sprint with a potentially shippable product increment.\n\nAdvantages:\n1) A key advantage of SCRUM is its iterative nature, meaning things like models are not necessarily set in stone before development starts, but can be improved as the team gains more insights. For example, the team might start with a basic functional model but extend it as new edge cases are discovered during testing and development.\n2) Another advantage is the fact that a potentially shippable product is available after each sprint, which makes it possible to continually judge if the project is still on track and make adjustments if necessary. A game with loose requirements at the beginning, like Bumpers, might meet the client's expectations much better if the current state can be reviewed every few weeks instead of just once at the end.\n\nDisadvantages:\n3) However, many employees might not be familiar with this fast-paced way of working, especially daily meetings can be tiresome, so if this system were to be implemented, it would definitely require a detailed introduction of how and why it works to the entire team. In big companies with many seasoned employees, it might be very hard to suddenly adopt a system like SCRUM.\n4) Additionally, SCRUM could be hard to implement in large teams, as it is primarily designed for small teams.\n\nComparison to Spiral model:\n1) The Spiral model is iterative as well, but only within each stage of software development, the stages are still carried out sequentially.\n2) The Spiral model does not necessarily produce a potentially shippable product after each iteration, only after the 5th iteration, when the code has been implemented.\n3) The Spiral model is far less restrictive on how the work has to be done and likely more familiar to most employees.\n4) The Spiral model is not optimal for large teams either.",
      "score": 85.4,
      "language": "ENGLISH"
    },
    {
      "id": 5621309,
      "meta": {},
      "text": "Scrum is an agile method for project management in order to achieve the incremental and iterative delivery of a product .  The work is divided in small cycles called sprints where the focus is on some prioritized  tasks  from the product backlog , with frequent feedback and an involvement of the customer and the possible required changes.\n\nADVANTAGES : \n1. effective Use of time : since the number of sprints and its durations are fix and constant , the duration of a project development can be estimated and rather quick : for example : scrum is ideal for complex projects because it is well organized and divided which makes the procces quicker .\nIn contrary the exact number of loops in the spiral model is unknosw wchich makes it longer to develop a project . \n2- flexibility with dealing with change : Scrum enables the team to deal with unexpected changes required from the customer while doing the task : for example while implementing a feature of an app : let's say the customer wants the app  to be used by multiplle users at once , the developpers can adapt to this change immediately without loosing a lot of time or ressources .\nIn contrary the spiral model enables us to deal with changes only after finishing an  activity we are now doing , which  lead us to time and ressources loss . \n\nDISADVANTAGES :\n",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5621694,
      "meta": {},
      "text": "Scrum ist ein agile Entwicklungsmethode, welche die Projektlaufzeit in kurze Iterationen, sogenannte Sprints, unterteilt. Ein Sprint dauert ca. 2-4 Wochen und beginnt mit einer Planung und endet mit einer Sprit Retrospektive in der das erarbeitete analysiert wird.\n\nEin Vorteil von Scrum sind die kurzen Iterationen und die M√∂glichkeit fr√ºh Feedback vom Kunden zu bekommen. Ein Software Team evaluiert beispielsweise schon nach 2 Wochen ein Flugbuchungsapp die bisher nur die Funktionen hat Fl√ºge anzeigen und Flug auf Merkliste setzen hat, da man auf diese Weise bereits ein Feedback vom Kunden bekommen kann. Im Spiralmodell dauern die Zyklen bis zu 6 Monate und man bekommt das Feedback deutlich sp√§ter.\n\nDas Spiralmodell ist ebenfalls ein iteratives Modell und setzt sich aus den Teilen, Ziele und Bedingungen festlegen, Risiken und Alternative bewerten, der Entwicklung eines Prototypen und der Planung der n√§chsten Iteration zusammen.",
      "score": 16.7,
      "language": "GERMAN"
    },
    {
      "id": 5622085,
      "meta": {},
      "text": "The customer has a problem worth solving and can probably be solved by developing a product. To help the customer, we put together a team of people who together have or can acquire the skills needed to build that product. This scrum team interacts directly with the real customer to better understand the problem and come with an solution. First the team and customer decide the first step on how to solve the problem and the team develops an usable product. Having reached the end of the first cycle the team reflects on how they worked and determines how to improve that. The team and customer test what was created and together decide for the next step. This cycle continues until there is no more problem to solve. \n\nTo start with the disadvantages of the scrum, I would like to mention the fact that the chances of project failure are high if individuals aren't very committed or cooperative and adopting the Scrum framework in large teams is challenging. Another disadvantage which is also related to the first disadvantages that I mentioned is, if any team member leaves in the middle of a project, it can have a huge negative impact on the project. On the other hand scrum has important advantages like projects being divided into easily manageable sprints. Another advantage is that the Scrum can help teams complete project deliverables quickly and efficiently. As an example our team working on the EIST project have managed to deliver fast solutions to each problem described in the problem statement by working on different parts, but after a couple of weeks some of the members couldn't manage their time and had to drop off the project, which also caused other members to give up.\n\n   Both Scrum and Spiral Model have test, plan, and evaluation phases, however Scrum lacks the risk management. The Spiral Model doesn't say much about the length of an iteration - there is not iteration per say in the Model but we can interpret one \"circle\" as an iteration. The Spiral Model is good for long projects that has high risk, since the model highly depends on risk management. In Scrum, there is no such thing as a minimal Sprint count. A project is done, when the customer accepts it. It can happen after one Sprint , or after a thousand.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5622793,
      "meta": {},
      "text": "SCRUM is a adaptative model which means that can deal with varios changes requirements. Its most important roles in essence are PRODUCT OWNER, SCRUM MASTER and SCRUM TEAM MEMBER. Its lifecycle is divided in sprints, whicht are the iterations and the goal os every sprint is to add-on in the product incremental\n\n\nADVANTAGES :\n1. We reduce risk through early information. For instance, lets say that we discovered in our DAILY SCRUM MEETING that a bug is affecting some of our functionalities, we create a story and fix the bug.\n\n2. Highly effective for change requirements. Lets say that we have a meet with our customer, we list the requiremets, our customer who is an startup later found out that having another small feature in their software will be actually super useful, it is not a big deal for us and we can implement in our next sprint.\n\nDISADVANTAGES : \n\n1. SCRUM teams are difficult to implement for large enterprises, it is better to make small scrum teams. For instance, there a a whole research in TUM about agile for large enterprises and some patterns to implement it correctly.\n\n2. Similar to the other disadvantage, scrum teams are difficult to implement if people is not 100% percent sure or how it works and if the are not sure it if works. ",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5623082,
      "meta": {},
      "text": "With SCRUM, you divide the development of a product into sprints, usually lasting 2 to 4 weeks. At the beginning of each sprint, you select a few tasks from all the tasks to complete, to work on during the Sprint. Additionally, at the end of each sprint you should have a potentially shipable product, that gets improved upon during each sprint.\n\nadvantages of SCRUM:\n+ SCRUM is flexible. as you reevaluate the tasks at the beginning of each sprint:\nexample: When a task is not completed after a sprint, you can just work on it during the next sprint as well.\nIn the Spiral model, you cannot go back to work on e.g the code, when you are already doing testing. In Scrum that would be possible.\n+ SCRUM can be adapted to your specific situation.\nexample: When you are working on a small project for university, where everybody is also busy with tasks from other subjects, you could reduce the frequency of the daily scrum meetings to weekly.\nYou can also adapt the Spiral model to your situation, e.g. by reducing the time for each iteration.\n\ndisadvantages of SCRUM:\n- only works for small teams, as it is based on everyone communicating with each other, which gets harder with bigger team sizes.\nexample: during the daily SCRUM meeting, it would be impossible for the SCRUM Master to ask all team members, about their progress, if the team consists of 200 people. \nThe spiral model works with small and big teams, as the team does not need to communicate as much as in SCRUM.\n- SCRUM does not work to well, to meet a certain deadline\nexample: a task, where a lot could be done, might be subject of many sprints, before all of it is done and therefore could take time away from many other tasks.\nIn the Spiral model, meeting deadlines is easier, as the development is split into multible Interations, that all got small deadlines.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623201,
      "meta": {},
      "text": "Scrum is a technique in which a team can work together by reflecting on their wins (tasks successfully completed) and losses (tasks not completed) to improve and better their workflow. Risk Management is improved as this method heavily relies on team communication and it is well suited for as an agile process as the team is made to adapt to rapidly changing requirements.\n\nPros:\n1.\tWorkable/Deliverable Product is finished quicker by design.  (In Spiral takes minimum an iteration.)\nExample: Our EIST project had a workable model after 2 sprints whereas, if we used spiral pattern we could have been still on the planning phase.\n2.\tAs it is Agile, we can factor in feedback from the Client/Product Owner and make changes to the product on coming sprints.  (Feedback taken during a stage and not at every stage of a spiral)\nExample: A company developing a game can take feedback from the investors before exact scrum meeting whereas, in spiral pattern next iteration is planned after 3 stages.\nCons:\n1.\tHaving Scrum meetings often can lead to frustration among team members. (In spiral the number of meeting is usually less)\nExample: In our EIST project we had an internal scrum meeting every week which was really infuriating whereas, if we had a spiral pattern we could have had this meeting after every iteration (4 stages of Spiral),\n\n2.\tHard to implement for large teams as it (Scrum) is by design better suited for smaller teams. (Spiral can be very easily moulded to accommodate large teams)\nExample: In a company, scrums are implemented for small teams and the scrum masters answers to heads whereas, a spiral can be implemented in large teams for example Large Game development studios.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644441,
      "meta": {},
      "text": "Scrum is an agile software development framework that can deal with changes. In comparison to linear development you can react to rapidly changing requirements because the work is perfomed in parallel. Also you reduce the risk by improved communication.\n\nAdvantage:\nLow risk since regular meetings are being hold to increase communication -> developer doesn't develop the same or features that doesn't work together\nProduct owner can priotize or change requirements -> features which were not planned can be added\n\nDisadvantage:\nScrum often leads to scope creep, due to the lack of a definite end-date\nQuality is hard to implement until the team goes through an aggressive testing process\n\nIn the Spiral model risk handling is better due to the risk analysis and risk handling at every phase and the software is produced early.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 5644647,
      "meta": {},
      "text": "SCRUM is an agile working method to get from a starting idea to a final product/outcome without using a linear progress strategy but a iterative process with recurring phases and continous improvements.\nSCRUM sprints can be broken down in multiple projects steps, including the participating sprint members, with one person declared the SCRUM master to organize process and one person declared the Product Owner controlling the wanted final outcome and the reasoning for the designated final product and communicating input with other members\n\nPros:\n\nFlexible Communication:\n- during sprints the communication between sprint participants is pretty high\n- Many chances to interact and challenge ideas and give valuable feedback, with open discussions and potential to later bring up topics again\n\nExample: The product owner has a set up goal in mind but gets challenged in the first sprint, with everybody able to speak freely on their opinion towards the goal. Goal is changed afterwards\n\n- Communication in teams isnt as good but the communication to customer is higher\n\nTransparency:\n- With the backlogs and the whole setup, the current status & goals & hindrances and the overall timetable are available for everyone\n- information asymmetries are simply dismantled\n\nExample: Nervous team members can always easily look up current status and upcoming parts \n\n- Spiral model less transparent between single steps but outcome is transparent handled\n\nCons:\n\nDifficult coordination and effort heavy:\n- Lengthy process with a lot of coordination between the team members and the two relevant contact persons\n- Repeating sprints are time consuming for all participants\n\nExample: Everybody must have time on recurring daily times over a long span of time, which can be a difficult scenario for corporate working environments\n\n-Spiral model with higher coordination problems even more effort heavy \n\n\nParticipation size: \n- Limited sizes for participants that can be integrated in a sprint, max 10 people possible\n- too many people make the process inefficient and can not fully contribute\n\nExample: With 15 people it isnt assured that every person can speak their opinion on the current topic freely in time\n\n- The spiral model is fitted better to work for big groups with its complex and expensive set up and the split up parts\n\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644698,
      "meta": {},
      "text": "The core essence of SCRUM is about a work of team with constant changes. The central concept for SCRUM is sprint, time intervals of constant durations during which a team delivers a single product increment for the project. Through improved communication and roles, a team makes regular Sprint planning meetings to discuss the results of the previous sprint, they are also called sprint review meetings, and what should be realised during next sprint, sprint planning meetings.\nLike every model SCRUM has both advantages and disadvantages. \n(1+) One of the main advantages is dividing of large projects into manageable sprints, which will be easier for development team to understand and create. For example, after subsystem decomposition each member of the development team only cares about own subsystem, that directly determines the range of tasks. \n(2+) It is also worth mentioning that the result of every sprint is potentially shippable product increment, already coded and tested working system. It helps a lot when the team doesn't have enough time to finish the project, they can send the latest version of their system instead and it will work.\n(1-) On the other hand, SCRUM requires experience from the team to properly organise the workflow, so it is not a good idea to try this model with large projects for the first time. For example, an inexperienced team most likely does not know how much time should be directed to one sprint, or they could incorrectly calculate the complexity of the task, which will lead to a shortage of time.\n(2-) In addition, SCRUM requires working only in small teams, for large teams this model is not suitable. For example, a team of 20 people working on a large project will find it difficult to hold general sprint review or planning meetings every week, especially if some will skip them.\nReturning to Spiral Model, it is good for large teams(2-) and also there is a working version after each iteration (2+), but it inferiors to SCRUM in splitting into subtasks(1+) and is not easier to adapt.(1-)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644753,
      "meta": {},
      "text": "SCRUM is an agile lifecycle model. That means that it can deal with frequent change. In SCRUM you develop software in so-called sprints. Those are periods of a few weeks in which you try to reach some goals that you define beforehand and create potentially shippable product increments. You organize daily team meetings to make sure that risks are identified early enough.\n\nOne advantage of SCRUM is the possibility to get feedback from the customer during development. If for example a customer does not like the UI you delivered in the last sprint, you can address that feedback within the next sprint. In the spiral model the implementation is the last iteration, so a prototype that the customer can give feedback on will appear very late.\n\nAnother advantage of SCRUM is that lessons learned in sprints can be used to decide differently in the next sprints. If for example a team notices during the first sprint that they spend too much time understanding their build tools they might switch to other build tools.\nIt is also possible in the spiral model to apply knowledge collected in previous iterations but in the spiral model you will not that often get to the same situation again, because the nine iterations deal with different aspects.\n\nThe fixed duration sprints can be a disadvantage because change between sprints can not be dealt with until the next sprint begins. If for example the requirement that a video player should also play audio-only files gets dropped within a sprint, for the rest of the sprint resources will be spent unnecessarily to develop all features addressed in that sprint in such a way that they can also deal with audio-only media. However SCRUM still deals better with change than the spiral model, in which change can lead to re-iteration or to project cancellation. \n\nAnother issue of scrum is that it is hard to integrate into more static existing processes of companies, as it is often hard to say, when some feature will be working. If for example a car manufacturer needs a stable system dealing with ignition early in the development phase of a motor controller that might be a problem, because when creating the remaining motor controller system in SCRUM, the ignition subsystem might also be subject to code- and design changes. In comparison: Unless requirements change iterations in the spiral model are not redone.",
      "score": 87.5,
      "language": "ENGLISH"
    },
    {
      "id": 5645017,
      "meta": {},
      "text": "Scrum is an intuitive way to develop a product by breaking down the development cycle into tasks that can be completed sequentially by a team of medium size (up to 12 members), where the team works in parallel. Scrum is adaptive and entails so-called sprints - periods - in which the team gets assigned tasks from the project backlog by the scrum master, which then get done during these sprints. The scrum master oversees the development cycle and communicates with the client for feedback regarding feature requests.\n\nWhen it comes to advantages and disadvantages, Scrum is unique because it can befit changing requirements and most of the project requirements aren't set in stone, unlike in a spiral model-based development cycle. Whereas in Scrum you plan for the following few requirements, you usually plan an entire product in the spiral model. This can be good, assuming both parties fully know what they want and don't. However, Scrum is simply more flexible.\n\nAnother remark is that Scrum isn't process-oriented; it primarily focuses on assigning people roles that are then fulfilled by the team. This leads to the team being set up in such a way that everyone gets to do what they do best; the assigned roles don't have to be filled with professionals with myriad experience, especially considering Scrum's scalability, The spiral model is designed with professionals and traditional software development in mind albeit provides a single approach.\n\nThe primary downside of Scrum is that it's iterative and doesn't have a set deadline in sight. As mentioned above, this can be a good thing if development doesn't need to occur at a linear rate but can be a bad thing if the requirements are solid. The spiral model on the other hand is perfect for such a development cycle.\n\nAnother disadvantage is the scalability itself, as Scrum, despite being targeted toward scalability, may require large transformations in the way a company works, with the sprints and stand-ups. The spiral model is easily implemented in a company where people already know what they're doing. ",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5620366,
      "meta": {},
      "text": "Core essence of SCRUM:\n\nSCRUM is an agile project management method based on empirical process control and lean thinking that allows to deal with changes. The basic structure of SCRUM consists of the product backlog, which contains the requirements for the entire product, the sprint backlog, which consist of the requirements to be solved in the current sprint, the sprint itself, which creates a potentially shippable product increment. Thus in SCRUM you work in an iterative and incremental way by creating in each sprint a potentially shippable product.\n\nAdvantages and Disadvantages of SCRUM:\n\nOne advantage of SCRUM is that continuous feedback is ensured. Through the \"Daily Scrum Meeting\" every member of the Development Team reports on his or her progress and can get individual feedback. Also after each sprint the \"Sprint Retrospective\" allows to reflect on the sprint and therefore enables the sprints to become better on the long run.\nAnother advantage of SCRUM is that it optimizes predictability and allows to control risk. The \"Daily Scrum Meeting\" ensures early information sharing and through the product increment you have an earlier version of the product/system to fall back on. Also the product increment mitigates the risks from a system integration problem with e.g. a Big Bang Approach.\nOne Disadvantage of SCRUM is that it's difficult to scale. With larger projects you may need multiple SCRUM teams. This introduces problems of cross-team collaboration and communication.\nAnother disadvantage of SCRUM is that it requires experienced and trained personal. This is both important for implementing the SCRUM approach on the one hand and on the other hand every member needs to be able to respond to and to give feedback on individual members and process as a whole. \n\nComparison with between SCRUM and the Spiral model:\n\nThe Spiral model and SCRUM are two different approaches to project mangement. The Spiral model is an iterative and SCRUm is an agile approach. Feedback is not as strongly integrated into the process in the Spiral Model as it is in SCRUM. However both the Spiral Model and SCRUM are great at risk handling. Risk handling is integrated into the Spiral Model at every phase. The Spiral Model is better to scale than SCRUM and is thus best for large and complex projects. Both SCRUM and the Spiral Model are complex and thus require experienced and trained personal.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620370,
      "meta": {},
      "text": "SCRUM is a framework for software development based on agile methodologies. The essence of SCRUM is to develop software in a way that can satisfy changing requirements and customer needs by delivering product increments in each sprint. A sprint is the timeframe the team has to work on the sprint backlog items, it is then followed by a sprint review and sprint retrospective meeting, afterwards a new sprint is planned in the sprint planning meeting until the all the items in the product backlog are implemented.\n\tIn SCRUM, processes are performed in parallel and integrated continuously. There is a vertical integration that helps create a better working solution with every sprint.\n\tAnother advantage is that SCRUM is designed to handle changing customer requirements by continuously iterating and improving the last version of the software.\n\tFor example, by using linear methodologies, we would only take into account the initial requirements of our customer. Using SCRUM, if the client decides to add new functionality such as enabling users to review each product, the scrum master and product owner would add this item to the product backlog, and then the developers would choose when to implement this new feature.\n\tIn a SCRUM team, a high level of responsibility and communication is required. Since there are no direct overseeing managers, the team has to be self organized.\n\tAnother disadvantage of SCRUM is that it is hard to implement in a organization with a current working structure. It requires banning the current system and implementing the SCRUM framework from scratch.\n\tFor example, the developers are completely in charge of implementing their code and should take responsibility for their work and present it to the rest of the team during the daily scrum meetings. Further, the developers should communicate to ensure their code integrates well.\n\tThe spiral model is an iterative model meaning that change during a phase can lead to another iteration where as SCRUM is an agile model where the requirements or design are reengineered. In spiral the processes are still sequential however they are iterated over and this is not suitable in an environment where change happens often. Spiral is easier to implement in a team and requires less individual responsibility as the team structure is different.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5621834,
      "meta": {},
      "text": "SCRUM ist eine Art des agilen Projektmanagements, welche vor allem durch sehr regelm√§√üige Meetings dazu f√ºhren will Probleme und Konflikte im Projekt zu l√∂sen. Dabei wird zuerst ein Projektdokument erstellt, welches alle Aufgaben beinhaltet, welche darauf hin in den so genannten Sprints abgearbeitet werden. Vor, nach und w√§hrend jedem Sprint werden Meetings abgehalten, welche dabei helfen den Fortschritt zu √ºberwachen sowie Probleme zu identifizieren.\n\nVorteile:\n- Agilit√§t/Anpassungsf√§higkeit: Dadurch das SCRUM eine agile Art des Projektmanagements ist, kann man sich\n  das Projekt an √§u√üere Einfl√ºsse schnell anpassen,\nBeispiel: W√§hrend der Entwicklung von Produkt A bringt der Konkurrent sein Produkt raus, mit neuen Features, welche nun auch bei Produkt A nicht fehlen d√ºrfen.\n\n- Gute Kommunikation: SCRUM bietet eine gute Kommunikation zwischen den einzelnen Developern, sowie \n  dem Project Owner. Dies l√§sst zum einen zu, dass der Project Owner neue Ideen hinzuf√ºgen kann, sowie \n  werden Spannungen zwischen den Developern schnell offenbart und k√∂nnen gel√∂st werden.\nBeispiel: Developer A findet einen Bug der bei ihm Auftritt der Fehler liegt aber bei Developer B's Code, dies kann bereits beim n√§chsten Sprintmeeting mitgeteilt werden, sodass der Bug schnell gefixed wird.\n\n\nNachteile:\n- \"Schwer\": SCRUM ist nicht die einfachste Projektmanagement-Struktur, dies kann vor allem dann zu \n   Problemen f√ºhren wenn nicht jeder wei√ü was er zu tun hat. Eine gute Kommunikation ist hier sehr wichtig, vor \n   allem wenn man √ºber Probleme reden soll, haben viele Leute Schwierigkeiten dies mitzuteilen.\nBeispiel: Developer A hat nicht alles geschafft was er machen sollte, m√∂chte aber keinen √Ñrger und verheimlicht dies. Im n√§chsten Sprint f√§llt Developer B auf dass was fehlt und kann nicht an seinen Sachen weiterarbeiten.\n\n- Zeitaufwendig: Die Meetings kosten viel Zeit, welche daf√ºr genutzt werden k√∂nnte weitere Dinge zu implementieren. \nBeispiel: Wenn Sprint-Planning, Sprint-Review und Daily Sprintmeeting zusammen mehr als 2 Tage (1 Tag f√ºr Planning und Review + 10 min / Tag im Sprint) an Zeit kosten verliert man viel Zeit, die durch die Struktur wieder reingeholt werden muss.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 5623136,
      "meta": {},
      "text": "The basic idea of SCRUM is that we iterate through our daily meetings and perform adaptations on our product. In a SCRUM model, the essence is meeting on a daily basis, with backlogs. This means that between the sprints, the team gets together to adjust minor changes in the requirements of the product. The goal at the end is to have a shippable product for the customer. \n\nSCRUM is a commonly used way to plan the production of a product, this means that it comes with many advantages and disadvantages. We will look at two of each with examples. \n\nThe first advantage is that we are very modular throughout the lifecycle. We can easily adjust to new requirements that must be met through up until the deadline. As the first example, we will look back at the modular bridge building in the tutor group, where we had to build an extended version after we had already laid out the plan for the original idea. The ease of modularity gave us the opportunity to adjust to the extended length of the bridge. The difference towards the spiral model, is that planning is done in the beginning and cannot be changed a lot throughout the whole process. \n\nThe second advantage of SCRUM is that we should have a shippable product after every sprint. In a sense, the team is always updating a version of the product, which can always be given to the customer. This makes it easier for them to judge the process and if we are meeting their given requirements. Another difference towards the spiral model is that there aren't any benchmark models usually, the finished product is the first glance that the customer gets.\n \nNow we move onto the disadvantages. SCRUM needs a lot of substructure, there is a scrum-master, developers and a product owner. This takes time and is difficult to usually push through in a new team without a lot of chemistry between the people. There most be unison between the different people and parts of the team. In the spiral model, there is a sense of a hierarchy or group structure, but it isn't as pronounced as in SCRUM, which makes it easier for people to collaborate. \n\nSCRUM divides everything into little parts which makes them easier to work on, it dissects a large thing into smaller and more oversee-able things. This can cause a problem in large projects as this can lead to losing the goal ahead and trying to fix the small changes in the smaller parts. As each person focusses on the smaller goal, they sometimes don't add up to the big goal. This is one of the main differences to the spiral model. In this, one has a large goal and a structure towards that goal.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623203,
      "meta": {},
      "text": "Scrum is a software development lifecycle model, especially for agile software development, which is lead through an array of iterative stages. Therefore, if the requirements for a software or product are rapidly changing, scrum is the best model to manage and control that process. Another core essence of scrum is, that by using a vertical instead of a horizontal integration, each run produces a potentially shippable product increment.\nAdvantage 1:  Scrum can very well handle changes in the requirements. It's iterative nature allows scrum to add or delete requirements from the product backlog, without affecting the workflow.\nExample: The product owner of a warehouse system in development wants to add a functionality, that an employee can mark a shelf as finished, so he simply adds it to the product backlog, and eventually it will be worked off in one of the coming sprint backlogs\n\nAdvantage 2: The individual effort of each team member is visible during daily scrum meetings. That pushes productivity and prohibits unnecessary costs.\nExample: A developer promised in the last daily scrum meeting, that he would implement the finishedShelf functionality. Since he was a bit lazy, he didn't finish it. Since that wasn't the first time, the scrum master has a serious word with him, and he finishes the functionality until the next daily scrum.\n\nDisadvantage 1: If any team member leaves in the middle of a project, it can have a huge negative impact on the project. It takes a lot of time to find and incorporate a new worker. Especially in scrum, since it heavily relies on strong teamwork and having a connection to your team members.\nExample: The scrum master leaves the workplace during an important project, and the developers don't get by the new scrum master.\n\nDisadvantage 2: The code quality only becomes clear after aggressive testing, because each developer works on his own.\nExample: A working student writes bad code for 3 month, which gets only clear after aggressive testing. It costs the team much time to repair the damage.\n\n1.A: The Spiral Model can only handle changes between activities\n2.A: The Spiral Model does not feature something like a daily meeting\n1.D: Spiral model not funamentally based on teamwork, therefore no disadvantage\n2.D: Same risk",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644439,
      "meta": {},
      "text": "Scrum is a technique/framework that deals with change in managing and controlling software and product development. Scrum requires a scrum master which comunicates with the product owner who orders the work for a complex problem into a product backlog.\nThe scrum team turns a selection of the work into an product increment during a sprint. \nThe Scrum Team reviews the results and adjust for the next Sprint and the cicle repeats.\n\nAs scrum has become more and more industry standard, it is obvious that scrum offers many advantages. Namely high flexibility and agility through adaptive planning. If the customer changes a product requirement, such as the imposition of higher security measures, the development team can comunicate with the scrum master and adapt quickly. Compared to the spiral model flexibility is also an advantage of the spiral model.\nSecondly fast realization of new product features or increments. In each sprint cicle, a separate prototype of the product is created with functionalities adapted to the development status. For example if the costomer whants a weather api the developer team will create a functioning api prototype in the first sprint with limited features from the product backlog. Again compared to the spiral model Software is produced early in the software life cycle.\nBut like every framework, scrum also has a few disadvantages. For example a potential uncertainty due to a lack of responsibilities and hierarchies. For example as a developer you don‚Äôt have a boss giving you explicit instructions on what to do next. Comparing this to the spiral model, there are no clear hierarchy instructions exept of a development team which could ether be unsupervised or supervised. And lastly there is a high probability that a project will fail if individuals are not very committed or cooperative. For example if only one of the team members is doing most of the work scrum won't be as efficient. This is also very similar to the spiral model and almost any model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620577,
      "meta": {},
      "text": "Explaination:\nScrum is a technique that deals with interruptions and manages software and product development with continuously changing requirements. Scrum inproves risk management with improved communiction within the team, cooperation and delivery of product increments. \n\nDiscussion:\nPro:\n- Agile processes - With Scrum the work is performed in parallel. Every team is performing their own task. Therefore the whole project is finished very fast because every team has its specific purpose!\n- Maximizes the spread of information because teams are small and there is large exchange within the teams.\n\nCon:\n- it requires experienced personnel because tasks need to be done quickly and successfull. Everyone in the team needs to be able to execute and provide educated feedback on the results and overall process.\n- it can be difficult to scale because it needs precise coordination to work with a lot of small teams. \n\nComparrison: \nTypically the iterations in Scrum are shorter in most cases and each iteration ends with a working software or product. However, unlike the Spiral model the software which was produced is not a prototype. It is more likely a high quality code that is used for the final product. The Spiral model often releases prototypes which are of no use. For the success of Scrum it is off high importance that the teams are experienced and that the size of the teams is not to high in order for the workers to work effective. Scrum also works perfectly for smaller projects which can be an advantage. In addition the projects success is highly dependent on the risk analysis phase which can possibly influence the whole project. Also the work is not performed in parallel. \nA big advantage of the Spiral model is that it is highly scalable which makes is practical to use in big projects. There is also not a high amount of small teams which makes it easier for unexperienced personnel to work within the teams.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620865,
      "meta": {},
      "text": "Im Gro√üen und Ganzen besteht SCRUM aus drei Rollen innerhalb eines Projekts, ausgenommen andere Stakeholder. Zun√§chst der Product Owner, welche das Projekt in Auftrag gibt, sowie die Anforderungen stellt und priorisiert. Gefolgt von dem Scrum Master, welcher als Manager agiert und sich um auftretende Probleme k√ºmmert. Somit kann die dritte Rolle, das Team, sich frei auf das Projekt konzentrieren und entwickeln. \n\nEin gro√üer Vorteil des Vorgehensweise mit SCRUM ist die flexible Gestaltung der Entwicklung. So kann auf auftretende Hindernisse sehr schnell reagiert werden und mit neuen L√∂sungen geantwortet werden. Falls nun f√ºr eine Schnittstelle mit einem externen Programm eine bessere bzw. g√ºnstigere L√∂sung gefunden wird, kann in Absprache mit den Parteien schnell zu dieser gewechselt werden. \n\nDas f√ºhrt direkt zu einem der n√§chsten Vorteile von SCRUM, der geringe Administrations- und Dokumentationsaufwand. Durch die liberale Vorgehensweise fehlt zun√§chst auch ein expliziter Prozessablauf, welcher sich im Laufe des Projekts nach und nach verdeutlicht. Im obrigen Beispiel wurde so anfangs nicht explizit dokumentiert, mit welchem Programm diese Schnittstelle gel√∂st werden soll, wodurch es im Nachhinein einfacher ist, dieL√∂sung zu verwenden und zu dokumentieren.\n\nAnders als bei dem Spiral Model, wo im Vorhinein sich f√ºr die derzeitige aktuellste L√∂sung entschieden wird, wodurch sich nachtr√§gliche √Ñnderungen erschweren. Dadurch hat man anfangs schon einen gr√∂√üeren Arbeitsaufwand f√ºr die Erstellung der Dokumentation und kann dadurch auch nicht so flexibel auf √Ñnderungen reagieren.\n\n\nAndererseits sind auch die Nachteile von SCRUM nicht zu vernachl√§ssigen. Hierbei ist ganz klar die Gefahr zu nennen, das Gro√üe und Ganze aus dem Fokus zu verlieren. Die einzelnen Team-Mitglieder sind nun mit den einzelnen Subtasks besch√§ftigt, wodurch das eigentliche Ziel eines ordentlichen Produkts aus den Augen geraten k√∂nnte. Auch kann man nicht wirklich sehen, wo der Fortschritt des Projekt gerade steht, da das wie oben erw√§hnt, nicht ausf√ºhrlich dokumentiert wurde.\n\nAbgesehen von der Gefahr in einen \"Tunnelblick\" zu kommen, muss auch erw√§hnt werden, dass SCRUM nicht f√ºr jede Art von Projekt geeignet ist. Bei beispielsweise Gro√üprojekten ist das Managen vieler Entwicklungsteams schlicht viel zu aufw√§ndig. So kann SCRUM f√ºr den App-Entwickler von nebenan eine hervorragende L√∂sung sein, f√ºr gro√üe Tech-Konzerne aber auch der gr√∂√üte Albtraum. Man stelle sich vor Microsoft w√ºrde f√ºr die Office-Produkte keine ausf√ºhrliche Dokumentation und klare Prozesse formulieren, sie w√§ren mit Sicherheit nicht so erfolgreich wie sie es jetzt sind.\n\nBei dem Spiral Modell hingegen plant man zun√§chst die Anforderungen, wodurch sich schonmal ein grober Plan zum Verlauf des Projekts abzeichnet. Von Prototyp zu Prototyp wird nun immer wieder ein neuer Entwurf erstellt, wodurch das Team immer eine gewisse Art von Dokumentation zur Verf√ºgung hat.\n",
      "score": 79.2,
      "language": "GERMAN"
    },
    {
      "id": 5622129,
      "meta": {},
      "text": "Scrum is an agile model and a software_product_development strategy that organizes software developers as a team to reach a common goal by creating a potentially shippable product. Scrum starts with a product backlog which is set in the kick-off meeting(is modifiable) and will be used each time to create a sprint backlog(Tasks to be done in the sprint). The team holds daily meetings for the entire duration of a sprint, with each member sharing their daily updates and at the end of each sprint the team reviews the results(sprint review meeting)\n\n+ adaptable and flexible since the team can amend change in any part of the project anytime without affecting the project output.\n\n+ effective use of time and money: teams plan preemptively and budget their finances before they begin any project and thanks to daily meetings it usually requires less documentation and control\n\n- higher chance of project failure: if individuals aren't very committed or cooperative enough, there will be problems each time and the product can't be finished in time \n\n- too many team members can be difficult because communication is key in Scrum, and this can be a problem in large teams since more members may delay the decision-making process and therefore slows the work\n\n1) Both spiral model and scrum are flexible and can amend changes (but scrum is way more flexible). \nEach cycle in the spiral model also ends with a review by the key stakeholders involved with the development of the product and this allows for software teams to embrace change over time while maintaining a local rigidity within a cycle.\n\n2)In spiral model, the time is defined in terms of years and months and proper documentation is required whereas scrum does not rely on documentation and the project development time vary from days to weeks\n\n3)unlike scrum, the spiral model is not suitable for small projects as it is expensive and the process is much more complex\n\n4)the spiral model mainly deals with various kinds of unanticipated risks and customer interaction is less whereas scrum focuses on the delivery of an increment to the customer after each Time-box, so customer interaction is more frequent.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644683,
      "meta": {},
      "text": "Scrum aims at improving communication and coorperation between team members while delivering product increments. In a nutshell, the team begins by assembling the product backlog (a collection of all the features to be implemented), from which the team derives the sprint backlog (the features that should be implemented in the duration of a sprint, which lasts between 2-4 weeks). During the sprint the team holds daily scrum meetings to update their team members on their progress. At the end of every sprint there should be a potentially shippable product increment.\n\n+ A major advantage of Scrum is that short sprints enables the team to react to feedback from the stakeholders quicker. If an implementation of a feature proves to be ineffective in practice, the team can easily react to the feedback provided by the users and improve the implementation in the next sprint. This can be seen as an advantage compared to the spiral model, which doesn't specify the legnth of an iteration. \n\n+ Scrum allows large projects to be divided into more manageable sprints. E.g. A large project that may seem unfeasable at first, can be subdivided into less intimidating tasks in the project backlog and assembled into manageable sprints. This is comparable to the spiral model where a series of prototypes is developed. One could even argue that the spiral model is more suitable for large projects.\n\n- Scrum lacks Risk management which is supported by the spiral model. This means that the scrum model is foregoing the potential improvement in security and the avoidance of attacks and security breaches. According to scrum.org, risk anaysis is often performed from time to time from individuals outside the scrum team, which reduces the transparency and negatively impact the team's self-organization.\n\n- Scrum may lead to \"scope creep\", as the number of sprints is not predetermined. As an example, the number of deliverables may increase due to changes in the customer's needs and lead to the scope of the project constantly increasing. This can be contrasted with the spiral model where the number of iterations is implemented in 9 iterations and \"scope creep\" can therefore be avoided. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644985,
      "meta": {},
      "text": "The main difference between SCRUM and the Spiral Model is that SCRUM is a methodology for agile development. The way to completing a software project includes shorter iterations (2-4 weeks), each with a software product that works. SCRUM also means having complex and a highly qualitative code expanded into the final product.\nAn advantage for SCRUM represents a shorter iterative process than the linear iterative development of the Spiral Model. SCRUM does not include all the aspects of the lifecycle like the Spiral Model does. Therefore there is no repetitiveness and the software model using SCRUM is more efficiently developed.\n",
      "score": 45.8,
      "language": "ENGLISH"
    },
    {
      "id": 5620557,
      "meta": {},
      "text": "1/ Scrum teams work in a series of Sprints, most commonly two weeks in length. Each Sprint it proceeded by a Sprint Planning Meeting, run by the Scrum Master and attended by the Product Owner and the Development Team. Together they select high priority items from the Product Backlog and commit to deliver in a single Sprint.\nAt the end of every Sprint there there is Sprint Review, which is a potetially shippable Product that's presented to Stakeholders and the Sprint Retrospective, which is an examination of what went well, what went badly and what could be improved.\n2/ + With SCRUM large projects are divided into easily manageable sprints; that way the develppment Team will have well defined goals for each period of time\n    + in SCRUM the team gets clear visibility through scrum daily meetings; so it reduces the risk of misunderstanding through early information sharing\n    - Adopting Scrum in large teams is challenging and can do more harm that good; for example during the meetings where everyone have to give their opinion and and an insight of their progress is gonna take alot of time\n    - SCRUM is not related to the project's deadline; Although the Scrum methodology includes many smaller deadlines for everyone involved, it doesn't offer provide any garantee that the project is gonna meet its overall deadline.\n3/ SCRUM is an Agile Model, it's best used when dealing with Project that requires alot of change in the course of its development on the other hand the Spiral Model is an Iterative Model that's best used for medium to high-risk projects that only allow changes between developpment activities and not within them.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 5621783,
      "meta": {},
      "text": "SCRUM is an empirical process that is made to cope with change and interruption. Through frequent communication within the team and constant reassessment of the current state it is ideal to be used in agile software projects. The idea is to break up a large problem statement into smaller tasks and to implement those one at a time.\n\nAdvantage 1: \nFrequent communication between the team and the customer help eliminate misunderstandings and improve productivity as the team capacities are used to an optimal extent. SCRUM achieves this through regular meetings and presentations. This level of communication isn't part of the spiral model, which is an disadvantage of it\n\nAdvantage 2: \nBy breaking the problem statement up into product/sprint backlog, SCRUM is able to cope with changes very well, which makes it perfect for agile projects where change happens quite often. A change is simply added into the backlog or an existing backlog entry is changed. Another disadvantage of the spiral model in comparison to SCRUM is a certain inflexibility to that end as you stop adding new functionality at some point in order to concentrate on testing. \n\nDisadvantage 1: \nBecause SCRUM has no clearly defined end-point, there is the danger of taking very much time as you constantly keep adding changes to the backlog and therefore dramatically increasing the time it takes to finish a project. This does not happen in the spiral model as it works more linearly, so there is less danger of getting stuck in loops as in SCRUM. Also, in the Spiral Model you have a predetermined breaking point as you terminate a project if risks can't be resolved.\n\nDisadvantage 2: \nA disadvantage of SCRUM is that it cannot be introduced quickly as well as it not being able to scale nicely. As SCRUM is a very specialized and precise way of working, everybody needs to be brought on board and trained to properly use it. Therefore, SCRUM works best in small, high-skill and well-trained teams, but is difficult to be used in larger projects or new teams that are not familiar with each other. As the spiral model is more linear and straight-forward, it is way easier to introduce, and scale as there are less pitfalls one might tap into. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620767,
      "meta": {},
      "text": "Hello supervisor,\n\nSCRUM manages and controls software development with changing requirements by improved communication, cooperation and the delivery of product increments in so called 1-4 weeks long Sprints.\nIn Sprints, teams and sub-teams develop a ready-to-ship sub-product and through many iterations of Sprint-Planning-Meeting, Sprint, Sprint-Review-Meeting, the whole project comes to life by iteratively pulling backlog items from the product backlog. The roles Scrum-Master, Product-Owner and Scrum Team fulfill different managerial and/or executing roles.\n\n1. Advantage: the Sprint-Backlogs and Product-Backlogs can be adjusted dynamically throughout the project. Because of this, the project can for example better adjust to a change in requirements, even in late stages of the project.\n2. Advantage: participants get feedback quickly in Sprint-Review meetings and therefore mistakes in communication or a misunderstanding of the goal is for example being detected quickly and no big mistakes can form because of this improved communication of SCRUM.\n1. Disadvantage: many times a part of the project you need to build on is not jet built or is being built in the same sprint. Therefore for example many times functionality has to be mocked instead of using the actual one for testing. This makes the process labour-extensive.\n2. Disadvantage: a lot of communication is needed and everyone needs to know where the whole project is standing at any point. This can lead to problems for example when the team is more like a group and personal connections are weak.\n\nThe SCRUM method can adjust to changes well, and through the many iterations in this respect it is is similarly good as the Spiral Model.\nThe SCRUM method fosters good communication, in contrast to that the Spiral model will still result in linear development at the lower level and therefore communication is not so good there.\nThe disadvantage of the SCRUM model is, that prerequisites are sometimes undeveloped. In the Spiral Model, this can not happen and therefore it does not have this disadvantage.\nThe problem of how much communication is needed also, but only partly, exists in the Spiral model, because the big picture also need a lot of communication, while the linear sub-projects don't need as much.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621162,
      "meta": {},
      "text": "Scrum is a software development strategy which centers around having a shippable product increment in regular time intervals.\nA Scrum team is divided into 3 roles: the product owner who defines what the endproduct is supposed to look like, the scrum master who oversees the project and manages the team members, and the Scrum team members who are the ones who actually directly work on creating the software.\nThe core concept is having \"sprints\" which are regular time intervals in which the team members work on creating a potentially shippable product increment, at the start of each sprint there is a meeting in which what was achieved in the last sprint and the goals of the next sprint are discussed.\n\nOne advantage of Scrum is that it can adapt to changes in the requirements given by the product owner.\nFor example if you have a singleplayer game and the owner wants it to include a local coop mode halfway through development. If you'd work with the spiral model it is possible that you'd have to start from 0 again since the system wasn't designed to support coop.\nAnother advantage of Scrum is being able to ship product increments even before the product is fully complete. If you work on a video platform then you could at least ship the video player to the customer before the rest like the comment section or the overall website design is complete.\nIn the Spiral Model the customer would have to wait until the development is completed before they can see how the product looks like.\n\nA disadvantage of Scrum is that is scales poorly with size since every member has to explain what they've done in the last sprint when a meeting is held. With too many it's easy for it to be too unorganized and the meetings will take too long.\nIn the spiral model these frequent meetings don't exist and everyone's job is already predefined.\nProjects can also end up overly bloated due to the lack of a defined end date and members adding new features instead of getting the core of the system running.\nIn contrast the spiral model defines its goals at the start and doesn't deviate from them.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621227,
      "meta": {},
      "text": "SCRUM is an agile and incremental method for the work on software development projects. The idea is that the work on the product is separated into multiple sprints where on individual components of the product is worked on. These parts are determined at the beginning of the whole process in the product backlog and individually assigned to each sprint at the beginning of each sprint in the sprint backlog. The goal is to have a potential deliverable product increment after each sprint. There are several regular meetings like sprint planning, sprint review, daily scrum meeting or sprint retrospective meeting in order to maintain a high quality  of the outcomes and working processes.\n\nAdvantages:\n\n- its high agility and ability to adapt to changing requirements because it consists of the aforementioned sprints. At the beginning of each sprint the product owner could set new requirements and these changes would be applied from the next sprint on. With spiral model however the agility is rather limited because it is built on an iterative model that iterates through the different activities that have to be done but in case of changing requirements it is possible that the regarding iteration is already over and you need to change a significant part of your schedule.\nexample: a game is developed and after 2 months of work the product owner decides that a new game mode shall be added\n\n- the fact that you have a deliverable product increment after each sprint. This reduces the risk of unpredictable difficulties lengthening the project duration and makes it easier for the whole team to detect problems of the product in the application domain in an early stage. With spiral model however you do not necessarily have a shippable product during the development phase.\nexample: in the third sprint a problem with an interface provided by the customer is identified and thus can be handled\n\nDisadvantages:\n\n- the high amount of meetings and organisational overhead in case of a small project where it's not likely that a lot of changes occur. Therefore the spiral model would probably be more efficient because more time is used for development.\nexample: a small calculator shall be developed within 3 weeks so SCRUM would need too much time for organisation\n\n- the difficulty of tracking and predicting the current status of the project with SCRUM. A experienced SCRUM master is needed and good management of tasks is necessary in order to provide delivery in time. With Spiral model in the best case after all activities are finished the project should be done so it's easier to keep track of how far development currently is.\nexample: the product backlog consists of 200 tasks that have to be assigned over 20 sprints so careful assignment of tasks has to be given",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644880,
      "meta": {},
      "text": "Scrum is a technique that deals with interruptions (change) by employing an iterative, incremental approach to optimize predictability and to control risk.\nScrum engages groups of people known as Scrum Team who collectively have the skills to manage and control software and product development dealing at the same time with rapidly changing requirements. The core essence of Scrum are Scrum Team Scrum events and Scrum artifacts. \nThe Scrum Team consists one Product Owner, the key stakeholder who provides direction to the team, Developers, a team of five to nine professionals, who are jointly responsible for the result and one Scrum Master, a facilitator who focuses completely on the process . Within a Scrum Team, there are no sub-teams or hierarchies.\nThe Scrum Artifacts (or lists) are the Product Backlog, ordered list of what is needed to improve the product, the Sprint Backlog, a set of Product Backlog items selected for the Sprint  and an Increment, a potentially shippable product. \nThe Scrum events (meetings) are the Sprint planning meeting initiates the Sprint by laying out the work to be performed for the Sprint, the Daily Scrum, around 15 minutes stand up meeting to inspect progress toward the Sprint Goal and adapt the Sprint Backlog as necessary, the Sprint review during which the product (increment)  is delivered to determine future adaptations by receiving feedback and the Sprint Retrospective with the purpose to plan ways to increase quality and effectiveness of the product.\n\nAdvantages and disadvantages of Scrum and comparison the previously used Spiral model: \nScrum is more adaptive to real software development. Thus, development is done on ‚Äúthe fly‚Äù,we don't need to wait until we get a clear and  gapless Plan to start the development Phase . So in Scrum we write fewer plans and we do more in short cycles ‚ÄúSprint‚Äù. ‚Üísimplicity and high performance (EX: Most big Software companies uses scrum)\nCustomer satisfaction:  By delivering product features and functionality that offer value to the customer, you keep the customer happy and satisfied by delivering their requested features not only early in the project, but also continuously during the project. (EX: such as delivering a beta game mode) \nRequires Transformation at Organization Level: A company needs to have changed at an organizational level if they want to get success from the scrum. Thus, it means the business owner and the developers have to collaborate in the sprint. Hence an organization needs to get rid of their barriers which can be difficult to eliminate. (EX: Transforming a company which works years on a water flow methodology to scrum methodology is not straightforward) \nHard to Implement Quality :The team needs to go through an aggressive testing process to implement the quality successfully. The scrum process requires significant skills and judgment. The team can only learn the skills on the job, and it involves coaching, which can take time. (EX: As a junior Software engineer the scrum methodology can be overwhelming) \nComparison : \nIn Scrum instead of working on a project with a distant deadline we constantly deliver functioning Products. \nIn Scrum instead of waiting for a final evaluation  we receive continuous feedback . \n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620797,
      "meta": {},
      "text": "Scrum is an agile technique that is able to deal with frequent change. \nBy using scrum the project is divided into multiple time slots called sprints (max. 1 month). In every of those sprints a potentially shippable product increment is created. \n\nAdvantages/Disadvantages: Scrum - Spiral model\n\nOne of the big advantages of scrum that it is able to deal with frequent change whereas the spiral model is only able to deal with change happening sometimes and not within an activity. In software projects change is very common and a technique that is able to deal with frequent change can be very helpful. One example would be that the customer realizes within the project that a certain feature should be implemented in a different way. The person working on the user story could just stop working on it and put it back into the product backlog in a different way or just try a different approach if changes are not too big.\n\nAs at the end of every sprint there is a potentially shippable product increment created there is something for the customer and the team to discuss on. And potential changes could be implemented in the next sprint. With the spiral model there is also a prototype and the possibility to change things for the next sprint. For example after sprint 2 potentially shippable product increment is created and by seeing the prototype team and customer can discuss the prototype.\n\nBut scrum also has some disadvantages. In scrum there isn't any definite end-date. This can lead to too much time invested in the project and not getting to an end.\nThis problem can also occur with the spiral model as it doesn't have a definite end-time either.\nFor example after a certain sprint the product could be finished but the team still concentrates on very minor improvements of the product and takes a couple more sprints to finish the product\n\nAnother disadvantage is that scrum requires the use of smaller teams. The use of big teams would require too much management and would destroy the idea of close communication. The spiral model on the other hand can deal with bigger teams as it follows a strict protocol and documentation.\nDiscussion can be very hard in bigger teams that's why scrum needs smaller teams. A bigger project would need to be divided into multiple smaller scrum teams to work.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621324,
      "meta": {},
      "text": "SCRUM ist eine Methode des Zusammenarbeitens, die in der Lage ist mit Ver√§nderung umzugehen. Sowohl bei der Software, als auch bei der Produktentwicklung k√∂nnen entsprechende Risiken mit verbesserter Kommunikation, Kooperation und durch die kontinuierliche Ablieferung und Verbesserung von potentiell auslieferbaren Zwischenprodukten reduziert werden. \n\nVorteile:\nEs ist einfach, sich an √Ñnderungen anzupassen und man ist sehr flexibel, dadurch, dass immer nur Sprints f√ºr 2-4 Wochen geplant werden. Sollte dem Klient bei der Entwicklung von dessen App in Sprint 12 auffallen, dass er etwa noch eine zus√§tzliche Bezahlfunktion haben m√∂chte, kann dies einfach in das Product-Backlog aufgenommen und in Sprint 13 umgesetzt werden. Da das Spiral Model einen Iterativen Ansatz nutzt, kann auch damit flexibel mit sich √§ndernden Anforderungen umgegangen werden.\n\nAu√üerdem sorgt SCRUM f√ºr vergleichsweise niedrige Kosten durch kleine, selbstst√§ndige und effiziente Teams, die weniger Dokumentation ben√∂tigen. Bei der Entwicklung einer App f√ºr ein kleines Start up w√ºrde ein typisches Team aus 5 Personen bestehen, die weitgehend selbstst√§ndig untereinander kommunizieren und regelm√§√üig \"Product increments\" abliefern.\nDas Spiral Model ist teurer, da in jeder Iteration verschiedene Phasen durchgegangen werden, was aufwendig und komplex ist und daher eher f√ºr gro√üe Teams geeignet ist.\n\nNachteile:\nEs ist schwierig ist, die Methode f√ºr gr√∂√üere Projekte zu skalieren, da ja immer in kleinen, selbstst√§ndigen Teams gearbeitet wird und ab einer gewissen Gr√∂√üe pr√§zise Koordination n√∂tig wird. Wenn ein Unternehmen eine eigene ERP Software entwickelt und daf√ºr ein Team von 50 Mann besch√§ftigt, ist es schwer, daf√ºr SCRUM zu verwenden, da der gleiche Grad an Kommunikation und Selbstorganisation nicht m√∂glich ist. Das Spiral Model ist dagegen sehr gut geeignet, gro√üe und komplexe Projekte umzusetzen.\n\nAu√üerdem ist SCRUM nicht auf eine Projekt-Deadline ausgelegt. Es gibt zwar immer kleine Deadlines in Form von Sprints (2-4 Wochen), aber wie viele Sprints ben√∂tigt werden, ist anfangs unklar und f√ºhrt zu Planungsunsicherheit. Bei der Entwicklung einer App wird zwar in jedem Sprint etwas an der App verbessert, aber es gibt anfangs keinen klaren Plan, wann die App fertig ist. Das gleiche Problem hat auch das Spiral Model, da auch dort die Anzahl der Iterationen anfangs unklar ist. \n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621522,
      "meta": {},
      "text": "SCRUM \n\nDefinition: A agile process that due to its improved communication and cooperation deals with changes. Scrum consists of Sprints done daily, and where at the next day a daily scrum meeting is held to discuss what has been done or what needs to be done still.\n\nAdvantages: \n\n- Scrum can easily adapt to the clients request, because of its flexibility. If a customer requests a change to a certain part of the system, the development team can easily change it to their content.\n- Scrum is a good way to access feedback for your part in the project, due to the daily meetings that the team has. SO that if a developer is having issues with a part of a certain system, they can get feedback from other developers or from the Scrum Master. Alternatively they can also receive feedback on something well made / done.\n\nDisadvantages:\n\n- Scrum is only designed for small teams / groups.  A Scrum team with over 20 people can be challenging to control and or keep tabs on what each member has done in the daily scrum meetings.\n-  If a member of the team leaves halfway through the project it will impact the team negatively, as each member of the team is responsible for their on part. So if a team member leaves, the other members have to continue his work, giving them even more work, whereas any other working methods, multiple people would be working on the same stuff.\n\nAdvantages / Disadvantages VS Spiral Model\n\nDisadvantages:\nscrum only works for small teams, whereas Spiral Model can be used in big teams, due to the absence of daily scrum meetings. With Spiral you only meet to discuss at the next phase of the project.\nWhich leads us to the second disadvantage, if a member leaves the team, as there are many developers it will not negatively impact the progress done.\n\nAdvantages:\n\nScrum has flexibility, whereas the spiral model has a strict pattern to follow, meaning if a customer wants to request a change it might be difficult to add the change.\nAnd due to the daily scrum meetings, its easier to receive feedback compared to the spiral model, where it takes longer to receive feedback. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621926,
      "meta": {},
      "text": "Core essence\n        \n Scrum is one example of agile software development lifecycle model and technique, that allows a parallel  and adaptive software development. The parallel workflows of Scrum is reached by dividing the software development in smaller parts that can be developed independently  and the adaptive nature is reached by iteratively implementing a short sprints backlog  in a relative short period of time (2 - 4 weeks), shipped the implementation and continuously updated the sprint and product backlog based on the customer's feedback to the prior implementation.\n               \n\nAdvantages:\n- Scrum allows the software development to easily adapt to changes.\n Common example and explanation : After an implementation of a sprint, the product is shipped and then the customer for example wants  to take out the functionality of a feature. Then this will be taken as feedback and then added  to the product backlog, which can be used to determine the next sprint backlog for the next sprint implementation and next shippable product. This is an advantage because in many cases the wishes of the customer can change time to time, therefore the product should be also to adapt to this changes. And this can be reached for example with scrum.\n\n- Scrum allows a quick and efficient delivery of a project. \nCommon example and explanation : In Scrum, a list of items, that is short, will be taken out of the product backlog to form a sprint backlog. Because this backlog is shorter than the product backlog, the development team can focus on a smaller range of work, which is very helpful to maximize the quality of each product after each sprint implementation, and furthermore the implementation can be done quicker than the implementation of the whole product backlog in one go. This is an advantage because focusing on smaller workloads offer often a quicker, easier and higher quality of the software production.\n\nDisadvantages:\n- The chances of project failure is high if the individuals are not cooperative and committed.\nCommon example and explanation : In scrum development team, for example the team members, that developed the backend of a software, give not so much information about its implementation to the tester. Therefore the tester will have difficulties to test the backend part of a software. This can then lead to failure by reaching the project's goals.\n\n- The scrum daily meeting can lead in some cases to unproductivity\nCommon example and explanation : The development team holds the scrum daily meeting at most 15 minute. Assume that the scrum master is unexperienced to control and limit the daily meeting's time. Furthermore assume that there's a development team member, which always want to dominate each conversation and meeting. Then it's possible, that the the scrum daily meeting takes more than 15 minute due to lack of the control of the scrum master and this team member, which can reduce the time to work on the implementation.\n\nComparison with advantages:\n- Scrum adapts easily to change because it's frequent interaction with the customer. This isn't always the case by the spiral model. The spiral model reaches an efficient production of a software mainly  by handling the possible risks that can occur and not by interacting with the customer. Therefore the spiral model adapts to the changes usually not as easy as scrum  due to less interaction with the customer\n\n-  Scrum allows a quick and efficient delivery of a project by a parallel development of the system's components. On the other hand the spiral model isn't always quick in delivering the product to the market. The reason is that the spiral model rely mainly on the possible occurring risk identification and handling and sometimes this risk identification and handling could take a lot of resources ( one of them is time ), if the  individuals, that should identify and handle these risks, aren't expert in risk analysis.\n\nComparison with disadvantages :\n- Both scrum and spiral model involves team to develop a software. So both of these models can have this disadvantage, but maybe in different form. For example, in the spiral model, the experts that analyze the possible risks communicate poorly with the other team members and therefore the project could also fail due to the lack of communication and high dependency to the analysis of the possible occurring risks.\n\n-  The Spiral model doesn't necessarily have a daily meeting and therefore from the perspective of unnecessary daily meetings, the spiral model could be better in productivity than the scrum model, as long as the communication between the developers is sufficient. \n\n\n\n\n ",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 5622326,
      "meta": {},
      "text": "The core of scrum:\n1* the client (/owner of the product) creates a product backlog (a goal list of what the product should be like)\n2* the team then dissolves the overall task into smaller branching tasks, which are more managable & decides the duration of each sprint (a period of \"working time\" after which the result of the sprint gets evaluted)\n3* the team creates a sprint backlog and plans the implementation for this sprint\n4* the team begins working on the sprint, with scrum meetings, in which the progress of each team-member is being discussed \n5* the client / scrum master reviews the result of the sprint at the end of it, and then the steps 3-5 repeat, until a fully functional product is made\n\nThe pros and cons of scrum:\npros:\n\t* Large projects are divided into easily managable sprints, each of which have their own preplanning, \n           which makes working on a large project less confusing\n\t* With scrum the team is agile, and can adopt criticism from the client faster \ncons:\n\t* Adopting scrum with a large team is difficult, as each team-member has to present their progress as well \n          as cooperate with everyone else on their respective team\n\t* With no concrete deadline the client can keep asking for further functionality, which will in turn make the \n           project harder to work with, as the second step has to be redone with every new request\nCompared to the spiral model scrum is much more agile, as the team isn't confined to a single phase while they work, and they can work around new changes much easier.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5622676,
      "meta": {},
      "text": "SCRUM is an agile software development framework for developing products within a rapidly changing environment. It is an iterative process, where in an incremental approach of many so called sprints the software is slowly put together. After each sprint a possible working product could be shipped. \n\nOne main advantage of SCRUM is that it optimizes predictability and controls the risk of the project in an efficient way. This is because there are constant meetings during a sprint where faults could be detected and at latest after each sprint there can be no more faults as a working increment should be delivered. Also after each Sprint the requirements can be changed without a problem. In the Spiral model the execution also gets divided into parts, but the whole project is planned beforehand therefore faults can also be detected earlier, but the reaction to change in the requirements is slower.\nAnother advantage of SCRUM is that It encourages creative approaches. With Scrum teams working so closely together and analyzing ideas from all its members, creativity is encouraged and new ideas are likely to appear. In my personal past I can confirm that the best ideas involved from group discussions. This might not be the case with the spiral model as there are not so many frequent meetings.\n\nA big disadvantage of SCRUM is that it is hard to work with teams whose members are geographically dispersed or don't work at the same time. SCRUM is based on a lot of communication, which requires local proximity. Therefore if there are a lot of people working remotely or at different times this will be hard to set up. In the spiral model this might be easier to handle as there does not have to be such extensive communication.\nAlso implementing the SCRUM framework into the company requires extensive training of all employees. Although using the Scrum framework can be very beneficial, it requires a well-trained team to properly implement it. As the Spiral model is already implemented there is no further training required and it is also easier to implement new employees into the process.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622836,
      "meta": {},
      "text": "Scrum ist eine Art und Weise, wie ein Team bei der Entwicklung von Software vorgeht. Das Ziel von Scrum ist es, m√∂glichts flexibel zu sein, indem man besonders auf Kommunikation innerhalb des Teams achtet, in dem man vor einer Arbeitsphase mit dem Team sich die Ziele erarbeitet, w√§hrend dieser t√§glich seinen Fortschritt in Daily Scrum Meetings bespricht und auch nach einer Arbeitsphase √ºber das geschaffte redet. Zwischen den Arbeitsphasen k√∂nnen neue Ziele f√ºr das Projekt in miteinbezogen werden um auf √Ñnderungen zu reagieren.\n\nVorteile sind nat√ºrlich die intensive Kommunikation, da man so Missverst√§ndnisse aktiv vermeiden kann, da man st√§ndig √ºber seine Arbeit spricht und so auch andere Teammitglieder diese nachvollziehen k√∂nnen.\nWenn man w√§hrend eines Teamprojekts mit einer REST Serverarchitektur arbeitet, kann man durch die Kommunikation die Arbeit aufteilen, sodass beispielsweise eine Person die Endpoints implementiert. Durch die Meetings kann diese Person die Struktur des Projekts nachvollziehen und die Endpoints entsprechend ohne Probleme implementieren. Das iterative Sprial Model hingegen ist nicht so kommunikationsintensiv.\n\nEin weiterer Vorteil ist das man schnell auf ge√§nderte Umst√§nde reagieren kann. Sollte man beispielsweise beschlie√üen, dass man das Layout einer App ab√§ndern m√∂chte, das zum Beispiel eines Spiels die Farbe der Autos ge√§ndert werden soll, kann dies zeitnah umgesetzt werden. Beim Spiral Model werden √Ñnderungen nicht so oft umgesetzt, wenn sie nach einer Iteration erst erfolgen.\n \nNachteile sind, dass man wenn man viel √§ndern muss und dies auch umsetzt eventuell nicht so schnell vorankommt wie man wollte. Baut man nach jedem Sprint zu viele √Ñnderungen rein, macht man kaum Fortschritt. Spiral Model hingegen geht schneller voran.\n\nWeiterer Nachteil ist die etwas lose Hierarchie, sodass jedes Mitglied Verantwortung daf√ºr tr√§gt seine eigenen Ziele umzusetzen. Besonders bei einem erfahrenen Team kann dies aber auch ein Vorteil sein. Die Hierarchi ist beim Spriral Model nicht definiert.\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5623159,
      "meta": {},
      "text": "The main idea of SCRUM is to deal with problems sequentially instead of iterative. At the beginning of each Sprint you define a Backlog wich contains the goals you want to achieve until the end of the Sprint. Daily meetings and review meetings of the whole Sprint ensure that the Development stays agile and is easily able to deal with Change.\n\nIf the product owner is presented the potentially shippable product increment and he/she decides to change the requirements in any way, a part of the Development team can include it in their sprint Backlog and change it until the next Sprint ends. SCRUM is able to adapt to change in a very good way. Changing requirements in the spiral model could produce delay because of it dealing with problems iterative. \n\nThrough already mentioned daily meetings and review meetings of the whole Sprint SCRUM stays agile. If things are not going as planned you could set back the development in a very early stage. The spiral models deals with this by presenting different alternatives to each risk. This is also an advantage of the spiral model.\n\n\nA disadvantage of SCRUM would be, that you need a lot of time for meetings and certain teams could just outperform other teams in productivity. This is not so much a problem for the spiral model. Work is not split between many different teams in the spiral model.\n\n\nAnother disadvantage would be that the Sprint Backlogs can be very hard to scale. In the beginning it is difficult to say how much time a certain step could require. This is easier in the spiral model. You just have to identify the highest risk and try to resolve it.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644318,
      "meta": {},
      "text": "SCRUM is - just like the spiral model - an iterative model. It is used as a technique to deal with frequent change.\nIn each iteration, which are called sprints, a sprint backlog is defined, which contains the most relevant information & tasks for the current sprint. \n\nDuring the sprint, daily meetings are held which keep everyone up to date. After each sprint, a potentially shippable product is finished. The process is then repeated.\n\nOne major advantage of scrum is its adaptability to change. Daily meetings enable everyone to be up to date on current developments. For example, if a new library solving an unsolved problem is published during a sprint it can easily be included.\n\nThe spiral model is less flexible as for the development of each prototype, linear models are used. Each iterations has a specific goal, which leads to dependencies.\n\nAnother advantage is that scrum is agile and tasks are performed in parallel. For example, the development of software becomes more efficient, as software engineers don't have to wait for one part of the software to be finished due to the parallel structure.\n\nThe spiral model doesn't perform tasks in parallel, as each iteration has a specific goal. This also leads to dependencies between each iteration. This eventually slows down the process.\n\nA disadvantage of scrum is that is relies on the cooperation and motivations of the employees as no strict plan & rule set is defined for each sprint.For example, without having a strict set of rules to rely on, people might tend to procrastinate important sprint items to the next sprint.\n\nThe spiral model has clear and strict rules which the team can stick to. This might help some people to stick to their work goals.\n\nAnother disadvantage of scrum is that people already being used to another model - for example the spiral model -  might have a hard time to adapt to the new methodology. This might lead to frustration.\n\nThe spiral model - just like scrum - might have the same problem when being introduced. However, as scrum is a rather new paradigm, the spiral model is more common and easier to adapt to. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644884,
      "meta": {},
      "text": "SCRUM is a software development technique that deals with changing requirements and improves risk management by delivering a product in increments. \n\nAdvantages\n-Processes run in paralell, so no dependencies on others because at the end of each sprint you have a shippable product. \n-flexible to adjust to changing requirements. \n\nDisadvantages\n-Hard to implement with large teams because requires daily calls and alignment. \n-Posibility of project extension due to lack of a fixed deadline, the focus is on a sprint per sprint. \n\nIn the spiral model the whole project is divided into phases and each part is focused on risk mititgation. \n\n",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 5619977,
      "meta": {},
      "text": "Scrum is a framework that brings a team together (Product owner, Scrum master, Scrum team members) in order to manage a certain project or sustain a product that is going to be delivered to the client. It is indeed a series of meetings, discussions and sharing of tasks that enables a team to continuously iterate and improve in the direction of its goals. In fact, through this framework, the team will have the possibility to divide a big project into smaller pieces through what is called sprints and would have to accomplish certain tasks in a predefined amount of time. \nOne of the reasons that makes Scrum one of the most popular frameworks is its ability to help the group to instantly adapt to any change in the project, wether it is a requirement change, a design change or even a functional change. In fact, the team members are regularly kept uptodate when it comes to changes thanks to the sprints. For instance, if the product owner of bumpers decides that the game should additionally allow the user to chat with the other players, the team would be informed within days of the new requirement and will be able to act fast. When it comes to Spiral model, the risks/problems take a longer time to be detected since the team has to complete 3 activities before reaching the activity identifying risks. Another advantage to Scrum is that it reduces the cost of both time and money of the project, since it's all about continuously monitoring the project tasks and sharing feedback on the work. For instance, following on the bumpers' example that I gave earlier, announcing the change at an earlier stage will cost less energy and especially less money to implement it. The Spiral Model is on the contrary very expensive because of the risk analysis.\nOn the other hand, team members might sometimes find it difficult and challenging to keep up with the scrum methodology in the corresponding amount of time. This is not really a problem with the Spiral Modell since it doesn't impose a small timeframe. Also Scrum works best with smaller teams whose members get along. For example, if the Scrum master of our \"Bumpers\" project has communication issues, he won't be able to correctly deliver the requirements of the owner to the team which will lead to a failure. When it comes to communication in Spiral modell, the whole team is divided in 4 groups, and each group has to accomplish a certain activity. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622018,
      "meta": {},
      "text": "Scrum is all about adaptiveness, rather then following a linear model, scrum deals with change during the development, to do so there are 3 activities that get iterated again and again till the product is finished. It begins with the splitting the whole problem into smaller goals and order them in the Product backlog by priority and then each subteam works on a few of these subproblems in a fixed duration (sprint). after the duration tasks that got finished increment the product and get removed from the backlog , tasks that are not done remain as well as new tasks can be added, and the activities repeat.\n\n- work in parallel: scrum is vertical integration which means tasks in different areas can be done simultaneously\n- better team and product quality due to reviewing the sprint and maybe changes afterwards\n\n- not that scalable: especially in huge projects one product owner to order and overview the backlog/project may be difficult and work in huge scrum groups can get messy quickly e.g. too much parallel, possible dependencies\n- less predictable: in scrum the end deadline is not omnipresent and removed/new features can overthrow the plans\n\n\nwork in parallel can be done in spiral model but not as good as in scrum cause you have to build a protoype for every risk. And until they are built you cant resolve the risks which is potationally done by another team. So for the prototype phase this team has nothing to do and vice versa.\nthe quality increases in spiral too, due to the risk analyses and evaluation , but if the risk doesnt get resolved the project terminates which means not a good endproduct quality whereas in scrum you would just add it back to the backlog and work on it in the next sprint.\nSpiral is more linear so more easily scalable and more intuitive and needs less collusion. Especially evaluating alternatives can be done easily in parallel\nit is more predictable too, because if an interation fails it wont be added to the backlog again and again but terminates. therefore its much harder to exceed the final deadline. although a early termination and a startover can be much worse than exceeding.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622219,
      "meta": {},
      "text": "Scrum is a technique that allows you to react to change quickly. Through constant control, communication and reevaluation you can identify problems and changing requirements immediately and then adjust to them. Work is done during sprints and then evaluated in a for example daily srum meeting. Because work is performed in parallel, it is also referred to as an agile strategy.\nBenefits from scrum are for example the fast reaction to changed requirements. Suppose you are working on a game character that has the ability to go through walls under certain conditions. The customer now changes his mind and wants him to jump over these walls instead (animation). With srum this change can be implemented immediately due to high communication. In the spiral model, verification only takes place at the end of a development step. Therefore, it is less reactive to change. Also, scrum reduces risk of unwanted behavior. Since you constantly control what is developed, you can intervene quickly if something was interpreted wrong. Coming back to our example, it would be possible that one condition should be: Only do it when not full health. But the not was over read, and therefore it is being implemented the other way round. The identification of this problem may take longer in the spiral model, since testing is only done after the implementation is finished.\nScrum sadly also has downsides. First, it is very time-consuming since there are meetings every day to review the process. Suppose you have a team of 10, and you are meeting for half an hour every day. This will effectively reduce your progress by 25h in total per week. The spiral model will only evaluate tasks in the beginning and in the end, so it will take less time in total. Furthermore, scrum is very hard to scale. Monitoring work in a team of 5 may be fairly easy, but in a team of 50 it may also take way too long to go through each task every day. The spiral model is better in this context since, as mentioned above, work is not constantly reviewed during the process.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622708,
      "meta": {},
      "text": "Scrum provides a structure for agile software development, where you go through several sprints, that take about 2-4 weeks and after every sprint you have a potentially shippable product increment. Additionally in those sprints there are Daily Scrum meetings.\nOne advantage of Scrum is that it is agile. For every sprint you define a sprint backlog, so if something in the requirements changes, you can plan it for the next sprint. So for example, if at the end of a sprint, one team didn't manage to finish their tasks, the scrum master identifies the deviation from the plan and resolves it for the next sprint. \nAnother advantage is that scrum encourages communication between the team members, but also with the product owner. This is especially achieved by the daily scrum meetings. So if for example somebody has a problem, this person would only have to wait until the next morning and then he could discuss the problem with the team. So the problem can get fixed much quicker.\nA disadvantage is, that you don't have an overview about when the project will be finished, because you only plan for the next sprint. So for example, if after one sprint a lot of tasks weren't completed, those tasks would go back in the product backlog and the new sprint would be planned, but you can't say how many sprints it's still going to take, because in the next sprint the same thing could happen and then the project could go on for a while.\nAnother disadvantage is also the high communication. Because even though communication is good, it is combined with a lot of extra work. A team may not be able to really have a meeting every day. For example, in our Eist Team project, we only met once a week, because it is too much effort to do it every day.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644437,
      "meta": {},
      "text": "In Scrum we divide a project into small tasks (product backlog). In each sprint we try to accomplish some of these tasks and build a potentially shippable prototype, while holding daily Scrum meeting to stay updated about the process. At the end of each sprint, the development team presents this potentially shippable product to the product owner, who will update (based on changed requirements or not yet finished tasks) the product backlog, out of which the development team will pick tasks for the next Sprint. \n\nScrum allows change within an activity, while the Spiral model can only deal with changes between activities. We always collect feedback from customers who e.g.want to have a different GUI. Thus, the product backlog will be changed and the new items realized in the next sprint. \nScrum divides large projects into small easily manageable tasks, which can then be realized during sprints with same length. It becomes eaiser to keep track of the process and what to do next. E.g. when developing reservation system for restaurant it makes sense to come up with small requirements from which you can identify tasks that must be completed or adapted during sprints. In the spiral model our ‚Äúsprints‚Äù don‚Äôt have the same durations and we don‚Äôt come up with small tasks like in product backlog, but rather identify and resolve risks. \nIt may be difficult and require huge transformation within a company to implement SCRUM. You need find SCRUM masters and a development tean, that know the method and are motivated,  E.g A production company that has mainly used the Waterfall Model before, it may be difficult for the employees to adapt to such an agile method. But when changing form Waterfall to the spiral model, employees may have it easier to adapt, as sprial model has some linear aspects, changes don‚Äôt appear that frequently.\nFor SCRUM we need teams consisting of 2 to 4 people, but the method doesn¬¥t work that well for larger teams (size > 10). E.g for a huge software company with many different developers it may be difficult to draft small teams. While in the Spiral there isn¬¥t such a limitation of team size. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5645061,
      "meta": {},
      "text": "Any entrepreneur sooner or later faced the problem of organizing a project. \n There are a large number of different methods in the world for performing such a difficult task from an organizational point of view. One of the newest and most effective of them is the Scrum method. A distinctive feature is the division of the process into separate tasks on priority basis and the performance of their team in a short period of time(sprint), daily analysis of process and results to team and customer, and then use the result to perform the following tasks to obtain the final product, resource depletion or before the deadline of the end of the project\n\nThe advantages of this method are the speed of project launch, even with a minimal budget, as well as the ability to use the product obtained after the end of each stage(sprint). \n\nAnd also daily monitoring of the progress of work, and more flexible control over the project budget. The ability to make adjustments to the terms of reference in the course of project implementation, which is an undoubted advantage for the customer.\nThe disadvantages of this method are the difficulties faced by the scrum master in organizing, planning and structuring the project. \n\nThis also includes difficulties in concluding contracts, since the Scrum method, in principle, does not imply a fixed budget and a fixed technical task. Narrow specialization of methods. For example, if you use Scrum when developing sites, the design and content stages will already go beyond the methodology and require a completely different approach.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620616,
      "meta": {},
      "text": "The core essence of Scrum is to keep track of a software projects state and managing product and software requirements using empirical process control. It is particularly suited for projects whose requirements often change. Scrum's main component are the recurring sprints (time periods, in which certain specified requirements of a project are implemented) which include daily meetings and dedicated meetings for giving feedback and thus improving the productivity of the development process.\n\nAdvantages: Firstly, the improvement of risk management of a project, as the cooperation and communication of the development team is boosted by organizing daily meetings and having sprint backlogs. \n(example: good project plan with clear goals at all time)\n\nIn the spiral model the risk management also plays a big role as it is a part of each iteration of the model, though it is not as flexible.\n\nSecond advantage: Scrums flexibility (agility) regarding the change of requirements. As there is always a dedicated sprint meeting at the beginning of each sprint, the requirements of the sprint backlog (as well as the product backlog) can be adjusted easily, while the whole team is present.\n(example: Client has spontaneous request for new feature (easily included in next sprint backlog)\n\nSpiral model: Because of the fact that the spiral model is an iterative model, it does not allow certain changes (in activities) to the requirements.\n\nDisadvantages: Firstly, the management of all the meetings. Especially in big teams, it is difficult to find times, at which all team members are free.\n(example: daily scrum meetings are not possible if members are eg. sick etc.)\n\nThe spiral model does not require that many meetings, thus it can be better adopted by very large teams. It only requires some meetings for taking care of the activities during an iteration. \n\nSecond Disadvantage: Potential of scope / feature creep in Scrum. Example: As requirements and their deadlines can be changed easily, this might lead to the dev team overestimating itself and missing the deadlines, thus prolonging the project. \n\nAs the objectives + dead lines in the spiral model are fixated, this is not possible here.",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5621100,
      "meta": {},
      "text": "EW",
      "score": 0,
      "language": null
    },
    {
      "id": 5621428,
      "meta": {},
      "text": "Scrum is a lightweight framework that helps people, teams and organizations generate value through adaptive solutions for complex problems. It is mainly resumed in 4 steps, first the product owner orders the work of a complex problem into a product backlog, then the scrum team select parts of the work and turns them into an Increment of value during a Sprint. Afterwards the Scrum team and its stakeholders run a Sprint Review and a Sprint retrospective in which they inspect the results and adjust for the next Sprint, and finally step 4 this process is repeated until the final product suits the the product owner.\n\n\nOne good aspect of SCRUM is the existence of Daily Scrums. A daily scrum is a as the name says a daily meeting in which each team member updates the others about the whereabouts of his progress. This makes the work more synchronised and gives room to testing and giving feedback at an early stage.\nOne of the main advantages of SCRUM is the fact that large projects are divided into¬†easily manageable sprints. The team knows before the beginning of every Sprint what is the goal of that Sprint, which helps them focus on one thing at a time and dismantle a seemingly complex problem into easier subproblems that could be dealt with separately.\n\nOn the other hand SCRUM isn‚Äôt free of downsides, as the framework can be successful only with experienced team members, in fact this methodology involves extended periods of intense work in which every individual needs to quickly and successfully perform their own task.\nAlso in order for a project to be successful, all individuals must be committed and cooperative or else the chances of a project failure are quite high. In fact if any team member leaves in the middle of the project, it could have a huge negative impact.\n\nTo conclude the Scrum models efficiency varies from case-by-case basis as it depends on the daily scrum meetings compared to the spiral model, where due to high risk analysis, its efficiency is low for large and complex software and high for middleware software. The Scrum model is then an adaptative simplified approach compared to the high amount of risk analysis taken with the spiral model.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5621866,
      "meta": {},
      "text": "Scrum is a framework that improves project management by better teamwork, more accountability and better iterative progresses. There is improved communication and cooperation as well as a delivery of product increments. It features a set of meetings and roles that work together to help manage the work of teams.\n\nAdvantages of Scrum are that due to the many reviews and meetings it is very agile. Adapting to feedback from the customers is made very easy. Example for this is customers joining scrum meetings and giving feedback.\nAnother point is that due to the split-up into more smaller teams, these teams have way better communication and are more efficient than just one big group. Also they are easier to manage. Example for this is every big tasks divided into smaller parts for smaller teams.\nIn comparison to the spiral model, adopting feedback is also made easy for the customer as they can be already adapted at very early stages of the project. Also, the management of the spiral model isn't that easy as managing the scrum model. Its more expensive and time consuming, which makes it not suitable for smaller projects.\n\nDisadvantages of Scrum are that it can be difficult to scale, for very large projects and company's it may not be that suitable. \nAnother disadvantage is that the daily meetings can be very time consuming and sometimes even frustrating for team members. \nFor example, there are software projects with thousands of employees, forming groups with everyone and then managing the meetings is rather hard. And if all these groups have to meet daily there is a lot of time used for the meetings. \nThe Spiral model in comparison is better suited for very large projects and more employees. Also, the daily meetings aren't a must in the Spiral Model. \n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622160,
      "meta": {},
      "text": "SCRUM is an agile software development technique which deals with changing requirements. In order to handle change it uses many development iterations named sprints. Each of these sprints starts with development goals in the sprint backlog and ends with a potentially shippable product increment. One advantage of this method is, that it improves communication, cooperation and the delivery of product increments and consequently improves risk management. Another advantage is, that it enables the management and controlling of software and product development with constantly changing requirements, as part of the agility. An disadvantage is, that because of this agility, the production process is less definite for example in the end-date. Another disadvantage is, that implementing SCRUM in large teams is challanging, because of the big planning and coordination overhead. In this case using SCRUM for smaller projects would be a good alternative for the Spiral Model, because this model is mainly used for bigger projects because of it's high costs. Both methods are also difficult in time management, which is caused by the flexibility of both methods. This also means, that they have the agile advantage in common. And comparing SCRUM with the Spiral Model in Risk Management, the Spiral Model also has improved Risk Management because of it's risk analysis and risk handling at every phase.",
      "score": 70.8,
      "language": "ENGLISH"
    },
    {
      "id": 5623163,
      "meta": {},
      "text": "SCRUM is basically the model in which the teams work on small tasks (called sprints) for short period of time(2-4 weeks) and discuss the progress. It is best for quick adaptions especially during speedy turnarounds during development. All of this is supervised by a Scrum Master, who records the progress. \nThe advantages are:\n1) ecourages more creative solution by involving the whole team which also leads quickers, and better quality work. \n2) It is low cost and the customer is happy because of the continous adpatations and adjustments. \n\nThe disadvantages: \n1) It might be difficult to scale and the employees might need some knowledge before the proper implementation of  this. \n2) Since there are only personnel deadlines and not project deadlines, it might not be accountable for it. \n\nCompared to Spiral Model, this an agile method which makes the implementaion better and more transparent in a small team, or startups.  Scrum makes sure that the changes can be implemented quickly. On the other hand the risk management makes Scrum a vulnerable.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5623190,
      "meta": {},
      "text": "Scrum is a agile management process used for software development, that divides the development time into iterations called sprints. In these short time frames (2-4 weeks ), small teams develop a fully functional product, to get feedback after every iteration. Daily meetings a common to plan and implement the required features.\n\nPro:\nIn general, it results in higher quality work, since all team members take full responsibility for their work and are accountable for each other. As you are meeting in small teams each individual has a high impact on the end result of the sprint, so you naturally feel more responsible in working together with the team, to get a good result. The spiral model uses bigger teams, which splits this responsibility among a lot of people, so you don't feel as responsible for slow progress.\n\nScrum allows for requirement changes by the client, as you regularly meet up to discuss changes and you only plan a few features at a time. If a scrum team is working on a chat system and the customer adds the requirement of a voice call feature, the team can plan the changes they have to make in the next sprint meeting. In the spiral model interations for change can take a lot longer, so potential changes can destroy entire already planned out systems.\n\n\n\nContra:\nThe Scrum approach can be challenging to use for large projects, as it requires extensive training and close coordination. e.g. It is easy to lose sight of the real goals of the project while developing smaller features, especially if the project is massive. The spiral model makes it easier to work in large teams as the real goals are easier to view in the big picture.\n\nScrum requires a lot of communication between team members to work. Daily efficient meetings require perfect team chemistry which is often not the case and can lead to wasted time. e.g. Often there are no new things to discuss and this can lead to a repetition of everything that was said the day before. The spiral model doesn't require communication at such a high level, which can save time.\n\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644245,
      "meta": {},
      "text": "SCRUM is agile way of project management, where all involved people work together and countinuesly modify, develp and enhance old and new parts of a project. The key positions are product owner, who have the needs, the Scrum Master, who is most familiar with SCRUM and works as a instructor for the Team Members, who are the developers. SCRUM uses Sprints to further develop the project, task by taks, given by the product backlog. \n\n+ it is agile - our eist-project could be developed in parallel\n+ it involves userfeedback - our SCRUM Maste / Tutor alway told us if we had a missunderstanding\n\n- more colplexity for programm planning - more expirence would have been usefull to paln a time horizon \n- product incremtns can become obsolet - some complex methods where deprecated after we introducded new ideas in a later sprint\n\nThe Spiral Model as an iterative one, is not as agile. You work step by step and formalte goals in the beginning. Thus the user is not as good involved as in SCRUM. Beacause the Model is more straight forward it is more easy to give a time horizon, but planning seems to be very complex. It is less probably to develop unused code snips, because everything is planned\n",
      "score": 70.8,
      "language": "ENGLISH"
    },
    {
      "id": 5644400,
      "meta": {},
      "text": "Scrum ist eine Methode, in welcher Teamwork und Anpassungsf√§higkeit die h√∂chste Priorit√§t haben. Scrum legt gro√üen Wert auf Kommunikation, so gro√üen Wert, dass man den Tag √ºblicherweise mit einem daily Scrum meeting beginnt, wo man sich die Teammitglieder gegenseitig austauschen und informieren k√∂nnen. In Scrum wird ein Team von einen Scrum master geleitet, dessen aufgabe es ist, mit dem Kunden bzw. Product owner zu kommunizieren und sicherzustellen, dass das Team auf dem richtigen Weg ist. Scrum besteht aus Sprints, bevor jedem Sprint werden geplante Features aus den Product backog genommen und versucht, diese umzusetzen. Am ende jedes Sprintes wird nicht geschafftes wieder in den Product backlog getan.\nEin klarer Vorteil von Scrum ist, dass man durch die gute Teamkommunikation Fehler vorbeugen und besser zusammenarbeiten kann, was auch z.B. eventuelle Risiken fr√ºhzeitig. Jedoch k√∂nnen die t√§glichen meetings auch dazu f√ºhren, dass weniger am Produkt selbst gearbeitet und eventuell Zeit verschwendet wird, z.B. wenn das Team sich nicht gut versteht und kaum kommuniziert. Ein weiterer Vorteil von Scrum ist, dass man, genau weil es zu einer Methode der agilen Softwareentwickung gilt, man selbst entscheiden kann, wie ganau man Scrum umsetzen will, und gewisse Aspekte anpassen kann, was in manchen Situationen, z.B. in der Pandemie, wo auf einmal jeder von zuhause arbeiten muss sehr von Vorteil sein kann. Jedoch kann diese Anpassungsf√§higkeit auch dazu f√ºhren, dass die Essenz von Scrum verloren geht, z.B. wenn man die Scrum-meetings weglassen w√ºrde.\nIm Gegensatz zum Spiral model kann man sich in Scrum bereits w√§hrend der Implementierung mit seinen Teamkollegen austauschen und nicht erst nachher oder vor einem \"spirnt\", um Fehler zu erkennen. Jedoch kann man im Spiral model auch mehrere Zeit am St√ºck mit der Implementierung verbringen, was auch hifreich sein kann. Da das Spiral model festgelegt ist, kann es zwar nicht spontan angepasst werden. Jedoch kann es auch eventuelle Vorteile haben und Zeit sparen, wenn man sich keine zus√§tzlichen Gedanken dazu machen muss, wie man jetzt welchen Aspekt der Methode umsetzen soll.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 5644695,
      "meta": {},
      "text": "SCRUM is a project managment method where our companies gets split into groups. When a new project arrives it gets split into different tasks, the so called product backlog. Now those teams work on some parts of the product backlog in a set amount of time, often daily. Once this time is over the team speeks about what was acomplished and how they could improve the process and if they finished the task it gets eliminated from the product backlog. You repeat until your product backlog is empty.\n\nOne advantage of scrum is the efficient use of time and therfore money, since a team speaks every day about their process and always trys to improve in their process. For example if you realize one member of the team always spends more time on their assigned task, but the other finishes his in a matter of hours, you can discuss this problem and next time you asign tasks in your group more evenly so more tasks can be finished. In the spiral model mistakes and inefficencies aren't noticed that easy since there isn't that much communication.\n\nAnother advantage is the agileness of scrum. Again due to the daily meetings you can adapt to changes very quickly since you get feedback almost everyday and with this feedback you don't need to work to a dead end for more than a week only for this idea or implementation to get scraped. E.g. if a client programmer programms some sites in a different style than intended, he gets this feedback in the next scrum meeting and doesn't need to change this style for every site, if he would have gotten feedback two weeks later. The spirale model isn't that agile, since there are only nine iterations and not daily meetings.\n\nOne disadvantage is that every team member needs to be motivated to get their tasks done for the next meeting. E.g. if one member isn't that motivated his tasks won't be completed and so this task needs to be moved to the next scrum. This results in big time loss. The spiral model also needs their members to be motivated to finish all their tasks in the iterations on time.\n\nAnother disadvantage is the pressure one feels, since he always has the deadline of this task on the very next day and also doesn't want to disappoint his other team members. If for example one worker has a task which he doesn't quite understand but knows his due date is tomorrow he either has to spend a lot of time on it or the end product isn't that good, due to the lack of time and pressure he fealt. The pressure in the spiral model isn't that big since you have more time to adapt to the new task.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620105,
      "meta": {},
      "text": "Scrum is an empirical process for software development, meaning it doesn't follow a strict plan, but instead is iterative and adaptive. Scrum relies on the collective intelligence of a group of people. The group interactions coupled with scrum principles provide the foundation of this agile model. \n+ Errors can be tolerated with ease with each Sprint in Scrum, thereby, it is not a huge setback if a significant error in previous tasks occur. For example, daily meetings and sprints help improving the design, code and meeting requirements, so problems at this stage can be discussed and tackled. But in a sequential model like Spring model, things have to be done in order. Thus, a problem occurring after series of tasks may cause the whole process to start over because it is an iterative model.\n+ Unlike spring model, Scrum is a non-linear process, meaning it can do planning, requirements and developing software at the same time in parallel. Through meetings and daily reviews this divide-and-conquer strategy works well. For instance, chunks of the project can be done each time in a team, meaning team members don't have to wait for UML diagrams or all necessary requirements to finish to start working on their tasks.\n-One disadvantage about Scrum is that it requires major transformations in the company because it doesn't follow the traditional structure. For example, it requires mainly small teams because Scrum is a collaborative system, the efficiency of the teams decline as they grow in number. Therefore the companies who are used to hierarchy structure have difficulty in adopting Scrum, but Spring model doesn't have this issue because it has been out there long enough.\n- It is difficult to estimate the time it takes to finish a project with scrum because it's a self-managing system. Therefore, managers might lean towards the spiral model because of its predictability. For instance, a marketing software built with Scrum model might finish 1 month before it was promised or take 2 months more than planned.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621907,
      "meta": {},
      "text": "the core essence of SCRUM:\nScrum is one of the agile software development methodologies. It's a practice to embrace and respond to inescapable change in software development. It delivers very frequently tested working software.\n\nadvantages SCRUM:\n1. Due to short sprints and constant feedback it becomes easier to cope with changes, because the sprint backlogs can be adapted easily.\n2. It is easier to deliver a quality product in schedule time, because there would be a potentially shippable product for each sprint.\n\ndisadvantages SCRUM: \n1. hard to realise in bigger teams, because the daily meeting could be very time consuming.\n2. more risks of maintenance and sustainability, because the requirements may change too often.\n\ncomparation to Spiral Model:\nSpiral model responses slower to changes and suits larger projects, it has better risk management and need complex management.\nScrum is more flexible and response rapid to change. It doesn't need much requirements in the beginning to start, while spiral model needs more. It is an incremental way and doesn't need heavy documentation, while spiral does.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5622325,
      "meta": {},
      "text": "Scrum is an agile technique that delivers value early and in a iterative manner. The customer receives working software as soon as possible. Projects are divided into sprints, with each sprint having specific goals. Different teams work together to accomplish these goals in a given time frame to successfully complete a sprint. \n\nAdvantages:\n1. Early recognition and fixing of mistakes/misunderstood tasks: Coding and testing are done in parallel when using scrum. During the daily scrums all other team members get an insight in your progress and an opportunity to check your work for mistakes. After a sprint is completed, all items in the sprint review are checked for correctness. If there is an issue there, they are moved back to the project backlog to be redone or fixed.\nComp.  spiral: Due to extensive planning before actual development, the spiral model tries to avoid pitfalls before starting to code. Also after development, risks are assessed and resolved again.\n2. Fast reaction to changes: Due to having such short sprints, scrum is able to react to change very quickly. If a customer urgently wants to have a new feature implemented, this can be done quickly, as soon as the next sprint. \nComp. spiral: New functionality can easily be added at later phases.\n\nDisadvantages:\n1. Conflict: Scrum depends on all team members working together effectively, which isn't that easy a task as it sounds. Often there also is potential for conflict inside teams, because of conflicting ideas about an implementation. Should communication then start to slow down or completely come to a halt, scrum isn't an effective technique anymore.\nComp. spiral: Does not specify exact rules as how to teams have to interact (like daily scrums). Not to reliant on team work.\n\n2. Scalability: Scrum is best used in small to medium-scaled project, because it is very hard to scale. Teams can only have a limited size in order to stay effective. In big projects one could use models where there are teams working on different scrum backlogs in parallel and (mostly) independent of each other, which complicates the whole matter.\nComp. spiral: The spiral model is much more effective in large scale projects, due to its extensive planning and risk analysis. It can be very costly, but also very rewarding. \n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644572,
      "meta": {},
      "text": "Scrum It is the most popular agile framework in Software  Engineering that deals basically with interruptions  and change . In this framework there are three principal roles in order  to achieve the desired goal: TheProductOwner/ScrumMaster/TeamMembers.\nWorkflow :\nthe product owner builds  a  prioritized list of features (user Stories ) which create the product backlog passed to the team  then we have a sprint planning to discuss about what are the top priorities to go to the sprint and we create a sprint backlog ( as an output) after that we have the sprint to work through tasks in the sprint backlog ( while doing that a daily scrums happen in order to discuss what we have done and finished , what are constraints and what we are currently working on) and as  an outcome we have a \"potentially \"shippable product (where the P O can decide if it shippable or not) and  finally we a sprint review so that the team show their work to the PO und Sprint retrospective    to evaluate what happened wrong or well \n(+) :\n- very little planning  due to interactions that happen  between the team and the customer: ur customer want a website u quickly build one and go to him if he dont like it (or want to add something )go back change it and return to him u didnt plane to much   )\n\n-  each team member has to do his own effort in order  that the team succeed and that can be checked through daily scrum so no member get overwhelmed by the amount of work     \n(-):\n-  chances  of failure are high when a team member don't do his work efficiently ( e.g. if the tester dont write goods tests for the builds  of the developers we risk of shipping an inefficient product  \n- if a team member leaves during the process that can harm  the project and even overwhelming  other team members by excessive amount of work (e.g. last eist tuto our team shrank from 5 to 2 people making the work much harder and even the review no that efficient because we were only 2 people on team( without scrummaster)\nComparison:\nSpiral model is an iterative  model  based 4 major activities of Lifecyle of the system that are repeated until everything is done and who basically deals with change after the activity  where scrum is an agile framework whos its iteration end with a working software (high code) unlike porotypes in SM   and can deal with the change within the activity itself\n\n\n\n",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 5620898,
      "meta": {},
      "text": "SCRUM is an empirical process control model integrating adaptive solutions for complex problems. A Scrum master controls a product owner managing a product backlog and a Scrum team incrementally strengthening the product by working on items on the product backlog. Scrum relies on transparency, frequent inspection and easy adaptation of its process. \n\nScrum's activities like sprint retrospectives and reviews make sure that the team has the chance to reflect on and improve processes resulting in a more qualitative product, as customers can rely on collaboration and continuous improvement. For example, problems with a car's paint job will probably be identified earlier in the process using Scrum. \nFurthermore, customer satisfaction is increased by coordinating with stakeholders and incorporating feedback loops influencing the product backlog. For example, customers could identify issues with the UI design proposed by a software company early, thereby preventing extensive redesign later in the process.\n\nHowever, Growing companies might find it difficult to scale their processes built on Scrum as implementation on a bigger scale requires extensive training and precise coordination. A startup increasing its workforce from 20 to 40 people has to integrate new employees step-by-step into its existing workflow. \nFinally, problems might arise when applying Scrum to a well-established process with fixed hierarchies. Workers, who are used to old structures and workflows, could face issues adapting to the agile approach of the Scrum framework. An established OEM will probably encounter obstacles suddenly convincing long-term employees to switch their established work process. \n\nIn contrast to Scrum, the Spiral model might identify problems later in the process because discussions between coworkers are not fostered to the same extent. Also, acceptance tests in the Spiral model typically only happen after several iterations, potentially negatively influencing customer satisfaction and engagement. \nScaling either model comes with its unique challenges. However, as the Spiral model's process doesn't rely as heavily on coordination, it might be easier to scale. Changing an established process is never an easy job to do, but Scrum's high level of coordination might again make it harder to integrate. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621229,
      "meta": {},
      "text": "Scrum is a framework for iterative agile software development. All requirements get listet in a product backlog by the product owner. The scrum team selects specific requirements ( = sprint backlog) from the product backlog and implements the needed functionality during so called sprints. At the end of each sprint the scrum team  should have a shipping increment (deliverable product), it looks at the results, evaluates the sprint and plans the next sprint. This happens repeatedly until the project is finished.For cummunication there are several meetings needed, such as the daily scrum meeting, the sprint review and sprint retrospective after each sprint, the sprint planning before the next sprint and the project kickoff meeting before the first sprint.\n\nAdvantages:\n- on-time delivery: you should have a shippable product even after the first sprint, that means you can always deliver something to the customer. E.g. if you should develop a website you can start with a fuctioning landing page or the login system and could already deliver this instead of having a \"amlost finished but still not working\" website where you tried to implement all functionality at once.\n- flexibility and adaptability: you can easily change the product as you can refine the product backlog after each sprint if required. E.g. you build a home security system and the customer decides to wish for facial recognition functionality during the ongoing project - this requirement can be added to the product backlog after finishing the sprint\n\nDisadvantages:\n- difficult to scale: scrum works better for small teams than for larger ones. As communication is key within scrum and many meetings are required it is very hard to use this methodology with large teams. If let say the team to develop a payment system consists of 50 people, the daily scrum meetings for example might be way to short to enable good communication among the team as it should be more like a \"less than 20 minutes\" stand up meeting.\n- quality is hard to implement: the team needs to test each functionality during the dedicated sprint very aggressively. For example in case the team is not as strict with testing, it might lead to future problems in further developing or in use cases of the customer.\n\nComparison with spiral model:\n- on-time delivery: you don't have the claim to have a shippable product during almost the whole project in the spiral model which can be seen as a slight disadvantage\n- flexibilaty and adaptability: as the spiral model also is an iterative and incremental approach you can change requrements and details of the project in each lifecycle\n- difficult to scale: the spiral model is easier to scale in larger teams than the scrum framework\n- quality is hard to implement: in the spiral model testing is also as neccessary for quality as in scrum ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621282,
      "meta": {},
      "text": "Scrum is an agile software development technique that deals with any interruptions such as changes in requirements occurring during the development. The feature of Scrum is that the process is controlled with iterative \"sprint(s)\"  which is a time-box where the team creates a potentially shippable product increment.  A Scrum team consists of the following three roles: product owner, scrum master, and scrum team members, and they communicate with each other daily and closely.\n\n2 advantages of SCRUM \n- The close and frequent communication within the team enables to adjust development activities according to \n the changes required by clients. \n- As potentially shippable increment is made in every sprint, clients can try it and the scrum team can receive constructive feedback.  \n\n2 disadvantages of SCRUM\n- Since Scrum is an incremental and iterative methodology and it does not necessarily have a defined deadline, the number of sprints can expand and it can get costly.\n- Scrum requires a strong commitment from every member and if some members are not able to execute tasks that he/she is supposed to do, it causes a delay in the development. If you have some members who are not so experienced in SCRUM rapid development in your develop members, other members would need to work more to cover the delay. \n\nWhereas Spiral model is an iterative model with defined processes of software development, Scrum is an agile iterative model with empirical processes. Speaking more detail, the software development with the spiral model is planned well at the beginning with 4 major activities (1. planning, 2. risk analysis, 3. engineering, 4. evaluation) that are executed iteratively in each development process as planned. As for scrum, you do not plan for the complete project in the beginning, but for only one sprint. \nBecause of the defined development process, Sprint model does not have SCRUM's aforementioned advantages such as the possibility of adjustments of activities due to frequent and close communication within the team and from the clients, but also does not have SCRUM's aforementioned disadvantages that the duration and the cost of the development can inflate. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623002,
      "meta": {},
      "text": "Scrum is a framework for software development, that enables iterative and incremental product development. This is achieved through a process of prioritisation focused on finishing tasks quickly always with the needs of the customer in mind.\n\nIts adaptable and flexible, as SCRUM works in short term sprints and new ideas can be integrated in the next sprint. An example would be if a new law gets introduced which limits data collection, the data collection behaviour of the software can be changed as part of the next sprint.\nIt improves customer satisfaction as it is very customer focused and their wishes get implemented fast. E.g. a customer requests a new feature which can then be implemented in one of the next increments.\nSCRUM requires training. Instead of just finishing given tasks everyone in the SCRUM team needs to understand clearly how the framework works to ensure its correct functioning. E.g. a new person who has never heard of it joins a SCRUM team, resources will be needed to train him first.\nIt is hard to scale. As SCRUM is so focused on small teams very large projects are hard to be implemented using it. E.g. Microsoft working on a new release of their operating system with thousands of involved developers.\n\nSame as SCRUM the Spiral model also works in an incremental fashion and is therefore also adaptable.\nThe spiral model can also improve customer satisfaction through removing the biggest \"risk\" i.e. serving the customer what it wants.\nIn contrast to SCRUM the Spiral model can circumvent the training needed by leaving the planning higher up in the hierarchy and giving the developers just tasks to finish.\nThis also helps the spiral model to oversee larger projects as the decision making is not as fragmented as in SCRUM.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644593,
      "meta": {},
      "text": "First of all, SCRUM and spiral models are both meant to make our work easier, better organized and cosequently more efficient. What's also important is the fact that they have some similarities, namely we split the activities to identify steps we make during the development process. Let's take a closer look at SCRUM.\nThe biggest advantage of SCRUM is parallelism. Our clients expectations tend to change rapidly and so should the requirements accordingly. It makes management actual part of the development, since they have some control over it instead of how it works in spiral model where we have to go step by step and the risk is either resolved or not, which eventually results in another iteration. SCRUM saves us a lot of time and results in better contact with the clients & management team which is another great advantage! Consensus we reach helps us avoid conflicts between different visions.\nThe biggest disadvantage is the fact that the management team has even bigger responsibility on themselves in case of SCRUM. It obviously needs more manpower, more frequent brainstorms so to say and great soft skills which was not the case with spiral model. Another disavantage would be the integration issue with our existing projects. We used to work in other way so it requires some time and patience to switch into SCRUM. Besides, SCRUM might not be the best idea if our project requires more predactibility. Spiral model offered us a clear plan at the start of each iteration so it was all kind of easy to predict. Bare in mind that rapid changes tend to be hard at the beginning!",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644877,
      "meta": {},
      "text": "Scrum is an approach in agile processes that copes with interruptions (change) meaning that it manages and controls software and product development with rapidly changing requirements and improves risk management by improved communication. An advantage of Scrum is that each activity has a constant duration whereas in the spiral model the duration of an iterative activity is not defined. In spiral model it  permanently deals with risk handling which consumes time. When doing the teamwork in EIST we have a backlog of problems to be solved. These can be done in sprints that have constant duration. \nAnother advantage is that Scrum can deal with rapidly changing environment where as in spiral model you do all the tasks according to the steps in an iteration. In EIST we have to cope with new additional features every week. Therefore we have to deal with changes all the time. If we solve problems with defined steps, we can not adapt to the changes.\nA disadvantage of scrum is the lack of risk analysis compared to the spiral model. Therefore mistakes or errors can occur in the scrum model which can be prevented with extensive testing. In EIST exercise sessions we have done sprints in constant duration. But when we had a potentially shippable product increment we have found errors in our model which have to be corrected.\nAnother disadvantage of scrum is the team size for sprints. Normally you can only do sprints in small groups whereas in the spiral model a large team can be involved in an iterative process. In the EIST exercises we had groups of 2 to 3 people.",
      "score": 60.4,
      "language": "ENGLISH"
    },
    {
      "id": 5620304,
      "meta": {},
      "text": "SCRUM is an agile software development technique, which means not everything is planned in detail beforehand, but instead in smaller periods of time (sprints) to leave room for interruptions, change, learning and improvement. More concretely this means that there is a backlog of work items to be completed, from this backlog items are selected for the next sprint and within the next sprint, it's up to the development team how and when during the sprint, they complete the items. \n\nAn advantage of SCRUM is that frequent changes can be implemented easily. If another requirement pops up, the item can simply be added to the product backlog (e.g. a new view for the user), and if it's important it can be dealt with immediately during the next sprint. For a spiral model, this doesn't work if the change refers to a phase that has already been completed (e.g. request for new features during the testing phase).\n\nAnother advantage of SCRUM is that at least a basic version of the product is shipped rapidly. If development goes in the wrong direction feedback is received immediately and no time is wasted building a product that nobody wants to use (e.g. unintuitive user controls). For a spiral model, there is only one shipment of the product in the end and a lot of things are built before.\n\nThe SCRUM process is new to most people, and therefore time for learning and getting used to the process needs to be factored in. E.g. for creating the sprint backlog people might not know how many items they can complete during the time and might add/remove items during the sprint, even though that is not allowed. This isn't a problem for the spiral model, since there are no defined time periods like sprints. \n\nFurthermore, SCRUM projects can get out of scope because there is no planned end date and too many items might be added to the product backlog. For the spiral model that is not the case because all requirements are defined in the beginning.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620657,
      "meta": {},
      "text": "What is Scrum?\nScrum is an agile methodology that is used to coordinate a team in order to develop a product for the customer. It is classified in different sprints. After each sprint you have a product increment and you can modify it after getting feedback from the customer or fellow team members, so scrum is great to deal with changing requirements.\n\nExample 1: Customer asks for an online shopping app. After the a few sprints he realizes the UI that he asked for doesn't have a good usability, so the developer changes the Design of the UI.  The customer is happy with the design and very satisfied with the team.\n\nAdvantage: High customer satisfaction\nDisadvantage: difficult to plan the exact end time\nWith Scrum, you have the opportunity to get early customer feedback. Plus, after each sprint you have a product increment. In case the customer realized that the UI he asked for is more difficult to use than he imagined. So he asked to simplify it which was easily done and the customer is happy. However, because of not scalable requirement changes it is hard to tell in advance when the app would be finished.\n\nWith the Sprial model, you have 9 iterations, so it is easier to plan the end time. In the spiral model you have prototypes and get feedback from the customer, so the customer satisfaction is also high here.\n\nExample 2: You are a software team built out of students and you  built a restaurant reservation app. While developing the app you realize that it would be great to connect the google api with your app to get the information of restaurants and also connect them with google maps.\nAdvantage: Flexibility, adapt changes early\nDisadvanage: difficult to plan costs\n\nOne of the biggest advantages of scrum is that you have many opportunities to adapt the software. The idea with the google api came up after the team was discussing about how they are going to get the restaurant information. So it is great to communicate a lot in the beginning and adapt changes early. However these changes also lead to the fact that it is difficult to calculate the costs. These can be human capital costs, infrastructure costs or switching costs caused by unforeseen events. In this case it is human capital costs. As no one in the team has experience with google apis and google maps they have to outsource it.\n\nThe spiral model also has different phases and they evaluate the results after each phase so they can also adapt changes continuously. However they also identify risks, so they can't calculate the exact costs, but they can calculate that because of this and that reason the costs can increase etc. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622210,
      "meta": {},
      "text": "Scrum:\n- enhances the communication between the Team members that leads to increase the poductivity of the process and decreases the risk by developement process.\n- is a empirical process of Development that deals with changes, interrupts and reacts to them properly.\n\nAdvantages of Scrum:\n1. Scrum will give us good quality of the work: everyone of the Team just need to focuse on the provided task to him. He is responsible for that. In this case can the worker or developer find more creativity ideas or solution with better performance.\n2. Scrum does not lead to expensive costs (low-cost) for the firms or for the organizations : it always requires a less control of the work.\n\nDisadvantages of Scrum:\n1. Scrum uses small teams: each team should include at least three members and at most ten members.\nsome companies found that  too hard and difficult to organize the tasks to each one and the workflow betwenn them.\n2. Scrum provides from the team members more and more experiences to be able to solve the problems with successfuly and creativity ways, each member explains the whole product process.\n\n- Spiral Model: include 4 major activities and the four activities are used in 9 Iteration. \n- Scrum: makes development and Testing are much more concurrent and integrated rather than being sequential.\n- they are both software developement frameworks, emphasize self management within the Team.\n- they both split the development process into distinctive stages.\n ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622247,
      "meta": {},
      "text": "Core Essence:\nScrum is a framework for project management that is centred around the principles of teamwork, accountability and iterative progress. It normally consists of sprints of 1-4 weeks longs which ensures that a version of the prodcut is constanlty delviered. It is implemented using roles, events and artifacts such as product backlog, sprint backlog, daily and weekly scrum meetings.\n\nSprial splits the work into chunks and allows us to get feedback of every iteration of development. Therefore it is a combination of iterative and incremental model. The key difference with agile (SCRUM) is that Sprial framework requires a key decision upfront that plans the next SET of spirals. In agile, plan is made for one increment at a time. Sprial is flexible and encourages creativity but not as flexbile as SCRUM. \n\nAdvantages:\n1. It is adaptable and flexible: SCRUM is helpful in situations when the requirements are not clear or changing. SCRUM will be helpful for adapting with changing client requirements. Since SPIRAL requires an inital decison on set of spirals it is not as flexible\n\n2. It encourages creative solutions: Scrum teams work together and analyze ideas from all its members which promotes creativity and new ideas are likely to appear. In SCRUM daily meetings can be critical in gathering creative solutions to problems. Since Spiral does not have such meetings, it does not promote same level of creativity. \n\nDisadvantages:\n1. It requires extensive training: SCRUM requires a well-trained and skillful team to implement it. Its benefits and implementation needs to be understood. If the startup is new and its members are inexpereined then using SCRUM can delay product execution. Spiral is smoother to implement.\n\n2. SCRUM requires small teams: If the startup has scaled very fast and has large teams then using scrum will require reorganization. In such a scenario, implementing the example case using SCRUM will be a hinderance. Spiral can be implemented with larger teams.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622746,
      "meta": {},
      "text": "Scrum is an agile software lifecycle model that consists of a backlog of features to be added and a so-called sprint process. During this process a subset of the product backlog is implemented with the help of frequent meeting with the team members to ensure agility of the process.\n\nThe first disadvantage of Scrum is that the length of the sprints is fixed. That means you must push unfinished sprint backlog items back into the product backlog and then reselecting them at a later date. That means restructuring the project structure and adjusting the time needed for the project.\nIn the spiral model this is a bit different: the length of an iteration is not fixed and  the approach as such is a different as various versions of prototypes are developed to resolve risks using the linear model instead of an agile process. If the risks can‚Äôt be resolved, the project is terminated.\nWithin that lie two big advantages of Scrum called vertical integration and agility. At the end of every sprint, you have a potentially shippable product increment that can be used and sent out to the customer, who can give feedback and help to improve the product and fit it to his own needs. \nThere the agility comes in to play: you can add and alter features in the backlog. Therefore, there is a lot less waisted work produced during the production process and nothing needs to be reworked at the end.\nIn the spiral model, you use horizontal integration, as there are always prototypes built for problems from certain areas of a software, which means you won‚Äôt get a shippable product increment at the end of an iteration. Additionally, it‚Äôs not an agile process, you can‚Äôt alter the risks and features during an iteration.\nThe last disadvantage of Scrum is that there are many meetings to attend, which take a lot of time and is a hefty price to pay for the agility.\nIn the spiral model you only have the planning, but not so many interruptions along the way.\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5622823,
      "meta": {},
      "text": "SCRUM is an agile model, which allows us (the company) to react to changes quickly and address them. The main tasks there are building a project and sprint-backlog, a sprint, which is where the tasks are done and finally at the end of each sprint a potentially ship-able project can be presented.\n\nA clear advantage of SCRUM is that it reacts well to change. Due to the numerous meetings, any possible problem that does arise can be resolved quickly within the group.\nAn example where this might be helpful is when our client wants us to allow users to authentication via third-parties later in the project, even though he/she only wanted us to authenticate them via email, and the functionality has already been implemented and tested.\nThis is a severe problem with the spiral model, because, if we start the testing phase (iterations 6-8), it is very hard to make changes to the code-base\n\nAnother advantage of SCRUM is that thing happen in parallel. This allows testing during implementation, making error detection extremely rapid.\nThis is for example helpful, when our authentication and shibboleth  are not well integrated, an update can be done once these have been made (e.g. using adapter pattern), which would then save a lot of time down the road.\n\nA disadvantage of scrum is that if we are not expecting a lot of changes from our client, it adds a lot of checks which may not be needed.\nFor example, many meeting could be spared (e.g. the daily meeting) if the problem statement that we were given by our client is well-defined. This is where the spiral model works great.\n\nAnother disadvantage of scrum is the time pressure, that our developers would go through, to deliver a ship-able product at the end of each cycle.\nFor example, if the server connection has been lost at the end of a sprint, the developers would face extremely more pressure during the end of each month, making their productivity go down due to the experienced stress.",
      "score": 62.5,
      "language": "ENGLISH"
    },
    {
      "id": 5623232,
      "meta": {},
      "text": "Scrum is an agile process/technique that is adaptive to interruptions and allows to deals with continuous changes and their requirements rapidly. Further it has an improved communication and cooperation among the team and improves risk management and product increments compared to other models from project start to project delivery and is divided into several sprints. Scrum consists of the product backlog, which is regularly updated in sprint meetings, a sprint backlog, reoccurring daily scrums and and delivered increments which are explained in sprint review and sprint retrospective meetings, until the project is completed.\n\nAdvantages and Disadvantages (comparison to Spiral in brackets):\n1. Advantage: deals with frequent change, e.g. if customers add another requirement, in the middle of the project duration, such as a n added log-in option (Spiral model does not deal with frequent change, e.g. as soon as the development plan is made requirements can no be spontaneously added, as the requirements validation is already considered completed)\n2. Advantage: Scrum does not require a specific order of task accomplishments and tasks can be completed in parallel, such as adjusting the risk analysis during the system design, because new findings and decisions about security have been made (In the spiral model risk analysis is a separate step in between plan and system prototype.)\n3. Disadvantage: With Scrum it is difficult to create a timeline and resources in advance and during the process, because there is the constant possibility of incoming requirements, such as added features which need more funding and time to accomplish (in the Spiral model, steps and the timeline is more clear and after the completion of a stage it is set, how much resources are used and how much is still required depending on the remaining stages.)\n4. Disadvantage: Scrum does not have a clear timeline and therefore it is more difficult to track the status of the project, as Scrum does not have any completed stages and just completed backlog items (the Spiral model has clear timeline and it is known at what stage of the project one is.)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644312,
      "meta": {},
      "text": "Scrum is a framework that helps teams to develop, sustain and deliver products. It helps to organize the workflow and to solve difficult problems. Scrum allows teams to reflect on wins and losses and to get the most value out of work sessions.\n\nAdvantages:\n‚Äî Work is performed in parallel. More tasks can be done in a limited span of time.\n‚Äî Daily scrum meetings allow for effective information sharing, which is useful to get everybody (team members, product owner, scrum master) on the same page.\n‚Äî Sprints are iterative, which means if something wasn't completed in the last sprint, it can be picked up and finished in the next sprint.\n‚Äî Sprint activities are placed on a task board for better goal visualization and to keep everyone updated on the progress.\n‚Äî Product backlog allows for changes in tasks and schedule, due to new or changed product requirements by the product owner.\n‚Äî Sprint meetings estimate the difficulty of the sprint and plan which tasks from the product backlog will be done in the new sprint.\n‚Äî Sprint reviews tick off tasks and sprint retrospective meeting effectively evaluate sprints and help to prepare for the next sprint.\n\nDisadvantages:\n‚Äî Work is performed in parallel. It's bad if you have a limited work power.\n‚Äî Flexible, can be confusing when comparing to spiral model where all major activities are straightforward.\n\n\nWhen comparing spiral model and scrum, there's definitely the problem of team size that should be compared, as smaller teams should go for linear problems to solve complex problems faster. Big teams would have an advantage in scrum as they can split up and finish tasks way faster. The spiral model could save time on meetings when compared to scrum, as people would work on the same major activity.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 5644513,
      "meta": {},
      "text": "Scrum is a technique for a team to operate more smoothly by reviewing the code in a meeting in rhythms. It focusses on setting the work parallel rather the sequentially. One disadvantage is that it is very hard to coordinate for large programming groups. When meeting every 24 hours in a team of 100 members a lot of time is wasted and the subject of this meeting will take ages to discuss. In this part the spiral model is better because it got phases and not separated work steps. When the project is in one phase directing the whole project for the project manager is easy because everyone is working in the same area. A second disadvantage is that your project assembles itself with the time and the amount of meeting you have. From the beginning just the ultimate goal is declared and no smaller steps so the costumer got a general idea but not exactly what the functionality of the code is. In the spiral model you not only form a plan of the project ahead of time but the whole project got a structure instead of sequences. On the other hand, an advantage is that you are a lot more time efficient the doing it sequentially. By splitting the work with exact steps threw out the team members the work gets done very fast. If you want to add a small functionality to the program it almost takes no time because it is made like a puzzle but every part is done by one member adding up super fast. In the spiral model a completely new plan or jumping back multiple phases needs to be done resulting in a decrease of the team speed. A second advantage is that you have a high adaptability to the often, changing orders by the costumer. When building a game and you want it to be third person changing it to first person with this method is just adding an additional cycle and is done very fast. In the spiral model changing parts in the program can result in restarting the whole progress or the need to recreate the rest of the whole project plan.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644701,
      "meta": {},
      "text": "The core essence of SCRUM are it's sprints. In cycles of 2-4 weeks, a portions of the product backlog is pulled into the sprint backlog and intensively implemented, with daily scrum meetings to keep everyone on the same level. Every sprint ends in a potentially shippable product increment being presented to client.\n\nDue to this nature of small steps with a lot of communication, SCRUM is great to deal with rapidly changing requirements and interruptions. At any given time, the client can decide on a new feature (e.g. a new user interface in bumpers) and since every implementation step can be backtracked and seperated, bits of implemented code can be replaced, without forgetting about a hidden side-effect the change might have, as it might very well happen in the Spiral Model.\n\nAdditionally, feedback from SCRUM members and the SCRUM master themselves are often exchanged and the cooperation within the team improves constantly. Different working mentalities and approaches to the same problem can be detected very early on, without having to rework too much of already made progress. In the Spiral Model, an incompatability might be carried through a big part of the development, resulting in a lot more changes being necessary later on.\n\nA disadvantage of SCRUM is, that a lot of resources and time is spent on the communication, which might not be necessary, if interfaces of different modules are properly communicated once in the beginning. Here, the Spiral Model would be sufficient, with different groups very efficiently working on highly cohesive modules, knowing their enviroment the best, with well defined interfaces to the outside.\n\nDefault SCRUM can't be applied well to big groups and splitting tasks into multiple teams is difficult and requires additional expertise.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644730,
      "meta": {},
      "text": "SCRUM is an empirical process, agile process model. You inspect and adapt every change you make in order to create risk free potential shippable product. The progress of the work isn't done in \"one sitting\" but split into different segments called sprints. Their are project roles, each with the job to \"unite\" different components and update everyone on the progress to create a singular vision that project owner wants.\n\nDisavantages:\n\n1) Harder to implement SCRUM since it isn't the \"conventional\" way of working. It may be harder to introduce a different work structure that everyone instantly understands. This isn't the case in the spiral model were you \"finish\" the project and review it at the end to restart the cycle to fix flaws.\n\n2) The timeline is more flexible their are some deadlines for the sprints but SCRUM is only done when there is an potentially shippable product. So there is no concrete deadline, while in the spiral model there is an exact deadline and resource allocation since the progress is monitored at the deadline time.\n\nAdvantages:\n\n1) It is more flexible and adaptable, with constant teamwork and meetings mistakes can be found directly and are changed. In the spiral model these mistakes are normally revised at the end of a cycle\n\n2) With the close team work in SCRUM creativity is promoted.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5619688,
      "meta": {},
      "text": "The essence of SCRUM:\nWhen using SCRUM, there is a product backlog and a sprint backlog, which is defined by the Product Owner and the devlelopment team deals during their next sprint. A sprint lasts around 2-4 weeks. During this time, there is a daily scrum meeting where the scrum-master is responsible, teams share their statuses, impediments and promises. At the end of each sprint, there should be a potentially shippable product and a sprint review as well as a sprint retrospective meeting. \n\nAdvantages:\n- In SCRUM, work is perforemd in parallel rather than in a subsequent manner (spiral model), therefore it ensures that no steps are blocked as a previous step/iteration is not finished. For example testing is not blocked during coding.\n- Projects devloped with SCRUM can deal with change within activities compared to the spiral model, which can only deal with change between activities. When using the spiral model, we can only implement change after each activity. In SCRUM, we can implement changes after each sprint without \"destroying\" our product as after each sprint we have a potentially shippable product. \n\nDisadvantages:\n- SCRUM is rather complicated when it's introduced. When scrum processes are not introduced properly or team members lack knowledge about this process, problems may occur - on the other hand, iterative models such as the spiral model are rather easy to implement and every team member can get used to it in a short time. For SCRUM, developers might feel less productive with the high number of meetings - therefore it is key to properly implement them in their daily work.\n- As SCRUM is trying to continously improve the product (plan for improvement during every sprint retrospective), there is not a clear last iteration. Therefore, a project might take longer than expected and there is no definite deadline - on the other hand, when using the spiral model, the project is finished after activity 4 in iteration 9.\n\n//took some parts from my submission of last year's course (ga84xoc)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620318,
      "meta": {},
      "text": "SCRUM is an empirical, iterative and incremental software development process for teams of around 10 people that is very nimble and quick to adjust to changes in the software requirements thus lowering the risk of delivering a subpar product to the client. Each iteration, so-called sprints, draws on the initially defined and frequently reviewed/ updated product backlog to define a set of items which will be addressed in the upcoming sprint which always has the objective to deliver a so-called potentially shippable product increment to the customer (vertical integration).\n\nA first advantage of projects done via this technique is that the process allows for effective use of time and money as only the exactly defined goals are addressed in the sprint. By giving team members subgoals that are feasible in a shorter amount of time a comprehensive project structure is achieved and delivering these smaller steps can also be a source of motivation.\n\nSecond advantage is naturally the agility and speed with which the team can react to problems/ unexpected changes/etc. that become apparent during a sprint as they can immediately be addressed in the following iteration. Furthermore if the customer suddenly requests or reassesses some of their requirements they can also be taken into account in the following iterations.\n\nDisadvantages of SCRUM are for example the fact that it only works effectively in smaller teams as more people slow down the decision making progress which is not conducive to the inherent idea of SCRUM being agile. \n\nSecondly, I would argue that SCRUM teams need to have experience and skills to quickly and successfully perform their own tasks as the intense sprint deadlines require timely achievement the subgoals and delays destroy the nature of scrum. \n\nConcerning the first advantage one can argue that the spiral model also focuses exactly on a specific subgoal, therefore those do align here. The second advantage is more inherent in SCRUM, risks might be identified beforehand but could also arise during the process, so those can pose problems. \n\nWhile the spiral model might work a bit better in larger teams I would also say that it is a more time-intensive process due to the amount of extensive planning. The time pressure aspect is not as dominant in the spiral model but the team has a pressure to resolve the identified risks, otherwise the project is terminated! \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620356,
      "meta": {},
      "text": "Scrum is an agile model, which consists of multiple sprints (each sprint takes around 2-4 weeks).  At first you collect user stories, demanded by the customer (contains what user does/ needs), and put them together in a product backlog. Then you chose some of the user stories of the product backlog, that you decide to work on the current sprint. After every sprint you have a potentially shippable product increment that you can present to the customer. You keep doing sprints like described above until you finished the project. \n\nA disadvantage of scrum is that too many changes are extremely inconvenient for the development team, because it has to adapt their plans/strategies and sometimes even make new plans. An example is that the team finished implementing a user story and then the product owner wants to remove this story (after the sprint), because he does not need it anymore. So all work was for nothing.\nSpiral model: There is no such problem\n\nIn addition it is not always smart to use Scrum, because it creates unnecessary complications. If changes do not occur frequently other lifecycle models are better choices. For example the  V-model (rare changes) or the Spiral model (some changes)\nSpiral model: Not that many unnecessary complications, but watch out when linear models are better.\n\nAn advantage of SCRUM is that you are able to respond to change. In software development it is usual for changes to occur, because it is hard to plan everything perfectly from the beginning (and there also can be change on the market side). So, it is really important to be able to handle changes. An example is that the customer/ product owner wants to add new requirements to the product backlog (and maybe also removing an unnecessary requirement).\nSpiral model: The Spiral model can only deal with changes between activities, not within an activity. \n\nFurthermore, scrum is based on regular collaboration, which helps reducing the risk of misunderstanding a task. Examples are Daily Scrum and Sprint review. Every day there is a meeting (Daily Scrum), where the scrum master and development teams exchange information. And after every sprint there is a Sprint review (+ retrospective) where the team gets feedback and can improve for the next sprint.\nSpiral model: At the end of each activity there is an evaluation of the results, but there is for example no daily meeting.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620387,
      "meta": {},
      "text": "Scrum is an agile process originating from rugby, a sport frequently paused due to interruptions. Similar to that sport, software development also needs to tackle interruptions due to frequent change in the requirements. Scrum teams consisting of a product owner (\"owning\" the (desired) outcome), a scrum master (organizing the processes) as well as developers, working in recurring sprints to transform the product backlog via sprint backlogs into a (potentially) shippable increment of the product in every iteration. \n\nA first advantage lies within the early prototypes of the desired outcome, as every sprint foresees to establish an already running, yet over time to be increased version. Consider building a point of sale module for an ERP system: Instead of covering every foreseeable edge case in the first version already (comp. to our current approach), releasing a limited version covering the major use case rather early helps to adapt to future needs.\n\nA second advantage is that within a scrum team, clear roles and responsibilities are established. Compared to our current squad of developers only trying to please the manager trying to cover everything, a scrum team thrives having a dedicated scrum master taking care that the sprint is running smoothly and all developers receive the inputs they need, as well as a product owner who can focus on (external) stakeholder management and the produced outcome.\n\nHowever, in a traditional such as our current setup, major topics can be focused on at one point in time, compared to the scrum process. In order to keep up with the ever increasing features developed, the UI for example needs to be adjusted every time instead of once, when proceeding a horizontal integration.\n\nAlso, our current approach is running smoothly in a sense that everyone knows the processes already and the organization is set out based on this approach. Scrum requires intense training sessions and a complete adoption on organizational side, which requires time and resources (switching costs).\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620409,
      "meta": {},
      "text": "Scrum is an agile model of software development, which addresses the challenges of modern software design by employing an adaptive approach to cope well with rapidly changing requirements. The work is completed in increments called ‚Äúsprints‚Äù that last up to a month. Meetings are held before and after each sprint to allocate backlog tasks and evaluate progress, and the team also organises a ‚Äúscrum meeting‚Äù daily.\n\nAdvantages:\n1. Scrum is agile. A change in requirements from the client corresponds to a simple update to the product backlog, which may be worked on in the next sprint. In the spiral model this is not possible, as there is no protocol to reevaluate requirements once the product has entered the design, development, or testing stages.\n2. Scrum allows for continuous involvement of project stakeholders. The product owner role represents the interests of the client, and after each sprint a meeting is held in order to demonstrate progress. Within the spiral model, the client is excluded from the process and only consulted during requirements elicitation and acceptance testing.\n\nDisadvantages:\n1. Scrum is best suited for smaller teams. The goal is maximal transparency in the project through minimal bureaucracy and frequent meetings to ensure accountability. Naturally, this is rather difficult to realise for larger dev teams.\n2. Compared to the spiral model, an agile approach makes it more difficult to quantify progress. If the product backlog continuously changes, projects may take significantly longer to complete as opposed to having it be set in stone before beginning design and development, with a finite number of iterations.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621451,
      "meta": {},
      "text": "\nScrum is a method for agile product development and agile project management. It is used for team collaboration based on a definition of roles (product owner, scrum master, team) and meetings that give a team structure and a clearly defined work process.\nOne advantage of Scrum is that problems can be identified more quickly and thus solved in time. Because of the daily meetings in the Scrum method, problems that arise can be discussed promptly and solved directly. It also prevents possible problems that two team members work for example on the same tasks without knowing. Another advantage is that it allows for a lot more accommodation when it comes to changing plans. When building a product, priorities change all the time, so you need to be able to quickly pivot. Scrum allows that. It gives you room so that after a sprint is over, new sets of priorities and tasks can be added.\nA disadvantage of Scrum is that if a member of the team leaves the process during development, it has a negative impact on the project development. Since Scrum works in Sprints where everyone has their own tasks, if a member leaves during a sprint, there are unfinished tasks. This leads to a slower process in the development. Another disadvantage is that Scrum is mostly suited for small teams. Since in Scrum there is a team goal, if that is spread among between a larger amount of people there is not as much accountability. It leaves room for people not provide their full amount of attention to the sprint and work less.\nThe Spiral Model is comparable to Scrum. Both have test, plan and evaluation phases. Similar to the Sprints the Spiral Model has Phases with activities. These activities include also a review and planning for the next Phase. But these Phase do not have a given length, therefore these review can take even more than two weeks and problems are solved slower. The Spiral Model is also less flexibly as Scrum, because the number of phases is planned from the beginning on, making it harder to adjust to new priorities. Since the Spiral Model has Phases witch have no given length, there is not the pressure, that if a member leaves, tasks are not finished in time. The Spiral Model can be used for bigger team other than Scrum, because the topic of the Phases are planned beforehand.\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644716,
      "meta": {},
      "text": "Scrum helps teams, and companies to work on a complex task together with a set of assignments, given to every team member to improve and better their workflow. It improves risk management and adapts nicely to rapidly changing requirements.\n\n++:\n1. Scrum allows to deliver Product fast with the help of designs, but in spiral pattern you need at least one iteration.\nEg: only after 2 springs of eist group project we had  workable model but if we have used spiral pattern then maybe planning phase could be going on.\n2. Each member contributes in the team's success and which could be judged easily by scrum master based on daily scrum meetings. So no person has an excessive amount of workload. \n\n\n--:\n1. Scrum meetings are not good if occurred often because if you don't have enough progress then it can lead to stress and less work efficiency. On the other hand the number of meetings in spiral is usually less.\nEg. my eist project meeting occurs every week and sometimes it was for 2-3 hrs which had more cons than pros, but in spiral pattern, we could have a meeting after every iteration.\n\n2. Scrum is not suitable for large groups as it is better by design for smaller teams. Spiral can hold large teams.\nEg. scrums are implemented for small teams in most companies, but a spiral can come into use in large teams like some large tech project.\n\n\nSpiralModel: this iterative model is based on four activi. of lifecycle which repeats itself till work done. Scrum on the other hand ends with the functional software and allows changes and implementations within a activity.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644770,
      "meta": {},
      "text": "Core essence of SCRUM:\nIt is a methodology used in agile software development to work on a project through a plan, but at the same time flexibly adapt to incoming changes. This is done through the periodic sprints making evaluation of the progress easier and delivering a shippable product regularly.\n\nAdvantages:\n- Large and complex projects can be separated into practically manageable parts since there are many meetings to discuss each part separately. Example: the team project we are doing is an application with many features which can hardly be discussed all in once, so more sprints and sprint meetings are required.\nCompared to this model, in the spiral model, complex projects have to be thought of at once, and then write the whole code.\n- During daily scrum meetings the effort of each individual member is visible. Example: Each member of our group in the team project feels the responsibility when presenting the work he/she did for last day, so that no one looks lazy or seems not to work.\nIn the spiral model however, no member has to tell what he did so far, until he/she is done with it.\n\nDisadvantages:\n- A very huge problem will arise if any team member leaves the project in the middle of the progress since the work is dependent to the human resources. Example: When a developer leaves the project while creating a new app, there will be a lacunar increment that need to be fixed by someone else probably having another mission.\nIn spiral model however, a member leaving is handled in the risk analysis part\n\n- Meetings held every day can sometimes disappoint team members, since they don't see the progress they make, as a feature does take a while to be completed, not just a day. Example: some developers want to implement a GUI similar to Facebook app, but while they everyday show their work, they don't really observe how much progress they have done, since the progress is too small for everyday.\nIn spiral model however, meetings are not periodic and do not affect the members' enthusiasm and will to work.",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5621332,
      "meta": {},
      "text": "SCRUM that is often used today to manage the development of (software) projects. The method defines a procedure consisting of meetings, tools and roles within the team that is a flexible framework and divides the process into manageable tasks and tries to have a \"prototype\" product from the beginning that is being improved and completed from sprint to sprint.\n\nI will discuss this model with the example of a software application that shall be used to host online events for a huge company.\n\nSCRUM is flexible to change. If the previously defined requirements in the product backlog are changed by the customer, they can be quickly adapted. E.g. the client initially wanted to host everything in 3 main stages but then added a fourth stage, then is put in the product backlog and can be added in the next sprint.\nThe spiral model is not completely different because we can also add functionalities later in the process thanks to the iterative nature of the process. but as the phases in the spiral model are planned beforehand it is not so easy to vary in such a flexible way as SCRUM does it.\n\nFurthermore you continuously adapt and improve the process thanks to the daily SCRUM meetings and sprint review meetings/sprint retrospectives and thus significantly decrease the risk in a project. The team always knows whats going on in the project thanks to the daily meetings and can reschedule or change tasks if they don't fit in their current workflow. For the spiral model you the success of project based on risk analysis in the beginning.\n\nA disadvantage is that you cannot clearly plan the project in terms of time and thus money, as you don't know how many tasks will be completetd in a sprint. Our customer may want a deadline of e.g. 2 month which cannot be well predicted beforehand. Das Spiral model allows an exact cost- and quality estimation beforehand. \n\nLastly the huge amount of meetings is often crizized because you may not need to communicate your current staus to the whole team every day. If you are e.g. still working on the same GUI of stage1  the next day you may be bored in the daily sprint meeting. In the spiral meeting you usually only have 4 meetings but also a high management and documentation overhead for those phases ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621830,
      "meta": {},
      "text": "Core essence:\nSCRUM is a project Management approach with an iterative character that focuses on been able to adapt to change and reduce project barriers by regular communication. Iterative means that there are several sprints after each of which an evaluation of the current status and the target takes place. By meeting on a daily basis it is supposed to be ensured that everybody is well informed about the work of the team members and can quickly adopt to change.\n\nAdvantage 1:\nChanges in the target state are considered on a regular basis which allows it to quickly adopt to these changes. If further research by the product owner discovers that the software needs an additional functionality this functionality could easily be added to the product respective sprint backlog. In the spiral model this is not really possible since each iteration has one specific focus (e.g. during the integration and system test iteration it is not possible to introduce new software requirements).\n\nAdvantage 2:\nImplementation is done by feature which ensures that after each sprint there is a working system that could be applied for some use cases. in developing a calculator this could mean that the calculator after the first sprint could already do addition but not subtraction. In the spiral model addition and subtraction would both be available after the final iteration.\n\nDisadvantage 1:\nEspecially in large teams, SCRUM requires a lot of communication, which uses resources that could be spend on development. Instead of coming together every day and having lengthy discussions the scrum members should focus on the main topics: goals and barriers. The spiral model as well is a very complex model which probably also requires a lot of communication. Thus, it is not planned to have daily meeting on the development.\n\nDisadvantage 2:\nIt is hard to estimate when the product will be finished. Since new requirements can always be introduced. This could for example lead to an infinite loop where the product owner keeps coming up with new requirements. In the spiral model this is not possible.",
      "score": 100,
      "language": null
    },
    {
      "id": 5622177,
      "meta": {},
      "text": "Core Essence of Scrum:\nScrum is a framework that allows teams to address and adapt too rapidly changing requirements / situations and still productively deliver products with high value. It allows teams to learn from experience, self-organise and reflect on good and bad aspects in their workflow to constantly improve. \n\nAdvantages: \n- Short Sprints enable constant improvement in workflow based on feedback. This makes development more effective.\nExample: One team member wants to create a class Car. Another Team member wants to implement the driving method of a subclass of that Car (Fast car). They notice that only one person should focus on working on similar classes because this is more efficient. If the sprint is short, this can be addressed in the sprint review meeting and improved in the next sprint. \nComparison: Sprints and feedback is not as frequent in spiral model but still frequent enough to be able to handle continuous risk analysis. \n\n- Effort of each person in the team is transparent. This helps identify weak links and motivate members. \nExample: Let's say we have a team of 5. 4 of these members constantly report their achievements of the previous day. One person continuously lacks progress. Using these daily meetings the scrum master can identify the weak link and talk to the member.  \nComparison: Effort and progress is not tracked as strictly within each iteration but still after each spiral in the review and plan phase. Length of each spiral is variable. \n\nDisadvantages: \n- Daily Meetings can frustrate team members and waste time. \nExample: Daily meetings can waste time if not used efficiently, if members for example small talk, keeping them from doing work. \nComparison: In the Spiral model it is more important to work with experienced experts on risk analysis, which means tracking and help is not as important, but increases cost of project. \n\n- Adopting Scrum in large teams is challenging \nExample: With a huge development team, that all work on the same product, communication can for example be very difficult and the larger meetings get, the less value they provide to each team mate. \nComparison: For large projects that cannot be split down into sub projects, Spiral model is recommended. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622297,
      "meta": {},
      "text": "The core essence of SCRUM : Software development is nowadays seen as an empirical process that needs to react to changes and deal with them. The agile methodology of scrum allows perfectly to work on complex adaptive projects while change occurs. The basic idea is that after the project kickoff meeting the team creates the product backlog and then start sprints of 4-weeks usually where they pull items to work on (sprint backlog) and do daily meetings to discuss the progress . A sprint is finished by a sprint review meeting and a retrospective meeting and the team has then a potentially shippable increment.\nAdvantages of Scrum : \n1- scrum allows the team to react to changes in the requirements. It is a very flexibl process.\nThe product Backlog can always be modified (add new features / client wants to change things). The sprint backlog can also be always refined. So there are no milestones in the development process.\nexample : when a new feature is required, this can be added to the product backlog and considered in the sprints\nWhereas the spiral model can deal with changes between activities but does not allow changes within an actitvity.\n2- At the end of each sprint the team has a potentially shippable increment as each sprint focuses on the incremental creation of a working system. This gives the team the chance to show the progress and the current system to the client to get direct feedback on an early stage and be on the same page. Another advantage is that it is then possible to focus on early vertical integration.\nexample : at the end of each sprint you can show the customer the current working version of the system \nAlso in the spiral model that it is iterative, software is early developed and this type of development helps you improve your product by revising, redoing and reworking parts of the system. The spiral model primarily deals with many types of unplanned hazards, however, there is minimal client engagement.\n\nDisadvantages of Scrum:\n1- Scrum can be complex, too strict and frustrating because of all the needed meetings especially daily ones and the amount of responsabilities during sprints.\nexample : in order to succeed, scrum projects need high discipline and involvment of all the team\nThis can also may be the case in the spiral model because good expertise is needed as the project is highly dependent on risk analysis. \n\n2- Scrum projects do not have a definite timeline and the  work is based on each sprint, that's why projects can get drawn out for longer than they are supposed to. There is no specific final iteration because Scrum is focused on continuous improvement. On the other hand the spiral model has a well defined plan as it will go through nine iterations and on each one of them go through the 4 activities.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622937,
      "meta": {},
      "text": "Scrum is an agile development methodology that deals with interruptions in Software development based on an iterative and incremental process. It emphasizes teamwork, accountability and iterative progress toward a well-defined goal.\n\nAdvantages of Scrum\n1)Flexibility: Teams have to adapt their tools and processes to new circumstances as they happen. As product definitions change during the development process, teams can deliver those changes within a few iterations. Product backlog meetings enable teams to rearrange priorities before products are moved into the sprint.\n\n2)Reduced risk: Scrum focuses on a predictable, sustainable delivery pace and consistent feedback that gives teams a chance to mitigate risk early and often. Short sprints let teams fail fast if an idea doesn't work, keeping the risk of failure manageable.\n\nDisadvantages of Scrum\n1)Implementation\nIf employees and/or top managers don‚Äôt take seriously the need for fundamental training, don‚Äôt understand the principles behind the Scrum framework, or don‚Äôt want to put their efforts into this training, it may be difficult for both top managers and team members to implement it successfully. \n\n2)Predictability\n Scrum provides detailed estimates only for one sprint. It‚Äôs focused on continuous improvement, consequently, it may happen that the project runs over time or exceeds budget.\n\nSCRUM vs Spiral model\nWhile the main principle of Scrum is to achieve agility and be prepared for changes that may happen during development, the main principle of the Spiral model is risk handling. The Scrum model is suitable for large projects that are easy to divide into small parts that can be easily developed incrementally over each iteration.\tThe Spiral model on the other hand is suitable for those projects that are prone to various kinds of risks that are difficult to anticipate at the beginning of the project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644510,
      "meta": {},
      "text": "Often described as an agile project management framework, Scrum includes meetings, tools, and roles that work together to help structure and manage teamwork. There is a product backlog, which defines the (future) requirements of the product. Some developments of that are defined in the Sprint backlog, are developed during one Sprint (about a month), in which daily meetings ensure communication and progress and are delivered in the Sprint Increment.\n\nAdvantages:\n\t-Large projects are divided into easily manageable sprints:\n\t\tDeveloping the bumbers game with many different cars with different properties maybe can't be \t                       |               reached in one step. Therefore splitting requirements into smaller steps and sprints ensures a usable |\t\tgame after each Sprint and with each sprint new features will come into the game.\n\t-The team gets clear visibility through scrum meetings:\n\t\tWith daily meetings and updating team members about their progress, it's nearly impossible that two |\t\tdevelopers will develop the same feature. This could lead to problems because time would be wasted |\t\tand also competence and knowledge of other team members would not be used. It could happen, that |\t\ttwo developers would implement meanwhile in bumber a fast car in a completely different style and |\t\tthat leads to problems. \nDisadvantages:\n\t- The framework can be successful only with experienced team members\n\t\tIf the Scrum-Master or the Product owner doesn't have enough knowledge about SCRUM this could |\t\tlead to an uncoordinated team and bad developing progress. If the Product Owner for example defines |\t\tthe wrong goals the team would develop without any profit for the final product.\n\t- Adopting the Scrum framework in large teams is challenging:\n\t\tFor example, if there are 10 members in a team, a daily meeting would take 50 min. or some members |\t\tcould not participate right and tell their progress. That would lead to ineffectiveness.\n\nIn the spiral model the implementation of the project is not divided into separately steps/goals threw several time sections.\nIn spiral model is nothing(no rule or event) defined for communication and no meeting as well as no communication is guaranteed.\nFor spiral model no further specific experiences are needed: There don't exist special roles.\nDeveloping in huge teams is always challenging, but in spiral model nothing is defined for interaction between developers, so there is no direct problem with this model and huge teams.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619434,
      "meta": {},
      "text": "Scrum can be considered as a divide & conquer method. The team break the work into sprints(goals), each takes commonly 2 weeks. In each sprint, the team have daily meeting(daily srum), where they discuss and assess progress in approx. 15 min or less.\n\nIn comparison to spiral model: \nExample for spiral:\nExample for Scrum:\n\nAdvantage 1:\n\n\nAdvantage 2:\n\n\n\n\nDisadvantage 1: Scrum meetings may frustrate team members, because sometimes frequently meetings does not make sense, as not much work has been done in a very short time.\nDisadvantage 2: Since in scrum we complete every feature/functionality by increments, we can't have a big feature done in an early stage if we need to test its full functionalities early.\n",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620741,
      "meta": {},
      "text": "Kernidee von Scrum:\nDie Grundlegende Idee von Scrum ist ein agiles System zu sein. Das besondere an Scrum ist, dass es auf regelm√§√üigem Feedback, Anpassung der gestellten Anforderungen und stetiger R√ºckmeldung √ºber den Stand des Projektes aufbaut, wodurch verh√§ltnism√§√üig schnell, Hindernisse, Unklarheiten und ineffzientes  Arbeiten erkannt und umgangen werden. Eine weitere Besonderheit ist das Unterteilen der Arbeit in Zyklen, die jeweils a, Ende ein theoretisch fertiges Zwischenprodukt liefern. \n\nVor und Nachteile:\nEin Vorteil von Scrum ist die schnelle und direkte Kommunikation. Die Kommunikationswege sind sehr kurz und f√ºhren zu einem schnelleren Arbeiten. Zum Beispiel ist man aus verschiedensten Beh√∂rden oder Unternehmen B√ºrokratie und langes Warten gewohnt, da die Kommunikationswege schlecht aufeinander abgestimmt sind und durch verschiedenste Hierarchien muss, sodass nur die Kommunikation den Gro√üteil der Zeit in Anspruch nimmt. Durch verschiedenste Scrum Meetings, reviews etc wird dies beim Scrum Konzept elegant umgangen, da hier eine Regelm√§√üige Absprache √ºber die aktuellen Anliegen mit allen Mitarbeitern stattfinden.\n\nEin weiterer Vorteil von Scrum ist die kontinuierliche Verbesserung, selbstreflektion und Optimierungen zu nennen. Durch die verschiedenen reviews werden ineffizientes Arbeiten erkannt, die notwendige Kommunikation verbessert und das Entfernen des Teams von den eigentlichen Anforderungen effektiv verhindert. Bei Baustellen passiert es zum Beispiel nicht selten, dass im Nachhinein noch einmal gro√üe √Ñnderungen vorgenommen werden m√ºssen, weil nicht stetig √ºberpr√ºft wird, dass man sich an den Richtlinien und Vorgaben des Kunden h√§lt. \n\nEin Nachteil von Scrum ist die schwere Koordination bei Gro√üprojekten. Da zum Beispiel bei einem bau einer Banksoftware verschiedenste Teilgebiete behandelt werden m√ºssen, und ein Scrum Team nicht zu go√ü sein sollte, da sonst die Koordination sehr schwer wird, ist die Koordination zwischen den einzelnen Scrum Teams enorm aufwendig, vor allem wenn zum Beispiel zwei Teams zusammen arbeiten m√ºssen.\n\nEin weiterer Nachteil kann die Sprintplanung darstellen. So muss man f√ºr diese, gut einsch√§tzen k√∂nnen was machbar ist. Wird zum Beispiel zu viel in einen Sprint gepackt, ist dieses nicht zu schaffen, sorgt f√ºr Stress und ein ungenaues Arbeiten. Gibt es zu wenig im Sprint zu tun, kann dies zu unausgesprochenen Erweiterungen f√ºhren, oder man verschwendet Zeit.\n\nVergleich Scrum und Spiral Modell\nW√§hrend Scrum eine stetige schnelle Absprache w√§hrend dem Projekt hat, hat das sprial Modell immer wieder Phasen der Planung, in denen versucht wird, alles im Vorhinein festzulegen. Daher gilt das Sprialmodell nicht zu\nden agilen Modellen. Die stetige Reflektion und Optimierung ist kein Teil des grundlegenden Spiral Modells. Das Sprial Model kann im Gegensatz zu Scrum besser mit Gro√üprojekten umgehen. W√§hrend die Sprints von Scrum eher von kurzer Dauer sind, und so die Aufgaben f√ºr einen Sprint leicht √ºber oder untersch√§tzt werden k√∂nnen, f√§llt dies bei der langen Zyklusdauer des Sprint Modells kaum ins Gewicht. Sprint Dauer liegt meistens bei 2 Wochen, die Zyklusdauer vom Spiralmodell um die 6 Monate.\n\n\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 5621412,
      "meta": {},
      "text": "SCRUM ist eine Methode um ein agiles Projektmanagement zu f√ºhren. Es besteht dabei aus regelm√§√üigen treffen zwischen den Entwicklern des Projekts und dem Besitzern des Projekts. Im groben kann man sagen, dass man bei scrum eine Liste an Aufgaben hat und in jedem Zyklus sich vornimmt einige dieser Aufgaben zu erledigen, sowie den Prozess in dem Zyklus zu evaluieren.\n\nSCRUM hat genauso wie alle Vorgehensweisen verschiedene Vor und Nachteile. Eines der gr√∂√üten und meiner Meinung nach wichtigsten Vorteile ist Flexibelit√§t und Agilit√§t, welche man durch das frequente und adaptive Planen erh√§lt. Projekte sind √∂fters mal sehr Umfangreich. Nimmt man zum Beispiel eine Social Media Plattform die Entwickelt werden soll, kann es schnell passieren, dass der Product Owner m√∂chte, dass ein Feature, wie das erstellen einer \"best-friends\" list m√∂glich sein sollte. Bei Scrum kann man dies nun einfach mit in das Product Backlog aufnehmen ohne einen ganz neuen Plan Schmieden zu m√ºssen. Diesen Vorteil hat das Spiral Model auch. Dort ist die Struktur zwar nicht die selbe, jedoch sorgt das zyklische verhalten auch f√ºr ein gewisse adaptivit√§t.\nDurch diese Adaptive Planung von SCRUM hat man jedoch keinen Gesamt√ºberblick, √ºber den kompletten Verlauf des Projekts. Ist ein Projekt beispielsweise stark unter Zeitdruck, wie das Entwickeln einer Corona-App, kann es sein dass man nicht gut einsch√§tzen kann wann die Aufgaben vollendet werden und das Projekt Lieferungs bereit sein wird. Beim Spiral model besteht dieses Problem auch und es ist zudem auch noch kosten aufw√§ndiger, durch die Risikoanalyse.\nBei Scrum steigt, aber auch die Effektivit√§t,da der Verbessurungsprozess kontinuierlich bleibt und durch den Backlog sichtbar ist. Man teilt bei SCRUM n√§mlich das gro√üe Projekt in kleine Projekte, welche individuell in den SCRUM sprints erledigt werden. Dardurch hat man jeden Sprint ein klares Ziel vor Augen, was beim Entwickeln von einem gro√üen Online Shop vielleicht sonst nicht der Fall w√§re. Dies ist beim Spiral Model auch der Fall, jedoch wird es durch die Backlogs bei SCRUM noch deutlicher\nJedoch haben die gro√üen Projekte auch Nachteile f√ºr SCRUM. Man w√ºrde n√§mlich wie beschrieben die Aufgaben einteilen und bei sehr gro√üen Projekten auch nochmal einzelen SCRUM Teams bilden. Diese zukoordinieren und wieder zusammenzuf√ºhren zu einem System kann zu Schwierigkeiten f√ºhren. Zum Beispiel muss die kompatibelit√§t bei der zusammenf√ºhrung stimmen, sowie design Entscheidungen. Das Spiral Model ist f√ºr gro√üe Projekte zugeschnitten, da die Risikoanalyse im laufe der Zeit besser skaliert.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622884,
      "meta": {},
      "text": "Scrum ist ein Programmablauf, bei den man nicht linear an einem Projekt arbeitet. Ein Scrum Team besteht aus 3 verschiedene Rollen. Zum einen gibt es den Produktbesitzer, welcher seine Anforderungen an die Software gibt, dann gibt es den Scrum Master, welcher den √úberblick beh√§lt und f√ºr den generellen Prozess verantwortlich ist. Zuletzt gibt es noch das Entwicklerteam, welches dann das angefragte Produkt vom \"Produktbesitzer\" realisiert. \n\nZuerst erstellt man einen Product Backlog, in dem man alle ben√∂tigten Requirements f√ºr das Projekt festh√§lt. Dies passiert im Project Kickoff Meeting. Anschlie√üend gibt es einen Sprint Planning Meeting, wo man dann am Anfang jeden Sprints, ein Sprint Backlog anfertigt. Nach jedem Tag gibt es dann ein Daily Scrum Meeting, in dem jedes Mitglied auf den neusten Stand gebracht wird, was die Fortschritte der anderen angeht. Ist ein Sprint dann endg√ºltig zu Ende, wird ein Sprint review Meeting abgehalten, in den man das realisierte Backlog item dann dem Produktbesitzer pr√§sentiert. Danach gibt es ein Sprint Retrospective, wobei man den vorherigen Sprint genauer betrachtet, damit der n√§chste Sprint verbessert ablaufen kann.\n\nDie Vorteile sind relativ offensichtlich. So ist es einfacher, bei gr√∂√üeren Projekten aufgrund der Sprints die √úbersicht zu behalten und effizient zu arbeiten. Au√üerdem bekommt man beim Daily Scrum Meeting immer zeitnah Feedback, um Verbesserungen zeitnah und schnell vornehmen zu k√∂nnen, ohne dass bereits sehr viel weiter gearbeitet wurde. \n\nAber nat√ºrlich gibt es auch Nachteile vom Scrum. So ist es sehr schwer zu koordinieren, falls das Entwicklerteam zu gro√ü ist. Auch m√ºssen die alle Mitglieder passend sein und sich kooperativ zeigen.",
      "score": 8.3,
      "language": "GERMAN"
    },
    {
      "id": 5644391,
      "meta": {},
      "text": "Scrum is management technique, which is based around agile approach and its main focus is to constantly adapt to change, while working in small, constantly meeting, giving feedback teams. The work is divided into 2-4 week-long sprints, during which team focuses on some functionalities (while meeting every day and at the beginning/end of sprints) and develops potentially shippable product increment each time.\nThe main advantage of scrum is agile approach, which means that product can constantly change. For example, if client wants to change something in product you can easily modify product backlog. Another advantage is constant communication, feedback (during daily scrums, sprint meetings). Since the client is part of the team, they can overlook project at all times, which allows better communication. Scrum master giving feedback makes it easier for the team members to know what they can potentially change. For example, if expectations of client seem unrealistic there is always space to clear everything out and create reasonable product backlog.\nThe main disadvantage of scrum is that it is team based - it works if everyone is working. The division of tasks for sprint has to be realistic for team. For example, in our team project currently only 3 people are working. 2 others left within sprints, which meant that rest had to modify tasks and expectations. Another disadvantage is that this system may not seem intuitive at first and does require experience. For example, giving meaningful feedback requires knowledge about what to focus on.\nSpiral model, which is an iterative model, is scrum alternative. It requires more planning at the beginning of each phase making it less flexible and agile than scrum although requirement changes can be made after the development has already started. Contact with client is also present throughout the process although not on daily basis. This system requires even more experience and understanding, since it includes more documentation and following the procedures closely. Lastly, this model also requires teamwork ‚Äì it is necessary for everybody to work in order to be able to fulfil the goals and move from phase to phase.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644741,
      "meta": {},
      "text": "Scrum is an agile software development model. With this model, you can control software development even in an environment where requirements and resources are constantly changing. This is achieved by direct and frequent communication between all team members and the product owner.\n\nAdvantages:\n\nScrum can quickly adapt. It can be used for a variety of different fast-changing environments and scenarios. For example, if a team member of the development team can't deliver his work due to sudden health problems, his workload can be divided between the other team members within a day at the daily scrum meetings. In the spiral model, such a situation can only be dealt with at the end of an iteration, as the planning of the next iteration is at the end of the last one.\nScrum improves customer satisfaction. In scrum, direct communication with the product owner is highly encouraged. For example, if the team delivers a product increment and the product owner then wants other features, more requirements can be defined and added fairly easy and early enough. In the spiral model, there is usually no input from the product owner beyond the first definition of requirements.\n\nDisadvantages:\n\nScrum requires a lot of training and experience to use. Every team member needs to understand the benefits and details of this model. For example, inexperienced developers can have problems with performing their tasks quickly and successfully. The spiral model, on the other hand, is very easy and straightforward to use and usually doesn't require the understanding of the whole team for every process.\nScrum can not always be used for all types of projects. It doesn't work well for projects that require a well-defined plan. For example, when building a series of cars you want every car in that series to be the same, therefore you need to build them all on a well defined and predictable plan and scrum should not be used for this. The spiral model would definitely be a better fit for this type of problem, but similar to scrum also not great.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619423,
      "meta": {},
      "text": "- Scrum is a method to allow teams to work in parallel, iterating and producing potentially shippable increments every sprint (roughly two weeks), after which retrospective and review sessions are held to inform the next planning cycle, which creates a subset of the product backlog (which contains all items), the sprint backlog (only containing necessary tasks for the next sprint).\n\n- Advantage: For Scrum, work can happen in parallel. At the beginning, a team may define interfaces, which one part of the team implements and the other part of the team tests against. In the Spiral model, tasks can only happen one after another, limiting the team output.\n- Advantage: Scrum has a clear timebox of up to one month, usually in the range of two to three week sprint cycles. The Spiral model does not require a timebox, which can drag out projects and increase risk.\n- Disadvantage: Scrum has the potential to be conducted in a way that undoes the advantages: When work is carried over to the next cycle automatically, deadlines are not met, and work does not stop after the cycle ends because a product is deemed to important, there is no system to keep the team in check. The same can happen in the Spiral model, as it doesn't define deadlines to begin with.\n- Disadvantage: If not managed, teams will product ever-growing product backlogs that contain items that may no longer be relevant for the current stage of the product. Going through the backlog becomes a role of its own. The Spiral model does not have any backlog, objectives are decided ad-hoc in the first iteration step.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619461,
      "meta": {},
      "text": "1. Core Essences of SCRUM\n- Scrum is a widly used framework in agile project management\n- Scrum allows us to adapt to new requirements and changed circumstances during the development process\n- Due to many different meetings the teams communication improves, daily meetings and short discussions decrease the risk of going in the wrond direction\n\n2. Advantages of Scrum\na) The Product Backlog can be adapted, lfunctionalities can be added, changed or deleted\n\tE.g. our Bumpers example from the lecture; the customer decided to change the collision functionalites; they \n\tcould easily be adapted in the product backlog during the development process\n\tSpiral Model: the spiral model allows also changees but only between activities, during one iteration tasks \n\tcan not be adapted\nb) Scrum includes many communication loops, that reduces the risk of loosing direction\n\tE.g while implementing Bumpers the team has daily meetings. They mention milestones and difficulites. \n\teveryone is informed. Problems can be tackled early.\n\tSpiral Model: Also includes communication loops but not on an equal frequent basis. Usually meetings are \t\t\t\t\n\theld between activieties not during the activities.\n\n3. Disadvantages of Scrum\na) Scrum includes to much communication loops. That takes unneccessary time.\n\tE.g. a team is working on a standardized product. Tasks are always the same and change does not occure. \t\n\tThe communication loops would take a lot of time and are not needed\n\tSpiral Model: The spiral model has less communication loops. But if no change occures it would also not \n\tbe the best framework since communication and organisation is still to much. The waterfall model would \n\tbe more appropriate for example.\nb) Scrum is not very straigth forward in means of prediction models. It is not possible to break the process down into 10 tasks for example and predict the accurate duration of the project.\n\tE.g. The managers want to know when Bumpers is finished. Since change is occuring frequently, it is hard \t\t\t\n\tto predict the duration. It is not possible to say we are half done since five out of ten steps are completed\n\tSpiral Model: It is easier to predict the duration since the spiral model includes nine iteration\n\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621134,
      "meta": {},
      "text": "Scrum ist eine agile Projektmanagement-Methode, bei welcher alle Anforderungen des Projekts auf verschiedene Sprints, also zwei-w√∂chige Arbeitseinheiten, aufgeteilt werden. Der Ablauf eines Sprints ist fest definiert, so werden besipielsweise daily scrum meetings, ein planning meeting am Anfang des Sprints und jeweils ein review meeting und ein retrospective meeting am Ende des Sprints abgehalten. Au√üerdem gibt es verschiede Rollen innerhalb des Scrum-Teams, die sich um das Management, die Spezifikation der Anforderungen sowie die Umsetzung k√ºmmern. \n\nAuch Scrum bietet allerdings Nachteile - einer davon w√§re der h√∂here Aufwand f√ºr Fortschritts√ºberwachung. F√ºr den Manager des Projektes ist es schwieriger den √úberblick zu behalten als in lineareren Modellen. So ist es beispielsweise notwendig regelm√§√üigere Meetings abzuhalten und das Ergebnis jeden Sprints genau zu analysieren, da sonst viel Zeit \"untergehen\" kann. \n\nAu√üerdem ist der Aufwand der Kommunikation sehr hoch. Wie bereits erw√§hnt gibt es viele feste Meetings, die nat√ºrlich Zeit ben√∂tigen. So w√§re es beispielsweise denkbar, dass die Zeit effizienter in die tats√§chliche Entwicklung der Software gesteckt werden k√∂nnte anstatt sie in Meetings zu \"verschwenden\". \n\nIm Gegenzug ist Scrum daf√ºr auch deutlich anpassbarer - agiler - als viele andere Methoden. Mit jedem Sprintbeginn startet ein neuer Arbeitsabschnitt und der Kunde kann neue Anforderungen anpassen. Zum Beispiel k√∂nnten sich die functional requirenments √§ndern, weil der Kunde nun doch eine weitere Funktion haben m√∂chte, die anfangs nicht angedacht war. \n\nDes weiteren ist es durch gezielte Auswahl und Priorisierung von Aufgaben aus dem Backlog m√∂glich, nach jedem Sprint ein potentiell nutzbares Produkt zu haben. Mit jedem weiteren Sprint werden dessen Funktionen erg√§nzt. So kann am Anfang beispielsweise mit dem \"Grundger√ºst\" f√ºr das Projekt gestartet werden und nach und nach jede Funktion erweitert werden. Am Ende hat man immer einen, f√ºr den Kunden, vorzeigbaren Fortschritt und kann sich zuerst auf die wesentlichen Dinge konzentrieren. \n\nVergleich zu Spiral Modell:\n\n\nAuch das Spiral Modell ist komplexer als lineare Modelle und somit schwieriger zu √ºberwachen. \n\nKommunikation ist flexibler bzw. nicht durch das Modell festgelegt. \n\nAuch im Spiral Modell ist es m√∂glich, sp√§tere √Ñnderungsw√ºnsche zu ber√ºcksichtigen. (Phasen)\n\nAuch im Spiral Modell entsteht nach jeder Phase ein vorzeigbares Produkt. Die Priorisierung ist allerdings schwieriger.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5623059,
      "meta": {},
      "text": "(SCRUM SUMMARY) Scrum is a way to manage a software lifecycle, it has a team consisting of a product owner, scrum master and developers. The two most importants  of the control model are the sprint and daily scrum, daily scrum is the model of daily increments and sprint is a bigger one which consists of several daily scrums and the end of it the project has a potentially shippable product increment.\n(+1) I think the main advantage of scrum is that it is split up into small parts (daily scum) and this way it is much more managable. The spiral model doesn't really have a time limit.\n(+2) Scrum is better for paralell work as othen than the scrum meetings, sprint reviews, the tasks and developers don't have dependencies on each other.\n(-1) One disadvantage is that although the time of the sprint can be changed, it is a little bit rigid, not that flexible, it is very hard to see how long a task, increment can last. The spiral model is more task focused which can be more flexible.\n(-2) In the spiral mode objectives, alternatives and contrainsts play a bigger role than in the scrum model. Scrum doesn't really have an integrated part for alternatives and tasks.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644736,
      "meta": {},
      "text": "SCRUM is about developing software in an agile way that can handle change. There are a lot of meetings to improve communication and prevent problems from occurring and development is done in short \"sprint\" periods, which all end in a shippable product increment. There is a scrum master (organizer/mediator), a scrum team (usually developers) and a product owner (communication with the client).\n\nadvantage 1: can adapt to change\ne.g. the client suddenly wants a new feature. It is simply added to the product backlog and will be considered at the next sprint planning meeting. Everything flows smoothly.\n<-> spiral: the spiral model can also do this, but not as well as SCRUM. Everything follows one big plan, you don't make new ones (sprint plan) constantly. It can adapt, but it's a bit different.\n\nadvantage 2: risk prevention through communication\ne.g. one of the developers runs into an issue they don't know how to solve. It is brought up at the next daily scrum meeting, and a way to solve the problem can be found together, instead of having to wait a long time until it is brought up.\n<-> spiral: the spiral model is very heavy on risk prevention. More than SCRUM is.\n\ndisadvantage 1: hard to do in large groups\ne.g. you want your company to use SCRUM, but your development team has 20 members. You can't do a daily meetings with all of them every day and not enough communication is possible. It's also hard to coordinate.\n<-> spiral: spiral model is also good for large groups because of its clear structure and not as many meetings as SCRUM\n\ndisadvantage 2: a lot of training is needed\ne.g. you want your company to use SCRUM, but no one really knows how to do it. You have to spend money and time to train all your employees to do it and hope it goes well.\n<-> spiral: the spiral model is more simple than SCRUM, so you don't need as much training. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644859,
      "meta": {},
      "text": "Scrum is a methodology of agile software development focusing on communication and relationship between the team members being responsible for developing output. The core is to split up a major task into more lower tasks (product backlog) which are processed during the sprints in order to achieve product increment. These sprints are carefully planned before and revised afterwards in order to increase productivity and applied iteratively over a certain amount of time, mostly 4 weeks. One sprint usually takes a day.\nThe major advantage of Scrum is that you can react to change nearly immediately meaning within an activity. For example if the product owner wants a new feature of the software instead of an existing one you are informed about this change in the sprint planning meeting and you will be able to resolve it. On the other hand in the spiral model you can only react to change between activities. \nFurthermore you are pretty flexible when it comes to the order in which to do the tasks and you can jump between activities. For example if you are currently working on object design and the customer wants a new feature you easily jump back to requirements analysis. Furthermore you are nearly completely free in deciding what you want to do next. On the other hand in the spiral there is this concrete order of iterations you have to stick to and you can not jump back to another iteration.\nBut where is light there is also shadow. When applying Scrum you are always in danger of planning your sprints to defensively which will waste a lot of time. For example if you plan to fulfill only 2 tasks in a sprint but you are finished way more earlier than you expected, you will be annoyed beacuse you could have done another one. But this danger also exists in the spiral model as you also have to plan the iterations in this model.\nMoreover Scrum requires a huge effort of coordination and communication. It is a disadvantage as it poses the threat of misunderstandings which will waste time and money. For example if you do not clearly set boundaries for each team member of what to do and what not, they might do the same leading to redundancy.\nAs this is very common in team projects it is also likely to happen in the spiral model.\n\n",
      "score": 87.5,
      "language": "ENGLISH"
    },
    {
      "id": 5621321,
      "meta": {},
      "text": "*Welcome_to_my_presentation_about_the framework_of_SCRUM!*\n\nHow does it work: The requirements of a eg. software product are listed in the product backlog and are then divided into Sprint backlogs, each Sprint lasts between 2-4 weeks and the team works during that time on the items of the Sprint backlog. Every day they hold a daily SCRUM meeting and at the end of a sprint, they have a potentially shippable product increment. It's a constantly iterative process and afterwards, there's a sprint review&sprint retrospective where they (SCRUM Master, product owner, and developers) reflect on the sprint and adjust things going forward. \n\nAdvantages:\n- There exists frequent&continuous customer communication as it is very common to receive internal&external feedback for each product increment. Eg. The product owner talks to the client after each sprint and the client says he doesn't want FR9 in the product backlog anymore. \nIn the spiral model there's less customer communication but still interaction with them at each \"phase\". \n\n-  It comes with lower overhead costs because less documentation is required. Eg. \"user stories\" help to report what a user needs/does. However, these are often handwritten on cards. In comparison, the spiral model needs extensive documentation to assess the risks for each phase. \n\nDisadvantages:\n- It can be hard to provide an estimation of the time, budget and scope of the overall project since all these parameters are only based on the specific sprints&personal deadlines. Eg developer John only has a personal deadline end of July (first sprint), however, it is hard to tell with certainty when the project will be finished. \nIn the spiral model, project length can be unlimited because of its spiral behavior.\n\n- It requires changes in the overall organizational structure and extensive training, thus this can come with higher costs and effort. Eg, SCRUM cannot take place in a company with a traditional hierarchical structure as cross-functional teams are needed and a scrum certificate needs to be renewed every 2 years. The spiral model also requires such an organizational structure and is hard to implement in a hierarchical structure. \n\n\n\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621577,
      "meta": {},
      "text": "SCRUM is a framework used for agile software development. It consists of several sprints, meaning ca. 2-4 week work intervals, where a team of developers with a scrum master and product owner work on a certain set of goals and keep each other updated and communicate daily on short meetings.\n\nAn advantage of scrum its flexibility and adaptability. Thanks to the monthly sprints, if there is any change in the customers requirements the team is able to adapt and make changes in the next sprint. Also thanks to the daily sprints and meetings, there should be no lack of communication and any rising issues can be solved (almost) immediately.\n\nAnother advantage of scrum that after each sprint there is always an increment, another part of a working, potentially shippable product, added to the results of the previous sprints, so the customer has always a part of a working product at his disposal and doesn't have to wait till the very last moment to see the whole product built together.  \n\nWhat's not so great about scrum is that the customer, the product owner, is required on site or at least to be somehow present during every scrum meeting, which might be an issue, when the customer likes to do thing more in the traditional, old-school way, meaning that he only wants to give the team the requirements and a certain budget  but doesn't want to actively participate in the whole development process.\n\nMoreover scrum also doesn't really support old hierarchical structures, so if the enterprise already has a predefined structure, redoing and rebuilding the whole structure system might be too expensive (in terms of time and energy).\n\nHaving a look at the iterative spiral model, we can see that the spiral model also works in cycles not completely dissimilar to sprints but the cycles are already predefined with a certain activity and is therefore much less flexible. Spiral model despite being non-linear still works quite horizontally on the product, still in the bottom up version, unlike the very vertical nature of scrum work.\nThe customer also doesn't seem to be as crucial during the development in the spiral model as in scrum, so they can just pop in in the beginning and at the very end.\nAnd lastly spiral model doesn't seem to necessarily affect the hierarchy of the enterprise of there is one.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644276,
      "meta": {},
      "text": "Scrum:  Scrum is a method where teams work together to develop a product. The product Owner orders the work for a complex problem into a Product Backlog. Product development with Scrum is done in small pieces (during a sprint), with each piece building on the pieces previously created. \n\n+ Developing products in small pieces encourages creativity and allows teams to respond to feedback and change and develop exactly what is needed. \n‚Üí example: Developing a weather application using the Scrum method allows developers to minimize the bug field, as each sprint meeting discusses development and improvement and plans to fix some bugs. (Developments are coded and tested during the sprint review)\n** Compared to Scrum, the Spiral model is not suitable for low risk projects.\n\n+ Cost and Delivery prediction :As the Scrum process enforces the members to interact with each other, the entire team and customer will get to know how much time and effort they are going to spend in the development process. Which makes easy for analyzing the Cost and effort for delivery and allows a fast development.\n‚Üí example: For example, customers want their products to be developed quickly and using Scrum is the best way to give them a time prediction.\n** the Spiral model presents difficulty in time management. As the number of phases is unknown at the start of the project, so time estimation is very difficult.\n\n- When a team member leaves in the middle of a project, it can have a huge negative impact on the project.\n‚Üí example: For example, if a team member responsible for implementing a database leaves in the middle of a project, it causes a lot of problems (tasks have to be redistributed...).\n** By the Spiral model, leaving some members leads to the same problems.\n\n- The chances of project failure are high if individuals aren't very committed or cooperative.\n‚Üí example: If the team members do not work in a comfortable atmosphere, the risk of project failure is high, since Scrum consists of a team working and not just being a group.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644444,
      "meta": {},
      "text": "Scrum ist eine agile Methode des Projektmanagements, welches die Personen in Product Owner, Scrum Master und Entwickler zuteilt und dessen Ziel es ist sich fr√ºhzeitig auszutauschen. Es beinhaltet ein Product- und Sprintbacklogs, welches bestimmt was zurzeit bearbeitet werden muss und man trifft sich regelm√§√üig in t√§glichen Meetings und Meetings zum Planen bzw. R√ºckblicken von Sprints.\n\nScrum hat eine hohe Transparenz, da durch die regelm√§√üigen Meetings und Backlogs klargestellt wird was zu tun ist und Fragen k√∂nnen beantwortet werden, wohingegen das Spiral Model nur eine lineare Abfolge an Aufgaben ist.\nZudem hat es eine hohe Flexibilit√§t/Agilit√§t, da die Planungen adaptiv gestaltet sind und mit Ver√§nderungen des z.b. Productbacklogs umgehen kann. Das Spiral Model ist jedoch linear und kann mit Ver√§nderungen gar nicht umgehen.\n\nBei Scrum kann es jedoch zu Zeitverlusten kommen, dann wenn das Team bei den Sprintplanungen zu ‚Äûdefensiv\" ist und pro Sprint weniger macht als es k√∂nnte.\nEs kann auch zu Verunsicherungen kommen, da es keine Zust√§ndigkeiten und Hierarchien gibt, die klarstellen wer f√ºr was zust√§ndig ist.",
      "score": 70.8,
      "language": "GERMAN"
    },
    {
      "id": 5644662,
      "meta": {},
      "text": "SCRUM\n\nThe SCRUM method or technique is a way to manage a rapidly changing system with fast changing requirements. By an extremely improved communication scheme and a focus on cooperation, SCUM offers the opportunity to minimize risk by working in parallel in an agile process. Therefore, a product backlog is written, everyday daily meetings are held, every 2-4 weeks a big sprint is done, everything is document in the weekly sprint backlog and eventually a possibly shipped product is created.\n\nA huge advantage of SCRUM is the efficiency in which a product can be shipped, due to its adaptability to fast changing products. The team works together more quickly and therefore money and time (in general resources) are being used more essentially. Due to the hard deadlines and daily updates the whole team is responsible for the processing of the weekly sprint backlog and furthermore the product changing so rapidly that the changes have to be made in time. For example, in our own EIST group we can see that we work a lot faster if we set ourselves goals and stick to the backlog. In the spiral model, it is possible that the product is worked on efficiently but it is also possible that the time to the different prototypes get higher and higher without even knowing.\n\nUnfortunately, this is also possible to be happening in SCRUM. The so called scope creep leads to a project getting larger and out of control. This is happening because while there are daily and weekly scrum meetings, there is no real end and one can lose oneself in the details. You can see this in extremely detailed games where special areas are designed and made nicely but other essential parts have a lot of bugs and problems. But like already said this can happen in the spiral model as well and basically is part of many frameworks.\n\nThrough the use of daily/weekly meetings, SCRUM is highly adaptable to feedback from customers. This often leads to invisibility of the project but not in SCRUM due to the efficient communication and management. If a the product owner wants quick changes this is possible in no time and won't be finished until the prototype is done like in the spiral model. It can be made and tested quickly and higher adaptable, which is a big advantage.\n\nAt last but not least, SCRUM project members have to be experienced and it gets harder with the rising numbers of team members. If team members do not have a certain level of knowledge it is not easy to coordinate this kind of challenges. This is due to the high dependency on other team members and communication skills, many developers unfortunately do not have. The spiral model is a lot easy for new beginners or people having hard times to meet daily for the same project. It is still possible for them to work efficiently in the given frame.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644671,
      "meta": {},
      "text": "In essence, SCRUM is an agile lightweight framework which can be used by teams and organisations when it comes to product/software development. With 2-4 week sprints the teams communication and product  development is way more optimised in comparison to traditional development techniques, as well as the management of the entire project with introducing multiple product increments and reviews.\n\nAn advantage of SCRUM is that it's highly adaptable and flexible which is useful when dealing with a project that doesn't have a clear roadmap yet. MVP development for example is a prime case for SCRUM because one deals with very limited specifications and can therefore develop the MVP roadmap with each sprint further and further efficiently. The spiral model however can't develop these MVPS as quickly as SCRUM. Another advantage would be its incentive for creative approaches. Taking the MVP example again, we can use SCRUM to find creative solutions for the development of the prototype because the project is being split up into multiple teams, wherefore these teams can focus more on their individual task. The spiral model with its fixed four quadrants does not support that.\nHowever, the SCRUM framework requires rather extensive training to be used efficiently. Everyone in the project management team needs to know their role & the process of SCRUM in order for it work, which makes it difficult to implement in for example bigger and more traditional organisations. It's for example more time intensive to re-train the entire BMW Engineering Team to use SCRUM than making them use department project management frameworks that already work. The spiral model on the other hand is very straight forward, meaning it can be adapted fairly quickly.\nAnother disadvantage of SCRUM would be its difficulty to scale on to bigger projects. SCRUM is mostly popular among startups due to their initial small project complexity and size, however when trying to apply SCRUM to big scale Automotive projects for example it swiftly becomes very uncoordinated and chaotic when not managed precisely. The spiral model on the other can manage these scales.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620964,
      "meta": {},
      "text": "Scrum ist ein Vorgehensmodell, welches heutzutage vor allem in der agilen Softwareentwickung seinen Nutzen findet. Bei diesem m√∂chte das Team die Anforderungen des Product Backlogs, die f√ºr den Sprint Backlog nach Dringlichkeit geordent werden, in paralleler Arbeit erf√ºllen. Zur Kommunikation h√§lt das Team soganannte Daily Scrum Meetings, um sich √ºber die aktuellsten Fortschritte auszutauschen.\n\nScrum erm√∂glicht eine hohe Flexibilit√§t und Agilit√§t durch selbstst√§ndiges Arbeiten in seinem eigenen Bereich. So kann das Team sich abh√§ngig von Ver√§nderungen anpassen und oft ohne schwerwiegende Verz√∂gerungen weiterarbeiten. √Ñndern sich z.B. die Anforderungen bei einem Kinosystem in der Funktionsweise des Ticketbuchens, so kann das Team den Anforderungen ohne gro√üe Hindernisse nachgehen. Das Spiral Model hingegen ist sehr starr, da es in feste, abgeschlossene Schritte eingeteilt ist und somit nicht gut auf Ver√§nderungen reagiert.\n\nDurch regelm√§√üige Meetings und Backlogs wird eine hohe Transparenz geschaffen. Dadurch, dass bei Scrum mehrere parallele Teile gleichzeitig bearbeiten werden, wei√ü man welche Person f√ºr welchen Arbeitsbereich verantwortlich ist. So kann man die Anforderungen, die f√ºr z.B. f√ºr eine Datenbank des Kinosystems auch der Person geben, die die Datenbank implementiert hat. Beim Spiral Model arbeitet das Team gemeinsam an einem einzigen Bereich, wobei unklar ist wer etwas mit der Information anfangen k√∂nnte.\n\nEin Nachteil von Scrum ist, dass es keinen Gesamt√ºberblick √ºber die komplette Projektstrecke gibt, sodass das Team schnell den √úberblick √ºber den Fortschritt des Systems verlieren k√∂nnte. Es gibt zwar den Sprint/Project Backlog, der zeigt welche Schritte bearbeitet wurden oder nicht, jedoch ist es sehr schwierig zu bestimmen wie weit man genau mit dem Projekt ist. Das kann zum Beispiel beim Zeitmanagement zum Problem werden, wo es eine bestimmte Deadline gibt. Das Spiral Model hingegen legt klar fest, welche Komponente nun in Bearbeitung stehen und wie viel vor dem Beenden des Projekts noch liegt.\n\nEin weiterer Nachreil ist die erschwerte Koordination mehrerer Teams vor allem bei Gro√üprojekten. Scrum erm√∂glicht eine hohe Flexibilit√§t auf Kosten der Schwierigkeit zur Koordination. Dadurch, dass jeder an seinem eigenen Teil arbeitet, besteht die Gefahr, dass man sich zu sehr auf den eigenen Teil konzentriert und alles drum herum vergisst. Dadurch, dass Kommunikation haupts√§chlich in den Meetings stattfindet, kann es zur erschwerten Koordination kommen. Es kann zu Missverst√§ndnissen in der Implementierung vorkommen, wenn eine Person z.B. die Steuerung einer Spielfigur mithilfe der Maus implementiert hat und die Person, die f√ºr das Interface verantwortlich ist, dachte die Figur w√ºrde sich mithilfe von Pfeiltasten fortbewegen. Beim Spiral Model wird ein Teil nach dem anderen im Team bearbeitet, sodass es seltener zu solchen Missverst√§ndnissen kommen kann.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621974,
      "meta": {},
      "text": "Scrum is a technique in the Software development to deal with changes. It manages the development oft products with often changing requirements. It also improves risk management with different methods.\n\n2 Advantages:\n- big projects can be divided into easy manageable sprints so you can work more precisely. For example if you have a big Software projects to manage it will be difficult to hold the overview and with scrum you would be able to divide it in different sprints a focus on each of them.\n\n- also the effort of each worker can be seen at the daily scrum meetings, because everyone has to say how far they did come. Because of that the scrum master can see who did well and can adopt the team. For example someone does always bad process so the scrum master may kick him out.\n\n2 Disadvantages:\n- scrum is completely team based and if someone doesn't work good it will effect the whole team negatively. For example someone gets a task which is maybe a small one but very important for the whole projects and he/she doesn't do it. It will automatically delay the whole process.\n\n- also using Scrum in large teams could be difficult, because the more people in a team the more difficult it will be to manage them and also the more time delays will happen. E.g. for a team with less persons it will be more easier to communicate and cooperate and so they will also achieve faster and better results.\n\nComparison to Spiral model:\n- with the spiral model you can also divide a big project in 9 iterations but it is not as efficient as Scrum\n- you probably cant see as good as in Scrum the effort of each team member\n- because spiral isn't as team based as Scrum a wrong of an individual would not effect the whole team like in Scrum\n- large teams are also probably not a big problem like in Scrum because there are not daily meeting where all team members have to take part or something like that.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644341,
      "meta": {},
      "text": " Scrum is a framework for developing, delivering, and sustaining products. It is based on iterative and incremental processes, which means it is adaptable, fast and flexible by means of transparency in communication, collective responsibility and continuous progress.\n\n One big advantage of Scrum is that large projects can and are split into small and easily manageable parts called sprints. In that way the workload can be spread more evenly during the development and between the different people working on the project, ensuring and effective use of time and money. Another benefit of Scrum is the clear visibility provided by the daily Scrum meetings, that allow changes based on feedback from every member go the team, as well as the ability to view the work of each person.\n\n A disadvantage of Scrum is that is can be difficult to adapt in larger teams, in which case communication can be harder, even if the team is split in smaller groups. A second disadvantage the difficulty of implementing quality, because the requirements could change from day to day. A way to deal with this is through an intensive testing period, during which changes to the project are limited as much as possible.\n\n In comparison to Scrum, the project isn't split in sprints. Instead, the work is done over 9 iterations with each iteration following a 4 major activities, during which a linear model is used, which means that adaptability is harder to achieve. Also, the communication between members of the team is more limited that in Scrum, which could lead to a less transparent development process and harder changes to the product. However, in comparison to Scrum, the Spiral model is easier to adapt in larger teams thanks to the whole team working on the same problems at all times. Not only that, all risks and problems of the project have to be tested at the end of every iteration, thus keeping quality high at all times.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644774,
      "meta": {},
      "text": "Scrum is used to organize large software projects. One of the core essences of Scrum is breaking down larger pieces into smaller goals that can then be accomplished in a timely manner called sprints. These sprints can be held in parallel and include a daily meeting to review progress and discuss next goals.\n\nPros:\n1.) Scrum is well suited for small teams because the organization is easy to handle thanks to the (e.g. daily) meetings.\nIn contrast, the spiral model is more difficult to reconcile with small team sizes, since the distances between the goals are much greater and this also increases the susceptibility to errors, since the progress is only discussed at longer intervals.\n2.) Changes can also be made fairly quickly due to the daily summaries and meetings, making the whole team very agile.\nAlso in this example are the greater distances to the intermediate points a hindrance and a reason why the spiral model cannot be as agile as the scrum model is.\n\nAn example of these benefits would be our Eist project, in which we have weekly meetings to set further goals for our project. Despite the relatively large gap of one week between the meetings, this still allows us to be very flexible and, due to our smaller team size, to react quickly to changes or improvements.\n\nCons:\n1.) For a successful scrum team, it is essential that the team is well attuned to meet the required times. If this is not the case, it will be difficult or impossible to meet the deadlines that have been set.\nOn the other hand, the spiral model does not have to be rehearsed in this way, since the goals are usually set in such a way that what was agreed for the next goal has been documented very well.\n2.) In order for Scrum to work, you need a team that can communicate very well, since the (daily) meetings have a high communication rate. Neglect or poor communication quickly degenerates into delays in the entire project.\nCommunication is also not unimportant in the spiral model, but the fact that meetings do not take place every day means that the volume is significantly reduced.\n\nFor example, the spiral model is used by companies working on large, complicated, and expensive projects because it has the advantage over the scrum model of always weighing and considering risk. A possible project for this would be e.g. a nuclear power plant, the failure of which would lead to a great tragedy.\n\n\n\n",
      "score": 87.5,
      "language": "ENGLISH"
    },
    {
      "id": 5619627,
      "meta": {},
      "text": "Scrum is an agile lifecycle model, which is well adaptable to changes. The team iterates on a continuous  product increment, organizing the development process via meetings, product & sprint backlogs & various roles for each member of the team. The customer can always redefine requirements.\n\nOne advantage of Scrum is that the team members stay connected & always know which person works on what.  The scrum backlog of every scrum sprint ensures nobody works on something somebody else does & ensures having measurable goals (=> tasks) that should be achieved.\nFor example, without Scrum, a team member might work on a feature another colleague is already working on, resulting in having made a feature twice. By having many organized meetings, each member can get to know each other better, strengthening the team. Scrum is the only model with clearly defined meetings.\nAs the Spiral model has no backlog, task collisions can occur.\n\nAnother advantage is its adaptability to changes. With Scrum the changed requirements can be included in the next scrum sprint. Additionally, each subsystem is mostly developed in a nonhierarchical, simultaneous manner. This means that big changes in individual subsystems are easier, because they are not fully developed yet, in comparison to sequential development. => It is possible to deliver a product, which the customer can test & give new ideas, which become new requirements, ensuring customer happiness.\nFor instance, a customer dislikes the user interface. They can then advise on how it should look & it can be redesigned without having to remake the entire UI, as it is not fully developed yet.\nOnce a phase is done in the Spiral, the feature is not worked on anymore. Changes are harder to implement.\n\nThe many meetings can also be a disadvantage, as they take lots of time & might be uncomfortable for unsocial developers. For instance, certain developers only want to actually code, but has to spend hours in weekly meetings. This is inefficient.\nThe Spiral also has phases & often makes use of meetings, too (=> same problem).\n\nScrum is hard to track for managers, as it doesn't have clear milestones. This might lead to an incomplete product, for example if a developer didn't achieve all tasks of the scrum sprint (e.g. sickness), they have to be moved back into the backlog, delaying work.\nThis shouldn't happen with the Spiral, because the most important tasks with the highest risks are worked on first.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620637,
      "meta": {},
      "text": "What is the core essence of Scrum?\nThe essence of scrum is agile and adaptive software development. Unlike a linear process, scrum is performed parallel with multiple tasks being worked on the same time. The use of a product backlog and the 2-weekly iterations and reevaluations allow a highly adaptive and responsive development style.\n\nAdvantages\nPotentially shippable product after a short time\nEach sprint (a period of 2-4 weeks after which goals are reevaluated) has the goal of delivering a potentially shippable product. As rough as the product can be, after 2-4 weeks at least something can be delivered.\nThis makes it especially good for applications that need to be maintained and or need to get out quickly.\nNegotiability\nAfter every Sprint, new items are added, older ones are possibly updated. This constant replanning not only guarantees agility but also ensures that goals can be reevaluated. The non-hierarchical structure of the teams also allows input from all sites and promotes negotiations.\n\nDisadvantages\nFormlessness\nScrum doesn't work as affective add kickstarting new projects with a specific end-date. Scrum isn't made for linear and single-goal oriented structures because of its agility.\nTeamwork\nThe nature of scrum requires motivated and well trained team members. If team members aren't motivated and independent thinkers, the decentral nature of scrum fails.\n\nComparison to the spiral model\nWhile the spiral model is an iterative model, SCRUM is an agile model. Meaning that unlike the spiral model, scrum doesn't assume that when a task is finished it never needs to be worked on again. \nAlso, the spiral model seperates the development with the goal of delivering a final product. Scrum on the other hand has the goal of delivering a usable (and potentiall shippable) product after every cycle. \nScrum also doesn't structure the development cycle in different parts with different objectives, instead each cycle, goals and objectives are chosen fluidly at the start of each sprint.",
      "score": 85.4,
      "language": "ENGLISH"
    },
    {
      "id": 5622209,
      "meta": {},
      "text": "Scrum is a project management framework that provides a structure for agile software and product development in general where dealing with frequent changes is to be expected. It involves various techniques and methods ,identifies  team roles and employs an incremental and iterative approach to divide complex problems into smaller parts to work on in short  time intevals and incrementally provide solutions for them. \n  Scrum is flexible and adaptable  : it is not only applied in software development but also in different domains \n where a flexible approach to solve problems is optimal. It does not provide a fixed set of rules for the team to follow but leaves a room for them to adapt it to their specific situation. For example scrum was used by : intel to reduce cycle time, the braintrust consulting company to help the H&R block consumer tax preparation service transform their business by bringing in agile and scrum methodologies and successfully applying them.. \n\nScrum encourages active involvment of product owner and  stakeholders throughout the product development process. For example  customers give feedback to the shipped product increment after the sprint which the team members can consider to apply necessary changes during the next sprint. The constant external feedback can result into a higher quality product that satisfies the client requirements.\n\nHowever scrum  can lead to scope or requiremets'creep. For example new requirements are constantly added over the project life cycle which makes the development more complex especially that there can be no definite end date and the project manager has to keep the project on track.\n Scrum relies on the commitment and cooperation of team members as well as their experience which increases the chances of failure in case for example a member drops out in the middle of the project.\n\nComparing the scrum to spiral model, the latter allows for changes between activities but not within a single activity so if changes happen more frequently scrum is more beneficial. It also invloves identifying risk and trying to resolve them in each iteration but if the risk is not solved, the project ends whereas scrum improves risk avoidance by improving communication, team work..\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622908,
      "meta": {},
      "text": "Scrum is agile way of dealing with constant change. There are three roles which are the \"product owner\", \"Saum master\", Scrum team members and these roles iterate through the scrum process. It begins with the product backlog goes to the sprint backlog where the requirements are defined. Then there is a sprint which takes 2 to 4 weeks and daily scrum meeting for better communication so that at the end of the sprint a \"potential product \" is created. \n\n+ An advantage with scrum is that it is focused on an agile workflow which removes unnecessary work. This helps with rapid change that occurs. If the customer suddenly changes his mind regarding the usability of the system you are developing right now it is easy to implement that drastic change. The overall reason for the spiral model is risk handling which makes it less agile.\n\n+ Scrum can be used for large projects which can be subdivided into smaller groups. This makes big projects like game developing much more applicable because you can divide the work like the \"divide and conquer\" method. The spiral model is typically not used for that instance but mainly for projects that include various risk factors which can not be analyzed before hand.\n\n- If you have a project that can't be subdivided into smaller groups it is hard to do it with Scrum. An example would be a project where you constantly need to reassure your work with someone else. That is not the case when the team is using the spiral method because there you can work with larger groups. \n\n-Scrum does not use any risk handling. When you have a project that is particularly risk tolerant scrum is not the way to go. On the other hand this would be the perfect case to use the spiral model because it constantly handles risk with risk analysis.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623073,
      "meta": {},
      "text": "Scrum is an iterative, incremental and agile software development method. There is a 2-4 weeks ‚Äûsprint‚Äú, with a ‚Äûsprint backlog‚Äú (items which have to be done during this). After each sprint, the backlog should be implemented and a potentially shippable product increment ready. Before and after each sprint, there is a meeting to discuss the progress. If anything changes during the development process, the developers can adapt very easily.\n\nOne huge advantage is that developers can incorporate feedback from customers/stakeholders quickly during the development process, since the product owner and stakeholders are present at the sprint review meetings. If there‚Äôs any misunderstanding about something, the customer can immediately tell the team so that there won‚Äôt be a disaster when the final product doesn‚Äôt meet a requirement. In the spiral model, developers don‚Äôt present to the customer until the product is finished.\n\nWith the help of Scrum, a team can complete a project deliverable quickly, since there‚Äôs a potentially shippable product increment after every sprint. It‚Äôs easier for the customer to see the progress of the product. When developing Bumpers, first there only was basic ‚Äûcars crashing each other‚Äú, later there were new sounds and collisions etc. In the spiral model, the product deliverable is only available at the end of the development process.\n\nThere are disadvantages to Scrum. Team members can get frustrated with the daily meetings. For example, when they have a problem with a specific feature, it can be frustrating to have to tell the team several days in a row that they couldn‚Äôt yet solve the problem and have not been able to work on other backlog items. With the spiral model, there are only meetings when planning the next iteration.\n\nSince Scrum is for smaller teams and every team member has a vital/specific role to execute, it can have a huge negative impact on the development if one of the members leave mid-development-process. For example, there is a team of 5 (Scrum master and developers), the developers have been assigned a specific function. If one developer leaves, the other 3 have to take over the tasks of the fourth, which can result in a way too heavy workload for them and throw off their schedule. In the spiral model the team usually is not as small as with Scrum.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620543,
      "meta": {},
      "text": "In SCRUM you are first mainly concerned about a project kickoff meeting, in which you create a product backlog (priotized by the product owner). This product backlog contains all the tasks which has to be performed at the current state (change can occur) and is used in the sprint planning to create subtasks for the developers team, called sprint backlog. From there the development teams works on their sprint tasks for a fixed intervall, in which the meet up every day and create a hopefully shipable product increment which will be discussed in further meetings, called sprint review and sprint retrospective. \nFirst advantage of SCRUM is, that you can adapt change way easier than in the spiral model because of the daily meetings but also in the changeable product backlog. In the spiral model you can deal with change only inbetween activities and not whithin an activity. \nWhen the product owner for example has another need or see a market move towards a new trend he could write new backlog items or update old ones and repriotize them as he wants to. \nAnother advantage is, like in the spiral model, that you can integrate testing activities in the development phase. \nE.g. when the product increment is discussed in the sprint review meeting, it could get tested and pushed back into the backlog if it does not work like expected. \nA disadvantage is the higher chance of failure, when developers can not compete with deadlines and therefore all the items falls back into the backlog and onto the shoulders of fewer other team members, which then starting to struggle. The same problems can occur in the sprial meeting. For example when a developer is not that commited to a project and therefore priotizes wrongly and in conclusion gets a bad feedback in the sprint meetings he looses even more motivation which can lead to failure. \nDaily meetings are hard to implement in large teams, while in the spiral model you do not have these daily scrum meetings, only again in the planning phases. It's difficult to ask your employees to present their results every day, because, for example, things sometimes don't work according to plan. In addition, it is simply difficult to plan meetings with several people, to schedule them and to have a meaningful conversation at the end.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621705,
      "meta": {},
      "text": "Scrum is a process framework used to manage product development and a technique that deals with interruptions. While using Scrum teams can establish a hypothesis of how they think something works or a backlog they will finish in the coming sprint, try it out, reflect on the experience, and make the appropriate adjustments to handle changed requirements\nAdvantage:\nLarge projects are divided into easily manageable sprints.\nWe can assign part of our product backlog into a sprint backlog to reduce complexity under the concept of divide and conquer. When designing a flight service for an airline, we can design an in-flight service in the first sprint, and then we can develop the booking system in the second sprint.\nWorks well for fast-moving or changeable development projects.\nIn the Scrum process, we have not only sprint meetings, but also daily meetings. If changes happen, team members can discuss it earlier and come up with solutions. If the product owner wants to add some new functionalities, we can receive this message immediately and handle it in this sprint by holding the daily meeting.\nDisadvantage:\nScrum often leads to scope creep, due to the lack of a definite end-date\nFor developing software, we need many sprints that can be changed according to our progress, so we don't have a specific deadline. When developing the flight service, due to changes or some unexpected happenings we have to finish the tasks that ought to be done in only one sprint in more sprints.\nDaily meetings sometimes disappoint team members\nHold daily meetings might be helpful, however, the frequency of it might be a problem. Since for each progress, we need more than one day to make, if the meetings are held everyday, members might get bored.\nWhen designing the flight service, each development of the interface will last 2 days so daily meetings will be boring.\n\nThe spiral model is a risk-driven model that is also suitable for long-term projects where requirements may change between the project. But it's not agile like putting problems into subproblems to handle.\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622279,
      "meta": {},
      "text": "Scrum is an agile methodology based on empirical processes and encompasses multiple sprints of 2-4 weeks. During each sprint, the team (product owner, scrum master, development team) work together to create a product increment resulting in a shippable product. The sprint is guided by a sprint planning meeting (the sprint backlog is decided based on the product backlog and defines the sprint's goals), daily scrum meetings to stay up to date on the sprint's progression, as well as a sprint review and retrospective meeting.\nScrum allows effective reaction to change. Since each sprint delivers a shippable product, it is easy to modify requirements, e.g. if the product owner decides that the product already satisfies his demands, he can stop the process prematurely. The spiral model on the other hand is an iterative model so change during one iteration, can provoke reiteration or cancellation of the project. It is less flexible than Scrum.  Furthermore Scrum reduces risk since all parts of the project are developed in parallel. The product owner can give feedback on the product after sprints. If a certain feature is not to his liking or does not work, it can be changed. This is similar to the spiral model, as each iteration produces a prototype which can then be critiqued. Furthermore each iteration includes tests and risk analysis. On the contrary, Scrum necessitates good team work. Without good communication paralleled processes might clash. It can particularily be difficult for larger teams. Since the Spiral Model is generally more structured, it can be easier for less tightly knit teams, however since the structure is quite complex, it might also take some getting used to. Furthermore, Scrum is prone to scope creep, since there is no particular number of sprints. A product owner can choose to add requirements after each sprint, setting back the finish deadline of the project. For the Spiral model on the other hand, the four activities of each iteration are applied in 9 iterations. This might seem more predictable, however similarily iterations can be repeated or added due to unforeseen changes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622719,
      "meta": {},
      "text": "Scrum is an agile development method which uses close communication, feedback and an iterative approach in order to minimize uncertainty and risks. During sprints, incremetal changes to the final product get developed and deployed which splits the whole project into smaller subtasks.\n\nAn advantage of scrum lies in its flexibility it provides, each sprint new objectives can be set and already finished stages can be done over again if there is a need to. For example if the client of a project realises that a component has to be altered to fit his needs, the team is able to add this to the backlog and work on it in the next sprint. In comparision to the spiral model this is a lot more flexible because these kind of changes are not really thought of in the spiral model.\n\nAnother advantage of SCRUM is the development of a shippable product increment at the end of a sprint. It shows the client what his product will look like and enables better feedback. For example this could be very important when developing a UI and the client realises that it won't be usable for their emplyoees. In comparision to the spiral model this is very similar since there are prototypes for every iteration as well. \n\nA disadvantage of scrum is the absence of a clear project plan and therefore less possibility to create milestones and measure process. For example if you finished 50% of the backlog it doesn't necessarily mean you are halfway done with the project because certain items might take longer or new items could be added.  The spiral model is better suited in that readard, because the 9 iterations define a clear plan which can be measured. \n\nThe next disadvantage of SCRUM lies in the large communication effort that is needed to make the method a success. This is because there are a lot of meetings discussing upcoming sprints, already performed sprints and even daily updates. This could lead to problems e.g. when the client doesn't provide any feedback to the product increments. This would lead to a disruption of the whole project since it is based around communication. In the spiral model this disadvantage is less prominent since there are less planned and needed meetings.",
      "score": 87.5,
      "language": "ENGLISH"
    },
    {
      "id": 5644348,
      "meta": {},
      "text": "Scrum is an agile technique in Software development. It is supposed to help deal with rapid changes during the development process. It encourages communication between all parties to try and prevent misplanning.\n\nA clear advantage of scrum is, that the planning phase is never really over during development, so in the beginning the planning doesn't go into unnecessary detail, and later the plans can be changed to better reflect changed requirements. Something like this also happens in the spiral model, where plans for the next cycle are made in the end of the cycle before, so they can be adapted somewhat.\n\nA disadvantage of scrum are the constant meetings which the developers are going to absolutely hate. There can be meetings, that might be up to daily and the developers will complain that they do not want to be interrupted in their work that often. In the spiral model there aren't that many planned meetings.\n\nBut even though the meetings annoy the developers they can also be a huge advantage of scrum, because they enable a lot of  communication between the development team and the customer, which will give the developers a clearer vision of what the requirements really are and possible changes will be brought up to them very quickly. Where in the spiral model it would take probably until the end of the current cycle to get change requests to the development team.\n\nAnother disadvantage of scrum would be that it can be overwhelming for smaller teams, especially if they already have a large amount of communication, as the now frequent meetings will probably not really increase their communication but will still consume time out of their days, where they do not do any work, so the work that is actually getting done could be greatly diminished. This problem is not that grave in the spiral model, but especially in smaller teams it could be more useful to let them develop their own agile strategy.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644861,
      "meta": {},
      "text": "Scrum is an agile model to describe a software's development lifecycle which focuses on dealing with rapidly changing requirements. Process is conducted in sprints (2-4 weeks) and in which a potentially shippable product increment gets created from a sprint backlog (refinement of the product backlog) with vertical integration. Scrum describes the roles of a product owner, a scrum master and developers and a multitude of meetings.\nScrum has the advantage of having the ability to adapt to changes flexibly thanks to an incremental approach. This is why it is often used within startups where the situation is uncertain and the solution to the problem (undergoing changes) is not clear-cut.\nScrum also has the advantage of creating transparency for the client throw continues feedback though the communication with the product owner. So it is less likely for the client to request software that manages their shipment and then to be later dissatisfied with the results (software doesn't account for multiple packaging locations), as the client is involved in every step of the way with feedback.\nScrum has the disadvantage that it doesn't incorporate project deadlines for the overarching project which is hard to account for with an incremental approach and continuous feedback where requirements can suddenly change. So Scrum is not the ideal solution when project deadlines and plannability are required (a game accompanying cereals has to be finished before a deadline).\nScrum also has the disadvantage that it is not really scalable, as Scrum depends on small teams. It would not be practical to have a daily Scrum meeting with a thousand developers (remedy? scrums of scrum).\nIn comparison to the spiral model Scrum is better at adapting to change (spiral model: change is only possible at every iteration). The Spiral model is however better at accounting for plannability as at every iteration objectives, alternatives, constraints and risks are determined. The Spiral model has by contrast to Scrum a higher management overhead (but better for large projects). The spiral model is also not suited for smaller projects which is no problem for scrum.",
      "score": 72.9,
      "language": "ENGLISH"
    },
    {
      "id": 5619556,
      "meta": {},
      "text": "A typical scrum team consists of a product owner, developers and the scrum master. At first you create a product backlog in which all necessary parts for the project are structured. At the beginning of a sprint you take a part of the product backlog and make it to a sprint and every team member works on it for a fixed-length, so that at the end there is a meeting to evaluate the sprint with the possibility to go into the next sprint.\n\n+ team gets a clear visibility and transparency through scrum meetings, so after every sprint everybody knows what has been done and how the newly implemented sprint works. In the Spiral Model it may get confusing for everyone to fully understand how the new system works, as a lot happens through every iteration.\n\n+ Scrum works well for fast-moving development projects as you normally have a fixed time frame for every sprint, e.g. 4 weeks. In the spiral model one iteration in comparison can take way more time than a given time frame, because the complexity of a iteration may vary.\n\n- Adopting the Scrum framework in large team may be hard, because scrum meetings would take to much time and therefore not be efficient anymore. E.g. if you have a project you need 200 developers for, it's way harder to develop it with scrum, because not everybody can understand what other developers in the project are currently doing. In contrary the spiral might be better for scalability, as every iteration can be planned individually.\n\n- It might be hard to ensure the quality of the software until the team test the system hard. Normally you only implement the sprint to it's requirements, but the system isn't tested as a whole and therefore might hide a lot of inefficiencies and bugs. In the spiral model in contrary, every iteration goes through an intense testing phase and at the end of all iterations all risks and bugs should be resolved.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620206,
      "meta": {},
      "text": "Scrum is a technique of agile software development, that is ideal for dealing with changes.\nThe development team, lead by the scrum master, controls software and product development\nwith rapidly changing requirements, through their daily meetings and constant work reviews.\nThis technique greatly improves risk management through communication, revision and shorter, work \"sprints\".\n\n+Large projects are divided into easily manageable sprints.\nIn the spiral model, the work is also split into iterations, that are themselves split into different phases, \ncreating smaller achievable milestones. However, if one task is not finished within an iteration, it causes more problems, than it would if  a task remains unfinished in a sprint \n\n\n+Works well for fast-moving development projects.\nThe spiral model considers and adapts to changes as well, but the iterations are much longer, and it can not adapt as quickly as scrum.\n\n\n\n-The framework can be only succed with experienced team members and propper teamwork. \nIn the spiral model cooperation is still necessary but good teamwork doesnt seem to be as important as in scrum.\n\n-The constant daily meetings might frustratedevelopers or stress them out.\nThe spiral model doesnt suggest daily meetings, so developers dont have to constantly worry about reporting process.  ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620884,
      "meta": {},
      "text": "Core essence of SCRUM:\n- SCRUM is a framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value. Its primary objective is to satisfy customer needs through an environment of transparency in communication, collective responsibility, and continuous progress.\n\nAdvantages of SCRUM:\n- SCRUM focuses on the incremental development of the system, it enables scrum members to work in parallel (learn through experience and highly self-organized) and make sure that there are shipping products at the end.\n- Scrum works well for dynamic and rapidly changing development, as sprint review meeting enables the scrum team to take comprehends feedback given by customers and stakeholders and to constantly improve project quality and make adjustments right on time.\n\nDisadvantages of SCRUM:\n- SCRUM is more suitable for projects that can easily be divided into parts, and usually requires the use of small teams with highly experienced personnel. Some organizations may find it difficult to rearrange their workforce and huge problem will arise if any team member leaves the project in the middle of the progress.\n- Regular meetings and a highly adaptive way of working in face of dynamic changes may lead to huge pressure and depression to  team members from time to time\n\nSpiral model comparison:\n- The main principle of the Spiral model is risk handling. It mainly deals with various kinds of unanticipated risks but stakeholders' and customers' interaction is far less than the SCRUM method, which would have frequent sprint meetings after each time-box.\n- The Spiral model is more suitable for projects that are prone to various kinds of risks that are usually very difficult to anticipate at the beginning of the project.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621843,
      "meta": {},
      "text": "Core essence of Scrum:\nScrum is an empirical process control model that addresses the development, delivery, and sustainment of products in a changing environment. It is an iterative, step-by-step framework to achieve maximum predictability and also control risk. Scrum is intended for rather small teams (up to 10 people) that try to achieve their work goals in iterations, called sprints, which usually last between two weeks and one month.\n\nAdvantages:\nAn advantage of scrum is its adaptability and flexibility. For example the initial requirements - the product backlog - frequently change after Sprints, and new requirements are added. Scrum allows to adapt to these new requirements.\n\nScrum also leads to better work results, as each team member takes full responsibility for their work. There is a Scrum Master, but he does not embody the role of a strict boss who tells everyone exactly what to do, but rather that of a supportive mentor.\n\nDisadvantages:\nOn the other hand, Scrum must be learned by every team member. It therefore requires extensive training. For example, we students learn about Scrum already in university. You also have to get certified to become a Scrum Master.\n\nAnother disadvantage of Scrum is the clarity of project deadlines. Each team member must ensure that they complete their work before their personal deadline. Nevertheless, the project deadline is not taken into account, so the project manager and the stakeholders must ensure the timely completion of the project.\n\nComparison to the Spiral model:\nIn fact, the spiral model has many similarities compared to Scrum.\nCompared to the adaptability and flexibility of Scrum, the spiral model tends to prescribe the planning for the entire project at the beginning. \nThe focus of the Spiral model is on risk management, so it also strives for high quality work results. However, requirements do not usually change much during development in Spiral, while they do in Scrum.\nBoth models require highly skilled team members to execute properly.\nThe duration of a circle in Spiral is not fixed, while in Scrum it is up to one month, so it is usually shorter. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621956,
      "meta": {},
      "text": "Scrum is a framework for agile project management. It focuses on fixed sprints with a clear \"to-do\" list. The scrum process contains Sprint Planning, The actual sprint, a daily scrum, the sprint review and the sprint retrospective. In Scrum, the Teams should self prioritize and self organize their work. at the end of each sprint there should be a incremental creation of a working system. \n\nThe benefits of Scrum are, that is is very flexible, since the requirements can be changed after each sprint. For example the product owner gets feedback from the customer and a requirement changes. This can be addressed in the next sprint. \nAnother benefit is that decisions can be made fast due to small teams. In big Teams with hierarchies, it can take a while until the person is found who is actually allowed to make that decisions, while in small teams you can make decisions way faster. \n\nThe disadvantages are that there needs to be a lot of communication, which could be a waste of time when you focus to much on communication that on actual progress. For example, you meet every day for a daily scrum, but when everybody knows what is is supposed to to that could be a waste of time.\nAlso it is sometimes difficult to integrate it into existing company structures. Big company have ways that always did their work and might find it difficult to change. \n\nCompared to the spiral model, the scrum framework offers a more flexible workflow since the sprints can be adjusted more flexible. \nalso decisions can be made faster in scrum, because it has smaller teams.\nBoth the spiral model and scrum require a lot of communication, but the spiral model has a more formell structure and therefore less communication is needed. \nalso because it is more formell and sequentiell it is easier to adapt since it is less change compared to scrum. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622697,
      "meta": {},
      "text": "Scum:\nScrum is a empirical process control model. The project is divided in different phases. Every phase is named project sprint. Every day the members of the team are meeting up to discuss the upcoming tasks and there are the sprint planning meeting and the sprint review meeting. At the end you have a potentially shippable product. There are different roles such as the product owner, the scrum master and the normal team member.\n\nDisadvantages:\nScrum requires training. For everyone to deliver quick and good results, the whole team must understand scrum and how it works very well. For example if just one member doesn't understand it, he can't deliver properly and the whole team can't keep up with the deadlines. \n\nIn order for scrum to work, the teams must be small. For example of team has 100 members the daily meetings would be an absolute chaos where as with a size of 10 the meeting would be way more manageable. \n\nAdvantages: \nA big advantage for scrum is its flexibility. It fits a wide range of situations and business models. For example we used scrum in our team project and fitted it to our needs, with only one weekly sprint meeting. \n\nAnother advantage is that scrum leads to better work. For example when everyone on the team takes responsibility for his own work and results will lead to better teamwork and a better working environment. So the results at the end will be better. \n\nComparison to the spiral model\n\nAdvantages: \n\nThe spiral model isn't as flexible as scrum, where as we in our team could adapt scrum to our needs, we couldn't have done that with the spiral model, as it is very more specific with its circles and steps. \n\nThe spiral model is, as already said way more specific what to do and when. That can lead to better work too. Scrum just gives you a framework to work in where as the spiral model gives you very specific goals.\n\nDisadvantages\n\nA disadvantage of scrum was that training is required. To execute the spiral model you do need knowledge of your but as the structure is more precise you can rely on it more.\n\nScrum requires relatively small teams for it to work. In the spiral model there are tasks given, so if there are more people helping to execute these tasks it only would benefit the team\n\n\n",
      "score": 72.9,
      "language": "ENGLISH"
    },
    {
      "id": 5644773,
      "meta": {},
      "text": "The SCRUM Model is a agile model. At the beginning a Product backlog is created and used to create a Sprint backlog, containing what to do. After that the backlog items are done in sprints with weekly meetings at the beginning of each sprint. In the end of the sprint period you have the potentially finished product.\n\nThe advantages are, that:\nit is adaptable and flexible. It is suitable for a variety of problems and situations\nmany things can be done parallel. During the sprint phase nearly everything can be done independently, which speeds up the process\nit lower the costs. Many time and money consuming documentations are not needed any longer. \n\nBut there are also some disadvantages:\nNo deadline given. The project has no definitly fixed deadline\nHard to get the right quality of the product. Has to test a lot and need experienced programmers\nIts good for small projects but not for bigger ones due to a complexity problem. To many people would then attend the weekly meetings and things would overlap",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644878,
      "meta": {},
      "text": "SCRUM ist ein Modell f√ºr die Softwareentwicklung, welches den Projektablauf organisiert und beschreibt. Vor dem Hauptarbeitteil wird ein Backlog erstellt, der in kleinen Teilabschnitten, den sogenannten Sprints, abgearbeitet wird. Vor und nach jedem Sprint gibt es Meetings um die Sprints zu planen bzw. zu evaluieren.\n\nSCRUM helps the developers to get the project done quickly and efficiently. Even when there are changes in the requirements during the working time, it can easily be added and removed to/form the project backlog although they aren't handled immediately but probably in the followed sprint. If the product owner wants e.g. a feature to display his product in another language, this task is added to the backlog and mentioned in one of the next sprints.\nAnother important part of development to work efficient is the regular exchange between the developers in the daily meetings and their exchange with the scrum master and product owner in sprint meetings. Nobody is on his own for a long time and the progress can be registered with every meeting. Every single team member shows what he achieved since the last meeting and can discuss with the others about it.\n\nEven if the SCRUM-model helps to manage a project, it can easily cause problems. The larger the team gets, the more difficult it is to adapt SCRUM for them and get an overview in the meetings. Normally, SCRUM is perfect for one product owner, a scrum master and a development team of up to 10 members. The solution for more complicated or bigger projects is, to combine SCRUM with other models.\nAdditionally, the backlog threatens to become too big, so that it can't be fully worked off. If everybody adds features during the project to the backlog and focuses on them, the shippable product suffers.\n\nThe spiral model isn't agile for requirement changes, it is very linear since the implementation is one section at the end, while in SCRUM, the development as well as the backlog definition happens all the time.\nIn the spiral Model as well as in scrum, the team works together and discusses about the progress and the next steps to do.\n\nA spiral model can occupy unlimited developers, they all can get an individual task and there only must be a general exchange about the plan, because its defined before. This also causes, that nobody can change the requirements and the goal of the project can be planned to get to the end in time.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644996,
      "meta": {},
      "text": "Core essence of SCRUM:\nThe core essence of SCRUM is to develop software in a cyclic manner incrementing the potentially shipable product each time in activities called sprints. It heavily focuses on communication between the separate teams.\n\nAdvantages of SCRUM:\n- SCRUMS allows for a problem to be decomposed into smaller peaces making each workload lighter, more efficient and more controllable.\n- Another big advantage of SCRUM is the increased communication. Through daily scrum meetings and revisions every part of the project is being discussed which minimizes miscommunication and problems that could arise from it later on.\n\nDisatvantages of SCRUM:\n- A big disadvantage of SCRUM is that development time for the whole project is hard to predict as certain problems might take multiple sprints to complete and the total number of sprints is impossible to determent before hand.\n- SCRUM is also less suitable for very large projects as there are too many teams/team members to allow for efficient communication between them.\n\nIn general the Spiral uses a more systematic approach than scrum which means deadlines for example can be more easily predicted. On the other hand the spiral model is more time costly and therefore the project might take longer.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 5621061,
      "meta": {},
      "text": "Core Essence of scrum:\nScrum is a framework in agile software develpment where team work is emphasized while working in an \t\titerative and incremental way towards a defined goal. \nThereby you start with what you have and adjust iteratively and tweak while evaluating what works best for the project.\nTherefore it is mandatory to have good communication in the team and to keep everyone up to date with the changes that happened.\n\n2 Advantages:\n- large projects are split up into mangable sub tasks where you start with a simple setup and increase complexity and add features continuosly with each sprint\n- Changes based on feedback can be easily integrated. (for example: in game development each sprint can be evaluated individually and therefore proposed changes can be integrated directly) \n\n2 Disadvantages:\n- more meeting time reduces development time (because you have the daily meeting, the sprint meeting etc. there is less time for development)\n-does not come with a predictable time limit ( in large projects it might be difficult to predict cost and development time because team members might lean to scope creep and too many features are demanded because you are planning from sprint to sprint)\n\nScrum and Spiral:\n-scrum is empirical and spiral is not and therefore the project gets planned at the beginning\n-scrum is more risky that to go over the time limit which is not so in the spiral model\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621146,
      "meta": {},
      "text": "SCRUM breaks the development process down into short \"sprints\" and improves productivity by performing work in parallel instead of linear. Furthermore, it helps to reduce risk by improved communication, better cooperation, continuous integration and continuous deployment.\n\nHaving a potentially shippable product at the end of every sprint is a huge advantage of SCRUM. The Problem of \"integration hell\", where everybody works on their own code, leading to incompatibilities in the end, is avoided by this technique. In the spiral model, on the other hand, integration is only performed after everything is developed.\n\nOn the downside, this can lead to a creeping expansion of the scope of the project. As the team can try out the shippable product at every stage, they may come across things they want to add or change, although the initial plan did not include these features. Those little changes add up, making the project bigger and harder to finish and maintain. The spiral model does not have this problem, since the concept is already completed and cannot be changed anymore when the development takes place.\n\nBecause SCRUM is very flexible, it is hard to properly plan and schedule the project. Delays can occur when the team discovers a major problem in the concept, for example the choice of a technology which is not suited for the intended purpose. In that case, it might be required to go back a few steps to prevent the risk of having a nonfunctional product at the end and therefore delaying the project. Going back is not possible in the spiral model, and the project has to be terminated in such a case.\n\nHowever, this flexibility is also the biggest strength of SCRUM. It makes it possible for the team to react to changes in the requirements or in the environment, like a request for additional features by the client or a new and better framework, at any time. The spiral model cannot do that, as the concept cannot be changed later on.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621537,
      "meta": {},
      "text": "SCRUM is a agile software development framework that allows quick adaptability to changes to produce deliverables in our complex projects. It starts with a meeting where all known requirements are translated into tasks and broken down in smaller tasks. This is concluded by periodic 2-4 Week sprints, where subtasks are completed, feedback collected and goals set for the next period.\n\nSCRUM allows for the break down of complex tasks into smaller components that are worked on stepwise through sprints. For example, if a UI has to be developed, this is done incrementally over many sprints.\nFurthermore, if requirements change in a project, adaptions are quick. After each sprint, feedback is gathered and can be implemented in the next sprint. If a large database for example, relationships between objects can be easily modified.\n\nHowever, SCRUM depends on the team members. Without individual commitment, the product increment will be incomplete, and feedback cannot be gained. In backend development, if crucial tasks are not completed at the sprint end, the feedback process slows down and requires severe changes in the next sprints and possible failure.\nImplementing SCRUM requires elaborate educational changes where dedicated roles are established and understanding of employes must suffice. In an AI recognition system, if the scrum/planning responsible team member does not understand how to plan sprints, the project development will be inefficient.\n\nThe spiral model, similar to SCRUM allows for a granular break-down of complex tasks. Similar to SCRUM, those smaller tasks can be worked on step-wise.\n\nHowever, adaptions within a phase are not easily possible. After the risk assessment has been performed, the prototype will be built accordingly. This means changes are only possible after entire phases.\n\nThe spiral model is very reliant on the team members as well. However, responsibility is further shifted to the risk analysis responsibles, as a mistake there can cause an entirely useless prototype.\n\nThe spiral model requires less organizational changes, with common processes on the low-end. However, time and project management is increasingly difficult as it requires difficult predictions regarding time of implementation and costs of phases.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622021,
      "meta": {},
      "text": "Scrum is an agile process, which deals with interruptions and enables to work in teams and to adapt to changes easily. \nAdvantages of Scrum are that teams can work and complete their projects easier and efficiantly, as the taks are divided as wanted and later combined, while in spiral model the flow of iterations are fix. Moreover large projects are divided in smaller sprints, which make the project more managable and clearer, which is also the case in spiral model but as mentioned before it is not flexible.\nDisadvantages are that daily meetings can frustrate team members, as it might get too much, while in the spiral model there are no daily meetings. Furthermore, adpoting the scrum framework in large teams may be challenging, as there should be a limit in the daily meetings, which is not the case in the spiral model.\n\nScrum is more team-based and agile than the spiral model, which is more based on identyfing risks and to resolve them in an iterative way. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622826,
      "meta": {},
      "text": "Scrum is an agile software development framework where the work is done in interations and the product is developed incrementally. It involves a product owner representing the customer and other stakeholders who defines a product backlog - a dynamic and prioritized list of requirements for the product, and a development team led by a scrum master who together develop the product which meets the requirements from this backlog. The scrum team works in sprints - a work cycle lasting 1-4 weeks each, after which a shippable product increment is delivered.\n\nAdvantages:\n(1) Communication with the product owner happens throughout the whole development lifespan which results in product usually perfectly meeting clents' expectations. The PO oversees the developing stages by monitoring changes in requirements and meeting with the team regularly, identifying the points to improve, refining the process and in this way supporting the sprint. In Spiral Model, the requirements are usually discussed with the client during planning in the beginning (followed by risk-analysis by the experts), which is good for big and risky projects, but not practical for projects where the needs of client or industry change weekly.\n\n(2) Related to (1), unlimited flexibility during iterations comparing to the traditional methodologies where the cookbook approach is used. Scrum framework is empirical and the team is learning and improving on the go. In Spiral model, although iterations also happen, most of functionalities and main building blocks are defined at the beginning and only then refined.\n\nDisadvantages:\n(1) Although  daily team meetings are perfect for transparency, flexibility and the end-result of the project, this might be straining for the team members.\n(2) Due to direct communications between every team member, Scrum model requires small teams, which makes this framework unsuitable for large projects. \n\nConsidering these disadvantages of Scrum, it is safe to say that the Spiral Model is more suitable for middle- to large- projects involving big teams, and where risk-analysis is prioritized. An example would be a video game which is released once and can be purchased by user once, whereas games like Fortnite usually require high flexibility.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622931,
      "meta": {},
      "text": "Scrum consists of fixed working phases (sprints) and each sprint contains of fixed tasks that come from the product backlog. A scrum-team ideally has 4-8 developers and two special roles: The scrum master who guides the process and the product owner responsible for the customer's desires. Each sprint has recurring meetings and ends with a potentially deliverable product increment.\n\nAdvantage 1: You can adapt to changing requirements. \nIn the iterative spiral model, the requirements are all determined when the project starts. In Scrum, the requirements are adapted with each sprint - continuously reviewing and adjusting.\nExample: In Bumpers, the customer changed the backlog for sprint 3. Thanks to Scrum we could simply change the tasks for the next sprint and enhance the product increment accordingly.\n\nAdvantage 2: Clear meeting structure promotes coordination within the team and makes individual efforts visible. \nThis leads to clarity, motivation and continuous feedback. In the Spiral Model, there is no such clear meeting structure.\nExample: In our team project, we have a fixed weekly Scrum meeting to synchronize activities and prevent misunderstandings.\n\nDisadvantage 1: Scrum works best if the team is small. \nIn large teams, this can be frustrating. The Spiral Model is better suited to larger teams because of the less intensive meeting structure.\nExample: A friend of mine works with 1000 developers on a project. There its difficult to rearrange the workforce into such small teams and meetings across all the teams can be time-consuming. \n\nDisadvantage 2: Scrum can lead to uncontrollable projects, due to lack of a definite end-date. \nSince Scrum projects do not have a definite timeline and are based on each sprint, projects can get drawn out for longer than they are supposed. There is no specific final iteration because Scrum is focused on continuous improvement. In the Spiral Model, it is also difficult to plan ahead because of the risk evaluation.\nExample: A customer wanted to know when the project will be finished. But after each sprint, new requirements came and the teams themselves develop new ideas. Here it was difficult to predict an end.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644243,
      "meta": {},
      "text": "Ein Product Owner ordnet die Arbeit f√ºr ein komplexes Problem in einem Product Backlog an, anschlie√üend setzt das Scrum Team (Scrum Master, Developer) eine Auswahl der Arbeit (Sprint Planing) w√§hrend eines Sprints in ein Wertzuwachs und evaluiert den Fortschritt (t√§glich) im Daily Scrum Meeting .Das Scrum Team und seine Stakeholder pr√ºfen die Ergebnisse (aus dem Increment, w√§hrend des Sprint Reviews) und passen sie f√ºr den n√§chsten Sprint an (Sprint Retroperspektive). Dieser Kreislauf wiederholt sich best√§ndig, bis der Product Owner das Projekt als beendet h√§lt. \n\nVorteile: \n\n1.) Adaptive und flexible: \nAufgrund des Regenaustausches und der Pr√§sentationen des Inkrements mit dem Product Owners werden Fehlentwicklungen fr√ºhzeitig aufdecket und k√∂nnen angepasst werden. \nBeispiel:\nViele Softwareentwicklungen scheitern, da die Entwickler an den Bed√ºrfnissen des Kunden vorbei entwickeln, was durch SCRUM verhindert werden kann.\n\nDas Spiral model hingegen versucht auf viele unerwartete Risiken zu reagieren, wobei jedoch die Interaktion mit dem Kunden nicht so stark gepr√§gt ist, wodurch es zu Fehlentwicklungen kommen kann.\n\n2.) Durch die regelm√§√üige Entwicklung von fertigen Produktteilen sieht das Team regelm√§√üig die Fortschritte die es macht, was sich positiv auf die Motivation im Team auswirkt und somit eine h√∂here Produktivit√§t gew√§hrt.\nBeispiel:\nBereits nach der ersten Woche liegt den Produkt Owner zum Teilen ein ‚Äûfertiges‚Äú Produkt vor, wodurch das Team bereits hier seinen Fortschritt sieht. \n\nBeim Spiral model werden die Risiken regelm√§√üig evaluiert, wodurch auch wiederkehrend Entscheidungen getroffen werden m√ºssen, was eine langsamer Entwicklung zur Folge haben kann, und aufgrund der Dokumentationspflichten auch zur Demoralisierung des Teams f√ºhren kann. \n\nNachteile: \n1.) SCRUM basiert auf den Ger√ºst, dass jedes Teammitglied sich in seiner Rolle zurecht findet und die Aufgaben verantwortungsbewusst durchf√ºhrt. \nIst dies nicht der Fall kann SCRUM zu einer geringeren Produktivit√§t innerhalb des Teams f√ºhren.\nBeispiel:\nSollte der SCRUM Master seinen Aufgaben nicht nach kommen f√§llt es den Entwicklern schwer ihren Aufgaben nachzukommen, da sie auf den SCRUM Master angewiesen sind, dass dieser die Entwicklungsumgebung bereitstellt.\n\nDas Spiral model gibt keine festen Rollen vor und ist daher in der Teamstruktur flexibler was dem Teamgef√ºge ggf. besser tut. \n\n2.)\nSCRUM hat keine feste Deadline: \nDurch die regelm√§√üigen Sprint reviews/daily meetings gibt es viele kleinere Fristen f√ºr alle Beteiligten, jedoch bietet SCRUM keine Unterst√ºtzung f√ºr die Einhaltung der Gesamtfrist des Projekts. \n\nBeispiel:\nDas Scrum Team trifft sich zwar t√§glich / w√∂chentlich, jedoch sollte der Scrum Master die Deadline nicht im Auge haben, kann es hier zum Scheitern des Projekts f√ºhren.\n\nDas Spiral model basiert auf der regelm√§√üigen Risikoanalyse, wodurch eine maximale Kontrolle √ºber die Kosten, den eingesetzten  Ressourcen und Qualit√§t des Softwareprojekts besteht. \n\n\n\n\n\n\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644427,
      "meta": {},
      "text": "In today's meeting, I would like to talk a bit about a method called SCRUM that has been around for a while. \n\nSo first of all, what is scrum?\n\nScrum, some of you may have heard it as it is a definition from rugby. \nStrictly speaking, it is a way to restart the game after an interruption. Translated to software engineering, it means that it is a method that deals with constant change or interruptions as you may want to call it.\n\nHow does it contribute to software development?\nScrum is a framework where we take adaptive problems with changing requirements, while productively delivering shippable products of the highest quality.\nThe Scrum is structured as followed: \nThere is a Scrum Master who sets up an environment for Scrum. A Product Owner who makes the problem statement and defines a product backlog for it. The developer team members turn a part of the work (Spring backlog derived from product backlog) into an increment of value during a Sprint.\nThe whole team and its customer then inspect the results and adjust for the next Sprint. This Sprint process will be then repeated with each Spring hg its own fixed deadline.\n\nThese agile processes are like rugby where work is performed concurrently.\nThe strength of Scrum are in large projects. They are divided into smaller manageable pieces (Sprints) and ensure effective use of time and money.\nFor example, large projects initiated by Google, like Google Maps, need to be adapted into smaller pieces as coding such a complex program and making it work and maintainable needs to have several teams working on it. Such teams could be for mobile, desktop, and web versions of the same project. These are then called scrum of scrums.\nA Spiral model could also be adapted into a large project and will do fairly well since they can adapt the changes to the prototype per iteration. But it won't be as flexible as Scrum, because it uses a linear model for each prototype development and not as efficient since it uses a series of prototypes to resolve risks.\nAlso, Scrum, being agile, can adapt to sudden changes initiated by the customer, and developments/tests are done every Sprint which guarantees its high quality.\nFor example, if the customer does not want an already implemented program feature then a project adapting Scrum can just remove it in the next Sprint. The Spiral model is similar in its iterative manner as it is based on four activities during each iteration. These iterations are comparable to Sprints done in Scrum.\n\nStill, the downsides are firstly the fact that if team members are not as committed or cooperative as Scrum suggests then the project is prone to failure. \nFor example, if there is a team of five for a Sprint and only 2 are committed then they simply can't finish the sprint backlog and will get burnt out. If this drags on the project won't be finished as they have nothing to present after the Sprints and therefore there will not be increments of value for the end product.\nThis also holds for the Spiral model and all models in general.\nSecondly, this method only works efficiently for experienced teams that have a good synergy. Otherwise, there will be other variables dragging down the project.\nA good example is a newly formed team where the people barely know each other. Then can't assess the other person because they don't know their strength and weaknesses.\nBut this can be countered with time, as each team member adapts and the synergy will increase.\nStill, this will take a lot of time.\nGenerally, it also holds for the Spiral model, but it is not as dependent on communication and cooperation as Scrum so it does not affect the overall project as much.\n\nLastly, Scrum is an agile process where work is split up and the subtasks are done concurrently.\nIn comparison to the Spiral model which we have currently adopted, the risk management is better because of improved communication and cooperation between the developer and other scrum entities. The Sprints are repeated until the customer accepts or the project is scrapped while considering all kinds of requirement changes.\nThe Spiral model is kind of similar to Scrum with its iterations but it terminates the project if a risk cannot be resolved. The iterative model still provides a complete plan of the project which appeases the managers more than the Scrum methodology where we develop, adapt to changes, review and repeat with no further defined plan.\n\nThis is all for today, I hope to have introduced you to the method SCRUM. If there are any questions then please forward them to me.\nThank you for your attention.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5644895,
      "meta": {},
      "text": "Scrum is an empirical method in which the team plans an iteration and then execute it. Every time, team takes a small section from the top of the demands wish list, the sprint backlog, decides how to implement those sections and focuses on working with this specific section for a sprint time (2-4 weeks), before delivering it to the customer and reviewing as well as moving on to the next section. Among each section the team meet up every day to discuss and make adjustments as needed. \n\nFor example we need to design a party. In the scrum model, the first advantage is that the design can be broken down into smaller tasks. For example, first the venue, then the decoration, then the food, each time the goal is very clear and can be easier focused. While in spiral model we must simultaneously consider all those tasks. The second advantage is that responding to user change requests can happen simultaneously during the course of a project. For example when the weather condition is not suitable for an outdoor party, we can change the venue part separately and quickly while keeping the food part remained, while in spiral model we must change the whole project together after the testing.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 5620504,
      "meta": {},
      "text": "Scrum is a method for agile software development,  where a small team of developers is working together in sprints that take about 1 month. After each sprint the team added new features to the product. Another important part are the daily scrum meetings with the whole team, which makes them more flexible regarding changes from the customer. \n\nOne advantage of scrum is, that the team addes new features to the project in every sprint, but focuses on keeping is working the whole time. This means that after each sprint the product would be working and could be delivered, but maybe not every functional/nonfunctional requirement is implemented yet. For example in the flight system project the team is working simultaneously on the GUI, testing and back end. In the spiral model during one iteration every part of the implementation is done after the other but an iteration can be repeated like the sprint.\n\nAnother advantage is that with scrum problems in the system are easier to be discovered and to react to. For example with the waterfall model the system is tested at the end, but with scrum tests are implemented in the same sprint as the matching backlog item. This partly true for the spiral model because in every iteration possible risks are detected and resolved but during an iteration are no daily meetings where you could react to sudden changes.\n\nOne disadvantage might be that scrum can be hard to realise in a larger team. For example if there are too many people, the daily meetings can be too long or not everybody can get the chance to talk about their part. Also communication in general can be a lot trickier. \nThis is also true for the spiral model because generally it is harder to work in larger groups but since the spiral model does not include daily meetings it is probably not as hard to manage.\n\nAs well the many meetings can be a disadvantage to since a lot of time during the whole process is spent with meetings. For example having daily scrums can be too much in some cases, because there is nothing that changed in one day and so the developers don't need to come together for 20min.This is not true for the spiral model because there is not such a hard limit for meetings and especially no dialy meetings.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620602,
      "meta": {},
      "text": "SCRUM is an agile/adaptive working technique being used not only, but commonly in software development. It splits up a big software project into many small ones, which will be delivered as part of a so-called \"sprint\" every e.g. 2-4 weeks as a potentially shippable product increment. It facilitates work and reduces the danger of mismanagement, by implementing daily meetings, a sprint panning, a sprint review as well as a sprint retrospective, and the possibility to always add new tasks into the product backlog if changes occur.\n\n1st Advantage:\nSCRUM is an agile working technique, unlike like the Spiral Model, which works iteratively. This means, that SCRUM adapts to changes, which might occur during the software development process faster (even within an activity) than the Spiral Model. Especially when working on a rapidly, weekly changing project, like e.g. at TUM Boring, SCRUM is the way to go.\n\n2nd Advantage:\nUnlike the Spiral Model, SCRUM is quite straightforward. The concept is not that difficult to understand and no time is wasted on unnecessary complexity. Whereas in the Spiral Model, this concept of having multiple phases and iterations is more time-consuming and costly. For example, when working on a low budget with not much time left, SCRUM is an efficient way of saving time and reducing costs.\n\n1st Disadvantage:\nSCRUM can be difficult to scale and implement in bigger projects, as really good coordination (Scrum Master) and understanding are needed. For example, when working at TUM Boring, SCRUM had to strongly be modified in order to make it work in a team consisting of 40 people (excluding the operations team). The Spiral Model in this regard performs quite similarly or even worse as it is more complex.\n\n2nd Disadvantage:\nSCRUM forces the company or people, in general, to transform their organizational environment if there already exists one. For example, if a company always was structured using a grid structure, switching to SCRUM can be quite hard and pose many challenges. Switching from a spiral model to SCRUM can be much reorganizational work that has to be made.\n\n\n",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5621007,
      "meta": {},
      "text": "Scrum is a agile Project Management strategy, that works by having a concrete List of goals called the Product Backlog. The goals for the next \"Sprint\" are taken from the Backlog and then a team of developers tries to implement them while having daily meetings about their Progress. This continues until the Project is finished.\n\nAdvantages and Disadvantages of Scrum:\nThrough its flexible and agile nature, Scrum can easily react to the feedback of the stakeholder or the customer and adapt to changed Requirements. For example can a scrum master, that knows that the customer changes his mind very often, simply do only 7 days long sprints, which enable fast changes. \nWhile the Spiral Model can react to changes in requirement too but usually takes until the Review and Plan phase it starts adapting, a process that can be fast like scrum or slow, depending on the current phase.\n\nA large team often struggle to communicate properly with scrum and scrum has to be adapted to fit the Team.  A team of greater size has so much information to share that it can easily take a long time to share everything. As example the time it would take 25 People using scrum in the Stand up Meeting to  update everyone of their progress and goals might  will take over 2 hours if everybody only talks 5 minutes.  Most of the useful  information for a person could probably shared in 30 min.\nThe Spiral model on the other hand  is great for larger Teams. Its slow and clear iterations make it easy for everyone to know whats going on and what they have to contribute.\n\nEmployees that can take full responsibility for their assigned Tasks in the daily Meetings are often more invested in their Work and  have more room for their creative solutions, which  increases the quality of Software. The Spiral Model does most work in a Team, so there isn't an single developer responsible and a more uniform approach is better to make sure everyone understands it. \n\nAn Employee that takes full responsibility for their work should at best already have experience in the Area.\nThis basically means Scrum requires more experienced Developers to work efficiently. For example giving an Intern a complex task without guidance in Scrum might lead to bad results due to inexperience and drag the project down. This Disadvantage doesn't apply to the Spiral model due to working in larger Team, where there is always somebody to ask.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621351,
      "meta": {},
      "text": "1. Scrum in agile process is a technique that deals with interruptions, which not only manages and controls software and product development with rapidly changing requirements, but improves risk management by improved communication, cooperation and the delivery of product increments.\n\n2.1 Advantage:\n2.1.1 Different from linear processes, the advantage of scrum is that all process are performed in parallel, just like rugby, rather than relay races. \n2.1.2 And scrum also leads to better quality work. Having everyone on the team take full responsibility and ownership of their work can create a productive environment that leads to high-quality end results. A scrum team has a product owner, scrum master and several developers.\n\n2.2 Disadvantage:\n2.2.1 Scrum requires extensive training. Before committing to Scrum, everyone within the team needs to understand the benefits and particularities of this approach for the project to be a successful one.\n2.2.2 In addition, the Scum has a scale limit, it usually works best with teams of no more than 10, some organisations may find it difficult to rearrange their workforce into teams.\n\n3 Comparison between Scrum and Spiral model\nBoth of them have test, plan, and evaluation phases, however Scrum lacks the risk management, so it would not be recommended for long projects that has high risk, but the Spiral model highly depends on risk management.\nHowever, the scrum model has retrospective meeting, which improves the team through experiences. \n\n",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621993,
      "meta": {},
      "text": "SCRUM is a technique to manage and control software and product development when the \nrequirements and the technology may be rapidly changing during the project.\n\n2 advantages of SCRUM:\n\n1. Individual efforts of team members are acknowledged in the Daily Scrum Meetings\n- Example: in the standup meeting, every team member tells the rest of the team their status, impediments, and promises.\n\n2. Feedback and change requests can be adopted faster which leads to a software product that fulfills its requirements in a better way.\n- Example in EIST Bonus project: Tutors provide feedback after each sprint rather than at the end of the semester.\n\n\n2 disadvantages of SCRUM:\n\n1.  It works best if the team is small.\n- Example: Communication is key in Scrum, and this can be a problem in large teams. Every step needs to be thoroughly documented and addressed, which can be an issue if the team size is too large, and it can also lead to frustration among team members. Especially when each employee may come from different background. \n\n2. Teams may have difficulties to adapt to the SCRUM method because they lack experiences and expertise. \n- Example:  Scrum team members can also face difficulty adopting a completely different approach to working, and this can cause delays. Training the employees for SCRUM may cost the company more money.\n\n\nSpiral Model VS SCRUM:\nExperts recommend the Spiral Model for long projects that has high risk - the model highly depends on risk management.\n\nIn Scrum, there is no such thing as a minimal Sprint count. A project is done, when the customer accepts it. It can happen after one Sprint (very unlikely, but can happen), or after a thousand.",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 5643431,
      "meta": {},
      "text": "core essence of SCRUM: In Scrum ist das Ziel eine m√∂glichst gute Aufteilung von Aufgaben zu erm√∂glichen ohne dabei ein Projekt aus mehreren Unterprojekten zuerhalten. Dabei soll die lose Struktur, die (fast) nur kleine iterationen vorgibt, eine gute Anpassungsf√§higkeit des Projektes erm√∂glichen.\n\nVorteile:\n- erlaubt Unterteilung und Arbeiten in Kleingruppen, wodurch Geld gespart werden kann (weniger Leute, die das selbe machen und kein Warten auf andere); Bsp: Anstelle das alle bei Bumpers alles zusammenmachen, k√ºmmert sich einer um die GUI, einer um die Collisiontypes und einer um die Gameengine -> jeder in seinem Bereich Experte, niemand muss auf andere Leute warten\n\n- Durch das arbeiten in kleinen Intervallen ist die Anpassungsf√§higkeit sehr hoch, da man die Backlog items problemlos √§ndern kann -> kein Problem, wenn der Kunde √Ñnderungen am Projektplan vornehmen will; Bsp: Ein Bumpers-Kunde √ºberlegt sich nach einer Woche, dass er noch einen weiteren Collisiontype haben will -> schnelle Aufnahme in Backlog, Angewendet im n√§chsten Sprint\n\nNachteile:\n- Sehr viel Verantwortung bei einzelnen Leuten -> hohe Fehlerwahrscheinlichkeit, da alleine gearbeitet wird und nicht unbedingt jemand dr√ºber schaut -> m√∂glicherweise mehr Zeitaufwand durch √úberarbeiten von Code; Bsp: Ein unerfahrener Programmierer entwickelt einen Teil vom Projekt, der nicht funktioniert, aber das f√§llt erst auf, als sehr viele Teile des Programms um diesen Teil gebaut sind.\n\n- Jeder arbeitet f√ºr sich alleine, wodurch Menschen nicht ihre F√§higkeiten ausspielen k√∂nnen und auch kein Teamwork entstehen kann -> verringerte Effizienz; Bsp: A kennt sich sehr gut mit Datenbanken aus, aber kann B nicht helfen, da A seinen eigenen Teil bearbeiten muss.\n\nIn dem Spiral Model ist die Anpassungsf√§higkeit nicht so stark gegeben, wie in Scrum, da Sachen, die in einer vorherigen Phase erledigt werden sollten, nicht nochmal angefangen werden sollen. Daf√ºr beruht eine Arbeit nach dem Spiral Model mehr auf Teamwork, da alle in der gleichen Phase sind und sich somit helfen k√∂nnen, wenn es n√∂tig ist.\nDas Spiral Model fordert keine Unterteilung in Kleingruppen und ist auch nicht dazu ausgelegt, weshalb es schnell dazu kommen kann, dass Leute auf andere Leute warten muss und die Effizienz singt, aber daf√ºr kommt es mehr zu einem miteinander arbeiten, wodurch der Druck sinkt und damit auch die Fehleranf√§lligkeit.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 5644506,
      "meta": {},
      "text": "SCRUM is a software design technique, that deals with continuous requirements changes. The development process in divided into small sprints that concentrate on creating a potentially shippable product increment for part of the current requirements. Relies on regular meetings to divide and check smaller and smaller subtask, parallelizing the process.\nAdvantage:\n- requirements change has limited effect on undoing the progress, as it will be considered in the nearest sprint\n- product can be usable for any increment, client can see the intermediate results and adjust\nDisadvantage:\n- requires very intensive teamwork, as for a scrum team to operate efficiently the team needs to be able to perfectly split the small work in every meeting and work together\n- constructing temporary infrastructure to provide the potential shippability and testability can be inefficient compared to delaying some part of the development to a later point, like testing\nSpiral focuses on completing an early version of the system which is evaluated by the developers to start work on a newer version improving quality each iteration, while scrum completes a nearly perfect part of requirements, adding more quantity each iteration.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 5644871,
      "meta": {},
      "text": "Agile development is gaining more and more weight in the current software development industry, its most popular framework is SCRUM:  much like a rugby team (its concept is based from there) where the work is performed in parallel, SCRUM encourages teams to learn through experiences, self-organize while working on a problem, and reflect on their wins and losses to continuously improve.\nAdvantages: +Allowing to handle change(interruptions) thanks to the empirical process control model -> example: in Web Development in an environment that doesn't necessarily initially have clearly identifiable requirements and is prone to be modified based on the feedback from the customers and stakeholders, SCRUM allows a flexibility thanks to the daily/ weekly short sprints that enables this change more easily.\n+ Spiral model comparison: this iterative model doesn't deal well with frequent changes as customer interaction is not the main focus of this model. \n+The organization of complex tasks into manageable tasks makes it ideal for difficult projects -> example: developing a delivery App that allows to login, choose restaurants, navigate through a map, make a reservation, and follow delivery... consists of many subproblems that can be divided into easily manageable sprints and improvement is to be discussed in each sprint review meeting maximizing efficiency. \n+ Spiral model comparison:  The Spiral model is suitable for those projects that are prone to various kinds of risks that are difficult to anticipate at the beginning of the project as opposed to large projects that are easily divided into smaller parts suitable for SCRUM.  \nDisadvantages: - SCRUM can be a challenging cultural shift for a team -> example: if the development team is used to the spiral model, it may take time to adjust to the new concepts of SCRUM: daily scrum meetings, sprints, sprint reviews...   \n+ Spiral model comparison: the concept of this model is pretty straightforward and consists of 4 major activities mainly dealing with various kinds of unanticipated risks.\n- The chances of project failure are high if individuals aren't very committed or cooperative-> example: if a team member is slacking and not performing his task as expected, this may impact the improvement of the other teammates' work as it is interdisciplinary and if the members aren't getting along, this harms the project as SCRUM is largely based on teamwork.  \n+Spiral model comparison: the spiral model process is iterative: \"re-do/re-work something\" ‚Üí helps improve the product and not parallel: teamwork is not the main focus thus it doesn't present the same challenges of a typical team project that is familiar to SCRUM. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644928,
      "meta": {},
      "text": "SCRUM is a method for software development that enforces an empirical process by planning and working on software in iterations instead of decoupling the two processes entirely. Starting with the product manager defining the requirements of the product, in iterations (=sprint) of a constant duration (e.g. 2 weeks) the software development team handles a defined number of these requirements. During the iteration, daily brief review facilitate communication and handling change, and in the review of the entire iteration the product manager can adjust the requirements of the product again. The project is finished, when all requirements of the product are met.\n\nAdvantages:\n1. Through its iterative process, SCRUM allows for requirement changes during the development of the software. Interruptions through for example changed customer requirements (\"We want payment reminders for all orders placed on our shopping app\") can just be added to the product backlog.\n--Spiral model also can incorporate change requests in requirements through its iterative process\n\n2. Through delivery of product increments stakeholders can review the first increments of the product and change requirements. If the customer with the shopping app for example realizes that he would prefer a website over an app, then this coming up early in the project mitigates the risk of developing an entire product the customer dislikes.\n--Risk analysis is key of the Spiral model. However in an even more elaborate and more central way.\n\nDisadvantages:\n1. SCRUM requires an organised and trained team to make the process efficient. There are roles such as Product Owner and Scrum Master, that need to enforce and coordinate the process. For example if the Scrum Master is a chaotic person that is not facilitating the scrum process, but making it more unstructured, this will be extremely counterproductive. \n--Spiral model also requires that protocols must be followed strictly, otherwise it becomes inefficient.\n\n2. SCRUM focuses on feasible sprints. However,  the deadline for the entire project might get out of focus. For example despite the team constantly working on improving the software and the customer already using the first product increment, the customer might get increasingly frustrated because he needs to always wait 4 weeks until his requirements are met. \n--Spiral model likewise doesn't fix number of iterations -> may lead to problems with the project deadline.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622142,
      "meta": {},
      "text": "Core essense of SCRUM : \nProduct owner has a list of requirements for their product. A team works together to realise these requirements by splitting the project into small parts and work each part in a defined certain amount of time, which is called sprint. After each sprint, a deliverable product is delivered to product owners and the team reflects on how they worked and how to improve that, as well as determine the next part of the project to work with. \n\nAdvantages and disadvantages of SCRUM \nAdvantages : \n1. Adaptability to changes : e.g. After each sprint(which only last for certain amount of time) the product will be delivered to product owners and they can add new requirements to product backlog\n2. Clear visibility of the process : e.g. Through daily scrum meeting each team member has a clear overview of what their teammates are doing and how far of the progress they have been making \n\nDisadvantages : \n1. Experience required : e.g. if the scrum master lacks of knowledge or expertise, he/she will hardly able to give feedback to the time. Besides if team members haven't worked with scrum before, it may take time to get used to it \n2.Require a team environment : e.g. If the team is too big like 15 - 20 peole it is hard for everyone to come to terms with a decision for example it takes lots of time to decide sprint backlog\n\nComparing SCRUM with Spiral Model \nWhile SCRUM is pretty adaptable to changes during the process as the product owner can add or remove requirements after each sprint, with Spiral Model once people determine the objectives and move on to the evaluation part it's hard to change the objectives again \nBoth SCRUM and Spiral Model need people to work in a team and people should have experience already sothat the project can run as smoothly as possible \n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5644316,
      "meta": {},
      "text": "Scrum is a agile methodology used to manage product development which helps teams work together to efficiently solve a problem statement. One of the key ideas it that requirements to software can change over time due to several reasons and therfore the developement team should be able to respond to those changes even after the developement process started. This can be achieved by splitting project developement into different time periods, so called sprints, where ateam can work on software and present it to their team leader, also called Scrum Master, who himself makes sure that the requests of the product owner are fulfilled.\n\nA main advantage of scrum is that it's so adaptable. Developers can react to change very quickly which makes the product developement very flexible. As the spiral model also splits developement into different activities which repeat after some time, you can respond to change as well, but unlike in scrum there is no fix time shedule which you can rely on. \n\nFurthermore you benefit from the constant cycle of daily scrum meetings, sprint reviews and sprint planing meetings. They can be seen as an advantage because they usually lead to better quality work. You can discuss which things went well in the last sprint and what the team should focus on more in the next sprint. Developers get almost instant feedback about their work and problems are recognized immediately. Following the spiral model there are no such fixed (daily) meetings which can lead to misunderstanding and miscommunication inside a team.\n\nA disadvantage of scrum is that it's not easy to scale. Scrum works best for teams not bigger than 10 people otherwise the positiv impact of those (daily / sprint review and planing) meetings can suffer a lot. The Sprial model is easier to scale and therfore usfull for projects with bigger teams.\n\nAnother downside of scrum as well as the spiral model is that both are not related to project deadlines. Both methodologies are based on the fact that every stage is repeated several times until in the end there is a shippable product\n\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644436,
      "meta": {},
      "text": "SCRUM is in essence a self-organizing and adaptable approach to problem-solving. It accounts for unpredictability and changes in the problem itself.\n\nOne advantage of SCRUM is adaptability and flexibility. SCRUM is the perfect approach to a project with ever-changing requirements because of the product backlog which changes dynamically to accommodate the requirements of the product owner.\nThe spiral model is quite adaptable as well because the results of the current iteration are evaluated and adjusted for in the upcoming iterations. SCRUM is more adaptable despite that.\n\nAnother advantage of SCRUM is the encouragement of creativity. Team members are heavily encouraged the exchange issues and ideas during SCRUM meetings. Problems are resolved in a team effort which leads to more creative solutions.\nSCRUM beats out the spiral model in terms of creativity because of the risk analysis and risk handling in every iteration which hinders creative approaches.\n\nOne disadvantage of SCRUM is the lengthy training needed to apply SCRUM at a highly-efficient level. The unique and somewhat unpredictable nature of SCRUM requires an enormous amount of time to understand deeply. It can thus be difficult for a team to achieve excellent results.\nThe spiral model faces the same issues as SCRUM because it is a complex approach. Thus team members need a long amount of time to adjust.\n\nAnother disadvantage of SCRUM is the difficulty of scaling the approach to larger projects. Communication in a self-organizing approach is challenging. The non-straightforward methodology makes applying SCRUM very hard to apply at an efficient level with a large number of people.\nUsing the spiral model on huge projects with a large number of people is one of its main strengths. The spiral model can be divided into different parts to make management much easier.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619478,
      "meta": {},
      "text": "SCRUM is an agile project management framework it assists the mangement and structuring of team work. In practice this means that the developers meet daily to talk about upcoming tasks and the progress of the project so far. In addition, there are further rules and methods that help to achieve the goals.\n\nThe advantage of SCRUM is that it helps teams to complete projects quickly and efficiently as specific rules and methods exist. Example: The goal is that already after the first sprint a shippable product exists, as in our team development project\nAnother advantage of SCRUM is that work is parallelized as during sprints code is developed and already tested and reviewed. Example: When developing our team project software we parallelized the development of the server and clients side and each team already tested throughout the development\nDisadvantages of SCRUM are you need experienced/trained people who know how SCRUM works. Example: A company wants to adopt SCRUM they need to spend on training for people to earn the certificates in order to be a qualified SCRUM master.\nAnother disadvantage is as SCRUM does not has a specific deadline as work is based on each sprint therefore projects might be drawn out longer than working \"traditionally\". Example:\n\nIn the spiral model there also exists specific methods but contrary to SCRUM there are no specific rules like the sprint meetings. Every next iteration is only started if a risk has succesfully been resolved. As the spiral model is not an agile method rather an iterative model work is not as parallelized as in SCRUM. The spiral model does not need such expertise and experience as SCRUM, the concept is intuitive to applicate. The spiral model as well does not have a specific deadline it depends if the iterations are finished.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620183,
      "meta": {},
      "text": "The products owner creates a  product backlog .And then the scrum team will have hold the sprint meeting to divide the product into some small , detailed missions for better performing. Then team creates sprints backlog and decides the time duration for each sprint . During the each sprint will the team members have a \n daily meeting to present how far did they do , and communicate with  each other . At the end of each sprint will product owner check the product and give some reviews. \nAdvantages : short sprints enable changes based on feedback a lot more easily \nExample :  at the daily meeting can easily communicate with each other , and when something needs to be changed , it can directly be changed .\n2)  The individual effort of each team member is visible during daily scrum meetings\n\ndisadvantages :\n1 ) its has no clearly end time , so it will sometimes delay . \n2 ). if some team members don't spend much time on this products , this product will possible fail . \n\n\ncompare to Spiral  : its more easily to implement . Because in Spiral model needs people to have knowledge  in risk assessment.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5622271,
      "meta": {},
      "text": "Scrum is an agile project management model, which focuses on parallel development by having different so-called backlog items be in development from different devs at the same time. Through regular communication in the form of meetings, problems or new demands set by the project owner can be discussed and implemented faster.\n\nAn advantage of scrum is not only it's own agility, but also that of it's product: Due to the entire project being split into small backlog items, which still have to cooperate within the system, the items are built to be simply adaptable to new scenarios. This way, creative designs and workarounds are often implemented. For example, if a PO wants a new application feature, and would like to replace another feature with it, this new request would be implemented so that it fits the system, while the other is removed - Ideally, this should not have major effects on other parts of the system. In the spiral model, this would not easily be possible, changes would only be implementable at certain points, and even then, at a cost (of time, to adapt it and the system).\nAnother advantage is the fact that scrum projects don't adhere to strict lifecycles. As soon as a project is done, it's done. This is in contrast to the spiral model, in which the lifecycle, a linear management model, is already given. As an example, a dev team might implement a system perfectly within the first sprint, and the PO accepts the product. In the spiral model for the same product, the PO may have to wait longer, because the team hasn't passed all the same criteria/tests/implementations in the same time frame.\nHowever, this can also become a disadvantage - while scrum involves many \"mini\"-deadlines, it often doesn't have an actual deadline, for the entire project. This is simply because the progress cannot be predicted from the beginning.\nAnother disadvantage is the scalability. Scrum usually makes use of quite small teams, which in a large-scale company workforce may be difficult to convert into small teams. Opposingly, small scum teams would not be able to be scaled up to a huge workforce - the concept's ideology of lots of cooperation and collaboration simply isn't possible/as effective at large scale. This would not make a difference to the spiral model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622944,
      "meta": {},
      "text": "\tDie Scrum  Methode ist ein Framework f√ºr agiles Projectmanagement, mit der das Team besser miteinander kommunizieren und  zusammenarbeiten kann. Die Rollen im Team ist klar struktiert und das ganze Arbeitsprozess besteht aus Meetings und Implement.\n\tMit der Scrum Methode kann ein qualit√§tives, Consumer zufriendes Produkt entwicklet. Das Projekt wird in mehrer sinvolle, bew√§ltigbare Spring eingeteilt, damit in der ganzem Entwicklungzeit nicht ziellos geworden wird. Mit dem Productbacklog sind die Anfoderungen des Consumers ersichtlich. Produkt owner entscheidet welche Anforderungen vom Produckbacklog in einem Spring geschafft werden k√∂nnen. z.B Design eines online Bookshop, nachdem first kickoff meeting sind die Anforderungen klar und Produkt owner w√§hlen einige f√ºr die erste Spring: 1. Regisieren Funktion 2. Suche Buch Infomartion\n. Nach mehrer Spring sind alle Anforderung gerecht. Ein Produkt mit ein Sprial Model ist auch mit der Hochqualit√§t, da in jede Iteration wird die Anforderung gesammlt und in dieser Phase gearbeitet.\n\tMit der Scrum Methode ist die Entwicklung flexiable und akzeptable. Jede Projektentwicklung hat bestimmtes Risiko und die Anforderung k√∂nnen auch ver√§ndern. Produkt owner kann Anforderung verwechseln oder neue Anforderung hinzuf√ºgen im Produktbacklog. z.B. bei der Entwicklung eines GPS System hat das Team openStreetMap api benutzt, aber Consumer ver√§ndert Meinung und denkt GoogleMap besser. Scrum kann diese Situation gut behandeln. Im Spiral Model wrid das Risiko f√ºr jede Iteration identifiziert.\n\tScrum ist nicht perfekt und hat auch Nachteile. Das Zeitmanagement f√ºr das ganze Projekt ist unbestimmt. Eine Spring Phase ist mit bestimmter Zeit organiziert, aber die Deadline f√ºr Projekt h√§ngt von vielen Faktor z.B. eine Funktion ist nach dem Spring nicht geschafft, dann muss im n√§schte Spring hinf√ºgen. In der Sp√§tzeit der Entwicklung kann auch sein, dass vorherige Richtung falsch ist, dann wieder ein neue Spring Phase. Beim Sprial Model ist das Zeitmanagement auch ein Problem und das ist  \ndeutlich, dass es schwer eine Ende vom Spiral zu finden.\n\tF√ºr Scrum braucht ein Team mit mindesten 3 Personen und nicht mehr als 10 Personen. F√ºr zu viele Personen ist schwer zu organiseren z.B. Es ist schwer f√ºr ein Produkt onwer die Projekt in 20 kleine  Teile f√ºr 20 Person zu verteilen. F√ºr 20 Person ist eine gute Kommunikation miteinander fast unschaffbar. Spiral Model hat keine Einschrenkung f√ºr das Team.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5623077,
      "meta": {},
      "text": "- Short sprints and constant feedback enable the programmers to cope with the changes more\neasily. Therefore, the scrum team knows much faster whenever they reach a dead end. E.g.\nwhen an implemented functionality of a developed application turns out to be detrimental when\nused in a certain environment.\n- The iterative delivery system shortens the time to market and may result in higher revenue as\nwith every completed sprint products are deliverable. For example, a project meant to last at\nleast 9 weeks, could be finished after 6 weeks.\n- Though the budget and deadline are fixed variables, the project requirements are not. This\nallows to change the direction of the project. For instance, an application initially designated to\nsupport plumbers in their workplace is, after thoroughly evaluating the first sprints, required to\nsupport construction workers and carpenters too.\nDisadvantages:\n- Daily Scrum meetings and frequent reviews require substantial resources. They are time\nconsuming because all team members need to be prepared. For example, if a programmer is\nmeant to work eight hours a day, but spends 15 minutes + 30 minutes preparation time every\nday not programming, valuable programming time is shed.\n- Scrum often leads to scope creep because there is no fixed end date. For example, if the\nproduct owner continuously requires additional functions, the whole project becomes extremely\ncomplex making it difficult to manage and to structure.\n- Adopting Scrum in large group sizes can be difficult. E.g. a Scrum team consisting of 30-40\nmembers is hard to organise as the members need to be coordinated. Imagine having a Daily\nScrum meeting with 30-40 people.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644346,
      "meta": {},
      "text": "SCRUM, is a framework for developing, delivering, and sustaining products in a complex environment, with an initial emphasis on software development, although it has been used in other fields including research, sales, marketing and advanced technologies. It is designed for teams of ten or fewer members, who break their work into goals that can be completed within time-boxed iterations, called sprints, no longer than one month and most commonly two weeks.\nadvantages :\n1. Adaptability and Flexibility :Scrum framework is one of the most flexible frameworks which is always ready for changes and can adapt to any type of situation. Taking the example of the pandemic where the work had to be carried on remotely, Scrum already had the idea of remote working which made adapting to the remote product development process easier.\n2. Better Quality : Quality has always been the main priority in Scrum as the products developed using Scrum framework display high value. The Developers in the Scrum Team take full ownership of the product being developed and work in a self-organizing team. This makes the environment where free thoughts and ideas can roam which makes the Developers build excellent products. \ndisadvantages:\n1-It becomes a challenge to implement Scrum in large organizations\n2-If a member of a Scrum Team leaves a project mid-way, there would be a huge negative impact on the project.\nWhen we compare Scrum and Spiral model , we realize that Spiral is good for large and complex projects and  it is not suitable for small projects as it is expensive. It is suitable for high risk projects, where business needs may be unstable. A highly customized product can be developed using this. But end of the project may not be known early.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644831,
      "meta": {},
      "text": "Scrum:\nScrum is used for agile Software Development whose advantage is to be able to react to changes at any time. Scrum consists of sprints, in which the assigned tasks are worked on, and daily and monthly meetings. In the daily meetings, the current status and problems are discussed, and in the monthly meetings, the next task to be focused on is discussed and chosen by the developer. \n\nDisadvantages of Scum:\n- One disadvantage is the overhead of work due to the constant additional meetings, as there is no further work on the product during this time and there is nothing to discuss when there are no  changes or problems that require the whole team. -- There are meetings to find problems in the Spiral Model, but not daily and always after a task and not during it\n- Our staff needs to be retrained to make Scum work effectively. This incurs additional costs and loses time to work on the current product. -- All our employees already know the Spiral Model and do not need to be trained.\nAdvantages of Scum:\n- One advantage is the extremely fast reaction to changes. If there is a problem and this requires major changes to the product, about which the entire team must be informed, this takes place daily with Scrum, whereas with Spiral only after the active task.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 5620648,
      "meta": {},
      "text": "Scrum is a method for agile Software development which follows some important rules:\nThere is one product backlog with all the features that need to be implemented\nThe work is organised in small teams and in sprints which can last 2 - 4 weeks\nIn one sprint the Product owner decides which features should be built in this sprint and decides at the end if the feature is implemented sufficiently\n\nOne big advantage is the concept that after the first sprint there is always a product increment that the PO/Customer can see/use and provide feedback for this one. So in a lecture application the tea would first build a mock up with some functionality.\n\nFollowing this advantage the next is the flexibility of SCRUM to handle requirement changes of the customer when the customer doesnt like the Mock up and sees that some functions dont make sense when visualized.\n\nA disadvantage is that SCRUM is difficult to scale that means in larger projects there would operate several SCRUM Teams and they also have to communicate together which requires more time because of the frequent changes in the requirements than in a traditional model. When WIndows decides to work on Windows 12, there would be multiple teams on different places of the world involved. \n\nThis would also be a disadvantage of the sprial model because the model also adjusts dynamically due to the fact that you dont know how long the entire procect will go but you rather plan from iteration to iteration. Thats what makes communication and deadlines with other teams harder.\n\nAnother disadvantage is the extensive training required of the team members. They have to understand the principles of scrum and participate in them to make this method work. So in old small and medium sized companies with developers used to work in a waterfall model for decades it requires time and effort and costs to get those people to rethink development to agile. \n\nThe training in the sprial model is less siginificant because it contains less artifacts and rituals than SCRUM but there is still effort needed to train people to change to such an approach of risk identifying and prototyping. \n\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622798,
      "meta": {},
      "text": "SCRUM is a framework that helps teams iteratively work together on a project, while taking periodic breaks to glance back over and share progress, self-organize, and single out small tasks to work on over a given time. A scrum team consists of a project owner (who interacts with or is the client), a scrum master (who manages a development team and resolves setbacks), and the development team (who self-organize and finish tasks in predefined increments aka sprints).\n\nAdvantages:\n- The team's work is transparent to everyone, which helps reduce miscommunication and redundant work, and increases accountability. Periodic sprint reviews and daily stand-up meetings help the team synchronize and stay accountable to each other. In the spiral model, team meetings are not in the forefront as much.\n- It is suitable for all kinds of project sizes. The problem is broken down into easily manageable sub-problems through the sprint/project backlogs, which makes it easier to pull off a small chunk to work on and make quick progress. In contrast, The spiral model, can be expensive and unsuitable for small projects.\n\nDisadvantages:\n- Using the SCRUM framework on a larger team requires some modification (for example splitting into smaller groups) because it it best suited for team sizes under 9. The spiral model is perhaps better suited for variable team sizes.\n- There can be negative impacts on the project if team member(s) drop out or aren't committed and cooperative, because the team depends on every member. Even though spiral may have more flexibility, there's more focus is on the what, and less on how the team will collaborate to implement it.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622942,
      "meta": {},
      "text": "Scrum is an agile software development lifecycle model based on regular sprints. For each sprint there is a sprint backlog (taken from product backlog): the list of tasks to be done, which result in product increment. Simply said, unlike Spiral method (which belongs to the iterative software development lifecycle models), the Scrum allows more frequent and narrow change.\n\nAn advantage of Scrum might be a better adaptivity to the frequent change. For the specific cases, as the Software startup it might be more suitable than the spiral model, since there are a lot of changes happening in the software industry all the time. The Spiral model would allow to deliver a new version of the product once in a while, whereas the scrum model enables the possibility to do a more frequent incremental change, say if there is some specific feature we want to include to our product. That makes scrum more suitable for the fast-moving development projects such as start-ups.\n\nAnother advantage of scrum would be better flexibility for the teammates and clients. The short duration of sprints enables to receive feedbacks and consequently respond to those feedbacks more easily. For example, after each sprint the client can give a feedback and updates for the project after each sprint, which can be included to the next sprint backlog and subsequently implemented as the increment change. Unlike in the spiral model where the review and feedbacks are only possible after the whole cycle, which makes scrum more responsive to the frequent change. Daily scrum meetings and sprint retrospective also keep the response to change at the high level.\n\nDisadvantage of scrum might come up when a team has a bad self-organization. Unlike in the iterative spiral model, the agile lifecycle methods can flaw the structure. Meaning if in the spiral model each team member knows exactly what to do, since the algorithm of work is clear, in the agile method there are a lot of freedom, which might also mean disorganization. So if for example, the goals were not set clearly at the beginning of the sprint or if the team is not familiar with the scrum methodology it might become chaotic and very hard to organize effective work on the project.  \n\nSecondly, scrum might have downsides if working in larger teams or less mobile field. In case of a small software start-up, scrum might be perfect, but for larger team projects it can become problematic. So if for instance we would produce cars and not the software, the spiral model would suit better. So after each car model is done (one iteration), we can review work and think about how we can make the new model better. It would be irrational to do frequent change when the car is already in production. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623055,
      "meta": {},
      "text": "Customer requirements are included in the product backlog and maintained by the product owner as backlog items. Each Sprint begins with a Sprint Planning Meeting in which the Backlog Items are discussed and a selection of items is made which will be processed in the coming Sprint. In addition, there are three other meetings: the Daily Scrum Meeting, which takes place every day, the Sprint Review Meeting, in which the teams present their results of the previous Sprint to the stakeholders, and the Retrospective Meeting, in which the team critically reviews its working methods and tries to find improvements for the next Sprint. Each team has a Scrum Master who leads and coaches the teams.\n\n1.Advantage: In Scrum, you present the developed products to the stakeholders at the end of each sprint (Constant stakeholder contact). The stakeholder can veto if something does not meet his requirements/wishes, therefore stakeholder involvement is an essential part. In the spiral model, on the other hand, the focus is on a thorough risk assessment, but stakeholder satisfaction is also an important factor and stakeholders have the opportunity to be involved in the early stages of software development.\n\n2.Advantage: In Scrum, customer requirements are prioritized by importance, which means that the requirements that are of high benefit are implemented first. This allows a usable result to be delivered faster and sooner. Similar to Scrum, at the beginning of each iteration, objectives, framework-conditions and alternatives based on the customer requirements are defined that are to be fulfilled in this iteration, but are not prioritized according to customer requirements. \n\n1.Disadvantage: Scrum is applicable to complex and large projects. But for small projects (requirements are concrete) both Scrum and the spiral model are not suitable to develop due to, e.g., loss of time with too \"defensive\" sprint/iteration planning and therefore becomes too expensive. \n\n2.Disadvantage: In Scrum, there is a high level of dependency between teams, which could have a negative impact and make it difficult to coordinate multiple development teams on large projects. The spiral model also relies on detailed plans and documentation, which makes it easier to divide projects into sub-projects and tasks and makes teams more independent of each other.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644376,
      "meta": {},
      "text": "The main goal of scrum is to deal with changes efficient. Thus it is perfect to control software and product development with fast changing requirements. Additional delivery of product increments, improved compunication and cooperation improves the risk managment. \n\nAdvantages:\n- Scrum can react fast to new requirements or changes from the customer. If the customer want to put a subscribe botton instead of an buy botton this requierment can be put in the product backlog. In a new sprint it can be pulled in the sprint backlog. \nThe Spiral Model is almost equal in this case. The Spiral Model have iterations. In every iteration new changes can be applied. But for one iteration their is no time limit. Consequently a change can have a longer waiting period.\n- Every Sprint in scrum focus on the incremental creation of a working system. In other words, it uses vertical integration. For instance, at first the search function gets implemented but in a way that after the sprint there exists a working product increment.\nThe spiral Model is not using no vertical integration. The approach here can be also bottom up integration.\n\nDisadvantages:\n- To use the Scrum model the team must be well-trained and have knowledge on this topic. For example, if a team member do not know the benefits of this approach he will be not so focused and efficient. \nIn the spiral Model it behaves similarly. If one team member do not know the 4 major activities of the iterative model it will be hard to work efficient.\n- Scrum consumes a lot of time. Due to the large amount of meetings in a Sprint working time gets lost. Every day in the morning there is the daily scrum meeting. This time could be used to work direct on the project.\nThe spiral Model do not have fixed meeting plans. Only the planning of the next iteration. Thus there is more time to work direct on the project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644708,
      "meta": {},
      "text": "Scrum is not about resisting change, but striving to adapt to change as easily and efficiently as possible. Customers can quickly see a product with simple functions, can communicate with developers frequently, which is easy to control workload and risks, and customer requirements and feedback can be handled in a timely manner.\nadvantages:\n1. Scrum can quickly adapt to changes in requirements. Scrum focuses on communication between people, and customers can frequently participate in software development after signing a contract. Customers can also propose new requirements or change existing requirements. For example, a start-up company needs continuous innovation to produce competitive products, so they need to frequently upgrade products according to market or customer feedback.  Although the spiral model emphasizes risk analysis, customers do not necessarily agree with these analysis. However, it is not easy for customers to give feedback, and developers cannot respond quickly.\n2. Increase productivity\nThe Sprint Backlog accurately reflects changes to the actual product. The communication between all parties quickly clarified many complex issues. For example, each Sprint retrospective, each member of the team can give feedback to each other, showing the results and problems of the previous Sprint, simplifying complex problems.The spiral model requires a lot of analysis. If a small-scale project follows the spiral model, it may waste a lot of analysis time and cost.\ndisadvantages:\n1. Scrum focuses on people's communication, and if the team members change frequently or are in different places, the effect will be greatly affected. For example, group members cannot go to the office because of corona, and online meetings are not only expensive, but also not necessarily effective. The spiral model will first analyze and specify a plan, and the team members only need to work according to the plan.\n2. Scrum is only for small teams\nIf the team has too many people, the whole scrum process is difficult to maintain. For example, it is difficult to get everyone to express their own suggestions in the meeting. The spiral model just needs to complete each person's own task according to the plan.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620307,
      "meta": {},
      "text": "In it's core, SCRUM focuses on using set time-frames to create a Software in increments, allowing to react to new requests by the client and constant improvement of the software and the developement progress. Each time-frame and every developement day is accompanied by meetings, in discuss the past process and plan the future one, deciding on what to tackle next with the customers interests in mind.\n\nOne major part of SCRUM is the constant involvement and the dynamic nature of its process, which allows the requirements of the poject to change according to the clients needs. If for example during development the client realizes they need an additional feature, it can be added inbetween the sprints. This will on the one hand lead to high customer-satisfaction because the client gets exactly what they need, but it complicates the developement process because it cannot be set solid in a contract and just \"worked down\" bullet point by bullet point.\nWhile the constant daily and monthly meetings require set roles to be assigned and trained scrum masters, which need to be trained or hired, they allow for not only constant improvement of the software, but also of the process and the inner workings of the team, by having the team periodically self-organize and reflect on the past efforts to maximize both efficiency, healthy communication and by extension of these, a good work ethic.\n\nIn summary, unlike the Spiral model, SCRUM works on the same software in incremental steps, instead of creating prototypes for each risk. Additionally, while Sprial allows reaction to changes from within the developement team and process, SCRUM expands this to include the Customer into the equation, by sacrificing a set of requirements negotiated beforehand. For this, SCRUM also requires a lot of additional meetings and specific roles to be filled to achieve its advantages, unlike the Spiral method wich works with the Team alone.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620617,
      "meta": {},
      "text": "Scrum is an agile method for software development, where software is developed in an adaptive manner, suitable for volatile environments and changing customer requirements. Basically, the dev team makes a list of concrete to-do's based on the problem statement called \"product backlog\", then  the team decides which to-do's they want to do on the next sprint (sprint is basically a batch of development with a fixed time interval). These chosen to-do's are called \"sprint backlog\" and ought to be finished during the sprint. Each day of the sprint, there is a quick stand up \"scrum meeting\" where they discuss their progress and goals for the day. At the end of a sprint, the team delivers a minimum viable product increment to the client and may alter the product backlog depending on customer feedback, before starting a new sprint.\n\nThe main advantage of scrum is its responsiveness. Since at the end of each sprint there is a minimum viable product, which can be shipped to the customer and be used (albeit with limited feedback), there is the possibility to get valuable feedback early and adjust the product to the new requirements. This distinguishes scrum from the spiral model, since with the spiral model, the product is only done after going through all the phases, whereas in scrum after each batch of work there is something to show and get feedback on. One example would be a spreadsheet software, where an agile team would first implement simple operations, and maybe get feedback quickly that customers don't like the UI, before the whole application is flushed out.\n\nOn the other hand, an disadvantage is cost: since scrum entails special roles (product owner, scrum master) and activities (daily scrum meeting,  sprint planning, sprint retrospective, ...) which depending on the size of the project may amount to costly overhead. The spiral model also shares this feature, since at the outset of the project it is not clear how many phases it will have and therefore how much it will cost. For example, if we want to only develop a simple .csv data input feature in a legacy spreadsheet system, it may be better to simply do the project with a waterfall method.\n\nAnother disadvantage is that the abstraction of the project in individual to-do's done by individuals in batches may distract the team members from the big picture and deadlines of the project. Since the spiral has a more linear approach, it does suffer from this problem so badly. E.g., if team members are more focused on delivering, for example, a graphing tool, they may forget the deadline for a commercially viable spreadsheet app is creeping up.\n\nNevertheless, an advantage of this abstraction is the divide-and-conquer principle. For example, instead of having to face \"develop the whole user interface of the spreadsheet app\", developers can focus on end-to-end, concrete tasks, such as \"implement a graphing tool\". The spiral model does not apply the divide-and-conquer principle to the extent that scrum does.\n\n",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5621037,
      "meta": {},
      "text": "Scrum is a technique of agile software development to coordinate larger or longer going software projects. All the currently known tasks are stored in a product backlog and each day there is a so called Daily Scrum meeting where the different developers come together and discuss which elements of the product backlog they are going to work on today and this works gets coordinated. Then there are also so called sprints that take two to four weeks which result in a potentially shippable product increment. This process is then repeated over and over until the product is finished.\nOne advantage of scrum is that it is an agile work process where work is performed in parallel. Therefore more people can contribute to the same project and therefore the development rapidly decreases which makes the work cheaper and more efficient.\nAnother advantage of the scrum technique is that it is open to change in all aspects of the project. So when change occurs for example in the functional requirements whilst they were already implemented it is still possible to make that change because there is no linear process involved.\nA disadvantage of scrum is that because there normally isn't a clear end date the project scope may extend longer than it would have to be. More and more tasks are just added to the product backlog without thinking about how necessary these steps actually are.\nAnother disadvantage can be the daily scrum meetings. Some team members might get frustrated by them and they can also be overall very time consuming because the entire team isn't working during this period every day.\nThe spiral model does compare to the scrum model in various aspects. The spiral model is an iterative process that repeats the same steps over and over to create better and better prototypes of the final product similar to the product increment and the end of each sprint.\nSpecial about the spiral model is that it focuesses a lot on validation, risk analysis, verification and testing while the scrum model doesn't include this so specific.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621312,
      "meta": {},
      "text": "Mit SCRUM wird jede Anforderung in kleine, bevorzugt unabh√§ngige Teile gegliedert und in den ProductBacklog gelegt. In einem Sprint (1-3 Wochen) werden dann diese Teile in den SprintBacklog gelegt und abgearbeitet werden. Nach dem Sprint werden unvollst√§ndige Items zur√ºck in den ProductBacklog gelegt, Fehler besprochen und neueZiele-Sprint definiert.\n\nVorteile:\nVerst√§ndlichkeit: SCRUM kann jedem in Minuten erkl√§rt werden und kann danach sofort umgesetzt werden. Durch die Einfachheit ist SCRUM auch weniger anf√§llig f√ºr eine falsche Verwendung. \nVergleich SpiralModel: Das SpiralModel ist wesentlich komplexer und ben√∂tigt einf√ºhrende Schulungen.\nBeispiel: Stephan sollte eingearbeitet werden. Im Falle von SCRUM geschieht die Einf√ºhrung z√ºgig und Stephan kann sofort produktiv anfangen. Hingegen beim SpiralModel hat Stephan mehr Schwierigkeiten beim Verst√§ndnis und ben√∂tigt mehr Zeit. \n\n\nFlexibilit√§t: SCRUM kann leichter auf Ver√§nderungen adaptieren werden. Durch die regelm√§√üigen Meetings k√∂nnen Projekt√§nderungen weitervermittelt werden.\nVergleich SpiralModel: Beim SpiralModel kann zwar auch auf Ver√§nderungen adaptiert werden, jedoch ist SCRUM aufgrund der lockeren Zeitfenster wesentlich leichter zu adaptieren. Durch die zumeist starren Zeitintervallen vom SpiralModel dauert eine Intergration von Ver√§nderung l√§nger.\nBeispiel:\nDeine Firma ist beauftragt, eine Onlinebankingoberfl√§che zu gestalten. Aufgrund einer Studie wird klar, dass die Kunden lieber auf dem Handy ihre √úberweisungen t√§tigen m√∂chten. Im Falle von SCRUM kann die Studie beim n√§chsten Sprintmeeting besprochen werden und sofort umgesetzt werden. Beim SpiralModel wird noch eine Iteration gearbeitet und dann erst die Ver√§nderungen eingebracht.\n\nNachteile:\nUnklare Kosten: Bei SCRUM sind die Kosten des Projektes nicht direkt in das Model integriert, wodurch die √úberblick verloren geht. \nVergleich SpiralModel: Die Kosten und die Dauer des Projektes sind in der Spirale leicht ersichtlich.\nBeispiel: Du solltest eine App f√ºr einen Kunden schreiben. Aufgrund von SCRUM hast du im vierten Sprint leider den √úberblick √ºber die Kosten verloren. Das Spiral-Model hingegen enth√§lt diese Informationen.\n\nBelastung gegen Sprintende: Am Ende des Sprints sollten die Aufgaben zumeist abgeschlossen sein, dadurch Druck auf den Entwicklern.\nVergleich SpiralModel: Durch keine fest-definierten Meetingintervalle kommt es zu keiner internen Drucksitation\nBeispiel: Als Entwickler sollst du bis Sprintende einen Microservice entwickelt haben. Bedauerlicherweise war die Aufgabe aufw√§ndiger als gedacht. Nun bist du in SCRUM in einer Drucksituation.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622114,
      "meta": {},
      "text": "Scrum deals with projects in agile environments through splitting up the process into different time periods  (sprints). Sprints have fixed periods preceded by sprint planning meetings/ succeeded by sprint-review-meetings. Before sprints, artefacts are being selected and after sprints, potential shippable products are being presented. Sprints are accompanied by daily meetings and there is close contact between product owner, scrum master and teammembers.\n\nOne advantage is the high flexibility in uncertainty. Projects cannot be planned right from beginning and thus need to adapt changes. If e.g  new legal texts get published which limit the product, the team must adapt fast. By reoccurring sprints changes in implementation can be considered quickly.\nSpiral model (SPM) also has several iterations and consider changes through 4 steps.\nAdditionally it increases customer satisfaction because of closer communication with the team. Product owners are rather involved and demand for changes during processes and thus prevent higher costs that could occur when only rating the final product.  If for example the product owner imagined a feature to fit better and is not satisfied, he can give incentives to change it, so that the remaining project isn't build on flaws.\nSPM doesn't provide close communication of owner and team.\nA disadvantage is the requirement for training and skill. If teams aren't occupied with ideas of SCRUM and steps aren't taken seriously, process efficiency could suffer. If e.g. the team doesn't do sprint review meetings and forget that features weren't finished in previous sprints, it could manipulate the ongoing process in increasing costs and time finding a bug.\nSPM is rather complex and needs similar training to not close projects because risks couldn't be shifted.\nAdditionally processes depend on all members, so if one leaves, it impacts projects very negatively. Imagine a project has 10 sprints √† 2 weeks and a teammember decides to quit in 8th sprint.  About 60 meeting took place. It would impossible to incorporate someone in that project.\nSPM is not that smaller-team based, however also has difficulties in incorporating members in late iterations. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622990,
      "meta": {},
      "text": "Scrum is a type of project management. At the beginnig the product owner makes a list of stasks that need to be done for the project which is calles product backlog. After that, the scrum team takes the product backlog and breaks it into smaller tasks (sprint planning) and they priotize certain tasks making in this way a sprint backlog and also plan for the implementation. For each sprint the teams decides an interval of time (usually 2 weeks). Every day the team meets and holds a scrum meeting, which is to evaluate to progress of the project and to share its updates.The scrum master throught the project helps to asses the project and the development team. At the end of each sprint  a sprint review need to be made by the prodcut owner. The cycle is reapeated till the product is finish and accepted by the product owner. \n\nOne big advantage of scrum is that large projects are more manageable since they are divided into smaller easier parts. Another advantage is that scrum is flexible and can adapt feedback into the project easily. Since little by little is done making changes is easy. \n\nA disadvantage of scrum is the lack of a definite date for the complete project. Scrum is made to adapt changes. Opinions, feedback or change of the requirements can happen at any time which would delay the project. Another disavantage would be that if a member leaves or is unsucceful to implement their part it would impact the project negatively since every member in a scrum project is important an has different activities to implement. \n\nThe spiral model is very similar to scrum since it also breaks various complex activities into smaller pieces. The sprial model also makes big projects easier to manage. A difference between this two model is that the spiral \n model is not made for change. Since it's also like the waterfall model that when something is made we cannot go back",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644655,
      "meta": {},
      "text": "In my opinion, the core essence of SCRUM is the idea of SCRUM team roles. That is when there is a customer who has a problem that is worth solving and that can probably be solved by developing a product which is the product owner . To help that customer, we put together a team of people who together have or can acquire the skills needed to build that product which is Scrum team members. And between them there is a Scrum member who is responsible for the control flow of the SCRUM process.\n\nAdvantages:\n1. More interaction with customers.\nSCRUM focuses on the delivery of an increment to the customer after each time-box and interaction with customers in the sprint review meeting, so customer is more frequent. For example, in the design of bumper system, we will hold sprint review meeting with customers after each sprint.\nBut spiral model mainly deals with various kinds of unanticipated risks but customer interaction is less.\n2.suitable for large projects\nSCRUM is suitable for large projects that can be easy to divide into small parts that can be easily developed incrementally over each iteration. For example, in the bumper system, we divide the product backlog which is corresponding requirements analysis into Sprint backlog.\nThe spiral model is suitable for those projects that are prone to various kinds of risks that are difficult to anticipate at the beginning of the project\n\nDisadvantages:\n1.Requires a Team Enviroment.\nThe SCRUM requires a team of at least 3 members and is appropriate for small groups. And more people such as more than 10 members team does not work well, because it impacts the time of decision making.\nThe spiral model needs not to face this problem, because spiral model does not focus on the team project model, all it required is the proper documentation for the spiral model.\n2. experienced team members are required.\nThe SCRUM involves extended periods of intense work and everyone involved needs to have experience and skills to quickly and successfully finish their works.\nThe member of Spiral model does not need experience and skill because this model works only rely on the prople documentation for the spiral model.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644817,
      "meta": {},
      "text": "The essence of Scrum is agile development. All the expected functionality is initially in the so-called product backlog. The actual work is divided into Sprints of ~1 month duration. For each Sprint, an appropriate amount of tasks is placed in the Sprint backlog. Each developing team, consisting of about 5 developers and a Scrum Master (who supervises the progress and the entire Scrum process), holds a short daily meeting to track the progress made the day before and communicate with the team for coordination purposes. (as well as a sprint review, retrospective and kickoff meetings)\n\n\n\nAdvantages:\n- you can easily adapt to constant change (agile) (this is also possible in the Spiral Model, but with limitations)\nexample: A client constantly changes their expectations of a certain software -> you need to adapt your work processes\n- developers constantly communicate with each other -> great coordination (not the case in Spiral Model)\n\nDisadvantages:\n- requires dedicated & qualified Scrum Master (unlike the spiral model)\nexample: In a company, you will need more employees because the Scrum Master does extra work\n- working time may be lost in meetings (daily meeting, kickoff meeting etc.) (similarly, the spiral model features a special planning phase - but not every day, only once per iteration)",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5644990,
      "meta": {},
      "text": "CORE ESSENCE: The core essence of Scrum is to achieve agility by continuous iteration and testing, removing unnecessary activities that take time and energy. It also focuses on customer interaction and numerous small parts of a divided large project that can quickly be developed incrementally in iteration.\n\nADVANTAGE:\n1. Effective use of time and money. The team can only focus on the task and not the extra steps to be carried out to ensure the product is finished as desired in the limited time frame. E.g. An e-commerce business that needs to be developed within 2 months with certain requirements, is finished within time with no extra testing or other things which may take more time.\nCOMP: sprial methods are not advisable for smaller projects as it costs a lot to be implemented.\n\n2. Scrum adapts the project to the customer and stakeholders' feedback. E.g. When there is a new Bug or a feature request in scrum a new sprint can easily be created assigned to a new team and then when finished integrated back into the main project which ensures that the customer and stakeholders' expectations are met. \nCOMP: The spiral method deals with various unanticipated risks but the customer interaction is less.\n\nDISADVANTAGE:\n1. Hard to implement and require experienced team members. E.g. When my company wanted to adapt to scrum we had to take extra training and seminars to be able to learn scrum. Then we had to hire a new Scrum Master just because we needed some experience in this field to implement it.\nCOMP: Proper documentation is required for the Spiral model which also makes it hard to implement.\n\n2. Daily meetings are hectic. E.g Having a standup meeting every day can be frustrating to the team members, leading them to demotivation and burnout.\nCOMP: It involves a continuous cycle which can be easier to understand in comparison to Scrum.\n\n",
      "score": 60.4,
      "language": "ENGLISH"
    },
    {
      "id": 5644868,
      "meta": {},
      "text": "Scrum is a widely used tecnique of software developement, that helps a team to work in parallel, and agile on a project. Scrum uses small teams with considerable deciding power, to make decisions in places, where the people actually work, this requires a high amount of communication between team members. The scrum workflow is categorized in Sprints, after each, there is a potentially shippable product increment, that, ideally, includes pre-upon determined functionality.\n\nScrum is complicated to scale. Using Scrum for larger projects is difficult, as using it on a bigger scale requires near perfect coordination and great amounts of training. Although possibilities to adapt Scrum to larger projects have been developed, they're usually hard to understand and execute.\nA typical example is a project that needs more than a few small teams, as at that point even the Scrum of Scrums might not be enough and some people end up in three scrums which gets kind of ridicoules.\nThe spiral model is easy to implement even on large scales.\n\nScrum requires trained personnel. Everyone on the team needs to be able to provide constructive feedback on the results and overall process.\nDuring a periodic meeting for example, it can be quite difficult to follow the more specific aspects of what the other person did, without extensive training.\nThe spiral model can get away with workers being primarily good at what they specifically do.\n\nScrum usually results in better quality results. Having everyone on the team take ownership and responsibility of their work does create a productive environment that leads to high-quality end results.\nIn a project, where what someone personally did is more easy to tell he is always more inclined to give it all he got.\nThe spiral method leads to good enough and working results for large projects.\n\nScrum has low costs. Scrum is cost-effective during the development, as it needs less documentation and oversight. \nDurig a typical project, for example a great percentage of the time working can be spent on documentation, which can drive the costs.\nThe spiral method is more expensive.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644982,
      "meta": {},
      "text": "Advantages of Scrum\n1 Scrum can help teams complete project deliverables quickly and efficiently.\nexample :scrum plan meeting\nWill allocate project progress and time in planning meetings.\nSpiralÔºöDevelopment is fast and features are added in a systematic way in Spiral development\n\n2 Scrum ensures effective use of time and money.\nexample :scrum regular review meeting\n Because regular returns and summaries will present timely project progress and problems.\nSpiral software development is not advisable for smaller project, it might cost a lot\n\nDisadvantages of Scrum\n1 It requires extensive training. \nEmployees need to be trained on how to use scrum, just like the learning we do in classes now.\ncompareÔºöwith Spiral we need traning too.\n\n2 It may require major transformations within the organization.\nThere will be many documents such as backlogs that need to be submitted to the manager.\nwith  Spiral Model Documentation is more as it has intermediate phases",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 5620017,
      "meta": {},
      "text": "Scrum is a project management framework which helps a team address problems and create solutions in an adaptive method to generate values for the team. Under the framework, the team members break down their tasks into goals in product backlog, and assess their progress in daily scrums. At the end of the sprint, the team members demonstrates their work to stakeholders in the sprint review to get feedback. The team can reflect their process in sprint retrospective. \n\nAdvantage: \n- Scrum works for development projects that are constantly changing. Through daily sprints and sprint reviews, the changing requirements can be quickly adapted in the projects. And the team can adopt feedbacks from customers and stakeholders into the projects. \n- There is less customer interaction in the spiral model.\n\n- Scrum helps teams to deliver potential shippable product increments more efficiently. After each sprint, the team creates a potential shippable product increment ready for customers. \n- The spiral model is more suitable for projects with unpredictable risks \n\nDisadvantage: \n- Scrum is hard to scale with large teams because of the constraint in the size of each activity/meeting. Also, daily meetings take up time for the team members. \n- The spiral model can be easier to scale in large teams.\n\n- Scrum requires experienced team members to achieve success in implementation\n- The spiral model may face the same issue\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620111,
      "meta": {},
      "text": "SCRUM is an agile software lifecycle model which utilizes vertical integration to continuously add to the software allowing you to react to changing requirements. It does that by splitting tasks into smaller items arranging them into a backlog from where some get picked for a so called \"sprint\". These tasks should be realized into a shippable product increment during the the sprint which begins as well as ends with a meeting and itself consists of \"daily SCRUM\" meetings.  \n\nA  advantage of SCRUM is the ability to react to changes of the requirement. E.g. a customer wants a website for selling shoes, however have way into development realizes that he needs a feature where one can order shoes for fitting. With SCRUM you add that requirement to the backlog and carry on as usual. In the spiral model this would be a huge issue because its iterative and once a process is finished you can't go back to it.\n\nAnother advantage of SCRUM is that the tasks are prioritized based on importance. This allows the development team to target certain chunks of the program releasing them first. An example would be an app like Uber with a new competitor trying to corner the market. Here it would be key that the most needed features are implemented and shipped first and fast. With the spiral model this would not be possible because here all gets released at once. \n\nA disadvantage of SCRUM are the severe changes needed in the \"organization layer\" of a company. For example a company that used to develop software with a non agile model is used to defining all requirements at the start of the project. In addition the developers are not used to constant exchange with the client. These drastic changes are not needed in the spiral model. \n\nAnother disadvantage of SCRUM is the missing hard deadlines. While one does have a sprint deadline one can always push a task into the next sprint. Take for example the backlog item \"fix booking security bug\" that someone has started to work on but never bothered to finish. It might just get pushed along misusing the agility of the model posing a huge risk. In the Spiral model this could not work because it has hard deadlines. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620192,
      "meta": {},
      "text": "A quick description on how how Scrum Works:\nThe whole task is divided into subtasks and put into the Product backlog. For each sprint, that takes about 2-4 weeks, items from the product backlog are put into the sprint backpack and worked on. At the end of each sprint, a potentially shippable product increment should exist.\n\nDiscussion:\n\nAdvantages:\n\n1: Scrum can easily adapt to changes in requirements by just importing the changes into the Product backlog and then dealing with them in the next sprints.\nAn example would be, that the UI needs to have a different background or color. That change could easily be put int the Product backlog and the program in the next sprint or so adjusted.\n\n2: Scrum can help to make a team better. The Sprint review at the end of a sprint is good for reflecting, what went wrong and what could be improved upon in the next sprint.\nAn example would be, that the communication in some cases went wrong. In the sprint review, that problem could be fixed by using a new communication channel ore something like that.\n\nDisadvantages:\n\n1: Because of the non linearity, the progress, on the project is harder to measure.\nAn example would be, that the project manager wants to know, how much time, the group needs to spent on implementing. That is hard to answer, because a sprint not only involves implementing.\n\n2: Due to the non existence of an end-date, scope creep can occur.\nAn example would be, that the roll out of a software to many clients is more difficult, than expected and that the system needs to be adapted in many ways, to fit all the different interfaces. That can lead to everybody trying to stick to the original software as much as possible and thus leading to a huge expansion to the original software.\n\nSpiral model comparison:\nAdvantage 1 of scrum:\nChanges in the requirements can't or are very difficult to later be adjusted.\nAdvantage 2 of scrum:\nThere are no meetings, that evaluate, what went wrong and what can be improved. It's just the evaluation of the result, not the communication and so on.\nDisadvantage 1 of scrum:\nThe progress of the project can more easily be measured.\nDisadvantage 2 of scrum:\nDue to the difficulty of adapting to changes, scope creep is less likely to occur.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620734,
      "meta": {},
      "text": "Scrum in software development is a form of parallel work organization that is designed to deal with change quickly. A project is processed in sprints, in which tasks are selected, processed, and delivered as a product increment in a predifened timeframe, all while keeping the other team members constantly updated. There are three main team roles to facilitate the process. the product owner, who defines the product, the developer, who realizes the product increment and the scrum master, who mediates between these two roles.\n\n\nOne benefit is Scrum's high responsiveness to change. The client may realize mid-project that the expectations of the future users changed and therefore alters product requirements. In Scrum the changes are simply put in the product backlog and are dealt with immediatly in the next sprint. In the sprial model, if the team has already left the software requirements iteration (iteration 2) this is much more difficult to do. The team would have to quit its current iteration to go all the way back to the software requirements iteration and start planning the whole process again.\n\nAnother benefit is problem-solving through \"wisedom of the crowd\". A developer may be stuck with a certain problem in his/her current work. He/she simply presents the problem in the daily scrum meeting, getting access to the combined \"wisedom\" of the development team, where an unexpected solution may appear. These meetings could be implemented in a sprial model as well, however the setup of following one iteration after another doesn't allow for such a diverse \"solution space\". Meaning, if your team is currently facing a problem in the testing iteration (6), a solution that would includee changing the detailed design iteration (4) is in theory in the spiral model not applicable.\n\nHowever, this also brings a downside with it, an increased communication effort. One may argue that a lot of time is spent with having or preparing for meetings and not with actual work. At certain stages of the project this may interrupt the workflow of the team members. In the spiral model less cross-developer communication is happening, increasing the focus of the respective developer on his/her task.\n\nAnother disadvantage is Scrum's uncertain planning horizon. Planning is quite difficult since there are no fixed steps outside of the sprints, so forecasting when the software will be delievered is difficult. Compare this to the Spiral Model which facilitates planning due to its fixed 9 iterations.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622658,
      "meta": {},
      "text": "SCRUM is an agile way of organizing teams and tasks. This agility fits best with the necessary agility of Software development, in consists of a clear view of the tasks at hand (Product backlog) and iterative sprints which focus on some tasks and produce a shippable product increment.\n\nOne advantage is that you get a shippable product increment in way smaller gaps, which makes it easier to iterate, test, and validate. \nThe spiral models produce prototypes, but f.e in the first sprint iteration you build a small frontend and a database and connect it, the prototype has already features and was a lot more work.\n\nA second advantage is that you can scale your operation very well. You can assign as many tasks as possible before every sprint, making it easy to onboard new coders, or adjust when some are missing. f.e if you start the project and then get funding, you can suddenly onboard a lot more coders and therefore assign more tasks.\nThe spiral model is less agile, it's still possible to adjust, but with set timelines and resources it is harder to do.\n\nOne disadvantage is that the teams work very autonomously, making it harder to see and measure how much they do and also how well the tech components fit together in the end. f.e if a team uses a different langueus or APIs.\nThe spiral model is more centralized making it easier to plan and connect.\n\nA second disadvantage is that it is way harder to set clear time goals when the product is finished. You have the SCRUM iteration but you still have problems when you have to push back tasks etc. f.e when people get ill or you are just stuck with a task. \nThe spiral model has a risk analysis built to work against this kind of problem.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644406,
      "meta": {},
      "text": "Scrum is an agile project management framework which is used for development of an software product in an agile way, means it helps the scrum team members (with the know-how)  as well as the scrum owner (who knows how and what is desired) and the scrum master (the one who keeps the scrum process and is the faciliator)  work with each other and improve the product in a heuristic manner. This mindset behind the scrum process allows the whole team to work on a potentially shippable product from the start of its' devolopment and learn from past experience by adapting the project to new conditions.\n\nA huge advantage of developing the software in this way is the fact that you have a potantially shippable product from the beggining of work so if you've made a huge mistake you don't need to go back to the very beginning but you can go back to the level you've been before the last step.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644418,
      "meta": {},
      "text": "The basic procedure of srum works like this:\nThe Product Owner turns the problem that needs to be solved into a product backlog.\nThe Scrum Team takes a selection of work and turns it into a product increment during a sprint.\nThe Scrum Team checks the results of the sprint and adjusts for the next sprint.\n\nWorking in smaller groups, like you do in SCRUM teams, is more efficient because there is nobody who does the same work as someone else. Also you can have tight communication within the team, leading to more efficiency and agility. For example, if there needs to be a sudden change that can be discussed in the next daily scrum meeting. This saves the team a lot of time. \nThe Spiral model usually has bigger teams than SCRUM.\n\nAfter completing a sprint, you already have a product increment. This increment doesnt have all required functions, but it is usable. This is really helpful, for example if the client wants see a \"prototype\" of the product you can already show him what it looks like. \nWith the Spiral model you have a prototype for the identified risks after each iteration, but one iteration usually takes longer than a sprint.\n\nA disadvantage is that you spend a lot of time in meetings. For example if there is nothing to discuss there will still be a daily SCRUM meeting. That just wastes time.\nWith the Spiral model there are no daily meetings, which saves some time.\n\nAnother disadvantage is that the developers have little to no help. Everybody works on their own tasks and special areas of the project, so if you have a problem there is nobody that can really help you with it, because you are already the specialist in that area. In the Spiral model everybody works on the project kind of together, making it easier to get help and solve problems together.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619678,
      "meta": {},
      "text": "The core, the essence of Scrum is:1. Help customers solve problems 2. Handle the relationship between team members and the customers3. Reflect on yourself and ask the team whether we are helping customers solve problems \n\nAdvantages: 1. quickly to changing requirements and releases on time. Scrum can harness change, and is not about resisting change, but about trying to adapt to it as easily and effectively as possible. In the process of testing, requirements are constantly changing.2. Improve product quality. One of the pitfalls of the V-Model is to put a huge, one-off system in front of the tester at once. The Scrum testing process advocates developing part by part, testing part by part, and if any issues are identified, they can be addressed in a timely manner so that developers can discuss and resolve defects early. \n\nDisadvantages: 1. Very weak support for distributed development environments.\nThe Scrum process advocates an emphasis on communication and collaboration in practice. However, in the early stage of development, a few project members are in different cities and have regional time differences, so they cannot communicate face to face, which leads to high cost and may not achieve the desired effect. 2. Lack of support for large and complex software. For large teams, the communication thread that must be maintained reduces the effectiveness of practices such as face-to-face communication and review meetings, and agility may be much less than it would be if used on small projects. For testing, consider both the size of the project to be tested and the size of the entire project.\n\nGenerally, in the early stage of software development, when the requirements are not very clear, the gradual development mode is adopted. Spiral model is especially suitable for projects with large scale, high complexity and high risk. This iterative development model brings new requirements to software testing, it does not allow an independent period of testing time and phase, testing must follow the development of the iteration and iteration.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5620247,
      "meta": {},
      "text": "Scrum is an agile, incremental method, it contains so called Stories, which are tasks for the developers, every Story also has Storypoints which indicates the complexity of the Storie. Besides the developers their is a Product owner and a Scrum master. Stories are saved in the backlog and in every Sprint, some are taken out. A Sprint is a certain timeframe, where the developers only work on the choosen stories, usually a Sprint is between 2-4 weeks. Scrum has several Meeting types, a Daily meeting, a Sprint planning and a Sprint review. \n\nOne major advantage of SCRUM, is the ongoing increments of the product. This is motivating for the team and the customer can see the software grow. After every round there should be a shippable product. Another advantage is, that the product owner can steer the software and change things in an early state. \n\nAnother advantage of Scrum is the transparency. Everyone knows what's the state of the project, what comes next and naturally the stories give some kind of documentation. In the end of a sprint, it is rewarding to see all of the stories closed and it can be fun to pick new ones. \n\nA disatvantage of Scrum is the overhead. Developers will spend a lot of their time in meetings. They have to care for the backlog and guess Story points. They will do Sprint reviews and of course the daily meetings. That can lead to drops in productifity. \n\nAnother disatvantage is the guessing and taking of Storypoints and stories. Sometimes a story seems easy enough, but turns out to be a lot bigger. Then the developer can get stressed and feeling overwhelmed. The product owner maybe is disapointed too. He sees that a little 2 point story doesn't finish. If that happens more frequently, the team will have spillovers to the next story and it quickly gets unbearable. \n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620611,
      "meta": {},
      "text": "SCRUM ist ein agiles, inkrementelles Software-Engineering-Modell, das haupts√§chlich auf die Bew√§ltigung von Change ausgelegt ist. Daf√ºr werden Kommunikation und Offenheit in den Vordergrund gestellt und in kleinen Teams mit regelm√§√üigen Kurzbesprechungen gearbeitet. Die Arbeit wird auf sogenannte Sprints aufgeteilt.\n\nEin gro√üer Vorteil von SCRUM ist, dass sehr schnell auf Ver√§nderungen reagiert werden kann, da sich die Teammitglieder im st√§ndigen Austausch befinden und die Arbeit in kleine H√§ppchen unterteilt ist, was die Auswirkungen minimiert. Das ist beim Spiral Model so nicht der Fall.\n\nEin weiterer Vorteil von SCRUM ist, dass durch die inkrementelle Vorgehensweise nach jedem Sprint ein \"potentially shippable product increment\" vorliegt. Muss beim Spiral Model das Projekt etwa pl√∂tzlich aus Budgetgr√ºnden abgebrochen werden, bleibt das Projekt ergebnislos. Bei SCRUM dagegen erh√§lt der Kunde am Ende doch noch ein funktionsf√§higes Programm, auch wenn das vielleicht nicht alle Features enth√§lt.\n\nEin Nachtteil von SCRUM ist, dass die regelm√§√üigen Kurzbesprechungen des Entwicklungsteams nach oben hin beschr√§nken. Das Spiral Model kann dagegen mit beliebig gro√üen Teams durchgef√ºhrt werden.\n\nNoch ein Nachtteil von SCRUM: Weil das Verfahren agil und inkrementell ist und nicht linear, ist es schwerer zu planen, was Manager nicht m√∂gen. Das Spiral Model ist zwar auch nicht linear, sondern iterativ, aber immerhin \"linearer\" als  ein agiles Modell.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622781,
      "meta": {},
      "text": "Scrum is an agile method to deal with interruptions in the process of software engineering. In comparison to linear processes, it is more agile to change. It is designed for teams of around 5 members, who break their work into goals that can be completed within time-boxed iterations, called sprints, no longer than one month.\n\nAdvantages:\n\nRisk Reduction:\nWithin the period of a sprint, the team can test their ideas, hard to do in the spiral model. Because of the short time of the sprints, the amount of lost time on a potentially failing idea is rather low.\nFor example, a SCRUM team wants to implement an uncommon algorithm that would be innovative, but the chance that it will work in the end is about 50 %.\nIn the end, the implementation did not work out, but it wasnt time expensive.\n\n\nClear Team Roles:\neverybody in the SCRUM team knows exactly which role he has to play in the team and which responsibilities are entailed with it, in the spiral model there are no such roles.\nFor example, the SCRUM-team meets up for the daily sprint. there is no confusion who will lead the meeting, because it's clear to everyone that it will be led by the ScrumMaster.\n\n\n\nDisadvantages:\n\nIt requires the use of small teams: \nIt works best with a small team below 10 people. Therefore it's not applicable for really large projects. In the spiral model its easier to scale up.\nFor example, if you are currently doing a software engineering project and within the process, you notice that the idea is really great and should be scaled to a bigger project. Then it wont be that easy to do the scale-up with Scrum.\n\nIt requires extensive training:\neverybody in the team has to have internalized the process of SCRUM. Only then it's possible to work efficently \nwith SCRUM, but the training process needs time and can be expensive. The Spiral model is straigthforward.\nFor example: one member of the team hasnt worked with SCRUM yet. it takes time for the whole team until he understands the methodology\n\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619703,
      "meta": {},
      "text": "In general, scrum is a way to manage product development. It divide a large project into more manageable tasks, which are completed in short iterations throughout the project life cycle. This methodology relies on the collaboration between team members. \nScrum has many advantages. First, this methodology fits well for a fast-moving development projects. If the customer's requirements for the product change very frequently, then the changes can be clarified in daily scrum meetings, thus saving the developer's time. For example, during the development , the client always come up with new ideas. In order to implement their ideas, maybe some modification or increment is necessary . So a daily scrum meeting is really helpful . But spiral model does not fit for the fast changing requirements . Because it has to do a whole iteration and it costs time. \nSecond,  scrum improve the creativity of the team. When there is a competitive world out there, it is the best company that brings out the most innovative products according to the needs of the customer, that survives. For example, when a team is developing a game. When someone come up with a new idea of the game feature, it could be discussed directly in the meeting. And then the game might be more interesting and the best game could be delivered. In comparison with spiral model, it might not be that innovative because a new feature need to be discussed in the next iteration. \n\nBut nothing is perfect, and the Scrum methodology is no exception. Because scrum relies on strong collaboration .The chances of project failure are high if individuals aren't very committed or cooperative. For example, a team is required to develop a project base on Springboot and Vue. None of them has experience on it and do not want to learn it from the beginning. The scrum methodology will bring them no effort. But spiral model need to complete all the four stages in a iteration . So if the team member are not that cooperative, it might not be that deadly. \nSecond, adopting the scrum framework in large teams is challenging. Think of a big department of a company is assigned to a same task. A daily meeting with so much people costs lots of time. And it is also not efficiently because not everyone get the chance to speak. The spiral model may be more suitable for a large team because the time cost of each iteration will be shortened. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620298,
      "meta": {},
      "text": "SCRUM = \nWith the Scrum method, you have multiple sprints in which you work on the project - after every sprint you have a deliverable result you could sent to the customer. Before the SCRUM-Sprints you create a product backlog with all the important tasks based on the requirements. Before and After the Sprint, there are Meetings taking about the last sprint and planing the next sprint phase, in which you work off the things in the product backlog.\n\n+ a deliverable result after ever sprint to send to customer -> improved risk management\n\t-> program a delivery app with core functions to deliver to customer - with every sprint after that you can implement more and more features (feedback from customer after every sprint)\n\n+ can handle fast and often requirement changes very well\n\t->  program might change a requirement that was supposed to be in next sprint: simply exchange sprint item with another backlog item \n\n- less easy to plan and manage since it's not a linear progress\n\t-> After first sprint you might go back to a method already implemented to change it - that's not easy to tell how long it would take to finish program\n \n- lots of time spend in meetings planning and reviewing the sprints ( no actual work-on-project-time)\n\t-> While the meetings you could program and work on sprint/product backlog items instead\n\nSCRUM vs. Spiral:\n- both are very flexible to changes: can adopt them easily\n-  customer sees product after every phase: can review it and give feedback = similar to SCRUM\n- number of required phases is not always known = similar to SCRUM\n- no review meetings, but also the next phase planning = similar to SCRUM\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621240,
      "meta": {},
      "text": "Beim Scrum-Framework wird ein Projekt verwaltet, indem es in mehrere Phasen eingeteilt wird und in jeder Phase ein Zyklus von Planung, Ausf√ºhrung und Bewertung wiederholt wird. Scrum's Zyklen werden Sprints genannt und dauern in der Regel zwischen zwei und vier Wochen, wobei die gesamte Arbeit nach jedem Sprint √ºberpr√ºft wird. Die am Prozess beteiligten Personen haben eine von drei Rollen: der Product Owner, der das Unternehmen repr√§sentiert, der Scrum-Master, der Projektmanager ist, und ein Team von Personen, die die Aufgaben ausf√ºhren.\n\nScrum ist anpassungsf√§hig und flexibel. Durch sich permanent √§ndernde und im Prozess neu entstehende Requirements eignet es sich f√ºr eine Vielzahl von Umgebungen und Situationen, die zun√§chst keine klar erkennbaren Anforderungen haben und einen flexiblen Ansatz erfordern.\nDes Weiteren verbessert Scrum die Kundenzufriedenheit. Wenn jeder im Team nach besten Kr√§ften arbeitet und sich aufgrund regelm√§√üiger R√ºckmeldungen des Product Owners und der Review Meetings st√§ndig weiterentwickelt, k√∂nnen Produkte und L√∂sungen entstehen, die optimal an die Anforderungen des Kunden angepasst sind. \n\nEs kann schwierig sein, Scrum zu skalieren. Die Anwendung des Scrum-Ansatzes kann f√ºr gro√üe Projekte eine Herausforderung darstellen, da die Umsetzung im gr√∂√üerem Ma√üstab umfangreiche Schulungen und pr√§zise Koordination erfordert. Gerade, da in den Sprints nur kleine Aufgabenteile behandelt werden k√∂nnte man schnell den √úberblick verlieren. (risikobehaftet)\nIn Scrum wird keine konkrete Projektfrist festgelegt. Obwohl die Anwendung der Scrum-Methodik viele k√ºrzere Fristen f√ºr alle Beteiligten mit sich bringt, bietet sie keine Unterst√ºtzung f√ºr die Einhaltung der Gesamtfrist. Da im Zweifelsfall solange Sprints abgehalten werden bis das Resultat vom Product owner akzeptiert wird und es keine \"Requirements\" mehr gibt.\n\nWenn wir den Scrum-Ansatz nun mit dem Spiralmodell vergleichen, f√§llt auf, dass die beiden Test-, Planungs- und Evaluationsphasen gemeinsam haben, es bei Scrum aber im Vergleich zum Spiralmodell keine Risikomanagementphase oder Prototyping gibt. Somit wird eher das Spiralmodell f√ºr langfristige Projekte mit hohem Risiko empfohlen.\nEine Gemeinsamkeit ist, dass beide Modelle als Iteration aufgebaut sind, in Scrum der Sprint und beim Spiralmodell der Kreislauf bestehend aus den 4 Phasen.\nEin weiterer entscheidender Unterschied ist , dass mit dem Scrum-Ansatz viel weniger im Voraus geplant wird, da jeweils immer nur f√ºr den jeweiligen Sprint geplant wird, w√§hrend bei dem Spiralmodell wesentlich mehr Schritte in jeder Phase voraus geplant werden.\n\n",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 5622040,
      "meta": {},
      "text": "Scrum is an application development framework in software development and software engineering. It is a framework for developing, delivering and maintaining products in a complex environment in agile management and project management as an agile software development method. The main characteristic of this development framework is that it is observational, developmental and iterative.\n\nAdvantages:\n1) It's flexiable because it has short sprints and in between these sprints changes can be made more easily.\nExample: A customer demanded a change in the product. It can be discussed during the scrum meetings and can be added to the next sprint.\nBy spiral model in order to be in schedule the rules of spiral model needs to be followed strictly.\n\n2) It requires less resources because scrum requieres less documentation and control.\nExample: Documentation phase requires product backlog and sprint backlog.\nBy spiral model documentation has more intermediate proccesses and therefore it needs more time and money.\n\nDisadvantages:\n1) It is diffucult to work with large projects, as implementing it on a bigger scale requires extensive training and precise coordination. While ways to adapt Scrum to larger projects have been developed, they are often difficult to understand and implement.\nExample: Larger projects need larger management team and it can be pretty hard to ensure communication between these teams. That can lead to an misundertstanding and this can be catastrophical for the project.\nThe spiral model suits better for projects that are large and complex in nature, as continuous prototyping and evaluation helps reduce any risk.\n\n2) Adopting the Scrum approach requires a lot of hard work over a long period of time, and everyone involved needs to have the experience and skills to accomplish their tasks quickly and successfully. Everyone on the team needs to be able to implement the results and the overall process and provide educated feedback.\nExample: If any team member leaves in the middle of a project, it can have a huge negative impact on the project.\nSince the rules and path are very strict in spiral model inexperienced team members or team members who have less experience can work on projects more easily.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622592,
      "meta": {},
      "text": "Scrum is an agile, adaptive software development process that allows to manage and control software with continuously changing requirements. In comparison to horizontal integration, which works layer-by-layer on components (e.g., database, middleware), Scrum bases on vertical integration, as each sprint emphasizes an incremental end-to-end creation of a working system. \n\nAdvantages: \n- Improve the ability to react to changing customer needs. In contrast to iterative spiral models, change does not lead to the iteration of a previous phase or even cancellation of the product, but to continue reengineering of the requirements and design.\nExample: \"Our development process is inefficient, as we process activities (e.g., requirements elicitation, analysis) linearly. Thus we cannot 100% include change. If we identify a changing customer need, we cannot incorporate it directly within an activity but need to go back to previous activities or cannot integrate it.\"\n\n- Large projects are divided into easily manageable sprints with a continuous delivery of product increments. The effort of each team member becomes evident in daily scrum meetings.\nExample: \"You once complained about the varying lengths of our spiral model and your belief that some developers contribute less than others. Scrum allows us to introduce biweekly sprints, in which we have daily meetings that allow you to track the progress of each developer.\"\n\nDisadvantage:\n- If a team member with an important team role leaves the project middle way, it has the potential to negatively influence the progress of the project, as specific team roles need to be existent.\nExample: \"Imagine Max overtakes the Process Facilitator role (=Scrum Master) and gets sick. There is the likelihood that our entire project fails, as the communicator between product owner and scrum team members is missing. Thus, deviations from plan will be hard to identify and resolve.\"\n\n- Scrum misses the risk management phase, which is a central activity in the spiral model next to testing, planning and evaluation activities.\nExample: \"Imagine we are scaling our software solution into the highly regulated banking industry. The evaluation and resolving of risk in each iteration of our current process allow us to check whether we are aligned with the legislative rules.\"",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644704,
      "meta": {},
      "text": "The core of SCRUM is being able to react to changes of the requirements for the software by the customer. The requested Product is developed in sprints, based on a product backlog, that represents the requirements. Each sprint has a potentially shippable product increment as result. Therefore, working code is more important than a detailed documentation\n\nAdvantages:\n- More overall Communication. There is ongoing communication to the customer while the product is developed, and it is possible for the customer to request changes. Apart from that SCRUM includes the daily sprint meetings, the Sprint Review Meetings and the Sprint retroperspective, in which code / product issues can be discussed and feedback can be given. That way, the developers can work more coordinated and can improve the process of development itself.\n- There is a working product as soon as possible, the product increment, which is important if for example the customer needs the product surprisingly a lot earlier. Then he has at least a working product instead of a not useable only in parts developed software.\n\nDisadvantages:\n- SCRUM does not set a deadline on the project. Therefore, the developers might overdo some of the items in the product backlog. If a customer for example requests a simple website for his online shop, SCRUM can produce a working website within a month. But as there is no deadline, the developers maybe try to beautify the UI of the Website and waste time.\n- Code produced trough SCRUM might be hard to maintain due to lack of a detailed documentation. If e.g., a customer required a software to be developed in 5 weeks, in order to save money, he maybe must invest a lot of money in the Maintenance of the code, because it takes a lot of time to find bugs due to a poor documentation\n\nComparison:\nIn contrast to SCRUM, there is no explicit requirement for daily meetings or reviews of the development process in the Spiral Model. (no improvement of development process)\nThe Spiral Model does not produce a working product as fast as SCRUM. Instead, the Spiral Model has 9 iterations which are like the steps of the waterfall model. A working product does exist only in the end.\n\nThe Spiral model is somewhat linear and divides the development in 9 parts, which are done one after another. Therefore, it is possible to set a deadline and plan more in advance.\nThe Spiral Model does not prioritize working code over a detailed documentation.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644939,
      "meta": {},
      "text": "SCRUM ist ein Modell der Softwareentwicklung aus der Kategorie agile Modelle. Mit dem Hintergrund, dass Softwareentwicklung nicht linear sei, m√∂chte SCRUM schnell auf Ver√§nderungen reagieren k√∂nnen, indem sich t√§glich kurz unter den Entwicklern ausgetauscht wird und jeder einen √úberblick hat, woran wer gerade arbeitet. Mit dem Ziel, dass nach jeder Entwicklungsphase das Endprodukt aufgewertet wird, werden Aufgaben und Requirements werden zentral gesammelt und √ºblicherweise f√ºr einen \"Sprint\" von 2-4 Wochen verteilt.\n\nSCRUM hat den gro√üen Vorteil, dass schnell auf Ver√§nderungen reagiert werden kann. Dadurch, dass ein Sprint nur 2-4 Wochen dauert kann eine Ver√§nderung, die w√§hrend dieses Sprints erkannt oder gefunden wird, direkt in den Product Backlog aufgenommen und ggf. im kommenden Sprint bearbeitet werden. Die Software f√ºr bayerische Impfzentren \"BayIMCO\" muss(te) z.B. schnell auf Ver√§nderungen reagieren k√∂nnen, als Impfstoffe pl√∂tzlich nur f√ºr bestimmte Altersgruppen geeignet waren. Durch SCRUM konnte diese Ver√§nderung in den Anforderungen in den Product Backlog aufgenommen und im n√§chsten Sprint des Entwicklerteams implementiert werden. \nSCRUM hat zus√§tzlich den Vorteil, dass nach jeden Sprint ein lieferbares Produkt existiert. Dadurch hat man eine funktionierende Basis f√ºr Erweiterungen der Funktionalit√§t und tiefe strukturelle Fehler wie ein nicht kompilierendes Programm fallen fr√ºhzeitig auf. Beispielsweise wird eine Webseite gebaut und im ersten Sprint die Aufgabe angegangen, dass ein Webserver eine einfache Textnachricht im Browser ausgibt. Falls es hier zu Problemen kommt und nach dem Sprint das Produkt nicht so funktioniert, wei√ü man genau wo man mit der Probleml√∂sung ansetzten muss. Im n√§chsten Sprint kann man mit der Basis eines funktionierenden Webservers dann andere Anforderungen umsetzen und sich der Funktionalit√§t des Webservers sicher sein.\n\nNachteil von SCRUM ist, dass der Entwicklungsverlauf nicht klar im voraus geplant werden kann. Da SCRUM ein agiler Prozess ist, kann man vorher nicht genau definieren, wann Erfolge und Probleme auftreten werden. Wenn ein Manager z.B. f√ºr seine Abteilung die Kosten f√ºr eine geforderte Software planen m√∂chte, kann den Entwicklungszeitraum nicht festsetzten und somit keine genau Aussage geben.\nEin weiterer Nachteil ist, dass viel Aufwand f√ºr Kommunikation entsteht. Sowohl das Sprintplanning als auch die Daylies und Retro meetings kosten viel Zeit. Das ist Zeit, die de facto nicht mit Programmieren verbracht wird, sondern mit Planung. Wenn sich ein Entwicklerteam t√§glich f√ºr 15 Minuten Sprint trifft, sind das bereits 75Minuten pro Entwickler in der Woche.\n\nVergleich zu Spiral model:\nVer√§nderungen:\n- SCRUM kann schnell auf Ver√§nderungen reagieren\n- Spiral nur bedingt - n√§mlich au√üerhalb eines Prototypenentwicklung reagieren\n\nLieferbares Produkt/fr√ºhzeitige Fehlererkennung:\n- SCRUM liefert nach jedem Sprint ein Increment durch Funktionserweiterung\n- Spiral nutzt einen Linearen Prozess innerhalb der Prototypenentwicklung. Produkt ist erst am Ende dieser sichtbar.\n\nEntwicklungsverlauf planen:\n- SCRUM kann nur den kommenden Sprint planen.\n- Spiral kann die Prorotypenentwicklung sowie die 9 Iterationen gut im voraus √ºberblicken.\n\nAufwand f√ºr Kommunikation:\n- SCRUM viel Kommunikationsaufwand durch Sprint Planning, Dayly, Review, Retro\n- Spiral zwar auch Kommunikationsaufwand durch Aktivit√§ten, aber innerhalb der Prototypenentwicklung linearer Prozess.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5619771,
      "meta": {},
      "text": "In this presentation it should be explained what SCRUM means exactly. SCRUM is a concept of software development to react on certain changes in requirements to adapt your system because the customer might ask for changes. It doesn't mean sequential work but parallel mechanics to have a better communication and agile team production and not just to follow clear steps. So, the team can use its own creativity and interaction with the customer to solve problems step by step and to discuss new solutions on a problem which were too complex to discuss at the beginning.\n\nThe advantages of SCRUM are clear because of the instructions and the planning of sprints including the results in the backlog item. So, it's easy to implement and to use for a team. Another advantage is the perfect transparency by continues meetings and short ways to communicate so that the team can work better together.\n\nHowever, the disadvantages of SCRUM are also problematic due to the fact working in tasks are difficult as the members are too focused on certain tasks but not on the whole project. The team can run out of time because plannings for two weeks that are to less ambitious result in pressure as the team does not end their tasks in time.\n\nThe Spiral model is split into the parts of the discussion and solving of risks and the alternatives, the development, and the planning of the next iteration. The advantage compared to SCRUM is to identify risks and to work separately on implementing and problems and not only to give all the tasks in one iterative work of 2 weeks. The advantage of SCRUM in comparison is the collaboration of the team members which results in better planning in the costs and resources of the whole project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620018,
      "meta": {},
      "text": "- Scrum is a framework for developing, delivering, and sustaining products in a complex environment.   scrum accepts that the problem cannot be fully understood or defined up front, and instead focusing on how to maximize the team's ability to deliver quickly, to respond to emerging requirements, and to adapt to evolving technologies and changes in market conditions.\n\n- Advantages: \n    + Large projects are divided into easily manageable sprints: a large project will be devided into small taskes and these tasks will be done in scrum. This will make the process easy to control. It is better than Spriral Model because Spiral Model makes the whole project and if something is wrong, it is difficult to check and find the error.\n    + Short sprints enable changes based on feedback a lot more easily: Clients can change their mind often and there will be changes that need to be done. Short sprint makes it easier to improve the project because we have sprints for each week and we can simply look up the sprints and find out what need to be change. The time between sprints is short so the feedback will mostly about the sprints last scrum and it easy to manage. It is better than Spiral Model. Because Spiral Model has update after long time (6 months, 2 years,...), feedbacks maybe about many aspects of the project and it takes more time to change things.\n\n-Disadvantages:\n    +The chances of project failure are high if individuals aren't very committed or cooperative: Because sprints are short so if sprints from last scrum are not yet finished then the futher prints maybe can not be done. In Spiral Model the project is complete so the change that it fails is lower\n    +Daily meetings sometimes frustrate team members : Members have to update everyday what they have done and it sometimes too much for them. They can have stress about finishing or improving code everyday. In Spiral Model members only have to update every for example 6 months or 2 years so they have time and dont have stress about time everyday.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620237,
      "meta": {},
      "text": "Scrum is an Agile project management method. Hereby, \"Agile\" refers to developing products using short cycles of work (called sprints) that allow for rapid production by using daily team meetings to discuss current tasks and any issues that need to be discussed.  For this, a small team (of usually about 5 people) led by a Scrum Master, who is tasked with removing all obstacles on the way, is formed.\n\n\nAdvantages of Scrum:\n- Usually, it helps teams complete (software) project deliverables quickly and efficiently\n- Large projects are divided into rather easily manageable sprints\nDisadvantages of Scrum:\n- The framework can only be successful with experienced team members who e.g., do not get frustrated with daily team meetings\n- Just like in my EIST team project üòî, if individuals are not very committed or cooperative, the probability of project failure is high\n\n\nSpiral Model compared to Scrum:\n- Scrum is known for increasing time efficiency, whereas, in the Spiral model, there is a difficulty in time management as the number of phases is unknown which makes time estimations hard.\n- The Spiral model is also well suited for large and complex projects.\n- Of course, if someone has no experience working in the Spiral model, the chances that they might fail are also not very low - just like with the Scrum model\n- If team members don't communicate and cooperate accordingly, the Spiral model might also fail - just like the Scru model",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622673,
      "meta": {},
      "text": "Scrum is an agile software development-framework that includes methods, and roles that you can use to structure your development phase. The main components that are most often used are: The Product Backlog (a conglomerate of all the functions the end product should have), the Sprint backlog (the components from the product backlog that should be worked on in the current sprint), the sprints (repeated working phases where you work on things from the sprint backlog) and the potentially shippable product increment (the result of one sprint). For each of those components, there is a corresponding meeting that can / should be held. So in short, you first determine all the things you work on then you agree on a few of those for the next working period (sprint) and then you repeat those iterative sprints until the product is done.\n\nPros:\n- Because Scrum is agile, the feedback from the customer and the stakeholders, can be implemented quite quickly, this is an advantage because the most important thing in software development is that the customer approves in the end. You can also save a lot of money by changing during the development rather than having to change it afterwards. In Spiral Model you plan out the whole project in the beginning, therefore you aren't as flexible as in Scrum.\nExample: During the development of a math app, the customer could change his mind about the platforms the app should run on -> this could mean, that the whole entire backend must change. In Scrum the customer could say that after the sprints, and changes could be made during the development (saves money)\n\n- Scrum is very budget friendly and leads to the wanted results in very short time. This is a pro because after every sprint (in theory) there should be another functionality of the system implemented or at least almost finished -> this combined with the characteristic of scrum that feedback can be expressed quite often makes this a valuable pro. This is also the case in Spiral Mode due to it's iteraiv nature.\nExample: When you want to develop a flight system software that has multiple functionalities such as (showing flights, showing trips, showing all flights, showing flight instructions, etc.) after each sprint you can see clear results and the customer can then give his feedback accordingly.\n\nCons:\n- With no deadline this could lead to scope creep. This means that the customer / project manager, could extend the product / sprint backlog because there is not fixed date the software should be ready to be shipped. This is a disadvantage because this could lead to more expenses and more time that is need to finish the product. This is not the case in Spiral Mode because you have a clear deadline, so in that aspect Spiral Model has an advantage over Scrum.\nExample: When you want to develop a flight system software that focuses for example, and you don't have a fixed deadline, but you already are done with most of the functions. The customer could say \"I also want the system to track the miles the customer traveled\" or \"I also want the system to show the user flight instructions\".This could lengthen the development time therefore cost more money.\n\n- Scrum is really depending on the skill level of the team members. Although this is true for all software development teams, in Scrum it's particularly important because it's a very agile and free software development- framework where you don't have the best guidance compared to other ones. This is a disadvantage because the outcome is more dependent on the team member's skill. In Spiral Model this is also the case so in that regard both models are the same.\nExample: When you develop a stock trading software that requires knowledge in the stock domain, a Team full of people who have no idea about stocks would very much worsen the end product or at least the development time. (Particularly in Scrum because there is no Expert role (excluding the product owner who isn't really active in the development itself) that helps during the development)\n",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 5644768,
      "meta": {},
      "text": "In essence SCRUM is about completing a whole development cycle ending with a potentially shippable product in a fixed time frame (~1 month) called a sprint. A \"product backlog\" encompasses the customer requirements and at the start of the sprint certain backlog items are selected and fixed into a \"sprint backlog\" whose items ideally are fully planned, designed, developed and verified until the end of the sprint. The resulting product increment is then reviewed and the cycle starts from the beginning.\n\nAdvantages:\n- A tight feedback-loop is \"built into\" SCRUM. e.g Short daily meetings and sprint review meetings mean that teams always have a good overview on what their colleagues are doing and can work together more effectively. \nThe spiral model does not explicitly state how teams should work together and thus can't provide this level of team work by default.\n- Developers like to implement new features and do e.g verification and documentation work \"later\" (i.e never or not with the same effort). Using SCRUM they are forced to complete these less liked (but extremely important for software quality) activites for new features until the end of the sprint. \nIn the spiral model verification is done much later in a separate iteration, by this time the project deadline might already be really close and proper documentation and verification is thrown under the bus.\n\nDisadvantages:\n- SCRUM is designed to work for small teams and quickly falls apart for larger teams. E.g a daily meeting with 50 people that briefly explain what they did is not feasible. The spiral model is not explicit about how meetings should be conducted and thus can be tailored to fit bigger and more traditional team structures.\n- Colleagues need to reliably adhere to the SCRUM processes and be experienced enough to predict how much the can do in a sprint otherwise they can't reliably complete a whole development cycle until the end of the sprint. Each iteration of the spiral model focuses on a specific aspect (e.g testing) which might be easier to plan for unexperienced developers.",
      "score": 89.6,
      "language": "ENGLISH"
    },
    {
      "id": 5621256,
      "meta": {},
      "text": "Scrum is an iterative incremental software development process and a key framework in agile methodologies. The main roles in Scrum include Scrum master, Product Owner, and Scrum Team Members. They as a team fulfill Product Backlog, Sprint Backlog and Increment by  having different meetings over a period of time called sprint to fulfill orders.\n\nThe first advantage is that Scrum can help teams to complete the project quickly and efficiently. For example, one sprint lasts only two to four weeks, when problems are encountered, they are shared in the daily sprint meetings and resolved in a timely manner. The communication with project owner and clients is frequent, which allows the team to move to corrective action more quickly. In contrast, the spiral model has long duration, is suitable for large and complex projects, and spends much time on risk assessment to keep the project on track.\n\nThe second advantage is more control and reduced risk. For example, teams communicate and collaborate on a daily basis, reducing unexpected unknowns or crises. By more focusing through collaboration in Scrum, project risk reduced also. In contrast, the spiral model also have reduced risk due to the risk assessment stage of each stage. However, it relies too much on risk analysis experience and technology, and once there is a deviation in the risk analysis process, it will cause heavy losses.\n\nThe first disadvantage is the high demanding on personnel. For example, If there is no suitable scrum master, the work of guiding won't be completed. If a member leaves in the middle of the sprint, it will be difficult to find a replacement member, which may cause the failure of scrum. In contrast, the spiral model is less demanding on personnel.\n\nThe second disadvantage is the lack of support for large and complex software. For example, with large teams, communication cues that must be maintained reduce the effectiveness of practices such as face-to-face communication and review meetings. In contrast, the spiral model is more suitable for large and expensive system-level software applications.\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621605,
      "meta": {},
      "text": "The core essence of SCRUM is to be suited for the change in the development, namely solving the problem of interruptions. And the communications between customers, developers, managers, and testers are important. \n\nAdvantages of SCRUM:\n1. The scrum is more flexible, a new activity can be started even the activity before is not finished.\nIn scrum, different works are performed parallel, like rugby.  \n\n2.  It is easier for the scrum to make sure that the consumer is satisfied.\nBecause there are scrum meetings for a better communication during the development. After different meetings, the tasks in every phase are more exact and the impediments also can be easily cleaned up.\n\nDisadvantages of SCRUM:\n1.   The project can easily derail if the product owner is not clear about what outcome he or she wants because there is no exact process.\n\n2. The daily scrum meetings is expensive and can be inefficient. Because the time of emoloyees are also paid.\n\nSCRUM VS. Spiral Model:\n\n1. flexibility:\nIn Spiral model, iterations and the activities in each iteration are the same, it is not no flexible like the SCRUM. And the change can not be directly executed until the next iteration comes.\n\n2. satisfaction:\nThere is no daily communication like scrum meeting. \n\n3. no exact process:\nObjectives, alternatives and constrains need to be determined at the beginning in the Spiral model. And risks need to be identified and resolved. So the project can not easily derail like SCRUM. But if the risk could not be resolved, the project can also derail.\n\n4.  expensive scrum meetings:\nIn Spiral model, iterations and the activities in each iteration are the same, it is time-spared. So it it not like the scrum meeting, which costs much.",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5621714,
      "meta": {},
      "text": "The core essence of SCRUM ist splitting up the project backlog into smaller sprint backlog. These tasks have to be completed in each sprint, which has a 2-4 week timeline. Afterreview\n\nOne of the advantages is the adaptability of SCRUM, as the team will review the last sprint it will be able to improve/change for the next sprint. In the Spiral Model, the team is only planing for the next cycle but will not reflect on the past. \nAn other advantage ist going through the backlog step by step. For example, doing only models for the first sprint in order to get an overview of the system to be implemented. In the Spiral model, the developers would start implementing a tiny part and test that, without having an overview of the end product.\nHowever, SCRUM only works in small teams and therefore is difficult to scale. Especially communication and the daily team meetings are getting more time intense the bigger the team will be. With the Spiral Model, the teams can easily be split up into smaller teams or iterations.\nIn addition, with SCRUM it can happen to loose sight of the deadline. If you wrongly split the product backlog up into the sprint backlogs and miscalculate at the beginning, it can happen that you will not be able to meet the deadline as the supposedly smaller tasks take up more time that you have credited them for. With the Spiral Model, this is less likely to happen as you don't split the big tasks up, but more go trough them in interactions.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644309,
      "meta": {},
      "text": "Scrum focuses on iteratively creating runnable increments of code that add up to the final product in the end instead on . This makes it testable early and also highly adaptable to change during the production phase. It also focuses on developing in smaller teams and improving communication among developers and to the customer by regularly scheduling 15 minute meetings.\n\nSince testing is possible early critical errors can be spotted during production before they affect components or functionality developed afterwards. This minimizes the risk of developing components that don't work together and makes finding errors easier. In a recent project it turned out that we couldn't use the library we wanted to together with our server framework. But because we developed server and control objects at the same time, we could adapt to a new library without much effort.\n\nAlso because the project starts off building a most basic system and refining it throughout the project phases. This allows requirement changes to be applied better.\nShould the customer decide during early testing that his employees need a simpler interface with less keyboard interaction to be more efficient, the change can be discovered and applied early.\n\nDisadvantages of scrum are that the technique only works if the team is very well versed in scrum and sticks to the defining phases without cutting corners. If communication or the common is disrupted developers will work against one another or develop an unwanted product.\n\nAlso it's not a deadline focused approach which makes it hard to estimate time frames and also convince managers, since you can never tell when the product will be finished but also how the final product will look like.\n\nThe spiral model evaluates risks before an iteration while srum does it afterwards. -> better for risky projects and more consistent.\nIt shares the same problem as scrum concerning time estimates and number of required production phases.\nAdditionally it is even more complex than scrum since risk evaluation requires expertise and every phase needs additional documentation.\nTo name advantages the spiral model also focuses on delivering running code early and is also highly adaptable to change since alternatives are always considered and planning is happening throughout the process.",
      "score": 62.5,
      "language": "ENGLISH"
    },
    {
      "id": 5644754,
      "meta": {},
      "text": "Well, SCRUM is a part of the Agile Manifesto (methodology) of a following essence: SCRUM is a (agile) technique that deals with interruptions (changes in the project), manages and controls software and product development\nwith rapidly changing requirements so as improves risk management by improved communication,\ncooperation and the delivery of product increments. The idea is to iteratively work on parts of the product backlog and incrementally add them to the existing project after completing the tasks in the frame of sprints. \n\nSpeaking about pros of SCRUM, it, firstly, can help teams to complete project deliverables quickly and efficiently: with the help of sprints and exact division of the project into the pieces. For instance, if the project is working on bike rent app (such as bolt etc), in the first sprint the team can implement search for available bikes and check radius, in the second - reservation function and so on. Comparing to the spiral model, I would say SCRUM adopts more efficient way to implement new parts of the project as spiral model should always deal with risks and as the number of phases is unknown, implementation can take some time. \nSecondly, SCRUM, being agile, adopts feedback from customers and stakeholders, by the ability to release certain working deliverables relatively fast: for instance, customer needs to cut one or another function down or add something and with SCRUM this process is much more doable, since every sprint period new deliverables are being released. Spiral model is also good for customer satisfaction: we can involve customers in the development of products at early phases.\n\nDwelling on cons, scrum often leads to so-called scope creep, due to the lack of a definite end-date. This can happen, if the team would decide to change or implement something too often. So as in spiral model, where the end of the project may not be known early and the spiral itself may go indefinitely. \nAlso, SCRUM in large teams can be challenging, as it requires then a lot of connections between all members and can lead to slowing of the whole process work. Spiral model, in contrast, is especially good in large and costly projects, whereas for the tiny one it is not that applicable as SCRUM is.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644856,
      "meta": {},
      "text": "Scrum is a technique used in agile software development, it deals with rapid changes using an iterative and incremental approach. In Scrum we have sprints, during which the team works for a certain amount of time (usually 2-4 weeks) on the requirements listed in the product backlog (created during project kickoff meeting) that we selected to the sprint backlog for the current sprint during the sprint planning meeting. We have meetings before and after each sprint, also daily meetings during the sprint, and each sprint creates a potentially shippable product.\n\nAdvantages\n- It is able to deal with sudden changes in the project. \nEx:  When the product owner requires an additional feature to the product (being able to choose the music in Bumpers Game). The developers should be able to adapt to the changes effectively.\n- Improved risk management by good communication and cooperation between team members, Scrum master and the product owner. \nEx: An error in the program could be spotted and dealt with quickly because the regular meetings helped the team to notice it sooner.\n\nDisadvantages\n- lack of cooperation and participation in the team could lead to project failure.\nEx: When one member does not take responsibility and do their part of the work, or don't attend meetings, there can be a hindrance to the workflow because the task in the product backlog are closely connected to each other.\n- large teams and large projects are difficult to manage with Scrum and requires a highly trained team\nEx: A very high priority task is not handled by anyone close to deadline. People lost track of what was done already because of poor task division.\n\nSpiral model has 9 iterations and in each iterations 4 major activities (including risk management) are carried out. The length of iterations are however not specified and there is less interaction with the customer and unlike in Scrum, there is no potentially shippable product after every iteration. In Scrum, the large project is divided into smaller tasks. In spiral, model we have different stages in the software development like software product design or unit testing. \n",
      "score": 60.4,
      "language": "ENGLISH"
    },
    {
      "id": 5644915,
      "meta": {},
      "text": "Scrum is a framework, that is centered around continuous improvement, for the development and delivery of products. It is structured in a way that helps teams to adjust to fluctuating changes in conditions or user requirements. The cycle nature of a scrum allows for this, as the short release cycles allow for the improvement and continuous product incrementation. \n\nThe most common and biggest advantage of a scrum is the fact that it is adaptable and flexible, and hence perfectly applicable for situations that do not have initial clearly identifiable goals and requirements.\nAn example for this can be seen in classic software development, where the requirements a customer might have can change from time to time, and hence the project needs to work in a flexible manner allowing those changes.\nSimilar to scrum the spiral model can also handle flexibility in requirements, as change requests in later phases can still be easily incorporated. \n\nA second advantage is the fast time to market that scrum has. As it requires less a less comprehensive initial planning and delivers a \"finished\" product to the customer after every sprint iteration. This is also very similar to the spiral model, as there each iteration of the spiral also creates a new and improved version of the product. A good example of this is app development, as many functionalities are not defined in the beginning and are only added over time after the app has been introduced to the market. \n\nScalability of scrum is a major disadvantage and hence scrum should not be used for large scale projects. This is due to the fact that a very cooperative and communicative team is required for it to be successful, which can be hard in large projects.  Whereas the spiral model can be implemented well when working on large projects, as one tries to identify all risks in beforehand within every spiral of the model.\n\nLastly a possbile disadvantage of scrum may be that it is hard to check for quality, as this requires teams to go through an aggressive testing process, which is something that mostly isnt covered comprehensively in a scrum as a scrum is more project and result orientated. Similarily the spiral model is good at minimising risk, but here it also is difficult to initially check for quality as it very much is based around risk analysis.\n",
      "score": 72.9,
      "language": "ENGLISH"
    },
    {
      "id": 5619558,
      "meta": {},
      "text": "The core essence of scrum is agility to cater to new requirements for a project. This means that the team is able to manage spontaneous changes in those requirements. In SCRUM teams go through sprints which are short time periods in which everyone binds themselves to finishing a part of the requirements.\n\nThe following advantages and disadvantages of SCRUM will be summarized through the example that a software startup would like to create their first prototype for a new social media platform. \n\nFirstly, SCRUM is advantageous in the following example because the team will be centered around quickly adapting to any new changes. This is good because the requirements can be versatile and thus very prone to change. Secondly, SCRUM is also time efficient because the short sprint deadlines mean that people are more prone to finishing their tasks as fast as possible.\n\nOn the other hand, SCRUM doesn't place a limit on the amount of time that is allocated towards finishing the project. This means that it could take an indefinite time and hence may never get finished. This causes the second disadvantage that there may be an indefinite amount of costs and resources that are spent and depleted to fulfill all requirements.\n\nOn the one hand, SCRUM focuses on agility and quick adaptation to changes within the project requirements whereas the spiral model takes a more comprehensive approach to solving issues by deliberately planning out alternatives and solutions to potential issues ahead. The complexity and absence of flexibility to sudden change is also reflected within the termination if risks cannot be resolved make it a difficult candidate for projects.\n\nWhile both SCRUM and the spiral model share the planning of sprints and iterations, the spiral model holds itself to the software lifecycle whereas SCRUM holds itself to the requirements. In doing this the spiral model holds itself more to specific focuses while SCRUM focuses on achievement based on fulfilled requirements.\n\nAlthough both models have indefinite times for finishing the project, the progress on requirements makes it easier to know when the project will be finished.",
      "score": 54.2,
      "language": "ENGLISH"
    },
    {
      "id": 5620292,
      "meta": {},
      "text": "The scrum is a group of people consisting of three rolesÔºöThe product owner, the scrum master and the developers. The development process of the scrum is divided in several periods of about 2 to 4 weeks, the so called sprint. At the beginning of each sprint the scrum members meet together to create a to-do-list of the sprint, the sprint backlog, it contains items in the product backlog created at the beginning of the development process. The result of each sprint is a potentially shippable product increment, items that are nit done as planed be moved back to the product backlog. During this process, the product owner tells the developers what is desired. The scrum master guides the team and manage the progress of the development.\npro:\n1) A large project is divided in to smaller part (sprint backlog). The team can focus on the tasks in the current sprint\n2) The progress of each sprint is visible, because a potential shippable product is available. Having a working system, tt is easy to determine what should be improved and which functionalities are still missing\ncontra:\n1) The team member have to be experienced, especially the scrum master. Because he has to guides the team through the project and motivate them, also he has to know when the progress should be accelerated. The team member have to know how to coordinate with each other, too.\n2) scrum is not suitable for large teams, because the coordination will be challenging. \nComparison to the spiral model\n1) in the spiral model the coding is done in one iteration, instead of dividing the project in items. It increased the difficulty of project management\n2) The process design, implementation and testing are separated in different iterations, they are done in a linear order\n3,4) The spiral model doesn't define the role of the team members\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5621929,
      "meta": {},
      "text": "Core essence of Scrum:\nScrum is an agile project management method characterised by sprints (short periods of fixed length) in which a team is assigned a certain amount of work and after which a potentially deliverable product increment is developed. After a project kick off meeting the requirements are prioritised in the product backlog and during a sprint then some items of the backlog are chosen and then worked on. At the end of a sprint, the product increment is reviewed and the next sprint planning meeting starts. \n\nAdvantages Scrum:\n-  very adaptable and flexible and a good choice when there are rapidly changing requirements, as the product backlog can be updated over the course of the project progress. For example, if the customer decides he wants some additional features after the project has already started, the product log can be updated without having to start from scratch\n-  allows for constant feedback from all stakeholders which allows for a better use of time and cost resources. For example, during the daily sprint meetings the team members can communicate in an efficient way\n\nDisadvantages Scrum:\n- difficult to scale as it works best in small teams. For example, if a big product has to be delivered, and the chosen solution is simply to add more scrum teams with own owner then it is very difficult to manage this and coordinate communication between these teams\n- Extensive training/experience of the team members is needed. For example, if the Scrum Master has no idea how a scrum team is managed, he will fail to coordinate between teams for the tasks being done and this will most likely lead to chaos\n\nDifference to Spiral Model\nThe spiral model is better at risk handling and therefore great for all projects prone to different types of risks, but the scrum one is better at managing time and effort and removes unnecessary activities that affect time and energy. In scrum there is more interaction with the customer, as in the spiral one they focus on risk and their causes. Scrum does not need a documentation, whereas Spiral does",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5621932,
      "meta": {},
      "text": "SCRUM ist eine agile Art der Softwareentwicklung, die sich darauf spezialisiert mit √Ñnderungen in den Anforderungen umzugehen. Das System basiert im wesentlichen auf der Abhaltung von aufeinander folgenden Sprintperioden sowie Backlogs. Aus dem √ºbergeordneten Produktbacklog wird ein kleinerer Sprintbacklog erstellt, welcher innerhalb eines Sprints abgearbeitet wird. Nach jedem Sprint, welcher zus√§tzlich t√§gliche Meetings enth√§lt um fr√ºhes Teilen von Informationen zu f√∂rdern und von einem Scrum Master organisiert wird, ist das Ziel ein theoretisch auslieferbares Softwarefragment zu produzieren, welches bereits funktioniert. √Ñnderungen an den Backlogs sind dabei immer nur zwischen den Sprints m√∂glich. \n\nVorteile von SCRUM: \n\n- Durch SCRUM, ist es deutlich einfacher mittels regelm√§√üiger Kommunikation mit dem Kunden das Produkt genau nach dessen Vorstellungen zu entwerfen, da dieser nach jedem Sprint Feedback geben kann und um √Ñnderungen oder Verbesserungen bitten kann. Werden vom Kunden sehr viele Features f√ºr ein Programm vorgegeben, kann dieses schnell un√ºbersichtlich werden. Durch SCRUM wird es dem Kunden leichter gemacht die ben√∂tigten Features an den tats√§chlichen Bedarf anzupassen. \nDies ist im Spiralmodell ebenfalls m√∂glich, auch wenn in nicht ganz so ausgepr√§gter Form.\n\n- SCRUM vermeidet Probleme welche durch mangelnde Kommunikation zwischen den Entwicklern auftreten k√∂nnen da durch die t√§glichen Meetings ein regelm√§√üiger und fr√ºhzeitiger Kommunikationsfluss entsteht. Plant ein Entwickler eine √Ñnderung an einem Teil des Programms der auch andere Komponenten beeinflusst, so k√∂nnen sich die anderen Entwickler besser darauf einstellen und es werden Inkompatibilit√§ten vermieden. \nIm Spiralmodell sind die einzelnen Phasen deutlich komplexer, was es f√ºr kleinere Projekte nicht so einfach macht die gleichen Effekte wie bei SCRUM zu erziehlen.\n\nNachteile:\n- Die hohe Freiheit von SCRUM kann zu ungekl√§rten Zust√§ndigkeiten und Hierarchien f√ºhren, was zu ineffizienter Entwicklung f√ºhren kann, da sich zum Beispiel niemand f√ºr etwas verantwortlich f√ºhlt. Dies wird im Spiralenmodell durch klarere Definition der einzelnen Phasen vermieden.\n\n- Die Kommunikation zwischen mehreren Entwicklungsteams bei gro√üen Projekten kann sich zu einer sehr schweren Aufgabe entwickeln und somit viele Ressourcen einnehmen die sonst f√ºr die Entwicklung genutzt werden k√∂nnten. So m√ºssen zum Beispiel eigene Scrum-Master f√ºr die Organisation existieren. W√§hrend das Spiralprojekt sich schlecht f√ºr kleine Projekte eignet, ist es einfacher es auf sehr gro√üe Projekte zu skalieren.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622792,
      "meta": {},
      "text": "agil.",
      "score": 0,
      "language": null
    },
    {
      "id": 5622891,
      "meta": {},
      "text": "Scrum is another agile way to develop software or products. In general, there are predefined development cycles called sprints, which result in the delivery of a product increment, so to say a new improved version of the previous product. Scrum should accommodate for change and improve communication, collaboration and delivery while defining roles and areas of responsibility for each person in the team. \nA disadvantage of scrum is the fixed-length development cycle. If the cycle is close to ending, one might not start developing on another ticket, because time runs low and they would not finish it. The development phases in the sprint model are much more flexible. \n\nOn the other side, this is also an advantage as it makes estimating when a new increment is finished apparent (always after the sprint). The spiral model also has \"development phases\", but their length is not as clearly defined.\n\nAnother of scrum's disadvantages is that you have to define roles like scrum-master, product-owner, etc. to the team members which takes time and knowledge. There are no such things as roles in the spiral model.\n\nBut this actually also makes questions of who is responsible for what extremely easy to answer. In the spiral model you actually have to think about those questions on a case to case basis to know who is responsible for what, as there is no such thing as a procedure one can follow.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620359,
      "meta": {},
      "text": "Scrum bezeichnet eine Technik zur Projektstrukturierung und Projektmanagement. Anf√§nglich wird ein Product backlog erstellt, welcher die gestellten Anforderung an das Produkt in priorisierter Reihenfolge enth√§lt und nach und nach in sogenannten Sprints abgearbeitet werden. F√ºr jeden Sprint gibt es ein bestimmtes Zeitlimmit, in der die Anforderungen eingearbeitet werden, sodass am Ende von jedem Sprint ein funktionierendes Produkt besteht mit diesem dann weitergearbeitet weren kann an den n√§chsten oder ge√§nderten anforderungen im n√§chsten Sprint, bis das Projekt beendet wird.\nNachteile:\nBei Scrum haben die Sprint feste Zeitlimit. Das bedeutet, dass wenn man nicht fertig wird zum Sprintreview sich alle anderen Sprints verz√∂gern, wenn man z.B. kein fertiges Produkt zum pr√§sentieren vorzeigen kann.\nDa am Anfang bereits das Sprint backlog erstellt wird, ist es zeitaufw√§ndig √Ñnderungen einzuarbeiten und damit alle anderen Sprints nach hinten verschieben, wenn z.B. der Auftraggeber seine Anforderungen an das Produkt √§ndert.\nDoch auch bei diesen Punkten gibt es Vorteile:\nDas Zeitlimit kann sich auch positiv auswirken. Dadurch wird Druck ausge√ºbt um z.B. ein fertiges Produkt bis zum n√§chsten Sprint Review zu haben.\nAu√üerdem ist eine gute Kommunikation gegeben, da sich der Product Owner in jeden Sprint Review ein Produkt anschuen kann und z.B. auch neue Anforderungen stellen kann. Dies macht die √úberrbeitung einfacher und man erh√§lt direktes Feedback.\nDie Vorteile √ºberwiegen meiner Meinung nach die Nachteile, da es mehr Struktur schafft un dman trotzdem noch gut  auf √Ñnderungen eingehen kann.\n\nIm Gegensatz zu Scrum gibt es beim Spiral Model keine feste Zeiteinteiliung. Dadurch hat man weniger Druck und wenn etwas l√§nger dauert ist es kein gro√ües Problem, allerdings kann sich das Projekt dadurch auch sehr in die L√§nge ziehen. \nEs gibt auch einige Unterschiede zum Planen von Zielen und der Kommunikation. Beim Spiral Model werden neue Ziele vor jeder Itaration neu definiert und nicht am Anfang festgelegt. Diese werden daher auf Grund der vorherigen Ergebnisse entwickelt. Dadurch ist auch nicht eine so enge Kommunikation m√∂glich dennoch wird bei nach jeder Iteration R√ºcksprache gehalten.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5620534,
      "meta": {},
      "text": "Scrum is a technique of planning the work, that provides developers divide a big project on couple small parts. To control the workflow development team discuss on daily scrum meeting \"what is done?\" and \"what isn't done?\" and at the end of week team demostrates the potentially shippable product increment to the product owner. Product owner makes a response if he is satified of work or not, what need to be changed or maybe removed.\n\nPros:\n1) Easy to control workflow of all stages of project during the development its.\n2) Flexible system provides to easy cope with the changes required by product owner\nCons:\n1) Without good cohesion and understanding inside team project will be done difficulty\n2) Developers team needs a good scrum master, that will be believe in their team. Completly centralized system can lead to failure in the project\n\nSpiral Model as SCRUM similar in iteractive design, but a big disadvantage in compare to SCRUM, that if idetified risks is not resolved, whole project will be terminated.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621737,
      "meta": {},
      "text": "SCRUM is a model/plan, where you plan for one iteration and work. You don't plan to complete the project at the beginning. One sprint (iteration) get planned and then execution takes place. You review the plan and what everyone has done every day for up to 15 minutes, and make changes to the plan if needed. Also, at the end of the sprint you review all you've completed and if you find areas to improve you can start a new sprint. So basically, you continuously review and adjust your plan for better delivery.\nWhile the Spiral model is one time planning and then execute it. Here you have multiple planing phases to adjust and change the project. This can be positive as well as negative. It could improve the end product a lot or be just a waste of time, but either way, it's a good practice.\nSpiral Model has up to 3-4 Phases for developing and testing, so on. And SCRUM can have as many sprints as you like, they just represent changes or updates to the project.\nOver all SCRUM is helpful not only for developing but also for later supporting and updating the product.",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5644394,
      "meta": {},
      "text": "Scrum is a technique for developing a software in which the process is split in individual sprints up to 4 week. For each sprint the team has to complete the sprint backlog items which derive from the product backlog and therefore deliver a potentially shippable product increment. Before each sprint there is a sprint planning and after each there is sprint review and sprint retrospective that make sure the development goes in a organised and productive way.\n\nLet's imagine the following scenario: A software is needed for a fast food restaurant that allows the staff to manage the orders received from the touchscreens. This software is not a big project and wouldn't require big team for development.\n\nAdvantages: \n1. Scrum is cost-effective because it doesn't require huge control and a lot of documentation That would be advantageous for both the client and the developer since the client doesn't pay a lot and the developer can have more accessible prices the lead to more clients. On the other hand the spiral model is for big project and it is expensive due to the risks analysis phase.\n\n2. Another advantage for both the client and the developers is that there is a shippable product increment in each sprint which is presented to the client and his feedback is taken into account. In this example, the owner of the restaurant can test the software after each sprint and say what has to be changed. In the spiral model the customer can also see and review the test and different stages.\n\nDisadvantages:\n\n1. Using scrum for bigger project may be challenging. For instance, if the fast food restaurant was enormous with more than 500 sitting places and a lot of orders every minute the software would be bigger. It would be difficult to implement a lot of features in such a big project because extensive training and precise coordination would be needed. On the other hand, the spiral model is just for such big projects because there is risk analysis in each iteration.\n\n2.  When using scrum methodology you cannot predict the exact final delivery of the projects because it leads to scope creep and always keeps project managers demanding new functionality to be delivered. If you use the spiral model you will bump into the same problem because we don't know the number of phases at the start of the project and it's hard to estimate time.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644594,
      "meta": {},
      "text": "Scrum is a method for managing software development when requirements for the software can change within short intervals of time. \n\nEvery SCRUM projects begins with a product backlog, which is based off of a problem statement which is created during the project kickoff meeting. It is a collection of items (usually requirements) set in place by the product owner in collaboration with the project manager. These are then, based on priority, put into a sprint backlog for a sprint (2-4 week work session). During a sprint there are daily Scrums to assist with group cohesion. At the end of every sprint there is a potentially shippable product increment. After this, the sprint backlog is changed before a new sprint begins, with the process ending once the backlog has been emptied or a time limit has been reached. \n\nAn advantage of sprints is the fact that they allow a rapid initial release while still making progress on a project. In contrast to this spiral models only have a shippable product upon completion of a far longer process. This can be helpful with products that have high competition. \n\nThe flexibility SCRUM offers is another advantage it has over the spiral model. Being able to change the requirements at a fairly rapid rate in comparison to our prior model, allows us to match requests for change that customers may have, allowing us to retain a loyal consumer base.\n\nA disadvantage of SCRUM is that without a certain deadline it can lead to scope creep, with new requirements being constantly added on with the project never truly reaching completion. In comparison to this the spiral model is far more rigid, not allowing for such changes. This can especially be seen in games where development constantly remains in a beta phase, never to achieve full release.\n\nAnother disadvantage is that SCRUMs mostly require smaller teams, to ensure that the scope remains small and that cohesion can stay intact. This means that it isn't particularily scalabe in comparison to the spiral model. A consequence of this disadvantage is that larger groups can't stay cohesive despite daily SCRUMS, leading to stagnation in the development process. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622062,
      "meta": {},
      "text": "Scrum is a software development technique characterized by its agility and ability to deal with interruption. The main idea of scrum is to have a team consisting of a product owner, scrum master and developers. Together they plan sprints by drawing goals for them, and try completing them in about two weeks, to then evaluate it, have an increment in the product and repeat the process if needed.\n\nAdvantages:\n- Allows parallel processes, unlike the waterfall model. For example, testing can take take place at the same time as development. The spiral model on the other hand doesn't allow this.\n- Agility makes it easier to get feedback from customers. An example is an application still in the beta phase, but since it was developed in Scrum, it is usable. This doesn't work for the spiral model in all cases.\n\nDisadvantages:\n- Undefined end-date in most cases, since unexpected issues may occur with any sprint and the workflow is mostly planed for the next sprint. An example would be an application where many bugs occur in each sprint delaying the shipment of the product in this manner. This is less likely to happen in the spiral model.\n- Daily meetings may be a hassle for introverted team members, especially considering the fact the introversion is not rare among software engineers. Daily meetings are not necessarily a part of the spiral model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622880,
      "meta": {},
      "text": "Scrum ist eine System f√ºr das Managen und Entwickelen von Produkten, vor allem Software, bei denen sich in der Entwicklungsphase die Anforderungen h√§ufig √§ndern. Es minimiert dabei Risiken durch verbesserte Kommunikation und Kooperation, als auch durch das Entwickeln des Endprodukts in Inkrementen. \n\nWelche Vor bzw. Nachteile hat Scrum?\nEin Nachteil von Scrum ist der sehr hohe Kommunikations und Abstimmungsaufwand, der durch die DailyMeetings, das Sprint Planning, das Sprint Review und das Sprint Retrospektive Meeting entsteht. Diese Zeit fehlt dann f√ºr die effektive Produktentwicklung. \nDies ist vielleicht noch nicht so ein gro√ües Problem bei kleinen Teams wie man sie in Startups vorfindet aber wenn die Teams gr√∂√üer werden wie das bei vielen Softwareunternehmen der Fall ist, kann das schnell einen signifikanten Teil der Arbeitszeit ausmachen.  \nBei dem Spiral Model hat man w√§hrend der Implementierung weniger Kommunikations Overhead, da man w√§hrend dieser ein lineares Model benutzt. Daf√ºr muss man aber vor und nach der Implementierungsphase viel und genau Absprechen.\n\nEin weiterer Nachteil ist inherent mit der Agilit√§t von Scrum verbunden und zwar das wenig in die Zukunft geplant werden kann. Somit l√§sst sich beispielsweise schlechter absch√§tzen wie viele Ressourcen man ben√∂tigt oder wie lange ein gewisses Projekt dauert, was allerdings Entscheidende Metriken f√ºr Kunden sind.\nAuch im echten Leben sieht man h√§ufig das Productlaunches nach hinten verschoben werden m√ºssen weil neue Probleme bei der Entwicklung aufgetaucht sind die man vorher noch nicht abgesehen hat. Solche Verschiebungen sind oft sehr kostspielig f√ºr die jeweiligen Unternehmen.\nAuch bei dem Spiral Model besteht dieser Nachteil, da auch hier iterativ gearbeitet wird.\n\nScrum bietet aber auch viele Vorteil, so f√ºhrt zum Beispiel die flache Hierarchie und die flexible Aufgabenverteilung zu kurzen Kommunikationswegen zwischen den Teammitgliedern.\nZum Beispiel konnte man beim Team Projekt jeder Zeit die Anderen um Hilfe beten, falls man nicht weiter gekommen ist.\nEinen √§hnlichen Vorteil bietet hier auch das Spiral Model.\n\nEinen entscheidenden Vorteil bieten die h√§ufigen Meetings aber und zwar das Probleme fr√ºhzeitig erkannt werden k√∂nnen und man so schnellst m√∂glich L√∂sungen ausarbeiten kann.\nBeispielsweise sehen die anderen Teammitglieder schnell bei den Daily Scrums ob jemand im Zeitplan zur√ºck f√§llt und man k√∂nnte zum Beispiel dann genau diesem Bereich weitere Ressourcen zu Verf√ºgung stellen.\nHier ist das Spiral Model nicht ganz so schnell wie Scrum, da Probleme erst nach einer Implementierungsphase festgestellt werden k√∂nnen, da diese linear geschehen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644272,
      "meta": {},
      "text": "Scrum ist eine Technik um Softwareentwicklung und Produktentwicklung, bei der es zu Anpassungen w√§hrend der Entwicklung kommen kann, zu managen. Bei Scrum gibt es verschiedene Teamrollen, die jeweils eigene Aufgaben haben. Der Scrumprozess besteht aus Product backlog, sprint backlog, einem Sprint mit daily scrum meetings und einem potentiell auslieferbare Teilprodukt.\n\nDer erste Nachteil von Scrum ist, dass es f√ºr gro√üe Teams ungeeignet ist, da bei Scrum die Kommunikation eine sehr gro√üe Rolle spielt.\nBeispiel: Wenn die Scrum meetings anstatt mit 5 Personen mit 20 stattfinden, brauchen diese Meetings viel l√§nger, da jeder seinen aktuellen Stand, etc. teilen muss. Wenn diese Meetings t√§glich stattfinden geht jeden Tag viel Zeit verloren.\nVergleich zu Spiral Model: Bei dem Spiral Model kommt es nicht ganz so sehr auf die Kommunikation an. Hier leidet man zwar auch unter schlechterer Kommunikation, wenn die Teams gr√∂√üer werden aber das Spiral Model baut nicht so sehr auf Kommunikation auf, wie Scrum.\n\nDer zweite Nachteil von Scrum ist, dass wenn Teammitglieder, das Projekt verlassen, Scrum sehr darunter leidet. Man muss dringend Ersatz finden damit man mit dem abarbeiten, des Product backlog voran kommt. \nBeispiel: Ein erfahrener Programmiere, der Scrum Master ist verl√§sst die Firma. Nun muss Ersatz gefunden werden, der das Scrum Model verstanden hat und es auch in der Praxis anwenden kann. Au√üerdem muss er nun informiert werden, wie der Stand des Projekts ist, da der Scrum Master eine wichtige Rolle spielt.\nVergleich zu Spiral Model: Hier ist es ebenfalls ein gro√üer Nachteil, da man so vielleicht nicht in den 9 Iterationen fertig wird, weil die Arbeit nun auf weniger Personen aufgeteilt wird.\n\nDer erste Vorteil von Scrum ist, dass es Anpassungsf√§hig ist. Das hei√üt, dass wenn der Kunde neue Anliegen zu seinem Produkt hat k√∂nnen diese Ver√§nderungen in die Produktbacklog schnell aufgenommen werden. \nBeispiel: Der Kunde m√∂chte in seinem Spiel eine neues Feature haben und dies soll m√∂glichst schnell entwickelt werden, damit er seinen Investoren einen Prototypen zeigen kann. Das Anliegen wird also in das Product backlog aufgenommen und in den n√§chsten Sprints bearbeitet.\nVergleich zu Spiral Model: Es ist auch Anpassunngsf√§hig da immer wieder die n√§chste Iteration geplant wird. Jedoch gibt es insgesamt nur neun Iterationen.\n\nDer zweite Vorteil von Scrum ist, das durch die viele Kommunikation die Kreativit√§t und Motivation gesteigert wird, da man seinen Fortschritt mit anderen Leuten in den Daily Scrum meetings teilen kann.\nBeispiel: Man hat seinen komplizierten Algorithmus geschafft und kann dies nun stolz seinen Arbeitskollegen pr√§sentieren, die dann motiviert sind ihre schwere Aufgabe auch zu schaffen.\nVergleich zu Spiral Model: Da es hier keine konkreten Meetings gibt wird hier die Kreativit√§t und Motivation weniger gepusht.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 5644800,
      "meta": {},
      "text": "Initially, the product owner prepares the product backlog which is a list of all the tasks and shows their priorities. After dividing the task into smaller ones, the team prepares the sprint backlog, which shows its implementation. Afterward, the team decides the length of each sprint. The team makes daily meetings to share the updates. At the end of each sprint, the process is reviewed by the product owner and stakeholders.\n\nAdvantages:\n- Every member of the team takes responsibility and has a chance to improve himself in a productive environment. Also, the managers can easily see the efforts of each member in the daily meetings. This environment leads the good results. For example, the members who are not very experienced grow by learning from experienced people and making an extra effort to prove themselves and the project yields better results. It is better than the spiral model.\n\n- Another advantage is improved customer satisfaction. Daily meetings and fast feedback flow can yield popular solutions and products. Since short sprints enable the team can adjust the product based on the feedback more easily. For instance, the feedback of customers can be taken before the product has finished. Therefore, the team can adjust easily. Since the product is made as desired by the customer, it will be able to easily change in the future, and customer satisfaction will increase.\n\nDisadvantages:\n- Small teams are required to use scrum methodology. This can be compensated with teamwork, however, arranging the workforce into teams could be very difficult for large teams. Since the teams are built with a limited number of people, each person has a great responsibility. For example, if any team member leaves in the middle of a project, this affects the project very badly. The same situation could happen in the spiral model.\n\n- During the scrum, experienced people are needed. Adopting the process could take so much time therefore members need to have experience and skills to quickly and successfully perform their own tasks. For example, if a member can't catch up with their work, there will be problems in feedback and project flow.\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620329,
      "meta": {},
      "text": "Scrum is an agile software development model. To cope with frequent changes SCRUM relies on early communication among team member in for example daily meetings. Furthermore the developer process is divided into several short sprints in which a number of incremental features are added to the project to obtain a potentially shippable product after each sprint.\n\nOne advantage on SCRUM is the early reaction to changes occurring. Through the daily communication and short sprints changes can be dealt with fast and efficiently. If for example while developing the product a team member finds that a software framework that the team wanted to use is not suitable for their use (e.g. lacks some crucial features), the use of another framework can be quickly discussed and if determined beneficial adopted in the next sprint. In the spiral model this can only be discussed in the planning phase.\nAnother Advantage is the constant communication with the customer. For example a customer for a video streaming service sees the growing interest in very short video content and requests that this type of content should be handled specifically on the service. This change can then be added to the product backlog and added when suitable. In the spiral model this either can be done only in the next planning phase or since communication is not as common not at all.\nOne disadvantage is the that while SCRUM works well with a small team size it can be hard to adopt in a very large team. There the team has to be divided into subteams and special coordination had to be put in place between the different teams. For example dividing a company like Google with around 80,000 engineers into teams of 5-7 cannot be done solely with SCRUM. With the spiral model the teams can be bigger since one phase is planned extensively an can thus be tackled by a larger team.\nAnother disadvantage of SCRUM is that there is no fixed deadline to the project. For time critical project this can be detrimental. For example the development of the Corona Warnapp should not take too long (or even have a certain deadline). With SCRUM this cannot really be planned and the product is only done when the costumer accepts it. With the spiral model this can be planned better (even if not entirely).",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621490,
      "meta": {},
      "text": "Scrum ist ein Framework f√ºr die Instandhaltung und  Entwicklung komplexer Produkte, wobei Scrum  mit √Ñnderungen sowie Unterbrechungen agiert. Der erste Part des Srums, das sog. Product Backlog beschreibt den vom Product Owner eingeordneten Auftrag. Dieser Auftrag wird dann vom Scrum Master und dem Development Team w√§hrend mehreren Schritten (Sprint Backlog und Sprints mit Daily Scrum Meetings) zu einem fertigen Produkt ausgearbeitet.\n\nEin Nachteil vom Scrum ist der hohe Kommunikationsaufwand zwischen den Beteiligten. Durch die t√§glichen Sprint Meetings m√ºssen alle Beteiligten t√§glich einen Termin finden, der f√ºr alle passend ist. In dieser Zeit kann nicht produktiv gearbeitet werden. Als Beispiel bei dem EIST-Projekt, wenn eine Person durch einen anderen Termin verhindert ist, m√ºssen sich alle Teammitglieder danach richten um einen neuen Termin zu finden. \nVerglichen mit dem Spiral Model, sind dort nicht unbedingt daily meetings erforderlich. Durch den enorm hohen Dokumentationsaufwand sind aber auch in diesem Model der Zeitaufwand au√üerhalb der produktiven Arbeitszeit gro√ü.\nEin weiterer Nachteil ist, dass falls ein Teammitglied ausf√§llt, die ganze Gruppe darunter leidet. Bei einem befreundeten EIST-Projektteam f√§llt eine Person durch Studienabbruch weg und das Team hat nun Probleme diesen Verlust auszugleichen.\nAuch im Spiral Model ist dies der Fall. Gegebenenfalls ist es hier sogar noch schlimmer, da der Prozess nicht so transparent ist und somit Teampartner auch nicht so leicht zu ersetzen sind.\n\nEin Vorteil f√ºr Scrum sind die t√§glichen Meetings. Dadurch werden Probleme direkt angesprochen und k√∂nnen somit gemeinsam schnell gel√∂st werden. Bei uns im EIST-Teamprojekt hatten wir ein Problem mit der Verbindung zwischen Backend und Frontend. Dieses Problem konnten wir schnell beheben und dadurch b√∂se √úberraschungen kurz vor Abgabe verhindern.\nDurch die nicht so ausgepr√§gte Kommunikation im Spiral Model ist hier dieser Vorteil nicht gegeben.\nEin weiterer Vorteil ist die m√∂gliche Arbeitsteilung bei Scrum. Das Projekt kann in mehrere Teilbereiche eingeteilt werden. Dieses parallele Arbeiten macht keine Probleme, da durch die t√§glichen Meetings jeder Bescheid wei√ü, woran die anderen gerade arbeiten. Bei uns im Team gibt es beispielsweise eine Gruppe f√ºr Frontend und eine Gruppe f√ºr Backend. \nAuch im Spiral Model kann die Arbeit gut auf verschiedene Teilbereiche aufgeteilt werden.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621604,
      "meta": {},
      "text": "\nScrum is a methodology based framework that helps people to address highly complex problems, while delivering a product of highest value. Scrum is used to mange software product development while being capable of rapidly adapting to changing requirements. Characteristic for the Scrum process is a high level of communication and cooperation wich leads to an improvement in risk management. \n\nThe agile structure of Scrum allows a fast reaction to customer feedback and makes it possible to easily adapt to changing requirements.In the example of the currently developed lecture system (Team project) our customer could come up with a new user functionality making it possible for the user to enable two factor authentication with his phone number.\nScrum can be used for Larger Software development. The large amount of work can be divided into small easy manageable sprints amongst all team members. Example: The currently developed lecture system where each functionality is divided into a separate sprint. One sprint for the setup of the main Spring Boot Functionality, another sprint for the design and connection of the frontend etc. However this cooperative type of development would assume that all the team members are fully committed to the project, which can't be taken for granted. In realty a team member that is responsible for a key component for the software project eg. implementation of Controller Endpoints could make his work in an unprofessional manner and cause Errors. This could lead to a delay in time schedule because the mistakes made by the person had to be fixed by the rest of the team because otherwise the other work could not proceed. Another important aspect would be Quality. Although the rapid development capabilities of Scrum are positive. The Quality of the software project is hard to implement in a first place. This would require an aggressive Testing process where all functionalities are being tested by heart. Example: Functionality of a Button for Friend requests that only works in 80% of the Time.\n\nComparing the spiral and Scrum model you can say that both models have similarities but at the same time differ from each other in several aspects. Both include a testing phase, and a feedback/evaluation phase. However the spiral model lacks in Time Management. The model does not say anything concrete about length of an iteration. The most important difference is risk management as the spiral Modell has his mane focus on this topic.\n\n ",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621976,
      "meta": {},
      "text": "Scrum is an agile method for managing (software development-) projects. In scrum, the project is divided in smaller periods called sprints. Each sprint is executed by a scrum team consisting of a Scrum Master, a Project owner and regular team members (e.g. software developers).\n\nPro: \n1. Requirements can be readjusted while a project is executed: Customer needs the project to be less expensive due to budged cuts.\n2. Multiple tasks can be processed at the same time to increase efficiency: One team for backend development, another for the frontend.\n\nCon:\n1. It requires extensive training: New team members need to attend courses or an onboarding phase, which costs time and money.\n2. Requires the use of small teams: In a lot of cases it is not easy or clear in which way a big team should be divided into multiple small ones, some developers for instance might be involved with backend and frontend\n\nComparison to spiral\nPro:\n1. Projects might be terminated if risk of budged cuts can not be resolved\n2. Small teams are not intended, and therefore the whole team is involved with one iteration.\nCon:\n1. spiral can be adapted more easily because it is more intuitive.\n2. Companies with big teams do not need to change their structure to adapt the spiral model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622195,
      "meta": {},
      "text": "Scrum is a software development method where all responsibilities to manage the project are devided among 3 roles: Product Owner, development team and the scrum master. Scrum is a iterative and incremental product development, where at each iteration (sprint) a sprint-backlog is created from the product backlog. The team then figures out how to develop the backlog requirements and hold a daily meeting to compare their results and their ongoing plan. After their sprint they hold a potentially shippable product increment.\n\nAn advantage of scrum is that the scrum team has a daily meeting, which reduces the risk of creating something unwanted. An example would be that a team member misread the requirement and created a false software part. But since he talked to the scrum master in a meeting about his implementation he realized the mistake and still has time to redo his task. \nIn comparison with the spiral model, both models are good in risk handling, since the spiral model also handles risk well by doing a risk analysis and risk handling at every phase.\n\nAnother advantage is that there is a certified scrum master which guides the team and keeps them focuses and motivated. An example or comparison would be a gym coach. The scrum master is like a coach which keeps the team on the right track and also checks the progress and implementation on mistakes. In comparison with the spiral model, both are in this case also the same, since the spiral model also consists of a project manager. The manager also has the role of checking the product development during all stages.\n \n\nA disadvantage is that if any team member leaves the project, it can have a huge negative impact because every member is responsible for a development part. For example if the scrum master leaves it would be a disaster, since he is the main character who manages the whole project and plans it with the customer. The same applies also for the spiral model if the project manager leaves the team.\n\nAnother disadvantage would be that adopting the scrum framework in large teams is challenging. One could of course split the team and do \"scrum in scrum\" but it would still be a hard way to go. For example in a team of 10 people it is really hard when the scrum master has to hold meetings with all of them. It is very time consuming and also hard to keep track of who is doing which task. Unfortunatly the same also applies in the spiral model because the system does not consist of a improved communication design.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622735,
      "meta": {},
      "text": "Scrum is an agile software development model centered on the idea that the process of software development requires constant feedback and changes in the workflow. The process consists on the iteration of Sprints, which consist of a sprint backlog and daily sprint meetings, which results on an increment on the potentially shippable product. Every sprint consists of daily scrums, where the team works on the process and then reviews their work.\n\nThe feedback and the adaptability of the entire process are the two main advantages of SCRUM. For example, the client might change the product requirements during the development process, and the flexibility of the model allows the development team to quickly adapt to these changes. And the daily Scrum meeting allows developers to adapt their workflow to the needs of the team and to have an overview of the progress on other parts of the product.\n\nSome disadvantages of SCRUM include the fact that it lacks risk management, and that means that, for example, a big project could be designed with a flaw that was not identified on the start of the process.\nAnother disadvantage is that even though the length of every Sprint is fixed, the product is done only when the client accepts it. That means that the amount of Sprint iterations is not defined, and that could potentially not be suitable in a real-world scenario where the client requires a product in a strict deadline without the need for flexibility during development. \n\nIn conclusion, both software development models are agile and have dynamic planning and evaluation integrated in them. However, SCRUM lacks the risk management that Spiral emphasizes on, and SCRUM can be more flexible because it doesn't require planning for further steps of the development of the product.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644654,
      "meta": {},
      "text": "Scrum is a framework, in which the team members develop a product in an agile way within sprints and at the end of each sprint there is a potentially shippable product and the product can always adopt to changes that may occur.\n\nAdvantages of SCRUM:\n\n-> There is always a potentially shippable product that has been designed, implemented and tested. So if the customer needs the product sooner or wants to try it beforehand, the product is ready. However in spiral model the development is sequential, which means that a usage of the product beforehand is not possible.\n\nFor example if an app has to be on the market sooner than planned, it can be released with less features (but still working!) thanks to scrum.\n\n-> With scrum, complex projects can be divided into smaller sprints that are easier to design and implement, whereas in Spiral Model the project has to be handled as one whole product.\n\nFor instance, when a developer has to design and implement one very complicated system and doesn't really know where to start, she/he can prepare a sprint backlog and start working on the project sprint by sprint.\n\nDisadvantages of SCRUM:\n\n-> In Scrum, the team members set their own deadlines, which can cause the actual deadline of the project to delay, if timing doesn't work that well. In spiral model, there are only 4 phases and they have more specific deadlines.\n\nFor example, the developers can give themselves one month per sprint and considering that there are a lot of sprints and not a very long time to finish the project, the end deadline may have to be delayed.\n\n-> Scrum is a difficult method, if the team has many members. The daily scrum meetings would be way too long and lose it's meaning. The spiral method however can have many developers working on it.\n\nFor instance, if a scrum team has 15 members and each of them spoke about 5 minutes about their own works, then the daily scrum meeting would last more than an hour and the people wouldn't have time to work on the actual project.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644710,
      "meta": {},
      "text": "In Scrum planning is made at the beginning of each Iteration, followed by the execution, which has daily meetings to adjust the process. Followed by a sprint review meeting to find improvements to be made which are used for planning the next sprint.\n\nAdvantages:\n1.  the short Time in which a Sprint takes place enables for frequent changes based on the feedback of \n     the review meeting.\nexample: In case the Team isn't happy with a function of the Software it can be changed \n                IMMEDIATELY in\n               the next Sprint.\ncomparison:  In the Spiral model u only plan the project once compared to the start at each iteration in scrum.\n2.  Because of the frequent meetings scrum also creates a lot of transparency between the members of the Team, \n     because everyone has to know what the others are working on.\nexample: In large projects that are managed by time tables often times the members of the Team dont know what  \n                the others are working on and/or how the implement it, which then leads to parts of the software not \n                working smoothly together at the end of the Project, which scrum avoids by the frequent \n                communication between the members.\ncomparison: In the Spiral model there are no daily meetings which unlike scrum, which leads to less transparency \n                     between the members\nDisadvantages:\n1. Scrum doesnt work well with large Teams, because the meetings would take up way to much time\nexample: If every team member has to present their work and discuss the project, the meeting gets very long \t\t \n                and confusing.\ncomparison: This drawback gets avoided in the spiral approach because there is only one big plan at the \n                     beginning of the project.\n2. Scrum doesnt work well with very large projects, because of its complexity\nexample: basic functions worked in the previous version but building up on it the Team realizes that \t \n               the there has to be a major restructuring of the software to work well in the more complex version of \n               it.\ncomparison: this cant happen in spiral because all the plans including the complexity get \n                     preplanned before the execution.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621255,
      "meta": {},
      "text": "SCRUM is an agile methodology that addresses software and product development with rapidly changing requirements. In a project kickoff meeting, the Product Backlog is prioritised by the product owner, so that the SCRUM team can create a Sprint Backlog, the items to be implemented in the Sprint. Daily SCRUM meetings inform about developments so that there will be a potentially shippable product increment at the end of every sprint.\n\nOne advantage of SCRUM is vertical integration. You don't implement the user interface, middleware and database one after the other (horizontal integration), but instead you implement them together and can thus adapt the project and deal with changes in requirements.\n\nA second advantage is that the SCRUM team gets clear visibility on the project through SCURM meetings. The SCRUM meetings, e.g. sprint planning meeting, daily scrum meeting, sprint review meeting, give every SCRUM team member a clear overview of the project developments, milestones, problems and errors. This allows the team to progress better as everyone is informed about the status of the project.\n\nOne disadvantage is that SCRUM requires experienced personnel. Implementing SCRUM involves  intensive work and every member must have the experience and skills to complete their own tasks quickly and successfully.\n\nA second disadvantage of SCRUM is a departure of a team member during the project. If someone leaves the project, this can have a negative impact on the whole project. Since SCRUM requires the use of a small groups, the group becomes even smaller with a departure and it can be very tedious to incorporate new members in the project.\n\nThe Spiral Model does not use the vertical integration, but it is an iterative model (9 iterations) with 4 major activities. If one iteration is completed, the next iteration starts, so it is difficult for the Spiral Model to deal with changes. In the Spiral Model, there are no mandatory meetings so not all members might be well informed, but it might be easier to integrate non-experienced personnel as they have to focus only on specific tasks. The departure of a team member during the project can have negative impacts for both methodologies.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621822,
      "meta": {},
      "text": "Scrum ist eine Methode, um die Entwicklung komplexer Projekte in Team zu organisieren. Ein Scrum Master leitet die Arbeit und definiert zusammen mit dem Auftraggeber (Product Owner) ein Product Backlog, in dem die Anspr√ºche an die Software festgelegt werden. Iterativ wird von den Entwicklern die Software in wiederholenden Sprints geschrieben und in jedem weiteren Sprint inkrementiert, wobei der Scrum Master nach jedem Sprint eine enge Absprache mit dem Product Owner hat.\n\nEin Vorteil bei Scrum ist die Flexibilit√§t. Durch hohe Transparenz mit dem Product Backlog kann auf Ver√§nderung oder Probleme schnell regiert werden. Will beispielsweise der Product Owner eine Funktion doch nicht implementiert haben, kann er das leicht dem Scrum Master mitteilen, der die Ver√§nderung im n√§chsten Scrum Meeting einbringt. Beim Spiral-Modell kann schlechter mit Ver√§nderung umgegangen werden und die Transparenz ist f√ºr den Auftraggeber nicht so hoch, wodurch Unklarheiten erst sp√§ter zum Vorschein kommen.\nEin weiterer Vorteil ist die iterative Arbeitsweise. Durch die wiederholenden Sprints wird das Programm mit jedem Cycle inkrementiert und man kommt dem Endziel, dem Sprint Goal, n√§her, w√§hrend das Risiko minimiert wird. Beispielsweise sammeln die Entwickler dadurch Erfahrung und werden auf Probleme aufmerksam. Beim Spiral-Modell wird derselbe Ansatz verfolgt, nur gibt es hier keine t√§glichen Sprints.\n\nEin Nachteil bei Scrum ist, dass viel Energie in die Organisation gesteckt werden muss. Mit dem Scrum Master wird ein Teammitglied nur f√ºr das Management ben√∂tigt. Au√üerdem k√∂nnen die zahlreichen Meetings zeitaufwendig sein. Wird beispielsweise die Organisation bei Scrum vernachl√§ssigt, kann das dazu f√ºhren, dass viele Meetings ohne Mehrwert abgehalten werden m√ºssen, weil es halt Vorschrift ist. Beim Spiral-Modell dagegen gibt es keine Daily Meetings und keine Person, die zur √úberwachung der Einhaltung des Modells zust√§ndig ist.\nEin weiterer Nachteil ist, dass sich Scrum l√§sst nicht sehr leicht erweitern l√§sst. Scrum ist optimal f√ºr eine Entwickleranzahl von f√ºnf Personen. Sind es mehr Entwickler, m√ºssen mehrere Scrum-Teams entstehen und die Kommunikation zwischen diesen Gruppen kann Schwierigkeiten herbeibringen. Beim Spiral-Modell gibt es keine empfohlene Gruppengr√∂√üe, aber auch hier f√ºhrt eine Vergr√∂√üerung des Teams zu Problemen der Organisation und schwindender √úbersichtlichkeit.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622204,
      "meta": {},
      "text": "Scrum is an agile software development life cycle model, that is designed to deal with rapid changes and interruptions. This can be understood well, if compared with the original meaning of Scrum, which comes from Rugby (a team formation every time there is an interruption in the game).\n\nAdvantages :\n- Scrum is flexible in the sense that is teams without a clear understanding of the requirements in the beginning of the development cycle can adapt flexibly. The spiral model is also flexible with requirement changes, but requires the understanding of the requirements in the beginning of the development cycle to be clear.\n- Scrum has a higher causality of satisfied customers, because the scrum model involves constant communication with the customer to understand their needs with every step of the development process. In the Spiral model, the customers are also typically satisfied, but the communication with them takes place normally only in the beginning, which is when they can get a feel for the development process.\n\nDisadvantages :\n- Scrum is difficult to scale and implement with larger projects. It is definitely possible with enough training and communication, but this requires extensive training for all the team members and very accurate coordination and communication. The Spiral model model, however, is not suitable for smaller projects, because it is expensive to implement in those cases, and is more recommended for larger projects, where the budget is higher.\n- Scrum does not refer to the project deadline. The teams give themselves smaller deadlines, but it doesn't support the overall deadline. This increases the efficiency of the teams, and makes sure that everyone is doing their best for the project, but the overall deadline also needs to be managed by the product manager and stakeholders, in order to make sure that the product is delivered on time. In the Spiral Model, it is difficult to determine the deadline, because a lot of phases go into it, and it is hard to determine when these phases will be completed at the beginning of the development process.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622983,
      "meta": {},
      "text": "Im Kern von SCRUM steckt das Team, bestehend aus dem Product Owner [Verwalter des Product Backlogs, Verantwortlicher f√ºr Wertmaximierung], Scrum Master [unterst√ºtzt das Team, damit es sich selber organisieren kann] und das Entwicklungsteam [Software Entwickler, Designer, etc.]. Die S√§ulen auf denen dieses agile Team aufbaut sind Transparenz, Selbstverantwortlichkeit, Adaptierf√§higkeit, st√§ndiges Reflektieren und Kommunikation, sodass der Prozess verbessert werden kann. Dieser iterative Prozess besteht aus dem Formulieren des Product Backlogs, Priorisierung und Einteilung des Sprint Backlogs und Sprintmeetings, mit den darauffolgenden \"Sprints\" (2-4 Wochen mit kurzen Daily Scrum Meetings), wobei am Ende dieser Entwicklungsphase eine potentiell ablieferbare Produktinkrementierung herauskommt.\n\n\n1) Ein Vorteil ist die hohe Flexibilit√§t durch reflektiertes Planen/ Handeln, was in dieser Welt, in der √Ñnderungen des Marktes sehr schnell von Statten gehen, von Vorteil ist. So k√∂nnen z.B. Bugs im Produkt, die erst nach dem Launch Event auff√§llig werden schnell behoben werden. Beim Spiralmodel wird das Projekt nur einmal geplant, wobei das Risikomanagement im Vordergrund steht: optimal f√ºr lange Projekte mit hohem Risiko, sodass Schnelligkeit nicht die oberste Priorit√§t ist, wie bei SCRUM. \n\n2) Ein Vorteil ist die hohe Transparenz durch regelm√§√üige Meetings und Backlogs, samt kurzer Kommunikationswege -> das ganze Team ist im Bilde, sodass die Zufriedenheit bei den Mitarbeitern, Stakeholdern, dem Management, etc. hoch ist. So kann z.B. schnell und exakt festgestellt werden, wo ein Projekt festh√§ngt. Beim Spiralmodell hingegen m√ºssen nicht alle Beteiligten von den anderen Bescheid wissen, es gibt keine Dailies.\n\n3) Ein Nachteil ist dass Transparenz auch unbequem ist und Druck aufkommt, wenn jemand \"nicht genug leistet\", daf√ºr braucht es einen guten SCRUM Master, der die Individuen unterst√ºtzt. So kann z.B. einer gegen den anderen \"hetzen\" und es kommt Unruhe auf. \n\n4) Ein Nachteil ist, dass nicht jeder Verantwortung √ºbernehmen will. Manche Menschen sind froh, wenn man ihnen klare Anweisungen gibt/ f√ºhlen sich sonst √ºberfordert. So k√∂nnen z.B. Mitarbeiter das Unternehmen verlassen wollen, wobei der Personalmangel samt Neuanschaffung wieder kostet. Beim Spiralmodell ist die Eigenverantwortung nicht so hoch und es ist nicht so ersichtlich, wie Individuen performen, deshalb gibt es auch keine zentrale Person, wie einen Scrum Master.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5623003,
      "meta": {},
      "text": "SCRUM is an agile modelling method, its main idea is to deal with and change during the development phase, with multiple meetings throughout the process to reflect and counter issues that arise. The concept of Scrum is the iterative feature, where the specific work is completed in sprints. \n\nAn advantage of Scrum is, the multiple meetings, adaptable n flexible +\n\nrequires periods of intense work. -\n\ninvolving customers +\n\nif everyone in the team isn‚Äôt committed, the project can fail easily. -\n\n\nspiral isnt as fkexible, lack of sprints?\nperiod of guided work/specific work\nalso custoner inclusive \n\nnot dependent on individual workers work, but on risk handling skills",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644747,
      "meta": {},
      "text": "At the beginning of a project using scrum there is a kickoff meeting where all planned functionalities are collected into a product backlog. The project consists of some sprints. At the beginning of a sprint there is a sprint backlog created and these things should be implemented. A sprint is about 30 days long and each day there is a scrum meeting. At the end of a sprint there is a sprint review meeting and a sprint retrospective. \n\n\nAdvantages Scrum:\n\t-\tDaily meetings ensure that all members of the team are up to date with recent developments. This also ensures that the project is going \"into the right direction\" and if problems can be detected very early.\nExample: If one member misunderstood a task or is not able to deliver the code in time you can see it in the meetings and support him if needed.  \n Compared to the spiral model the meetings are more often whereas in the spiral model (depending on the exact usage) those meetings are after each iteration.\n-\tBy having many small sprints it is easy to adapt to changes. This is important if you do not know yet how the project is going to end.\nExample: A customer decides after interviews with customers that a rework of the current user interface is more important than adding new functionalities.\nCompared to the spiral model you do not need to know the end of the project in it's entirety yet.\n\nDisadvantages Scrum:\n-\tDaily meetings are dangerous to get too long. \n\tExample: Some team member like to show off their work and the meetings take longer as they are supposed to and other team members get bored. \nIn the spiral model this is not an issue and especially the developers can focus more on coding during an iteration.\n-\tThe larger a Team gets the harder it is to do scrum properly. \nExample: A large team with 50 members working on one project can not make daily meetings with that many people. Also it would be quite impossible for the scrum manager to keep track of everybodys work.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644921,
      "meta": {},
      "text": "SCRUM is an agile project management framework in which different roles (product owner, SCRUM master, developers, stakeholders) work together iteratively and incrementally. SCRUM consists of a previously defined product backlog and several sprints, which can be divided into sprint planning, daily scrum and sprint review meetings. Each sprint results in an incremental working system, which, together with the other sprint results, produces a final product.\n\nBy using SCRUM, the risk of erroneous development can be reduced. During the development of a software, the stakeholders can contribute their feedback after each sprint, which prevents development in the wrong direction.\nIn addition, SCRUM offers the advantage of a fast time to market, as an MVP version of the product is already provided after the first sprint. For example, in a fast-growing start-up, a software can be brought to market quickly and thus the first customers can be served quickly. New elements can then be added in further iterations.\n\nA possible disadvantage of SCRUM can be the high communication requirement. The danger with SCRUM is that too much time is spent on organization and communication instead of on the actual work on the product. For example, developers may feel disturbed by daily scrum meetings and their productivity may suffer as a result. \nFurthermore, poor sprint planning in SCRUM can lead to time losses over the entire project. For example, if the sprint backlog is planned too conservatively, the SCRUM team spends an entire sprint dealing with issues that could have been completed more quickly and misses out on making additional overall progress.\n\nThe spiral model is also characterized by an incremental and iterative approach, whereby the final product, similar to SCRUM, slowly approaches the goal. The spiral model also checks the intermediate product after each iteration, which also minimizes the risk of erroneous development. \nThe spiral model also requires communication, but this is not smaller with SCRUM due to the absence of daily meetings. Therefore, the resulting danger of unproductive developers is less. Since there is no form of small sub-problems in the spiral model as in the SCRUM sprint, there is also less danger of time loss due to poor planning.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5645056,
      "meta": {},
      "text": "SCRUM is a method to make the organization, cooperation of a project better. The core essence of SCRUM in software development is that it enables changes to deal with during the development process, different problems could be parallel handled, and also it manages risks and delivery of the project.  \n\n1. advantage: Different things could be performed parallel, for example in daily meeting different groups have different tasks. But the spiral model only enables linear process, for example the developer is only able to do one task after another task is done, which cost much time. \n\n2. advantage: The SCRUM is not anymore activity oriented. The backlogs could be created and be used repeatedly. Also the risks could be handled during each separate phase. So that it is easier to find out small mistakes during each time. However the spiral model only plans it in the end. \n\n\n1. disadvantage: The SCRUM is however complicated to manage or organize. If there is no planning the project might be in a mess. For example if groups misunderstand their jobs it might happen that they do things repeatedly. The spiral model is sequential so that the order of the tasks are simply scheduled and simple to realize.\n\n2. disadvantage: The SCRUM needs a good leader which helps to do review and summary. Otherwise if each group cannot communicate with other groups the project might seem very uncoordinated or not uniform. For example if one group does the UML diagram and another group does activity diagram, but there are differences in the next phase, the project might be separated in different ways. However the spiral model is very activity oriented. ",
      "score": 81.3,
      "language": "ENGLISH"
    },
    {
      "id": 5619873,
      "meta": {},
      "text": "Scrum is an agile process that can deal with changes, in Scrum you first formulate the goals and then work on some goals at a sprint. There you work on these goals with occasional meetings to communicate with your colleagues and react to change. You repeat these sprints until you have a shippable product. \n\nA big advantage of Scrum is being able to react to change. For example, in Bumpers if the Client wants different looking cars, you can just add them to the product backlog and resolve in an upcoming sprint. A big part of Scrum are the daily scrum meetings. They are advantageous in the way that if you depend on the results of your teammates for your implementation you find out how far they are. For instance, if I'm responsible for setting the Cars on the board in Bumpers I depend on the cars' implementation of the Cars and I get to know how far my teammates are and can adjust my implementationspeed and -order . But due to this agile way of scrum it is really hard to apply in a big team. For big companies you would have to create a hierarchy of meetings where the scrum master meets with the other scrum master and so on till everything has been discussed. It is very hard to organize these meetings. Since in a big company like Meta, with teams of hundreds, someone has to attend 3 meetings and these meetings are usually everyday, this person would have to attend 3 meetings a day. Also due to the agile way to respond to change, Scrum can't set a deadline till which the project is completed. If the client isn't satisfied with the product he can continuosly add things to the product backlog and the project will take longer.\n\nIn the Spiral Model you first develop a concept for your project and then implement it, while in Scrum you implement your project step by step and can adjust your implementation details. While Spiral Model is based on the waterfall model, scrum is an agile model. \n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5619879,
      "meta": {},
      "text": "Scrum is a way of structuring software development during its lifespan. It is a more agile spiral technique, were the design does not have to be clear up front before development begins. \n\nPros\n1.\nContinue spiral 'fan out' approach with concurrent workflows for a project, allowing for more agile adjustment of the project as new problems/solutions occur\n\n2.\nEach sprint is designed to happen quite regularly, this helps moving the project forward, as there is deadlines coming at quite a fast pace. The spiral model does not emphasize on any set limit for a sprint, often resulting in month or year-long sprints/iterations.\n\nCons\n1.\nLess structure and oversight of the project as there are multiple moving 'parts' at the same time. \n\n2.\nScrum is expensive for small projects, as there is substantial time needed for the organizational matters. The spiral model benefit from the waterfall-like structure, and can often give a faster development process for smaller projects.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620678,
      "meta": {},
      "text": "SCRUM is an IT development technique that allows implementing and adapting changing requirements throughout the project. It therefore uses agile processes, which means that work can be done in parallel. This technique requires continuous assessment of the current state and requirements of the IT development project.\n\nAn advantage of SCRUM is that changes in requirements can be easily integrated, which means high flexibility. The sprint format means that the planning process is no further than a sprint. Changes can be easily integrated into the next sprint. For example, if a new supported browser needs to be added because the customer has changed their working environment. \nIn the spiral model, the entire project is planned from the beginning and not after each iteration. \n\nAnother advantage is the high transparency of the project development process. Due to the regular sprint planning and review meetings, it is very clear what is being done and what has already been achieved, e.g. the customer can see the current status and already use parts of it.\nIn one iteration the whole project is implemented in the spiral model, there is also feedback after each iteration, so there is also transparency. \n\nA disadvantage is that the communication effort is very high, which can lead to a slower process overall. For example, in the daily stand-up meeting, the meeting time adds up very quickly and sometimes there is not news every day. \nIn the spiral model, communication is also required, but there are not that number of meetings required and therefore more time for the actual work.\n\nAnother disadvantage is that there is not much overview of the project progress. This can make it difficult to estimate how long is left in the project or the actual degree of completion of the project. For example, when proceeding to fix parts that have already been implemented, such as user interface requirements, it is not clear whether they are already useful or not. Therefore, the completion date may be set too late. \nIn the spiral model it is indicated how many iterations there are and in which phase the project is currently, therefore it is easy to tell where the project is at the moment and what the progress is.\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622589,
      "meta": {},
      "text": "Scrum is a technique that deals with interruptions by managing development with rapidly changing requirements while improving risk managment by improved communication, cooperation and delivery of product increments.\n\nAdvantages:\nScrum ensures effective use of time and money, because it enables the team to work in parallel and deal with changes without losing time or people waiting around.\n\tExample:\n\tThrough scrum you have the same backlog from which every teammember can pull his tasks and you can \t\t\t\tcoordinate yourselfs since you're always informed about the others work --> you can work parallely\n\tSpiral model:\n\tkind of also ensures the same effiectivness, but doesn't make parallel work as possible as scrum.\nThe team gets clear visibility of the state of the project through scrum meetings and the individual effort of each member can also be shown through daily scrum. This visibility helps the team to be on the same page and to make out issues very soon and react to feedback asap.\n\tExample:\n\tA team member does'nt do his job through the daily meeting he is either pressured to do something or the rest of the tesm notices and can take action.\n\tSpiral model:\n\tThe team gets a clear visibility too, but the effort of each member can't be shown in the same way as in\n\tscrum. \nDisdvantages:\nScrum can lead to scope creep, due to the lack of a definite end-date.\n\tExample:\n\tSince you don'te have a definitive end-date you just postpone the end of the project and lose yourself in unnessecary details losing the scope and not working efficient anymore\n\tSpiral Model:\n\tHere you have a definitive end date after the 4 activities are resolved in 9 iterations.\nThe daily meeting can have a positive effect as metioned before, but can also frustrate members easily, for example if a member has a few unproductive days (or not to much work to do) and has to share his workload/results in comparison to others.\n\tSpiral Model:\n\tYou don't have daily meetings, so this issue won't show in the same way and extend.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5644422,
      "meta": {},
      "text": "SCRUM is a parallel way of managing a project, unlike spiral which is linear. Scrum sprints also don't have everything planned ahead, every sprint is planned individually in scrum meetings. After a sprint, the previous is reviewed and improvements or changes can be made to the next sprint, therefore scrum is also an empirical process control model. \nAdvantage01: Because work processes in scrum model are parallel and planned before each sprint, making the project easier to adapt to changes in project requirements and fix issues. For example, if the customer suddenly decided to add a functionality, the next scrum sprint can take that into consideration immediately and the already done part can quickly adapt to the new requirements. The spiral model however divides the project into different phases, each of them linear and planned ahead, making it harder to adapt to sudden changes. \nAdvantage02: After each scrum sprint, the previous sprint gets evaluated retrospectively, and all problems and issues gets discussed and solved. This can make the next sprint better and the whole development process get optimized over time. For example, if something cause the previous development effort to be inefficient, the next sprint can fix these problems immediately. The spiral model can also fix problems, however only before each new iteration. \nDisadvantage01: While parallel process model is good for software development, it makes it harder for managers to track the whole process of the project, as there're no complete plans. This make scrum unsuitable for projects that require predictability or a specific timeline. For example, many companies have public roadmaps for their softwares, which requires planning ahead and working towards this complete plan. These projects will have a hard time adapting to the scrum model. Spiral does not have this problem though as things can be planned ahead. \nDisadvantage02: Scrum model requires all members of the team to be well trained to adapt to it. This would be fine for smaller teams, but larger projects and teams could have issues with this, resulting in scrum sprints less productive. For example, large traditional companies will find it difficult to adapt to scrum due to it having a very complexed team structure and rely on a grand plan to sync and organize all teams, and members from different teams are also not familiar enough to scrum model. Spiral could also have similar issues though if the company employees are only familiar to the waterfall model. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644633,
      "meta": {},
      "text": "SCRUM is a software lifecycle model belonging to the agile lifecycles. Agile development tries to cope with ever-changing circumstances, in case of SCRUM mainly with rapidly changing requirements. It is based a lot on daily communication between developers, but also the product owner.\n\n-One big advantage of SCRUM is that from an early point on there will be some kind of \"deliverable\" - which helps everyone to see wether the project is going in the right direction. (every month at the end of a sprint there will be something shippable, due to the way SCRUM is conceptualized.)\n-By SCRUMMing, a development team can also react very easily to changes. (the product owner realizes that there are changes in the priotities of functional requirements after the first sprint, the team builds the new sprint backlog based on the changes etc.)\n\nBUT: - due to SCRUMs unique structure, it might be harder to learn and apply than other models (since communication between ScrumMaster, PO and developers is very crucial and has to happen on a daily basis)\n-For big companies, it might be difficult to seperate all the developers into many small teams (one has to rearrange a lot, which also might affect the personnel)\n\n\nIn SCRUM, the end product is constructed over time by adding new features while in the Spiral Model, the end product gets improved more on the risks that may occur.\n\nSpiral-Model focuses more on rare changes, SCRUM on the other hand wants to deal with a lot of changes.\n\nSince the Spiral Model is already used (and well known in other companies probably anyway), no to little reschooling of the developers is nessecary.\n\n\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644955,
      "meta": {},
      "text": "Scrum is an agile method to manage the development of a product or process, which is based on iterations.\nThere is a product backlog, containing all the tasks of the finished product. in each sprint items of the backlog are selected in the sprint backlog. These tasks are supposed to be implemented by the end of the sprint. After the sprint a potentially shippable product increment exists and can be added to the product. In between there are meetings.\nScrum encourages the direct communication and parallel working and thus maximises the working efficiency.\n\nPRO:\nUsing Scrum decreases the probability of misunderstanding between product owner and development team.\nIf the product owner has something different in mind like for example a sharing function in his app, but the developers forgot to enable sharing via email, the product owner would only realize that at the end, when receiving the finished project. In Scrum he would directly realize that after the finished sprint.\n\nThe spiral model does not rely on constant communication with the product owner\n---------------------------------------------------------------------------------------------------------------------\nUsing Scrum ensures that there is always an executable version of the software which thus eliminates the risk of the whole project not working when putting it back together in the end. \nWe had the same problem in our EIST project when working with javaFX. Somehow our two GUIs were not working together, as two people did them seperatly, wihouzt using scrum.\n\nIn the spiral model, there exist only prototypes after each iteration, until the finished product, so misimplementations might still happen, even if they are less likely\n---------------------------------------------------------------------------------------------------------------------\nCON: \nWhen having big teams, scrum gets challenging.\nOne example might be the development of google maps, where hundreds of developers had to cooperate. Managing this process on the top level with scrum must have been really challenging, making sure that all the scrum characteristics are still met.\n\nthe spiral model might be easier to implement in a big team, as there are not a lot of small teams, but one big team and no spirals of spirals are used.\n---------------------------------------------------------------------------------------------------------------------\nScrum may lead to a slow development process. If a team selects only one item from the product backlog per sprint for example, they might have qulitative working products after each sprint, but still be very slow.\n\nAs the spiral model does not split the product into several task, the team is less likely to not finish the design in time.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644999,
      "meta": {},
      "text": "Scrum ist ein \"Agile Model\" um einen Software zu erstellen. Bei Scrum wird das Projekt in mehrere kleine \"Sprints\" aufgeteilt, in welchen man jedes Mal das Produkt verbessert. Ein Sprint dauert meistens zwischen 2 Wochen bis 2 Monaten und in dieser Zeit werden kleine Ziele erreicht, sodass langsam das gesamt Ziel erreicht wird.\n\nZwei Vorteile von Scrum sind:\n1.\nDurch die t√§glichen Meetings, wei√ü zu jedem Zeitpunkt das gesamte Team den aktuellen Stand des Projektes. Durch diese Transparenz kann das Team sich anpassen und ggf. das Sprintbacklog √§ndern.\nWenn zum Beispiel ein Mitglied des Teams eine Woche vor Ende des Sprints alle seine/ihre Aufgaben erledigt \nhat und eine anderes Mitglied wahrscheinlich nicht fertig wird, k√∂nnen die Aufgaben aufgeteilt werden, sodass alles bis zum Ende des Sprints erledigt wird.\n\n2. \nDa immer nur f√ºr einen Sprint und nicht das gesamte Projekt geplant wird und nach jedem Sprint mit dem Productowner das Ergebnis besprochen wird, kann direkt auf Ver√§nderungen und Feedback reagiert werden \nohne das gesamte Projekt zu ver√§ndern.\nWenn zum Beispiel der Kunde noch ein zus√§tzliches Feature haben m√∂chte, kann dies einfach in das Product- \nbacklock gelegt werden und dann in irgendeinem Sprint implementiert werden ohne die gesamte Planung zu \nzerst√∂ren. Dies w√ºrde beim Spiral Model nicht gehen, da dort zu Begin der gesamter Ablauf der Entwicklung vorgeplant wird und dadurch nicht leicht auf √Ñnderungen angepasst werden kann.\n\nZwei Nachteile von Scrum sind:\n1.\nDamit Scrum erfolgreich funktioniert, m√ºssen alle Teammitglieder zusammenarbeiten. Dies ist vor allem in gro√üen Teams schwierig, weshalb Scrum in gro√üen Teams eine gro√üe Herausforderung darstellt.\nEin Beispiel daf√ºr sind die t√§glichen Meetings, welche in gro√üen Teams nicht nur schwer zu organisieren sind sondern mit mehr Leuten nat√ºrlich auch mehr Zeit einnehmen.\n\n2.\nDa immer wieder √Ñnderungen oder Erg√§nzungen zu dem Projekt hinzukommen k√∂nnen, kann das Projekt immer l√§nger dauern, sodass man nie wei√ü wann man tats√§chlich fertig wird.\nDies ist nicht nur schlecht f√ºr die Entwickler, sondern auch f√ºr den Kunden.\nIm Spiral Model hingegen steht ein fester Plan fest, sodass sich das End Datum nicht mehr √§ndern kann.",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 5620740,
      "meta": {},
      "text": "Scrum is a technique that manages and controls software and product development with rapidly changing requirements. There are three different roles in a Scrum team, product owner, Scrum master and developers, Different meeting will be held during the process and there will be a product increment after each sprint.\n\nAdvantage 1:\nScrum has greater ability to incorporate changes. Since a sprint planning meeting will be held at the start of each sprint, new requirements can be added easily. For example, if customers wants to add a new functionality to the application during the development stage, it can be added to the product backlog and execute in later sprint. In spiral model, changes can also be incorporated because it is an iterative process but it can only deal with changes between activities and does not allow changes within an activity. Therefore, Scrum will be more suitable if there are frequent changes. \n\nAdvantage 2:\nScrum can improve the communication between customers and developing team by presenting a product increment at earlier stage because there will be a usable product increment after each sprint. Customer can have a review earlier and able to give feedback continuously during the development. For example, customer might have some new insights after reviewing product increment, the new features can be cooperated easier when it is in an earlier stage. For spiral model, there is also a product increment produced after each iteration so it can achieve similar result as Scrum in this aspect. \n\nDisadvantage 1:\nScrum requires different roles and more training might be needed. In order to execute Scrum successfully, all the members need to understand the Scrum process and their responsibilities. This might involved more time and cost. For example, the company might need to hire an experienced product owner or scrum master for the development team if all the team members are not familiar with Scrum. For spiral model, an expertise might also needed because it requires the team to evaluate alternatives, identify and resolve risks which is critical to the project success. \n\nDisadvantage 2:\nScrum is only suitable for small team size. It is difficult to manage when the team size is large. For example, it is not efficient for a Scrum daily meeting to have 30 members to present their work. In order to develop a large scale project, Scrum of Scrums can be used. For spiral model, it can also deal with larger team size. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621989,
      "meta": {},
      "text": "Scrum is an agile work method to deliver products quickly. It manages software development with changing requirements and improves communication between the client and the development team. However there are some disadvantages and advantages to consider when using scrum:\nA main advantage of scrum is, that it works quite well for fast moving projects, since scrum helps the team to develop their product efficiently. As every team member gets all the latest changes in the daily scrum meetings, everyone knows exactly on what to work, which then results in an efficient workflow. But if one or more team members are not very cooperative or committed to the project the project will properly fail, since every member of the team has a given tasks and if someone does not provide the others with the latest information they might focus on the wrong subjects. So scrum requires highly cooperative and committed team members in order to succeed, which might be a disadvantage sometimes. Another advantage of scrum is, that the development team can quickly respond to changes made by the product owner. If the product owner for example decides to add a specific feature to the product, the changes can be implemented quite quickly, since there are always sprint meetings. If a team member leaves the project, it might have a huge negative impact on the project, because as stated before every team member has a given task. If team member A for example leaves the project team member B has to be introduced to the project and take all the tasks of team member A. This can cause a delay of the project and is therefore a major disadvantage of scrum.\nWhen comparing the spiral model to scrum you quickly notice, that the spiral model is not designed for fast moving projects, since you have to follow every step in each iteration, which makes it quite strict and slow in operation. And differently from scrum the impact when a team member is not very cooperative or committed to the project is not as bad as in scrum but also not helpful of course. Since the spiral model is not designed as an agile model the development team cannot quickly respond to changes made by the customer. It would take another iteration to implement the changes. If a team member leaves the project, it does not effect the project as hard as it would when applying scrum, since the are no parallel processes in the spiral model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622637,
      "meta": {},
      "text": "Scrum is an agile software lifecycle model defined as \"technique that deals with interruptions/changes\". It is used as software product development strategy to manage different Scrum-roles (product owner, scrum master, scrum development team) so that a ready-for-market product within a rapidly changing environment regarding the product requirements is created. By splitting this product development process into 2-4 weeks long sprints, in which tasks are being done that are \"taken out\" of the product backlog (including the whole set of features that need to be integrated in the product) and transferred in the respective spring backlog (including the to-be-done tasks within the unique sprint), a product increment is created after every sprint.\n\nOne advantage of Scrum is that every stakeholder in the software product development process has a specific role, so that responsibilities and tasks are cleary assigned. By doing this, the finished project can be considered as cross-team success, as collaborations, e.g. by doing regular sprint review and retrospective meetings, are in the focus. In comparison, team work is not in the focus of the spiral model, as there exist no predefined roles or prescheduled and fix team meetings.\nAnother advantage of Scrum is that a well-functioning time management can be realized by splitting up the whole product development process into 2-4 weeks long sprints that also have a constant duration throughout the whole project. Looking at the Spiral model, the number of phases here is unknown at the start of the project, which makes time estimation very difficult and could potentially increase the risk of  not meeting the schedule or budget.\n\nOne disadvantage of Scrum is that it requires an experienced, well-trained team that is familiar with all the steps involved in the Scrum framework. In order to achieve success with this method, the whole team needs to understand the specific steps, collaborations and benefits of Scrum. If never applied before, also the Spiral model could be overwhelming for teams due to its 4 activities that are applied in 9 iterations.\nAn additional disadvantage of Scrum is that this framework works best with small teams up to 10 members, and thus, the project size is limited due to this resource barrier. Contrary, the Spiral model is especially useful for large and complex projects, in which a higher number of team members can work towards a common goal.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622831,
      "meta": {},
      "text": "The core essence of scrum is to respond flexibly and quickly to changing requirements through early information sharing by improved communication, cooperation between the team members and through efficient delivery of product increment. \n\nOne of the advantages of scrum is the flexible risk management, e.g. daily scrum meetings ensures the scrum team to keep track of iteration progress leading to rapid and early response to risks. \nAdditionally, scrum ensures transparency, e.g. the product owner and stakeholders are informed about the delivery of product increment by sprint regularly due to the small product increments which is a property of scrum. \n\nHowever, scrum also have disadvantages. One of the disadvantages of scrum is that scrum is only effective in small teams because scrum highly relies on early thorough information sharing by communication and cooperation. For instance, adopting the scrum methodology In large teams can highly lead to frustration between the team members due to the miscommunication which can further deteriorate the quality of the software development. \nFurthermore, successful scrum requires experienced team members who should be acquainted with this particular methodology. For instance, a scrum team, which is familiar with the traditional system, may highly face difficulty adopting the scrum due to the big shift from their hierarchical working methods to independent scrum teams having the scrum master who doesn't coordinate every single steps of software development. This can influence the quality of the software and cause frustration in teams. \n\nScrum follows the principle of divide-and-conquer. It is suitable for large projects with frequent changes which can be divided into smaller parts. In a spiral model, its focus lays on risk management of projects with various kinds of risks at the beginning of the project. Therefore, scrum is an empirical methodology, one plans for one iteration instead of planning a complete phase of the project in the beginning. It allows therefore a quick response on requirement changes. In comparison to scrum, a spiral model plans for managing risks relying on expectations at the beginning of the project.  Unlike scrum, this lead later cause difficulties in adjusting sudden risks in a spiral model. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644865,
      "meta": {},
      "text": "Scrum is a way of project management above all in software development. It is known for its adaptable, fast, effective, and flexible agile framework that is designed not only to deliver value to the customer at the end but also while developing. Scrum is based on interactive and incremental processes. \nBut of course, scrum has disadvantages. One would be a high need for communication which also would consume time. For example you have daily and weekly Scrum meetings discussing current progress.\nAlso change requests cant be implemented while a sprint if they weren‚Äôt added to the sprint-log. This might slow things down. For example your client had a new idea and wants to have it implemented immediately he would have to wait until the next sprint.\nOn the other hand you of course have advantages which in my opinion outweigh the disadvantages. With the different sprint",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5620212,
      "meta": {},
      "text": "The essence of Scrum is an iterative approach for Software developement, there are 3 groups participating: the product owner the scrum master and the developers. The product owner first creates a product backlog with the requirements. The core idea of scrum is to have a functioning product after each iteration, so the backlog gets split into tasks, that can be done in one so called sprint. During the sprint there are daily sprint meetings to get everyone up to date, after each sprint there is a sprint review to discuss what went well and what can be improved.\n\nA great advantage of Scrum is that it works with the divide and conquer principal, a large task gets split into many smaller ones, that each are doable in a single sprint. In the spiral model this is different, the whole project will be planned first and then the development starts and it makes out one big chunk in the spiral model, instead of many small ones in scrum. If you want to develop a learning app for example, in Scrum you would have a working app after the first sprint with a barebone functionality. Maybe you can already open it and make an account, but nothing more\n\nBecause there is a review after each sprint, Scrum is quite dynamic and can adapt to change\nIn the spiral model, this is also the case because in each iteration you go through evaluating alternatives and identifying and resolving risks. But now your product owner tells you, that your  should also be usable without creating an account. The next sprint can be planned accordingly to adapt this new change of requirements\n\nA disadvantage is, that adopting Scrum in large teams can be quite difficult to do.  That means projects, that need a large team to do them aren't really fit for using Scrum. The spiral model can be much easier to be implemented for a large amount of people. The development started small, but now you have a team of over 70 people (its a very big app apparently). Now you have about 10 teams in your sprint retrospective meetings, and each team has to be aware of what the other 9 teams are doing and adapt their part if necessary. This can be a huge organizational disaster.\n\nIf one team doesnt work well together or someone gets sick it has a massive effect on the whole project. In the spiral model this would be easier to solve, because the teams don't have to be as small as in Scrum. Now in one of your sprint teams, two people get sick. The work that previously had been for 7 people now has to be done by 5 people. Obviosly, they can't finosh what they had planned for their sprint session. Unfortunately they should have developed a key functuionality for the app, which the other teams would have needed for their next sprint\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620379,
      "meta": {},
      "text": "In SCRUM, the development process is split up into sprints, and it starts by creating a list that breaks down the project into smaller tasks, out of which a certain amount is selected for each sprint. Next, the actual Sprint (with daily meetings) starts, that lasts 2-4 weeks and aims to complete all the tasks. Lastly, the sprint is reviewed before possibly releasing a product increment and then either starting the next sprint, or terminating the project.\n\nSCRUM projects are highly adaptable to changes in requirements. E.g. if the customer suddenly requires a web interface instead of a mobile interface, the team can adjust their tasks without having to restart the project. In the Spiral model, the project is also structured into phases and thus there would also be the possibility to adapt to changing requirements.\n\nDue to the lack of unnecessary documentation, management, SCRUM can be more cost-effective. E.g. In the waterfall model, the team will be involved in writing documentation instead of code, which would be much more time and cost-efficient. The spiral model can also incur increased costs due to the required Risk analyses in each phase.\n\nAs the team works different parts of the project simultaneously, one can't reliably predict the project delivery date, as no one can predict how much work will actually be completed during each sprint. E.g. A scrum master can't predict if his team is going to need exactly 5 sprints to complete the project, as he can't estimate the time spent on each item. The same issue can occur in the spiral model as well.\n\nApplying SCRUM to teams that are larger than around 10 members requires more overhead, and might eliminate the benefits that scrum brings. E.g. a team of 30 people would have to be split into at least 3 subteams that would then each have to send at least one member of each team to a higher level meeting after a sprint. However, the spiral model works great for large projects and teams.\n",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5621436,
      "meta": {},
      "text": "Scrum is a technique of agile software development to react as quickly as possible to changes during development. Scrum uses sprints, with Daily meetings where parts of the tasks, previously defined in the product backlog, will be worked out by the team. After each sprint, the team has a Sprint Review meeting for optimization and a Sprint planning meeting for the next Sprint. A Scrum Team consists of a Product Owner, ScrumMaster, and the developer team. The advantage of Scrum is that it can quickly react to chances. For example, when the customer wants to have a new function it can be added to the product backlog and implemented in the next sprint. Another advantage is that a large project can be divided into smaller tasks for a shorter period, which makes the project easier to manage. For example, if the task is to implement a chess game each of the developers would start with something different and it might be messy with all the different approaches. In Scrum, you define small subtasks like designing a chessboard, designing a figure, and moving a figure, which makes the steps clear for all developers. The disadvantage of Scrum is that for a large Team it gets very complicated to manage. For example, the daily Scrum meeting, which normally should not take longer than 15 minutes, can take much longer when 20 people want to present what they do today. Another disadvantage is that it is only useful when you have an experienced team that is supporting the Scrum idea. For example, the daily meeting can be very tiring and if a big part of the team does not understand the advantage of this meeting it could be removed from the working cycle. The advantage of fast changes in the Spiral model is similar to Scrum because in Spiral you can also chance requirements in all phases. The second advantage of Scrum, the division into smaller tasks, is not really part of the Spiral Model, which mainly focuses on the calculation of risk. The first disadvantage of Scrum is that it can not be used for big problems is not a problem in the Spiral model. The Spiral model needs a big project to be enough valuable. The second problem of Scrum is that it needs an experienced Team, which also kind of exists in the Spiral Model, but in Spiral you mainly need experience risk analysis people to calculate the risk precisely. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622267,
      "meta": {},
      "text": "The team conducts a sprint, consisting of some tasks in the backlog which were specified in the sprint planning session. They decide a time duration for the spring in which brief daily scrum meetings take place, during which every team member shares their progress. At the end of each spring the stakeholders and the product owner conduct a review.\n\nAdvantages:\nLarge projects are broken down into manageable cycles (sprints)\nWhen creating a software system, its easier to perform cycles, in which only some of the functionality is implemented and then iteratively build on compared to tackling everything at once.\nIn the spiral model the projects are also broken down into cycles.\n\nThe effort made by each team member is visible in the daily scrum meetings. \nIn a software project its hard to gauge the work each team member is putting in because each tasks are not uniform and are also of a different difficulty.  \nThere is no specific phase for communication in the spiral model.\n\nDisadvantages:\nUsing scrum in large teams is difficult.\nIn teams bigger than 10 people, working on the same software project, creates difficulties in coordination of the individual team members and the daily scrum meetings get too long and unproductive.\nThe spiral model doesn't suffer in large teams because everybody gets assigned their task in the first phase.\n\nHard to relate the scrum framework to a certain deadline.\nAlthough scrum sprints are many smaller deadlines for the team during the development of a software system there is no overall deadline.\nThe spiral model has a similar disadvantage.\n\n",
      "score": 95.8,
      "language": "ENGLISH"
    },
    {
      "id": 5622669,
      "meta": {},
      "text": "Scrum is an agile process that enables you to deal with interruptions and change in an adaptive way. It is therewhile an easy to use method that implements the scientific method of empiricism. Scrum replaces a programmed algorithmic approach with a heuristic one that improves communication and cooperation while also improving the delivery of product increments through iterations.\n\nFirst Advantage:\nScrum team can amend change in any part of the project without affecting the project output. Flexibility and adaptiveness are significant to define the requirements of a project as it proceeds extensively. Therefore if you for example have a change within an activity, let's say your music player should not have a favorites playlist but instead a song queue, as a scrum team you can react to this change by changing the sprint or even the product backlog and communicating this through your daily scrum meetings. This is not in the Spiral Model because it is an iterative model that can not react to change within a activity.\n\nSecond Advantage:\nIssues are identified well in advance through the daily meetings and hence can be resolved in speedily. This leads to a risk reduction for example if the development of a task moves on slower than expected this can be communicated in early stages and the team can adapt to this and reduce the resolving risk. This is not possible in the Spiral Model because of the lack of daily meetings and updates of the project.\n\nFirst Disadvantage:\nScrum requires a team of at least three members to work and is appropriate for small groups. On the other side it does not work well if the team gets too big let's say more than ten people. That is because more members delay the decision-making process hence slows the work. For example if you organize a daily Scrum meeting with more than ten people it will eventually soak up a lot of time that could be invested in other stuff. That is not a real problem with Spiral Model because it is not based on those daily meetings and the amount of communication.\n\nSecond Disadvantage:\nThe members who give feedback to the team need to have relevant experience to deliver it accurately. Lack of knowledge will automatically break down the entire system. This disadvantage again arises from the high communicative and cooperative nature of scrum that only works out if the team members have a high quality - expertise in their special fields. The Spiral Model does not have to cope with these problems because it is not based on/relies on constant feedback from team members.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622712,
      "meta": {},
      "text": "Scrum is an empirical technique that helps actualize agile development and delivery of products, by adapting to changing requirements and establishing a cooperative and communicative development environment. Scrum includes meetings that build up to and rely on each other and as a result artifacts are established by a team of skilled members, a Scrum Master and a Product Owner. Communication inside the team is of the utmost importance for improving risk management and establishing a potentially shippable product, therefore it is an iterative, dynamic and incremental process by its nature. \n\nPro: Encourages creative approaches and creativity as working together and getting ideas from each and every member (communication between all members and daily scrum) increase customer satisfaction and product quality \nCon: Especially bigger projects require highly skilled team members, and communication between all members may be harder to coordinate\nExample: A project that helps citizens of an entire country to make reservations at public hospitals and keeps track of their overall health condition and makes daily suggestions to improve their quality of living \n\nPro:  Adaptable & flexible ‚Üí truly made for agile development, fitting for projects that don't for example have a prototype and require quite frequent change\nCon: Possible scope creep, smaller deadlines but no definitive project deadline\nExample: Software that makes use of fairly new or rapidly booming technologies, a contra-example would be the development of a car model, that belongs to a long line of other cars/ series. As there is a prototype and a blueprint of how things should be done, scrum is not the best fit for this.\nThe spiral model is not as flexible or adaptable as scrum, in case of big risks or problems that could not be solved, the project is terminated. In Scrum, the team adapts to the changes and overcomes changes",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5622815,
      "meta": {},
      "text": "In Scrum a so called \"product owner\" creates a product backlog, a detailed list of what the product has to be / what conditions it has to satisfy ordered as steps towards it's completion.  The developer team then divides the bigger tasks into smaller ones and creates sprint backlogs, smaller lists intended to be completed over the course of one \"sprint\" (the length of which can vary). Over the course of the sprint the team holds daily meetings in which they share updates on their work and incorporate new information. At the end of each sprint the team reports to the product owner, listening to his wishes.\n\nScrum allows the team to effectively adapt in case of changing requirements or additional wishes from the client's side. The Team and the stakeholders can quickly discuss any changes such as for example a new feature or functionality of the product at the regular meetings at the beginning of a sprint after which it can be added to a (sprint-)backlog.\nAlso Scrum encourages creativity and initiative of every team member, who now feel more responsible for the end product and are more likely to voice and implement their ideas and take part actively in discussions.\nOn the other side scrum requires an experienced team, both in the subject but also with scrum, in order to take it's effect. Everyone has to know what they are doing in order for scrum to be able to apply it's positive effect, otherwise it might be of no help or even spread confusion among the team, so scrum should only be considered if the team is up to the task and comfortable with it, otherwise it might be better to stick to what works.\nFurthermore, being an adaptable, non linear approach to software development, Scrum isn't well suited for the projects which rely on predictability and planning, since the result might deviate and deadlines are less guaranteed to be kept due to the more dynamic nature of scrum. \n\nWhen compared to the spiral model the performance of scrum depends on the required project. Scrum will perform better in smaller, less risky projects, while the spiral model may be better suited for big, more complex projects, where risk control plays a more important role. Also in the spiral model it is easier to maintain control of what the team does in both work and documentation, whereas scrum does more approve of own initiative and tries to not to burden the developers with documentation too much.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5623054,
      "meta": {},
      "text": "Scrum is an agile way to develop software, it is used based on iterative and incremental processes. What makes Scrum agile is that it can manage and control software with rapidly changing requirements while delivering value all throughout the project, at the end of each sprint. The scrum framework is based on a set of very defined team roles and practices that shape the software development process.\nThe first advantage of Scrum is that with the presets roles and meetings, communication and the cooperation of the Team is improved and therefore, with improved transparency, risks are minimised. This is an advantage as risks can always cause a project to fail, if not recognised early on. Unclear communication can lead to unnecessary work, when for example a requirement changes without the knowledge of everyone. The spiral model also tackles risks early on as one of the major activities of the model is to evaluate and identify risks so that in the next step the risk gets solved by a prototype, but it still doesn't react to change as well as Scrum.\nThe second advantage of Scrum it gives a clear overview of progress. Large projects get divided I manageable sprints and you can always look at your product backlog or at the Burn down chart to see how much work is left. In an app development project where time is of value because you want to target a current trend, this can be very helpful to know if the App will be finished on time for it to still be relevant. The spiral Model also has a quite strict workflow, but it is more easy to get lost between the different iterations, where you always repeat the same Actions to get closer to a solution.\nThe first disadvantage of scrum is that it can lead to frustration for the team members, as daily calls can be exhaustive and the adoption of the framework is challenging. If the software engineering team is for ex. used to develop software in a linear way and change rarely occurs (ex: very clear project guidelines from early on) scrum can seem unnecessary. This is the same for the Spiral Model, as one first has to understand what the activities and iterations are about, before using the model.\nThe second disadvantage of Scrum is that the product Backlog can be confusing, as they is no clear separation of the different areas and tasks of Software Development. There for example is no clear separation between testing and user interface tasks, which can lead to difficulty for testing. This isn't an issue for the spiral models, as in the spiral model they are 9 clearly differentiated iterations.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644274,
      "meta": {},
      "text": "The core essence of SCRUM is, that when using it, you have a team and a customer, that directly interact between each other. The team together decides which problem to work on, in each iteration and at the end of each iteration the team meets and discusses what went well/bad to improve the way how to work in the next iteration, until the project is over. During each iteration daily meetings keep the whole team up to date.\n\nAdvantages:\n- The team gets updated periodically with daily scrum meetings. This is because the team meets daily to discuss what everybody is working on. For example this avoids duplicated problems and it helps to identify problems early, so that more resources can be deployed. On the other hand when using the Spiral Model the communication is way rarer, since it only takes place periodically with larger gaps in between (Planning next phase).\n- SCRUM offers to split a big problem into many small sub-problems, that will be handled in each sprint respectively. This allows for work-division to be easily adapted. For example when developing a car-game, the problem can be subclassed into e.g. animation, driving, UI... and can easily be applied in different sprints. Also the Spiral Model can view problems in chunks, since it is an incremental approach, but still iterative, but focuses more on risk analysis.\n\nDisadvantages:\n- If a team member leaves right in the middle of the project this causes a huge loss in working time. For example an employee leaves the project in the middle of a sprint. In this case no one can take over, since everybody else is already assigned to another task (for this sprint). Due to the high effort put into risk analysis a leaving member can be handled easier using Spiral compared to SCRUM.\n- Using sprints and working in groups leads to ignoring the overall project deadline. For example  members may only put so much work into it, as they see fit in order to complete this sprints goal. This  means that someone has to revisit the implementation later on. The Spiral Model may also extend its overall deadline since risk analysis is difficult to predict and time consuming.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644715,
      "meta": {},
      "text": "SCRUM is an agile workflow, which means it can quickly react to changes. There exist the product owner, the Scrum master and the Scrum team, where the owner acts as a liaison between customers and development team, the master guides the team and makes sure Scrum practices are followed while the team creates incremental releases of the final product each sprint. A sprint can last two to four weeks and is used to guarantee product increment by assigning task to the team, that have to ideally be completed at the end of the sprint in order to have a shippable product at the end of each sprint.\n\nSCRUM is extremly flexible. If there are parts of the products implementation that are still open at the beginning of the project, this is no problem. Since the goal is to have a product increment each sprint the focus lies on a set of featues each sprint. For example, a decision on which database to use can be delayed without any problems until the API is implemented.\nFurthermore, customer satisfaction is increased by the guaranteed shippable product. For example, new features from competitors can be integrated fast and without much planning.\n\nHowever, there are disadvantages as well. It can be hard to guarantee a shippable product after each sprint. For example, unexpected errors at the end of the sprint with many affected features are bad.\nAnother disadvantage is scalability. Since Scrum is all about parallel integration, tight integration of featues has to be precisely managed and could lead to chaos. For example a part of a server that relies on too many parallely implemented features can lead to problems, since the probability of failure in one or more of these implementations gets higher.\n\nScrum is way more flexible than the spiral model where everything is planned upfront. Also, in the spriral model there is not guarantee for a shippable product at the end of the sprint, since there are no sprints. However, this does not exclude fast updates of a product. \nOn the other hand, the spriral model does not have strict time constaints which comes in handy when problems occur. The problems of parallel integration dont exist either, since the spiral model is more sequential.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644896,
      "meta": {},
      "text": "Scrum is a methodology that manages and controls the development of software and products with quickly changing requirements. Teams may deliver value to clients, engage often and efficiently, and solve pressing development issues with the support of this framework. Scrum also makes the process of delivering products better. \n-Advantages :\nTeams may accomplish project deliverables more rapidly and effectively with the aid of Scrum and we will get a better quality of the products.Teams can collaborate and with activities like sprint reviews they have a chance to change and improve their work. While in spiral model it's to hard to make changes while developing.\nDevelopments are coded and tested during the sprint review. And it helps the team to immediately test if there will be any errors or something wrong and try to change or fix it. For example if any member in the team forget something or did something wrong it can be corrected in the sprint review with testing.But in the spiral model we have the possibilty to test in the second step(Evaluate alternatives,identify, resolve risks).\n\n-Disadvantages :\nIf any team member leaves in the middle of a project, it can have a huge negative impact on the project. For example if an unexperienced team member is facing a problem with something he can give-up and that will affect the whole project. And especially the daily meetings can frustrate these type of members. Such Problems we can also have in the Spiral model because these are mainly problems of team work.\nAlso it works best if the team is small. Communication is key in Scrum, and this can be a problem in large teams.Because every step in our methodology should be documented and addressed and that's can be a problem if the team is large.For example when we have a large team the chance of getting a misunderstanding and problems into the team is high.On the other hand, the spiral model also needs expertise in order to periodically assess and review the project.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621761,
      "meta": {},
      "text": "1.  SCRUM in essence, enables a team to quickly respond to change. It iteratively improves the product, reevaluating every iteration if the project is fulfilling the requirements the customer really wants and mitigating risks through daily meetings. \n\n2. A disadvantage of SCRUM, is that daily meetings could frustrate employees and be seen as unnecessary time and energy commitments. \nAnother disadvantage is that by implementing SCRUM we would not have linear workflows anymore, making the management harder\nOn the other hand, SCRUM enables us to keep improving in a constantly shifting and changing environment and to develop methods to overcome difficulties and changes on the fly.\nOn top of that, SCRUM is extremely popular nowadays, so many of the new hirees will probably know and understand it.\n\n3. In the Spiral model there are no daily meetings, so this organizational risk mitigation would not burden the employees. Then, in the Spiral model, the iterations and development of prototypes are linear, so their workflow is more predictable. On the other hand, changes during prototype development are hard to incorporate, since that is done linearly, so SCRUM is just a bit more flexible. And the Spiral model is just less used and more complex, so new employees will either not know it, needing time to adjust.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621934,
      "meta": {},
      "text": "Scrum is a development technology that breaks the big project into smaller pieces, each of which have a working period of 2 to 4 weeks and a list of requirements the team needs to do to the end of a given time period, which is called Sprint. After the Sprint is finished, the team will deliver a potentially shippable product increment, review and give feedback on completed work and will move to another project piece, which may include some elements of the first working period that needs to be changed. \n\nSince we deal with the startup, the whole new system needs to be implemented, so here we can use the advantage of Scrum, which is actually made for situations where we have to deal with very frequently change and allows us to go back and rework that needed, for example then one part of the team to replace some feature, which is not possible with spiral model, because it  works at best with the systems where changes occur only sometimes. The next advantage of this technology is that teams have better understanding on the time needed, since they plan it at the beginning of the project. With a spiral model the time prediction is not that easy, since at the beginning of the project the number of phases is unknown. \n\nA disadvantage could be that for the whole sprint  the team needs to have daily meetings to give the update on their work, it could be stressful for the team which earlier worked with the spiral system where you aren't supposed to have the daily review on your work. The disadvantage is that for better work experience the team needs to be trained, so later they will not have troubles adapting this technology, as it could lead to delays in the project. In comparison the spiral model is a more complex system so the training for the workers also could be needed.\n",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5622080,
      "meta": {},
      "text": "‚Ä¢ Scrum is a technique that manages and controls both product and software development when the requirements and the technology may be rapidly changing during the project.\n\n‚Ä¢ Advantages:\n1. Feedback and change requests can be adopted faster which leads to a software product that fulfills its requirements in a better way. \nExample in Bumpers game sprints: Artemis and the tutors provide feedback after each sprint rather than at the end of the semester.\n\n2. Large projects are divided into manageable sprints to prevent analysis paralysis and there is a potentially shippable product increment after each sprint which could be delivered to the end-users.\nExample: The Bumpers game is a complex project with a lot of features which have to be implemented so the project is divided into sprints with sprint backlog items that need to be realised and after every sprint there is a new executable version of the game.\n\n‚Ä¢ Disadvantages:\n1. Too much disturbance can reduce the development efficiency.\nExample: constant change requests lead to uncertainties about whether the requirements are finished. The developers cannot concentrate on their tasks but have to incorporate the changes instead.\n\n2. Hard to estimate the total cost and duration of the project at the beginning because not all changes are easy to anticipate. Constant changes increase both development time and total cost.\nExample: It is very common that managers find it hard to contracts because at the start lacks a lot of important information so they have to be flexible.\n\n‚Ä¢Comparison between SCRUM and the Spiral model:\nThe spiral model facilitates customer feedback. The customer is able to see and evaluate their product in every phase. This allows them to voice dissatisfactions or make changes before the product is fully built.\n\nThe spiral model is a great option for large, complex projects. The progressive nature of the model allows developers to break a big project into smaller pieces and tackle one feature at a time. At the end of each iteration there is a developed and verified prototype.\n\nChanges may require at any time, developers must be flexible.\nIt is very hard to tell the duration of the project or its cost with the Spiral Model too because the number of phases is unknown at the start, making time management almost impossible. There is always a risk for falling behind schedule or going over budget.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 5622120,
      "meta": {},
      "text": "The essence of scrum is empiricism, self-organization, and continuous improvement. First of all, there is a customer who has a problem that is worth solving and that can probably be solved by developing a product. Secondly, the relationship between team members and between team and customers. At last scrum master should communicate with customers and according to the reflections to promote the growth of team.\n\npros: 1)The first one is that Scrum teams complete their projects of a much higher quality because scrum methods make keeping track of these elements much easier. Scrum is an approach that accommodates changes effortlessly because the Scrum teams work in sprints, and any changes that need to be made can be implemented easily in the next sprint.\n2)The second biggest advantage of using Scrum is that it ensures that Scrum teams operate in the most efficient manner possible. Daily Scrum Meeting helps the entire team keep track of each iteration‚Äôs progress and find any hiccups they may face early on into the project.\n\ncons: 1) Since Scrum projects do not have a definite timeline and work based on each sprint, projects can get drawn out for longer than they are supposed to. There is no specific final iteration because Scrum is focused on continuous improvement. \n2) The Scrum teams work fairly independently, and the Scrum Master and project manager do not always have to oversee and micromanage their tasks, which can prove to be a hindrance. Scrum team members can also face difficulty adopting a completely different approach to working, and this can cause delays.\n\nP1). Spiral model is best development model to follow due to the risk analysis and risk handling at every phase. For scrum towards the end of each sprint, scrum teams also test out their product before release so that they can find any possible flaws that may have occurred and fixed them.\nP2). In spiral model, we can easily change requirements at later phases and can be incorporated accurately. Also, additional Functionality can be added at a later date. This is similar to the first advantage of scrum.\nC1). Spiral model is not suitable for small projects as it is expensive, but  it works best if the team is small using scrum as it's easy to communicate.\nC2). Difficulty in time management for spiral model. some difficulties arised from scrum method may also cause delays.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622677,
      "meta": {},
      "text": "The core principle of Scrum is, that you set minor goals you want to achieve during a 30 days (may vary) sprint and after this period, you have a version of a potential shippable product (program) you can deliver to the customer. So the program gets enhanced every sprint ( until it is completed ). Between sprints, the team plans the next sprint. New goals (backlock) are set and feedback and proposals are exchanged what also happens during daily meetings. \nA benefit of scrum is, that the team is able to adapt to change in the project immediately, because daily meetings and planning between the sprints allows the team to analyse the current status and exchange opinions and strategies. This differs to the the Spiral model, In which planning happens in advance and during a single cycle, adaptions usually don't occur. \nAnother advantage is, that the the software producing team can get feedback from customers on the product because it is shippable after every sprint (usually). This reduces the risk, of producing a product that is completely wrong for the customer because feedback is given during production, not after.  In the Spiral model, the customer usually doesn't get to see a version of the product. It allows risk analysis between the cycles. \nA disadvantage of Scrum is, that large projects are hard to plan and to scale. Scrum divides every product into little pieces, therefore it is hard to have a big picture perspective during the sprints. Therefore it can be hard, to stay in a certain lane, because many adaptions and new ideas can distract from the actual goal of the project. Spiral model is a more defined process where adaption to change is not the focus. Therefore, the initial plan, that leads to finishing the project is followed, until the project is finished. Of course, change and criteria that wasn't noticed in the planning phase, can make it impossible to finish the project.\nAnother disadvantage of scrum is, that it requires a certain structure in the team (scrum master, etc.) and a lot of know how. For example  you need to know how to plan sprints (select backlog items ) and divide the project into parts, that work as shippable product. This can also be a problem using the spiral model, where you need to estimate risks and plan the production process but once this is done, you have a plan the developers can get used to.\n\n \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622715,
      "meta": {},
      "text": "Scrum ist ein agiles Model f√ºr einen Software Development Lifecycle, in dem man auf pl√∂tzlichen Ver√§nderungen reagieren kann. Dabei gibt es einen Product Owner, Scrum Master und Developer, welche jeweils verschiedene Positionen in der Aufgabenverteilung einnehmen. Zudem wird beim Scrum ein Product Backlog welches die Aufgaben beinhalten erstellt, welches wiederum durch mehrere Sprints abgearbeitet wird.\n\nEin Vorteil von Scrum sind die kurzen Kommunikationswege, da man dadurch schneller mit jedem im Team kommunizieren kann, wodurch man schnell und agil auf bestimmte Probleme oder √Ñnderungen eingehen kann. Wenn z.B. der Client eine bestimmte Eigenschaft in dem Produkt √§ndern m√∂chte, kann er mit dem Product Owner kommunizieren, welches es dann direkt an das Developer Team weiterleiten kann. Im Spiral Modell kann darauf erst im n√§chsten Developmentplan eingegangen werden. Ein weiterer Vorteil ist hohe Transparenz durch regelm√§√üige Meetings und Backlogs. Dadurch werden Missverst√§ndnisse fr√ºh erkannt und gekl√§rt. Ein Beispiel dazu w√§re, wenn sich zwei Entwickler uneinig bei der Umsetzung sind, durch diese Meetings k√∂nnen sich beide auf eine gemeinsame L√∂sung einigen. In dem Spiral Modell gibt es keine regelm√§√üigen Meetings, wodurch Uneinigkeiten dann schnell im Chaos enden k√∂nnen. Ein Nachteil w√§re potenzielle Verunsicherung aufgrund fehlender Zust√§ndigkeiten und Hierarchien. Dadurch, dass es so gut wie keine Hierarchien gibt, kann es bei einzelnen Personen zu Verunsicherungen bei der Entwicklung kommen, da die Person sich nicht sicher sein k√∂nnte, ob sie im Sinne des Teams handelt oder doch etwas falsch macht. Ein Beispiel w√§re dabei, wenn z.B. ein Entwickler eine bestimmte Aufgabe bearbeitet, sich aber nicht sicher ist, ob er auch dabei den richtigen Ansatz hat und durch Verunsicherung nicht die Implementierung vollendet. Dadurch kommt es zu einem langsameren Entwicklungsprozess. In dem Spiral Modell w√ºrde auch genau geplant werden, wer genau was zu erledigen hat und wie er genau dabei vorgehen soll. Ein weiterer Nachteil ist der Zeitverluste bei zu ‚Äûdefensiven\" Sprintplanungen. Dadurch wird der Sprint nicht so produktiv, wie er an sich sein sollte. Ein Beispiel w√§re, wenn das Developer Team den Arbeitsaufwand √ºbersch√§tzt hat und somit viel zu fr√ºh mit den Aufgaben im Sprint Backlog fertig ist. Dies k√∂nnte nat√ºrlich auch im Spiral Modell passieren, indem dort auch falsch geplant wurde.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644277,
      "meta": {},
      "text": "SCRUM is a model for managing a complex process commonly used for software engineering projects which values collaboration, flexibility and innovation. It defines processes, guidelines and artifacts for meetings, goals, and time intervals (called sprints) in which the work is organized, performed and shipped and works best for teams with less than a dozen members.\n\nAdvantages of SCRUM include how easily changes in requirements can be accomodated. If a change occurs (even during a sprint), it either affects something planned, in which case you can just modify the user stories, or it changes something in development. Then it can be quickly addressed in a (daily) meeting.\nThe spiral model can also accomodate changes, but only between activities, not during one, and is as such less flexible.\nAnother advantage of SCRUM is that it minimizes risks and resolves problems quickly. Considering that every day a SCRUM meeting is held where developers talk about problems and roadblocks, identifying risks and problems becomes trivial. And if every developer becomes aware of the problem, chances are that at least one person encoutered a similar problem before and can help quickly resolve it.\nWhile the spiral model does build prototypes in order to minimize risks, these are much less frequent compared to the daily meetings in SCRUM. This means that generally, problems will be discovered later and unresolved risks might lead to the termination of the entire project.\nTalking about disatvantages, maybe the most glaring problem of SCRUM is it's scalability. SCRUM works well when there are only a few people involved, but daily meetings would become unbearably long and inefficient in a project with for example 50 developers. Using the spiral model, however, you are not as limited in terms of team size.\nAnother disatvantage is that it's hard to keep track of the progress. The percentage of completed user stories might give you a very rough idea of how much of the work is done, but they in no way represent a standardized unit of work. Because the spiral model produces a prototype meeting certain requirements in every iteration, it is easier to keep track of progress when using it.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644883,
      "meta": {},
      "text": "SCRUM is a software lifecycle model with the main property of being highly adaptive to change. It consists of sprints, during which the developers implement and test certain requirements so that at the end of the sprint, a ship-able version of the product can be shown to the client.\n\nadvantages of SCRUM:\n- vertical integration: by working on the database, server- and client-side simultaneously, working versions of the product can be frequently shown to the client. Example: a team developing using the spiral model has discussed all the requirements with the client and then spent a couple of months developing the product. At the end, the client gets the final product and notices a lot of points he is unhappy with. Using SCRUM, this would not have happened, as the client would have seen the progress regularly and could have changed his requirements at any point.\n- useful, when change occurs often: as an adaptive development style, SCRUM enables reacting to changing requirements by the client and integrating what needs to be done in the workflow seamlessly. Example: the client wants the user to be able to log into the software using their Google-Account. In SCRUM, this can easily be added to the next sprint backlog, whereas in the spiral model, it disrupts the workflow, meaning the developers might put it off for a while, to the dissatisfaction of the client.\n\ndisadvantages of SCRUM:\n- in SCRUM, having a code that works is more important than spending a lot of time on exhaustive documentation, which can lead to problems later on. Example: as a growing startup, we have many new employees and a rapidly growing codebase. If we don't allocate some extra time for clean code and documenting everything as we do at the moment in our adaptation of the spiral model,  we might end up with a lot of unreadable legacy code with a bad documentation.\n- the daily and regular meetings can be frustrating when the developers time could be better spent concentrating on programming without interruption, as opposed to the spiral model. Example: as a developer, if I am stuck on dealing with a certain bug or a hard task, mentioning that in two daily stand-up meetings in a row would stress me.",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5644914,
      "meta": {},
      "text": "The essence of SCRUM is a constant feedback loop between everyone in the project. Development phases of a project is split into blocks called sprints and specific goals are set for each block (sprint backlog). With the use of daily SCRUM meetings everyone on the development team shares daily updates so the team stays on top of tasks. The SCRUM master who is a third party as he is not involved with the development is there to provide feedback and keep the team motivated and focused.\n\nThe advantages of SCRUM are: The teams get clear visibility through they daily SCRUM meetings. This helps the team understand what has been done and what still needs to be done very easily. For example in Michelin star restaurants they usually hold meetings everyday before opening times to discuss what ingredients have been prepared and what already has. Moreover, at the end of the week they hold their \"sprint\" meeting to reflect and also decide the menu for next week (sprint backlog).\n\nAnother advantage is that SCRUM is agile and can adopt changes from stakeholders or customers quite easily. This is advantageous because it allows more interaction between the customer and development team. For example, when in Shanghai when I wanted to order a custom made pencil case, I could frequently get updates on what was being made and I could give my input on what I didn't and did like. This made the final product to be exactly as I wanted.\n\nThe disadvantages of SCRUM are: There is a high chance of project failure if individuals in the team aren't motivated enough or uncooperative. For example a friend of mine doing the EIST project was really invested in the project and had done a lot but his teammates never did what was set during the sprints. So in the end he could only abandon the project as no one else in his team was motivated to do the work. \n\nAnother disadvantage of SCRUM is: Daily meetings can frustrate some Team-members. This leads to a disarray in the team and can result in people being uncooperative, which ultimately ends in project failure. This is what happened to my friend (paragraph above). He wanted to do daily meetings, but 2 of his teammates didn't want to. So in the end it caused a discord which ultimately end to unproductivity and project failure.\n\nSCRUM focuses more on the delivery on an increment to the client after a time block (sprint), which increases interaction between the customer and developers. However, as SCRUM is an agile based model, it leaves it open to risks and attacks. The Sprial model on the other hand has can anticipate these risks and unanticipated situations, but results in less customer interaction",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644918,
      "meta": {},
      "text": "At its core, SCRUM is a technique that helps developers deal with rapid and frequent changes from the customers during the process of software developments. It is especially needed in large and complex projects, where frequent communication and reports are vital. There is a constant, non-disrupted communication cycle, from the product owner who defines the requirements, to the scrum master who manages the process and communicates with the owner, including deciding on tradeoffs, and supervising the process of implementation, to the developers who implement the software and report the daily process on it.\n\nAn advantage of scrum is the team can control the constantly changing requirements. Changes are to be expected during every process of software development, and because the SCRUM methods following the \"Divide and Conquer\" principle, in which we little by little increment to the whole product overtime, if any sudden changes happen, we can notice and implement those in the next Sprint cycle. If those are not realistic, we can communicate with the customer about the reasons and decide on tradeoffs. Therefore, another advantage of scrum is that it reduces the risk throughout the project by communication and cooperation. As a large number of meetings are organized through daily scrum and sprint review and a lot of communication happens in the process, we are able to tackle any problems together when they appear cooperatively.\n\nHowever, as any projects that involve a large number of developers, Scrum also has the disadvantage in which a commitment of all team members is required. Otherwise, it can lead to the demotivation and demoralisation in the team, making the whole process of daily scrum and sprint review more and more out of control and less cooperative, especially when things constantly going not as planned, which leads to project collapse. This is especially challenging, as daily meetings can be frustrating for some employees. But even if we try to control that, sudden uncontrollable problem in the personnel may still happen, for example, someone leaving in the middle of the project. That is why scrum requires experienced developers who can deal with sudden changes, both in the development process and in the personnel.\n\nAnother disadvantage of scrum is that we are working based on chunks of the process, such as sprints, and then increment them together later on, thus if not managed well, scrum can lead to scope creep. If we do not have a fixed duration, or a defined budget, when incrementing together, there can be a lot of problems surfacing such as the cost is too large compared to the budget, or some sprint cycles take too long and we cannot deliver the software in time. \n\nSpiral model is better than Scrum in his aspect, which by planning beforehand to identify the risks and constraint, you can predict and deal with them. However, as a linear model, it is much less agile compared to scrum, since not all of the risks and issues during the projects can just easily be planned and solved when you have not encountered it, and sometimes there can even be overplanning.\n ",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620177,
      "meta": {},
      "text": "SCRUM is an adaptive development process model in which first, the requirements for the finished product are defined, then the requirements for the iteration, and then a 2-4 week sprint is performed (which itself consists of daily sprints). After each sprint, the customer is consulted regarding the sprint's progress. This process is then repeated until the final product is finished.\nEach sprint includes a number of meetings that define and prioritize requirements, share the current status, difficulties, and successes, review progress, and reflect on the sprint.\n\nSCRUM has a few key advantages over other models like the Spiral model. For one, SCRUM is much more flexible when it comes to the customer's demands. For example, starting a project with an inexperienced client may result in the client wanting different features at different points in time. As developers using SCRUM work closely with the client, they are able to adapt to these changes much better because of the nature of sprints than the Spiral model, which has 9 fixed iterations and is not able to adapt to changes past a certain point as the requirements elicitation and designing should be finished relatively early on.\nAnother of SCRUM's advantage is that it is a much easier and quicker model for shorter projects. For example, wanting to create a simple calculator app would most likely not require 9 biweekly sprints, but can be done without needing prototyping, risk analysis and so on. However, the Spiral model dictates that there must always be 9 iterations which would needlessly prolong the development.\nHowever, the Spiral model has key advantages over SCRUM as well. For example, when working on projects that rely on risk assessment, such as a high security banking system, the Spiral model evaluates risks at every iteration. SCRUM, meanwhile does not have a large focus on risk evaluation and as such is open to fall victim to unassessed risks later on.\nAnother disadvantage is that SCRUM does not have as strict of a structure as the Spiral model. This means for very long projects like new operating systems, for example, SCRUM may drag out the development process unnecessarily. This can happen, for example, if the client is not 100% satisfied with the outcome and more and more sprints are performed before the project is finished. With the Spiral model, on the other hand, the iterations are fixed and once the 9th iteration is finished, the project is done without needless delay.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622089,
      "meta": {},
      "text": "Scrum is an agile project management framework. With Scrum, a product is built in a series of so-called sprints, which are time-bound. After each sprint, a potentially shippable product should have been built, which is incrementally better than the product from the last sprint.\n\nOne advantage of Scrum is that you can adapt to feedback/ change from customers fast. Example: The development team has a first version of a game after the first sprint. The marketing department of the company tests this game with users and find out that a key requirement of the game should be done differently. Now, the development team can now incorporate the change in the next sprint. \n\nAnother advantage of Scrum is that it ensures that the team completes the project quickly. Example: With the waterfall model, the team would not be done with the aforementioned game until shortly before the final deadline. With Scrum, the team will have a working version of the game already after the first sprint. \n\nA disadvantage of Scrum is that it doesn't work for production work. Example: It wouldn't make sense for a car manufacturer to assemble cars in an agile/ iterative fashion, because you already know the exact steps to assemble the car. Rather, the car company would use a waterfall model in the production line - assemble the car part by part. \n\nAnother disadvantage of Scrum is that the project progress is not very predictable and doesn't follow a well-defined plan, which may make management and customers dislike Scrum. Example: If you build an app with the waterfall model and specify which feature/screen should be done by what date, then management and customers can expect and measure progress easily. With Scrum however, it's nowhere specified when what requirement is going to be done.\n\nIn the Spiral model, the development team does 9 iterations, in each of which the same 4 activities are completed. The team has a shippable product only at the end of the project, after those 9 iterations.  With Scrum, the team has a shippabe product much earlier in the process, namely after each sprint. \nAlso, the main principle of the Spiral model is risk handling, while Scrum focuses on delivering an increment after each sprint.\n\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622248,
      "meta": {},
      "text": "1) Scrum ist eine Art der agilen Softwareentwicklung, bei der es wichtiger ist, schnell auf \"change\" zu reagieren anstatt sich zu Beginn einen festen Plan zu setzen, den man innerhalb eines Zeitraums umsetzen m√∂chte. Es gibt im Team 3 verschiedene Rollen: Product Owner (=Spezifizierung des zu entwickelnden Produktes), Developer (=Programmierer), Scrum Master (=Behebung von Kommunikationsproblemen und Setzen von Rahmenbedingungen). In songenannten Sprint Planning Meetings werden die Sprints geplant, in denen jeweils shippable products erzeugt werden, die sich am aktuellen Sprint Backlog, der ein Teil des Product Backlogs ist, orientieren. \n\n2) Ein gro√üer Vorteil von Scrum ist die Transparenz. Diese wird w√§hrend der Sprints durch die Daily Sprints sichergestellt, in denen jedes Team-Mitglied √ºber die Entwicklungen und Hindernisse berichtet, die ihm seit dem letzten Meeting aufgefallen sind. Hierdurch k√∂nnen projektbedrohende Risiken fr√ºhzeitig erkannt werden, was das gesamte Projekt vor dem Scheitern sch√ºtzt. Beispielsweise k√∂nnte ein Team-Mitglied neue Frameworks/ Tools nutzen, die die anderen Team-Mitglieder nicht kennen. Jedoch m√ºssen die anderen Teammember im Verlauf des Projekts auch mit diesen neuen Tools arbeiten, was ein Problem darstellen k√∂nnte, denn die Erlernung neuer Tools (etc.) ben√∂tigt viel Zeit, die man w√§hrend eines Projektes evtl. nicht eingeplant hat. Dies kann bei Scrum nicht geschehen, denn die Einf√ºhrung neuer Tools w√ºrde beim daily Scrum Meeting besprochen und so ein solches Risiko verhindert werden k√∂nnen.\nAuch im Spiral Modell wird auf die Risikoerkennung hoher Wert gelegt. Im Spiral Model gibt es w√§hrend einer Iteration 4 Phasen, eine dieser Phasen besch√§ftigt sich ausschlie√ülich mit Risikoerkennung und m√∂glichen L√∂sungen f√ºr diese Probleme. \n\nScrum ist weiterhin eine sehr flexible Art des Projektmanagements, denn vor jedem Sprint kann man entscheiden, welche Requirements des Backlogs man umsetzen m√∂chte. W√ºrde man das Bumpers Spiel mithilfe von Scrum umsetzen, k√∂nnte man sich w√§hrend eines Sprints beispielsweise entscheiden, ob man lieber erst die Graphiken versch√∂nert oder weitere zus√§tzliche Collisions ins Spiel integriert. In solchen Fragen sind die Developer vollkommen freigestellt und k√∂nnen sich selbst organisieren. Dies ist im Spiral Model ebenfalls sehr √§hnlich, denn auch hier werden zu Beginn einer neuen Iteration die Ziele festgelegt und dabei eventuell ver√§nderte Rahmenbedingungen beachtet. Folglich ist auch in dieses Projektmanagementmodell nicht starr auf ein zu Beginn festgelegtes Ziel ausgerichtet, sondern dieses Ziel kann sich im Verlauf des Projektes ver√§ndern.\n\nW√§hlt man bei Scrum eine falsche Team-Zusammensetzung, kann es vorkommen, dass sich dies nachteilig auf die Gruppendynamik auswirkt. Im Verlaufe des Projekts m√ºssen die Entwickler gut zusammenarbeiten. Ist dies jedoch aufgrund verschiedener Gr√ºnde nicht der Fall, kann sich dies sehr negativ auf die Qualit√§t des Endproduktes auswirken. So ist es beispielsweise sehr schlecht, wenn ein Team aus eher introvertierten Entwicklern besteht, da diese dann in den Scrum Meetings evtl. nur sehr wenig erz√§hlen, was sich daher negativ auf die Transparenz und somit auch auf die Risikoerkennung auswirken k√∂nnte. Beim Spiralmodell hingegen ist die Risikoverletzung das h√∂chste Gut und darf unter keinen Umst√§nden verletzt werden, denn darauf ist das gesamte Projekt ausgerichtet.\n\nWeiterhin k√∂nnte es vorkommen, dass sich die Entwickler pro Sprint zu wenige Aufgaben setzen, was eine Verz√∂gerung der Fertigstellung des Endproduktes nach sich ziehen k√∂nnte. Beispielsweise k√∂nnten sich die Entwickler pro Sprint nur jeweils 2-3 von den insgesamt 10 Backlog-Items aussuchen. Es kann jedoch immer vorkommen, dass sich der Product Backlog nach einem Sprint um nochmals einige Items (z.b. 5) erh√∂ht und die Entwickler nicht damit gerechnet haben, wodurch es vorkommen kann, dass sie ihr Projekt nicht innerhalb des Zeitrahmens einhalten k√∂nnen. Im Spiralmodell kann dies vermutlich auch vorkommen, denn es ist keine Anzahl an maximalen Iterationen vorgegeben.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622605,
      "meta": {},
      "text": "SCRUM is an agile process technique that deals with rapidly changing project requirements, it uses parallel workflow and adaptive nature to create a potentially shippable product increment with each \"sprint\". The SCRUM model uses sprints of constant length, in which work is done parallel by SCRUM owner, master, and especially team members. There are also certain meetings during, before, and after each sprint, and a task board which lists all product increments that still need to be shipped.\n\n\nAdvantages:\n\n+improves communication and collaboration in teams. Splitting a development team into smaller parts helps with communication when developing. Facebook does this all the time and even provides ways to get to know the team partners better through workshops.\n\n+help manage complex projects by breaking them down into smaller parts: A project like the Chrome browser with its many functionalities could not be developed by a big team without the work being divided upon multiple (SCRUM) teams, one team can then implement basic functionality such as visiting a website, while another can manage plugins, etc.\n\n\nDisadvantages:\n\n-consumes extra resources to set up the structure, especially for small projects. Time can be wasted on SCRUM events, while little is being developed. In our EIST project, this happened in the beginning as we wasted resources on SCRUM formalities instead of developing.\n\n-has no system of including deadlines by lacking a linear approach. The incremental structure doesn't guarantee a timely completion. This happened to the company CD Project Red who used SCRUM to develop Cyberpunk2777, leading to many delays and ultimately an unploshed game being released.\n\nSpiral model comparison:\n\n+also encourages communication between the different team members at each stage of the development process. This allows for a more open and efficient development process.\n\n+because of the incremental nature, it manages to make developing big projects easier by identifying risks and concerns early, it also breaks the project apart into smaller parts (like SCRUM)\n\n-also consumes more resources, because there has to be an expert who knows how to do risk analysis right\n\n-also no clear inclusion of deadlines",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644836,
      "meta": {},
      "text": "The Scrum method is a framework in which a team organizes itself with predefined tasks and roles so that it can react agilely and quickly to changing requirements within 2-4 week sprints. \n\nScrum has given a high agility and flexibility through the short sprints, during which one can react to changes. For example, the product owner learns that the coorporate identity of the company has changed and the app that the Scrum team is developing should now use red instead of blue, which he can immediately address in the daily Scrum meeting and is also updated in the next meetings whether it is also implemented. In the Spiral Model (SM) changes can be easily adopted and incorporated in the next iterative phase.\n\nThe daily Scrum meetings also result in a high level of transparency within the team through the daily updates. For example, developer colleague A learns in the daily Scrum that developer colleague B has already created templates for tables and buttons that can be used on a website and now saves the time to code them himself.\nIn the SM the review also provides transparency within the team, but not as high as in daily Scrum meetings.\n\nYou only have three possible roles you can take in a Scrum team (Scrum Master, Product Owner or Development Team). Otherwise, the team has a shared responsibility towards the product and there is no clear distribution of roles. This can lead, for example, to the fact that in the team only the individual tasks are dully processed but no one within his role (since there is no such thing) looks beyond the whole to bring possible ideas or suggestions for improvement. In the SM there is a role allocation that is re-evaluated after the review.\n\nYou need full-time team members working only on the project. If you have a part-time working student, for example, he cannot attend all meetings and is not always up to date, which is the whole point of Scrum. Due to high costs, rather large projects are executed in the SM, where a fluctuation/low participation of e.g. part-time employees would be counterproductive, as the team should be updated of the current state of the project before starting the next iterative phase.\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644891,
      "meta": {},
      "text": "Scrum is a framework for software development team collaboration. It promotes teams to grow via experiences, self-organize while tackling a challenge, and consider their successes and failures in order to keep getting better. The term \"Scrum\" refers to a collection of gatherings, resources, and job descriptions that support teams in organizing and managing their work. It is founded on ongoing learning and adaptation to changing circumstances and it recognizes that the team will learn from experience and that they do not have all the answers at the beginning of a project.\nScrum's basic framework is straightforward. The roles, actions, and rules are all simple to comprehend. Its semi-prescriptive approach actually aids in clearing up any confusion in the development process while allowing businesses to inject their unique flavor into it. It's perfect for challenging projects because it breaks down complex tasks into small user stories. Additionally, the distinct division of roles and scheduled activities guarantee openness and shared ownership throughout the development cycle. Quick releases enable users to see progress, which helps to keep the team engaged quickly.\nEven though the development team is used to a standard spiral paradigm, it could take some time to completely understand scrum. For a new team, adjusting to the ideas of shorter iterations, daily scrum meetings, sprint reviews, and choosing a scrum master could be difficult. Additionally, it might have a significant negative effect on the project if any team members depart in the middle of it.\nThe Spiral model is an incremental and iterative-based software development framework. The ideal incremental model provides a method for breaking the task up into manageable pieces, and the iterative model enables us to receive feedback after each iteration of development. Because there are many steps and iterations in the Spiral Paradigm, time management is quite complex, which causes delivery delays and puts strain on the developer. However, this model is also incredibly expansive and cost-effective. The scrum structure, on the other hand, forces interaction between individuals, and the entire team and client will learn how much time and effort they will put into the development process. It facilitates the analysis of delivery effort and expense.\n\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5619571,
      "meta": {},
      "text": "Scrum is a development methodology that can handle very frequent changes. The development process consists of sprints with a fixed time frame, after each a potentially deliverable product increment is available. Frequent meetings ensure transparency, control and a good relationship between all participants.\n\n-\nScrum can lead to a much longer development process, as there are no fixed deadlines. This can lead to higher costs and lower customer satisfaction. For example, if only two of four task are completed after a sprint, the tasks are simply added back to the Product Backlog. With fixed deadline perhaps all tasks could be completed earlier due to higher pressure. In the spiral model where there are also no real deadlines for specific tasks.\n\n-\nThe concept of Scrum is not as simple as other models like the spiral model. So it is difficult to adopt the complex framework and apply it properly. For example, if none of the developers and managers have ever worked with Scrum, it could be misapplied, and the entire development process could suffer from this misapplied framework. With the spiral model no specific roles are required, and it is not as complicated as Scrum and easier to adopt.\n\n+\nIt helps manage complex projects by dividing the workload into small and manageable sprints. For example, if you want to implement a reservation system, developers are probably overwhelmed, but if you break the project into small tasks, such as implementing the login, ... the project will be much easier to implement. The spiral model also divides the whole process into smaller parts, not in sprints, but in 4 steps, which are applied in 9 iterations. \n\n+\nScrum is so popular mainly because the concept is so agile. This is a great advantage in today's world, as changes occur very frequently. For example, if a new task comes up in the middle of the development process because the requirements have changed, you can simply add the new task to the product backlog and implement it in the next sprints. In the spiral model, you can react to changes between iterations, but not within an iteration. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620169,
      "meta": {},
      "text": "SCRUM is an agile methods. This means that we do not have any more a strict procedure we rather realign every two weeks. This timeline is called a sprint. In a sprint there is always a daily meeting of the scrum team, which are the developers, so that they know what is going on. The only connection these developers have to the outside is through the product owner, who is responsible from our side for the project and the SCRUM master which is the leader of the team. \nThe entire method is based on the Scrum backlog which is a list that is defined at the beginning of the project. If this list is empty the project is finished. To have a good view on how well the SCRUM team progresses they have a sprint backlog which they always refine before each sprint. After the sprint has finished the developers and the SCRUM Master have a retrospective about what happend and plan the new sprint.\n\nImportant is that after every sprint an shippable version of the product is created.\n\nThe main advantage of this method is that we are more adaptive to change. Meaning if there is suddenly a need of changing a testing framework this can already be done in the next sprint and we do not have to plan everything from scratch. In our previous way of doing it we would have had to plan our entire iteration new. An additional advantage is that the programmers actually decide what they plan to do in the next sprint. This gives more a realistic view as the developers are the experts and they will get better per sprint  in estimate how much work they are able to finish. This results in a better project plan and less work for the management to do. With the sprial model we would not be able to see this progress during the iteration, only at the end of each iteration.\n\nThe disadvantage is that there is less control about the developement team as they are acting on their own and potentially could just work less. With the spiral model we have a more strict way of doing it leading to a potential better management. Additionally the planning creates more work for the SCRUM team leading to less time left for coding which can lead to longer developing phases. Also this would not happen in the spiral model as we give the developers the tasks they have to do.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621264,
      "meta": {},
      "text": "***** Core Essence of Scrum: *****\nScrum, compared to standard iterative models is based on the Idea that during the software development process, \tfrequent changes in the original requirements can and will be necessary. It \ntherefore follows an agil approach which allows the project team adapt very quickly to new changes by breaking the project down in short sprints in which a slim working product should be finished at the end. In each of the following sprints, the previous working product will be used as a starting point and will be refined trough the introduction of new features from a backlog that can be adapted/extended by the client very dynamically.\n\n***** Advantages *****:\n\t- Client is super flexible and can change most requirements or add new requirements during the entire development process\n\t- Scrum can handle environmental changes very well\n\n***** Disadvantages *****:\n\t- No clear end goal visible at the start\n\t- General project Progress is harder to track (compared to standard iterative projects)\n\n\n***** Advantages compared to the Spiral Model: *****\n \t- More flexible -> new changes can be implemented/integerated quicker\n\t- The client needs less of an clear functional Definition at the beginning\n\n***** Disadvantages compared to the Spiral Model: *****\n\t- SCRUM lacks a Risk Assessment Phase\n\t-  General project Progress is harder to track ",
      "score": 81.3,
      "language": "ENGLISH"
    },
    {
      "id": 5623035,
      "meta": {},
      "text": "1. explain the core essence of SCRUM:\nScrum is a process framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value.\n\nScrum requires a Scrum Master to provide an environment where:\nA Product Owner orders the work for a complex problem into a Product Backlog.\nThe Scrum Team turns a selection of the work into an Increment of value during a Sprint.\nThe Scrum Team and its stakeholders inspect the results and adjust for the next Sprint.\nRepeat\n\nThe Sprint is a timebox of one month or less during which the team produces a potentially shippable product Increment. (Start date and end date of Sprint are fixed)\n\n2. include a discussion about 2 advantages and 2 disadvantages of SCRUM, each of which is underpinned by a common example:\n\nAdvantages:\nLarge projects are divided into easily manageable sprints. For example: you want to implement a flight table: 3 experienced people of the team work on the back-End and 2 others work on the front-End.\n\nIt involves low costs: Adopting the Scrum approach can be cost-effective for example an organization, as it usually requires less documentation and control.\n\n\n\nDisadvantages:\n1. It requires the use of small teams. The Scum methodology usually works best with teams of at least three people but no more than 10. Although this can promote collaboration and teamwork, some organizations may find it difficult to rearrange their workforce into teams. For example our eist project: we were told to form groups of 5. It would have been too complicated if we were 30 people per team.\n\n2. It requires extensive training. Although using the Scrum framework can potentially deliver quick and high-quality results, it requires a well-trained and skillful team to properly implement it. \nBefore committing to Scrum, everyone within the team needs to understand the benefits and particularities of this approach for the project to be a successful one. It may be difficult for people who have no experience with SCRUM.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644261,
      "meta": {},
      "text": "Scrum ist daf√ºr da mit √Ñnderungen umzugehen. Mithilfe von Scrum k√∂nnen √Ñnderungen in den funktionalen Anforderungen angepasst und implementiert werden ohne das ganze Projekt von vorne starten zu m√ºssen. Durch die hohe Diskussionsrate k√∂nnenn Risikofaktoren minimiert werden. \nVorteile: Scrum ist anpassbar und flexibel. Funktionale Anforderungen die ge√§ndert werden f√ºhren nicht zu einem Neustart des gesamten Projekts. Ein Beispiel w√§re, dass der Kunde anstatt eines lokalen Spiels ein online Mehrspieler Spiel haben will. Im SpiralModell w√§re dass auch ein Vorteil, da man die Anforderungen in der ersten Phase anschaut und dann daraus L√∂sungsans√§tze vorschl√§gt nur passiert das erste nach einer gewissen zeit in der ersten Phase und nicht wie bei Scrum, wo man jeden tag ein meeting hat um solche √Ñnderungen anzupassen.\nEin weiterer Vorteil ist, dass die Kunden zufriedener mit dem Projektausgang sind, denn sie k√∂nnen nach jedem Sprint das Projekt anschauen. Wie bei unserem Teamprojekt auch stellt man die Fortschritte vor. Gibt es auch beim Spralmodell in der 4. Phase bevor die 1. Phase wieder anf√§ngt. \nNachteil: Man hat einen hohen Kommunikations und Abstimmungsaufwand innerhalb der Meetings. Man muss z.B beim Sprint Planning Meeting besprechen welche Tasks es in den Sprint schaffen und wie viel Zeit diese ben√∂tigen. Bei vielen Personen kann das zu Komplikationen f√ºhren, wie jedem bekannt ist. Diesen Nachteil gibt es auch bei dem Spiral Modell, da man die jeweiligen L√∂sungsans√§tze vergleichen muss und sich den besten dann aussucht. Wobei man sagen kann dass es im Spiral Modell schwerer wiegt als bei Scrum. \nEin weiterer Nachteil ist , dass es zu hohen Zeitverlusten f√ºhren kann wenn man den Sprint mit zu wenig Tasks plant. Man bearbeitet nur die Tasks in die definiert wurden f√ºr den Sprint d.h., dass es vorkommen kann dass man schon viel fr√ºher fertig ist aber es keine Tasks mehr gibt. Diesen Nachteil gibt es beim Spiral Modell nicht, da es keine Tasks gibt. Man einigt sich im Spiral Modell f√ºr einen L√∂sungsansatz und dieser wird dann implementiert d.h dort gibt es keine Tasks. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644340,
      "meta": {},
      "text": "Scrum is an agile software development process, where the customer comes with an idea, which is broken down into smaller items and then gathered in the product backlog designed for the scrum team to implement. Each sprint the team, consisting of developers and a scrum master, pick certain items out of the backlog and work on them each sprint, and potentially have a shippable product at the end of the sprint. Constant communication and feedback happens between the scrum master, its developers as well as the product owner regarding the development process every sprint as well as before and after a sprint.\n\nPro:\n+ focusing on items each sprint -> better overview and clear goals (focus on car behaviour first in bumpers)\n+ continuous feedback from product owner/team (daily team meeting, continuous meeting with product owner each sprint)\n\nContra:\n- blocks can impact sprints heavily -> no progress in sprints possible /heavily dependent on communication so blocks dont happen (drive implementation is needed to test collision behaviour)\n- sprints may have tight deadlines -> more pressure for devs to accomplish tasks compared to deadline far into the future (e.g. sprint duration is three weeks -> tight deadline)\n\nComparison to spiral model:\n1) Spiral model doesnt focus on specific items but rather lrager topics (iterations) e.g. detailed design or code\n2) Spiral model also relies heavily on communication as determining objectives and alternatives as well as evaluating them requires alot of communication.\n3) Blocks also heavily impact iterations as they can hinder the progress made in an interation as well as impacting the next iteration.\n4) Tight deadlines as the planned iterations happen close to the iteration before and after.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644740,
      "meta": {},
      "text": "SCRUM is a more dynamic model than the spiral one.\nThe team works on multiple preselected features in parallel over the course of 2 to 4 weeks\nDaily meetings ensure blocker are identified early.\n\nOne advantage are the daily meetings, where the team can discuss the current progress of the task and talk about upcoming issues or blockers.\nFurther all the future features (which are not in the current sprint) are visible to the team. This makes planning ahead much easier.\n\nDue to the incremental nature of SCRUM, meeting deadlines for ship able products might not be as easy as in an iterative model. Also the future risks might not be clear at the start of a project, because not every details was contemplabel",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620344,
      "meta": {},
      "text": "Scrum is an agile way to develop software that is especially useful in a frequently changing environment. After defining a Product Backlog the team repeatedly creates a potentially shippable product increment, fulfilling parts of the Product Backlog, in a set working period, the so called Sprints. During the Sprints the Team is supposed to do a short daily scrum meeting to discuss progress and problems together.\n\nAdvantages of Scrum:\n1. Scrum is usefull in case of rapidly and frequently changing requirements, since every 2 to 4 weeks (duration of a sprint) the team can decide to add new features. This is not possible when using the iterative Spiral model, as going back to a previous iteration is not planned. For example after 3 months of development a customer could decide that he would like to have a different view. Using scrum one can just add this feature to the next Sprint backlog, but when using the Sprial Model one might have to start all over again.\n\n2. Scrum enables all team members to communicate frequently in the daily scrum meetings as well as during the sprint planning meeting. This prevents problems such as interfaces being defined the wrong way. Continuous feedback is also provided which improves the team members' individual skills. When using the Spiral Model such issues could be overseen more easily.\n\nDisadvantages of Scrum:\n1. Scrum does not scale well. In a bigger project with a lot of team members, for example a bookkeeping software for a huge company, it is difficult to apply scrum as it could cause confusion regarding coordination and organisation. The Sprial Model would be more straight forward in this case.\n\n2. A fitting environment where the Team can come together for the daily scrum and other meetings is needed. Of course one could do those meetings online but it remains difficult to integrate remote working colleagues potentially living in different time zones. Furthermore, new and unexperienced team members will take a lot of time to adapt to the team's routines and learn to apply scrum.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621871,
      "meta": {},
      "text": "SCRUM is a way of managing software development as an agile process. It can deal with unexpected developments, interruptions, and changing product requirements, which is what separates SCRUM from linear models like the waterfall model and iterative models like the spiral model. This is achieved by dividing the development process into 2 - 4 week-long sprints, that each take parts of the whole process and work on it. For better communication, the \"teams\" are separated into \"product owner\" \"scrum master\" and \"scrum team\". One big advantage over the spiral model is the already mentioned agility and adaptability of SCRUM. While in the spiral model you are able to interchange activities you are not able to change something while you are in one activity. SCRUM makes this possible, for example by using the sprints, which are not bound to one certain ability but can work on different ones. The daily Scrum meeting also helps overcome unexpected obstacles,  another advantage is the Scrum master, he or she creates a layer between the owner and the developers and can help to solve all kinds of problems both sides may have. This creates a much better communication and problem-solving structure that is not outlined in the Spiral model. A disadvantage could be that to use Scrum the whole existing development structure needs to be changed and everyone must be trained in the use of the Scrum model. Secondly, the use of scrum on a large scale requires very precise organization because Scrum requires the use of many small teams which in the end have to develop one big working product.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622668,
      "meta": {},
      "text": "Scrum is an agile framework that used for developing complex product projects. By breaking down all the tasks into several phrases, it decreases the workload in each phrase and makes the project  more manageable. The development team can deliver a product increment and get feedback on what they have done in each phrase which makes the development process agile to change and can better satisfy clients' requirements.\n\nTwo of the advantages of Scrum is 1. Scrum is straightforward and easy to use, whereas previously used spiral model is very complex, and require special expertise for risk analysis. 2. Large projects are divided into easily manageable sprints which are more easily to make changes for all activities within one sprint whereas the spiral model can not deal with change within an activity. \n\nBut there are also disadvantages of scrum, 1. it requires good teamwork, if individuals aren't very committed, the program might fail, same as spiral model.  2. As Scrum requires lots of meetings, adopting the Scrum framework in large teams is challenging, same for spiral model.\n\nIn bumpers example, we started using Scrum the moment we learnt this concept and it's hard to image we can use Spiral model right away. During the each sprint, when developing, if we find there is a problem in the UML diagram, we can make a change there, while we can not change UML when we are doing developing in Spiral model. Both model require good teamwork and many meetings, if one team member misunderstand the tasks, it will delay the whole process.",
      "score": 81.3,
      "language": "ENGLISH"
    },
    {
      "id": 5623188,
      "meta": {},
      "text": "SCRUM is an iterative and incremental way of software development in groups. It makes the software development process quite adaptable.\n\n[Pro 1]\nAn advantage of SCRUM is the adaptability. The wishes or needs of the customer can always be integrated into the project, since the development always happens in iterations. SCRUM makes it also easy to adapt the change of environment and technology. Spiral model is less adaptable, because the development phases are longer. \n\n[Pro 2 and Con 1]\nAnother advantage is the strong and active communication between team members. Problems can be cleared very quickly, since all team members meet daily. HOWEVER, this could also be a disadvantage of SCRUM. Commitment and communicative competence are necessary for every team member. It is not easy to meet everyday to discuss problems and questions. This level of communication is not a part of the Spiral Model but it also requires less commitment and communicative competence from each team member.\n\n[Con 2]\nSCRUM can decrease productivity in some cases, where the needs change too often and the project stays in an undefined state for longer periods of time. Adaptability is great, but if the wishes are unstable, it leads to lower productivity and lower quality of code, because the programmer should sometimes give up what they have been working on and rethink next steps. Spiral Model doesn't have this problem, since the needs and risks are analysed at the beginning of each phase and don't change during development and testing.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644795,
      "meta": {},
      "text": "Scrum is a technique which is designed to handle and adapt to change. It reduces risk in a project by improving communication and overall teamwork and also because there is a finished product increment at the end of a scrum sprint.\n\nAdvantage 1:\nVery adaptive to change.\nBecause scrum sprints are a overseable timeframe developers can concentrate on their task in that timeframe and change or rework items in their sprint backlog. because items can also be readded to the sprint backlog if change is needed this makes scrum very agile. In the spiral model you had to preplan alot of things beforehand, which is harder to change on the go\n\nAdvantage 2:\nLower risk of failure.\nBecause there has to be a product increment at the end of each sprint, and because there is alot of communication between team members in the daily scrum meeting, the risk of someone doing something wrong or items not fitting together gets reduced. In the spiral model this also takes place but only at ceartain times, which can lead to bigger errors.\n\nDisadvantage 1:\nScrum is difficult to apply to big teams.\nwhile alot of communication can be great, it may also lead to alot of confusion if the group gets to big. then things might become unclear and in projects where big teams are needed progress might become slow.\nIn the spiral model, the preplanning is better for big teams, because then everyone has a clear roadmap infront of them and there isnt as much coordination needed.\n\nDisadvantage 2:\nEveryone has to know how to apply scrum\nWhile scrum concepts might seem pretty simple, actualy doing it effectively isnt that easy, so training is required. For new or inexperienced team members that will slow down their productivity (and maybe also of everyone else in the team) until they get used to using scrum and enjoy the benefits.\nin the spiral model not that much personal skill is required",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644828,
      "meta": {},
      "text": "I would propose a fundamental change of the way we structure the way we organize our work on the software. We are currently working with the spiral model, but i would propose a change to the Scrum model, a comparison of the two i will present in the following text .\nScrum is organized in 2-4 week \"Sprints\", after which a finished product can be delivered, which helps with the incremental development of the software that we are writing. The teams members have multiple rolls : the Product Manager for example,  closely speaks with the customer and designs the product backlog, from which tasks are chosen at the start of each spring\nI think Scrum would increase the productivity in our company because it will minimize many problems. Firstly, because scrum incrementally delivers new software parts, the integration will be vertical. That means, that the problem we have with the spiral model will be mitigated, because the different components of our system will be mostly integrated together, when we will reach the final phase of our project, because of the constant integration.\nA potentially negative part of Scrum would be that more refactoring might be possible, because the plan isn't clear at the start of the project. Less time will be spent on this if we keep using the spiral model.\n Another possible downside of Scrum might be that we will not be able to tell the customer at the start of the project, when the end product will be delivered. That is because, the individual sprints do not have as a goal, only to fulfill the items on the sprint backlog. That will probably not be a problem, because the customer will be able to see the incremental changes that we will make.\nScrum is probably the best choice for our startup, because we are a small team at our startup, which would be advantaged by the agile way in which scrum is designed, because of the daily meetings. Those help us to see potential problems in advance and help create a good project design\n",
      "score": 95.8,
      "language": "ENGLISH"
    },
    {
      "id": 5620531,
      "meta": {},
      "text": "Scrum ist ein agiles Software Entwicklungs Modell. Man arbeitet in festen Intervallen (sogenannten Sprints) parallel an einem zuvor festgelegtem Teil des Gesamtprojekts. Vor nach und auch w√§rend den Sprints wird der aktuelle Vortschritt besprochen, wobei nicht nur der Informationsstand aller Beteiligten aktuell gehalten wird, sondern auch die Requirements / das was noch zu erledigen ist - immer aktuell gehalten wird und dynamisch angepasst werden kann.\nEiner der Vorteile von Scrum sind die in der Struktur des Modells selbst festgelegten regelm√§√üigen Meetings. Dadurch wissen stehts alle Mitarbeiter, was an Aufgaben noch getan werden muss und auch Vorschl√§ge zu Verbesserungen an bisherigen Arbeitsweisen k√∂nnen schnell eingearbeitet werden. Sollten beispielsweise Mitarbeiter der Meinung sein, t√§gliche Treffen seien zu viel und behinderten die Arbeitseffizienz, kann man die Frequenz spontan auf w√∂chentlich herabsetzen ohne dass (inDerTheorie) irgendwem diese √Ñnderung entgeht.\nEin Nachteil von Scrum ist, dass die Planung der Aufgaben, die in einem Sprint zu absolvieren sind, sehr pr√§zise sein muss, um nicht vielzufr√ºh damit fertig zu werden oder fast nichts abgeschlossen werden konnte.\nWenn zB. alle Aufgaben eines Sprints bereits eine Woche vor dem geplanten Ende fertig sind, lohnt sich die verbleibende Zeit meist nicht, um noch mit etwas neuem weiterzumachen, va. wenn mehrere Teams parallel arbeiten und nur eins davon fertig ist, m√∂glicherweise noch nicht gekl√§rt werden kann, was als n√§chstes zu tun ist.\nEin weiterer Nachteil sind die fest zugewiesenen Rollen eines Scrum Teams. Wenn eine Person ausf√§llt, verz√∂gern sich im schlimmsten Fall die Arbeiten, wenn niemand diese Person ersetzen kann. F√§llt also beispielsweise der Product Owner aus, k√∂nnen Nachfragen an den Client erschwert werden falls kein anderer dessen Kontaktdaten hat und so das gesamte Projekt verz√∂gern.\nEiner der gr√∂√üten Vorteile von Scrum ist, dass √Ñnderungen an den Anforderungen schnell eingearbeitet werden k√∂nnen und die Anforderungen wenn sie einmal festgelegt wurden nicht f√ºr immer so bleiben m√ºssen und der Kunde am Ende ein unbrauchbares Produkt erh√§lt. So kann beispielsweie auch im Projektverlauf noch die Funktion erg√§nzt werden verschiedene Ma√üeinheiten ineinander umzurechen, obwohl urspr√ºnglich nur Meter eingeplant wurde und nicht Feet.\nIm Gegensatz zu Scrum sieht das Spiral Model keine regelm√§√üigen Treffen vor (obwohl sich diese theorethisch erg√§nzen lie√üen). Auch arbeitet das Spiral Model weniger parallel als Scrum und mit keinen festen Zeitintervallen, wenn also eine Aufgabe erledigt wurde, kann sofort die n√§chste begonnen werden. Auch giebt es im Spiral Model keine fest zugewiesen Rollen, f√§llt eine Person aus hat das kaum Belang. Daf√ºr ist Scrum flexibler was das Miteinbeziehen von Ver√§nderungen betrifft und kann diese deutlich schneller verarbeiten als das Spiral Model.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622076,
      "meta": {},
      "text": "the core essence:\nScrum is a method or technique to continue the work after it had been interrupted. with it we can manage and control the software and product development during the quick changing of the requirements, and use the improvements of the communication, cooperation and the delivery of product increments to  improve the risk management.\n\nadvantages:\nScrum can help teams complete project deliverables quickly and efficiently, because it has a up to 1 month time-box.\nvs spiral model: using the spiral model, if the risk couldn't be solved, the project is terminated\nLarge projects are divided into easily manageable sprints. the team can manage the software development and the project easily.\nvs spiral model: spiral model is not as flexible as scrum\n\ndisadvantages:\nthe scrum is wholly depending on the team members, if one team member leaves the team unexpectedly, this will have a bad impact on the work.\nvs spiral model: spiral model isn't highly depends on the team members.\nit/s will be hard to say, how good is the project or software actually is, before the team go throw the testing phase.\nvs spiral model: the evaluation of the result is immediately \n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644659,
      "meta": {},
      "text": "Scrum is a framework for effective collaborations among teams working on complex products and is a type of agile technology that consists of meetings, roles, and tools to help teams working on complex projects collaborate and better structure and manage their workload. There are different roles in a Scrum team like Scrum master(facilitator, keeps scrum process) and developers(team members) and scrum works with sprints, which are time-boxes (up to one month) during which the team creates a potentially shippable product increment. After every sprint, the new sprint with other backlog items starts and during sprints, there are different meetings like daily meetings or review meetings after sprints, and so it adapts changes and a good way for agile software programming.\nAdvantages:\n1-)Scrum adopts feedback from customers and stakeholders. So in sprints, one can adapt these changes by adding them to the backlog. As an example, we can give our bumpers game exercises, where we added new things to our backlog list, and improved our code with every sprint. In the spiral model, customer can also request changes during the process. For both an advantage.\n2-)Large projects are divided into easily manageable sprints. So divide and conquer. It is a huge advantage which is known by everybody. Instead of coding the whole project once, we start in parts and see results after every sprint(example: again see bumpers game. That is way better than in the spiral model because, in the spiral model, it takes a lot of time and costs higher for every iteration.\nDisadvantages:\n1-)Daily meetings can frustrate team members. For some people making every day, a meeting can be boring and affect their motivation. That is not a problem in the spiral model, since it does not have daily meetings.\n2-)Adopting the Scrum framework in large teams is challenging. Because it will be hard to talk efficiently in meetings and also the team cooperation will be harder. A team with 5 experienced members could work more efficiently than 50 probably(example: see EIST team project). Not such a big problem in the spiral model, since one of the biggest reasons for these problems is the meetings in the scrum.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5645042,
      "meta": {},
      "text": "Scrum is essentially a team and product as the core. Scrum is a framework that helps teams work together. Much like a rugby team (where it gets its name) training for the big game, scrum encourages teams to learn through experiences, self-organize while working on a problem, and reflect on their wins and losses to continuously improve.\nadvantage:\n1.Adapt quickly to changes in demand and release on time\nThe testing process is constantly accompanied by changes in requirements, and in this project, Scrum Master developed the test plan to actually do just that.\nIn practice, the plan is developed at the beginning based on the priority of the test tasks and requirements, and in each Sprint, there will be multiple short and abrupt plans, and with effective use of Scrum testing, multiple plans can be made at any time and as needed.\n2.Improved Testing Productivity\nContinuous feedback allows issues that may affect testing to be resolved more quickly; communication between all parties clarifies many complex issues quickly; and testers get good feedback on suggestions from other project team members.\ndisadvantages\n1.Lack of support for large and complex software\nIt can be expected that for large teams, the communication threads that must be maintained will reduce the effectiveness of practices such as face-to-face communication and review meetings, and the degree of agility may be much smaller than if they were used in a small project. As for testing, it is important to consider both the size of the project being tested and the size of the overall project.\n2.The chances of project failure are high if individuals aren't very committed or cooperative\nIn the project, we found that a few project members were in different cities at the beginning of the development of the Scrum team, and there were geographical time differences; in this case, we could only communicate face-to-face through technical means such as video conferencing, which was costly and did not always achieve the expected results.If members do not cooperate, the project will be much more difficult\n\n",
      "score": 54.2,
      "language": "ENGLISH"
    },
    {
      "id": 5619549,
      "meta": {},
      "text": "Grundlegend handelt es sich bei Scrum um eine Technik, welche die Software- und Produktentwicklung steuert und kontrolliert. Speziell f√ºr Projekte, bei denen sich die Anforderungen oft und schnell √§ndern.\n\n\nEin gro√üer Vorteil ist, dass durch den st√§ndige Austausch mit dem Kunden, dessen Feedback oder dessen Anpassungsw√ºnsche sofort miteinbezogen und implementiert werden k√∂nnen. Dies ist ein Vorteil, da dadurch der Kunde am Ende h√∂chstwahrscheinlich zufrieden ist, da eng mit ihm zusammengearbeitet wird. Beispielsweise kann der Kunde w√§hrend dem Entwicklungsprozess sagen, dass ihm die Website so nicht gef√§llt und diese einen anderen Stil haben soll.\n\nDes Weiteren ist das Ergebnis jeden Sprints ein \"potentially shippable product increment\" welches funktionsf√§hig ist und theoretisch schon geliefert werden kann. Anhand dessen kann der Kunde den Fortschritt des Produkts verfolgen/sehen und so auch besseres Feedback geben. Z.B. kann der Kunde nach dem ersten product increment sagen, dass ihm bestimmte √§u√üerliche Aspekte nicht gefallen und diese bis zum n√§chsten mal angepasst werden sollen.\n\n\nEin Nachteil von Scrum ist, dadurch dass es oft zu Ver√§nderungen und Anpassungen kommt, es anfangs sehr schwer einzusch√§tzen ist, wie viel das Projekt insgesamt kostet und wie lange es dauert. Dies ist ein Nachteil, da der Kunde sowas eigentlich immer gerne schon am Anfang wissen will. Beispielsweise rechnet der Kunde dass das Projekt Ende 2021 abgeschlossen ist, aber durch viele Ver√§nderungen wird das Projekt erst Anfang 2022 fertig und der Kunde ist ver√§rgert.\n\nEin weiterer Nachteil ist, dass falls ein Team member w√§hrend eines Projekts das Team verl√§sst, dann kann dies gro√üe negative Auswirkungen f√ºrs das Projekt haben. Beispielsweise ist Tim der Experte f√ºr das Programmieren von Websiten, dieser verl√§sst jetzt aber das Projekt und das Team bekommt die Website letztendlich nicht so gut hin, wie sie es mit Tim geschafft h√§tten.\n\n\nWas die Vorteile von Scrum anbelangt, also der enge Austausch mit dem Kunden und das Abliefern eines \"potentially shippable product increment\" nach jedem Sprint, handelt es sich bei diesen um klare Unterschiede zum Spiral Model. Denn beim Spiral Model steht man nicht so eng mit dem Kunden im Kontakt, wie bei Scrum. Noch dazu gibt es auch keine \"product increments\". Zwecks den Nachteilen hat auch das Spiral Model Probleme, genau das Ende des Projekts vorherzusagen.\nBeide Modelle versuchen aber das Risiko m√∂glichst gering zu halten und sind iterativ aufgebaut.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5620626,
      "meta": {},
      "text": "1. SCRUM is a product management technique focused on building products in an agile and feedback-driven way. It breaks down the product into different sprints. Each sprint consists of iterating through these activities: Documenting product back,  sprint planning, documenting sprint backlog, sprint execution & result assessment, and sprint retrospective. (https://artemis.ase.in.tum.de/courses/121/text-exercises/4341/participate/947636).\n\n2. One advantage of SCRUM is that it partitions the product into singular parts (sprints), making the long product development journey more manageable and less risky. One instrument that illustrates this partitioning is the Product Backlog, for instance, there the team has a picture of all the features/requirements that have to be implemented listed down by order of relevance. Then in every sprint, one or some elements of this list will be specifically addressed in that Sprint.\n\nThe second advantage of SCRUM is that it establishes high communication between team participants as a series of operational meetings occurs during sprints. One of the many communication events that occur during SCRUM is Sprint Planning Meeting for example, where all team participants are briefed on which backlog items will be addressed in the upcoming sprint. Consequently, all participants have a clear picture of the objectives in mind.\n\nOne disadvantage of SCRUM, is that it requires experienced team members for two reasons, firstly because SCRUM brings team participants from diverse areas of expertise (e.g. Software teleports, product managers, designers, etc ..), and finding common grounds for communication can be challenging, and secondly because first-time SCRUM participants might find difficult to maintain a clear vision to the project as concrete end dates for projects are not defined in the start of the project. \n\nThe second disadvantage of SCRUM is that the quality of the requirements can take too long to be perfected. For example, testing is not an explicit part of the SCRUM process unless specified in the product backlog as some sort of \"requirement\". Hence, the quality improvement of product increments or the product itself can take long enough until an explicit testing phase occurs.\n\n3. Compared to the Spiral Model, it is possible to state that SCRUM is a less complex product development technique. This advantage illustrates 2 differences between SCRUM and Spiral Model. First, SCRUM is an iterative process whose time dimension is clearly defined, while the Spiral model has 4 phases whose \"arc-lengths\" are not standardized (so every time one of the four phases is revisited the length of time is not the same as the time from the last visit). Secondly and naturally, it's possible to say that the Spiral Model due to this complexity imposes a challenge to time management requirements. In contrast, SCRUM imposes concrete daily tasks and retrospectives for the defined sprint.\n\nThe key component of the Spiral Model is the necessity of having specialists/experts whose job is to choose the best solution with less risk to building the prototype. Thus, a lack of experience implies a failure in product development. This liability does not take place in SCRUM as the sprints produce a single increment to the product. Hence, \"sprint-for-sprint\" a product is created out of multiple increments mitigating risk and never centralizing the best solution and risk identification to specialists/experts like in the spiral model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621364,
      "meta": {},
      "text": "Scrum is a framework utilizing an agile mindset for developing complex products, with an initial emphasis on software development.\nThe core essence of Scrum is to enable teams to work together in order to develop a product. Building products using Scrum occurs in small pieces, with each piece building upon previously created pieces. In this way it encourages creativity and enables teams to respond to feedback and change, to build exactly what is needed.\nScrum consists of:\nFirst, three roles: product owner, team and Scrum master. Second, three Scrum lists: product backlog, sprint backlog, and potentially shippable product increment. Third, five Scrum meetings.\nThe main advantage of Scrum is that in Scrum the process is broken up into smaller pieces, first just enough planning to get started with building the minimal feature set, we build what was planned. Next, we test and review that small feature set and get it ready to cheap. After that cycle we have a potentially shippable product, thus Scrum reduce the time from planning to development to testing.\nWhereas the spiral model has no limit since it has the shape of a spiral. Therefore, it can go infinitely when the iterations continue indefinitely. \nSecond, Scrum has costs advantages since it is not risk-driven like the spiral model. Scrum follows the simple principle of identifying the risks and avoiding them. Risks will be identified at the stage of the product‚Äôs backlog. In contrast the spiral model can be costly since a prototype will be produced and then the developments and verifying will happen but after that the risk analysis should still be done, which requires high costs because specific expertise will be needed.\nIn Scrum you will have better product quality if you‚Äôre checking in with your customers and stakeholders for evolving requirements during sprint reviews because they will be able to determine more quickly whether the software matches their needs. But adopting the Scrum framework in large teams is challenging. The chances of project failure are high if individuals aren't very committed or cooperative.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622043,
      "meta": {},
      "text": "I would suggest using the SCRUM model as an agile model because it can react and deal with change much more quickly. Here, individual \"sprints\" take place, in which tasks are completed and discussed in many meetings for constant exchange , e.g. the daily SCRUM meetings are held to inform the whole team about changes, difficulties and the general state of affairs, which could be beneficial for us. In SCRUM, everyone involved is part of the team, such as the product owner, the development team and the Scrum master.\n\nThere are significant advantages of SCRUM compared to the spiralmodel. In SCRUM, tasks can be completed at the same time, unlike the spiral model, where a new task is started only after the old one is completed. This is also a reason why the SCRUM model can react much faster to changes and improve individual elements during the process. \n\nAnother good thing about SCRUM is, that you can return to tasks or individual steps of the process if you realize that it is better to change or adapt something. In the spiral model, on the other hand, once a task has been completed in the entire process, you can no longer return to it in order to possibly adjust it in the same run.\n\nFor the spiral model, verification activity plays an important role, making sure that elements are not added or omitted during the process, whereas in SCRUM this can change frequently and individual parts may change constantly.  \n\nAs another advantage of the spiral model, the simplicity and easy manageability of the model can be mentioned, in contrast to this, the SCRUM model is much more complex.  \n\nA difference between the models is that with the spiral model the process is closed wehen you don't come to an solution but with SCRUM you often start again in the beginning and try again to find a solution. \n\nWhat both models have in common is that in their last step a kind of review is made and the next sprint or iteration is planned (in the spiral model, however, only if a solution for the risk could be found.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5644354,
      "meta": {},
      "text": "SCRUM is an adaptive technique ideally used for when change often occurs during development, which is our case, as we often deal with \"up-and-coming Software\", that is because it allows the team to reorganize itself quickly, due to its fast iterative cycle and team-focused approach. For example, if the customer requirements change during development, the team is able to gather in a scrum meeting and discuss the steps to alter the software in the next sprint. While the Spiral model supports some change, if risk is introduced too often, it may result in massive delays to production, as previous steps will have to be repeated - or cancelled. \n\nAnother advantage of SCRUM is that it is performed in parallel, meaning multiple tasks can be executed simultaneously, in multiple areas. As an example, you can have a team work both on a server-side and client-side application at the same sprint, because one is not dependent on the other and therefore must not be executed linearly, as opposed to the linearized prototyping methods, used by the Spiral model.\n\nOn the other hand, the SCRUM model may require some training of staff who are used to other techniques, such as the Spiral. For example, if developers have long been using a spiral model, they may be tempted to restart an iteration upon encountering a major risk or change, that is, however, not suitable for a SCRUM project, as the objective then is to plan for the next sprint instead, and continue advancing other fronts simultaneously.\n\nA further disadvantage is that the SCRUM model tends to scale better with small teams, as opposed to the Spiral design, which, although also iterative, due to its relatively intuitive and static in nature, and thus can also be used by larger teams. As an example, if you have a very large project, you won't be able to properly organize and go over all necessary details in SCRUM meetings, and additionally your developers may have a very irregular workload. The solution in this case is to possibly have more than one team, spread across the entire project.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644410,
      "meta": {},
      "text": "Scrum bezeichnet eine Arbeitsweise f√ºr Teams. Es wird so vorgegangen, dass das Projekt in kleinere Aufgaben geteilt wird, die abgearbeitet werden. Sobald dies geschehen ist, werden die restlichen Aufgaben verteilt usw. Dadurch bereiten kurzfristige √Ñnderungen, oder auftretende Schwierigkeiten keine Probleme.\n\nDadurch entstehen viele Vorteile. Zum Beispiel wird viel Geld dadurch gespart, dass Funktionalit√§ten, die gar nicht mehr gew√ºnscht sind, nicht programmiert und anschlie√üend wieder entfernt werden, da man immer auf dem neuesten Stand der Anforderungen ist. Dadurch kann viel Zeit und Geld gespart werden. Beim Spiral-Model findet dieser Prozess nicht so h√§ufig statt, weshalb dieses auch nicht so anpassungsf√§hig ist wie Scrum. Wenn der z.B. der Kunde entscheidet, dass er eine Funktion nicht mehr haben m√∂chte, ist das mit Scrum kaum ein Problem.\nDes Weiteren bleibt durch Scrum jedes Teammitglied up-to-date, da in den t√§glich durchgef√ºhrten Scrum-Meetings der pers√∂nliche Fortschritt jedes Teammitglieds mit den anderen geteilt wird. Beim Spiral-Model finden diese Treffen nicht statt, wodurch die Entwickler vergleichsweise wenig √ºber den aktuellen Zustand des Produkts wissen. Dadurch k√∂nnte es dazu kommen, dass zwei Entwickler dasselbe machen, weil sie nicht wissen, dass bereits jemand daran arbeitet.\nJedoch hat Scrum auch Nachteile. Die t√§glichen Meetings nehmen viel Zeit in Anspruch, die f√ºr das tats√§chliche Voranbringen des Produkts verwendet werden k√∂nnte. Da diese Meetings beim Spiral-Model nicht stattfinden, geht diese Zeit nicht \"verloren\", sondern steht f√ºr andere Dinge zur Verf√ºgung. Zum Beispiel k√∂nnte eine Funktionalit√§t schon fertiggestellt sein, wenn der daran arbeitende Entwickler nicht st√§ndig seine Fortschritt dokumentieren m√ºsste.\nBei Scrum findet kein Risk-Management statt. Das Spiral-Model analysiert Risiken regelm√§√üig, was vor Allem f√ºr gro√üe Projekte von gro√üem Vorteil ist. Ein Problem in der Software-Planung wird so fr√ºhzeitig entdeckt und somit rechtzeitig aus dem Weg ger√§umt.\n\n\n\n",
      "score": 85.4,
      "language": "GERMAN"
    },
    {
      "id": 5644721,
      "meta": {},
      "text": "Bei Scrum gibt es drei verschiedene Rollen im Team, den Product Owner, dieser stellt die Anforderung an das Projekt und kann diese ver√§ndern, den Scrum Master, dieser √ºberwacht, dass die Scrum Technik eingehalten wird und die Scrum Team Members, diese sind f√ºr die Umsetzung und die Geschwindigkeit des Projekts verantwortlich. Zuerst wird ein product backlog vom product owner erstellt, welche die Anforderungen enth√§lt, teile davon werden in den Sprint backlog √ºbernommen. Danach wird der Sprint gestartet und jeden t√§glich Daily Scrum meeting gehalten, nach einer festgelegten zeit hat man ein potenzielles Auslieferers Product hat ein meeting und man beginnt wieder beim print backlog. \nEin Nachteil von Scrum ist der hohe Planungsaufwand und die vielen Meetings, welche dazu f√ºhren k√∂nnen, dass viel zu wenig wirklich am Produkt gearbeitet wird, stattdessen nur geplant wird und viel zeit verschwendet wird. Z.B. ein team hat nur och meetings ohne code zu schreiben. Auch ein Nachteil ist, dass man nicht so gut ein √úberblick auf das gesamte Projekt hat, sondern nur auf Einzel Tasks. Dass kann in einem Software Projekt dazu f√ºhren, dass viel Code doppelt geschrieben wird, wenn einem erst sp√§ter auff√§llt, dass man diese Funktion so √§hnlich bereits davor implantiert hat. Jedoch hat Schrum auch Vorteile, so ist zum Beispiel die viele Kommunikation ein echter Vorteil, da dies viele Fehler und Unklarheiten vermeidet. Z.b. werden durch die viele Kommunikation schnell Abstimmungsungsdifferenzen zwischen Frontend und Backend klar und das backend wei√ü z.b. laufend was das frostend noch f√ºr endpoints bracht und muss diese nicht im Nachhinein noch hinzuf√ºgen. Auch ein Vorteil ist, das Scrum sehr flexibel ist. Z.B. kann der Product Backlog noch w√§hrend des Projekts ver√§ndert werden und so Anpassungen vorgenommen werden, auch gibt es keine klare Struktur, wann getestet werden muss etc. Das auch ein Vorteil gegen√ºber dem Spiral  Modell. Dort ist alles  fix",
      "score": 37.5,
      "language": "GERMAN"
    },
    {
      "id": 5619512,
      "meta": {},
      "text": "Scrum is a popular methodology that works well for innovative and complicated product development initiatives. And it consists of following steps:\n1- Product backlog: The requirements for the product are getting set by the product owner.\n2- Sprint backlog: The requirements for one iteration are getting set.\nAfter the requirements for one iterations getting set, Everyone at the company does their job.\n3- Daily Scrum meeting: The team members meet daily, in order to present their daily status. \n4- Sprint review meeting: This meeting happens after one iterations (mostly in 2-4 weeks). The status of the project gets presented to the product owner.\n5- Sprint retrospective: The previous sprint gets examined and a strategy for enhancements gets devised for the upcoming sprint.(it can be merged with the 4th step). \n\nAdvantages:\n-  Scrum model is an agile model which allows flexibility and is also more flexible than waterfall model. The product can easily be adapted to changed requirements (e.g. customer requests). \n-  Scrum model allow the team members to engage more, as they meet daily and stay always in contact with eachother. Better communication leads to a better product ! \n \nDisadvantages:\n- Scrum model does not have clear frameworks (requirements elicitation, design, etc.) like the waterfall model. This could make it hard to have an overview and set deadlines. \n-  Scrum is based on continuous improvements and there is no one definite specific iteration. This could be a drawback and even cause the project to fail that is aimed to be finished for a given deadline. ",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5619743,
      "meta": {},
      "text": "SCRUM is an Agile framework for software development. It is designed to help teams work together to complete projects more efficiently. The name \"SCRUM\" is derived from the game of rugby, where players work together as a team to move the ball down the field. Similarly, in software development, teams use SCRUM to move their projects forward and generate value for their customers. \nTwo advantages of SCRUM include: First of all SCRUM can help to improve communication between team members: With the recurring meetings such as dailies team members have a lot more opportunities to communicate blockers and solve these in a timely matter. Further SCRUM can help to improve the quality of the final product due to the intensive planning that is done in the Sprint and Product planning meetings. Also the retrospetve meetings help to generate a better output as they force everyone to improve themselves.\nHowever this also comes at a cost:  SCRUM can be time-consuming. Compares to other models SCRUM has a lot more meetings and proceses that consume a lot of time that could be also spent on implementation.\nAlso if you want to implement SCRUM properly this can be quite challenging and costly as it requires a scrum master and product owner to do so.\nTo conclude the Scrum framework is one of the most popular methods for implementing Agile. In contrast the Spiral Model is a risk-driven approach that iteratively adds features to a product. The main difference between the two methods is that Scrum is focused on delivering value in short sprints, while the Spiral Model is focused on managing risks.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620465,
      "meta": {},
      "text": "Scrum is a project management framework that focuses on iteratively learning from the positive and negative experiences of working on a project from fixed-length time intervals (usually 2 to 4 weeks) called sprints. Scrum teams consist of 5 to 10 members where each member has a fixed role: Product owner, scrum master, or scrum team member. \nThat large projects can easily be split into smaller projects presents an advantage over the spiral model. An example of this might be a camera project where development of the camera can be split into multiple scrum projects, for example, one for the lens and one for the UI. In the spiral model, these two areas would likely be implemented in a less structured process without the benefit of scrums‚Äô learning effect.\n\nTransparency, or the fact that the entire team can follow each member‚Äôs contributions, is another strength which is facilitated by the daily scrum meetings. A 5-person development team with one person who isn‚Äôt working will quickly notice the lack of their contributions and can act to resolve the problem. As the spiral model doesn‚Äôt necessarily have daily meetings, slackers can ‚Äúhide‚Äù much more easily.\n\nThe large number of meetings that require all of the scrum‚Äôs members, is time-intensive and reduces the available time for individual work. Assuming a 4-week sprint with 90 minutes each for the project kick-off, sprint planning, sprint review, and sprint retrospective meetings, and 15 minutes each for the daily scrum meetings, by the end of the first sprint, 13.5 hours will have been spent in meetings. In the spiral model, the number of meetings isn‚Äôt strictly defined and therefore more time for individual work may exist.\n\nFinally, scrum doesn‚Äôt allow for changes in requirements during an active sprint. This means that if a sprint is 4 weeks long and management adjusts the focus of a camera project from software post-processing to on-screen colour accuracy in the first week of the sprint, the new tasks can only be started during the next sprint while the work of the current sprint might become irrelevant. The spiral model has a similar disadvantage since it also works iteratively and plans every iteration at the beginning of the iteration. \n",
      "score": 85.4,
      "language": "ENGLISH"
    },
    {
      "id": 5621596,
      "meta": {},
      "text": "The idea behind scrum is to do divide the task into subsets of tasks and to complete them in so called sprints, which are done over and over. The process can be adapted to ones own needs and in general includes regular meetings before and after the sprints as to enable best possible communication.\n\nAn advantage is the iterativity of scrum. You do not thoroughly plan the whole project from the beginning, but you only plan the iterative sprints and certain things to do can be repeated. In the spiral model you usually don't go back to completed stages of the product.\nA key advantage of scrum is the \"built-in\" importance of communication by having regular meetings. In the spiral model communication is not built in, but rather seen as a byproduct that naturally occurs.\n\nA disadvantage of scrum is that you only focus on the goals but not on the risks, so you might oversee some. In the spiral model however, you specifically identify risks and try to resolve them.\nAnother disadvantage of scrum is that you don't focus on satisfying the deadline. You have fixed length sprints but it is at no point guaranteed that the amount of sprints that can be held until the deadline result in a final product. In the spiral model you have a fixed length of iterations so you can plan in a way that makes it very probable that you can deliver a product on point.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622581,
      "meta": {},
      "text": "The Scrum framework is a part of the Agile methodology, which is a practice that involves managing a project by dividing it into multiple phases and repeating a cycle of planning, executing and evaluating at every phase. Due to its simplicity of the application nature, scrum is the widely used. When the complex project and tons of difficult tasks are divided into smaller ones, it is easier to keep the team motivated and excited along the way. With the main formal artifacts (Product Backlog, Sprint Backlog and Increment), the corresponding team with their roles (the product owner with prioritized requirements, scrum master with continuous motivation and lead for the team and development team with its core implementation), it is a way to bring the stakeholders and the team together to make an informed and excellent progress.\n\n\nAdvantages of SCRUM\n\n1.\tAdaptivity and flexibility, with its adaptive nature, scrum gives an opportunity both the scrum team (especially development team) and the client to better handle change management during the lifecycle of any software product, you don‚Äôt plan the entire project ahead and continue in a stoned way, but response to any changes arise, without the huge loss of important resources. For example, after implementing some features of UI, it can be shown to the customer, who might feel the necessity of changing the style and this can be easily done in the beginning phase. In case of Spiral model, this adaptability does not apply as the order of the iterations are stricter. \n2.\tThe opportunity of continuous learning ‚Äì being an empirical based approach, it is a way of continuous improvement, while team can present some shippable product, after sprint review it can be more elaborated through experience and corresponding feedback. For example, scrum teams can test out their product before initial sprint releases and if they find any possible flaws that occurs and fix them even sooner. Due to its linear nature, the same cannot apply for the spiral model.\n\nDisadvantages\n1.\tThe whole project deadline is not ‚Äúvisible‚Äù. Although working in the Scrum framework means many smaller deadlines for everyone, it does not offer any support for the project meeting its overall deadline. For example, Customers may change the scope of requirements drastically.  As the new suggestion can come with some drastic changes, it can even make development team to change entire source code. This increases volatility and unpredictability and it is hard to come up with the final deadline.  In case of Spiral model, the predictability and risk management is more established, so the overall deadline is more ‚Äúvisible‚Äù, however with more rigidity.\n\n2.\tMastering successful Scrum requires skills, which means it requires a well-trained and skillful team to properly implement it. Before committing to Scrum, everyone within the team needs to understand the benefits of this approach for the project to be a successful one. For example, in this case, when team loses one of its valuable members, not only does it both affect the team‚Äôs productivity, but also make it hard to find a new experienced and trained member for the team with matching skills and ability to integrate quickly. Again due to it linearity, the extensive skills and training are not required as much as for the Scrum.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622696,
      "meta": {},
      "text": "\nScrum is an agile framework that big and small companies use to develop code. It works by breaking down the project into smaller projects that can be done in a short time. As roles there are the scrum master who organizes the meetings and the project, the product owner who supervises that everything is up to his standards and the development team who gets the work assigned. The different meetings include daily meetings to plan the work day, sprint review meetings to talk about things that need to be changed with the product, sprint planning sessions to create the sprint goals, sprint retrospectives to reflect on the teams progress and backlog refinement to talk to the developers. \n\nOne advantage is that scrum ensures effective use of time and money. This is important because everything is business is about making money. A good way to do so is by saving money. By planning the development new every single day no unnecessary code is produced due to bad organization. This was a problem in the spiral method because there were no daily meetings but instead they only planed the project once per iteration. \n\nAnother advantage is that there is a clear hierarchy in scrum meetings. The scrum master gets to decide who does what, when they meet and whatever else could lead to arguments. This is important because any kind of argument costs time and resources and might prevent people from working together. In the spiral method every team member had equal rights which could cause arguments over who gets to do what. \n\nAnother disadvantage is the time consumption of scrum meetings. Because 15-20 minutes of work time of every team member can sum up to a lot of time which could otherwise be spend working. In Spiral this issue didn't occur because they only did these planning meetings once per iteration which took less time. \n\nOne more disadvantage is that it is more difficult to finish a project if you get the task on that day. Because if you got the whole task than you can plan it out yourself which could lead to way better time management. Because time management is what safes money. In a spiral model, a developer knew exactly what work would have to be done until the next interval. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622788,
      "meta": {},
      "text": "Scrum ist eine Entwicklungsmethode die sich auf Flexibilit√§t spezifiziert. Die Aufgaben eines Projekts werden in kleinere Aufgaben aufgeteilt die dann in sogenannten Sprints St√ºck f√ºr St√ºck entwickelt werden. Mit einem guten Kommunikationssystem und klar zugewiesenen Rollen werden dann nach jedem Sprint Produktinkremente fertiggestellt, die man potentiell anbieten k√∂nnte.\n\nEin Vorteil dieses Projekt Managements w√§re die hohe Flexibilit√§t w√§hrend des Entwicklungsprozesses, da durch w√∂chentliche Meetings √Ñnderungen an den Anforderungen schnell wahrgenommen werden k√∂nnen. Wenn man eine App entwickelt und die Kunden sich w√§hrend des Projekts f√ºr eine simple GUI umentschieden haben, kann das leicht umgesetzt werden, indem man das Produktinkrement der jeweiligen Entwicklungswoche √ºberarbeitet. Das Spiral Model bietet ebenfalls eine gewisse Flexibilit√§t, allerdings nicht so gut wir das Scrum System.\n\nDas Scrum System bietet zudem eine kosteneffiziente Methode zur Softwareentwicklung. Scrum ist bekannt f√ºr die niedrigen Kosten, aufgrund einfacherer und weniger n√∂tigen Dokumentation und Kontrolle. Wenn man beispielsweise eine App entwickelt sind Dokumentationen recht einfach, da eine Woche einem bestimmten Produkt Backlog Item zugewiesen werden kann. Im Gegensatz dazu bietet sich das Spiral Model aufgrund seiner hohen Kosten nicht f√ºr kleinere Projekte an.\n\nAllerdings hat das Scrum Model ebenfalls Nachtteile. Scrum bevorzugt kleinere Entwicklungsteams, was bedeutet dass das Model schwer zu skalieren sein kann. Jedoch ist dennoch m√∂glich indem man mehrere Scrum Teams mit eigenen Scrum Mastern einf√ºhrt. Dabei geht jedoch ein Teil der √úbersichtlichkeit verloren. Zum Beispiel kann ein gr√∂√üeres Projekt, wie zum Beispiel die Entwicklung einer gro√üen Plattform wie Instagram, nicht von einer Handvoll von Programmierern gemacht werden sondern erfordert den Input von einem angemessen gro√üem Team. Das Spiral Model hingegen bietet sich besonders gut f√ºr gro√üe und komplexe Projekte an und ist nur schwer auf kleine Projekte umsetzbar.\n\nUm ein Scrum System in einem Unternehmen einzuf√ºhren m√ºssen manchmal grundlegende √Ñnderungen an der Unternehmensstruktur vorgenommen werden, was oft nicht problemlos passiert. Beispielsweise kann ein Unternehmen dass zuvor ein Spiral Model f√ºr ihre Projekte nutzte nicht ohne gro√üe √Ñnderungen ein Scrum System adaptieren. Das Spiral Model definiert keine klare Hierarchie in der Struktur des Teams, w√§hrend das Scrum System klare Anforderungen bez√ºglich des Entwicklungsteams stellt.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622939,
      "meta": {},
      "text": "Scrum as an agile process modeling technique is perfectly fit for tackling problems in todays world which is\nconstantly facing change. In essence scrum starts of by spliting a formally defined product backlog, containg all steps needed on the way to the finished product into smaller chunks of items that in hand each get tackled in a single seperate sprint. After each iteration (\"Sprint\") a shippable product increment is delivered and the sprint gets reviewed, which allows immediate reaction to occurring problems or shortcomings by changing requirments and adjusting the product backlog accordingly.\n\nA glaring advantage of SCRUM, by its agile nature, is its easy adaptability to changes occuring during the project. New changes like feedback or new requirements from customers or stakeholders are no exception in software development, thus being able to react to those very flexibly, due to short sprints, in a fast and efficient manner is a huge advantage compared to other models. The spiral model, while also being able to deal with changes between activities, still cannot deal with changes within an activity, making it less responsive than SCRUM.\n\nAnother advantage would be that large projects can be devided into smaller managable chunks that are tackled in different sprints. A project like our group project with many different components and functionalities, as well as different framworks can seem overwhelming, leading to some sort of an action fatigue, due to the members not knowing how to start such a huge task. Therefore breaking the backlog down in smaller sprints, according to priorization of the product owner, helps solve such issues and makes the project seem more handleable. The spiral model also breaks the project down into 9 iterations that all go through 4 different activites, however these are more or less predefined, making it not as flexible as SCRUM.\n\nA disadvantage would be that SCRUM can lead to scope creep. Due to its adaptive style of reacting and implementing to new changes, the project work load can quickly spiral out of control and exceed what was originally planned. A product owner wanting a new functionality for his system after every sprint can cause headaches for programmers as those are added to the product backlog every time, ultimately demanding more resources like time and money. Spiral models limit scope creep to an extend due to its less reactive manner.\n\nAnother disadvantage is that SCRUM can be difficult to scale. Implementing SCRUM for large projects requires precise cooperation of different departments and many team members distributed across the company, which can only be achieved through extensive training, which is diffult to understand and implement. The spiral model doesnt face this problem to the same extend as it doesnt require as much interaction between members, as it deals with less change.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623208,
      "meta": {},
      "text": "Scrum is a technology that manages and controls software and product development.   When needs and technology change rapidly in the project. Scrum adapts to changing environments, develops quickly, and delivers often. \nThe waterfall model is step-by-step, once an activity is completed there is no turning back. \n+ Feedback and changes can be adopted more quickly, allowing products to be better improved and fulfills requirements\nExample: In the sequential process model, customers only provide feedback after the project is over, which may result in major changes\nMore interactions and exchanges. Because of the daily Scrum meeting, the division and progress of tasks are clear and transparent. \n- The people involved become lazy and irresponsible. For small, well-defined projects, Scrum is less efficient than the Waterfall model. \n-> For basic tasks like Artemis assignments, forming teams, using Scrum is a waste of time. Teamwork has a bigger impact. \n-> A leader with poor management ability cannot resolve different opinions and division of tasks, then cannot proceed to the next step. Changing teams can create chaos.\n\nSpiral model and Scrum\nSimilarities:\n- iterative.\n- deal with changes from requirements, technology, market \n-Promote self-management within the team and emphasize teamwork\n-use the idea of cycles: sprints in Scum.\ndifferences:\n-In Scrum, we spend time on each activity in each sprint. Each sprint undergoes every step (requirements, analysis, design, development, test, etc.) for the sprint backlog.\n- As the development proceeds, team need less time on requirements and analysis, and more time on construction, testing, and transition. \n-Scrum has a few backlog etc. and is suited for smaller teams\n-The unified process is a formulate and burdensome process.\nFor large teams working on large projects, this is a better choice. Because in these projects, there is very little face-to-face communication. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644303,
      "meta": {},
      "text": "SCRUM is an agile project management approach, which promotes improved communication, cooperation and enables the team to cope with rapidly changing requirements with better risk management. the entire project is divided in several sprints lasting between 2-4 weeks each, the scrum team works on a pre specified  sprint backlog. After each sprint the sprint is evaluated by the team and the product owner and the potentially shippable product increment is improved in each sprint.\n\nA huge advantage is that by division into sprints and the sprint review meeting after each sprint, it can be quickly adapted to changes in the requirements or feedback of the product owner. For Instance, if the product owner wants the UI in another way, his wish can be quickly discussed and realised by the team, without much sunk time.\n\nAnother advantage of scrum it is very efficient regarding time and resources. This due to the fact, that the sprints are divided in such manner that everyone on the sprint team is able to work parallel and do not have to wait until another programmer has implemented a specific functionality. E.g the design of the UI is divided in several tasks, person 1 programs a button on page x, while person 2 implements a scrollbar on the main page.\n\na disadvantage is that it requires team member to possess to have strong communication skills, as coordination and regular meetings are crucial for the projects success, for example a highly talented coder who can't communicate properly with the team, hinders the entire project.\nMoreover, the  daily meetings  in scrum might also be a risk, as it can interrupt the flow of the individuals progress in his work. For instance a meeting, if no real progress was made and nothing new can be discussed\n\nThe Spiral model is also able to adapt to changes in the requirements as it also an iterative approach. Although it might not be as responsive as scrum, since each iteration is dedicated to a specific field, e.g testing. the spiral model also also allows for parallel working, thus it is also efficient. As the spiral model doesn't necessarily relies on daily meetings proper communication skills might not be as crucial as in the scrum model. Hence also the disadvantage of scrum regarding daily meetings does not apply as strong in the spiral model",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644518,
      "meta": {},
      "text": "By definition, Scrum is a development framework through which people can solve emerging problems in productive way.\n\nThere are 3 basic roles in classic Scrum:\n-Product owner\n-Scrum master\n-Development team\n\nThe basis of Scrum is Sprint, during which work is carried out on the product. At the end of Sprint, a new working version of the product should be received. Sprint is always limited in time.\n\nBefore the start of each Sprint, Sprint Planning is performed. Each sprint should have a goal that is a motivating factor and is achieved through the completion of tasks from the Sprint Backlog.\n\nThe purpose of Daily Scrum is to determine the status and progress of work on the Sprint.\n\nAt the end of the Sprint, Sprint Review and Sprint Retrospective are produced, the task of which is to evaluate the effectiveness (performance) of the team in the past Sprint.\n\nAdvantages:\n\nScrum is customer-focused, adaptive. Scrum gives the client the ability to make changes to the requirements at any time (but does not guarantee that these changes will be implemented). \nIn spiral model requirements can not be changed so often.\n\nScrum is quite easy to learn, saves time by eliminating non-critical activities. Scrum allows you to get a potentially working product at the end of each Sprint.\n\n\nOf course, Scrum also has important disadvantages. \nDue to its simplicity and minimalism, Scrum sets a small number of rather rigid rules. However, this conflicts with the idea of ‚Äã‚Äãbeing customer-centric in principle, because the customer doesn't care about the internal rules of the development team, especially if they restrict the customer. For example, if necessary, at the discretion of the Sprint client, the backlog can be changed, despite the obvious contradiction with the Scrum rules.\n\nScrum belongs to the Agile family, Scrum does not, for example, create a communication plan and respond to risks. Thus, making it difficult or impossible to formally (legally or administratively) counteract violations of the Scrum rules.\n\nBut in spiral model risk management is one of the main characteristics, which makes it more reliable than other models.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620826,
      "meta": {},
      "text": "Scrum is an agile framework that can deal with change effectively. The work is broken into goals which are to be completed in a specific time, this is called a sprint. In a team there are different roles, after a few sprints a potentially shippable product increment can be delivered.\n\n+\n\nScrum improves the quality of the project because the communication and also the cooperation is improved.\nFor example because there is constant feedback in scrum mistakes are less likely to happen, as the other team members would point them out.\n\nThe goals are very clearly defined through the backlog items, and therefore the stages of the project are very measurable. This makes scrum more efficient than the Spiral model. For example, one can measure the amount of tickets which the team has done in a sprint.\n\n-\nScrum works best for small teams because communication is key. For a big team, it doesn't really work well, as it's much more difficult to communicate and give feedback all the time.\n\nAs there is not an exact timeline, projects can be longer than wanted, as there is no final iteration in Scrum. Because scrum works on continuous improvement, it's never completely done. For example, when releasing an app there can be endless features in the backlog and the development could go on for a long time.\n\n\nScrum is an agile model, whilst Spiral model is iterative.\nThe iterations in scrum are much shorter, after each sprint a product increment is delivered. For the Spiral model, only after a whole iteration, prototypes are released.\nThe activities in the spiral model are applied in 9 iterations, the amount of sprints scrum needs differ and can't be defined at the beginning. The spiral model is more sequential than scrum.\nScrum is more flexible than the Spiral model because the teams are constantly adapting to changing requirements. In Scrum, the teams are continuously improving the effectiveness by reviewing the work after each sprint.",
      "score": 72.9,
      "language": "ENGLISH"
    },
    {
      "id": 5621113,
      "meta": {},
      "text": "SCRUM is a technique for project management in software engineering that is of adaptive and iterative nature. A product backlog contains deliverables for a product, which are boiled down to a smaller sprint backlog to develop as a shippable product increment within one sprint cycle of two to four weeks. After each of these sprints, the deliverables and issues are discussed in a sprint review and sprint retrospective meeting, which might lead to changes in the product backlog, and the sprint planning starts anew.\n\nAn advantage of SCRUM is a regular reality check through updated product backlogs and a change of plan after each sprint. In sequential project management, you might be finished producing a product after considerable time and expenses, while you are not in check with what the customer really wants. In the Spiral model, software requirements are an iteration in the very beginning, so this could also lead to problems if requirements change later in development.\nSCRUM is also beneficial because it aims at producing a potentially shippable product increment after each sprint. From the very beginning, you can retrieve feedback or sell a mini version of the final product to the customer. In the Spiral model, you also work with prototypes in all iterations, but these are not potentially shippable until the late code iteration. \nA disadvantage of SCRUM is that it requires daily meetings to report progress and hindrances in the core process. These can feel annoying for team members if they have nothing worth reporting or if too little is done with the input from that meeting. In Spiral, this daily requirement is not given because it does not involve any reporting mechanisms.\nSCRUM does not put an emphasis on testing. This needs to be embedded as particular action items in the backlogs or be done on the way. This can lead to problems if disregarded, with multiple fatal errors not being found until it is too late. In Spiral, unit, integration, and acceptance testing are inherent parts of the methodology. Each of these three examples are single important iterations in Sprint.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621207,
      "meta": {},
      "text": "Scrum is a framework that helps teams work together. Similar to training for big game rugby teams (the origin of the name), Scrum encourages teams to learn through experience, work on problems, organize, look back on  wins and losses, and continuously improve. Often referred to as the Agile Project Management Framework, Scrum describes a set of meetings, tools, and roles that  help teams structure and manage their work.\n\nFor example a marketing campaign for a new car. The first week, you share a glimpse of your design on social media, and use the feedback you received to improve it  in the upcoming \"sprint\" (mini project, as step by step approach to the final goal of the big project). This way has a lot of advantages, first : the team members motivation is always high as they see their progress step by step towards their goal and second : every part of the project is done by all of the team members and gets the same amount of attention as the other parts so the product is expected of high quality. \nOn the other hand, this method may have some disadvantages. The first one is that there are high chances of failure if the individuals in the group aren't commited or cooperative.\nThe second, if a team member leaves in the middle of the project, it can have a negative impact especially in small teams.\n\nScrum and spiral model have a lot of similarities, they both have test, plan , evaluation... however Scrum lacks the risk management whereas the spiral model is a risk driven software development process model.\nPlus in the spiral method it is difficult to manage time so the team is going to be under pressure of the deadlines and thus the first advantage of scrum is proven.\nIf a team member leaves in the middle of the project it is going to have a negative influence on the group in both methods.",
      "score": 45.8,
      "language": "ENGLISH"
    },
    {
      "id": 5621248,
      "meta": {},
      "text": "Scrum is a framework to build and deliver products. What makes Scrum unique in this regard is that it is an iterative process that is repeated to fine tune the design and implementation of products - a big change from earlier frameworks which were largely linear and did not allow for implementation to inform design, and changes to be made to the product design after an initial design was agreed upon. In scrum, a product backlog of all the possible product requirements is set up and solved in shorter sprints, where some backlog items are ticked off the list. Each sprint kicks off with a sprint meeting where tasks are delegated, and then involves modelling, implementation, testing. At the end, the shippable product is delivered when all backlog items have gone through this process. \n\n2 Advantages of Scrum are that it helps teams complete projects quickly and efficiently - the resources available, such as an engineer's time, are optimized. For example, an engineer would constantly be kept busy with new features to implement, even if the testing team takes longer. He or she can simply start implementing new backlog items, and so the two do not hold each other back. In the Spiral Model this would not be the case, since the 4 steps of this model have to be completed, and risks evaluated, before continuing. Another advantage of scrum is that you always have a working product, which can be improved upon. This means that there is no need to wait for the entire project to implemented before testing, for example, which reduces the risk of not having a viable product at all by a stipulated deadline. For example, if a certain feature is found to be impractical to implement and the implementation is tested and found to be too slow or too draining on resources to be used, then the problem can be addressed then and there instead of at the very end of the product development phase. Using the spiral model in this case would mean abandoning the project altogether, since a risk is found that may not be resolvable. ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621683,
      "meta": {},
      "text": "Scrum's core essence is about dealing with interruptions and frequent change. Scrum is based on sprints at the end of which the team creates a potentially shippable product increment by following a sprint backlog that is related to a product backlog. Scrum essentially encourages communication and cooperation within the team with the multiple meetings (daily scrum meetings, sprint planning meetings, sprint review meetings...).\n\nAdvantages: \n1) Scrum can deliver quick and high-quality results because at the end of each sprint we have a potentially shippable product. So for example, we can finish a whole project in one or two sprints. On the contrary, for spiral models, we have to go through the whole 9 iterations and for each iteration do the 4 activities and this would be way longer than one sprint in scrum.\n\n2) Scrum is very adaptable and flexible. It is very well adapted to projects that are prone to change because of the constant update in between sprints. After each sprint we improve the product and get closer to customer satisfaction. For example, if a client changes their mind about the requirement of the product in the middle of the project, working with the Scrum framework would be a huge plus because you can simply adjust the product backlogs and sprint backlogs to adapt to the desires of the client. On the contrary, it would be much harder for a team working with the spiral model to adapt to this kind of change as they would have to start all over again from the top of the 9 iterations.\n\n\nDisadvantages:\n1) Scrum requires extensive training since it is quite new concept and complex. It requires a well-trained and skillful team to properly implement it. For example, before implementing Scrum in the company, you would probably need to train the engineers. In contrast to that, the spiral model is way simpler as it is an iterative method with classical iterations like software requirements, product design and testing. Therefore, it would be more intuitive to learn.\n\n2) Scrum can be difficult to scale for really big projects as the level of coordination and complexity of the method grows big with the scale of the project and the number of people working on it. For example, implementing the Scrum of scrums to handle bigger projects could be quite challenging in terms of coordination of teams and workforce. When it comes to the spiral model, the large projects do not necessarily make it harder as it is quite a straightforward method and therefore is not very much influenced by the size of the project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621716,
      "meta": {},
      "text": "Scrum is a way to effectively manage an agile project. It is based on the principle of learning from past experiences and thus guaranteeing an improved project process in the future.\n\nIn contrast to the spiral model, scrum has the advantage that the lessons learned from the previous weeks are constantly evauluated and that the further course of the project can be dynamically adapted to these lessons. With the spiral model, this is only possible to a limited extent, as changes can only take place between activities. In the spiral model, it is also very difficult to adapt existing models to new project goals, since the model was designed for progress only in a linear fashion.\n\nIf, for example, you find that you have forgotten an important part of the implementation during the planning phase, with Scrum this is noticed directly in the first sprint and can then be considered in the second sprint planning meeting. The same problem in the spiral model would not not be noticed until the middle of the project and you may lose a lot of time.\n\nAnother advantage of Scrum is that after the first sprint you already have a deliverable prototype, even if it is not yet fully usable. With the spiral model, several iterations have to pass before you can actually start programming the project. Accordingly, the Scrum model allows you to see very quickly whether the project is fully planned, because you quickly become aware of potential work that is still missing.\n\nFor example, if you want to develop a website using Scrum, you can already show the customer a first iteration of the website after the first sprint. With the spiral model, this is only possible towards the end of the project.\n\nScrum also has the disadvantage that there is no predefined project timeline, as everything is planned at short notice. Accordingly, it can be difficult meet a deadline. With the spiral model, you plan the rough course of the project right at the beginning and can therefore give a realistic time estimate. \n(This description already serves as an example)\n\nSince the work in scrum is distributed directly to the direct team members, there is also automatically a very large communication effort between them. With the spiral model, this coordination effort is only needed to a minor extent, since the entire process is already pre-planned.\n\nFor example, Scrum requires daily team meetings to analyze the progress made and the problems. This is not necessary with the spiral model.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622038,
      "meta": {},
      "text": "Scrum is part of the agile software development type - this is a model that deals better with frequent change and can react to alterations in the customers or the environment needs. In scrum there's a team of developers that are working towards finishing the product backlog - a list of features. The whole process is divided in sprints, in which some of the items from the product backlog should be implemented (those are called the sprint backlog) and at the end of each sprint a sprint review meeting is held, which can lead to changes in the product backlog.\n\nOne of the advantages of scrum is the ability to handle change well. This doesn't work that well by the spiral model, where change can only be dealt with between activities. An example how scrum can deal with change is for example when a new technology comes out on the market and the application that the team is building needs to be able to work with that new technology - by scrum this can be added as a new task in the product backlog on the next team meeting. \nAnother good thing about scrum is that by the end of every sprint the team should present a shippable product. This means that the most important requirements are addressed first and the product is low-risk, because when it needs to be market ready that means that the team should handle errors by the end of each sprint. An example would be an airline application - the review page and the help page of the application maybe still won't be implemented, but there would be a fully functioning booking page. By the spiral model that's not a requirement, so it also doesn't have the advantages that come with it.\n\nA disadvantage for some by scrum can be the daily scrum meetings. They are not held by every day in the case of the spiral model. Those daily meetings are very useful by scrum, but for some they may seem too demanding.\nAnother downside of scrum are the small teams of very experienced developers, that work on different things. In this case if someone of the team has to leave, a very valuable part is being lost. For example if a developer finds a better job offer or has to move for some reason and decides to leave, they would be very hard to replace. By the spiral model that's not exactly the case, because by the spiral model by each spiral everybody is working on the same thing, so they're not that irreplaceable.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622680,
      "meta": {},
      "text": "Core essence SCRUM: \nScrum is a technique that designed to deal with interruptions and changes in software development. \nTo react quickly to changes and problems/ reduce risk SCRUM focuses on communication and transparency to develop software that meets the customers expectations and needs, but also on communication with team in daily scrum meetings to see if any problems incurred.\nprinciples in SCRUM: transparency, inspection, adaptation.\n\nAdvantages:\n- adaptability to changes -> while developing customer could realise some important functionality has to be added. In Scrum easily added to product backlog and implemented in future Sprints, while its more difficult to change something in linear and iterative methods.\n\n- improved risk management -> a delivered product increment is rejected by the product owner, because its not like customer imagined/fails the requirements the customer wants it to have. Scrum makes it easy and fast to see if \"right software\" si developed because of product increments and communication of the Scrum team. In other methods development of \"wrong software\" discovered much or only when development finished.\n\nDisadvantages:\n- need of a real team -> team member has questions and a problems, but doesn't communciate it. SCRUM fails if no real communication happens and the team doesn't work as a team. SCRUM is built on communication and transparency, if someone doesn't communicate their thoughts the software development will be slowed down and ultimately fail.\n\n- hard to scale -> large projects gain much more organisational complexity because of many SCRUM teams. SCRUM is designed to work fo teams of max. 9 people. In big projects many SCRUM developers  involved so there are many teams which need to interact in additional meetings.\n\nComparison:\n- SCRUM allows changes within an activity while the Spiral model only allows changes between activities -> SCRUM better for frequent changes.\n- SCRUM has better risk management because of communication and product increments, while spiral model also identifies risks and tries to solve them but no regular meetings with the product owner (point: \"wrong software\").\n- both disadvantages in SCRUM are handled better in spiral model because less communication over many teams involved unlike SCRUM that lives trough communication. ",
      "score": 93.8,
      "language": "ENGLISH"
    },
    {
      "id": 5623212,
      "meta": {},
      "text": "SCRUM is a project management methodology that is based on iterative and incremental development. The word \"SCRUM\" is derived from the rugby scrum, where players are tightly interlinked and work together to move the ball down the field. It emphasizes iterative development, team collaboration, and constant feedback and is designed to help teams work together more effectively on complex projects. The core of SCRUM is a set of values, principles, and practices that aim to improve collaboration, transparency, and flexibility.\nSCRUM has a lot of advantages, starting off with transparency. All members of the team are deeply included in the project and have a clear understanding of the project's goals, progress, and status.\nFlexibility also plays an important role. Quick adaption to changes and new requirements, is a key factor of SCRUM. Last but not least SCRUM encourages team members to cooperate with one another, leading to a strong teamwork and bond between members. As everything SCRUM also has its own disadvantages. It can be challenging for a team, which has never worked with SCRUM to adapt to the new way of working. SCRUM also requires a lot of discipline and commitment from the members. Every member has to work hard to fulfill the requirements. Furthermore since SCRUM is designed is such a way that, meeting are essential it can be hard to be implemented in large teams with a lot of people. \n\nThe Spiral model is a software development process that is similar to the SCRUM. Both methods are iterative and incremental and both emphasize customer collaboration and the delivery of working software. However, there are change is many ways. The way these methods approach risk varies from one another. SCRUM is designed to help teams manage risk by working in short sprints. This means that teams can quickly identify and address risks as they arise. The Spiral model, on the other hand, is designed to help teams manage risk by planning for it upfront. This means that teams spend more time upfront planning for risks, but they are less likely to encounter unanticipated risks during the project.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5632806,
      "meta": {},
      "text": "Scrum\nYou have a backlog that is spread over an iterative series of sprints, which after each the team needs to deliver a potentially shippable product. There short daily scrum meetings where the daily plans are discussed as well as post sprint reviews.\n\nAdvantage 1:\nThe developers are in charge of organizing their work, allowing them to quickly adapt to changes\nExample 1: The previously implemented Menu class turns out to not be compatible with some new features that need to be added. The team can decide to reimplement the Menu class without having to contact the product owner (but still communicate this later on)\nAdvantage 2:\nScrum allows individuals to shine by innovating\nExample 2:\nThe implementation is usually left to the team, allowing team members to come up with their own solution, e.g. use of external libraries and resources, that may be unknown to the product owner. \n\nDisadvantage 1:\nDevelopment resources can vary a lot.\nExample 1: \nIf the GUI is later found to have problems updating server resources, the team may need a lot of extra time going back to fix it. In e.g. waterfall this would simply be ignored and moved on.\nDisadvantage 2:\nRequiring a potentially shippable product over a fixed amount of time can be impractical if development of different components can vary a lot\nExample 2:\nIf sprints take 2 weeks and a smaller chip can be fully completed in 1 week, this may make other teams unable to proceed as soon as the chip is finished.\n\nComparison:\nControl of stakeholders vs. Control of scrum teams\nLow risk of spiral vs. Innovation of scrum teams\nHigher resource predictability of spiral vs. Flexible backlog of scrum\nPredicted development time in spiral vs. Fixed sprint time in scrum but dynamic amount of sprints",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5645043,
      "meta": {},
      "text": "Spiral model is dividing the whole project in 3-4 phases. So it is planned from the beginning and is not flexible as Scrum. So if you want to change something during the process you can not do it. The advantages of Scrum is flexibility. You are planning only the next sprint, so you can add some changes in your plan if it need. The second advantage is that you can improve the next sprint using the sprint backlog from the last sprint.  ",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 5619818,
      "meta": {},
      "text": "The core essence of scrum is its iterative and incremental approach to product development. In scrum, development is divided into sprints, which are typically 2-4 weeks long. During each sprint, a team of developers works to complete a set of tasks that have been assigned to them. At the end of each sprint, the team reviews their work and decides what to do next.\n\nScrum has two main advantages over the spiral model:\n\nFirst, scrum is flexible in that it allows teams to adapt their plans as they go. If a team realizes that they will not be able to complete all of the tasks they had planned for a sprint, they can simply remove some of the tasks from the sprint. This is not possible with the spiral model, which requires that all tasks for a sprint be completed before the team can move on to the next sprint.\n\nSecond, scrum is also able to handle changes well. If a customer wants a new feature added to the product, the team can simply add it to the sprint backlog and work on it during the next sprint. With the spiral model, adding a new feature would require the team to go back and redo some of the work they had already completed.\n\nThere are also two disadvantages to using scrum:\n\nFirst, scrum does not produce a lot of documentation, which can make it difficult to track the progress of the project. The spiral model, on the other hand, produces a lot of documentation, which can be useful for keeping track of the project but can also be overwhelming.\n\nSecond, scrum also does not have formal reviews, which means that there is no way to ensure that the product meets the customer's requirements. The spiral model has formal reviews at each stage of the project, which helps to ensure that the product meets the customer's requirements.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620894,
      "meta": {},
      "text": "SCRUM is a framework of an agile process, in which a team collaborates to deliver a potentially shippable product increment in the end. It consists of different roles (product owner, scrum master, scrum team) and contains different elements (product and sprint backlog, sprint planning meeting, sprint review and retrospective) which form an iterative process. \n\nAdvantages:\nSCRUM enables teams to split up big projects into manageable pieces to ensure quick and efficient delivery of product increments. Instead of building a complete software such as a video game at once and testing it in the end, it's divided up in pieces e.g. functions such as steering cars, changing the car type or playing sounds and one function after the other is implemented and tested. The iterations in the spiral model are not divided in pieces but build on each other sequentially e.g. product design on software requirements or uni tests on code. \n\nSCRUM ensures incorporating feedback from customers/stakeholders through its' iterative components (sprint review) and is flexible and adaptable to changing requirements, so decreases risk. When the gaming software is build and the customer decides that instead of changing the car type he just wants the user to change the car color, the changing requirement can easily be implemented. The spiral model is also iterative but the customer/stakeholder is not necessarily involved and requirement changes rarely occur.\n\nDisadvantages:\nSCRUM is hard to manage in large teams, as the daily meetings are only short and team collaboration gets more difficult with an increasing size. When a team builds software, individual team members are responsible for a task, so the team might loose its overview if it's too big. In the spiral model the team makes decisions and work together\n\nTo successfully use SCRUM, at least one experienced/trained member is necessary to implement SCRUM which might cause challenges for traditional companies. Traditional companies like BMW might lack in experienced employees and their hierarchical structure are constraining agile working. This is also the case in the spiral model and the risk analysis might take lots of time.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622288,
      "meta": {},
      "text": "Scrum is a technique to manage software and product development when requirements and technologies may be rapidly changing during the project. \n\nAdvantages\n1- Feedback and change requests can be adopted faster which leads to a software product that fulfills its requirements in a better way.\nExample in EIST/Bumpers: Artemis and the tutors provide feedback after each sprint\nrather than at the end of the semester.\n\n2-There is a potentially shippable product increment after each sprint which includes already fully implemented functionality and could be delivered to the end-users.\nExample: in Bumpers, after every sprint, there is a new executable version of the game\n\n\nDisadvantages\n1-If a project does not yet have a clear definition, the product backlog is difficult to plan.\nExample Problem Statement: ‚ÄúDevelop a system that assists developers with continuous integration‚Äù.  Questions to clear would be: What kind of system? What are the requirements? What kind of assistance do developers need? Etc.\n\n2-The customer tends to get lazy\n‚Ä¢ Example: since changes can always be incorporated, the customer may not see the need to specify the requirements at the beginning of the project as detailed as necessary\n\n\nDifferencies:\nThe main principle of the Spiral model is risk handling compared to SCRUM, which is an incremental delivery process where each incremental delivered part is developed through an iteration after each time box.\nFurthermore, the Spiral model is suitable for those projects that are prone to various kinds of risks that are difficult to anticipate at the beginning of the project, whereas SCRUN is suitable for large projects that are easy to divide into small parts that can be easily developed incrementally over each iteration.\n\nSimilarities: \nBoth have test, plan, and evaluation phases.\nThe Spiral Model is iterative using quadrants, whereas SCRUM uses sprints. For example, in the objective setting (I quadrant), the specific goals and requirements for the respective phase of the software development process are identified and defined. This would correspond to the SCRUM spints in which goals and requirements for the product are defined.\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622331,
      "meta": {},
      "text": "The goal of the SCRUM procedure is to break down the project into smaller goals that can be accomplished in timed iterations - called sprints. On a daily basis, the SCRUM team meets up shortly and evaluates their progress. After a sprint is finished, the team holds two meetings: one for the stakeholders and one retrospective team-internal, both creating a feedback loop to further improve the workflow and quality of the software.\n\nAdvantages:\n1.) Because of the short intervals between meetings (sprints + daily evaluation) it is easier to implement changes. For example, after completing a sprint one of the stakeholders introduces an update to the project (e.g. new data field on the login page), the team can plan to add the feature instantly in the retrospective meeting.\nWith the Spiral Model, this point barely differs. It's also structured to be customized on the get-go (and consequently enabling new requirements to be added).\n2.) In general, SCRUM is very cost-efficient. For example, no need for any overhead management costs - thus returning a cheaper (but not less qualitative) result.\nOn the other hand, a Spiral Model requires lots of budgets to function properly due to various structural necessities like management, fixed documentation control, etc.\n\nDisadvantages:\n1.) For a larger team, the SCRUM framework is not ideal due to organizational issues. For example, the daily meeting is difficult to hold with a large number of team members. Communicating efficiently within a bigger group yields lots of new issues and thus may limit the positive effects of a SCRUM (i.e. new creative and efficient ideas you'd usually gain by sharing your concepts in a \"smaller\" group).\nThe direct opposite applies to the Spiral Model: It's generally favored for macro-scale and expensive projects. \n2.) The overall team bonding might be a downfall as well: For one, the resignation/leave of one team members affects the whole project and SCRUM structure immensely, thus reducing efficiency. Another point is the danger of mental issues (e.g. peer pressure to perform well due to the \"proximity\" of the team) and therefore poisoning the team's morale.\nThe Spiral Model lifts that peer pressure due to the bigger size (and less meetings - thus less opportunity to compare each other's \"positive sides\") of the team.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644867,
      "meta": {},
      "text": "Scrum ist ein Verfahren, bei dem das Projekt in kleine - in sich geschlossene - Teile aufteilt. Jedes dieser Teile wird innerhalb eines Sprints bearbeitet und abgeschlossen, in einem Sprint gibt es Daily Meeting bei welchen man das geschafft des letzten Tages kurz revue passieren l√§sst. Am Ende eines Sprints erh√§lt man ein Programm, welches ausf√ºhrbar und lieferbar ist.\n\nSCRUM pros/cons\npros:\t\t\n-Anpassungsf√§hig an √Ñnderungen: Da bei Scrum immer nur einzelne Teile pro Sprint bearbeitet werden, kann bei einer Ver√§nderung der Anforderungen sich nicht zu viel √§ndern. Ebenso erh√§lt man nach jedem Sprint ein Produkt und wenn dort etwas nicht passt (so wie es sich der Kunde vorgestellt hat) dann kann man das schnell und einfach √§ndern. \n\n-Jeder wei√ü, wo man gerade im Projekt steht: Durch die t√§glichen Meetings wei√ü jedes Teammitglied, was die anderen im Team gerade machen und somit hat man einen besseren √úberblick.\n\ncons:\t\t\n-schleichende Erweiterung der Anforderungen:  Da es kein Enddatum unter Scrum gibt kann es immer wieder passieren, dass immer neue Anforderungen zum Projekt hinzukommen und man somit nie zu einem Ende kommt.\n\n-Scrum mit gro√üen Teams: Scrum ist darauf Aufgebaut in kleinen Teams zu funktionieren, hierbei versucht man das die Kommunikation hoch bleibt, somit immer jeder wei√ü was gerade gemacht wird. Bei gro√üen Teams ist es schwer, dass alle Teammitglieder immer up-to-date sind.  \n\nSprial Model\nIm gegensatz zu Scrum hat das Sprial Model keine Probleme mit einer schleichenden Erweiterung der Anforderungen, da ein Enddatum klar definiert ist.\n\nDie Anpassungsf√§higkeit im Sprial Model ist nicht so stark wie bei Scrum, obwohl es ein iterativer Ansatz ist, sind die einzelnen Iterationen gr√∂√üer, ergo wird mehr bearbeitet und eine √Ñnderung kann die komplette letzte Iteration zunichtemachen.\n\nDas Spiral Model bew√§hrt sich mehr, wenn das Projekt gr√∂√üer ist/Teams gr√∂√üer sind.\n\nDie Teammitglieder im Sprial Model haben nicht so einen Durchblick wie bei Scrum, da die Teams gr√∂√üer sind.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5623027,
      "meta": {},
      "text": "SCRUM refers to an agile project management method, where you are working several sprints. All tasks that have to be done are stored in the backlog and for each sprint, a subset of the backlog is made into the sprint backlog, which is then finished during the sprint, most commonly during a duration of two weeks. There are sprint review meetings and dailies, and a scrum master who is responsible for the implementation of scrum.\n\nAn advantage of SCRUM is its agility, as you can easily respond to changed conditions in the project.\ne.G. You can change the priority and content of the tasks in the backlog. This is not really the case in the spiral model, as it \n\nAnother advantage of SCRUM is that you always have a working subproduct, that is not yet final but presentable.\ne.G. when you build a vehicle you start with a less functional vehicle that is expanded upon, but you don't start with just a steering wheel that is essentially useless (a little abstract example, I know, I hope the point still comes across), which is how it would most likely be in the spiral model.\n\nA disadvantage of Scrum are the many meetings that can start to feel redundant. E.g. if there is little progress, a daily meeting can be frustrating for the team members. In the spiral model, this is not the case\n\nAlso a disadvantage of SCRUM is that there is no prototyping and risk management phase, which is both covered in the spiral model. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644658,
      "meta": {},
      "text": "Scrum is a technique that assists teams to work collaboratively on software/product development, in a productive manner, it consits of roles & meetings & provides tools that help teams in charge of complex software development projects with quickly alternating requirements. Scrum encourages teams to structure & manage their workload & reflect on positive experiences & negative experiences, with goal of continious improvement. The communication/\"groupwork\" aspect of Scrum is key, since it plays major part in enhancing risk-management.\n\nAdvantages:\n-Scrum is adapdable & flexible. Advantage, because in software engineering, requirements may change during development process.\nExample: The product owner decides after second sprint, that he wants another fuctionality \"in\" his software. Just add requirement to ProductBacklog and start next Sprint.\n\n-Scrum leads to higher quality products --> (advantage) higher customer satisfaction.\nExample: Scrum works best with small teams --> leads to everyone taking responsibilty(in big groups one individual might perish) & working to the best of their abilities --> high-quality end result --> happy customer\n\nDisadvantages:\n-Scrum is quite complex at first & therefore requires the team members to learn the process firstly. (costs time & money to learn bevore even applying it otherwise not efficient)\nExample: A team, that never used scrum, uses it on first project. --> Unproductive sprint retrospective meetings --> time wasted & no adjustment/improvement in next sprint --> teammembers loose interest in scrum methology\n\n-Scrum doesn't offer a hint of the project complying with its deadline. Customer wants to know, when software is ready, otherwise (disadvantage) unhappy customer.\nExample: You need more sprints then expected, because one task is more complicated then expected --> deadline postponed unexpectedly\n\nComparison:\n\nSpiral model (one time planning) has defined iterations (9), with defined activities (4).\nYou plan next iteration at the end of iteration, but don't adjust the activities (no real \"adjustment\").\n\nScrum methology (empirical) has no defined  iterations (could be 1 or 1000 \"sprints\") & what to do in sprint is discussed in sprint planning meeting\nReview plan every day during iteration (daily sprint) & adjust if needed\nAlso review plan for whole iteration after iteration --> find improvement ideas --> plan next iteration better\nthen previous \n--> continuosly review and adjust",
      "score": 62.5,
      "language": "ENGLISH"
    },
    {
      "id": 5620057,
      "meta": {},
      "text": "SCRUM is basically a way to deal with change while developing software. It helps regarding changes, where code is aligned in parallel. Therefore the development sets SCRUM meeting to sort out different requirements and adapt the program based on the customers demands. I would describe it with the words sometimes one step back leads you two steps forwards. \n\nThe spiral model on the other hand has a different structure which includes iterating through 4 major activities. In our team project we realised that quiet often we need to remodel parts of our finished work to keep a consistency regarding all changes in all models and the code. We had to change the class diagram and other UML diagrams. Therefore the scrum model is more complex but also allows changes while sorting out parallel code. The spiral model is iterating over and over the whole system and allows changes by identifying risks and resolving them through testing to move further down in the software lifecycle. As we have finished the testing of our project we still wanted to implement new overlays and introduce a different options and therefore the srum model is easier to use since big changes often cohere with almost all activities even though the developing team might have already reached one of the last steps in the software lifecycle spiral model. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620185,
      "meta": {},
      "text": "SCRUM:\nSCRUM is an agile ",
      "score": 0,
      "language": null
    },
    {
      "id": 5622115,
      "meta": {},
      "text": "The principles of SCRUM: split the tasks into sprints, use backlog, hold daily meetings as a team, and most importantly regularly communicate with the client. Once the team has committed to a sprint backlog, the work begins, it includes daily short meetings, where the members discuss their progress. At the end of the sprint, the team presents work to the client and gathers feedback, then starts working on future sprints accordingly.\n\n+ every member of the team knows each other's successes and to-do's, thanks to daily meetings. Not present in Spiral Model.\n+ the customer sees the progress and actively participates in the project, due to constant communication. Not present in Spiral Model.\n\n- very challenging to apply in the case of large teams and systems, since everyone has to be updated. Not the case in Spiral Model.\n- communication with busy customers can slow down the work. In Spiral Model, there is minimal communication with the client, so it does not affect the time.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622192,
      "meta": {},
      "text": "SCRUM is a method of agile software development teams to implement items specified by the product owner in the product backlog in a time span of 2-4 weeks (sprint). The process starts with a planning meeting, is accompanied by short daily meetings (daily SCRUM) and the accomplished results are evaluated in a review meeting, which can be supplemented by a retrospective meeting. Successfully implemented items are packaged for release, everything else goes back into the backlog and the next sprint starts.\n\nOne main advantage of SCRUM is that you in the beginning don't already have to know the final specification of the system you are trying to build and that you can incrementally change it to custom fit it to your customer's requirements and your abilities. When we started to build the reservation system, we didn't know how we would be able to implement the calendar but that wasn't an issue as we could just think about it in one of the next iterations. The spiral model on the other hand isn't agile and you have to plan out many spirals from the beginning. It needs big, upfront design. \n\nAnother advantage of SCRUM is that you implement functionality as fast and as efficiently as possible. We as a team were able to finish the whole sprint backlog in only half the sprint time and could already continue with the next backlog items. The spiral model is also very efficient in this regard, as it is iterative and functionality is implemented in a systematic pre-planned way.\n\nIn comparison to the spiral model SCRUM is missing risk management compared to the spiral model. In our team we also choose the easiest tasks first and are now struggling to meet our deadlines, which brings me to disadvantage 2 of SCRUM: It can be hard to set and meet deadlines because more often than not new and unconsidered challenges are popping up and hindering the development process. In spiral you start with the highest risk item so it is less likely to breach deadlines in the end.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644734,
      "meta": {},
      "text": "SCRUM is a project development technique that can deal with interruptions. Better communication and cooperation, as well as the delivery of product increments make it possible to deal with rapidly changing requirements, which are common in software development.\nOne of the main advantages of SCRUM is the ability to easily cope with changes and fix mistakes due to continuous sprints. No matter how far along the project is, if there is negative feedback e.g. the throughput time is to high, this can simply be added to the backlog and improved in the next cycle. Compared to the flexibility of SCRUM, it is very important in the spiral model to strictly adhere to the protocols, although requirements can be changed at later phases. \nWhereas in the spiral model, feedback from the users is only received at the end, SCRUM incorporates feedback in every cycle. Any changes required by the client or end user, e.g. reducing the number of buttons on the user interface, can therefore be implemented immediately.\nHowever, SCRUM does not have a definite end-date since it works in endless cycles. This makes it very difficult to estimate the duration and cost of a project and may lead to the project being drawn out. Therefore SCRUM might not be the best choice if for example a project has a tight deadline that cannot be extended. On the other hand, the spiral model has nine fixed iterations which makes it comparatively easy to estimate the duration and cost of a project.\nAdditionally, SCRUM requires small teams to ensure the best communication. When working on large scale projects, it becomes difficult to coordinate and share information. For example, if 1000 people are working on a software project, they would have to be split in at least 100 teams, which is basically impossible to manage, even when using scum of scrums. The spiral model on the other hand works well with large scale projects.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619596,
      "meta": {},
      "text": "Scrum is an approach to make program development flexible and adaptable as to deal with constant external changes. Based on the requirements, tasks are arranged to be completed by a self-organising team during subsequent project iterations.\n\nScrum works well in a project with many (sudden) changes. Any additional requirements can be seamlessly integrated as to-do tasks in following sprints. Scrum tasks from all development phases may be carried out at every sprint, whereas the spiral model only considers tasks which belong to the appropriate phase.\n\nConsider a software team who develops a program to match numbers to each customer in a restaurant. The client at some point decides to open subsidies in China, where the number '4' should be avoided for cultural reasons. The development team then includes the task to replace the number '4' in their next sprint.\n\nAn advantage of scrum is that the team manages itself, as it improves flexibility, freedom of decision making and motivation.Daily meetings ensure that there is a horizontal communication flow between the team members. In the spiral model, there is usually a hierarchy such that communication flow is predominantly vertical (between the boss and the developer).  This overall leads to poorer motivation and performance.\n\nFor example, consider a typical startup with a few (say 5) people. As power dynamics between people is small, each person has great freedom to organise themselves effectively. A typical employee at a big software firm may not be as efficient as they realise that they have very little say in all matters.\n\nScrum assumes all individuals are always committed and cooperative. In the real world, this is not always the case. To produce a coherent shippable product increment, all team members must communicate all the time. \n\nFor example, in my EIST project, team members were dropping out very early and were not communicating, which put much pressure on the others.\n    \nThe framework can be successful only with experienced team members. Psychologically speaking, the power of the supervisors is transferred to the developers. Developers may struggle with a responsibility to organise themselves.\n\nThe developers for instance must decide which features are critical, subdivide these tasks among themselves, manage their time, and keep track of other's progress. All these organisational tasks may be overwhelming.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620180,
      "meta": {},
      "text": "Scrum is an agile framework that describes how teams can work together. It is about a set of meetings, tools, and roles that work in concert to help teams structure and manage their work.  In SCRUM you divide the team into different positions. SCRUM master, product owner, and Scrum team members. They work within sprints, in which the sprint backlog is implemented. Before it will be considered which work items need to be done in which sprint ( \"Sprint planning\"). After each sprint, in the sprint review meeting, the team decides which work items are still pending. Those will be dealt with within the next sprint.\n\nAn advantage of SCRUM is the division of large projects into smaller pieces (sprints). For example, implementing a large SAP system requires normally more than three years, but using the SCRUM framework with sprint, will last much shorter.\nAn advantage of SCRUM is that it builds on agile principles, which means the project is very flexible regarding changing business needs of the client. For example, if the client didn't like the interface changes after a sprint he can annotate that directly and not only then when the SAP system is finished and many other functions build on this \"wrong\" interface.\nA disadvantage is, that some failures can be only detected at the end when the product is finished. For example, you can only see if some parts of the SAP system fit together after the whole system is implemented. The not fixed end date could be also a disadvantage. For example, if the client needs the finalized SAP system until a specific date when the firm will be released.\n\nThe spiral and the scrum framework do have not many differences. The spiral model is also about dividing the project into smaller parts and reviewing them afterward. In comparison to the SCRUM framework, the sprint model offers a better assessment of an end date, which is probably more suitable for a project with a fixed deadline. The spiral model includes also a testing phase at the end, so the finalized product can be tested before it will be implemented into the customer environment.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620197,
      "meta": {},
      "text": "Scrum is a framework that allows for an iteration of inspection and progress for team collaboration and customer satisfaction in chaotic environments. At the end of each iteration, the team discusses their progress until now, receives feedback from their product manager, and makes the necessary changes to reach their objectives. \n\nThere are both inherent advantages and disadvantages to Scrum. Advantages are, *Flexibility and Adaptively*. Scrum is suitable for uncertain environments, where it's hard to define requirements and solutions in the planning phase. The scrum team can amend or remove things each sprint. E.g \"In the middle of a project a new software is released that better solves the problem, the scrum team switches to it.\" Which is a stark difference from a serial model which has rigid requirements and no option for change.  The second advantage is *Time to Market*, the scrum model results in faster product delivery, and thus an early intro into the market. It's possible because of scrums' short time to startup, projects usually take days or months and a working product can be delivered without completing the project. E.g \"A Game startup can quickly get started, and release a working green-lit version of their project early on, to get extra funding and more feedback.\" The spiral model has a high amount of risk analysis and is planned for months to years. \n\nDisadvantages are, *‚ÄåNot Appropriate for Large Projects*, Scrum usually works best for small to medium teams of 3-10 people. Anything larger requires extensive training and precise coordination. E.g \"A company adapts scrum for one department and wants to scale it, but the same benefits don't apply.\" The Spiral model can take advantage of its deep analysis and handle large projects. The last disadvantage is *No Project Deadline\", scrum has no set project deadline and no clear structure. This can be a big problem for stakeholders that need progress. E.g \"A company starts using Scrum, but the projects focus on small increments, which delays the overall release.\" The Spiral model has clear phases from start to end.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620949,
      "meta": {},
      "text": "Definition:\nScrum is an agile project management framework that provides a structure for fast-paced adaptive teams to  execute work. This framework helps deliver value to customers, collaborate often and effectively, and solve complex development issues. It‚Äôs founded on empiricism (because it‚Äôs based on experience), and lean thinking (because it sticks to the essentials).\n\nAdvantages of Scrum:\n1. Large projects are divided into easily manageable sprints. For example, when developing a reservation system for a movie theater, the programming team can distribute their progress into a series of sprints, and in each review they get to show the business owner what they have done so far. This way, they don‚Äôt have to wait until the end of the entire project to realize that the business owner wanted additional or different features (e.g. food or merchandise purchase option). It‚Äôs an advantage because it helps save time and money.\n2. Scrum adopts feedback from customers and stakeholders, and at the same time allows to exhibit each member‚Äôs work during the sprint (and avoid any members not doing their job). In the same example, through daily meetings and reviews, each team member gets to showcase their progress, enabling feedback to make the necessary changes on the next sprint and stay aligned on the requirements. It‚Äôs an advantage because it helps save time and money, and ensures productivity within the team.\n\nDisadvantages of Scrum:\n1. Scrum often leads to scope creep, due to the lack of a definite end-date. Indeed, in the mentioned example, if the progress is not organized in a defined number of sprints, no one will make sure the project is coming to an end, and it might extend beyond limits. Plus, team members might relax and not feel the pressure to deliver value on time. It‚Äôs a disadvantage because it might make the organization waste resources on unnecessarily longer projects.\n2. Adopting the Scrum framework in large teams, or having a team where not every member has expertise in their field can be an obstacle during project development. In the above example, if the team has members with no knowledge of programming, or if there are too many people on the team it might be complicated to stay aligned and take advantage of everyone‚Äôs skills in the process. It‚Äôs a disadvantage because it might generate low productivity (unused workers) and spending more resources on hiring additional experts or training.\n\nComparison to Spiral Model:\nWhile Scrum focuses on agile delivery of value and constantly considers customer feedback, it disregards project risk management, which is a major consideration in the Spiral Model. Plus, although Scrum divides the project into manageable sprints, it does not define a minimum or maximum number of sprints, making it possible that it takes too long to complete. Therefore, some experts claim the Spiral Model to be more suitable for long risky projects.\nFinally, the Spiral Model can deal with changes between activities, but does not allow change within an activity, while Scrum is all about flexibility and adaptation during project execution. Therefore, we can say there are many advantages and disadvantages for each methodology; some teams decide to combine techniques to obtain better results. It all depends on the project scope and user requirements.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621493,
      "meta": {},
      "text": "Scrum is composed of regular sprints. For each sprint, a sprint backlog is defined from the product backlog and the development team focuses on it. They also have a ~monthly scrum meeting where a product increment can be shipped at the end of it.\nAn advantage is that if changes in the requirements happen during the development, the Scrum method can adapt. This is due to the fact that the software is implemented vertically : At the end of each sprint, there is a new preliminary version of the final product. The sprint backlog is also sorted by priority which makes the software have its most important aspects implemented first.\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622055,
      "meta": {},
      "text": "Scrum is a lightweight framework that helps people, teams and organizations generate value through adaptive solutions for complex problems.  Scrum requires a Scrum Master to foster an environment where:\na Product Owner orders the work for a complex problem into a Product Backlog, the Scrum Team turns a selection of the work into an increment of value during a Sprint, the Scrum Team and its stakeholders inspect the results and adjust for the next Sprint, and then the whole process is repeated again. In this process a short daily meeting happens everyday, so that the team has a plan on what to work on, and then once a week a big meeting takes place to evaluate the work that has been done. One advantage of scrum is that big projects are divided into easily manageable sprints, therefore when developing a airline server a team can work on the time table of the flights, another can develop the framework of the place that is chosen to be visited, that could offer services such as (renting a car, booking a hotel etc.), while on the spiral model everybody works on the same task, which sometimes can lead on waste of time.  Another advantage of scrum is that the  team gets clear visibility through scrum meetings, while in spiral at the beginning of each stage, a plan is made of what everybody has to work on. When implementing the framework of the airline company, the every developer has a special task which is going to contribute at the final product, and if new requirements are added or deleted the information is made available during the meetings. A disadvantage of scrum is that the framework can be successful only with experienced team members, because if the developers don't manage to complete their task, that would slow down the whole team. Because the task are divided that means, that some developer's task might be necessary for another developer's task, while in spiral model people can help each other while implementing the task.  Another disadvantage of scrum is that  daily meetings sometimes frustrate team members, because it might seem like a waste of time, when the task allocated are to big to be implemented in just one day, or the requirements are changed from a day to another, and in the spiral model this meetings don't take place.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5624596,
      "meta": {},
      "text": "Scrum is a software development technique, part of the Agile methodology, which deals with interruptions. It divides the development of a project into multiple phases and repeats a cycle of planning, executing and evaluating, called sprints, until the end of the project. The team involved is divided into smaller groups dealing with smaller parts of the project and at the end of each development cycle, the progress is constantly merged.\nThe main advantages of Scrum are its adaptability and creativity.\nFor example, a team is developing a website for a small business to sell its products. The client then decides that the website should display the products in sale on the homepage. Even though that part of the website is already built, the team can still make this change in the following sprints.\nScrum also favours creative thinking. When a team has to develop an educative game for a client with the requirements constantly changing, the developers themselves are required to think in a new and creative way. Having scheduled meetings and moments to interact with each other to catch up and give feedback will result in more creativity.\nIf we compare this to the Spiral model, which is still similar to Scrum in its cyclic structure, the first one still has some kind of rigid structures and these advantages are not that visible.\nDisadvantages of Scrum are the need to use small teams and the fact that it requires experienced personnel. \nIf a team working on a small part of the product is composed of more than 10 developers, the recurring meetings will slow down the process and the benefits of constant feedback will not be visible because there are more moving parts.\nIf a company always used the waterfall model for developing projects and always hired developers familiar with working in that way, switching to Scrum will start to show its benefits after some time.\nThe Spiral model also takes some time to get used to it but is not radically different from other development models and teams do not have a predefined size to maximize efficiency",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644514,
      "meta": {},
      "text": "The core essence of Scrum:\nScrum is a project management tool, which helps teams develop software in a sufficient way. You work in sprints which usually is a time between 2 and 4 weeks. During this time you only work on before-defined tasks. Each day you talk about challenges and at the end of the sprint, you reflect on the last spring and plan the new spring. The idea is that at the end of each sprint you have a somewhat shippable product.\n\nadvantages / disadvantages\n1. advantage: At the end of each sprint you have a shippable product. For example, an app in which is implemented further each sprint but the most basic functions always work.\n2. advantage: Large projects are divided into smaller easily manageable sprints. For example, a large booking app can be divided into small sprints like frontend or database.\n1. disadvantage: It requires extensive training. Because scrum isn't an easy process.\n2. disadvantage: It is not related to the project's deadline. Because you work in sprints detached from the deadline.\n\nAdvantages and disadvantages compared to the spiral model:\n In the spiral model, you work in cycles in which in a linear timeline different things are done like developing and then testing. In scrum, all of this happens during each sprint. This makes the process a lot more efficient.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 5620438,
      "meta": {},
      "text": "Scrum ist ein ein \"software development lifecycle model\", das den nicht linearen Prozess der Softwareentwicklung strukturiert. Im Gegensatz zu inkrementellen (z.B. Wasserfall-Modell) und iterativen (z.B. Spiral-Modell) Ans√§tzen steht hier die Anpassung an sich st√§ndig √§ndernde Umst√§nde und Anforderungen im Mittelpunkt. \n\nZu Beginn wird aus dem problem statement ein product backlog mit allen Anforderungen erstellt. Dieses kann sich w√§hrend des Projektes st√§ndig anpassen lassen und so auf √Ñnderungen reagiert werden. \nIm Mittelpunkt der Entwicklung stehen dann die Sprints. Diese dauern meist einige Wochen und beginnen mit einem Sprint planning meeting, in dem aus dem Product backlog einige Anforderungen zu einem fixen sprint backlog zusammengefasst werden. Diese werden dann bis zum Ende des Sprint abgearbeitet, sodass ein product increment, also ein potentiell f√ºr den Kunden nutzbares Produkt mit eingeschr√§nkter Funktionalit√§t entsteht. In Daily Scrum meetings, einem Sprint review meeting mit dem product owner und Sprint retrospective meetings wird fortlaufend auf Feedback reagiert.\n\nEin Hauptvorteil von Scrum ist die schnelle Anpassungsf√§higkeit, z.B. an pl√∂tzlich √ºberfl√ºssige Requirements, wie eine Favoritenfunktion in einer Musikapp. So kann im Gegensatz zum Spiral Modell nicht nur auf √Ñnderungen zwischen den Activities reagiert werden, sondern in unterschiedlichen Meetings auch schon davor Anpassungen vorgenommen werden. Auch lassen sich durch st√§ndige Kommunikation, sowohl innerhalb des Teams als auch mit dem product owner, und einen vertikal-integrativen Ansatz Fehler, wie z.B. Missverst√§ndnisse bei dem Design/UI eines Men√ºs, schneller l√∂sen, wohingegen das Spiral Model seine Prototypen und Iteration in Form eines linearen Ansatzes entwickelt.\nAuf der anderen Seite ist es schwer den Ablauf zu √ºberblicken und zu koordinieren (Vgl. Scrum-Master), wodurch bei falscher Umsetzung die Vorteile von Scrum nicht zum tragen kommen, durch z.B. Ver√§nderungen des Sprint backlogs oder dessen unangemessenen Umfang (Druck), was beim Spiral Modell nicht droht. Auch ist es f√ºr Manager klarer und einfacher Aufgaben bei linearen oder iterativen Ans√§tzen abzuhaken und nicht mehr zur√ºckblicken zu m√ºssen, wie z.B. beim Spiral Modell in der Prototypentwicklung.\n\nEs ist also stets abzuw√§gen ob Scrum f√ºr ein Projekt passend ist, in einer sich st√§ndig ver√§ndernden Welt bietet es jedoch einige Vorteile.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621555,
      "meta": {},
      "text": "Scrum teilt den Entwicklungsprozess in 2 bis 4 w√∂chige aneinander anschlie√üende Sprints ein, in denen das Team an einigen wenigen, am Anfang des Sprints ausgew√§hlten, Funktionsweisen arbeitet. \nIn t√§glichen Meetings, die vom Scrum Master moderiert werden, sollen alle Mitglieder auf den aktuellen Stand gebracht werden um Misskommunikation zu vermeiden und Probleme fr√ºh zu erkennen. \nDer Scrum Master dient dabei als Vermittler zwischen den Mitgliedern des Deverloper Teams welches eigenst√§ndig das Vorgehen w√§hrend des Sprints entscheidet.\n\nVorteile:\n-Durch die regelm√§√üigen Meetings wird Transparenz garantiert, wodurch auch Probleme fr√ºh erkannt werden k√∂nnen und schnell und flexibel reagiert werden kann. Wenn beispielsweise w√§hrend eines Meetings aufkommt, dass eine Funktionsweise, die von einer anderen abh√§ngig ist, wegen dieser Abh√§ngigkeit nicht richtig funktioniert kann dies festgestellt werden und die kleineren Sub Team, die f√ºr diese Verantwortlich sind, nocheinmal zusammen daran arbeiten die richtige Funktionalit√§t zu implementieren.\nBeim Spiral Model werden in jeder Iteration in der Risk Analysis Phase Probleme erkannt und versucht diese zu l√∂sen.\n-Da es keinen Chef gibt, der alleine Entscheidungen trifft ist die Expertise jedes Teammitglieds gefragt, sodass die M√∂glichkeit mitzubestimmen zu h√∂herer Motivation und mehr Ideenreichtum beim finden von L√∂sungen f√ºhrt, da die Diskussion √ºber das weitere Vorgehen auf Augenh√∂he passiert.\nDas Spiral Model ist ein komplexeres Model wenn es um das Treffen von Entscheidungen und das generelle Management geht.\n\nNachteile:\n-Da immer nur an einzelnen Funktionsweisen gearbeitet wir kann es passieren, dass dabei das Projekt als ganzes aus dem Blick verloren wird. Dies kann beispielsweise dazu f√ºhren, dass in einem sp√§teren Sprint festgestellt wird, das wenn man eine andere, in einem vorherigen Sprint abgeschlossene Funktion etwas allgemeiner fassen w√ºrde, diese f√ºr viele andere Teile des Projekts genutzt werden k√∂nnten. \nBeim Spiral Model geht es auch bei jeder Iteration um die derzeitigen Ziele, sodass auch hier ein zu versteifter Tunnelblick auf derzeitige Ziele nicht ausgeschlossen werden kann.\n-Meetings k√∂nnen relativ schnell ausufern und dementsprechend unn√∂tig viel Zeit in Anspruch nehmen. Wenn beispielsweise ein Teammitglied etwas ausf√ºhrlicher als n√∂tig erkl√§rt was er getan hat, werden die anderen Teammitglieder es ihm gleich tun, wodurch sich die Meetings unn√∂tig in die L√§nge ziehen.\nDa es beim Spiral Model keine t√§glichen Meetings gibt k√∂nnen keine Meetings ausufern.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622316,
      "meta": {},
      "text": "SCRUM in software development is an agile model of development, it's main characteristic is it's high ability to deal with frequent changes of the requirements and interruptions in the development, and that is achieved through several sprints that the developers go through during this process.\nThis brings with it a bunch of advantages and disadvantages, some of which are : \n\t*Advantages* :    \n\t\t+ The ability to deal with the rapidly changing requirements of the customer. For example if the customer decides he wants to get rid of a feature or add a new feature or maybe give a certain feature a higher priority, the developers can add that to the backlog of their next sprint and start working on it so soon.\n\t\t* Comparison with Spiral Model : Since the spiral model is iterative, it kind of has the ability to deal with change aswell, the duration in which it can do that might however differ from SCRUM, since SCRUM can adapt to changes really fast and the sprints are usually not that long.\n\t\t\n\t\t+ Reduces the risk during the development process. This is because after every sprint there is a potentially shippable product increment which is shown to the customer to see if he likes it, if he doesn't then the developers can work on changing the things he doesn't like. For example if the developers are working on an app and it doesn't pass the client acceptance test at one of the sprints, then they know that and fix it instead of having to work on the app without any feedback and then get the unpleasant surpise at the end. \n\t\t* Comparison : Spiral model also has acceptance tests, but again the speed at which things happen is usually higher in SCRUM.\n\t\n\t*Disadvantages* : \n\t\t- The team members need to have the adequate skills,experience and determination for scrum to be effective. For example they could keep delaying tasks for future sprints and this could slow down the work.\n\t\t* Comparison : Iterations are less flexible and don't allow for much procrastination.\n\n\t\t- The daily meetings can be frustrating for the developers. For example some developers might see the daily meeting as a waste of time, since they maybe don't need to know the other member's  daily progress, or the progress could be negligable on a day to day basis.\n\t\t* Comparison : The spiral model doesn't have daily meetings.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622718,
      "meta": {},
      "text": "SCRUM is an agile system to manage projects, where a team is working dynamicly in sprints on a set of specified goals, those are a subset of the backlog which summarizes all aspects of the current vision of the finished product. If successful, each sprint provides a potentially shippable product increment.\nIt is very dynamic in terms of communication in the team, wich consists of a product owner, scrum master and the developers, those have regular meetings (5 variants) to discuss the past, present and future of the project.\n\nAdvantages:\n-SCRUM is very adaptive.\nex.: If the client wants to have more buttons on his webpage during the process, the request can simply be added to the product backlog and considered in the next sprint.\n\n-It has a focus on creating stable parts instead of the whole product, so losses are less risky if change occurs.\nex.: My team implemented the structure for a database partly, until we realised that we don't really need one and therfore no serious losses have occured in contrast to a linear workflow, where the database could have been build first and the whole process thrown away afterwards.\n\nDisadvantages:\n-It is difficult to foresee/predict the total time nececcary to finish the project, because each sprint represents small deadlines for the product increment but not for the finished product.\nex.: The current sprints were our only measurement for progress, which seemed to be sufficient steps and we underrestimated the total time nececcary, because not all backlog items require the same workload, so our sprint backlogs are now stuffed.\n\n-Working in parallel makes organizing the project implementation more complex.\nex.: Our team stuggled to determine the next proper steps for the sprint backlog, which we could do in parallel, \nbecause some functionalities and structural requirements for the UI were not clear until implementation.\n\nIn comparison, both SCRUM and the Spiral Model determine goals for an increment, SCRUM reduces risks through communication and the resulting information, while the Spiral Model through prototypes. And SCRUM communicates the next sprint backlog, while the Sprial Model plans the next cycle.",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5644358,
      "meta": {},
      "text": "Bei Scrum nimmt sich das Team bestimmte aufgaben f√ºr das n√§chste Intervall vor und bearbeitet diese bis zum n√§chsten Treffen, bei welchem dann der Erfolg davon berichtet wird. Bei jedem Meeting wird Evaluiert wie viel geschafft wurde, und was als n√§chstes ansteht. Jedes dieser Meetings wird von einem bestimmten Scrum Master geleitet und gef√ºhrt.\n\nScrum hat folgende Vorteile:\n- es bietet eine spontane Planung des Produktes, da mit jedem Meeting \t\t\t \t\t\tentschieden wird, was als n√§chstes gemacht werden soll. \n| \nSollte z.B. bei einem Meeting auffallen, dass ein wichtiger Punkt vergessen wurde bei der Entwicklung, kann der einfach f√ºr das n√§chste Intervall priorisiert werden.\n\n>\nBeim Spiral Model kann auch spontan das Produkt angepasst bzw. ge√§ndert werden, da iterativ die Schritte geplant werden, und nicht alles im Vorhinein feststeht.\n\n- F√ºr kleine unaufwendige Projekte ist Scrum sehr kosteneffizient.\n|\nwenn z.B. ein kleines sicheres Projekt zustande kommen soll, welches keine gro√üen Anf√§lligkeiten f√ºr Risiken hat. Ist es darausgehend kosteneffizient mit Scrum umzusetzen.\n\n>\nDas gilt f√ºr Spiral nicht. Das Aufsetzen, bzw Vorbereiten des Spiral Modells ist zu aufwendig um einen Nutzen daraus zu ziehen, da das Projekt schnell fertig ist und nicht mehr bearbeitet werden muss.\n\n\nScrum hat folgende Nachteile:\n- es verschenkt in gewisser Weise Potential.\n|\nWenn z.B. jemand seine Aufgabe erledigt hat und nun warten muss, bis das n√§chste Scrum Meeting ansteht wird Zeit und Potential verschenkt.\n\n>\nBeim Spiral Model muss auch gewartet werden, bis die n√§chste Iteration ansteht um eine neue Aufgabe zugewiesen zu bekommen.\n\n- bei gro√üen Projekten wird es ineffizient.\n|\nMit Wachstum des Projektes wird auch die Fehleranf√§lligkeit gr√∂√üer. Da das Projekt nicht in Verbindung zum Endnutzer steht m√ºssen deutlich mehr Resourcen f√ºr Testen investiert werden um ein funktionierendes Produkt auf den Markt zu bringen.\n\n>\nBeim Spiral Model hat das Problem nicht, da es fr√ºh in der Entwicklungsphase schon released wird. Die momentanen Nutzer geben feedback zum Produkt, wodurch die Fehlersuche und Planung erleichtert wird.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5644789,
      "meta": {},
      "text": "Advantages \nScum enables teams to finish project quickly and efficient by enabling efficient usage of money and time. The solution of big projects is simplified by dividing the big problem into many smaller ones, which are simpler to manage and solve.\nThe requirements are implemented, tested and viewed during each sprint, which is better than testing it at the end because those tests make sure each of developed parts will work.\nThe scrum meetings keep team members good informed about the developments progress. \nScum enables new requirements between the sprints and adopts customer and stakeholders feedback. The shortage of each sprint makes it easy to fit the development to the feedback.\nScrum meeting allow a good overview of individual effort of each team member.\nDisadvantages \nScrum does not have a clearly defined end-date which leads to slow work (e.g. if manager does not define until when which parts of the project should be completed or if there are a lot of additional requirements appear from the customer).\nIt is difficult to use scum in big teams because scrum needs meetings and they might be too long. Scrum also needs individuals to be cooperative to work together on the same issues and to be open to share ones work in the meetings.\nWeekly scrum meetings might be upsetting if the members do not succeed in achieving the weekly goal or if one see others could do more than one self or if there are new requirements which should be set in the next sprint which make one to undo something one invested time in.\nScrum needs experienced team members because the individuals should be able to solve their part of the work successfully within the given sprint time and present the meaningful parts of their work in the meetings.\nScrums disadvantage is also the need for others to deal with the work of one if he leaves the project, because in scrum individuals get specified parts they are responsible for in the project or al least in the sprint.",
      "score": 66.7,
      "language": null
    },
    {
      "id": 5620411,
      "meta": {},
      "text": "SCRUM is a software development technique that is best suited for projects where many and rapid changes are expected to occur. It works through iterations of so called 'sprints' which in the end optimally deliver a shippable project that meets the client's criterias and is so effective because the work gets distributed and worked on seperately. \n\nAn advantage of SCRUM is that it deals very good with requirments changes. The called backlog saves all required features and can be added to easily. The backlog items then get implemented in the different sprints. If a client eg.  really needs to have a new view in the UI the product owner can priotize it and let it be implemented in the next sprint. The spiral model however is not that flexible to change as it has this fixed number of iterations with the 4 major activities in it.\n\nAnother advantage of SCRUM is that the effort of each individual team member can be observed/measured. For example the scrum master can see in the dailyscrum meetings, if a certain team member isn't doing his part properly. If a member always comes late to the meetings and contributes close to nothing the Scrum master can think about consequences. In the Spiral model there are planning of the iteration meetings but the effort of each developer isn't as visible as it is in scrum.\n\nA disadvantage of SCRUM is that -as the development teams in scrum are rather small- if one teammember leaves it can have a huge negative impact on the overall performance. Especially leading developers/ScrumMasters are important. If the Scrum master leaves the company a new person needs to be introduced into the team who needs to get to know everyone and the specific area in which the team operates. In the spiral model it's easier to deal with such a situation as it is not as dependend on the performance of each member and tasks can be redistributed.\n\nAnother disadvantage of SCRUM is that it can get pretty challenging conducting SCRUM in a large team as the different developer teams in the scrum framework should be limited to around 5 people. This causes a massive organization overhead which requires additional financial resources. Imagine a big company with 200 developers wants to implement a new project internally and thus builds a scrum structure. This would result in around 40 teams which all need to be coordinated. in  The Spiral model also needs some organization in the background (planning the next iteration, determining objectives, alternatives and contraints) but not as much as Scrum.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620682,
      "meta": {},
      "text": "SCRUM ist eine agile Projektmanagementechnik, ein einfaches Rahmenwerk, das Teams und Organisationen bei Wertgenerierung durch adaptive L√∂sungen f√ºr komplexe Probleme hilft. Es gibt einen Scrummaster, der einen zyklischen Ablauf unterst√ºtzt, in dem \n1. ein Productowner ein komplexes Problem in ein Productbacklog einordnet\n2. das Scrumteam aus einer Auswahl aus diesem Backlog innerhalb eines Sprints ein Increment erarbeitet\n3. das Scrumteam und die Stakeholder die Ergebnisse √ºberpr√ºfen und Anpassungen f√ºr den n√§chsten Sprint vornehmen. \nScrum nutzt einen interaktiven, inkrementellen Ansatz zur Optimierung der Prognosef√§higkeit und zur Risikokontrolle. Man setzt auf die kollektive Intelligenz - die Personengruppen haben gemeinsam alle F√§higkeiten und Fachkenntnisse f√ºr die Zielerreichung.\n\nVor- und Nachteile:\n+ Rechtzeitige Vorhersage: Die durchschnittliche Geschwindigkeit des Teams kann abgesch√§tzt werden -> Beispiel: Im Productbacklog befinden sich noch 10 Items, durchschnittlich werden in einem zweiw√∂chigen Sprint 2 Items bearbeitet. Die n√§chsten beiden Items sind in zwei Wochen lieferbar, der Productbacklog ist ca. in 10 Wochen fertig. Spiral: keine zeitliche Absch√§tzung m√∂glich, da man nicht wei√ü, wie lange die n√§chste Iteration dauern wird und das Risiko minimiert wurde. Man plant erst nach dem Ergebnis der Iteration die n√§chste Iteration.\n+ Bessere Produktqualit√§t: Scrum hilft bei Zusammenarbeit und kontinuierlicher Verbesserung. Aktivit√§ten wie Sprintretrospektiven und Sprintreviews stellen sicher, dass das Team die M√∂glichkeit hat, seine Prozesse zu reflektieren und zu verbessern. Beispiel: es gibt Kommunikationsprobleme zwischen mehreren Personen, diese Impediments werden in der Sprintretrospektive l√∂sungsorientiert besprochen. Spiral: Man schaut zwar auf Constraints, aber diese sind nicht zwischenmenschlich sondern produktbezogen. Bei Scrum steht hingegen Zusammenarbeit klar im Fokus.\n- Die Einf√ºhrung des Scrum-Rahmens in gro√üen Teams ist eine Herausforderung. Beispiel: Im Daily sollte jeder zu Wort kommen, bei gro√üen Teams nimmt das viel Zeit in Anspruch und ist etwas \"erm√ºdend\" und ineffizient. Spiral: Gro√üe Teams sind kein Hindernis, da es nicht so viele Teammeetings gibt.\n- F√ºr Scrum braucht man Vorkenntnisse -> nur mit erfahrenen Teammitgliedern erfolgreich. Beispiel: Person X kennt das Regelwerk nicht und hat noch nie mit Scrum gearbeitet -> die vielen unterschiedlichen Meetings und Abl√§ufe sind komplex und verwirrend und k√∂nnen am Anfang demotivierend sein. Spiral: Auch hier ben√∂tigt man Vorkenntnisse, da es komplex ist -> 9 Iterationen mit jeweils 4 Aktivit√§ten",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5621378,
      "meta": {},
      "text": "Scrum is a technique for managing and controlling software and product development with rapidly changing requirements. It consists of two main iterative parts: sprint and daily meeting. Sprint consists of daily meeting, the colleaques can communicate to deal with problems and changes, as a sprint finished, the team checks whether new sprint backlogs are there: if yes, repeat the process, otherwise, finish the scrum.\n\nAdvantages:\n1. Although the Spiral model can deal with changes between activities, it cannot change within an activity. if changes are happening more frequently, we need to choose Scrum.\n2. Compared to Spiral Model(Iterative), Scrum makes the distribution of Work more efficient and makes easy for analyzing the Cost and effort for delivery. Spiral Model is more complex.\n\nExample: Company E asked a software company Pinguin to develop a delivery app. E wants the delivery of software product faster and quality. Scrum enables collaboration between the teams and which results equal distribution of work as per the skills and availability of the stakeholders. Which will make faster and quality delivery of software product. However, time management in the Spiral Model is very complex which makes delay in delivery and pressure on developer.\n\nDisadvantages:\n1. Srum requires good team communication. Companies like start-ups without good interdepartmental collaborational experience can hard apply Scrum. Spiral model is a very complex software development models, it needs also more experience.\n\n2. Scrum can lead to project ddl excess due to its iterative redo and flexibility. Spiral model has the same problem.\nExamples:\nsince Pinguin is a start-up and E changes its requirements often, Pinguin has problems. The communication between product owner and developer becomes confused, the developer team doesn't get E's changes in time and loses the overview of the project and exceeds the submission date. \n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621781,
      "meta": {},
      "text": "Scrum is a management framework, according to which one or more self-organized teams create a product in incrementally, that means in stages. Scrum has a system of roles(Product Owner, Scrum Master, Development Team), five events,  and three artifacts. In scrum, teams are responsible for creating and customizing workflows. Scrum uses fixed-length iterations called sprints. They usually take 1-2 weeks (max 1 month). Scrum teams strive to create a potentially shippable product increment Product Increment in each iteration.\n\nAdvantages:\n1. Response to customer needs. For example traditional waterfall organizations build important features and functionality into a schedule with two releases a year‚Äîand  this often leads to the loss of customers, while in scrum you can at any time change the project.\n2.Reduced development cost. For example in scrum there is no need to have testing specialists, the team consist mostly of general programmers rather than of narrow specialists. \n\nDisadvantages: \n1. Not always suitable for large projects and companies due to limited documentation and communication between teams.\n2. Everyone should be a team player, which is not always the case. For example there are a lot of software developers, that prefer to work align.\n\ncomparison of advantages/disadvantages  of spiral and scrum models:\nadvantages of scrum:\n1.In both models the client can add changes to the project during the development.\n2.In spiral model risk management requires the involvement of highly qualified specialists and it takes time to evaluate and to resolve risks, what needs more money. In scrum there is no need in testing specialists because usually the whole team tests the implementation, and this model is not based on risk evaluation.\n\ndisadvantages of scrum:\n1.Often there is no enough time to make the property documentation in scrum model, while in spiral everything is well documented.\n2.In scrum on the certain problem usually works the whole team, while in spiral the work could be different divided.\n\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621850,
      "meta": {},
      "text": "The core essence of SCRUM is the technique that deals with changes during a development. It is an agile method of development where a development team learns through experiences, organize themselves while working on a problem and review their wins and losses to constantly improve. For this to happen, work is performed in parallel, having multiple so called sprints which is a time-box during which the team creates a potentially shippable product increment. \n\nOne advantage of SCRUM is that it frequently adopts feedback from customers and stakeholders which makes the goal clearer and to stay on this right path of development. For example, when a development team work on a potentially shippable product increment for the customer, they might be on the wrong path due to some misunderstanding. However, after each sprint the customer and the stakeholders can take a look into the product increment and guide the developers to the right path. On the other hand, our sprial model does not include frequent interaction with the customers. \n\nThe biggest advantage is that it is adaptable and flexible. In the case of situations where we don't initially have clearly identifiable requirements and need a flexible approach, we can use SCRUM since we would be gaining more and more requirements throughout our process. On the other hand, our spiral model needs clearly identifiable requirements from the beginning on. \n\nHowever, there are also disadvantages. The first one is that SCRUM requires very committed individuals since the roles are divided into the product owner, the SCRUM master and small groups of the SCRUM team members. If not all individuals are not experienced or very committed, there are higher chances of project failure. Every team will have its own important role for each sprint and the work each team does is put all together at the end of each sprint to finally produce the potentially shippable product increment. Therefore, if a piece is missing for our product increment, it won't even be potentially shippable anymore. \n\nAnother disadvantage is that the daily meetings can be frustrating. Referring to the point mentioned before, we would need every team member to be committed and be there at every daily meeting to be able to accomplish our goals for each sprint. So SCRUM can be quite complicated to manage. Our spiral model doesn't require these two disadvantages as much as we would for SCRUM, so it would be quite a change for us. \n\n",
      "score": 79.2,
      "language": "ENGLISH"
    },
    {
      "id": 5622134,
      "meta": {},
      "text": "SCRUM is an agile method for working on software in a team. It is ideally suited to rapidly changing environments and requirements. In addition, risk management is easier because the communication and cooperation is better than with linear models.\nAfter the product and sprint backlog have been defined, the team works on the formulated requirements within a sprint. After the sprint is completed, the sprint backlog is revised and the next sprint begins. This iterates until the product meets the requirements and will be shipped.\n\nDisadvantages of Scrum:\n1. Implementing the Scrum framework in big teams can be hard:\nThe majority of members must agree to the use of scrum for the model to work. In addition, members of large teams are often used to old processes and it can take time for everything to function smoothly.\nExample: When using an existing process over years there are always old team members that refuse to adapt new \"technologies\" and then it won't work as needed.\nImplementing the Spiral Model is more straight forward.\n\n2. Scrum has no pre defined end date and thus there is a chance for products being done too late.\nIf a team is working on a linear model, there is a date set, when the project has to be done.\nIn scrum it is agile and thus it can happen, that we iterate to often and do too many sprints so that we are too late in the end.\nExample: In some projects teams think that they got enough time, because there isn't any deadline given, but are to late in the end.\nSpiral model has no defined end date as well and duration is unknown.\n\nAdvantages of Scrum:\n1. Possibility of adapting feedback\nDue to iterating meetings after each sprint and having a potentially shippable product, it can be presented to the customers and \nExample: When implementing the game bumpers, our customer can say that he would like another theme. Then the background and music can be changed within the next sprint.\nSpiral model is flexible aswell.\n\n2. Products are more stable because of the possibilities of testing\nRequirements are given for every sprint, so that at the end of every sprint it can be checked if the requirements have been met. As a consequence, the code/product is a lot more stable than with linear methods.\nExample: In our EIST Team project we are implementing a RestaurantReservationSystem. At the end of every sprint we write test cases for our added implementations and check within the team if the requirements are met as formulated before.\nSpiral model is good to test aswell.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622782,
      "meta": {},
      "text": "SCRUM is an agile development model. The SCRUM lifecycle is divided into sprints that last a few weeks. At the beginning of each sprint, the team plans what they are going to implement during the sprint, this plan is called the sprint backlog. This backlog is locked during the entire duration of the sprint to allow the team to implement it. Changes and new features are specified in the product backlog, which is allowed to be modified at any time. At the end of the sprint, the team delivers a usable product increment. This practice is call continuous delivery.\n\nWe will use as a running example the development of a messenger app.\nThe main advantages of SCRUM is that it can adapt to frequent changes and allows to see problems early. In the case of our messenger app, this means that if the client later wants to add features, like video calling, it can simply be added to the product backlog and since the front end and the back end of the video calling is implemented during the same sprints, integration problems can be detected and fixed very quickly.\n\nThe disadvantages are that some team members might not be very familiar with SCRUM, which could lead to lower productivity at the beginning. SCRUM might also not be necessary for projects that require low changes, like scientific modelling.\n\nThe spiral model does not allow to go back inside an activity, which makes it more difficult to adapt to changes and unforeseen errors. ",
      "score": 37.5,
      "language": "ENGLISH"
    },
    {
      "id": 5623000,
      "meta": {},
      "text": "SCRUM is one of the methods for implementing Agile project management. SCRUM allows to divide the development process into separate periods - Sprints. This iterative process makes it easier to implement the necessary changes that occur during the development process.\n\nAdvantages:\n- Scrum allows you to break a project into short stages that are easier to develop\n- Team work\n\nDisadvantages:\n- It is impossible to clearly plan how many iterations (sprints) it will take to complete the project.\n- Some processes are time-consuming (e.g. Daily meetings)",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5644889,
      "meta": {},
      "text": "In software development, Scrum is a systematic approach to creating, delivering, and maintaining a product in a constantly changing environment. A Scrum team is divided into Product Owner - the client, Scrum Master - implements the Scrum methodology, Team Members. The workflow of Scrum teams is based around Sprints - time windows, where teams implements the Sprint Backlog, and at the end of which they provide a product increment.\n\nA disadvantage of Scrum is that it requires small teams. Since Scrum relies on meetings, where everybody is present, it's only possible to have a sensible discussion when the team size is small enough. For example, the Sprint Review/Sprint Planning meeting of a team of 20 people cannot be executed timely, with everyone's input being considered. The Spiral Methodology doesn't really specify the roles and the period lengths.\n\nAnother disadvantage of Scrum is that the personnel should be trained and experienced in Scrum. Compared to the Spiral Model, Scrum is much more detailed approach to Software Development, with clear roles, limitations, and deadlines. For example, if you task a team of 5 people to use Scrum without any previous experience, it's very likely that they will change/degrade the Scrum methodology to a point where it's not even close to the original idea.\n\nA major advantage of Scrum is its fast reaction time to changes. Before the start of every Sprint, the backlogs are adapted to the current environment and requirements, with the input of the Product Owner. Since Sprints have a constant length (usually 1-4 weeks), changes are considered in a regular fashion. The Spiral method for example has no fixed iteration times, which may delay reacting to changes timely. Sometimes it can happen that the Spiral activity lasts for 2 months, whereas major requirement changes occur on the 2th week. \n\nAnother advantage of Scrum is its overall flexibility. Even during Sprints, teams have the Daily Meetings where they adapt their activities and workflow. The Spiral method for example doesn't allow for changes. An example would be the Product Owner coming up with a new Sprint Backlog item, which can then be added and implemented.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5645046,
      "meta": {},
      "text": "Basically Scrum is an agile development model, which functionality lies in completing backlogged tasks in constant period of time, which leads to production of potentially shippable product increments. One of those constant periods is sprint. Sprint is divided in three meeting types: sprint planning meeting, daily scrum meeting and sprint review meeting. Normally it takes from 2 to 4 weeks to complete one of the sprints.\n\nThe difference to the spiral model is that  Scrum reacts very quick to the changes in functionality, technology and demands. Also the advantages of scrum are the clear structuring of teamwork and communication. On the one hand, scrum helps team solve complex problems and helps them to build their projects/products faster and more efficiently, the spiral model, on the other hand, is better suited for risk management. Therefore, the spiral model is better in the projects, where highly customized products have to be developed. Due to division into regular sprints, there is also a high degree of flexibility and adaptation to the changes wanted by a customer. And as I already mentioned, scrum meetings allow scrum to have a better control and transparency.\n\nThe contra argument of scrum could be larger projects. There is just impossible to have a large meeting with 100 or more workers taking part in it. That means that scrum model can be only helpful in small teams, otherwise it'll lead to coordination problems. Consequently, is the spiral model better for large projects, as it would be to expensive to use it in small groups. Also every team member has to have a high discipline and to do their tasks full and correct, when the team uses the scrum model.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 5645050,
      "meta": {},
      "text": "SCRUM is a model to enable agile and effective collaborations between group members to develop high-quality products. It does so by dividing bigger tasks into smaller parts, which are better to handle, and then following a clear, yet agile, plan.\n\nAdvantages of SCRUM:\n- Through its agile nature, SCRUM enables a high level of adaptability to customer feedback or other changes\n- SCRUM leads to first deliverables fast and efficiently\n\nDisadvantages of SCRUM:\n- not easy to apply to very large teams, as things like daily scrum meeting are harder to do\n- high level of interaction and commitment (daily meetings etc.) may not be desired by the team or all its members\n\nComparison SCRUM vs Spiral:\nWhile both models split the implementation phase into different parts, Spiral model only has one planning phase at the start, while SCRUM uses continuous planning after/before each sprint. This makes SCRUM more agile.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 5620259,
      "meta": {},
      "text": "The core essence of scrum: Scrum presents a workflow framework for project management and development. A product owner orders solutions (usually software). The order is broken down into a product backlog, from which the scrum team (usually developers) select points to work on in their next sprint (one workflow period, 2-4 weeks). Before every sprint a planning meeting is held which is called sprint planning meeting and after every sprint there is a sprint review meeting where scrum master and team inspect the results (which is shippable product increment)of the sprint. \nOne big advantage  of scrum is the adaptability to change within the requirements. This is due to the fact, that during one sprint only few points from the backlog are finalised (in logical order of course). This makes it a lot easier to add new requirements if necessary. Compared to a previously used spiral model, where requirements are defined once during requirements elicitation and it is very hard to add new requirements after the design is done.\nAnother big advantage is that a shippable product increment stands at the end of each sprint. This makes it easier and more continues to check with customer satisfaction and acceptance and fosters a dialogue with the product owner. In a spiral model, most of the project would be done by the time the owner gets to see it and it would be therefore hard to include changes and suggestions by users/owner.\nSadly Scrum has disadvantages, mostly related to workflow and introduction: First of all Scrum requires a lot of training and a certified SCRUM master at best. Employees have to be taught and introduced, development processes have to be changed within the company maybe even the company structure. A costly and time consuming task which wouldn't be necessary sticking to the previous well defined and know spiral model.\nLastly Scrum isn't as scalable as other (more linear or spiral) models, with a defined workflow hundreds of developers know what to do when. Scrum lives from communication between developers, flat hierarchies and a good and familiar climate in the team. All these positive aspects are hard to achieve in large development teams where employees mit not even know each other in person.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621151,
      "meta": {},
      "text": "Scrum is a framework for team collaboration based on defined roles, meetings, tools that give a team structure and clear work process based on agile principles. Scrum manages and controls software development and also product development while requirements might change rapidly. It improves risk management through clear communication streams, cooperation, and the delivery of product increments.\n\n(Advantage) In scrum, development is divided into sprints (fixed time periods), during which the team creates potentially shippable product increments through previously defined tasks. That way one can cope pretty easily with changing requirements because you do not plan an entire product from head to toe in the beginning. The Spiral model's fundamental concept is not development planning, it is more on risk management.\n\n(Disadvantage) Scrum requires extensive training, well-trained and skillful team to properly implement it. Before introducing Scrum, everyone in the team needs to understand the concept of this approach for the project to be successful. For example, when a team doesn't know what the aim of the daily scrum meeting is it might not be as helpful as it could be. The Spiral model is also divided into different Phases and it again is important to understand the process of this model.\n\n(Advantage)In Scrum you have fixed team roles: Scrum Master, Product Owner scrum team. That way task distribution and communication is much clearer especially to the client . For example, the product owner's task is to communicate with the client and bring new features from the client to the development team. that way the client is much more involved. In the spiral model, on the other hand, there is minimal client engagement.\n\n(Disadvantage) It only makes sense to use scrum if you work in small team. The \"daily scrum\" is a meeting where every team member updates all other team members on what they have done and what they will do that day. If you work in big teams, this would take forever and would not be productive. This is not a huge problem with the Spiral model because there you do not have to many team meetings.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621220,
      "meta": {},
      "text": "core essence SCRUM: it is an agile way to develop software, since software development is empirical and s.t. not a defined process. SCRUM is an iterative and incremental approach to control software development - the main principles are Transparency and Inspection of work and progress and the Adaption of processes.\n\n\nadvantages:\nYou can react quickly to changes. E.g. There is a daily scrum meeting where every member of the team tells about the current status, the impediments since the last meeting and promises what (s)he can achieve until the next meeting\n\n\nMembers of a team can focus on their strengths: E.g. each member can choose tasks from the Sprint Backlog that suits their strengths best.\n\n\n\ndisadvantages:\n\nself-managing/no hierarchies: Of course, this could also be an advantage, but I have made the experience (in the team project) that some people find it easier if the have a \"boss\" who tells them exactly what to do and hwhen to do it - otherwise they just won't do anything\n\n\nSpiral model:",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621921,
      "meta": {},
      "text": "Scrum ist eine M√∂glichkeit, um eine Software best-m√∂glich zu entwickeln und zu \"verwalten\"/zu kontrollieren, wenn es sein kann, das die Anforderungen an die Software sich drastisch ver√§ndern k√∂nnen.\nBei Scrum werden 3Hauptkomponenten definiert, die jeweils einzelne \"Unterereignisse\" haben:\n1.Scrum activities, zb mit dem Project kickoff meeting, welches zu Beginn des Projektes gehalten wird, als Teilnehmer den Clienten und den Projektleiter hat, und als Ziel hat das product backlog zu entwickeln\n2. Scrum artifacts, zb mit dem product backlog, indem werden Probleme des gesamten Projekts sichtbar\n3.scrum roles: Verteilung der Rollen und somit der Aufgaben innerhalb des Teams, ua zb den scrum master, welcher das Projekt leitet\n\n\nAnforderungen:\nScrum: basierend auf  Treffen zwischen Product owner und developer wodurch die Anforderungen flexibel sind, da der Product owner nur f√ºr das Management dieser verantwortlich ist. \nSpiral Model: Abh√§ngigvon vielen verschiedenen Parteien ab, wie zB dem key system, stake holders aber auch den Erwartungen der user, dem customer und dem developer. Somit √§ndern sich die Anforderungen kaum (bzw mit sehr viel aufwand)\nBspw k√∂nnte der Kunde eine App beauftragt haben und sich dann dazu entschlie√üen eine zus√§tzliche Sprache nutzen zu wollen. \n-Scrum: recht einfache Aufnahme in den Anforderungen \n-Spiral: erst abkl√§ren mit allen beteiligten Parteien und auftretende Probleme und L√∂sungen evaluieren ->deutlich mehr Aufwand\n\n\nProjekteumsetzung :\nScrum: kurzer Zeitrahmen (Tage-Wochen)\nSpiral:  Zeitraum von Monaten bis Jahren \nKunde ben√∂tigt dringend App: Vorteil bei Scrum, da hier viel schneller ein nutzbares Endprodukt zu erwarten ist. \n\n\nDokumentation:\nScrum: minimalistisch, spart Zeit und Geld \nSpiral: Erg√§nzung nach jeder Phase, entstehen von mehr Zeit und somit mehr Kosten \nBsp App:\n-jedes Team bei Scrum entscheidet selbst welche √Ñnderungen es dokumentiert\n-spart Kosten und wertvolle Arbeitszeit, Dokumentation bei Scrum eher unvollst√§ndig und daher keine verl√§ssige Quelle \n-schwer neue Mitarbeiter einzuarbeiten: ohne Vorkenntnisse √ºber das Projekt einsteigen und kaum M√∂glichkeiten haben, sich einzuarbeiten\n\n\nSoftwareDevelopment:\nScrum:\"people oriented\" \nSpiral: \"process oriented\" \n-Scrum: \n\t-gr√∂√üeres Potential ein Enduser freundliches Produkt zu haben\n\t-Problem: nicht 100% funktionst√ºchtig -> schlecht f√ºr Auftraggeber\nBsp App: f√ºr den Nutzer intuitiv verst√§ndlich und einfach zu bedienen, aber der Zahlunggsservice funktioniert nicht korrekt, so ist es nicht nur f√ºr den Nutzer nervig, wenn eine Zahlung per App nicht klappt sondern f√ºhrt wom√∂glich sogar zu Bestellungen ohne das der Auftraggeber sein Geld erh√§lt.\n\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5622756,
      "meta": {},
      "text": ".) Scrum is an agile development method for IT projects with regularly updated resources.\nThe basic principle is to always be ready to reorient the project as it progresses.\nIt is a dynamic and agile approach to project management.\n\n.)Advantages: \n-one big adantage of scrum is the transparency: for example a team want to build an exam platform for a university, during the frequent meeting the team members, clients (university), everyone is involved in making decisions and changes.\n-Scrum can deal with changes between activities, and also within an activity: For example in the EIST project \"Building a reservation system\" during frequent meetings, a change was required during an activity (during the implementation of an interactive map ), and our group was agile and has adapted to the change.\nDisadvantages:\n-Often scrum can lead to a project that takes a long time to complete: For example a team in a company was charged of a project and due to the lack of a definite end-date, the project took a lot of time to be achieved \n-Scrum is too strict : For exemple in a team working with scrum on a project, during the daily meeting that can go too strict and frustrating for team members especially in large teams. \n\n.) Comparasion with the spiral Model:\nUnlike scrum, the Spiral model looses transparancy bcz the project manager usually gets to make all the big decisions or with few senior members. Other team members can‚Äôt see the progress from start to end in the form of deliverables.\nand the spirale model can deal with changes between activities, but does not allow change\nwithin an activity.\nAlso in the spiral model It's possible that the project's end date will not be known until later, and spiral model unlike Scrum is not too strict.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5629641,
      "meta": {},
      "text": "\nThe core essence of SCRUM is its focus on delivering value to the customer through short, iterative sprints. This means that instead of trying to complete all aspects of a project at once, SCRUM teams break things down into smaller pieces and work on them incrementally.\nExample: A team for the EIST project.\nAdvantages: \n1. SCRUM is a flexible and iterative approach that allows for changes to be made easily as the project progresses. Advantageous because it means that the project can be adapted as new information arises, making it more likely to be successful. As we did in our project we had the opportunity because of SCRUM to change things in a our project because of the agility that Scrum offers. Spiral is iterative but not as flexible as SCRUM.\n2. SCRUM promotes communication and collaboration between team members, which can lead to a more effective team overall. Advantageous because it allows for a more efficient workflow and means that team members are more likely to be on the same page. In the project because of the often Meetings we had a lot of communication and could resolve our issues. In Spiral the planning is done in detail before the work begins.\n\nDisadvantages: \n1. SCRUM can be difficult to implement properly, and therefore may not always lead to the desired results. Disadvantageous because it means that there is a risk of the project not being completed as planned. SCRUM rules can be a new to a team so implementing it can cause some problems for those who don't master it. Spiral is the same thing where if anyone doesn't do what job he is assigned or has problems it can go wrong.\n2. SCRUM relies heavily on the involvement of the product owner, which can be difficult to maintain over the course of a long project. Disadvantageous  because it means that there is a chance that the project won't be completed if the product owner is not available. Z.B difficulties talking with the coach. In Spiral the product owner isn't that much connected with the product as in SCRUM.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5620115,
      "meta": {},
      "text": "Scrum is a lightweight framework that helps people, teams, and organizations create value\nto generate adaptive solutions for complex problems. \nso it consists of three main artifacts :\n-Product backlog : where the requirements ( problem ) for the whole product are defined.\n- Sprint Backlog :  it will be work on a small requirement and taske to solve them and  move forward via a series of iterations called sprints. Each sprint is typically two to four weeks long.\n-Ptenrially shippable product increment : where all the result of the current Sprint will be shared with the product Owner. and so on untill the all problem are solved. \n\n++Both scrum Agile- and Spiral -model allow to change the requirements after the development process starts, so there are flexible in this point.\n\n++scrum Customer interaction is very high. After each iteration, an incremental version is deployed to the customer. Also custumer in the spiral Model can be involved in the development of products at early phase of the software development. \n\n\n--It requires extensive training, it requires a well-trained and skillful team to properly implement it. Before committing to Scrum, everyone within the team needs to understand the benefits and particularities of this approach for the project to be a successful one. The same in the spiral model, it requires highly specific expertise and it depends too much on Risk Analysis,\n\n--If a member of a Scrum Team leaves a project mid-way, there would be a huge negative impact on the project. on the other hand in spiral modle there ist difficulty in time management. As the number of phases is unknown at the start of the project, so time estimation is very difficult.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622640,
      "meta": {},
      "text": "Hello boss, i have gathered you the most important things about SCRUM. But firstly, I can sum SCRUM up and say that its an agile process where you deal with changes a lot.\n\n2 Advantages :\n1.)We're doing a project and change is inevitable. When we get in touch with the client and approach a change in the requirements of a previous step, then it is hard with the way we are doing now (spiral model). \nAs an example, last week we had a meeting and the clients have expressed they would like to make a \"mini\" change in the requirements. But it wasnt optimal so we had a lot of discussions . And then me and my colleagues thought maybe it's better to work with a different model.\n2.)We have chosen to go with the spiral model because it's a model that helps us view the risks and take them linearly step by step. But is it really the best model to deal with the risks? As I have said, SCRUM does improve the communication and therefore the cooperation. These also lead to the fact that the risk management gets controlled in a more effective way.\nAs an example to this, I can go on detailed with the first example. In the SCRUM model, there are roles of the team (product owner, team members and master) and the fact that it allows direct communication between product owner and members is a possitive step towards coomunication.\n\n\n2 Disadvantages\n1-Its also clear that it needs a lot of planning and sprints for the project process. And if we would like to focus more on other aspects than communication, it isnt always the best idea to constantly plan sprint meetings etc. and work on its schedule. \nFor example we would need to work out what we'll discuss on each sprint with the clients etc. Communication does sound good, but the work side of it should also be considered.\n2-Its also well known that spiral model is based on the risks, and even with the communication benefit it gives, it still isnt a clear line whether SCRUM is better than managing the risks than spiral.\nAs an example spiral model does not continue and terminate when a risk cant be evaluated, which isnt really that much dealt with in SCRUM.",
      "score": 68.8,
      "language": "ENGLISH"
    },
    {
      "id": 5622747,
      "meta": {},
      "text": "Scrum is an Agile development model where there is a product owner that makes a priorized wishlist that is called product backlog. From this backlog the scrum team takes a few and compleats them in a so called Sprint ( this should take about 2-4 weeks). These sprints continue until there are no more things in the backlog( this backlog can change)  and after a sprint there should be a shipable product.\n+Scrum is a very flexibl model thus making changes is easy by simply  adding to the backlog and not having a static structure that gives limitations. For exampel very usefull in fast passed enviroments that need to a adapt quickly such as App development. This is also the case for the spiral model but with that model you might have to plan a bit more ahead beacause the Phases are more static compared to Scrum.\n+Scrum is also very cost and time effective because every team member has their task and if they do not complete the task it is very easiely seen and thus discurrraged phsycologically. For Example a Team member is demotivated and doesn't want to work on the project but is forced because he is scared of what the rest of the team will say at a sprint meeting. These Sprints allow Scrum to be more motivating than the Spiral model thus also making it more cost effective.\n-A disadvantage of scrum is the lack of planability meaning that Scrum is not done by a fixed day making it hard to plan. For example a team that does scrum does a project nobody can tell how long they will take because the team is just done when the product backlog is empty and things could get added to the backlo.\nThe spiral model is better in this point it is more fixed meaning the there is more room for planing.\n-Srum is very difficult to implement in lager teams because the delegation of tasks  and comunication is more difficult the bigger the team is. For example a team of 5 and a team of 15 try to do scrum the team of 5 has no  problem comunication and doing daily meeting the team of 15 have a hard time and are often confused who does what and so on. The Spiral method does not have quite the problem because the task do not change as ofte makein it easier to manage a bigger team. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644339,
      "meta": {},
      "text": "the essence of scrum is a small team (preferably about 4 to 6) that works in an agile environment. That is, ready to handle a lot of changes in all aspect of software development at any phases. \n\nAdvantage:\n\n1. Support an agile software development process. Good because in software development there are usually a lot of changes\n\nSpiral model can't change after a phase is finished, and therefore less agile\n\n2. A big project can be devided into smaller sprints. Good, because to build a big project that works as intended, you need to focus on a lot of small details and foundation of the software. A lot of correction can be made in the next sprints, so the quality of the software is maintained, even when it is getting bigger.\n\nSpiral model also divide the works into smaller parts and also support correction for the next phases. But a phase that is finished can't be changed.\n\nDisadvantage:\n\n1. Can takes a lot of time, if there are a lot of corrections. Bad, because time is a scarce ressource\n\nBecause changes after a phase can't be done,  development process in a spiral model can be faster.\n\n2.  Need to have experienced team member and team leader that knows what they are doing and can work together well. In SCRUM, team member need to work together at some tasks. They also need to understand their team mates to plan a sprint. It's hard to find a programmer that is good in programming and also a team player.\n\nIn spiral model, experience team members are also needed\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644421,
      "meta": {},
      "text": "Scrum is a project management system that allows changes within the development and is a great step for more agile development. Scum is essentially for teams with fewer than ten members with a Scrum master, who splits the goals into goals that can be completed in a sprint, which is less than 1 month. Scrum requires daily 15-minute stand-up meetings (called Daily Scrum), sprint review meetings and sprint retrospectives at the end of each sprint, where the resulting increment is demonstrated to the stakeholders.\n\n+ The Scrum is an agile way to approach development, where the team can reflect on the requirements change after each sprint. (e.g. After first iteration of Bumpers, we realized that the song in the background was not a great song and was annoying, so we changed it in the next iteration.)\n+ Scrum manages to create a new product increment after each sprint. This allows the product owner to actively give feedback and change. This way, the changes happen right after the feature is implemented, so it is not hard to change it at that point. (e.g. Product owner doesn't like how your team implemented a feature and wants a change on it. Luckily, you didn't depend on that feature too much, because you first implemented it on this sprint.)\n- Scrum needs a lot of meetings, where the presence of every member is required. It is hard to do in a home-office job or during COVID-restrictions.\n- Scrum needs less than 10 members. Having a lot of members can decrease productivity and restrict you into less agile development. (e.g. a team with 20 people try Scrum. The 15-minute daily scrums are not enough for them to speak everything made that day, the goals of one sprint is either too much that the agility is lost or too less that a lot of the members don't really have much to do.\n\n + Scrum is an agile way to approach development, whilst the Spiral model isn't\n + Scrum creates a lot of product increments and  Spiral model creates less prototypes.\n - Scrum needs more meetings than the Spiral model.\n - Scrum requires less members than the Spiral model.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619488,
      "meta": {},
      "text": "In scrum, product features are kept in a backlog. Features that should be worked on are put in a separate sprint backlog. There are sprints where the actual work is done, and a scrum master ensures the progress. After the sprint is done, everyone continues with the next sprint iteration with an updated sprint backlog and thus ensures a steady progress on the product. If objectives are identified correctly, this point can also be given to the spiral model.\n\nA big advantage of scrum, is that work will be done, not necessarily fast, but at least steady. For example, if we split the goal into a lot of small sub-goals, them every sprint at least one or a few can get done, and given enough time, a working product is established.\n\nAnother advantage are the regular meetings. For example, if a team is relatively new, they aren‚Äòt that well with each other yet. This can strengthen the teamwork and also gives others a chance to see things out of someone else‚Äôs point of view. Depending on whether the next iteration in the spiral model is planned by a single person or in a team, this point also applies to that model.\n\nOne disadvantage is that the scrum master might not necessarily have a deep understanding of how software engineers could solve a problem. Then, for example, if the scrum master expects a task to be done rapidly, although it cannot be done so, this can stress out the team, lead to burn outs, hurt the general team work ethic and stall development overall. This obviously is not the case for the spiral model, as there is no scrum master, although it is noteworthy that having someone who is in charge and responsible can be very helpful.\n\nAnother disadvantage of scrum is that it does not necessarily ensure fast progress or respect the projects deadline. If the developers are done early with their tasks, they don‚Äòt have anything to do until the next meeting. It is also hard to define the tasks. Too small with lead to too much time wasted doing nothing, too big will lead too stressed developers and hurt development and leas to tasks not getting done in time. The same issue can also apply to the spiral model, although the spiral model may define tasks a bit more losely and can potentially work better.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5619491,
      "meta": {},
      "text": "Essence:\nWe use Scrum in software development management, in order to deals with changes. By improving communication, cooperation and the delivery of product increment, Scrum help us to improve risk management. The three roles: the Product Owner, the Scrum Team, and the ScrumMaster together play a major role in Scrum.\n\nAdvantages:\n1. Scrum can help teams complete project deliverables quickly and efficiently\nfor example, The team gets together every day for a brief Scrum meeting, where each member of the team shares daily updates, helping the team and the project manager assess the progress of the project. It ensures effective use of time and money.\n\n2. Scrum, being agile, adopts feedback from customers and stakeholders.\nfor example, the stakeholders and the product owner conduct a review at the end of each sprint. In this way, team member get feedback quickly.\n\nDisadvantages:\n1. Too frequently meetings sometimes frustrate team members\nfor example, every two week is a sprint, every day is a brief scrum meeting. Overly frequent meetings are a drain on programmers' energy and time. \n\n2. Adopting the Scrum framework in large teams is challenging\nfor example, The framework can be successful only with experienced team members. If any team member leaves in the middle of a project, it can have a huge negative impact on the project.\n\nComparison between Spiral model and SCRUM\nCompare to SCRUM the Spiral model can deal with changes between activities, but does not allow change within an activity. \nbut Spiral model is easy to check progress and has a clear end-date.\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621758,
      "meta": {},
      "text": "The core essence of SCRUM is that  dynamic improvement  with frequently change . Project will be complete  with small team iteratively according the changing requirements and improvement. \n\nOne advantage of scrum is flexible. For example ,  customers can change or add new requirements during the product production time . \nAnother advantage of scrum is Iterative progress .  For example  ,development team  can improve and fix the project during the development time iteratively  with regular discussion.\n\nComparing to spiral model , scrum does not need a complete detailed project management plan in the beginning , because  changes and new plan can be made during the development time in scrum but not in spiral model. \n  \n\n\n",
      "score": 8.3,
      "language": "ENGLISH"
    },
    {
      "id": 5621856,
      "meta": {},
      "text": "SCRUM takes the incremental needs of the user as the core, and adopts an iterative and step-by-step approach to software development. In SCRUM, a software project is divided into multiple sub-projects at the beginning of construction and they will be iterated and updated in every sprint meeting.\nAdvantages:\n1. Users can continue to see products that are available in stages, and can provide feedback for improvement in time .So, the deviation rate between the final product and the demand is relatively small.\nWithout seeing the prototypes, customers may receive a Google Play Store as final product instead of a Microsoft Store, which is very similar but not what they actually want.\n\nIn Spiral Model there is only one final product. The customer can only check after the development is over.\n2. Changes can be better handled. Scrum holds sprint meeting every day, changes will be directly discussed and  handled in sprint meeting. At the same time, the corresponding tasks will also be changed.\n\nIn Spiral Model changes will cause risk identifition. After solving the risk, changes will then be handled.\n\nDisadvantages:\n1. Due to its long project cycle, it is difficult to ensure that the development person will not be replaced, and the lack of documentation will cause great difficulties in the process of handover. \nWhen someone need to take over others work, it\"s hard for him to know what to do and understand what have been done with only one prototype.\n\nIn Spiral Model there will be many documents e.g risk analysis document etc. to help people take over others work.\n2. Projects can easily go off track if customers are unclear about what the end result they want is.\nWhen customers give confused ideas, the developers may lead the project to a wrong way, which will  caused a failed product.\n\n\nIn Spiral Model, with constraints, the project will not easily go off track. Customers idea also need risk identifition.\n\n\n\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 5622155,
      "meta": {},
      "text": "Scrum is a model to manage projects in a way that is robust to frequent changes. Different works are performed in parallel. The goal is to react to changing requirements.\n\nShort sprints enable teams to implement changes more easily in a frequently changing environment. For example, the product owner can add new requirements. Whereas in spiral method does not allow change within an activity.\n\nWith scrum, the quality of work is likely to increase as it is easier to have an idea of the individual contribution of each member. For example, in the daily stand ups, members explain what they are working on. Whereas in spiral method, the individual level of contribution of members is hard to distinguish.\n\nIt might require organizational transformation as it does not align well with the classical development approaches. For example, managers favor linear models more. Whereas spiral method does not require such a big transformation.\n\nIn large teams, it would be challenging to implement this method as Scrum is not very scalable. For example, the precision of the coordination gets higher as the size of the project gets bigger. Whereas spiral method is more compact.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5622763,
      "meta": {},
      "text": "‚Ä¢ core essence of scrum\n\n   + the scrum team is divided in three categories: product owner, scrum master and scrum team, and each \n      group has their own excercises\n\n  + cooperation and communication between the three groups that is achieved through meetings (e.x. daily \n     scrum meeting, sprint review meeting, sprint planning meeting, ...) \n\n +  scrum is part of the agile project management and has the goal to adapt very fast to changes (ex. if the \n     product owner changes his requirements or decides to change a part of the product) and deliver as fast as \n     possible a product \n\n‚Ä¢ advantages and disadvantages of SCRUM\n\n    + flexibility and adaptively\n       if you have an environment where you cant easily define requirements and possible solutions before \n       starting the project and the implementation of it SCRUM is your best approach. It is very flexible as it can \n      change a part of the project without \"altering\" or \"destroying\" the complete project\n\n    + innovation and creativity\n       SCRUM encourages each member¬¥s innovation and creativity. Every team is assigned tasks and it is up to \n       them to come up with a good solution or imlementation. At every SCRUM meeting feedback is given, so \n       now the product can change again and again and again until it is almost perfect. Through the whole \n       process no one gives anybody a a specific way to solve his task but everyone has to come up with their \n      own idea, so the product that is delivered is way more innovative than a product that would have been \n      delivered if there were explicit specifications and specific instructions\n\n    - not appropriate for plan driven approach projects\n       SCRUM does not use a specific strategy or a specific approach to develop the product but rather takes \n       customers feedback and the findings of the scrum meetingds into concideration. This mwthod is not \n       suitable for some products/projects\n\n   - the whole project can fail if even one team member is not commited or decides to leave the company\n      As SCRUM heavily relies on cooperation, if one team member, does not finidh his task in time, the whole  \n      project has to be delayed\n\n‚Ä¢ SCRUM vs spiral model\n\n  + SCRUM is better for smaller projects while spiral model is better suitted for large ones\n\n + the Spiral Model doesn't specify the length of an iteration and the number of iterations, whether SCRUM has \n    a detailed time management plan\n\n   ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622840,
      "meta": {},
      "text": "The core essence of SCRUM is that it is a framework for Software Development projects that is based on adaptive and incremental development. Requirements and solutions evolve over the course of multiple cycles.\n\nAdvantages:\nBecause SCRUM is based on several sprints with constant re-evaluations of the current state of the latest product increment and also the underlying requirements, it is highly adaptable to change. I.e. if there are new legal reforms on privacy in the middle of a sprint, new policies can be integrated in an updated version of the product backlog of the next sprint. In the Spiral model it is attempted to anticipate potential risks beforehand and implement flexibly where changes might occur in the future. \n\nSCRUM teams are mostly self-organizing, so team members are needed to frequently inform others about their work. Because of that they are exposed to feedback from co-workers, stakeholders and the product owner. So it is basically impossible for any of the developers to run into a dead end. I.e. it usually goes unnoticed if a developer is using dependencies that require a different version of a framework until problems arise when being merged. In SCRUM problems like that can be recognized faster. In the Spiral Model the same is possible by prototype verification.\n\nDisadvantages:\n\nSCRUM is time-consuming. Because managing an agile process is difficult, a lot of time is spent on the discussion of solutions and planning. All sprints are accompanied by many meetings and administrative efforts, which can be a rabbit hole into massive time waste. The spiral model is more straight-forward, everything is planned out in the first 4 iterations, afterwards developers spend more time working on the actual solution. \n\nSCRUM is complex and not everyone is familiar with best practices. I.e. if a team has been using a non-agile model for a long time and developed an efficient workflow it might be seen as unnecessary to change and developers will be stuck in their ways. The same thing can be said about the Spiral Model.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644645,
      "meta": {},
      "text": "Scrum is a framework for effective collaborations among teams working on complex products and is a type of agile technology that consists of meetings, roles, and tools to help teams working on complex projects collaborate and better structure and manage their workload. There are different roles in a Scrum team like Scrum master(facilator, keeps scrum process) and developers(team memebrs) and scrum works with sprints, which are time-boxes (up to one month) during which the team creates a potentially shippable product increment. After every sprint, the new sprint with other backlog items starts and during sprints there are different meetings like daily meetings or review meeting after sprints, and so it adapts changes and a good way for agile software programming.\nAdvantages:\n1-)Scrum adopts feedback from customers and stakeholders. So in sprints one can adapt these changes by adding them to backlog. As an example we can give our bumpers game exercises, where we added new things to our backlog list, and improved our code by every sprint. In spiral model customer can also request changes during process. For both an advantage.\n2-)Large projects are divided into easily manageable sprints. So divide and conquer. It is a huge advantage which is known by everybody. Instead of coding the whole project once, we start by parts and see resuklts after every sprint(example: again see bumpers game. That is way better than in spiral model, since in spiral model, it takes a lot of time and costs higher for every iteration.\nDisadvantages:\n1-)Daily meetings can frustrate team members. For some people making every day a meeting can be boring and effect their motivation. That is not a problem in spiral model, since it does not have daily meetings.\n2-)Adopting the Scrum framework in large teams is challenging. Because it will be hard to talk efficently in meetings and also the team cooperation will be harder. A team with 5 experienced members could work more efiicently then 50 probably(example: see EIST team project). Not such a big problem in spiral model, since one of the biggest reasons of these problem ar the meetings in scrum.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644816,
      "meta": {},
      "text": " SCRUM is an agile management framework that assumes that software projects in particular cannot be planned in detail in advance due to their complexity. Therefore, the development and planning follows the principle of gradual refinement. For this purpose, only goals that have to be achieved are set in advance. How this goal is achieved is up to the team to a certain extent. As a result of this empirical process, the working methods and products are regularly assessed, reflected upon and adjusted in order to continuously improve the team and its approach. The process contains the following steps: Creating a product backlog, Transforming it into customized sprint backlogs, sprints (duration 2-4 weeks) where those tasks get finished and daily scums (update meetings) After every sprint the team created a potentially shippable product increment. Scrum has three different role-types: \n1. Product owner 2. Scrum master 3. Scrum team members \nOne advantage is that large and very complex software projects get divided into manageable sprints with clear goals so that the team does not lose the overview over the many tasks and things. An other advantage is that the framework allows to adapt to changed requirements/problems very quick as there are no complex decision paths. This is very important because software development isn't a linear process which requires quick adaption provided by SCRUM. On the other side must not be forgotten that SCRUM requires extensive training before a beneficial usage (-> expensive courses) and there must also be a restructuring of the company before using SCRUM because with a fixed hierarchy and long decision paths there is no way for using SCRUM. \nIt can be said that also the spiral model breaks a huge project into more manageable pieces but they are much bigger and require a bigger duration which makes them less predictable. There are iterations in the spiral model but they aren't as suited to change adaption because the execution of the iteration is ordered like a waterfall. Spiral method also requires knowledge about iterative approaches but not as much as SCRUM (not as expensive). The spiral model it doesn't need a breakdown of the common decision paths in company -> good, less expensive. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644962,
      "meta": {},
      "text": "Scrum is a way of software development that uses interruption and a cyclical structure to ensure a continuous growth of the project. Scrum follows an agile way if software development where changes can be easily integrated into the project. \n\nAn advantage of scrum is that is is highly flexible in that sense that one can add major changes to the existing project. While change is always a disruption in the plan of actions, scrum uses the scrum meetings to evaluate the existing problems and tasks that are left. If the task is not done yet, one can put that to the next sprint and work on that the next time. When a project needs to another implementation of the interface because the initial model is not compatible with the backend. Therefore, the next sprint is focused on integrating the frontend to the backend. \n\nAnother advantage of scrum is that it divides the large project into managable tasks that can be realized by sprints. Therefore, the whole project is completed more efficiently and can be easily realized by the whole team. An example for that is that the EIST team project is also splitted up by sprint sessions where the group has to reevaluate what has to be done and what is still important to work on.\n\nA disadvantage for that is that due to the sprint structure the timing of a project can be undefined and the agility can lead to a project that can be longer than expected. In the Spiral model, the never ending todos can also be a problem.\n\nAnother disadvantage is that the daily scrum meetings can be inefficient in that sense that they do not contribute to the progress if the project is huge and the progress might be long to integrate into the system.\nIn the spiral model, the daily meetings are not planned or mentioned to be necessary for the model.\n  ",
      "score": 35.4,
      "language": "ENGLISH"
    },
    {
      "id": 5619777,
      "meta": {},
      "text": "SCRUM is a methode for agile software development which is based on incremental and iterative\ndevelopment. The requirements of the project evolve flexibilie through the whole time and different teams can work crossover. A scrum team consitis of one scrum master, one product owner and 5-7 developers and all parties talk directly to each other.\n\nAdvantage/Disadvantage:\n+ You can react fast to changes because of the short sprints and direct feedback. A student who gets directly feedback to his presentation can change immedatliy his presentation stil and slides. If you wait a longer the student doesn't know that something is wrong and cares on. The spiral model can't react that fast because you have to wait till the next iteartion when you are not in the devlopment phase.\n+ Costs of process and management are minimized because the team can react directly to problems. Compare it to washing cloths. If you wash your dirty shorts immedatliy the change to get the tomate spot is higher. If you what longer yo may have to go to a cleaning company. This costs more. The costs of the spiral model are usally high.\n- Does not work in large teams. The daily meetings meetings would be tough if the team consist e.g. of 10 developers. This size would be equal to a small class. Daily meetings would be like the situation where every student has to hold a presentation before the class and everybody has to give their feedback. This would take hours. The spiral model works for bigger sized teams\n- If a member leaves it affects the project very badly because you planed the sprint with this member. This member got his own task. You can't complete the sprint without this member. This is like playing soccer and one member gets the red card. With 10 instead 11 playes it is much harder to win. The spiral model handles this better because it dosn't plan with each member directly.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5619899,
      "meta": {},
      "text": "Advantages and Disadvantages of Scrum\n\nScrum core essence:\nScrum is an agile organization method that helps to manage software and product development\nwith rapidly changing requirements\n\nAdvantages:\n-you can get stakeholders‚Äô feedback right after the sprint is over, so further requirements can be implemented as quickly as possible: After each sprint you can have a sprint review and evaluate what went good and what went bad and therefore adapt your development for the next sprint and what futher reqirement the product owner considers to be relevant.\n-repeated testing contributes to the high quality of the product developed, which increases customer satisfaction: e.g. due to testing in each sprint you can handle potential bugs much earlier.\n   \nDisadvantages:\n- It implies the change in the organizational structure: The traditional organizational structure is hierarchical, while Agile in general and Scrum in particular with its self-organizing teams and lots of close communication and interaction between the participants of the project involve breaking organizational barriers and establishing relations of partnership. \n- It doesn‚Äôt provide overall detailed estimation of a project‚Äôs scope, budget and time: Scrum provides detailed estimates only for one sprint. It‚Äôs focused on continuous improvement, consequently, it may happen that the project runs over time or exceeds budget. Also, it involves the shift from project deadlines to personal deadlines, i.e. delivering certain priority tasks, which may seem disadvantageous to those who stick to the traditional approach\n\nComparison to spiral model:\n- in the spiral model you have no sprints so it is harder to get feedback of the stakeholders during the development process\n- In spiral development there is no constant testing because there is a testing phase which makes it harder to solve issues later on\n- The spiral model also needs a organizational adaption but it is more hierarchical than scrum\n- Due to the clearer segmentation of the spiral model you also have a better overview over the  scope, budget and time of the project",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621138,
      "meta": {},
      "text": "Scrum is one of the Agile methodology frameworks, where teams working in a project deliver a finished product each sprint, which can last from two to four weeks. After each sprint, the product is reviewed and feedback is given, then the next sprint starts. The iterative approach of the scrum methodology helps improve the product to deliver on each iteration and to give m√°ximum value to the end-user. \n\nAdvantages \n1. It is flexible and adaptable: The methodology allows for changes to be made in the requirements without affecting the overall process of the project. \n2. Continuous feedback: Scrum methodology requires of daily check-ins. Having continuous follow up on a project can ensure it will keep improving over time. \n\nDisadvantages \n1. Difficulty to adapt: It is difficult for teams that work regularly with traditional methods to adapt and adjust to the new scrum methodology. \n2. Only suitable for small teams: Scrum methodology is better suited for teams of less than 9 members. Having larger teams can be an issue, since it makes the communication harder and can delay the decisi√≥n-making process. SCRUM can be implemented on small or large projects.\n\nComparison between Spiral Model and SCRUM \n-When applying the Spiral Model additional functionality or changes can be done at a later stage, as well as with SCRUM that is flexible and adaptable. \n\n-Just as SCRUM, the Spiral Model facilitates feedback from the team and customers, to make changes before the product is fully built. \n\n-As with SCRUM, it may be hard to implement the Spiral Model because it is a very complex methodology compared where protocols must be followed closely and strictly. \n\n-While SCRUM can be implemented in small or large projects, the Spiral Model is best applicable for larger projects which can be expensive and where risk management is needed. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621397,
      "meta": {},
      "text": "A Scrum team is proposed for a team of ten members who deliver work iterative and incremental, each iteration is called a Sprint. in Scrum, a Product Backlog is used to manage the requirements of the product and rank them in order of importance.\nIn a Sprint, the Scrum team selects requirements from the Product Backlog for development by planning, which we call the Sprint backlog.\nCoordination is done through short daily situational meetings, like \"tied scrums\" in rugby.\nAt the end of each iteration, the Scrum team submits the potential deliverable increments. At the end of the Sprint, the team does a Sprint Review and a Sprint Retrospective for continuous improvement. Then the next sprint is performed.\n\nOne of the advantages of scrum is the ability to quickly adapt to changes in requirements and release on time. At the beginning of the scrum process, a product backlog is used to manage the product requirements. In each sprint, there are multiple short and abrupt schedules. By using scrum effectively, you can plan as many times as needed as the project progresses. And to ensure those customer requirements are met and released on time.\nAnother advantage of scrum is that it improves product quality.\nAt the end of each sprint, the team conducts a Sprint Review with the Stakeholders to review the current results and adjust the plan, which is an opportunity to exchange information with each other. Finally, the team conducts a Sprint Retrospective for continuous improvement.\n\n\nscrum has its disadvantages. Just because scrum can quickly adapt to changes in the project process, daily scrum can make the team feel more stressed and take up some work time during the start-up phase.\nAlso, scrum requires a high level of technical skills and collaboration among team members, which can cause a lot of stress if they are not very receptive to change.\nCompared to the spiral model, the spiral model is more suitable for \"high complexity, high risk, large scale\" projects. The spiral model emphasizes risk, and the four phases of requirements, planning, risk analysis, prototyping, and customer evaluation are repeated over and over again. Incremental releases are made continuously, and each prototype or product is constantly evaluated for risk, so that the plan, requirements, and design can be adjusted in an iterative manner to finalize the product.\n\n\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 5621880,
      "meta": {},
      "text": "SCRUM is a software lifecycle model that is focused on being adaptable to change. The basic principle is that a small team of developers works on a product in small iterations (sprints) where in every sprint some of the features that the product is supposed to have are implemented. To ensure that the product comes out as wanted there is a lot of communication between developers (daily meetings, sprint reviews) which is managed by the \"scrum master\" and with the customer which is managed by a so called \"product owner\".\n\nAdvantages:\n- SCRUM is very flexible in case of changing requirements. For example if during development the client decides he needs a feature of the product it can just be added to the backlog of things to implement in the future (product backlog).\n- SCRUM ensures that the product fits the clients requirements as well as possible. As there is a lot of communication with the customer (who is included more into the development process) misunderstandings can be eliminated quickly. For example developers might have misunderstood a requested feature from the client. This misunderstanding can be found right after the sprint in which the feature was implemented (so very quickly)\nDisadvantages:\n- SCRUM is not easily scalable to large projects. It relies on communication between all entities which is hard to achieve in very large scale projects. For example huge software companies like google are too big to run on SCRUM on the large scale.\n- SCRUM is effectively useless for very short term projects (a few weeks long) as 1 sprint would already cover the whole project (there would only be communication overhead). For example when implementing an interface to a simple algorithm the project might only take a few days.\n\nComparison:\n- The Spiral Model can adapt to some change but only if it is rare\n- It does not rely heavily on communication with the customer so misunderstandings are discovered late\n- There is no restriction on scaling up the spiral model as it does not rely heavily on communication\n- For very short term projects it is unsuitable as there are too many iterations",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5621884,
      "meta": {},
      "text": "Scrum is a technique which can be applied to products whose production process change often to achieve better efficiency. The whole scrum process contains product backlog, sprint planning, sprint backlog, daily scrum, increment, sprint review and sprint retrospective. The product owner decides what should be done, the scrum master keeps the scrum process in control, and the scrum team members produce the product. \nThe advantages of scrum are obvious. Firstly, scrum can help teams complete project deliverables quickly and efficiently because large projects are divided into easily manageable sprints, so that the achievements of each sprint and what should be done next are clear to every member in the team, which helps the team to keep everything in order and complete the product on time. Secondly, because the whole production is divided into many parts, if the customer's requirements change or the development technology is updated, the team can react quickly to these changes without having to lag the production process. The spiral model is a little inferior to the scrum at this point, as the spiral model as an iterative model does not allow change within an activity. \nBut like every framework, scrum also has few disadvantages. For example, due to the lack of a definite end-date, scrum often leads to scope creep thus derailing the entire production. Spiral model kind of has the similar disadvantage: An excessive number of iterations can increase development costs and delay commit times. Besides, the project is very likely to fail if individuals aren't very committed or cooperative. Because most of the projects are done together without a clear work-division, if someone makes a mistake, it is difficult to find out who should really be responsible for it, and one individual's negative emotions can easily affect others. \n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 5622816,
      "meta": {},
      "text": "SCRUM is one of the methodologies of Agile, which helps people address complex adaptive problems iteratively. SCRUM can be divided into small sprints, at the end of which there should be shippable product increment developed. Product owner, scrum master and scrum team members play different roles in this model.\n\nAdvantages:\n- High Adaptivity. Due to shorter sprint, it is possible to give feedbacks and modify the product backlog if necessary. For example, when developing software for e-commerce, requirements can vary from time to time, so it is almost impossible to clearly define the requirements at the beginning. Unlike SCRUM, the spiral model only involves customers at the very beginning, so that it might not be possible to add new requirements.\n\n- Fast Deliverability. After each sprint, a shippable product increment needs to be developed. For example, in the context of web development, in early sprints, a demo website can be built already, based on which the customers can discuss which functionalities should be added in the further sprints. Unlike SCRUM, the spiral model only shows the product increments with prototypes and detailed documentations.\n\nDisadvantages:\n- Lack of Risk Handling. Unlike spiral model, in each sprint of SCRUM, the possible risks are not analyzed, e.g. time costs. For example, when implementing a search functionality, there are lots of algorithms available. Some of them are easy to implement and efficient enough for the customer. However, lack of risk analysis, the SCRUM may not realize it and chooses a more complex one and make it prone to failure in the end due to time limitation. On the opposite, in the spiral model, prototypes are made to help analyze such potential risks.\n\n- Not suitable for large Team. In each sprint, there are even daily sprint meetings within the team, which may not be quite practical for a large team. For example, when developing an aerospace system, there can be many people from different disciplines involved. The spiral model can be suitable in this case, because each iteration is much longer, and more aspects can be involved at the stage of risk analysis of every iteration.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5623164,
      "meta": {},
      "text": "Scrum ist ein Model um mit Ver√§nderungen w√§hrend des Prozesses zu arbeiten und gew√§hrt ein hohes Riskmanagement durch Kommunikation und Feedback. Scrum besteht aus mehreren Sprints, in welchen intensiv gearbeitet wird. Danach folgt der Daily Scrum, eine Nachbesprechung.\n\nEin Nachteil von Scrum ist, dass es nicht von jedem Unternehmen gut umsetzbar ist. Zum Beispiel k√∂nnte es bei kleineren Unternehmen dazu kommen, dass mehr Zeit verloren anstatt gewonnen wird, da sie nicht gen√ºgend Kapazit√§t haben f√ºr eine korrekte Aufgabenteilung. Ein Weiterer Nachteil ist, dass nicht alle Mitglieder die gleiche Menge an Verantwortung √ºbernehmen wollen und nicht selbstorganisiert arbeiten k√∂nnen, da bei Scrum diese Werte sehr wichtig sind. Der Scrum Master ist haupts√§chlich nur am Ende eines Sprints da und nicht w√§hrenddessen, um Aufgaben anzuschauen und Fragen zu beantworten. Er ist gleichzustellen zu einer F√ºhrungskraft, aber keinem Team Mitglied. Deshalb muss Selbstst√§ndigkeit vorausgesetzt sein.\n\nEin Vorteil ist, dass eine hohe Transparenz durch regelm√§√üige Meetings geboten wird und man Aufgaben unterschiedlich gewichten kann. Verbunden damit kann man auch Team Mitglieder auf andere Teams aufteilen, falls eine Gruppe zu viel Arbeit hat. Ein Weiterer Vorteil ist, dass Probleme schneller auffallen und behoben werden k√∂nnen im Sprint. \n\nSowohl das Spiral Model als auch Scum wird in mehrere Arbeitsschritte aufgeteilt. Auch k√∂nnen bei beiden Modellen Priorit√§ten gesetzt werden, der Unterschied liegt jedoch dabei, dass bei Scrum Produkte im Backlog mit Priorit√§ten gekennzeichnet werden und bei dem Spiral Model Risiken eine Priorit√§t bekommen. F√ºr das Spiral Model plant mal einmalig die ganzen Prozesse die durchlaufen werden m√ºssen, w√§hrend bei Scrum nur eine Wiederholung geplant wird am Anfang und nur daran gearbeitet wird bis zum n√§chsten Schritt. Beim Spiral Model wird nach einer nicht gemeisterten Risk das Projekt weggeworfen, wohingegen bei Scrum versucht wird es zu beheben. Zusammenfassend kann man also sagen, dass das Spiral Model geplant wird und Scrum eher empirisch angegangen wird. \n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 5627400,
      "meta": {},
      "text": "SCRUM is an alternative model for Software development. It tries to fix the flaws of the iterative and linear methods commonly used before. It allows for flexibility in development. In its essence SCRUM is a tasklist, which gets worked off iteratively each timeframe, also called sprint. But it will get added to, if tasks couldn't get fully finished. Before each Sprint the Sprint Backlg is chosen based on priority and usefulness to the program. Each Sprint produces a working product imcrement, which can get added to the program. After each Sprint a review meeting concerning the sprint, is held, to clear up risks and impedements.\n\nAn Advantage is that it is flexible, since it allows for queue reordering. When developers run into problems and can't finish their tasks, the Task will be readded to the Productbacklog, so it can actually be finished another time. And due to that, they are not forced to deliver unfinished products. \nAnother Advantage is that the product increments are working updates. Each Sprint is designed to produce a working product increment. So each iteration can be trusted to function. \nA Disadvantage is that planning is more difficult. SCRUM only includes a rough timeline and can be extended if the estimates of the developers are incorrect. Due to that planning for added functional requirements can become unreliable.\nAnother disadvantage is that development time can be extended over the neccessary time. Multiple research papers show that tasks extend until the given deadline. If a certain smaller task could be finished in a short timeframe, it could fill the entire Sprint. Development could be more cost efficient.\n\nThe Spiral model basically gives each of the 9 software development step, like software requirements, a iteration consisting of 4 steps, goal and constraint determination, alternative consideration, actual development and planning the next iteration. \nA huge flaw is that spiral model still relies on a queue, which can not be reordered if needed. Each of the development steps have to be finished before the next. Meanwhile SCRUM allows for change between development steps if it is required.\nAnother problem is that up until the the project is finished there will be no working product. It is high risk development. Unlike SCRUM, which delivers a working increment each sprint.\nHowever planning is easier, since the 9 steps are clearly defined. Unlike in SCRUM, where jumping between the steps is possible.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644329,
      "meta": {},
      "text": "As already seen in the lecture Scrum is a technique that\ndeals with interruptions that is change, as it controls and manages software and product development\nwith rapidly changing requirements. It improves risk management by improving communication,\ncooperation and the delivery of product increments as its result.\nGiven its definition, Scrum, as a model of agile software development, of course offers the advantage that changes can be realised very easily, as the daily scrums offer the posibility for each and every member to get involved and thereby encourages the overall consensus if e.g. changes have to be made. Meanwhile, as an enhancement of the Linaer model, the Spiral model also offers a lot of dialogue with its iterations, but still cannot cope with the standard offerd by Scrum and its high frequency of meetings and sprints.  \nA further advantage of Scrum is that the team members communicate more with one another and therefore have a great cross-team collaboration. The mentioned high cohesion between the team members develops as of the regular meetings and the much needed dialogue in their meetings and retrospectives. \nA side effeect of the two previously mentioned advantages also is the overall maximization of the information spread. The Spiral model leads to a similar effect, as it has the iterations where e,.g. the risks and later the results are discussed and evalated, but again (with this aspect) it can be seen as inferior to Scrum, as Scrum has no limited amount of Iterations/tasks.\nOn the other hand however Scrum also has some disadvantages. Two examples herefore would be that it may require major transformations within the organization in order to provide the requirements necessary and that there is a greater pressure on team members. They have to spend a large amount of time on project development and the high rate of meetings also increases the stress to have everything ready as planned.\nComparing these two arguments with the Spiral model, it can be said, that firstly the organisational-wise changes with the Spiral model are not as extensive as with Scrum and thus is less 'expensive/lavish'. Secondly the members of the teams have more time to work during the iteration and therefore also have a somewhat lower stress level/pressure on them, compared to the previously mentioned Scrum methodology.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 5644665,
      "meta": {},
      "text": "Scrum is an agile software development technique that allows for the creation of software in an environment in which changes occur again and again. The requirements can be adjusted constantly and the different parts of software development are not executed linearly but rather in parallel. You are working in so-called Sprints, time boxes in which the development team is working on all facets of the product in order to provide a potentially shippable product increment at the end of the sprint.\n\nAdvantages:\n\nAfter only a short period of time, a potentially shippable product increment is available which can ideally already be used by the client. It has only limited functionality but this functionality was already tested and delivered to the customer after such a short period of time. The first increment of the software WhatsApp may only allow users to send text messages, but this functionality can already be used and works. Spiral model: a usable product is only available after the nine iterations.\n\nConstantly changing environments can be handled better. The Product Owner can constantly update the Product Backlog which contains the functional and non-functional requirements of the final product.  Changing interfaces to the OS always need to be taken into account to ensure proper functionality. Spiral model: After first two iterations, changes cannot be taken into account.\n\n\nDisadvantages:\n\nAll tasks of software development have to be executed in each sprint. Testing the implemented functionality for example is necessary for every product increment needs to be included in the time planning. Not testing the software because of time constraint can have catastrophic consequences for the functioning of the software. If newly added functionality is not working, like sending files via WhatsApp, the user is quickly dissatisfied with the app. Spiral model: Separate iteration for each big Software development task (like testing) .\n\nScrum is only suited for smaller teams. The success of the Scrum technique is highly dependent on intensive communication between the team members since all steps need to be coordinated precisely. This is very hard in larger teams. The development team of WhatsApp comprises hundreds of programmers and the coordination of those is very hard. Spiral model: Better applicable to larger teams.",
      "score": 100,
      "language": "ENGLISH"
    }
  ],
  "baseline_info": {
    "model": "azure_openai_gpt-4o",
    "approach": "basic",
    "generated_at": "2025-08-09T20:30:51.545005",
    "description": "Baseline feedbacks generated by GPT-4o using basic approach",
    "submission_ids_used": [
      5621608,
      5640347,
      5620178,
      5622098,
      5644820,
      5644946,
      5644634,
      5621339,
      5622301,
      5645019
    ]
  }
}