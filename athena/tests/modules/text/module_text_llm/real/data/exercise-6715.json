{
  "id": 6715,
  "course_id": 169,
  "title": "H01E01 Change in Software Development (SS22)",
  "type": "text",
  "max_points": 6,
  "bonus_points": 0,
  "grading_instructions": "If you notice that the student copied **small** parts of the solution from the slides/textbook, don't be too harsh:\n- Tell them to please use their own words next time (we will be more strict). We will however note this down and if it happens again, the student will be excluded from the bonus.\n- A solution that was >= 90 % copied from the internet/slides/textbook gets 0 points\n\n<ins>General Grading Scheme:</ins>\n- up to 2P for the *Explanation of Why Change Occurs*\n- up to 1P for the *Example of Change in Software Development* (due to ambiguity in the problem statement, accept every example for a (general) change and don't be too strict here)\n- up to 3P for the *Discussion of the three Categories*. (1P per category)\n\n\n<ins>General Rules</ins>: \n- If the student provides more examples than necessary, the worst one counts. (You can still provide feedback, but under no circumstances publish the evaluation guidelines)\n- The 250 word limit is a soft limit, the hard limit is at 500 words. In such cases, please assess the submission with 0 points and reference to the 250 word limit. **DO NOT** communicate the 500 word limit to the students!",
  "problem_statement": "Explain why change happens in software development and provide an example for change in the real world.\n\nAdditionally, explain the three areas of requirements changes, technology changes, and organizational changes with the help of examples.\n\n*Requirement: Use your own words and do not just copy the lecture slides nor internet sources! Limit yourself to around 250 words*",
  "example_solution": "- **Change in software development** can happen because multiple groups are involved in the development. The client may have new demands for the requirements. New or updates to existing technologies may require adaptation of existing product increments. The developing organisation may also go through changes due to new laws, or changing distribution of the workforce.\n- **An example** would be an ongoing pandemic; requiring changes in the workflow of the development team and forcing the client to raise the targeted availability of the end product.\n- **Requirements change** throughout the project, e.g. the customer changes their mind or requirement turns out to be unfeasible\n    - Example 1: during the construction of the Berlin Airport, the requirement of a handling facility for large aircrafts emerged, which led to additional costs and resources\n    - Example 2: the EIST instructors change their minds about how the player can steer their car (using a mouse is just too boring) and now require you to implement voice commands to steer the player’s car instead\n- **Technologies change**, e.g. new releases, updates\n    - Example 1: since the first release of the Bluetooth specification in 1999, the requirements of mobile devices changed. Manufacturers started to incorporate Bluetooth in their devices, which lead to the expectation, that all mobile devices incorporate the Bluetooth specification in order to exchange data via short distances\n    - Example 2: since updating Bumpers to JDK 10, the AudioPlayer is outdated and has to be refactored. For instance, the AudioPlayer can only play .au and .wav files, but should also support .mp3 files\n- **Organizational changes**, e.g. laws, recruitment\n    - Example 1: WhatsApp was bought by Facebook, therefore new company legal requirements and processes had to be incorporated or replaced the old ones\n    - Example 2: the EIST instructors decide to add 10 more tutor groups and now all the students have to be re-distributed among the tutor groups\n",
  "meta": {},
  "submissions": [
    {
      "id": 1262589,
      "meta": {},
      "text": "Software development is an exercise in solving real world problems. Because the real world continues to change daily in terms of technology, economy, and politics, it follows that the solutions created to solve the problems must also evolve and change to remain applicable.\n\nThe ongoing coronavirus pandemic is exemplary in illustrating this point. Countermeasures taken by governing bodies worldwide compelled people to alter a significant portion of their lifestyle, which created interest in new markets. The teleconference software Zoom achieved significant growth as a result of widespread use in businesses and other professional environments, as they found the alternatives offered by the likes of Google or Skype had features that were less than sufficient.\n\nChanging the requirements may be necessary when the original version turns out to be infeasible or ill suited to the actual needs of the customer. This may be due to a lack of funds for an ambitious project, technological impossibilities, or perhaps concerns regarding the legality of the project.\n\nOrganisational changes are relevant when for example, new management or new employees are hired to work on the software. This may require the team to adapt to their individual habits, such as preferred work hours, coding style, version control and so on. In order to stay functional the team must then adapt to this change and find a compromise that everyone can accept and supports productivity.\n\nChanges in technology will naturally influence software development significantly. Using the introduction of commercially viable electric cars as an example, this then opens up a new market for software compatible with this technology. Furthermore the use of artificial intelligence can be seen in this field, which is a result of the progress in research and testing.",
      "score": 91.7,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 126258901,
          "description": "The student provides a clear explanation of why change occurs in software development, linking it to the continuous changes in the real world such as technology, economy, and politics. This understanding is well articulated and relevant.",
          "title": "Explanation of Why Change Occurs",
          "index_start": 68,
          "index_end": 273,
          "credits": 2.0,
          "meta": {}
        },
        {
          "id": 126258902,
          "description": "The student provides a relevant example of change in the real world, discussing the coronavirus pandemic and its impact on software development, specifically referencing teleconference software like Zoom. This example is well chosen and explained.",
          "title": "Example of Change in Software Development",
          "index_start": 275,
          "index_end": 765,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126258903,
          "description": "The student discusses requirements changes effectively, highlighting reasons such as infeasibility, lack of funds, and legal concerns. This explanation is clear and provides a comprehensive understanding of the topic.",
          "title": "Discussion of Requirements Changes",
          "index_start": 767,
          "index_end": 1064,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126258904,
          "description": "The student identifies organizational changes with examples like new management or hiring new employees, and emphasizes the need for adaptation. This explanation is clear and relevant to the topic.",
          "title": "Discussion of Organizational Changes",
          "index_start": 1066,
          "index_end": 1462,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126258905,
          "description": "The student discusses technology changes and provides examples such as the introduction of electric cars and artificial intelligence. This explanation is relevant and demonstrates an understanding of how technology can influence software development.",
          "title": "Discussion of Technology Changes",
          "index_start": 1464,
          "index_end": 1832,
          "credits": 1.0,
          "meta": {}
        }
      ]
    },
    {
      "id": 1264912,
      "meta": {},
      "text": "There are several reasons for changes in software development. First of all, there are unclear requirements and they change when they become clearer. Secondly. the enviroment for using the software changes. Finally there are additional needs by the customer that lead to changes in software development.\n\nThe electric car by Volkswagen the ID 4 shows the changes in software development. \nThe over air up date is a special feature compared to older car models. The requirements have changed for this feature. The car should work as usual without interruption when the car updates over the air(safety issue, better user experience). Concerning the technology changes, the module for receiving the over the air update packages should have high data flow capacity. As regard the organization changes, a new firm was founded by Volkswagen (Cariad) which specifically deals with software development for its cars as part of solving the software problems. \n\nAnother example is the Remote Maintenance system for medical equipment by Siemens Healithineers. One single maintenace center to which all delivered medical equipment are connected, controls the entire system. The requirements changed as more maintenance is performed remotely by configuring the software from the maintenance center or by identifying the software bugs so that the usage rate stays at a high level. As it concerns medical equipment with sensitive data from patients, the technology should be secure, safe and fast. The new systems which involves more software development also brings changes in the organization. More software developers working from remote maintenance center are needed rather than technicians working directly at the site.",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 126491201,
          "description": "Your explanation of why change occurs in software development is clear. You mentioned unclear requirements, environmental changes, and additional customer needs, which are all valid reasons for change. To improve, consider elaborating more on how these factors lead to changes during the software development lifecycle.",
          "title": "Explanation of Why Change Occurs",
          "index_start": 207,
          "index_end": 303,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 126491202,
          "description": "The example of Volkswagen's ID 4 electric car with over-the-air updates is a relevant example of change in software development. It highlights how technological advancements influence the need for software updates. Good job on providing a real-world example that ties back to your explanation.",
          "title": "Example of Change in Software Development",
          "index_start": 305,
          "index_end": 631,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126491203,
          "description": "Your discussion on requirements changes is well-explained, especially with the example of Volkswagen's ID 4 car needing uninterrupted updates. You have effectively illustrated how new requirements emerge and evolve during development. However, try to clarify the connection between examples and the broader concept of requirements changes.",
          "title": "Requirements Changes",
          "index_start": 461,
          "index_end": 631,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126491204,
          "description": "You successfully identified technology changes with the need for high data flow capacity for over-the-air updates. Your example is apt and demonstrates how advancements in data transmission technology can lead to software changes. Consider expanding on the implications of these changes on the overall system design.",
          "title": "Technology Changes",
          "index_start": 632,
          "index_end": 761,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126491205,
          "description": "Your submission provides a relevant example of organizational changes with Volkswagen founding Cariad to address software issues. This illustrates how companies adapt to changing demands by restructuring. To improve, you could further discuss how organizational changes can impact team dynamics and workflow.",
          "title": "Organizational Changes",
          "index_start": 762,
          "index_end": 949,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126491206,
          "description": "The example of Siemens Healthineers' Remote Maintenance system is insightful. It highlights changes in requirements, technology, and organization, showing how remote maintenance has shifted the focus from on-site technicians to remote software developers. This example complements your main discussion, but ensure primary examples are directly tied to the categories discussed.",
          "title": "Additional Example",
          "index_start": 952,
          "index_end": 1709,
          "credits": 0.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 1265409,
      "meta": {},
      "text": "Change in Software Development is as normal as in real life. It might occur due to a better understanding of the problem, the stakeholder needs, technology changes due to innovations or feasibility, general feasibility issues,  cost induced changes etc. \n\nRequirement Changes: Occurs within software development activities. Mainly due to changes/ adjustments in the requirements of users. Additionally due to re-structuring of customer organization, the availability of new technologies or a depend understanding of stakeholder needs.\n\ne.g. Software Development project for a client. Clients requirements proposal is not fully finished yet and adjustments occur due to Input of Stakeholders. \n\n Technology Changes: Changes in Technology might occur within the Development process as well. For instance in a software implementation project, difficulties in the compatibility of legacy systems and the software developments might occur. Additionally, innovations in technology might lead to changes in already developed systems, especially in long-term implementation / development projects. \n\ne.g. SAP implementation in a company with complex legacy Structures\n\nOrganisational changes: Changes in a companys structure might effect the requirements due to an increase or decrease of requirements  resulting from a change in perspective, cost-cutting, budget expending and so. \n\ne.g. New Departmennt Business Development decides to needs enhancement of  Software for Sales business. Thus, new add-ons in Software need to be considered. ",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 126540901,
          "description": "Your explanation of why change occurs in software development is clear and includes various reasons such as better understanding of the problem, stakeholder needs, and technology changes. However, try to elaborate more on the impact of these changes and how they integrate into the development process.",
          "title": "Explanation of Why Change Occurs",
          "index_start": 61,
          "index_end": 253,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 126540902,
          "description": "The example you provided for change in software development is a bit vague. Try to offer a specific scenario where a real-world event caused a change in a software project, such as a regulatory change impacting software design or a market shift requiring new features.",
          "title": "Example of Change",
          "index_start": 536,
          "index_end": 691,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126540903,
          "description": "Your explanation of requirements change is generally correct. However, the example provided lacks depth. It would be helpful to include a specific case study or scenario illustrating how requirement changes impacted a project.",
          "title": "Requirements Change",
          "index_start": 256,
          "index_end": 691,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126540904,
          "description": "The discussion on technology changes is well-articulated, mentioning both compatibility with legacy systems and innovations in technology. Your example is relevant, but further elaboration on how these changes were managed or the outcomes would improve your submission.",
          "title": "Technology Changes",
          "index_start": 695,
          "index_end": 1159,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126540905,
          "description": "Your explanation of organizational changes affecting software requirements is good, but the example provided is somewhat simplistic. Consider discussing specific organizational shifts, such as mergers or policy changes, and their impacts on software projects.",
          "title": "Organizational Changes",
          "index_start": 1161,
          "index_end": 1532,
          "credits": 0.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 1265422,
      "meta": {},
      "text": "Software development is constantly changing because developers are adapting to changing parameters and developments. For example, the possibilities available on Smartphones are improving constantly and this is accompanied by change in users' interests, who calling for new applications to make the best use of this. \n\nRequirements changes: Due to the constantly changing world, the requirements for software change. A good example is the corona crisis. Everything changed in many areas at once, the software developers had to react quickly and adapt the software to these changes. For example, the FaceID of smartphones no longer worked due to the mask requirement. Developers worked at full speed to adapt the software so that it still works despite the mask, but does not create security gaps.\n\nTechnology changes: As a result of the growth of the technology sector, new technologies are naturally being developed or old ones improved and modified. This plays an important role for safety. Security gaps are constantly being found in programs or they arise as result of the development of new technology. It is important that programs such as apps are continuously developed to counterac newly emerging security gaps. This is also important for computers. software developers are constantly changing and improving the technology of operating system. Updates are not only providing exciting new features for users, but also  improve the security of the computer.\n\nOrganizational changes: The structure of a company also changes, a software development company grows or expands and has to reorganize itself accordingly. new employees have to be hired and the hierarchies have to be changed. A move may also be necessary or the equipment may need to be renewed. ",
      "score": 83.3,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 126542201,
          "description": "You provided a clear explanation of why change occurs in software development, highlighting adaptation to changing parameters and developments. This is a good start, but try to elaborate more on the underlying causes, such as shifts in user needs, technological advancements, and organizational dynamics. This will give a more comprehensive understanding.",
          "title": "Explanation of Why Change Occurs",
          "index_start": 0,
          "index_end": 116,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 126542202,
          "description": "The example provided regarding smartphones and changing user interests is relevant and illustrates how change can occur due to evolving user expectations. However, adding more context on how this impacts software development directly would strengthen the example.",
          "title": "Example of Change in Software Development",
          "index_start": 117,
          "index_end": 315,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126542203,
          "description": "Your discussion on requirements changes using the example of the corona crisis is effective in showing how external factors can necessitate changes in software requirements. The FaceID adaptation due to mask requirements is a concrete example, though a more detailed explanation of the process and challenges faced would enrich the discussion.",
          "title": "Requirements Changes",
          "index_start": 318,
          "index_end": 795,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126542204,
          "description": "The explanation of technology changes is well-founded, highlighting the importance of security and continuous updates. However, the examples provided are quite general. Adding specific instances of technology upgrades or developments, such as new programming languages or frameworks, would make this section stronger.",
          "title": "Technology Changes",
          "index_start": 797,
          "index_end": 1463,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126542205,
          "description": "You touched upon organizational changes and the impact on software development, such as hiring new employees and restructuring. This is a good start, but providing a real-world example, like a company merger or acquisition, would give more depth and context to your explanation.",
          "title": "Organizational Changes",
          "index_start": 1465,
          "index_end": 1760,
          "credits": 0.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 1266343,
      "meta": {},
      "text": "Change is an essential characteristic of software development being an undertaking done unisolated within an influential environment of different collaborating teams and stakeholders (customers/project leaders...) all having concurring or mostly differing agendas  & requirements. Influencing factors especially reside within the triangle of budgeting, delivery time and complexity within a software project since these are prone to change itself. Explaining this by the example of a global ERP system introduction taking place in 2020 with the sudden hit of COVID crisis. This had tremendous influence on the software project like changing the collaboration style to remote, limited workforce due to illness/isolation, financial limitations on the customer side due to revenue drop effecting in project postponements and a limitation of ordered customized applications. All this means change in project execution which has to be dealt with in an agile and responsive way.\n\nChanges in requirements which state the requested outcomes for the developed software can occur at any stage. Changes can arise due to misunderstandings of the stated customer's functionality requirements which need to be revised in the beginning or the customer might lately realize the need to extend user access to the software indicating additional requests for user roles and data security management directly affecting the code styling.\n\nTechnological change is the practical usability of new technologies is occurring tremendously fast as can be seen with the progression of cloud computing and the cheaper availability of main memory on computers. This affected the market for ERP software largely since now browser-based cloud applications are providing new opportunities affecting software development projects in terms of skaleability and security requirements.\n\nOrganisational Change refers to changes in the workforce due to staff turnover or changes in the reporting or disciplinary hierarchy of an organisation. This especially affects software projects if high experienced programmers or talented project leaders are quitting as this loss of knowledge might lead to making former solutions unrealizable and negatively affect the on time delivery of the project due to the lack of leadership.\n\n\n\n\n(Adpated from last years own submission)",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 126634301,
          "description": "You provided a solid explanation of why change is a core aspect of software development. By noting the influential environment and differing agendas, you effectively highlighted why change is inevitable. However, it would have been beneficial to discuss how these changes can improve the software or adapt to evolving user needs.",
          "title": "Explanation of Why Change Occurs",
          "index_start": 281,
          "index_end": 447,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 126634302,
          "description": "Your example of the global ERP system introduction during the COVID crisis was an appropriate illustration of how external factors can necessitate change in software development. This example clearly demonstrated the impact of unforeseen events on project management and collaboration.",
          "title": "Example of Change in Software Development",
          "index_start": 448,
          "index_end": 972,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126634303,
          "description": "You effectively described how requirements can change due to misunderstandings or new insights from the customer. The example of extending user access is relevant and clearly explains the direct impact on the software development process.",
          "title": "Requirements Changes",
          "index_start": 974,
          "index_end": 1416,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126634304,
          "description": "Your discussion on technological changes was strong, particularly with the example of cloud computing and its impact on the ERP software market. This shows a good understanding of how technological advancements can reshape software development projects.",
          "title": "Technological Changes",
          "index_start": 1418,
          "index_end": 1846,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126634305,
          "description": "You addressed organizational changes well by focusing on workforce turnover and hierarchy changes. The example involving experienced programmers and project leaders quitting effectively illustrates the potential impact on project delivery.",
          "title": "Organizational Changes",
          "index_start": 1848,
          "index_end": 2281,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126634306,
          "description": "While you adapted content from a previous submission, your explanations were generally original and not directly copied from lecture slides or internet sources. Ensure to continue using your own words for future submissions.",
          "title": "Use of Own Words",
          "index_start": 2001,
          "index_end": 2326,
          "credits": 0.0,
          "meta": {}
        }
      ]
    },
    {
      "id": 1266386,
      "meta": {},
      "text": "As stakeholders learn more about the process and developers learn and improve about things, the change in software development is impreventable. Additionally, by time the business and the client environment changes, which you need to adapt to. As an example I find something really interesting, while searching for the changes in software development that I want to share . In the past you needed years to be able to build an application or a start-up. But right now all you need is a few months! To understand the change in software development, we will talk about the three areas. \n\nFrom the start till the outcome time a work or a product need changes because the market can change or the financial situation as well as the need of modifications can cause new requirements. That is how the requirement changes happen.\n\nOrganizational changes affect the group dynamic with resoulatiınary changing- levels and the approach. It happens due to the change of the type of company coordination, of the employee and their group structure and lastly due to the change of the group section. For example when you change the laptop system from intel to m1-chip , then you make a change in the process and expect every employee to adapt to the new system. \n\nTechnology changes is the change of the process within the 3 levels: invention, innovation and diffusion. Throughout this change, people can analyse the improvement of the technology regards to its topic\nThe invention and the innovation of phones are example of technology changes.\n",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 126638601,
          "description": "Your explanation of why change occurs in software development is somewhat clear. You mention stakeholders learning and adapting, but it could be more detailed by including aspects such as technological advancements and organizational shifts.",
          "title": "Explanation of Why Change Occurs",
          "index_start": 145,
          "index_end": 243,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 126638602,
          "description": "The example provided about the reduction in time needed to build applications is relevant and illustrates the impact of changes in software development. However, it could be more specific by tying it directly to a particular technological or process change.",
          "title": "Example of Change in Software Development",
          "index_start": 244,
          "index_end": 496,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126638603,
          "description": "You mention market and financial changes as drivers for requirements changes, which is a valid point. However, your description could benefit from specific real-world examples to illustrate these changes more effectively.",
          "title": "Requirements Changes",
          "index_start": 585,
          "index_end": 820,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126638604,
          "description": "Your explanation of organizational changes includes relevant points about group dynamics and structure. However, the example of changing to M1-chip hardware is more aligned with technological changes rather than organizational. Consider providing a clearer example of organizational change.",
          "title": "Organizational Changes",
          "index_start": 822,
          "index_end": 1245,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126638605,
          "description": "The explanation of technology changes through invention, innovation, and diffusion is a good framework. However, the example of phone invention and innovation could be more specific. It would be beneficial to explain how these changes directly impact software development.",
          "title": "Technology Changes",
          "index_start": 1248,
          "index_end": 1529,
          "credits": 1.0,
          "meta": {}
        }
      ]
    },
    {
      "id": 1266418,
      "meta": {},
      "text": "Changes in software development happen because development teams work in an agile way and receive frequent feedback. With the often used process model SCRUM, a new release of the software takes place after a sprint, which is then evaluated by the customer. This feedback is incorporated into the next sprint and thus changes are often made.\n\nChanges in software development can also result from requirements, technology, or organizational changes.\nThere can be several reasons for requirements changes. One would be that if crucial stakeholder of a project were left out in the definition phase. A real-world example of such a procedure would be if the CEO of a company decides on his own to introduce a new tool. The department that uses this tool in the end is left out of this process step and therefore changes have to be made later to the definition or the software.\n\nTechnical reasons for changes in software development can be, for example, new features in a program language. In order to keep the developed software up to date and potentially add new features, the developers need to make changes to the existing code.\n\nOrganizational reasons may also occur. For example, when an important part of the development team leaves the company. In this case, tasks and responsibilities must be redistributed. To keep these organizational changes and the resulting effort as small as possible, it is even more crucial to document all information.\n",
      "score": 83.3,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 126641801,
          "description": "Your explanation of why change happens in software development is clear and covers multiple aspects such as agile methodologies and feedback loops. However, you could enhance it by mentioning other factors like market conditions or competition which might necessitate changes.",
          "title": "Explanation of Why Change Occurs",
          "index_start": 342,
          "index_end": 447,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 126641802,
          "description": "The example you provided about the CEO introducing a new tool and the necessary changes is relevant. However, connecting it more explicitly to software development rather than organizational decision-making would strengthen the point.",
          "title": "Example of Change in Software Development",
          "index_start": 596,
          "index_end": 871,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126641803,
          "description": "Your discussion on requirements change is appropriate, and the example involving a stakeholder like a CEO is helpful. Ensure the example clearly ties back to software requirements and not just organizational decisions.",
          "title": "Requirements Change",
          "index_start": 448,
          "index_end": 871,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126641804,
          "description": "You correctly identified technology changes as a factor, mentioning new features in programming languages. This is a solid example. Consider expanding on how developers might leverage these features to improve software functionality.",
          "title": "Technology Change",
          "index_start": 873,
          "index_end": 1126,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126641805,
          "description": "Your example of organizational change, focusing on team members leaving, is valid. You correctly emphasize the importance of documentation, which is crucial for minimizing disruption. You may want to consider other organizational factors like mergers or policy shifts for a more comprehensive view.",
          "title": "Organizational Change",
          "index_start": 1128,
          "index_end": 1447,
          "credits": 1.0,
          "meta": {}
        }
      ]
    },
    {
      "id": 1266538,
      "meta": {},
      "text": "There are numerous reasons, some are that the customer might need some different features than planned, the software has to be adapted to modern standards, business team cuts / increases budget, bugs could be found, the team might grow or shrink, and much more...\n\nRequirements changes happen because the customer might change their expectations as the development goes on, as the product materializes, the developers might understand exact needs better than in the planning phase. Customers might even want to change some requirements post-development because they might need the product for other purposes, other goals. An example is, customers saying they want the product to be as fast as possible rather than easy to use half way through development when they arent satisfied with the speed.\n\nTechnology changes, as the technology advances, the product might need to be adapted for better compatibility, performance, ease of use, etc. Upgrading a 30-year-old server and having to adapt all the software because of it would be an example.\n\nOrganizational changes can happen because of the company being bought by another company, cutting costs, adding new devs, or losing devs, change in the company standards, etc. An example would be a company setting new low emission and sustainability goals so that the developed software should be as efficient as possible rather than fast.",
      "score": 66.7,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 126653801,
          "description": "You provided a good overview of why change occurs in software development, mentioning factors such as evolving customer needs, adaptation to modern standards, and changes in team dynamics. However, try to structure your explanation more clearly to enhance readability.",
          "title": "Explanation of Why Change Occurs",
          "index_start": 0,
          "index_end": 263,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 126653802,
          "description": "The example given about customers wanting the product to be faster is relevant and illustrates how change can occur due to shifting priorities during development. This demonstrates your understanding of how requirements can evolve.",
          "title": "Example of Change in Software Development",
          "index_start": 622,
          "index_end": 796,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126653803,
          "description": "Requirements changes are well explained with examples of evolving customer expectations and post-development changes. You've demonstrated understanding of how requirements can shift as the project progresses.",
          "title": "Discussion of Requirements Changes",
          "index_start": 265,
          "index_end": 621,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126653804,
          "description": "You noted that technology changes might require adaptation for compatibility and performance. The server upgrade example is appropriate, showing how technological advancements can necessitate software changes.",
          "title": "Discussion of Technology Changes",
          "index_start": 798,
          "index_end": 1042,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126653805,
          "description": "Organizational changes are discussed with examples like company acquisitions and changes in goals. The example of a company setting new sustainability goals is relevant, illustrating how organizational shifts can impact software development.",
          "title": "Discussion of Organizational Changes",
          "index_start": 1044,
          "index_end": 1383,
          "credits": 1.0,
          "meta": {}
        }
      ]
    },
    {
      "id": 1261983,
      "meta": {},
      "text": "Software has always provided functions to solve tasks. Today, society and the technical environment are changing rapidly and processes need to be faster and more efficient. It must meet the needs of the customers who use it. One example of this is the constant updating of the software version of our smartphones. This fixes bugs and makes the smartphone work better. \nRequirements changes: Change in requirements due to internal problems (e.g., defects) or external pressures such as changes in laws and regulations.\nTechnology changes: Technological change is generally understood to mean technical progress. It includes new means of production and new uses of raw materials. The various technological changes lead to an increase in the productivity of labor and other factors of production.\nOrganizational changes: A company or business changes a key component of its organization, such as new leadership or implementation of a new technology (e.g., upgrading the operating system from Windows 9 to Windows 10). ",
      "score": 100,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 126198301,
          "description": "The explanation provided in sentences 0-2 touches on the need for software to adapt to rapidly changing societal and technical environments. However, it could be more specific about the factors driving these changes, such as evolving user needs, technological advancements, and competitive pressures. Consider elaborating on these aspects to strengthen your explanation.",
          "title": "Explanation of Why Change Occurs",
          "index_start": 173,
          "index_end": 224,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126198302,
          "description": "The example of smartphone software updates in sentences 3-4 is relevant and illustrates the concept of change in software development. It highlights the need for constant improvements and bug fixes, which are common reasons for updates.",
          "title": "Example of Change",
          "index_start": 225,
          "index_end": 367,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126198303,
          "description": "Sentence 5 addresses requirements changes but lacks specific examples that illustrate how these changes impact software development projects. Consider providing a real-world instance where legal or regulatory changes necessitated a shift in software requirements.",
          "title": "Requirements Changes",
          "index_start": 369,
          "index_end": 517,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126198304,
          "description": "Sentences 6-8 discuss technological changes broadly but could benefit from specific examples related to software development, such as the adoption of a new programming language or framework that enhances productivity.",
          "title": "Technology Changes",
          "index_start": 518,
          "index_end": 793,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126198305,
          "description": "Sentence 9 provides an example of organizational change but could be more relevant by focusing on changes directly impacting software development, such as restructuring the development team or adopting agile methodologies.",
          "title": "Organizational Changes",
          "index_start": 794,
          "index_end": 1014,
          "credits": 0.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 1263721,
      "meta": {},
      "text": "Change in software development is vital in many aspects. It can define the quality of the product and the continous improvement of it. Software should adapt to the client's needs, not vice versa. Because of this, it is important to provide accurate and granular requirements at the start of each software project. But change can also be necessary when it comes to bug fixing, adding features or improving the usability. An example for change in the real world is the safety of cars. It all started with no safety features at all, then the safety belt followed and the fatality rate of car accidents dropped significantly. Later, airbags, stability and brake assistance systems made their way into the vehicles. Today, cars can already stop the car completely and call assistance if the driver gets suddely unconscious or falls asleep.\n\nRequirements change: If the softare project starts with vague or unfinished requirements of the customer, it is already doomed to fail. It can also happen during development that the team identifies a better solution or workflow for the initial problem and advices the customer to redefine the requirements.\n\nTechnology change: The evolution of technology and performance of computing components heavily increased  throughout the last 30 years. And with it comes an opportunity to maximize the company's productivity and profit. New technologies often operate with more performance while consuming less power. As software gets more complex, the computing performance has to improve to take advantage of the new software products.\n\nOrganizational change: In order to work effectively, teams may need to overthink the current organizational structure regarding the development process. For example, implementing Scrum or other comparable development methods can have a huge impact on collaboration and internal management. Structures or processes may have to be readjusted towards the new model. It is vital that all members accept the new model and are open to learn something new. It can be difficult, especially at the beginning, to keep up the productivity while trying to cope with new challenges coming with the change.",
      "score": 83.3,
      "language": "ENGLISH",
      "feedbacks": [
        {
          "id": 126372101,
          "description": "Your explanation of why change occurs in software development is well-founded. You highlight the importance of adapting to client needs and the necessity for continuous improvement. However, consider elaborating on how changes can also arise due to external factors such as market trends, technological advancements, or organizational shifts.",
          "title": "Explanation of Why Change Occurs",
          "index_start": 314,
          "index_end": 419,
          "credits": 1.5,
          "meta": {}
        },
        {
          "id": 126372102,
          "description": "Your example of change using the evolution of safety features in cars is clear and appropriate. It successfully parallels how software development evolves similarly with new requirements and technologies. Consider connecting this example more explicitly to software development to strengthen the analogy.",
          "title": "Example of Change in Software Development",
          "index_start": 420,
          "index_end": 834,
          "credits": 1.0,
          "meta": {}
        },
        {
          "id": 126372103,
          "description": "You effectively describe requirements change with the example of vague initial requirements and the evolution of understanding during development. It would be beneficial to include a specific real-world example to further illustrate this point, such as a well-known project that underwent significant requirement changes.",
          "title": "Requirements Change",
          "index_start": 836,
          "index_end": 1143,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126372104,
          "description": "Your discussion on technology change is insightful, emphasizing the need for improved computing performance with advancing software complexity. Try illustrating this with a specific example, such as the transition from traditional software to cloud-based solutions, highlighting the benefits and challenges faced.",
          "title": "Technology Change",
          "index_start": 1145,
          "index_end": 1565,
          "credits": 0.5,
          "meta": {}
        },
        {
          "id": 126372105,
          "description": "You address organizational change well by discussing the adoption of methodologies like Scrum. Including a specific example of a company that successfully transitioned to a new organizational structure could enhance your explanation.",
          "title": "Organizational Change",
          "index_start": 1567,
          "index_end": 2159,
          "credits": 0.5,
          "meta": {}
        }
      ]
    },
    {
      "id": 1264089,
      "meta": {},
      "text": "The underlying reason for a change in software development almost always is a change in the environment.  A more specific example of such a change in the environment of a company would be the introduction of new laws and regulations that might affect the current business model. Another area for change is the introduction of a new competitor to the market who has the ability to undermine one's own business model with an innovative product or service.\nA real live and current example of such a change in the environment would be the corona crisis because it forced many companies to switch their business to online with the help of software development.\n\nRequirements change: A possible example of that kind of change would be if a team got the job to develop the app for a new kind of social media with the required functionality of sharing images. But after some time the requirement gets changed from sharing images to sharing videos. The team now has to come up with a solution for that unexpected change in requirements.\n\ntechnology change: Whenever big technology changes occur, teams always need to adapt and get used to the new circumstances of their work. For example, a team of web developers that built websites to be viewed on a computer have to adjust their work so that it also can be properly interacted with on a mobile device.\n\norganisational change: For example when a small software start up grows development teams now have to comply with strict reporting guidelines, which changes their way of approaching a new problem.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264245,
      "meta": {},
      "text": "In software development change is quite frequent. There are several parties usually involved in one bigger project. So there is possibly change from inside, for example a coworker finding out that a part of the code isn't working like expected for a special use case, or the client deciding to take out or add a feature to his project, which is change from outside. \nEspecially in software engineering both cases of change are common and each team has to deal with them. \n\nOrganizational changes can come from the inside of a group, like a coworker leaving the team/company and others have to undertake his parts or delegate his tasks to another programmer who first has to learn the whole project structure. A concrete example could also happen in the EIST Team project as some students might drop out of the course mid semester and the rest of the group would have to accommodate to this new situation. \n\nChange can also come from the outside as described above, which would be a requirements change. Maybe the client decides to change, exclude or add a feature, like when coding for a new public transport application, where also a ticket system should be added now which was not included in the first place. Or the current system the client is using is no longer the most current version and his new features should now be adjusted to the newer system. \n\nAlso technology changes are very frequent in software engineering as it is a highly researched subject and new technologies are developed quite often. For example when coding an application for iOS, only the newer iPhones are able to use Face ID. Older ones can not use this feature and so a programmer has to know about the current version and the required version a client wants him to use for his projects. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265484,
      "meta": {},
      "text": "There are plenty of reasons why software development is changing but one major fact is that people just demand more nowadays than they did in the past from software products. In the past Software was only used in business related contexts but now it is embedded in the daily life of nearly everybody. This leads to the fact that not only the time from launching a project to finalizing it but also the costs due to higher automation with improvements decreased. Therefore nowadays there exist plenty of different programming languages in the real world to meet all different use cases that occur out of the peoples demands.\nIn the real world this change can be seen that 4/5 of the most valuable companies 2022 are software companies. While in the past Oil, Banks and Car companies were the most influential ones.\n\nRequirement Changes: as there already exists so much code, one requirment change is to update old code to improve the old products. As the Users want new functionalities and want to use the tools as simple as possible, you need to improve your code on a daily basis.\n\nTechnology Changes: Cloud computing breaks the limits of internet applications as you can offer your software to more people at a lower price. Therefore all big software companies run their systems on the Cloud.\n\nOrganizational Changes:  As todays software is all about the collective growth of the technology, many big companies such as Apple and Google base their inventions on open source systems, which gives other developers the permission to modify the code. Also the working appraoched changed from a linear approach to a collaborative agile environment.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265545,
      "meta": {},
      "text": "Software development is a highly dynamic field which is constantly subject to change. For instance, if new technologies are introduced one has to quickly adapt in order to stay competitive. One example for this is Nokia, which was market leader for mobile phones. But with the introduction of the smartphone, Nokia failed to quickly adapt to this change and almost went bankrupt.\nChange can be categorised into three different areas:\nFirst there are requirement changes: This means that once the requirements for a software development projects are established and the system design and implementation phases have started there is a new requirement which has to be be taken into consideration and might alter previously established results. One example for such a requirement change could be a new legal constraint. For instance, if a company is developing an online medical health data platform and the German government makes changes to the data protection legislation you might have to change parts of the project.\nSecondly, there are technology changes: This means that a new technology might be introduced which means that one has to adapt to these new changes. For instance, if you were working on a project to build an application on iOS and Apple had just released their new programming language Swift, you might be forced to switch to this new language.\nLastly, there are organizational changes that could influence your project. An example that could be imagined is that the budget for your project was cut due to a recession and you have to alter the project in order to meet the new budget constraint.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262102,
      "meta": {},
      "text": "Software development changes because of different requirements regarding tools, customers and policies. An example is the recently signed \"Digital Services Act\", an european law forcing tech companies and their developers to take more action against things like hate speech. Also, different regional laws forces companies to adapt their products even further.\n\n\nChange happens because of different circumstances throughout time, an example for this are rising production costs resulting from the current inflation, constantly rising wages and new ecological laws.\n\nTechnology changes focus on technology, a recent example for this is the car industry's change to more ecological electric cars, which requires nations to build up a functional and flexible net of charging stations.\n\nAn example for organizational change is the rising popularity of working at home, which requires companies to offer alternative workflows which enable their employees to stay at home, for example remote access to office desktops.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262201,
      "meta": {},
      "text": "Change happens in software development for numerous reasons. Software Systems may be very large and complex, since the are built to achieve many different, often conflicting objectives. Usually they are developed over a span of years by a group of people from different disciplines. That makes them prone to different types of external change, such as organizational and technology change, as well as internal requirements change.\nDuring the process of developing a system, software developers acquire a deeper knowledge of the problem statement and the application domain itself, so that occurs that adjustments have to be made. This is called requirement changes. An example for a requirement change would be the adjustment of constraints, finding errors and adjusting the list of requirements to solve those, etc.\nTechnological change might affect the solution domain of the developing project. As already mentioned, Software Systems are developed over a ling period of time. During that time technology evolves, creating the opportunity or neccessity to adjust the solution domain. For example the programming language of the solution domain might offer new or better solutions/ methods in the later stages of the development process, than before. \nOrganisational changes might happen in that time as well, such as staff tourn-around or shifts in the hierarchical structure of the firm. That affects the development team and therefore the agile process of developing the software System.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263246,
      "meta": {},
      "text": "The development of a software is dynamic, by which changes occurs every time. Some changes are because the product backlog changes with the requirement of the customer. Others happens, when the product is tested in order to be more stable, that problems occurs and the model and original codes needs to be rewrited. For example when the customer has a different idea and wants to change or add a function in/into the software product, that's a requirements change. \nTechnology changes happens when a new technology is introduced and the development team needs to change part of the product to make it fit for the new technology. For example, the birth of smartphone occurred changes, that software engineers started to think of transplant software from PC to smartphone.\norganizational changes means that there are changes among the composition of development team and the details of organization by scrum or sprint.  For example, the duration of a sprint could be reduced or a sprint could be even canceled, when the product goal is easy to achieve, unnecessary or even outdated.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263962,
      "meta": {},
      "text": "In the real world changes happen all the time and things are not stable. Developers should be able to deal with different changes in below areas:\n\n1. Requirement changes: The customers may want to add additional features to a software or throw some old functions away. For example in the discussion with customers about Campus Tumonline application someone says that a new function is required which students should be able to register for a course. After that the developers may think they would be willing to add the function, then changes occur during software development.\n\n2. Technology changes: For example in test cases the development team found out a bug which should be solved in another technological way as planned. Or maybe a gaming team may update their game engine in order to improve quality on a new generation console.\n\n3. Organizational changes: During the development phases, team members from different areas may change. Also the schedule could be different as the plan, the team may need less time to do a task or more time to do another. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264712,
      "meta": {},
      "text": "\tChange could be happen due to changes in application domain or solution domain. Another situations would be also that in some development phase certain deficiency, error or bug can be encountered; or the requirements from the customer could change. All of these would lead to a change in software development. \n\n\tAs introduced in the lecture by the Professor, introduction of a new law in the application domain - a legal constraint - would alter the software development process. Or any changes in solution domain: introduction to a new update to fix security gap to a software that is used at the project, may change the software development process. \n\n- Requirement change could appear when the needs of the customer and his stakeholders variate. For example a customer that has grocery delivery system wants to introduce a new payment method: pay at the door. This may alter the requirements hence the software development process. \n\n-Technology changes both include hardware and software changes that is used in development of the software or running it in a machine. For example new GPU's can render more complex games and thus at game development projects more detailed landscapes or in-game actions could be integrated by the developers to provide more exciting experience to the users. Or for an inventory management software, a new library features may be introduced that compile complex queries in more elegant way: thus a software team might want to alter their code in order to provide more smooth experience to its users. \n\n- Organizational change is always an inevitable event, sooner or later happens at a software development process. Team members might leave the team/company: new members can join as well. Experience and skills of those persons might force a change in software development process: leaving team member might be responsible with UI but in the limited time, newly joined one might be more skillful at algorithms and system design. Thus someone else in the team that has also experience at UI could take over UI part and newly joined could work on the topics that he is skilled at.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264982,
      "meta": {},
      "text": "Es gibt eine Vielzahl möglicher Ursachen für Veränderungen in der Softwareentwicklung. Nicht zuletzt, weil Software in den meisten Fällen von und für Menschen entwickelt, sowie in der realen Welt, also in einer dynamischen Umgebung eingesetzt wird. Historisch betrachtet wurden Computer einschließlich der darauf verwendeten Software zunächst nur von wenigen qualifizierten Experten verwendet und nur für vergleichsweise spezifische Aufgaben eingesetzt. Über die Jahrzehnte wurden die Systeme aber immer vielseitiger und gefragter. Um der gewachsenen Nutzergruppe gerecht zu werden, wurden beispielsweise Betriebssysteme mit einer anschaulichen und deutlich intuitiveren grafischen Nutzeroberfläche populär, was anfangs keineswegs der Fall war. Selbstverständlich handelt es sich bei dieser Entwicklung ebenfalls um einen dynamischen Prozess mit wechselseitigem Einfluss. Vielseitigere und zugänglichere Systeme haben zu einer gestiegenen Nachfrage geführt, was wiederum die finanziellen Ressourcen für eine weitere Optimierung der Möglichkeiten und Nutzerfreundlichkeit geführt hat. \nBei Veränderungen in der Softwareentwicklung unterscheidet man verschiedene Bereiche.\nAnforderungsänderungen kommen beispielsweise zustande, wenn ein Kunde im Laufe der Entwicklung seine konkreten Ansprüche an die Software ändert. Dazu kann es kommen, weil der Kunde erst beim Testen früher Beta-Versionen merkt, dass die anfangs von ihm formulierten Anforderungen für den Einsatzzweck nicht ausreichend sind.\nAuch Technologieveränderungen können Anpassungen im Entwicklungsprozess hervorrufen. Wenn sich beispielsweise die Schnittstelle eines Web-Dienstes ändert, den die eigene Software verwendet, müssen die mit der Schnittstelle interagierenden Implementierungen angepasst werden.\nAuch organisatorische Veränderungen können die Softwareentwicklung beeinflussen. Eine Budget-Kürzung im Unternehmen kann beispielsweise zu einer Halbierung der Größe des Entwicklerteams führen. Dementsprechend sind womöglich nicht mehr alle ursprünglich gewünschten Funktionen für die zu entwickelnde Software umsetzbar und man muss sich auf die Umsetzung wesentliche Funktionalitäten beschränken.",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1265248,
      "meta": {},
      "text": "In software development you deal with many different problems od dirffernt complexity. To solve these problem often changes have to happen. So change is basically just a thing that happens a long the process while dealing with different challenges. An example for an ongoing change in the real world is the transition to electric cars trying to deal with pollution.\nRequiremts changes is an activity which leads to change due to different requirements getting clearer or chaning during the process. For example you could be working on a project and gain a better understanding of the needs of your users and stakeholders and thus implement changes.\nTechnology change is probably seen quite often in these days. Basically this type of change is lead to by the constant advancing of new technologies, taking over the old one. For example the transition from 4G to 5G or back a few years ago the change to Smartphones or the change to new payment methods. This also can happen in the process of a project. You find out a technology is better suited or a new, more advanced technology is developed and you have to adapt within your project. \nOraginazinal change is more focused on the structure and organization of a company or the way of working within this company. For example changing to more agile scrum teams or transitioning to a flat hierarchy instead of a strict \"I have to ask my Boss\" policy could be organizational change.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265306,
      "meta": {},
      "text": "Change in software development happens constantly and can be due to several reasons.\nFirstly, the changes can be demanded by the client-side. The client may be forced to take action because of economic or legal developments in his market segment and therefore demands software changes that the development team needs to implement to fulfill these wishes.\nSecondly, changes can also occur within your software development team due to the following reasons. \nAs you often and extensively test the software on a technical level, you will encounter problems that ultimately lead to changes in the code/ software. Also, as you constantly must compare the current state of the software to the desired final result of the customer you will encounter necessary changes. \nA current example of these changes can be experienced in your “CovPass-App”. In the early days of the app, the current legal status in Germany was the “3G” rule with two sufficient vaccinations. Later on, the legal status was upgraded to “2G+” resulting in three mandatory vaccinations and, on the technical side, leading to software changes in the app.\n\"Requirement changes\" are mostly new demands by the client as previously explained. For instance, the client now wants an additional Login via QR Code instead of the common Login.\n\"Technical changes“ may be due to a new software update or even the emergence of a new innovative software tool (e.g. AI-Tool) that can be implemented.\n“Organizational changes“ may be due to the hiring of a new team member who is for instance highly skilled in Artificial Intelligence, possibly making the software more effective and therefore leading to software changes.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265863,
      "meta": {},
      "text": "Change can happen in software development for a variety of reasons. This is because developing software takes time and over the course of that development process many unforeseen things can happen that will cause plans to change. A real-world example would be the release of a new (and presumably) widely adopted operating system that causes the software development to have to adapt to that new operating system.\n\nRequirement changes include the change of the customer's demands (or often just the customer's additional demands), but it could also be a change in the market and thus a change in what requirements the software needs to fulfill to be successful.\nTechnology changes include things like a new operating system on which the software needs to run or a different device with differing specifications. For example, oftentimes video games are created with one or two consoles in mind, but during the development, it is decided they must also be released on completely different consoles with different environments and operating systems.\nLastly, organizational changes are the changes in the developing organization itself. For example, if an employee leaves, or new ones with new skills are brought into the development process. This could mean a restructuring of the team, perhaps it could mean new opportunities or a change in the development process.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265874,
      "meta": {},
      "text": "Veränderung passiert in der Softwareentwicklung, da Software immer zur Lösung bestimmter Probleme dient. Diese Probleme verändern sich natürlicher Weise, weshalb sich auch die Software verändert. \nAußerdem führen auch wirtschaftliche, technische oder anderweitige Faktoren dazu , dass sich die Softwareentwicklung anpassen muss.\nAls beispielsweise die ersten Smartphones erschienen, wurden Mobiltelefone vom Markt verdrängt und folglich wurde auch die Softwareentwicklung diesbezüglich angepasst. \nEin wirtschaftliches Beispiel ist, dass zum Beispiel bei erhöhten Stromkosten Unternehmen nun mehr auf energieeffiziente Software achten wollen. So wird die Software dann nicht mehr unbedingt möglichst zeiteffizient gestaltet werden, sondern eher so gestaltet werden, dass sie energieeffizienter ist.\nRequirements changes oder Anforderungsänderungen sind Änderungen die oft unumgänglich sind bei der Softwareentwicklung. Anforderungsänderungen passieren, wie der Name schon sagt, wenn die Anforderungen an der Software sich verändern. \nDie Anforderungen können sich zum Beispiel dann ändern, wenn der Kunde spezielle Wünsche hat wie die Software am Ende zu sein hat. Folglich muss die Softwareentwicklung dem angepasst werden.\nTechnology changes oder technische Veränderungen sind Veränderungen in der gegenwärtigen Technik. Wie bereits erwähnt bringen diese auch Veränderung in der Softwareentwicklung.\nBeispielsweise gibt es erst seit einiger Zeit Virtual Reality oder Quantencomputer. Diese brauchen natürlich Software die sich von anderen unterscheidet.\nOrganizational changes oder organisatorische Veränderung, sind Veränderungen die zum Beispiel in einem Unternehmen aufkommen, wenn auf einmal die Hälfte der Leute nun einer anderen Aufgabe zugeschrieben werden. Die Softwareentwicklung muss folglich aufgrund mangelnder Arbeitskräfte angepasst werden.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266284,
      "meta": {},
      "text": "Die Veränderungen in Software Development können teils wegen der neuen entwickelten Technologien (z.B Moore's law) und teils wegen der neuen entdeckten Konzepten, die sich besser für ihre Zeit eignen, passieren. \n\nEin Beispiel für die reale Welt  - Die Veränderung der Temperatur.\n\n1. Anforderungen verändern sich mit der Zeit fast immer, da Menschen für ihre Zwecke oft neue Features brauchen oder Ideen haben, wo sie die brauchen könnten. z.B Apple Wallet, wo anfangs nur verschieden Karten wie Bordkarten,Studentenausweise usw. drin sein konnten, aber mit der Zeit wurde noch die Möglichkeit geschaffen, Kredit/Debitkarten hinzuzufügen, da daran damals (immer noch) ein großer Bedarf bestand.\n\n2. Die Entwicklung der Technologien läuft fast jeden Tag, da Wissenschaftler neue Materialien/Konzepte/Architekturen/usw. entdecken. Mächtigere und effizientere Technologien sind ja für unser Leben wichtig und nützlich, da wir mit denen neue Horizonte schaffen können. Daher wird es danach aktiv geforscht. Ab und zu werden sie auch zufälligerweise entdeckt ;) Beispiel für Technology changes -> x64-Bit-Architektur, die uns erlaubte, schneller unsere Rechnungen für verschiedene Zwecke durchzuführen.\n\n3. Viele Unternehmen wollen mehr verdienen und effizienter sein. Daher werden bei denen ständig neue Konzepte ihrer Kultur/Organisation eingeführt. als Beispiel - tägliche/wöchentliche Meetings zwischen Managern und Developers, damit eine Gruppe von den Mitarbeitern ein Team wird und sich besser versteht, was natürlich oftmals zum besseren Ergebnis führt. \n\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1266394,
      "meta": {},
      "text": "Die Welt um uns herum ändert sich ständig und die Software-Entwicklung ist keine Ausnahme. Die ewige suche nach mehr Effizienz (\"schneller, besser, billiger\") ist eins der grössten Treiber für diese Veränderungen. Solange noch Geld, Zeit und Energie im Feld Informatik investiert werden, werden es auch Veränderungen in der Software-Entwicklung geben, denn es werden immer neu Ziele gesetzt die nur durch \"Verbesserung\" der Aktuellen Prozesse zu erreichen sind. Dies gilt sowohl für kleine Änderungen die z.B. eine Firme zu ihrer internen Vorschriften macht, als auch für ganz neue Felder die sich (weiter-) entwickeln. Ein gutes Beispiel dafür ist die sog. Künstliche Intelligenz. Der Gedanke der Künstlichen Intelligenz ist zwar nicht neu, aber erst die grossen Vorschritte in der Hardware haben es in den letzten Jahren möglich gemacht Fortschritte in der Software zu machen.\nAlles ist miteinander Verbunden und die Weiterentwicklung einer Sache, zwingt die andere sich auch zu verändern und manchmal ist es nicht einfach die Ursache der Veränderung zu finden. Jedoch lassen sich die Meisen auf eins der nächsten drei Kategorien zurückführen:\nAnforderungen verändern sich; Die Prioritäten der Kunden verändern sich, somit müssen sich auch die Produkte und deren \"Herstellungsprozess\" verändern. Ein gutes Beispiel dafür ist das Thema Nachhaltigkeit, was in den letzten Jahren in der Prioritätenliste aufgestiegen ist.\nWeiterentwicklung der Technologie; Auf Änderungen in der Hardware zB muss auch reagiert werden. Zum Teil eröffnen sich neue Möglichkeiten, aber alte Software wird auch obsolet und es muss neue Software Entwickelt werden und damit verändert sich auch das Entwicklungsprozess (siehe Beispiel KI).\nOrganisatorische Veränderungen; Wenn sich die Struktur der Organisation verändert die die Software entwickelt, können alte Entwicklungsstrategien oft nicht weitergeführt werden. Wenn sich z.B. das Team was für ein Produkt zuständig ist vervierfacht, müssen neue Strategien implementiert werden, damit z.B die Kommunikation weiterhin effizient funktioniert.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262188,
      "meta": {},
      "text": "Veränderungen treten unvermeidlich bei der Entwicklung von komplizierter Software. \nEin Beispiel für größere Veränderungen in der Welt ist die Covid19-Pandemie. Diese verlagerte einen großen Teil der Arbeitswelt in das Homeoffice. Dies erschwert am Beispiel von Softwareentwicklung besonders die Kommunikation zwischen den einzelnen Teammitgliedern, dem Scrum Master und dem Product Owner. \n\n\nIm Folgenden erkläre ich die drei Gebiete von Requirement Changes, Technology Changes und Organizational Changes anhand von Beispielen:\n\nRequirements Changes: \nDie Voraussetzungen bei einem Softwareprojekt entwickeln sich unausweichlich. Dies kann sich ausprägen in Form von Änderungen der Anforderungen von Kunden und/oder der Firma in der an dem Produkt gearbeitet wird.\nEin Kunde könnte z.B. schärfere Anforderungen an die Geschwindigkeit, der zu entwickelnden Software stellen im Verlaufe des Projekts. Auch die rechtlichen Rahmenbedingungen können sich ändern (z.B. schärfere Normen zum Datenschutz).\n\nTechnology Changes:\nBesonders in der Welt der Software entwickelt sich die Technologie rapide fort. Was heute aktuell ist, könnte morgen von einer neuen Technologie in den Schatten gestellt werden oder Probleme mit der Kompatibilität zeitigen. Wenn sich z.B. ein neues Betriebssystem plötzlich stark verbreitet und die zu entwickelnde Software nicht daran angepasst ist, muss das bei der Entwicklung berücksichtigt werden.\n\nOrganizational Changes:\nAuch die Organisationsstrukturen im Team/Unternehmen können sich während der Projektarbeit ändern. Schlüsselpositionen können plötzlich durch neue Personen ersetzt werden, die Anzahl an Teammitgliedern kann sich verändern oder das ganze Unternehmen kann umgekrempelt werden von der Spitze bis ganz nach unten. Auch solchen Entwicklungen muss Rechnung getragen werden. \n\n\n\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1263982,
      "meta": {},
      "text": "Changes happen in software development happen due to the fact that it is a highly innovation driven industry sector. As not only people are dependent on technology but also industries and business, it becomes inevitable to keep on improving and changing the software to keep up with the fast paced changes in the real world.\nCloud based software solutions pose a real world example for this. A couple of years ago it was the standard to have server rooms, however they were very expensive to maintain as they require a lot of space, attention & money. With the development of cloud based data management solutions, businesses were able to eliminate this problem & delegate the task of servers to an online cloud.\n\nRequirement Changes occur when the original system & its use case has to be altered due to new or changed functionality requests of the users.Apple for example started to include screen sharing in their FaceTime App because their users wanted to use FaceTime similar to Zoom for work.\n\nTechnology changes refers to the improvement or change of existing software/technology product. The emergence of smartphones for example induced a technology change with their capability to act & perform as a portable powerful mini computer.\n\nOrganisational change is the process in which a business or company alters a component of its structural organisation. An example for this would be the inclusion of remote work since the start of the pandemic.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265044,
      "meta": {},
      "text": "Softwareentwicklung ist sehr sensibel zur Veränderungen in unserem Welt und in unsrem Alltag. Jeden Tag treten neue Herausforderungen auf. Aufgrund der hoher Einsatzrate der Programmen in menschlichem Alltag bezieht sich die Mehrheit dieser Aufgaben auf Bereich \"Softwareentwicklung\". So müssen neue Programmen entwickelt werden, alte unterstützt und modifiziert werden. Diese sind derzeit so komplex, dass die Aufgabe immer mehr in kleinere Bestandteile zerlegt werden und das ganze Prozess neu organisiert werden. Das muss auch immer schneller geschehen, weil die Konkurrenz steigt. Als ein gutes Beispiel kann die Entwicklung von Windows und Apple Betriebssystemen angeführt werden. Sehr lange Zeit hat Microsoft sehr lang an neuer Version des Windows gearbeitet, um große Veränderungen dem Benutzer anzubieten. Nur seit kurzem haben sie die Erfahrung von Apple übernommen, die seit langem festgestellt haben, dass die Häufigkeit der Updates viel wertvoller für den Systementwickler ist: Welt und damit Benutzer bevorzugt häufige Updates, somit wird das Betriebssystem besser optimiert und weniger bugs haben.\n\nRequirement changes: Aufagben werden immer anspruchsvoller. Zum Beispiel nehmen wird Fernrohr, dass im Weltall benutzt wird. Die müssen fähig sein immer weiter im Weltall zu fliegen und korrekt zu funktionieren. Also müssen die schnellere Algorithmen haben, die auch weniger Speicherplatz und Energie benötigen und bessere Fotos vom \"Kamera\" mithilfe von spezifischen Algorithmen aufnehmen.\n\nTechnology changes: Entwicklungstechnologien verändern sich. Zum Beispiel möchte eine Firma ein neues App entwickeln, der aber komplex ist. Aufgrund dieser Komplexität ist es nötig Hauptaufgabe in mehrere kleinere aufzuteilen und am ende in einen Produkt zu verbinden.\n\nOrganisation changes: Hier kann man Apple als ein Beispiel anführen. Am Anfang war es einen Betrieb mit nur zwei Personen, die selbst eine Computer gebaut und programmiert haben. Da die Geräte immer komplexer werden, war es sehr kompliziert, etwas mit wenigen Menschen zu bauen. Daher haben sie mehr Menschen eingestellt und sie in kleinere Gruppen aufgeilt und ihnen Aufgaben gegeben.  ",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1265348,
      "meta": {},
      "text": "Why does change happen in software development?\nSince the environment changes while working on a software development project, new opportunities, but also threats emerge. In order to meet these opportunities and act on possible threats as software engineers you have to respond to this change. \nExample: The former market leader of the mobile phone market Nokia did not anticipate the switch to smartphones - the company did not adhere to change and as a consequence almost went bankrupt.\n\nRequirement changes: \n-The needs/wishes/requirements of the customer might change along the process. Also it is sometimes quite difficult for the customer to articulate what he/she actually wants, and it becomes clearer by the time (of working together). \n-The government might issue new legal constraints s.t. the software must align with new standards\n-The budget for the project might be cut\n-The market situation might change, for example a competitor might come up with a new product offer\n\n\nTechnology changes: \nIt is important to identify new available technologies and be aware of technological innovations. Technology changes that improve the quality, productivity and effectiveness of the software or the software development process are then selected and incorporated into the organization/project.\n\n\nOrganizational changes (change within organization) are:\n-Personnel changes (onboarding new employees, changes in leadership positions...)\n-Changes in business structure (merging with another company, establish a new department, changes in the organizational team structure\n-New processes (because of the adoption of a new business model, ...)\n-Cultural change (organizational values and goals which employees should adopt)",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265446,
      "meta": {},
      "text": "Change in Software development entsteht mitunter durch sich ändernde Konkurrenz auf dem Verkaufsmarkt sowie durch neu entstehende Anforderungen. Um auf dem Markt eine bestehende Chance zu haben, müssen Produktentwicklungen bezüglich Preis, Funktionalität und Qualität stehts verbessert werden. Demnach sollen Interaktionen zwischen verschiedenen Geräten, Benutzerfreundlichkeit und Arbeitsgeschwindigkeit Verbesserungen vorweisen. Ein deutliches Beispiel hierfür, ist die Entwicklung in der Autoindustrie. Die neuen Techniken des Elektroautos entwickeln sich ständig weiter. So versucht jeder Autokonzern das qualitativ hochwertigste Elektroauto zu entwickeln, welches beispielsweise die längste Akkulaufzeit, den kleinsten Motor und die höchste Leistung bietet und preislich trotzdem noch konkurrenzfähig bleibt. \nEin Beispiel für requirement changes sind sich ändernde Gesetze und Anforderungen. So entsteht im Laufe der Zeit die Anforderung an einen höheren Umweltschutz, wodurch beispielweise Softwares von Laptops immer energiesparender  laufen sollen . Trotzdem sollen sie nicht an Qualität(z.B. Geschwindigkeit) abnehmen.\nTechnology changes entstehen durch den Druck, technisch up-to-date zu bleiben. Dabei konkurrieren die Unternehmen um die beste und neuste Technik. Diesbezüglich spielt die künstliche Intelligenz(AI) eine große Rolle. In dem Fachbereich Medizin helfen diverse Systeme mithilfe von AI Krankheitsbilder zu diagnostizieren und zu behandeln. Hierbei verbessern sich die Erfolgsquoten der Behandlungen.\nEine weitere Veränderung sind die organizational changes. Firmen sollten, um Erfahrungen auszutauschen und um Kunden zu gewinnen ihre Connections möglichst international ausbreiten. Dadurch laufen Softwares teils weltweit und verändern sich  durch den Austausch mit anderen Unternehmen demnach entsprechend.\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265467,
      "meta": {},
      "text": "Changes in software development:\nThere are many factors that can influence software development and some of these factors change more frequently (i.e. technological advancements) than others (i.e. regulatory). Therefore, certain changes are mandatory while changes due to technology or competition are needed in order to stay competitive.\n\nChange in the real world:\n - for example apple's M1 CPU -> software compatibility/optimization\n\nRequirements: \n- (in reg. to SW dev.): in software engineering projects, specific requirements are usually provided by the customer. Sometimes, these might not be formulated very precisely or they might be ignored, so the development might go in a different direction than what the customer imagined. Once these deviations are noticed, it is needed to make changes to the project. For ex.: customer asks for calculations with a certain precision.\n- There can also be requirements changes coming from outside the company that can affect development, like new legal regulations, for example data encryption of personal information.\n\nTechnology:\n- changes due to new technology or new trends, for example when smartphones and tablets became more widely used, it also became necessary to provide compatibility with touch screens.\n\nOrganizational:\n- different stakeholders often have different priorities. And since there generally are conflicting goals within a company, there will have to be compromises. For ex.: one stakeholder might favor a lower project cost, so there might be cutbacks on the quality of the final product.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266123,
      "meta": {},
      "text": "Change happens in software development because nothing remains same in any environment. Daily or long-term targets, needs, priorities are always changing based on conditions. Even a software was developed to solve a t-day problem, it might need to be adapted in t+1. Furthermore, some software become obsolete if they do not serve to business needs any more. \n\nIn my previous job where I was selling televisions, Netflix did not have a license to operate in Turkey. We were not putting Netflix app in smart TVs. After 2015, Netflix launched in Turkey and we changed some software code in smart TV interfaces in order to use Netflix there.\n\nTechnology change: If better technological systems and infrastructures are developed, we need to develop a related software to perform same or better for a given object. When mobile data providers upgraded from 4G to 5G, mobile phone software were also updated not to perform too slow.\n\nOrganizational change: When new organizational structuring happens in a firm, benefits taken from a software might need to be updated. In a company, if approvals are now going to A person instead of B person, the related part of the code needs to be updates in order to send the approvals to right contact.\n\nRequirements change: If current software is not addressed to former problems, there is no sense to use it. An econometrics software Stata was not helping for big data analysis when big data was first came into use because it was designed to solve multivariate problems. It was updated taken into big data solution tools.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266176,
      "meta": {},
      "text": "Software projects (especially large and successful ones) are usually worked on for plenty of time. During this period usually external factors such as available hardware and software platforms change. Furthermore new knowledge is generated, e. g. by making decisions that eventually turn out to be wrong. Accommodating for such new information and external factors is necessary to prevent shipping outdated products.  \n\nFor example Microsoft’s Windows operating system is being developed for more than 35 years now, during which time the spread of the internet has occurred. If Windows still could not connect to the internet as in the days of Windows 1.0, Microsoft would not sell copies of Windows any more.\n\nSuch changes that occur during a project lifecycle can be classified as:\n1. Requirement changes: Changes that are necessary because the product is required to behave differently than before. For example new laws can enforce such modified requirements. One such law is the EU GDPR that forced websites to allow users to manage their cookie settings.\n\n2. Technology changes: Because of the appearance (or deprecation) of new technologies (or old technologies respectively) software must sometimes be changed to support new technologies. For example in order to support new Hi-DPI displays, GNOME hat to be changed.\n\n3. Organizational changes: If a team notices, that something harms the development process, then they might want to change their their development process in order to eliminate the problem. For example if a team developing an angular application notices that all members are skilled in react development, the team might switch to react.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266260,
      "meta": {},
      "text": "Change in software engineering starts in the definition of the word itself. It is a high quality system (developed with a given budget) before a deadline while CHANGE occurs. This basically means that the given system has to adapt to new situation which especially indicates that it has to be flexible, which mostly is the most complex part of software engineering.\n\nBut first of all, why does change happen at all? The real question is why it shouldn't. A railway system has to replace old railways with new ones, an app like Instagram wants to enable the feature of short videos or even a small edit button for new tweets are more than enough to collapse a whole software project if not managed right. And this are only a fraction of changes in software engineering.\n\nThere are a three main types of change.\nThe first one is requirements changes. This happens if the softwares requirements change. If an app needs a bigger database for example, or if a game has to run faster on a new device. Mostly this change is unavoidable and has to be worked on to better suit the consumer.\nTechnology change is another important subject of change. If a new iPhone is to be published, a lot of social media firms have to include the new camera into their system. As an end consumer, this seems to always fit but there is a lot of unknown work behind the nice facet.\nAt last but not least, we have organizational change. This kind of change isn't always connected to the software. Twitter, for instance, was bought up by Elon Musk a few days ago. This means that the whole company has to reorganize itself to fit the wants and needs of the change they want to adapt. But even the change in a database can not only be  a requirements change but also an organizational one.\n\nTo conclude, there are a lot of different categories of change. Many are even fluid into each other and can only partly be distinguished. Most importantly, software is like learning, a never ending circle. This also means that a software developer always has to fit the requirements of the industry and be open to not only change itself but also the possibility  of it to occur.\n\n(sorry for the length, I was too invested in the topic :) )",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266323,
      "meta": {},
      "text": "The development of complex software is can not be done as a repeatable process. But instead, it is an agile process. A big modern software development project has an increasing amount of stakeholders to consider. And many of them are not developers themselves. To include all these inputs into the project can be quite challenging and requires an approach that is flexible enough to adapt to this constantly changing environment.\n\nExample:\nConsider a startup that develops a messenger app for hospital staff. Of course, the team will check legal requirements and interview the staff upfront to define the requirements. But when the users first see or use a prototype they will most likely see many issues and can give more inputs that will lead to changing scope. For example, a zoom function to better review a photo of a wound. Additionally, it can get extended. If every employee has a phone now, why don't we also use it to book the working hours? \n\nRequirement changes:\nThese changes can have multiple reasons. For example, new data security laws require a change in the software.\n\nTechnology changes.\nSince software development projects last a couple of years the technology can change during the processes of development. For example, MVG is developing an app to purchase Tickets. When the project starts they want to use credit cards and pay pal as only payment methods. But during the development, Apple and Google pay get released. \n\nOrganizational changes\nChanging requirements and technologies may lead to a change that also affects the organizational structure of developer teams. For example, we switch to a cloud-based solution and need a team that has the necessary experience for the new requirements.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261229,
      "meta": {},
      "text": "Change in Software Development:\nVeränderung im Software Development ist die Veränderung von der definierten (linearen) Arbeitsweise hin zur agilen Arbeitsweise. \n\nWieso kam diese Veränderung? \n\nDiese Veränderung kam dadurch, dass sich die Rahmenbedingungen und Voraussetzungen sich während des Projektes ändern können. Außerdem können unerwartete neue Probleme und Abweichungen auftreten, die eine Veränderung der Arbeitsweise erfordern. Deswegen gibt es Modelle der Arbeitsweise, die den Prozess der Arbeit beschreiben und darauf ausgelegt sind mit Abweichungen und Veränderungen umgehen zu können. \n\nVeränderung in der realen Welt:\n\nAls Veränderung in der realen Welt könnte man den Wechsel von großteils Benzin- und Dieselbetriebenen Autos zu vermehrt Elektrischen Autos bezeichnen. Diese Veränderung ist gekommen, da sich die Rahmenbedingungen und Probleme der letzten Jahre sich immer mehr Richtung Klimaschutz und Nachhaltigkeit geändert haben.\n\nTechnologische Veränderungen:\n\nTechnologische Veränderungen sind Veränderungen, bei denen für einen bestimmten Prozess eine neue Technologie benutzt wird. Ein Beispiel dafür war der Wechsel von Telekommunikation auf Festnetz-Telefonen zu Mobiltelefonen. Festnetz-Telefone existieren zwar noch jedoch ist ihre Benutzung extrem gesunken, da Mobiltelefone einfacher zu bedienen sind, mehr können und flexibler sind.\n\nRequirements changes:\n\nAnforderungsänderungen können auftreten, wenn sich Märkte ändern und auch vor allem bei neuen Technologien, da Software zum Beispiel sich an neue oder existierende Nutzer anpassen muss, sowie auch an neue Technologien. Ein Beispiel dafür wäre: Erfindung von der Cloud, dadurch mussten viele Softwares angepasst werden, da Sie sonst dem Markt hinterherhingen.\n\nOrganizational Changes:\n\nOrganisatorischer Wandel ist, wenn sich die Organisation eines Unternehmens oder eines Teils sich grundlegend ändert. Dies kann zum Beispiel durch die Änderung der Kultur oder eine neue Technologie, die verwendet wird entstehen. Ein Beispiel dafür wäre: Die Addition eines Online-Shops zu einem bestehenden Shops.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1262842,
      "meta": {},
      "text": "Changes happen in software projects because neither the developer's thinking, the customer's demand, the social and technical environment nor other factors that might affect the development process stay the same. An example in real life for that would be European IT companies changing the way they keep and use users' data and adapting privacy compliance technologies such as TrustArc since the announcement of GDPR.\n\nRequirements changes occur typically when the customer modifies the demands set earlier. As for an example, developers of a ticketing system should scale up the software if the client suddenly finds out that he actually has to sell more tickets than estimated in requirements elicitation.\n\nTechnology changes take place when the technical basis of software solutions evolves. For example, more and more programmers choose to create websites using modern frameworks such as React, Angular or Vue.js rather than good-old jQuery, because that enables them to create what they need much more efficiently while providing many new possibilities.\n\nOrganisational changes happen usually when the development team wants to change the way they're organised. For example, a team switching from a defined process control model to an empirical process control model like Scrum would need time to get familiar with the ideology of the new organisation method. The team after this organisational change, however, have the potential to a get higher performance if they adapt Scrum appropriately.\n\nIn general, changes during software development are inevitable but not necessarily negative and software developers need to adapt themselves to changes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263482,
      "meta": {},
      "text": "As Humprey put it, software development is an empirical beast which changes shape and demands over time. There are no one reason why software development changes happen, but to mention a few things:\n\n1. Requirement to software changes over time. A problem today might not be a problem tomorrow and vice versa.\n2. and thus when problems change, requirements to and from software also change\n3. Personal preferences might play a role in which methodologies are applied during the development process\n4. Group dynamics play a huge role within a team or a bigger organization, and thus will the process move dynamically with the group\n\n40 years ago, there were prophecies that internet as we now know it was a bubble, it was a gimmick and other technologies such as the fax machine would survive the hype. Companies went bankrupt not understanding the change in technology and it's opportunities. Fax is hardly used today, perhaps Germany is in the front of still utilizing this technology for it's security aspects\n\nAs mentioned above, problems change over time and customers will have different problems to be solved today than tomorrow, thus will the requirements to software change with time.\n\nTechnology is an everchanging beast, and with the fax, perhaps will we not use keyboard and mouse for out primary interaction with machines in the future.\n\nOrganizations change, and perhaps we can see a great example now during corona lockdowns. Home office is the new office for many, and requires and gives new ways of interacting together.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263627,
      "meta": {},
      "text": "Changes happen in software development because there cannot always be one perfect software from the beginning on. There will always be new needs due to the changing environment and that makes the software adapt to the changing environment. For example, if there is a need or a high command for a new feature in the software iOS, this change needs to be done so that the clients have a better experience with this software. \n\nRequirements changes can occur when a customer changes their mind to something else which is not the current software development. A change in the requirement is then created which the software developers have to face. \n\nTechnology changes occur due to the fact that everyone wants to keep up with the newest technology while the technology is changing rapidly. This new technology can be for example a new CPU for a computer or even a new machine which helps the software development come forward better. \n\nOrganizational changes can occur when stakeholders during a software development change. Not all stakeholders are participating on the project from the beginning on which means that with the new stakeholders coming to participate on the project, there are more changes to be made since they can see different solutions for the project.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263655,
      "meta": {},
      "text": "Every domain changes and evolves over time, and software development is not an exception. Software development is basically problem-solving in the first place. Those problems become more complex every day with bigger applications, which result in more bugs, higher maintenance and bigger teams of developers, managers, designers, etc. To solve those problems faster, changes must be introduced.\n\nFor example, businesses wanted to see results as fast as possible. This introduced agile development into software development (such as Scrum). This drives developers to deliver little stable features in a short amount of time, which makes the progress more obvious to businesses.\n\nRequirements changes happen when the user wants new features or the team understands better the needs of the user. For example, the user is missing a chat function in the application. The team will have to come up with a solution by adding a chat function into their application.\n\nTechnology changes happen when new hardware or frameworks are introduced. For example, why build websites with plain HTML, CSS and JavaScript, when you can do it faster with React.\n\nOrganizational changes happen when communication or work efficiency problems have to be solved. For example, most corporations had to adjust their meetings and work schedule to remote work during the lockdowns.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263950,
      "meta": {},
      "text": "Change happens in software development as change happens in the real world. The more people use smart phones, Internets, etc., the bigger software are required. Also, new technologies and related fields appear. For example, in the past, there is few people who know and experience Virtual Reality. But as the related technogies develop, resolution of moniters becomes better, and outbreak of diseases like covid-19 occured, many people became interested in virtual spaces. Then, developers and researcher have to develop new and unfamiliar software for them.\n\nThere are three areas of requirements changes, technology changes, and organizational changes. First, requirement changes is about customers. Software development must consider customers' view. More and more people became familiar with internet, so their requirement also became complicated. Second, technology changes is related to developing technologies. For example, in the past, there are no smartphones. On the other hand, some technologies disappeared like floppy disk. As technology chages, software development have to be accordingly changed. Third, organization changes is about team. Soft skills like communication, collaboration became important, as team became self-organizing and self-responsible. ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264038,
      "meta": {},
      "text": "Change in software development happens firstly  because of changes in the way clients interact with technology and in their expectations of what software should be able to do for them. There's also the possibility of employees coming up with new ideas to improve a product. These ideas may have not been brought up during the initial production process. This, bundled up with incentives brought upon a software development team by progress made within competing products, often lead to teams choosing not to stick to an original, static plan when it comes to software development. \nThe gaming industry could be seen as a real world example of real world change when it comes to software development. (e.g. consoles -> lan -> online -> vr etc.)\n\nrequirements changes:  client decides to change the features of a product (e.g. wants the printing software to also be able to handle scanning or copying)\ntechnology changes: changes in the way a product is implemented (e. g. using another framework/programming language)\norganizational changes: changes in the structure of  the team that works on a product (e.g. using agile programming instead of a plan-driven approach)",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264369,
      "meta": {},
      "text": "Ein Aspekt, der sich während einer Softwareentwicklung verändert ist die produktivität im Team. Dies geschieht dardurch, dass das Team verschiedene Phasen der Teamentwicklung durchlebt. Diese Teamentwicklung hat ernorme Auswirkungen auf das Projekt, weil während der Teamentwicklung wichtige Grundforaussetzung für ein perfomendes Team geschaffen werden, wie Vertrauen oder ein gemeinsames Ziehl. Dies benötigt jedoch Zeit, da diese Atribute über einen gewissen Zeitraum enstehen müssen, wodurch auch erstmal Proble auftreten, wie zu wenig Vertrauen oder das verschiedene Grippenmitglieder verfolgen verschieden Ziele. Daher ist die Produktivität eines Teams wärend der Softwareentwicklung ständig im Wandel.\n\nEin passendes Beispiel in der echten Welt wäre eine Fußballmannschaft, die zu einer neuen Sainson neu Aufgestellt ist. Denn dort müssen sich die einzelnen Spieler auch aufeinander einstellen Vertrauen aufbauen und an einem gemainsamen ziehl arbeiten. Daher spielt die gemeinsame Erfahrung als Team eine wichtige Rolle und muss auch erstmal durch eine Teamentwicklung entstehen, um dann als Team zu performen.\n\n\nrequirements changes:\nDies sind anforderungs veräderungen an eine Softwareentwicklung, die beispielsweise durch neue Anforderugnen der Stakeholder entanden ist, da diese ein neues Zeil in der Entwicklung anpeilen.\nEine ander Möglichkeit ist, dass es zu fehlern in der Planung kam wodurch das Projekt entehen kann wie es geplant war. \n\norganizational changes:\nDies sind Veränderungen im organisatorischen bereich, die besipielsweise durch eine änderung der der Kundenanforderung entstanden ist.\n\ntechnology changes:\nDas sind veränderung die durch neue Technologien entstehen, so wird möglicherweise das eigen Produkt irrelanvt, durch ein neues besseres Produkt auf dem Markt, oder die Produkt vereinfacht sich durch neue Technologien.\n\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264570,
      "meta": {},
      "text": "Some reasons for the change in software development is to optimise the product, to get it up to speed with for example new technologies, to adapt it for new fields, to work differently on the project, to get a new perspective or to support new demands defined by users. An example for this is the automobile industry. With the increasing complexity of software and connected functions within the car there is a need for more, new and different functions and methods. Increased requirements w.r.t. software design and architecture made many companies to switch from C to C++. Another change was when Argo Ai aquired AID and the whole company dynamic was restructured ans changed.\n\nThere are three kind of changes.\n\nA technology change is, when the software has to be adapted or rewritten for a new type of technology. For example the change from desktop computers to mobile devices. \n\nRequirements change is, when the demand of the user, the project owner or somebody else changes, so that the software has to be changed as well. For example for better and faster technology or new functions so that the software has to be improved or the requirement for better testing in autonomous cars.\n\nThe organisational changes can be split in three areas. A developmental change is a change to improve a process or procedure. A transitional change is there to move an organisation from the current stage to a new one to solve a problem and a transformational change is when the culture and operation of the organisation or company fundamentally changes for example because of aquisitions of companies.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265557,
      "meta": {},
      "text": "Software Development is a process in which, as the name states, software is created for a specific use. Nonetheless software development is a process which undergoes constant change. It is an unpredictable process and can be affected in multiple stages, for example in the organization, the planning, the development, the application and even after its delivered. That´s why since the beginning of the 2000´s the software is developed preferably in an agile style, so difficulties and new requirements can be addressed adequately before the final product is ready.\nA good example that exemplifies why being able to react to unexpected changes is important, is the one presented in the lecture. Nokia as a company didn´t adapt fast enough to the highly innovative and rapidly changing technology market. The company drew the wrong conclusions and took action to improve their existing software and hardware too late. This lead to its disappearance from the global market for over a decade. Playing a minimal role when compared to it´s previous market presence.\nChange is a broad term that can be used in multiple situations. However in software development there are three types of change that are regarded with special attention.\n\nRequirements changes: Software is developed to satisfy a necessity. If the customer necessities change, so has the software to. The development process has to at least meet the customer needs.\n\nTechnology changes: As the development is carried on, technologies keep evolving, getting better and more sophisticated. Sometimes those changes affect the compatibility between soft- and hardware. That is why, even after delivery, software has to be constantly updated for it to keep functioning properly. An example for this are software updates phones, laptops, etc.\n\nOrganizational changes: Developers can be changed midway in the process. however the overall structure of the project should remain unaffected. Only with good organization und the ability to react to unexpected changes can a project survive and be succesfull. \n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266487,
      "meta": {},
      "text": "Change happens in modern software development because the world around it changes: Governments might decide to change their legislation, or the required capabilities of the software change. Software needs to be adapted to these changes in order to continue fullfillings it's function. These changes may include introduction of new technologies or standards (i. e. IP6, HTML5) which may need to be implemented. Additionally the requirements can change: Maybe the data security laws in a country you'll ship your product too changed. In that case you'd have to alter the program in a way to adhere to the new laws. Another possibility would be that your client changed the expected capabilities of the product because their use case changed. Another possible area of change is how you organize your development, You might have adjusted concepts of agile development for your development team to deal with new changes quicker.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262070,
      "meta": {},
      "text": "Change happens in software development since software systems and project requirements in creating software are complex. A system will only be relevant, when changes are incorporated in the creation process and requirements are not assumed as \"frozen\". For example, a complex software project will never turn out in the exact way as inticipated in the beginning of the project.\n\nWhen errors are discovered or when the knowledge of developers increase during their work, requirements must be updated. An example of a requirement change would be that the SCRUM team comes to realize that another solution path would be more effective that the currently planned one and adapt the product backlog accordingly.\n\nAlso, software devlopment projects often take many years and in that period, the underlying technology often changes. For example, a new release or update in the underlying software can open up new solution methods for the engaged developers.\n\nOrganizational changes occur when the composition of the SCRUM team or the stakeholders of the project change. For example, a SCRUM member gets promoted and is replaced by a new SCRUM member which brings in a fresh view and different experience in the field. Staff turnaround does not only mean project-related change but also the need for constant training of the members.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262150,
      "meta": {},
      "text": "There are a lot of reasons for change throughout the process of software development. \nFor example when encountering major issues with your code it might be necessary to completely restructure your project and use a different approach. \nBut there many other reasons wich include changes requested by the steak holders wich can have a huge impact on development, changes in software resources or even changes within your company.\n\n\nExplanation of three areas:\n\nRequirement changes: There are different reasons for requirement changes. The requirements of the steak holders can change throughout the process of development and as a consequence additional modifications have to be made. Another requirement change would be the constant change of the market, the peoples needs and expectations.\n\nTechnology changes: New technologies always arise and gain popularity especially in the field of computer science. An example for this would be the increased usage of AI and Machine Learning. You have to be able to adapt to those changes to prevent using outdated technology and becoming uncompetitive.\n\n\nOrganisational changes: Organizational changes come in many varieties such as budget cuts, changes in the project schedule or even changes in policies and laws and others alike which often have a huge impact on the development process.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262807,
      "meta": {},
      "text": "In der Welt ändert sich ständig sehr viel und unaufhaltbar. Durch immer mehr Menschen auf der Welt und der Globalisierung finden täglich neue Erfindungen und Weiterentwicklungen statt, sodass es unmöglich ist, ein Projekt, das über längere Zeit läuft, ohne Veränderungen durchführen zu können. Z.B. wurde bis vor kurzem Gas als beständiges Produkt angesehen, welches in vielen Branchen sehr wichtig ist.  Durch den Krieg in der Ukraine wollen viele Menschen und Länder am liebsten auf Gas, das hauptsächlich aus Russland stammt, verzichten. Dies steigert die Gaspreise und könnte in naher Zukunft zu Engpässen führen. Somit geht die Planung und Kostenkalkulation in vielen Firmen nicht mehr auf.\nDabei unterscheiden sich:\nTechnische Veränderungen von Hardware und Software, z.B. bei Windows gibt es immer wieder Updates (letztens auf Windows 11). Oder auch Kommunikationsmittel, wie beispielsweise Teams und Zulip, laufen irgendwann nicht mehr ohne ein neues Update.\nVeränderungen bei den Anforderungen an Produkte, z.B. ist in den letzten Jahren die Nachhaltigkeit sehr viel wichtiger bei den Kunden geworden. Oder durch weltweiten Handel müssen Produkte sehr viel billiger hergestellt werden, um keine Marktanteile zu verlieren.\nVeränderung in der Organisation, z.B. war es früher üblich feste Hierarchien in der interne Unternehmensstruktur zu haben, wogegen sich jetzt mehr und mehr Arbeitnehmer eine flachere Unternehmensstruktur wünschen und andere Anforderungen als früher an den Arbeitgeber haben(Work-Life-Balance). Dies braucht Umstrukturierung der internen Abläufe und internen Kommunikation.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1263893,
      "meta": {},
      "text": "Changes in software development can happen for a number of reasons, including a new feature request by the client or a new Version of a tool that is beeing used. Example: Twitter adding a new \"edit\" button to tweets, because of elon the soon to be owner.\n\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264115,
      "meta": {},
      "text": "Because software development is an empirical process, there is no strict rules, teams need to adapt and act according to changes in regulations, developments in technology, innovations from the competitors and etc. For example, nowadays we can use credit cards in apps to make payment, in near future, apps can add crypto wallets into their apps as payment method because with technological developments, paying with crypto wallet will be as easy as paying with a credit card. Another example can be there is no finished product in complex software projects. For example, iOS, always updating, new features come with each new version. They are constantly improving the product because of different changes and developments, like customer demands, cyber security, developments in Android and etc. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264656,
      "meta": {},
      "text": "Change happens simply because all human processes are dynamic processes (unlike insentient machines). With the complexity of a task so does this system's \"unpredictability\" scale (increasing number of variable factors). The Software Engineering Development Lifecycle (SDLC) is a great example for this. \nAn apparent reason of why SDLC is unable to resemble a static process is the rapid change in technology itself. This requires flexibility already. Being able to adapt and implement the latest technologies is crucial for Software Products to thrive (performance, seamless interactivity...) and gain a user base.\nBut not only the world around the product constantly changes. Also the demands of the ones owning the product may change frequently, or simply the requirements could not all be laid out ahead of the project kickoff. Even organisational changes can arise, when team members leave, new ones arrive or entire companies merge their manpower, leading to the need of re-arranging the available resources.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264774,
      "meta": {},
      "text": "In software development changes occur frequently because software development itself is an empirical endeavor and not everything can be planned in advance. For example new data privacy policies can be made by governments requiring new options for users to control their personal data access for an application.\n\nLet say you are developing an online video platform. In recent time demand for very short video content has drastically increase, so you now also want a better user experience for this and build set new requirements for your product.\nAnother change that could happen is of technological nature. There might arise a new machine learning research paper improving recommender system and you want to incorporate this new technology to suggest more personalized content.\nA organizational change that could happen is that a partner company of yours who provided creators of your platform with music rights for use in their videos no longer provides this service. Thus this feature now has to removed.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265126,
      "meta": {},
      "text": "changes passieren überall da mit der zeit immer neue technologien eingeführt werden die eine Voraussetzung für weitere Changes darstellen. es ist also wie eine kettenreaktion wo eine Sache eine andere bedingt. Besonders in der Softwareentwicklung ist es stark ausgeprägt, da zb in der Spielentwicklung zeitgleich mit neuer Hardware wie die PS5 neue Möglichkeiten öffnen.\nbei den requirement changes ist es so, dass man mit der Zeit neue Anforderungen hat. Was Der kunde von 30 Jahren für Anforderungen hatte , ist heutzutage\nohne probleme sehr einfach umsetzbar, damals stand die Funktionalität einer Software als zentrale anforderung, jetzt aber wird die Funktionalität eh als\nselbstverständlichkeit angesehen, Nutzerfreundlichkeit, Sicherheit und auch möglichst niedriger Kostenaufwand sind die dinge, die nun in der Software\nentwicklung im Vordergrund stehen.\n- analog dazu sind die technology changes. durch die stetig voranschreitende technischen Wandel kommt es auch immer wieder zu erneuerungen der Hart und\nSoftware projekte. schliesslich muss eine Software auch zu der richtigen Hardware passen. ganz einfaches beispiel wären die SpielKonsolen. früher hat man in\nschwarzweiss grafik auf dem Gameboy gespielt.\nNun aber sind openworld spiele mit 3 d grafik und zahlreichen Farben auf der Switch keine seltenheit.\n- auch organizational changes sind in der software entwicklung enthalten. Dazu zählt unter anderem die Arbeitsweisen der Programmierer und\nSoftwereentwickler. Damals konnte man die Softwareentwicklung mit einer Fliessband arbeit vergleichen. jeder hat eine bestimmte teilaufgabe und hat diesen\ndann weitergegeben. Heutzutage sind Scrums essentiell und spielen eine wichtige rolle. da bildet man eine gruppe aus verschiedenen Experten und arbeitet in\nregelmäßigem Austausch untereinader aber auch mit den Kunden gemeinsam an einen Ziel.\n",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1265418,
      "meta": {},
      "text": "Change is vital for software development and it has been the only way to move forward. In my opinion change regarding software development means knowing your audience (user base) and knowing what to do to your product in order to deliver constant improvements and making the most out of your product and this is why it is very important for everyone in charge to embrace it. Nowadays almost every software developer makes sure that his product rolls out to as many potential users as it can, and this was only made possible at a very large scale through the mobile world. The last years have come with a lot of new additions and improvements in the mobile application department.  Everything started to change with the help of our smartphones, form the way we interact with each other to the way we conduct our personal lives. Some examples consist of social media applications, that were designed for the user to express themselves and to keep in touch with friends and family like in the real world. Other important examples are bank applications, now we have the ability to pay with our phones, without needing to have our wallets at hand. Another mobile application sector that has jumped through the roof the last year was the healthcare system. Since the global pandemic every medic tends to have an app to keep in touch with the patient, the vaccines were made digitally readable through qr codes, there have been massive developments regarding the mental health apps, that now provide speakers and people to talk to. But the point is all this changes have something in common. They were boosted and made possible by having only one small computer at ease. Everything is faster, more reliable and more convenient because we live our lives through our smartphones. Finally the goal has been achieved to have all the information be kept safely in one place, that can easily be accessed at all times. But this changes don't mean only technological advance but also societal, because there are new jobs, new opportunities, and new places to express your creativity. And this is because software developing is just starting to achieve its potential...(nano technology public in the future maybe)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265472,
      "meta": {},
      "text": "The change in software development is a reaction to the changes in other areas that are related directly or indirectly to it. It means that the environment surrounding the project affects the development of its software. The techniques and tools used must adapt to what happens around them. If, for example, the market evolved in a fast way, the software must be improved to adapt to the market needs.\nThe change can happen depending on the area. First of all, the requirements changes. Every project has goals defined by the customer, the team, or the targeted user. The customer, for instance, can change his exigencies for a reason and the team must fulfill his requirements.\nSecond, technology changes. As we know, the pace of innovation is insane. Every day there is a new technological improvement in some field. So if the change can affect the software, either in a good way where it facilitates the work or in a bad way where it can result in the creation of future problems, an adjustment must be made. For example, if another product can help improve the efficiency of the development, the team must use it.\nLast but not least, the organizational changes. Even if everything is planned in a precise way, nothing is perfect. So changes can happen in the middle of the way, where, for example, there are financial difficulties so the company has to reduce the number of team members or a new policy is used, and it restrains the development.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266063,
      "meta": {},
      "text": "Software development hat sich über die letzten Jahrzehnte stetig weiterentwickelt und verändert. Besonders das Cloud Computing hat das Software development nachhaltig verändert. Einerseits profitierten die Entwickler durch neuen Cloud-Andwendungen, indem die gemeinsame Zusammenarbeit an Softwareprojekten wesentlich vereinfacht wurde. Nun war es möglich von unabhängig von Orten zu arbeiten und trotzdem Projekte gemeinsam realisieren zu können. Andererseits hat sich auch der Aufgabenbereich von Entwicklern erweitert, da immer mehr Systeme Cloudbasiert laufen und dementsprechend auch neue Anwendungen nötig sind. Zudem konnte Programme durch Clouds mehr potentiellen Usern zur Verfügung gestellt werden, wodurch beispielsweise auch die Preise für Programme sanken.\nDas CloudComputing ist auch ein Beispiel dafür wie sich die Anforderungen (requirements change) geändert haben. Während früher noch ein einziger zentraler Server in Firmen ausreichend war, sehen heute die Anforderungen so aus, dass jeder Mitarbeiter von überall auf der Welt arbeiten kann. Darauf müssen sich Entwickler einstellen und die Systeme dementsprechend programmieren. Dabei geht es generell darum, dass sich die Anforderungen an Entwickler verändern, wie ein System auszusehen hat und wie es funktioniert.\nMit Technology Changes sind Entwicklungen auf technologischer Ebene gemeint. Ein Beispiel dafür ist die neue AI von Google die selbstständig programmieren kann. Diese neue Technologie hat bis jetzt noch nicht viel verändert wird aber das Software development nachhaltig verändern, indem einfache Tasks zukünftig von Programmen selbst programmiert werden, wodurch einige Jobs überflüssig werden. Organizational changes konnten beispielsweise in der Corona Pandemie gut beobachtet werden, dass der Workflow geändert wurde und viel remote funktioniert. Viele Meetings finden mittlerweile per Zoom o.Ä. statt.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266136,
      "meta": {},
      "text": "In software development, as in real life, change happens when circumstances and environments change. Software is running most things in our lives and since we as humans change, technology needs to adapt to us. If we take a look at any major tech company (e.g. Google, YouTube, Microsoft) and their past, we can clearly see, how much these companies have \"grown up\" from being funny parts of the internet to being established online service providers, used by millions or even billions of people. They had to adapt to a broad community, to new regulations and become more \"user-friendly\".\nSoftware projects are not just fun project anymore like they were 30 years ago, projects have become bigger and better. Now, software is developed by big companies and teams, as opposed to being projects in your parents garage - the way many companies, such as Google, began their stories of success.\nSuch services as the ones mentioned above are used by a lot more people today than 20-30 years ago. The infrastructure - both physical and digital - had to grow and optimize to account for these billions of users each day. \nTechnology becoming more and more sophisticated is a logical consequence to that. An iPhone today is more powerful than the computers used for the first moon landings. And the bar keeps getting set higher.\nAs requirements and possibilities keep growing and getting more complex, so does the Software entertaining those requirements.\nAfter all, as humans evolve, so do our tools.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266160,
      "meta": {},
      "text": "The reasons why changes happen are diverse. Perhaps some inventions in software engineering or even inventions in other fields will leave an influence on the way we develope a software. A really simple example is Java. Before Java8 we cannot imagine writing something like lambda expression. The updates of JDK are changing our coding, sometimes dramatically, sometimes gradually. The environment around us also plays a vital role, for example the corona leads us to plenty of online platforms. Besides, the culture and the law will incur the changes in software development, too.\n\nRequirements changes: If we stick on the requirements of the cumtomers, we also need to pay attentiont to the changes of it. Example: My team is developing an application for online meetings for a company. At the beginning the end users were all in Germany. But a few days later some people went on a business trip to Japan,  and the meeting sometimes crashed when connecting the users in Germany and in Japan. So here the new requirement is a more stable Internet connection which can adapt to this new situation.\nTechnology changes: In order to beat the competitors we need to be the pioneer in this field. Example: Netflix launched 3D streaming technology to catch up with the 3D trendency at that time. A new technology forced them to improve their software.\nOrganizational changes: It is really common that the structure of a development team changes. Example: A new collegue joined my team. How do everyone deal with a bigger team? How to absorb the new person into the team? How can we work more efficient as before?",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266195,
      "meta": {},
      "text": "A change can happen in software development due to many reasons :\n-some people  cannot figure out what they really want  at the beginning . they may need time to be specific intheir expecations.\n-changing expectations over time . the client may change his mind about one or many point in the development phase \n-chnaging technology . The client may add new requirements to adapt to the new technology\nareas of changes :\n requirements changes:  a functional or non functional requirements can be added .for example adding a new method payment in the website .\ntechnology changes: change from 3g to 4g . software development should be adapted to the new change.\norganizational changes: the scrum master can not join the team because of personal issues for one week. the team should adapt to the new change ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266266,
      "meta": {},
      "text": "In software development an empirical process is most common because of the agility to solve problems fast. Developing a software can take up years and during this process external factors can't be influenced or predicted. External factors could be a new budget cap or a new deadline because of your compititor.\n+Misscommunication, new management with a different vision, new trends, new technology, ... \n\nRequirement change - requirements for the projects have been changed e.g. new law (DSGVO) or decreasing demand for a planned feature (share over SMS) \nTechnology change - used technology is outdated or not relevant anymore e.g. focusing on 5G instead of 4G and lower\nOrganizational change - members have been added or roles have been reassigned e.g. merger of companies ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262072,
      "meta": {},
      "text": "Change happens in software development because of multiple factors such as customers changing their minds, the competition changing, new and improved technology being introduced. \nE.g. A customer asks to reduce the size of the software being produced from 500MB to 200MB.\n\nRequirements changes happen e.g. when a customer asks to reduce the size of the software being produced from 500MB to 200MB. This change would mean adjustments to the software. \nTechnology changes happen when e.g. a new updated version of a tool being used in a software development is introduced and has to be adopted like a new source code tester.\nOrganizational changes happen when e.g. the scrum master gets changed or a developer leaves the team.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263108,
      "meta": {},
      "text": "There are many reasons why change happens in software development. It could be the case that the balance of quality, time and cost, changes. For example, a startup fails in raising enough funds, so their costs have to be reduced. In that case the team could decide to reduce working hours (time) to save cost, which probably results in a lower quality of the product. In this example we can see clearly that the tree factors time cost and quality are deeply connected and changing one variable affects everything else. \n\nOften customers ask for additional requirements, starting the problem / opportunity of requirements changes. For example, most website owners now want to track the user interactions with their websites. Companies like google saw the change in requirements and published tool called Google Analytics or its competitor Search Console.\n\nOf course, technology changes very fast and it’s almost become normal seeing hardware becoming more capable every year. Considering Bitcoin, the crypto boom in 2021 we saw graphics cards prices first skyrocket and companies like Nvidia and AMD profiting from that technological change. But now in 2022 with mor and more crypto currencies changing from prof of work which requires mining, to prof of stake without mining we start to see a decline in graphics card prices.\n\nThe best example for and organizational change we saw during the corona crisis where global trade roots broke down because of lockdowns around the world. Resulting in long production times for producing companies.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263109,
      "meta": {},
      "text": "Change can happen due to political unrest, for instance war, so you're team might have to relocate which loses time and money. Also, their heads might not be in the game anymore.\nOther reasons for change are listed below.\n\nRequirements changes:\nYou're asked by a customer or mandated by new laws or guidelines to change aspects of your project. For instance, the customer might want you to include 2-factor-authentication for their banking app currently under development or the EU disallows storage of certain customer information which until then was part of your project.\n\nTechnology changes:\nNew technologies, hardware or software, might arise and become eligible for your project. You might have been working on an audio app when bluetooth became more widespread. Bluetooth support might not have been in the original plan but it could've been inadvisable to just make a pass on the new technology instead of incorporating it.\n\nOrganisational changes:\nPeople might be assigned different tasks due to restructuring the team. They have to familiarise themselves with their new/additional tasks",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263765,
      "meta": {},
      "text": "In software development, change can happen for various reasons. \nIt can be to improve the performance or include new technologies.\n An example for that is when Apple changed its IOS software to include the facial recognition as a new security tool to unlock the device as replacement for the fingerprint ID. And now with the new update you're able to unlock your device with the mask on your face to adapt to the needs of its customers during the pandemic.\n\nA requirement change can be to correct a certain bug in the program, for example  correcting a functional error reported by the users to ensure the correct working of the program.\n\nA technology change can be to update an obselete technology or to predict the new requirements like the using of the AI to help predict demands for the product enabling the company to anticipate this growth or shrinking of demand and take better decisions.\n\nAn organizational change refers to the change that a comapny undergoes wether to adapt to the needs and the evolving of the company it can be a small change like changing the operating system from Windows 7 to 10, or big changes like an important transformation in the team or the business model. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264231,
      "meta": {},
      "text": "Software development is a highly innovative field Change in software development happens for a variety of reasons. \n\nThere exist three major areas of change within software development. First and foremost, the requirements of software are ever changing. For example, Software needs to be less energy-consuming to be practical on mobile devices or it needs to improve on leveraging the full power of multi-core systems to meet the speed required for real-time applications. Frequently, the requirements of software change during the development phase. Therefore, the development process needs to be adaptable and agile, so that delays may be avoided and the end-product can efficiently accomplish the task it is meant to.\nFurthermore, as software becomes increasingly more complicated, it is simply not possible to design a whole product by yourself anymore. Having a skilled team is a prerequisite for developing an intricate software system. This lead to the creation of project management frameworks such as SCRUM, which helps organize the process of developing and delivering a certain product on time, by following a system of periodic sprints and small agile teams. \n\nThe technology implemented also changes. New languages and tools are constantly released and programmers have to adapt to these new technologies, in an effort to stay productive within large organizations and have their technical skills become outdated.\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264799,
      "meta": {},
      "text": "The world is unstable, constantly changing. At the same time, software is created to help people to live with these changes, overcome or use them. Those software developers, who can create or adapt their product to cover people's needs, are most likely to be succesful. That's why change happens in this area\n\nFor example, one of the most crucial recent changes on the planet, the pandemie Covid-19 has impacted all areas of society, where software plays a significant role. To take control over live events, \"CovPass\" app with QR system had to be implemented, etc\n\nChange in software development can be devided in 3 areas. To explain and compare those areas i want to take the industry of videogames as an example:\n\n1) \"Requirements changes\" area, when end users are dictating the key features, which have to be implemented. For instance in games industry it's always important to understand which genres are ruling the market. At different times they were Team-FPS/MOBA/Battle Royal etc\n\n2) \"Technology changes\" area, which can be defined as adjusting of software to new high demanded technologies, that are coming to the market. In games industry it's new devices, graphic cards etc., which should be supported by new products of games developers\n\n3) \"Organizational changes\" area, i.e. change of structure in development team or schedule of work. For example, it can be game release date postponement, content cutting, reducing number of employees, due to force majeure - uncontrollable events like wars, extreme weather, strikes, etc, which are interfering normal work conditions",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265282,
      "meta": {},
      "text": "Während Software früher zum Beispiel von Krankenversicherungen nur genutzt wurde um Namen und Adressen von Kunden konsistent zu speichern, ist heute der Anspruch an die verwendeten Software eine ganz andere.Das heißt, dass die Software in dem hier beschriebenen Beispiel dabei unterstützen soll geeignete Therapiemaßnahmen zu bewerten.\nEs ist äußerst wichtig bei Software mit der Zeit zu gehen. So ging Nokia beinahe Pleite, weil sie den Sprung zu den Smartphones verpassten.\n Die Komplexität von Software muss entsprechend analysiert und bei der Entwicklung aufgefangen werden. Hierfür wird zunächst einmal ein guter \"Requirement Development Process\" benötigt. Sollte hier schlampig gearbeitet werden, dann bedeutet dies, dass Software im Nachhinein nochmal überarbeitet werden muss, was mit hohen Kosten verbunden ist. Je weiter man bereits in dem Entwicklungsprozess ist, umso teurer werden Abänderungen der Software für das Unternehmen. Natürlich kommt es trotzdem immer zu neuen Anforderungen an eine Software. Zum Beispiel wenn unvorhergesehene Probleme bei der Software auftreten, wenn sie in der echten Welt Anwendung findet. Zum Beispiel haben hier die Software Entwickler eines Logistikunternehmens Falschlieferungen nicht in der Software betrachtet.\nNatürlich kann es auch sein, dass sich Technologie verändert und daher ein anderer Anspruch an Software besteht. So könnte zum Beispiel die Lösung von Kundenproblemen durch künstliche Intelligenz ein Thema innerhalb einer Firma werden. Natürlich müsste dann auch die Software danach ausgerichtet werden.\nÄnderungen in der Software Entwicklung können auch das Unternehmen als solches verändern. Zum Beispiel durch die Integration. von Scrum. Hier muss dann die gesamte Organisation die Entscheidung von dem \"Product Owner\" akzeptieren und sich danach richten. Ebenso sollte das Entwicklerteam verschiedene Funktionen vereinen und sich selbst organisieren.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265502,
      "meta": {},
      "text": "Change happens because of adaption to the real world. The real world is not predictable, as an example a law could change so the team must change the functionality of a certain function to make sure they are not violating the new law.\nRequirement changes: the customer wants more functionality from the product -> requirements changed\ntechnology changes: unreal engine 5 got released and the publisher does not work on changes or bug fixes on unreal engine 4 so the team has to switch\norganizational changes: a team member of a important module got sick so someone has to leave his group and work on the other module to make sure the module gets finished on time",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266129,
      "meta": {},
      "text": "Der Hauptgrund für die Änderung der Software-Entwicklung ist die schlechtе bestimmte Bearbeitung der Erfordernisse. Das führt in den meisten Fällen zu Fehlern der Folgen, falsch ausgeführte Aufgaben und Versäumnissen, die Anzahl der Komponenten des Anforderungen zu erhöhen. Ein anderes Hinblick in Bezug auf die Änderungen in der Software-Entwicklung sind die Optimierungen der Apps. Ein Beispiel dafür sind die Online-Applikationen, die wir täglich verwenden und die jeden Monat neue Verbesserungen/Updates anfordern.\n\nFür eine wirkliche und machbare Veränderung der Software-Entwicklung wird es sehr gut sein, wenn sich in jeder Staat in aller Softwareunternehmen finanzieren. Das wird zu einem deutlichen Anstieg der Gehälter führen und als Folge davon wird das Interesse der Menschen für Arbeit deutlich steigen. Wir, die Menschen, sind diejenigen, die am besten zur Entwicklung der Software-Entwicklung beitragen können. Einzige Bedingung dafür ist eine größere Motivation und ein langer Arbeitsprozess, um die Veränderung bald zu realisieren und zu sehen.\nDie einzusetzenden Technologien müssen optimiert, neu und für den Menschen einfach zu verstehen sein, damit die Leute möglichst wenig auf Schwierigkeiten stößen und ihren Potenzial und Können zeigen.\nMeine persönliche Meinung ist, dass Menschen, die diszipliniert und  organisiert im Team arbeiten, bessere Ergebnisse erzielen. Organisation ist der Schlüssel zum Erfolg. Wenn die Menschen also besser organisiert und motiviert sind, werden sie der Gipfel der Vollkommenheit erreichen.",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1266174,
      "meta": {},
      "text": "Veränderung passiert im Software Development, weil Änderungen immer passieren. Es kann immer Verbesserungen in Technologie geben an die man sich anpassen muss, das alte Programm ist nicht mehr ausreichend und muss verbessert werden, das bereits existierte Programm nicht mehr den Wünschen entspricht... Ein Beispiel für diese Änderung ist als Apple vom Intel Prozessor auf ihre M1 Chips umgestiegen sind. Es gab eine Veränderung in der Technologie, die bessere Leistung bringt und daraufhin musste die komplette Architektur vom Apple Betriebssystemen neu gemacht werden um sich dieser Änderung anzupassen.\n\nDabei gibt es verschiedene Arten von Änderungen für Software Development. 1. Änderungen der Ansprüche, wenn das alte Programm nicht mehr gut genug ist oder abgeändert werden soll. Game Developer kommen oft an dieses Problem, User spielen das Spiel durch und es müssen neue Inhalte kommen um die User weiter an das Spiel zu binden. 2. Veränderung in der Technologie, sind neue Erkenntnisse in der Technologie, die Leistungsverbesserung oder Ähnliches mit sich bringen. Wenn es zum Beispiel eine neue Prozessorarchitektur gibt, sei es die damals neue 64bit Architektur, die die 32bit Architektur ersetzte oder der Silicon Chip bei Apple. Es gibt eine deutliche Leistungssteigerung wenn man diese neue Technologie benutzt und deshalb wechselt man zu diesen. 3. Organisatorische Veränderung, wie der Name schon sagt werden dabei grundlegende Dinge bei der Organisation verändert. Wenn eine Firma zum Beispiel so groß wird, dass der Datensatz den sie speichern muss zu groß wird und sie von einem gewöhnlichen Datenbankmanager zu einem anderem wechseln muss. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266346,
      "meta": {},
      "text": "Change in software development is only natural in a world of exponential technology evolution like ours. With newer technologies releasing almost constantly, change in software development is only natural. When Apple announced the release of the M1 ship in their Mac product line, software engineers had to adapt to the new cpu architecture and develop new software for the latter.\nWhen one designs a software solution for a certain problem following specific requirements, it happens that those requirements change throughout the project if an opportunity or an unexpected event arise. For example, a hospital which used a small excel database to keep its inventory might suddenly need a bigger, more complex database following an unexpected pandemic. The requirements change and so do the software development.\nTechnology change happens all the time. When Adobe announced that it'd stop support for Flash. Millions of websites that heavily depended on Flash had to ne redesigned.\nOrganizational change affect software development too. If a company that historically uses Windows decides to switch to Linux or Mac OS all of a sudden, maintaining the company's code and managing its servers on an unfamiliar machine could be a challenging task that calls for change in the way software developers work.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262298,
      "meta": {},
      "text": "One of the main challenges in Software development is change. Change is inevitable, but its reasons can be explaned. However changes can be seen as an opportunity, as they are made to improve the result. A concrete example of change is the release of new android versions. Some apps that are still under development might experience change in order to keep up with the new modern and latest technology.\n\nThe three main areas of change are as follows :\n- Requirement Change :\nIf requirements are not correctly defined or if they are not held, this might provoke change. Constant addition of requirements might alter the quality of the product. Another thing is that while trying to meet a specific requirement, another could become non functional. Requirements are subject to change when errors and probelms appear.\n\n- Technology Change :\nAs we discussed before, technology is a main factor in change during development. Because technlogy is fast growing, change in technology can happen halfway thought developement. \nEveryone wants to have the best and latest technology for their project. But this is not always a good choice, as some technologies can be too new to be used. It might lead to new non functional requirements.\nFor example, if I change my operating system, I might not have access to specific software because it might not yet be compatible with my new technology.\n\n- Organisational Change :\nChange in organisation also plays a role. The team might change their strategy and opt for a better one. They might use new methodologies. This will lead to changes in organisation.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262382,
      "meta": {},
      "text": "In the real world things are always moving and adapting, the same happens in software development. Like when sailing with a boat, you always have to adapt/change the angle of the sail to the wind which is always different. One of the many reasons, why change happens in software development is external factors, so things that aren't directly controlled by for example a software developer. One example for change in software development is when the requirements change, for example the client now wants a different design than before. But change can also happen in software development  when the technology changes, maybe the newer version of a library suddenly deprecates or removes a critical part that the product is using. And another change that can happen is when the organizational structure changes, like a developer leaves, then somebody else has to take over what he did before and work into what the previous developer did.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264083,
      "meta": {},
      "text": "change happens, because software development is normally a long term project with huge complexity. The world changes itself everyday and no one have the power to predict future precisely or to control the development program successfully just by himself/herself . Problems may occur because of external environment or internal difficulties by programming. For example, the intense situation between america and china has negative influence to market by declaring their import restriction in some particular areas; this restriction also has something to do with development program from Huawei, then the producer may reduce their expectation of project in the side of international trade, which has a consequence that the budget also have to be reduced. At least, some team may have to deal with the project with fewer people or a unfriendly deadline.\n\nRequirements changes often reflect the expectation of costumers, sometimes the misunderstanding between product owner and costumer also lead to this circumstance. For example, if costumer have get some information which reflect their key advantages by interviewing their potential costumer, then they may ask the product owner to retain some old parts by development, even if they have already permitted the team to delete them some days ago.\ntechnology changes could be the result of technology upgrading and its indirect influences to competitors. For example, competitors with better performed platform could offer services which competitors with the old vision platform could not do. In this case, costumer may turn to collaborate with other competitors , so team should learn the new platform as quick as possible and finish the transfer work from one platform to another.\n\norganizational changes means often the changes of team members. People may have found a better job and decided to give up their current job or they become a new member of this team. For example, \nif a new member of this team should participate in the program, then he or she should take some time to get enough information from his/her colleague and leaders(they also give help), so that he/she could take responsibility by finish the work.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264752,
      "meta": {},
      "text": " \n \nA central theme has emerged in the past decade: the world has become application-centered. From payment to carpooling, online shopping to social media, organizations in all industries refocus their resources on building the best applications as users demand more and better digital experiences.which customers’ different requirements lead to it and Depends on people becoming more proficient in living five values: commitment, focus, openness, respect, and courage.For example,In China, paper money has rarely appeared in daily life, ranging from ordinary grocery shopping to cars and houses. People have begun to use digital currency, the most of which is used by Alipay.\nAs far as i am concerned that requirements changes, technology changes,organizational changes are complementary processes.\nHuman beings need more convenient and faster transportation to reach farther places (land). Therefore, cars were invented. At first, some people resisted cars, so that a dock sculpture was installed in front of the car.\nWhen the steam engine was invented, many original power (water turbines, horses) were replaced by steam engines; with computers and  CPUs , many intelligent instruments (full automatic washing machines, set-top boxes, etc.) appeared.\nChanges in customer needs will become the starting point and foothold of organizational change.For example, nowadays people are living faster and faster, and they don't have much time to watch complete books and movies. So ByteDance has developed TikTok. He perfectly combines the use of fragmented time. This organization is rooted in the new media industry\n \n ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261454,
      "meta": {},
      "text": "1. Requirement changes: A customer demand a button connecting to Gmail account but then he/she changes his/her mind and instead demand the button to link to Facebook account.\n\n2. Technology changes: During software development, the team is applying certain tool or software for a certain feature but then the company of the software decides to push a major change to the software which directly affects the feature being developed.\n\n3. Organizational changes:  A team might initially stick to Scrum method but then manager decides to change the method to other agile method.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263263,
      "meta": {},
      "text": "A change might happen due to a change in competitors actions in the market. For example, if we are developing an e-commerce platform and our competitor launches a tool which drastically improves customer experience, we as software development have to adapt to these changes to not lose market share. This means changing and creating new tasks and shifting priorities.\n\nContinuing the example, a requirement changes can occur if we decide to implement a different tool. In this case requirements will have to include these features. For example, a one-click buy button would be a tool that might be necassary to stop our competitor from capturing our market share (as the competitor might have a similar feature).\n\nA technology change could happen if we decide to use a different service cloud provider. Maybe after discussions it was figured that this new provider would allow for more scalability and better prices. In this case we will have to transform our existing platform onto the new cloud provider (AWS for example).\n\nAn organizational change can happen if our firm changes the management structure. The product owner will have to communicate with different stakeholders and possibly a different product manager with other goals. For example if we develop software for a start-up, and it launches on the market, new shareholders might have different objectives, as well as shift organization in the firm. With the new capital other managers might be employed that take on the project.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263507,
      "meta": {},
      "text": "Change can occur in different stages of the software development process. \nSince software development is not a straight forward process of implementing the desired functionality right away but rather a cycle of (re-)consideration, implementation and testing, software engineers need to be able to deal with change and adapt quickly. First of all it is impossible to plan every single detail of a huge software project in advance, at some point developers will face issues that have not been thought out properly in the first place, which may ultimately lead to either having to redesign parts of the project structure or adapting the software's functionality. But even in fields that are supposedly less error prone, there may still occur some problems during testing. A suiteable example therefore would be a development team working on a login- and registration-system which unintentionally allows multiple users to chose the same username.\nBut apart from these internal reasons within the development team itself there are also a few external sources for change.\n\nWhen for instance a car company works on autonomous driving technology for driving on clear highways and the management decides that the company should furthermore also pursue autopiloting in traffic jams, this would be considered a requirement change. When on the other hand the sensor range of car sensors increases and the development team now has the ability to track objects on the road from a greater distance this would be classified as technology change.\nIt would be called an organizational change when for example the lawmaker increases regulations on the safety measures of autonomous driving and the developers subsequently need to adapt their technology.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264932,
      "meta": {},
      "text": "Reasons for software development:\n\n- A successful company must always be able to keep up in the market. For example, if errors are discovered, they must be corrected. You have to keep developing to keep up with the competition.\n- Sometimes you are forced to interrupt projects because things change unexpectedly.\n=> Automatically follows: change of the software\n\nSpecific example: website/app development\n\nRequirement:\n- customers want convenience and therefore only choose online shops. Especially looking back at the beginning of the Corona crisis;\n- the shop in the perfect location is no longer of any use; a platform is urgently needed; if you don't follow these requirements, they switch to the competition\n\nTechnology:\n- this step ensures that the IT department of the company is growing (if not actually starting) by paying more attention to technicians and website designers and investing in this branch much more than ever before;\n - instead of working actively in the store, you sit behind the computer as an employee and take care of the recession, wishes and purchase processing of the customers\n\nOrganization:\n- this means that things are changing in the world of employees and management.\n You don't go according to plan. Many are laid off or their job changes: Cashiers, for example, are no longer needed because everything runs automatically (e.g self checkouts).\n- \"Sorters\", on the other hand, no longer fill shelves, but pack the orders in boxes. This was not what you are used to before the pandemic and for this reason the organization is turning around 180 degrees",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261324,
      "meta": {},
      "text": "Changes in software development are often results of changed assumptions or problems. An example could be the development of many functions during the Covid-19 pandemic, such as contactless interactions, for which existing software systems had to be adapted.\n\nRequirements changes can be experienced when a customer suddenly faces a different problem than initially assumed, for example when a piece of software was thought to be used by a couple of people and then expanded to be used by the whole organization, leading to performance and usability issues.\n\nTechnology changes can occur when the broader landscape changes, for example going from mainframes to virtualized systems on the same machine to the cloud, where each change incurred a huge workload to migrate existing systems.\n\nOrganizational changes can happen when team structures or the business model change, one case might be a restructuring of the organization after an acquisition or in case of financial problems.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262334,
      "meta": {},
      "text": "Change in software development happens because of an endogenous or exogenous event and subsequent feedback. For example, policy changes like restrictions on data processing leading to changes in software or for example receiving customer feedback that leads to modification of features.\n\nRequirements change relates to changes in the goals and/or the success criteria. This can also be from the clients side. For example, the client intially wanting a feature where the users can upload their image in their profile but then (after feedback) realising this is not required. While this is a very specific case, the idea behind it is that the user's needs changed.\n\nTechnology changes relates to new innovations/ inventions. For example, blockchain and its use in tracking goods through the supply chain in combination with RFID tags. It requires the integration between a more traditional technology and a recently developed one.  \n\nOrganizational change relates to changes in the firm. They can be structural, cultural or strategic. For example, merger between two companied leading to integration of software products and development teams and practices.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263741,
      "meta": {},
      "text": "As software development is no simple undertaking and is sure to be costly in workload and time, it's standard practice to employ a large amount of people to reduce the time needed to complete it. Even this fact is very well known and applied, it still takes years for a single project to yield a final result. As such due to the big number of people and the amount of time needed, many factors arise that are vulernable to change and result in unplanned or even unwanted variations.\n\nIf you use those two origins for change (big time span and the possibility as well as the means for change) in software development and extend their concepts to our real material world, you'll find that they also apply here. Let's take a tree in the mountains for example: The tree is influenced by environmental factors such as thunderstorms, rain slides, parasites, age etc... (means and vulnerability to change). Also a tree lives in average long enough to experience those events. It is highly unlikely that a tree would change over the course of one single day but it will in 2000 years.\n\nRequirement changes focus on the customer as the primary factor. If the customer decides that he wants to widen the range of users for whom the software should be usuable the design and interface change.\n\nTechnology changes result from changing the target system or the programming language for example. Generally changes to the code implementation of the project.\n\nOrganizational changes result in how the company operates the project. Example for that is firing employees or applying a different project management style.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264091,
      "meta": {},
      "text": "Along with the changing technologies and techniques, we also see changes in the software field. Today, technology replaces human power and new needs arise as people's needs are met. In order to eliminate the deficiencies noticed in already created systems, developments are occurring in the software.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1264579,
      "meta": {},
      "text": "Change happens because developing software is a dynamic process with complex requirements that may need to be updated by solving errors or rethinking the problem statement, and, addittionally, the process can be impacted by the external changes of the environment (technology, organizational, etc)\nExample: while developing an app for mobile phones, it is necessary to consider the updates in the newest version of the system in order to make the final product compatible with the phones.\n\nThree areas of changes:\n1. Requirements changes:  the client's  wishes or the rethinking of the problem statement due to better understanding of it, lead to changes in the requirements of the final product. For instance, if  during a project, it is discovered that the problem was not being tackled correctly and the errors are not fixed, this lead to the creation of an irrelevant system.\n2. Technology changes: the technology changes faster than the duration of the project. If these changes are not considered, the process may lead to create a  product that is non- efficient and non compatible with newest technology. For example, if a product is made to be implemented with certain technology (an specific version of a system) , the product may be outdated at the end of the process.\n3. Organizational changes: changes inside the team or firm. For example, if the development process lasts many years , it is common to have a high turn around of staff, which may lead to constant training and rearrangement of the methods of the team, which impacts the final result.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264600,
      "meta": {},
      "text": "Veränderungen in der Softwareentwicklung sind nicht nur gut, sondern auch nötig, da sich in unserer heutigen Welt die Umgebung, Anforderungen und Ziele schnell ändern und berücksichtigt werden müssen. Dabei spielen technologische, operative und Anforderungsänderungen eine große Rolle, da z.B. der Kunde plötzlich andere Erwartungen hat oder nicht zufrieden ist oder es unerwartete Schwierigkeiten bei der Implementation oder Entwicklung gibt, die eine andere Herangehensweise erfordern. \n\nAnforderungsänderung: \nDie Anforderungen oder Vorstellungen des Kunden ändern sich. \nBeispielsweise soll der Einlass beim Oktoberfest mittels einer Software überwacht werden und 5000 Leuten pro Tag den Einlass gewähren. Aufgrund der plötzlich steigenden hohen Infektionszahlen, beschließt die Regierung den Einlass auf 700 Leute zu reduzieren und die Software soll ein Signal von sich geben, sollte das Limit erreicht sein. Die Entwickler müssen die neuen Anforderungen berücksichtigen und ggf. ihre Planung und\nImplementierung ändern.\n\n\nTechnologiebedingte Änderung: \nTechnologien verändern sich heutzutage andauernd an die man sich erstmal gewöhnen muss. So kommen immer wieder neue Technologien auf dem Markt und alte verschwinden. \nBeispielsweise fallen durch ein neues Update alte Funktionen, die für den Entwickler wichtig und häufig genutzt worden sind weg und er muss sich daran erstmal anpassen. Technologiebedingte Veränderungen rufen auch das Problem hervor, dass z.B. das alte System vom Kunden die mit neuer Technologie entwickelte Software nicht unterstützt und nicht mit ihr kompatibel ist.\n\nOrganisatorischbedingte Änderung:\nDie Struktur und/oder Unternehmenskultur ändert sich. \nBeispielsweise wird die Organisationsstruktur geändert, wenn z.B. aufgrund von Krankheit ein Entwickler ausfällt und ein neuer, externer Entwickler in das Team eingebunden wird. Am Anfang wird meist das Team festgelegt und die Aufgaben verteilt. Nun ändert sich die Situation z.B. weil der Entwickler auf einen anderen Bereich spezialisiert ist und die Aufgaben müssen nochmal neu verteilt werden. \n\n\nIn Anlehnung an meine Abgabe vom letzten Jahr:\nhttps://artemis.ase.in.tum.de/courses/121/exercises/4082",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264918,
      "meta": {},
      "text": "There are a number of reasons for change in software development. Often this is the case because at the start of the project not everything is perfectly understood, either the requirements or the technology that is being used, the needs the of the end users change or something can happen inside the development team, so you need to react in the best way possible to the changes in the environment, to deliver the best possible project, keep the cost and being able the deliver on time. One example could be that the business environment has changed since the beginning of the project, initially the customer wanted a service that should be a one time payment, but now he wants a monthly subscription payment model, so the development team need to change that. \n\nAlso there could be requirements changes, for example there could be misunderstood, poorly communicated or wrong requirements at the beginning of the project and now there is a difference between what the customer wants and what the developer team thinks the customer wants. Once this is being realized is needs to be addressed as soon as possible. \n\nAnother type of change are technology changes. This could either happen because the technology being used is too old or to immature to be reliable or to provide all the features necessary. \n\nOrganizational change is if the organization of the team changes. For example this could be if the company chooses to switch the organization from a classic organization to, for example a scrum team structure. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265504,
      "meta": {},
      "text": "The software in itself as well as the team is strongly impacted by outside influences. Starting from a plain idea to the completed software product can take days, months or even years: Therefore, inn order to maintain a productive development environment, changes need to be made on a regular basis.\n\nThere are three main areas in which a change can happen whilst production:\nFirst being a requirement change. Basically, the client / product owner / person responsible for the end-product decides that either a new functionality is needed or a current one needs to be restructured. For example in the midst of the project development the client wants a new sub-page to be added to his Website.\nThe second category is related to any kind of technological change. There can be a lot of scenarios, i.e. an underlying framework has changed / brings new advantages to the project or the way of approaching a problem (e.g. new and more efficient algorithms) have arisen during the development of the product.\nLastly, organizational changes play a huge role in software development. In general this refers to the adaption of a new structural component. Examples include, but are not limited to, a change in the team structure (hierarchy, consistency), communication and potentially the whole workflow system. These adjustments mostly impact the developing team and not the product in itself.\n\nAll these mentioned factors require the development process to be agile and flexible . ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265972,
      "meta": {},
      "text": "Through software development, software systems are developed with the help of different techniques, methods, and tools. These systems are made at a given time and budget for a high-quality product. These criteria form the so-called project triangle. But there is one criterion, which has increased lately, the changed events. Nowadays the world is changing very fast, through technology and digitalization. Human progress is increasing regardless of whether, science, politics, or the economy, which is why the world is getting more and more complex and unpredictable. Therefore the environment is changing constantly, so goals and conditions are also altered. So keep up with progress, you have to adapt. \nThe Coronavirus is an example of an unpredictable occurrence. Also, teachers and students were affected. So schools and universities had to respond rapidly to keep teaching their classes and changed their organization. They had to switch to a digital class, change their teaching methods, and had to be partly innovative. In addition, companies had also to respond to this vast rush of people, using their programs.\nThey had to extend their server capacity and build more security measures. They had to reorganize themselves, to improve different areas. Therefore goals and requirements change. Companies had to adapt because there were other problems to solve.\nAn example of technological changes is the rise of smartphones. People used keypad cell phones but smartphones were better in many aspects. So people decided to buy smartphones rather than keypad cell phones. Companies had to respond and change their technology to keep up with progress and other companies.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266219,
      "meta": {},
      "text": "There are changes in software development at any time, which is different from the assembly line operation of the factory, and it is difficult for people to find a pattern to summarize such changes. This is because it exists in many ways.\nFrom the perspective of changes in customer needs, because software development itself serves various customers, it needs to follow the needs of customers to make changes in real time. For example, social software that was originally positioned at the teenage age group should change the design of the software as more and more adult users join, such as being more simple and pragmatic.\nFrom the perspective of organizational change, the structure of a development team is not set in stone all the time. Taking the scrum team as an example, there is usually a Product owner to define the product and be responsible for results; a Scrum master to\nresolves impediments and be responsible for the process. and a development team. Let's assume this is a development team of three people. And for a more experienced 1+3 team (i.e. only one product manager and a three-person development team), there is no need to strictly follow the 1+1+3 format to reduce efficiency (that is, the intermediate master can be omitted).\nFrom the perspective of technological change, if there is a more efficient algorithm for accessing stored data that can replace the traditional method, the R&D team will often modify the completed code from the bottom.\nAfter all, there is very little real \"tradition\" when it comes to software development.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266245,
      "meta": {},
      "text": "Die Softwareentwicklung ist ein höchst moderner Arbeitsbereich, der in fast allen Bereichen benötigt wird und in dem viele Fortschritte gemacht werden. Da so viele Menschen in vielen Teilbereichen Software entwickeln, gibt es sehr oft Veränderungen, mit denen Softwareentwickler umgehen müssen, sonst kann es passieren, dass die Software zum Zeitpunkt der Fertigstellung nicht mehr auf die aktuellen Bedingungen  zutrifft. Die Veränderungen geschehen in immenser Schnelligkeit. Ein Beispiel wäre der Job meines Bruders, der Hardware für die Chips in Autos simuliert, damit die Software darauf getestet werden kann. Bis die Hardware wirklich entwickelt ist, dauert es viel zu lange und es könnte passieren dass ein Konkurrenzunternehmen die Software schneller entwickelt hat. Somit können sich die Softwareentwickler vorher auf die Veränderung der Hardware einstellen und sind im Vorteil.\n\nAnforderungsveränderungen bedeutet, dass die Dinge die eine Software anbieten oder können muss, sich verändern. Beispielsweise könnte das sein, dass aufgrund von Corona, alle Fluggesellschaften, die Impfzertifikate bei der Online-Buchung checken müssen. Falls eine Software für ein neues Buchungssystem entwickelt wird, muss dies berücksichtigt werden. \nTechnologische Veränderungen bezeichnen Fortschritte in der Technologie, die zu anderen Vorgehensweisen im Software Development führen. Wenn zum Beispiel eine Software zum Röntgen weiterentwickelt wird, die Technik des Röntgens aber in der Zwischenzeit soweit fortschreitet, dass es eine bessere Methode gibt, die das Röntgen ersetzt, muss die Software angepasst werden und eventuell stattdessen für die neue Methode entwickelt werden.\nOrganisatorische Veränderungen treten auf, wenn bemerkt wurde, dass das Produkt der Software anders strukturiert, effizienter ist, wie zum Beispiel eine andere Umstrukturierung von Datenbanksystemen, auf die sich angepasst werden muss\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1261886,
      "meta": {},
      "text": "Software systems are developed with a given budget before a given deadline that need to meet a certain quality while changes occur. These are the criteria of project triangle which is determined by costs, quality and time that are always in conflict with each other. Change is introduced to improve the quality of the software, and to keep up with the evolving world.\nAn example is how technology changes caused Nokia that was the market leader in mobile phones almost go bankrupt by not adapting to them.\nThree areas of changes:\nRequirement Changes: when a company decides to develop a software, there might is a great chance that some requirements get ignored due to high costs or immature technology. or Some requirements changes because of the new legal constraints or because market competitors came up with new ideas and challenged you. like in Nokia example They modelled the mobile phone based on in Time technology and need of customers but they both changed when smartphones were introduced.\nOrganizational Changes: Some stakeholders may not exist at the beginning of the project.  Over time, some stakeholders leave and are replaced with new stakeholders. Because of this they may want to change or add new requirements. in Nokia example the stakeholders didn't want to change the requirements since they were happy with the sales\nTechnology Changes: Since developing a software might take years, the technology that were used might be no longer the latest or the best. Since everybody wants the greatest, the requirements might change.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262773,
      "meta": {},
      "text": "Da die Softwareentwicklung ein sehr komplexer Prozess ist, mit ständig neuen\nProblemen, aber auch mit sich stetig verändernden Anforderungen an die Software, kommt es zu Veränderungen in der Softwareentwicklung. Es werden neue Technologien entwickelt, welche mehr Vorteile mit sich bringen. Es kann aber auch neue rechtliche Vorgaben geben oder neue Trends in der Softwareentwicklung, wie zum Beispiel „test driven development“. Daher müssen sich auch die Softwareentwickler ständig weiterbilden.\n\nZu Anforderungsänderungen kommt es in der Softwareentwicklung, da sich zum Beispiel der Kunde doch nochmal kurzfristig umentscheidet und ein Feature oder Integration geändert haben will. Zum Beispiel möchte der Kunde doch noch neben einem „Login with Google“ jetzt auch ein „Login with Facebook“ Button auf seiner Website haben. Es können aber auch sich ändernde rechtliche Vorgaben sein, wie neue EU-Datenschutzgesetze, welche in Kraft treten während der Softwareentwicklung und daher der Datenschutz in der Software angepasst werden muss.\n \nZu technologischen Änderungen während der Softwareentwicklung kommt es, wenn festgestellt wurde, dass sich eine andere Technologie doch besser eignet als eine andere. Zum Beispiel kann festgestellt werden, dass das große Webframework (Python) Django doch zu viel vorgibt und man mehr Flexibilität und Kontrolle haben möchte und man deshalb auf das kleinere Webframework (Python) Flask wechselt und den Code migriert.\n\nZu organisatorischen Änderungen kommt es, wenn zum Beispiel das Projektmanagement von Scrum zu Scrumban gewechselt wird, weil erkannt wurde, dass dieses sich für das Projekt besser eignet. Auch Änderungen im Team sind möglich, wenn zum Beispiel ein Entwickler das Team verlässt und ein dafür ein neuer kommt, welcher aber erst eingearbeitet werden muss.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262936,
      "meta": {},
      "text": "Change happens in software development because people like the client, or for that matter the development team too, are often indecisive or forgetful and want some changes made or features added. But it is also due to the fact, that the world itself changes, for example wars can start, like right now in the Ukraine, which disrupt a lot of lives and businesses.\n\nRequirement changes can vastly change the scope of a project. For example the outbreak of the covid pandemic transformed many systems, originally developed to track employees time at work, into contact logging systems, to warn people who had contact with an infected colleague. This, of course requires an entirely different approach to collecting and storing the data.\n\nTechnology changes happen has hardware gets better and can perform more operations faster, or as it changes in other ways, to make use of new concepts that are new. An example for this are the changes Tesla made to the self driving capabilities of their newer vehicles by removing the radar, favoring vision based awareness of their surroundings.\n\nOrganizational changes can hit as companies are purchased by other companies or just the project management is replaced, they can also have very harsh complications.\n\nSo it is very important to be able to adapt to change, or else it would be very hard persisting in an ever changing world.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263590,
      "meta": {},
      "text": "Changes in software development can occur because the problem definition or the requirements for the software and the system have changed, due to new scientific knowledge or simply because the development objective has changed.\nAs an example, machine learning has been increasingly used in recent years. This can be explained by the fact that on the one hand, more research has been done and on the other hand, more applications have been discovered. For example, machine learning algorithms are now used to filter inappropriate comments from social networks,something that used to be done manually.\n\nChange of requirement may occur when the requirements have been insufficiently defined or also when new requirements have to be fulfilled due to legal changes.\nIn my opinion, a good example of this is that on Internet sites recently the cookies must always be accepted first and cannot simply be collected automatically. This is due to a new EU guideline, whereby the website and software must be adapted.\n\nTechnological change happens when new innovations and discoveries make things more efficient or even create new possibilities.\nA good example of this is smartphones, which have redefined the original cell phone by enabling new ways of user interaction. Nokia didn't follow the trend and fell from hero to zero in a very short time.\n\nOrganizational change describes the transformation of a company in which the infrastructure or other internal processes are reworked.\nAn example of this is when a company moves from a defined process model to using an empirical process control model such as scrum in order to \nadapt to constant change and improve prediction and minimize control risk.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263841,
      "meta": {},
      "text": "Software and IT in general is a really innovative, competitive and fast paced sector. If you want to have a good product you need to adapt to the changes in technology quickly, try to add useful functions to your software or you have to make changes according to the needs of your customers. Thats why it's common to see changes in software development.\n\nA example for a company that was outpaced by the changes in software development is Nokia. They once were the top producer of mobile phones. But innovative company apple introduced the first smartphone, which had a software that was far more convinient than Nokia's. Apple became the new marketleader and Nokia could not keep track with the new smartphone market.\n\nrequirements changes: changes that are necessary to adapt to new needs of customers or better understanding of the initial needs. \nExample: customer tells you that he needs a new chatmodule for better communication in the software for his business.\n\ntechnology changes: changes that are necessary to adapt to a new development in a technological area, which will probably be a new standard, so you need to change to not fall behind competitors and to secure functionality of the software even with the new advancement in technology.\nExample: Update of a App to secure compatibility with new iOS or Android or ... Version.\n\norganizational changes: changes that are necessary to adapt to because of a change in the organizational structure of a software firm, like new a CEO or new a colleague.\nExample: New Developer in your team. Need to integrate him in the project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266013,
      "meta": {},
      "text": "Change can happen in various fields throughout the developing process. It happens because software development is an onwards evolving process and therefor unpredictable. For example new technologies can get released, laws can be enforced, or other problems appear. These changes are often initiated by external sources. Which again means you are not yourself the reason for the change or can influence it, but you have to deal with it and adapt to these changes. A good real world example here is the enactment of laws as Article 13. As a result of that many companies had to change copyright details of their programs.\n\nOther fields of change would be:\nTechnical changes, e.g. new technology gets released which opens new options for programming or user input or other technical standards. That means even if the user input part of a program is already done, it has to be revised and modified in a new sprint.\nRequirement changes, the stakeholders change or add requirements for the project. You have to add those features or change the already existing features to their liking although they might be finished.\nOrganizational changes are changes dont affect the program itself directly, but the part around the project like staff and timetable etc. For example the team changes, because one or more members get sick or resign. Because of that the whole team dynamic changes and tasks need to be new assigned, time limits need to be delayed and so on.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266039,
      "meta": {},
      "text": "Change in software development can happen due to several reasons. Company-external as well as internal influence change the requirements for software and also how software is being developed. \n\nRequirements changes can occur due to changing regulations / legal requirements or also because customers are requesting different features or products. This can refer to hardware, but also to demanded features of operating systems. \nTechnology changes refer to the change in available technology, which also determines how software is developed. Looking at mobile phones, the available of new hardware technology (such as iris scan / face ID) changes the requirements for software, but also changes in available \"software\", e.g. a switch in common programming languages, changes how software is being developed. Also, technology has a direct impact on the development process, as the possibility of remote work and collaborative online working strongly impacts how teams interact and work together. \n\nOrganizational changes may describe how organizational structures influence the process of software development. Whereas earlier, many development processes were based on a waterfall or linear model, agile software development is considered to be more competitive today. This is also influenced by the changes in requirements, are much shorter development cycles are necessary due to fastly changing requirements. Fast technological change (also regarding hardware) also makes faster software development necessary. \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266141,
      "meta": {},
      "text": "Gründe für die ständigen Veränderungen in der Softwareentwicklung sind auf der eienen Seite die immer wachsenden Anforderungen an die Software als auch die immer wachsenden Möglichkeiten der Software. Auf der einen Seite wird durch die (manchmal bitteren) Erfahrungen der Vergangenheit neue Bugs, Edgecases und unverhergesehene Szenarien Aufgedeckt, gegen die man neue Systeme absichern muss. Durch die ständige Digitalisierung und Entwicklung in allen Lebensbereichen gewinnen Systeme auch enorm an Komplexität. So z. B. wo früher die Aufgabe der Software in Autos sich größtenteils mit Ablesung der Sensorendaten und Verwaltung von mechanischen Elementen abdeckte, so ist schon in naher Zunkunft die Rede vom autinimen Fahren. Somit wachsen Anforderungen an die Software besonders im Bereich der Sicherheit und der Komplexität ständig an. Auf der anderen Seite wachsen auch die technischen Möglichkeiten diese Anforderungen zu erfüllen, oft schneller als Softwareprodukte entwickelt werden können, was oft zu großen Veränderungen innerhalb eines Projekts führen kann. So würde z.B. die Verbreitung von Quantenkomputern die Verschlüsselung vor ganz neuen Herausforderungen stellen, da viele Verschlüsselungsverfahren leicht knackbar wären und ihre effizienz verlieren würden. Veränderungen unterliegt auch der organisatorische Prozess. So hat das empirische Prozess-Kontoll-Modell, das viel mehr wert auf Anpassung und Agilität als auf Vorplannung legt, ihre Verbreitung gekriegt und das frühere definierte Prozess-Kontroll-Modell herausgefordert, welches sich auf Planung und einen klar definierten Prozess stützt und unvorhergesehene Abweichungen nicht gern hat und eher nach einem \"Fabrik-Modell\" arbeitet.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266212,
      "meta": {},
      "text": "Es kommt in der Softwareentwicklung immer wieder zu Veränderungen zur Verbesserung. Die Teams dahinter verändern die Software, um produktiver, effizienter, schneller und mehr automatisiert zu sein. In der realen Welt kommt es durch Automatisierungen zu Veränderungen am Arbeitsmarkt. Menschen, Arbeitskräfte werden durch Roboter oder automatisierte Maschinen wie an der Supermarktkasse ersetzt. \nAnforderungsänderungen können verschiedene Hintergründe haben. Beispielsweise können sich Richtlinien in Apss durch neu eingeführte, abgelaufene Zulassungen oder Gesetze ändern, woraufhin die Softwareentwickler die Benutzeranforderungen ändern müssen. Außerdem kann es zum Vorteil der Benutzer sein oder es werden neue Technologien eingeführt,  für diese es dann wieder neue Richtlinien geben kann.\nTechnologischer Wandel kann zur Softwareentwicklung und Softwareveränderung führen, um die neu erfundene Technologien auf dem höchsten und effizientesten Weg nutzen und ausführen zu können. Des Weiteren bedeutet technologischer Wandel auch die Verbesserung schon bestehender Technologien.\nTechnologischer Wandel ist beispielsweise die die Errichtung neuer oder abgeänderter Fabriken um die Umweltverschmutzung zu senken. \nDer organisatorische Wandel bezieht sich auf Unternehmen,  wenn diese eine wichtige und relevante Komponente in der Organisation verändern. Beispielsweise wenn sie ihre Software können sie ihre Software,  den Standort oder generell die Infrastruktur verändern, um noch billiger und oder effektiver liefern zu können. ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1263327,
      "meta": {},
      "text": "It is inevitable for software developers to face to changes in development activities. Changes can occur due to changes in user requirments, better understanding of the stakeholder's needs, restructuring of costomers' organization and improvement of technologies.\nIrrespective of the fact that the stakeholders believe they have a fixed requirements, the early requirements are usually incomplete due to an unclear vision of business goals and objectives.  With the passage of time and discussion between the stakeholders, an incresed understanding of the goal software will be gained and new necessary issues are discovered which can complete and optimize the requirements. It turns out that changes in requirements occur repeatedly because of the changes in user's requests and deeper understanding of the target.\nIn similar case, technology changes take a part in software development. Ever since the internet took off in the late 1990s, the field of computer and Software is changing with each passing day. There is no doubts that software developers should always adapt to the new version of technologies during development. Some examples are the rise of the AI Coder, 5G unleash mobile developers, and the line between mobile and desktop gone forever...\nOrganizational change examples include going from brick-and- mortar to e-commerce, completely rebuilding the website or launching a new department...\nWith every change during development, the overall cost, quality and schedule of the software is affected. It is reason why Software engineering is defined as problem solving in a changing context and is about dealing with change and complexity while trying to solve the problem.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264202,
      "meta": {},
      "text": "A change might happen in software development when the clients change their requirements of the software of some certain functionality of the software must be improved in order to adept the developing technology(or something else which is also developing). An example for change in the real world is the moore’s law, which shows that the number of transistors in a dense integrated circuit doubles every two years. This is a change which happens in the area of informatics.\n\nA requirements change happens when the users’ needs change or the client want to add some functionalities to the software. The technology changes enable people to achieve more technological breakthroughs and create more possibility to achieve. As the moore’s law mentioned above, as the size of the PC getting smaller, the calculating speed is also becoming much more faster. When a new member join a team or a member leave the team, the organizational changes happens. It also occurs when the structure of a team changes.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264763,
      "meta": {},
      "text": "Change in software development refers to any differences concerning the stages of the software development life cycle. There are various reasons for which change occurs. One major reason however, is a change in the purpose of a software. A change in purpose may arise due to strategy, to satisfy user needs, laws or any other external factors (eg. safety/privacy) that require for the software to be adjusted. Apple’s decision to give users a choice to be tracked by apps demonstrates change well. This means that the design, planning and maintenance stages of existing apps were extended and therefore changed.\n\nRequirements changes refer to a shift in intended functionalities that applications provide, to satisfy their purpose. This is demonstrated by Snapchat’s release of the stories functionality.  This caused a change in the front-end layout which may have extended and hence changed the time taken to maintain and deploy new versions.\n\nTechnology changes refer to all lower levels of abstraction, that the software that is being developed, is dependent on (eg. hardware, system software compatibility, languages/frameworks). For instance, the introduction of react hooks allowed for narrowing down the amount of code needed to develop certain features without needing classes.\n\nOrganizational changes may occur as a result of a change in a firm’s finance, operations, mission, strategy, labor, etc. Facebook’s strategy to acquire instagram resulted in an increased integration of Facebook accounts into instagram which effected a change in all stages of the software development lifecycle.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265910,
      "meta": {},
      "text": "Software development is an important field in IT, because the demand for improving software or new software is getting higher by the second. Therefor we need many employee, who we have not enough of especially in Germany. So as a solution for that, there is a rising Trend coming up, whereas newbies can do software development in form of low- or no-code. These platforms need less manuell writing and experience and are build like kind of a puzzle of code. The result of this change are more employees and less HR costs, for searching for an IT-Specialist. \nThere is often change in software development due to various reason, whereas the main reason is a change in the requirements often because it is badly defined from the beginning. Reasons for a change in requirements during the process are the increasing understanding by the stakeholders for the software or the developers understanding of the product. Therefor requirement changes is the one of the most collaboration-depending process of software development. Furthermore there are the organisational changes, which consist of change in documentation or code, changes in IT infrastructure or other changes regarding organisation that require acceptance from a third party. \nAlso a challenge for software development is a change in technology, why it is required that developers are always informed about new technologies, so they can integrate them quickly, even throughout the process.\nAs can be seen, its an complex field, therefor the new change in Software development no-code and low-code is much needed.\n\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265942,
      "meta": {},
      "text": "Change happens in software development because the world is dynamic. All sorts of things change throughout the course of a software project. The customer might change his mind about what he wants, new technologies might emerge and the team can change, too.\nFor example, when doing a software project, the customer could change a piece of the requirement midway through the project becaus he received new information. \n\nRequirements change: The needs or what the customer requires change. Reasons for that can be market fluctuations, or consumer demands. So let's say you want to build an app for a company and then midway throught the project, they want to change some functionalities because they have won a new consumer segment.\n\nTechnology change: The technology with which the code can be produced, changes. For example, there is a new framework for writing code that makes the process more efficient. But if you switch to the new technology, you can't use the code that you've written so far.\n\nOrganizational change: The organisation changes its strategy or their organizational hierarchy for example. Let's say you're working on a team to produce software and then the company leadership decides to merge the team with another team.\n\n\n \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266318,
      "meta": {},
      "text": "The market doesn't stay the same for long, subsequently customers are interested in buying other types of products, compared to, for example, 1 year ago. So the requirements depend on the client, and on the demands of the public. For example, when the game Anthem entered pre-production stage, EA wanted a survival-horror game. But, as time passed, that genre wasn't popular anymore, so in the end the developers had to release a looter-shooter, which is far different from the initial requirements. \nAlso, technology evolves changes very quickly, so there is no certain \"instrument\" which would be the most optimal in the long-term. New versions of a product based on the same idea come out frequently, and the previous one becomes outdated. As an example, the implementation of AI gets better in time, which allows developers to introduce them into their apps/products, in order to optimize them and make them more efficient. \nOrganizational changes are those that have a significant impact on the organization as a whole. Major shifts to personnel, company goals, service offerings, and operations would all be considered forms of organizational change. This is a natural process, as employees change companies, or just the company itself needs a fresh start, or a new perspective.  As an example, Konami was producing high-budget games. But once the management changed, they decided to fire Hideo Kojima, and rather focus on mobile games and Pachinko machines again. Subsequently, the work process was changed drastically, and so did the requirements and goals of the developers.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266453,
      "meta": {},
      "text": "Needs of the companies as well as the technology that drives them change in each year,month and even week. To keep up with these changes software is also evolving and changing.\n\nReal world example could be cloud management. For over 50 years all the information that has been saved,saved in hardware. Therefore information transformation was not only easy but also costly to firms and or any organization. Yet with the Cloud system and cloud management information transformation is becoming faster and cheaper.\n\tCloud System can be once again good example to analyze Requirement, technology and organizational change. Requirement change is \"transfer data from place to another faster \". Technology change is \"Founding of Internet and then later Cloud system\" and last but not least Organizational change is \" Amazon Hard disks to AWS\" ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262290,
      "meta": {},
      "text": "Software Development is an information based empirical process which has to work in a \"real world\" context, which also inevitably means that it is affected by said \"real world\". Since the world is subject to Entropy (referring to Entropy from an information theoretical POV), software development is also affected by this constant informational uncertainty and change. Often times these changes might be negligible, but with the passage of time these changes are bound to meaningfully affect the process of Software Development. To sum up: Change in Software Development is usually inevitable since the world around it is ever-changing.\nAs previously stated, change in the real world is constantly occurring, but certain changes are obviously more impactful than other ones, the terrible war in Ukraine being one. It should go without saying that events such a these that turn the world upside down also affect a software development project.\n\nRequirement Changes:\nWhile aiming to have all project requirements nailed down at the start is commendable, this is will also often times be unrealistic. Customers will often times change their mind about the required features for a multitude of reasons. \n\nTechnology Changes:\nTechnology is constantly developing/advancing, thereby also affecting the software development process (take advantage of new Features and old Features might be changed/discontinued. For example if an updated version of a Framework like.NET is released and support for older versions is stopped).  \n\nOrganizational Changes:\nWhile a project is under development, the available human resources can fluctuate due to a multitude of reasons, like medical problems (i.e. team members get sick), therefore workload has to be redistributed amongst the remaining members to compensate.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262998,
      "meta": {},
      "text": "There is change in software developement, because the real world is also changing really fast. So processes have to be adapted and redifined a lot.\nJust working on projects like it used to be alone would just be to slow and just not agile enough. Furthermore technical possibilities are increasing rapidly and change software developement.\nFor example some years ago, working remotely was uncommon and hardly done. Today a big part of software developement is done from home etc. \n\nrequirements changes:\nFor example in reality there often are requirement changes due to shifts in market demand.\nOnce Snapchat was the only platform to exist that provided the option to post stories. Nowadays even in WhatsApp it can be done. So the needs in software development for WhatsApp have shifted as well.\n\ntechnology changes:\nTechnologies change over time. 20 years ago mobile phones were just capable of phoning, while nowadays they start to compete with really good cameras. This is only possible, because the CPUs for mobile devices got a lot of power today. That means that the sensor won't have to do all the work for a good picture, rather the developed AI to enhance the picture has to work good. \n\norganizational changes:\nIn the past, software was often developed in projects with milestones and everybody got his own part to do, while nowadays teams work much more agile and methods like for example Scrum are used to get best results.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263400,
      "meta": {},
      "text": "In software development change occurs as most of the times certain factors that determine the process and output of a project change. Take the example of building a house. Even if the client has a very specific idea for the house and has made a blueprint with the architect many things might change during construction. First of all the client could change their mind about certain things and wishes to do them differently, secondly unplanned factors like a bad ground structure or changing laws could interfere with the plans and force change and adaption. Another reason for change could be that certain workers or materials are not available and prohibit certain ideas. \nThe same happens in software development, especially in big hard to overlook projects. Requirements can change, as a client changes his mind, gets feedback from testing or has not yet thought about certain parts. Changes that are due to technology could for example be leaving out a certain feature to to limitations in technology. Organizational changes happen as well. For example if the underlying infrastructure for a project is not given, e.g. a developer is sick for a while or is needed in a different project, the development changes as someone has to either take over his part, wait for him to be available again or leave his part out all together. \nAs you can see changes in software development as common for many everyday life projects is inevitable and important to make all sides happy.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263767,
      "meta": {},
      "text": "Change happens in software development because the requirements of the project may change. In addition, there could always appear new frameworks or other technologies better suited to the needs of the developer team and the project.\nFor example, the client, a big shoe retailer in Germany needs an app for selling its shoes over the internet. We started developing this app with Flutter, to have only one codebase for Android and IOS. Later, the client decides he wants the app developed natively in XCode and Android Studio for better performance. It could also be the other way around, that he prefers a cross-platform approach with Flutter or React-Native to save time and financial resources.\nRequirement changes for example happen when there are unforeseen problems that can always occur as no one can see into the future. Maybe the budget gets cut or the release date gets moved up. Technology changes can happen, when the technology we use as a team does not suit the cost plan of the stakeholders anymore. They want a cross-platform approach rather than a native one. Organizational changes can happen when we decide to switch from cross-platform development to native as we have to reorganize the whole team and their roles and get new developers who are more familiar with the technology. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264366,
      "meta": {},
      "text": "In der Softwareentwicklung erfolgen Veränderungen häufig durch beispielsweise technologische Fortschritte oder neue Software auf dem Markt, die die Perspektive der Entwickler auf verschiedene Problemstellungen verändern könnte, zudem können durch neue Angriffsmethoden durch Hacker auch die Anforderungen an die Sicherheit der Software verändert werden. Da Software auch eine immer wichtigere Bedeutung im Alltag zugutekommt, wird durch die vielen Entwickler etc. immer neues entwickelt und so ändert sich auch Vieles, wie beispielsweise die Übertragungsgeschwindigkeit im Internet durch beispielsweise den Asubau von Glasfasernetzen.\n\nBei den requirement changes ändern sich die Vorstellungen darüber, was die Software können soll. Entscheidet beispielsweise der Kunde, dass in seinem Spiel nun 100 statt nur 50 Leute in einer Lobby sein können sollen, zieht das entsprechende Änderungen in der Entwicklung nach sich.\n\nTechnology changes beziehen sich auf die Hardware, auf welcher die Software ausgeführt wird.\nSo kann auch durch in der Realität immer bessere Grafikkarten, die Software von neuen Spielen entsprechend an höhere Rechenfähigkeiten der Computer der Nutzer entwickelt werden.\n\nOrganizational changes treten zum Beispiel dann auf, wenn das Budget eines Softwareprojekts gekürzt wird, und somit die Anzahl der Mitarbeiter im Team sich dementsprechend verringert. So muss vieles neu organisiert werden, zum Beispiel wer welche Rolle in diesem Projekt übernimmt, und das Mitglieder mehrere Rollen gleichzeitig übernehmen müssen..",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264583,
      "meta": {},
      "text": "Software development is a creative and collaborative process which consists of many steps such as designing a product according to a client's wishes, maintaining, testing and debugging the software, usually with the help of a team. It is one of the most intertwined activities with the fast changing world. Because software development relies much on external factors like market conditions, customer needs or new ideas and discoveries in the field; change is a natural and even vital part of this process. Due to the pandemic, we've witnessed many direct examples of this change: Qroniton, Corona-Warn-App, www.einreiseanmeldung.de etc. Many, developed new software or modified the existing one to respond to the emerging crisis. \n\nThis change can also be gradual, like having to develop a mobile version of your software to meet the customers' needs or change of plans. It is anticipated for requirements to change in response to these evolving needs and preferences of the customer, sometimes of the users. It's important to define, adjust and manage the requirements carefully every step of the software development process so that the outcome will be optimal. \n\nTechnology changes imply advancement in technology, whether it be software changes to support innovations in hardware or new, useful features in a programming language. These changes could persuade the team of software developers to sway away from their original resources for the project, by e.g. switching the dominant programming language. More drastic changes are usually born out of competition inside the market or from maybe months/years of research.\n\nOrganizational changes are more about the structure rather than the content of the project. Having scrum meetings, changing the members of the team or deciding on if they will work remotely or onsite are a few examples.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264665,
      "meta": {},
      "text": "I have no idea where the corresponding slides are for this, as it has not been directly mentioned.\n\nChange can be a reasoned by several factors, as the work environment is not static and the development process if often agile. If requirements are poorly defined in advance or are incorrectly specified, then change must occur during development. Therein requirements may be defined incorrectly, defective or even completely missing.\nAn example for a change in real world, could be when building an application, that it has been forgotten, that you want a web and mobile version, and not only one of them which then has to be built. Another change is, that the customer wants a shopping cart feature, which has not been defined in the functional requirements previously.\nRequirements changes refer to changes, which directly apply to something the user can use or see. An example would be a shopping cart feature for the customer on an online shopping platform.\nTechnology changes refer to the available technological resources, which are used in the process. An example for such would be, that developers must now work on different devices or a different technology is now available or must be considered. \nOrganisational changes refer to changes within the company. An example for such would be a new team member or a new supervisor/ boss.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264734,
      "meta": {},
      "text": "Softwareentwicklung ist eine sehr schnelllebige Sache. Alleine wenn man sich anschaut, welche Mittel man vor ein paar Jahren noch zu verfügung hatte und wie das ganze heute aussieht. Nicht nur gibte es z.B. neue IDEs und andere Systeme die die Enwickung schneller und angenehmer machen sonder auch iummer neue Herangehensweisen an das Thema Entwicklung (z.B. alle Teile über die Zeit zu verbinden und nicht alle am Ende gleichzeitig). Software muss auch immer die Vorstellungen und Wünschen der User entsprechen. Dabei spielt das Design eine große Rolle. Damit der User auch langfristig von der Software überzeugt ist, muss man kontinuierlich das Desing und die Features anpassen. Dazu gehört auch was dem User angezeigt wird. \nEin aktuelles Bsp sind die Sozialmedia Plattformen wie Instagram oder Tiktok von denen ein wichtiger Teil der Algorithmus ist, der bestimmt was dem Nutzer angezeigt wird. Einen guten Algorithmus zu haben entscheidet hier den Erfolg der Plattformen. Daher muss man diesen immer aktuell halten und damit den Menschen auch gezeigt wird, was sie heute sehen wollen.\nGenau dieser Punkt ist gleich auch die Erklärung für requirement changes. Was die Nutzer von einer Software wollen ändert sich über die Zeit und das muss angepasst werden.\nAuch die Techinik entwickelt sich immer weitere und lässt Software immer besser werden. Zum Beispiel spielt AI eine immer größere Rolle und eröffnet ganz neue Möglichkeiten.\nWichtig für Software sind auch organizational changes. Einen Software muss gewartet werde und da ist es wichtig, dass zum Beispiel bei einem personellen Wechsel immernoch in der Lage ist die Software ordentlich zu warten.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266124,
      "meta": {},
      "text": "Change is inherent to software development because software development is a complex process. Complexity arises through the manyfold and diverse interactions of the components of a given system or model. Perfectly predicting these at the start of the process is impossible, thus it is imperative for a team to be able to cope with emergent reconfigurations (change)\nReasons for change in software development are:\n- turnover of team members\n- changing requirements of the user/customer\n- technological changes\n- interpersonal stuff: discussions and disagreements\n- etc. \nA fitting real world example for change could be Netflix capitalizing on relevant trends in consumer behavior and technology to reinvent how they deploy the value proposition of on-demand tv- and movie entertainment. \n\nThree areas of \n- Requirements changes: when the user, the customer or the dev team recognizes, that the system has to be adjusted or has to be developed in a different way. That could be because the needs or preferences change etc. I.e. need for automatic A/C in the car when temparature goes above certain degree.\n- Technology changes: when adjustments in the application domain or solution domain happen/are needed: i.e. have to switch to a different programming language to deliver the product efficiently.\n- Organizational changes: when something in the constellation of the actors in the dev process changes: i.e. Scrum master dies or Product Owner dies, then a new one maybe has to be integrated into the team, which could cause frictions because the team might still be in mourning.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266357,
      "meta": {},
      "text": "Change in the software development happens due to the fact that new requirements in the world occur. Customers need new functionalities because of other changes in requirements. For instance, before ten years it was uncommon to develop a software for a VR Platforms. Still it could have existed but it surely wasn't that mainstream. Whereas, nowadays this new technology is widely spread, therefore, companies adapt their softwares to this new platform. To deepen this example I would add that social media has already been adapted to run VRs since there are plenty of users. \n\nRequirement changes for the process of development of a software could happen due to a poorly defined problem beforehand. For example, if the customer doesn't provide a clear problem description it would be difficult to \"guess\" what the customer wants. Thus, the customer wouldn't be satisfied with the product and will make changes to the requirements.\n\nTechnology changes happen because companies want to stand out and bring something innovational to the market. For example, VR and AR are technologies are being revolutionised nowadays and have a lot of new functionalities.\n\nOrganisational changes occur in the software development due to the fact that teams opt to be more and more productive. Therefore, they find new strategies how to make the development process clearer and faster. For example, having online platforms to track separate team process and reach milestones is a new change that didn't exist last decade.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262755,
      "meta": {},
      "text": "Change in software development happens because of misunderstandings, corrections, redefinition of the product or problems that emerge during the development process and connot be solved. Which means the software around the problem has to adapt and earse the problem form existence. Also software developing is just solving one problem after the other and adapt to the changes, which occur in the process.\n\nIt could be that the team is simply misunderstanding what exactly the customer wants and didn´t identify the problem correctly and needs to change the product when the problem has been clearified. \n\nA requirement change is basically that the requirements for the product have been changed, usually by the customer, and now the developing team needs to meet those new requirements and change the existing product.\n\nAn example for this is, when the external customer is changing their mind about the product and therefore the developing team needs to change in the process.\n\nTechnology changes are if the interfaces of the product that the software is for change, they could get more advanced in time the software is developed or the thing is simply bought by another company and therefore has different interface or interface outputs, which the developing team hs to adapt to.\n\nThere could also be organizational changes, like a budget cut, which might also lead to fewer team members. Or the deadline is set to an earlier date, which requires more effort from the team and possibly new members to help out.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262795,
      "meta": {},
      "text": "There are several reasons for change in software development. One of them is new technologies that are emerging and helping developers do their jobs faster and more efficiently. Also as the industry evolves, new methodologies come out that make work more productive and help the software being developed become more responsive to consumer needs. There are much more reasons but these were just some of them.\n\nAn example of requirements change is the numerous cases of leaks of databases of users of social networks or banks, because of which users lost their money or important information. Therefore, additional and more advanced methods of protection and verification have come to the fore in many products.\n\nA great example for the technology change could be some of the well known continuous integration tools like, for example, Jenkins. It helps with building, testing and deploying the project. At the time when there were no such tools, developers had to do everything manually, which was time and effort consuming.\n\nSpeaking of organisational changes, it is impossible not to mention the coronavirus pandemic, due to which many familiar things, like office work, have become impossible. Therefore, many, if not all, companies have almost completely switched to a home office.  ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264469,
      "meta": {},
      "text": "Change is always prevalent in software development. Maybe a government changes regulations and one has to adapt or competitors have new ideas and challenge you. One example was the transition from mobile phones to smartphones. Suddenly new areas of development formes -> apps for smartphones, etc. and previous market leaders for cell phones, who couldn't catch on as fast, were left behind (e.g. Nokia).\n\nRequirement changes are for example regulations: co2-cap for factories. Others include stakeholders or in terms of Scrum the product owner changing vision and ideas to create a differing product to previous discussions.\n\nTechnological changes on the other hand occur pretty much yearly: CPUs are faster / more efficient. Phones become thinner for improved usability. Sometimes even whole new markets arise: Crypto-Mining-Market predominantly buying GPUs.\n\nOrganizational changes are of more structural nature within companies and development teams. The usage of agile methods for example to build applications and solutions to be working and customer-tailored. In contrast there is small teams, big teams, all serve their purpose. Due to improvement and development of version control software a lot of organization has also shifted towards using these platforms.\n\nAll in all as said in the beginning, change is always prevalent and development has to face rapid occuring change as a limiting factor and work around or with it.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265018,
      "meta": {},
      "text": "Change happens in software development because requirements are complex. Requirements include elicitation, analysis, design, implementation, validation of the system, delivery and maintenance. When errors occur and when the developers have a better understanding of the application, software development projects need to be updated. Software engineering also means dealing with changes. Organisational changes mean that when projects lasts many years, the software developers turn-around is hight, which requiring constant training and lead to high stuff cost. The duration of the projects is often longer than technology changes.\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265110,
      "meta": {},
      "text": "Software engineering is an important part of computer technology. Formal expression has limitations. Even the content expressed may not be satisfactory in efficiency. To improve this situation, changes must be made in the software.\nIn the field of software engineering, the design of the operating system is also one of the kernels. Among the well-known operating systems, windows has been making software changes for nearly 30 years, so from the ms-dos version in 1985 to windows 10 in 2015. One of the purposes of changes and optimization is to bring a better experience to users, such as multitasking switching, shortcut keys, etc.\nUser needs lead to the development of parts of the software. For example, the rise of online meetings starting in 2020 led Zoom to launch services in September, such as adjusting the size of letters and texts, moving video windows, and an integrated payment system that meet the more diverse needs of users.\nTechnically, programming languages that run faster are often pursued. For example, ruby runs slower than applications built with java and python, and is therefore more prone to becoming outdated.\nChanges in organizations are often linked to changes in technology for a variety of reasons. When there is a better organizational structure, the previous organizational structure tends to be overturned. For example, the scrum model proposed in 1986 proposes that a cross-functional team complete the entire process in different stages to improve the speed and flexibility of new product development. Because it can deal with problems quickly and has high efficiency, its creation is an important innovation for being widely used.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265690,
      "meta": {},
      "text": "Change in Software Development happens because of the need for stability, performance and simplicity. There are many reasons it may occur - due to change in requirements, technology, change in the software development team and many more can happen also unpredictably and force the need for a sudden change of state. For an example, a few years ago Python 3 was released and all companies started migrating from the old Python 2.7 to the much newer and better version. It also meant that there was more demand for Python 3 programmers.\n\nExamples:\nRequirements change: The client has a new idea for the software resulting in the need of a requirements change.\nTechnology change: The process of upgrading from an old and unsafe software to a newer and safer one.\nOrganizational change: The sudden leave of a team member can result in the change of roles and the project structure.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266120,
      "meta": {},
      "text": "Software development must adapt to the rapidly changing environment and find possible new solutions. We must remain agile.\n\n1. Changing Software due to new Requirements:\n\t- Laws and Regulations are constantly changing -> Software needs to adapt to these changes\n\t- Example: Data Protection Regulations are changing -> Software needs to meet these new regulations and\n\ttherefore needs to be adapted acording to these new requirements\n\n2. Changing Software due to new Technology:\n\t- Technology changes and improves -> Software needs to adapt to these changes\n\t- Example: new hardware -> we need an approriate software for the new hardware -> former mobile phones\n\thad a different software than current smartphones\n\n3. Changing Software due to Organisational Changes:\n\t- Example: Company is introducing a new business line -> ERP-System needs to be modified accordingly\n\tERP-System needs to be extended to include the new business line which is interacting with the other \n\tbusiness lines",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266230,
      "meta": {},
      "text": "Changes are in the nature of the software-engineering’s empirical process and there can be many reasons why change happens. These reasons can be financial, organizational or technological. For example, change occurs if planned budget cannot be reached, or clients wish changes.\nFor companies, it is very important to adapt changes. Some examples from real life: automobile companies like Mercedes etc. investing in e-cars or Meta investing in A.I. If companies cannot adapt changes, they most likely disappear in the market like in the case of polaroid, which could not anticipate the impact digital cameras and declared bankrupt in 2001.\nNow I will explain three areas of changes briefly. \"Technology changes\": new technologies and technological changes are rising rapidly like A.I, e-cars, digital-systems and frameworks. To compete in the market, projects and tech-companies must adapt new technology changes without losing time. During a project, the technological tools used can also change for improving project.\nThe wish of clients and sponsors can change midway through the software-projects, which can lead to \"organizational changes\". Major organizational changes are changes in personal, company goals, service offerings, operations.\nFor \"requirement changes\", there can be many reasons. The clients can want to add new features, a competitor can release a project with features that you do not have or legislations in area can change which can bring new requirements. In those cases, you must remodel the project with new requirements. For this, Scrum is a good model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262120,
      "meta": {},
      "text": "Change in software development can happen for a plethora of reasons and in many forms.\nFailure to comply to changes in technology can spell major financial losses for competing companies. A good example for this is Nintendo during the fifth generation of the Console Wars, when it deemed the advantages of the then new CD-ROM not profitable enough to include into their then new Nintendo 64, in turn allowing Sony, who used CD-ROMs as their main storage media for games, to insert themselves as a serious competitor in the market.\nChanges can also occur in the form of shifting requirements: maybe a company has ordered a software developer to create a chat application for internal use between the employees, but during development, the higher ups of the company initiate a merge with another company from abroad. As a result, the application now should be able to at least rudimentary translate messages from different languages, to make it easier for employees to get to know their new colleagues.\nChange can also result from a change in organization, for example if the management of the company realizes that one of their software teams is struggling to meet the time and quality expectations for their project, they might reallocate additional, experienced developers to the team to help out, which in turn results in a change of roles and task within the team and a hopefully positive change in the development process.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263584,
      "meta": {},
      "text": "Change in software needs to happen if users request a new feature, new bugs occur and need to be fixed or old features need to be modernized. In Formula 1 the teams need to be constantly improving their cars in order to perform better. So they change the wings and motor to stay in the game.\n\n\nRequirement changes need to be done if the user or the stakeholder wants a new feature. An example would be that in Formula 1 when the FIA sets new rules where they want change and the teams have to adapt and build these changes.\nTechnologie changes are required to keep the software modern and keep up with the times. When the operating system gets an update the software has to change according to the new system.\nOrganizational changes are a change in the stakeholders. A new CEO of the company that develops the software, most likely works differently than the old one.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264149,
      "meta": {},
      "text": "Change happens in software development because customers change their minds. The competitive landscape shifts or new and better technology enters the market. Especially here in software development because software is a living breathing thing, where climates change, goals change and situations change. Therefore you have to react to those changes immediately. Otherwise your competitors will and that can have huge consequences for you as a company or as an individual. Monetarily or even existentially.\nHere's a trivial example for change in the real world. Picture this: You go in the park on a sunny day and spend some hours there with your friends. After a while clouds appear and it starts to rain. Luckily you brought your rain jacket with you. You can quickly respond to the weather change. Your friends, which didn't bring a rain jacket or umbrella with them, can't respond to the change. Their consequence is that they get wet and also maybe ill.\n\nRequirements change for example because of the changes in user demands. So the software has to be adapted to the new user demands.\nTechnology changes because there's an ongoing development. For example first u had to develop software for old Nokia smartphones. Now with Android phones or iPhones the requirements changed to use all their perks.\nOrganizational changes could appear as changes in the company's structure, the strategy, procedures or company culture.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264457,
      "meta": {},
      "text": "Change happens in software development because of new Technologies and because of the environement, for instance, when the government makes a new law or when there is a new competitor enters the market and has new challenging ideas. The best example of that is Nokia, which had to be a market leader before the smartphones were invented.\n\nThe requirements can change all the time. For example, if you find an issue in the source code then you have to change the requirements again and again until you solve the problem.\n\nThe technology changes are more common. Every Technology such as applications or websites is not a final product, there is always an update that happens from time to time. So it is continually changing. The best example i can give is how phone technology changed in the last few years. We went from landline telephone to mobile phone and then to smartphone. In addition to that, we discover every year a new version of smartphones, that is different from the last version.\n\nSoftware development is a creative activity, which means that even if you have a good plan and you organised everything, there is always changes that you cannot predict and fully controll . So there is always organizational changes in software development. Imaging you are organising and planing to have a picnic because it is a beautifull sunny day, but suddenly it started raining. So this is an unplanned Change, that can also happen in software developement.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264637,
      "meta": {},
      "text": "The main reason for the change in the Software Development is the Digitalisation. Software gained a lot of importance in the last years and is used for almost everything we do. The need for Software is high, more software has to be developed in the same time. And the software has to be more and more efficient. \nYou need change in software development to meet these requirements. \nAn example in the real world would be any kind of an app. Apps always have to be up to date, otherwise you would loose customers. So they publish a update almost every month.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264781,
      "meta": {},
      "text": "Change happens in software development because the real world changes, and with it so do requirements for the software that is being built.\nFor Example: The move from local to web applications. In the past programs often only ran locally, while today more and more systems move to web environments. These approaches require radically different approaches to software development.  A web application requires different skills of the developer: the software needs to be scalable to potentially billions of users (e.g. Facebook) or be written in different language (e.g. JavaScript frontend and Java backend vs. local applications written in C) and even requires the Software Development Process to change: DevOps (Development and Operations, continued support after going live) compared to just shipping a project and being done with it.\n\nRequirements Change: change in the requirements for the software being developed (e.g. data protection law change, so now the software needs to be rewritten to comply)\n\nTechnology Change: change in the technology used to develop the project (e.g. new deployment server or changing languages for example from JavaScript to TypeScript) or change in the technology used to manage the project (e.g. Project Backlog moves from Trello to Jira)\n\nOrganisational Change: change in the organisation of the developing team or company (e.g. moving from a centralized team structure to agile team organisation with guilds and tribes)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264936,
      "meta": {},
      "text": "Software development is described by two different opinions: the defined process control model and the empirical process control model. \nThe defined process theory describes it as a planned and strictly rule following procedure. and was published, when this style of product development was very common, especially in fields such as the car industry.\nThe empirical process describes software development as a not entirely planned out, adaptive process. The idea is to fail fast and cheap, to eliminate errors and unwanted behaviour quickly. \n\nApart from the adaptive nature of the Software development process, there are other factors which lead to changes in the field. one might be the ever growing implementation of software. Almost every aspect of our lives interacts with some form of software, might it be work, transportation or connectivity. \nIf a process is as agile and dynamic as that, change becomes somewhat inevitable. \n\n- The requirements for software change not only from customer to customer, but also over time. Thirty years ago, programs were written for specific operating systems, but today so many different devices, operating systems and versions, exist, that the implementation of the software is way more tricky. \n\n- The organisational structure shifted from the strictly planned out top-down hierarchy to a more agile and equal team. Today's methods such as scrum are used to ensure that the voice of every team member is heard to develop the best possible software.\n\n- The technology changes with an ever growing rate, as stated above. With this high pace, software development teams had to adapt to stay in the market and not be outperformed, by using methods like scrum to be faster and more agile. \n ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265509,
      "meta": {},
      "text": "Software development changes because:\n-The need changes over the time\n-software developers are human, so they can make mistakes. That's why these mistakes should be corrected.\nexemple: the operating system of laptops changes always in order to match the new hardware architectur\n* requirment change: the need of the user changes over the time for exemple in covid pandemic, we needed platforms that help online learning.\n*technology change: a new version of a laptop is released every time, which is normally better than the last version. The idea is improving existing technologies.\n*organizational change: a change in the structure, strategie or technology in order to improve the performance. specifically management and business process. The companies need to change in order to adapt the development.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262488,
      "meta": {},
      "text": "Change happens in software development since the complex requirements could change continuously. For example if a mistake in the process is discovered or a better approach have been found, the idea of the software system changes. Furthermore, if there are some additional requirements of the client, the process changes.  Considering the last decades, the phenomenon of open source software, other methodologies (waterfall to agile) etc., influenced the development of software directly and this underlines the importance of change management in software engineering. \n\nRequirement changes: As told before, requirement changes could happen if there are some additional function that the system should fulfill or some requirements should be left out. \nExample: The system of a bank automat should not only pay out money but also pay in money.\n\nTechnology changes: Trends in software engineering how to develop a software could also change, since the technology landscape transforms and progresses steadily. \nExample: Some tools for developing software could become obsolete. But it's not only about tools for development, it concerns also platforms, programming languages, project management tools etc.\n\nOrganizational changes: Organizational structure could also alter since a software project takes time and in between the lead time, team member could leave the company, or hierarchies could change. This influences the process and development of the software. \nExample: In the past people who developed the software and people who managed its operation worked separately. Nowadays they work together (as DevOps) and together they are able to develop and to deploy applications faster.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263777,
      "meta": {},
      "text": "Chnage can happen due to various reasons. Such as ,May be technology change, or the requirement of the customer changed. As time passes,Innovation happens and customer can change its requirement also.\n\nRequirement changes is where the customer requirement changed. For example A customer asked you to develop just website for a particular product. But During the process you were preparing it. The customer launcheed another set of products. Now the customer needs more products on his website . \n\nAs technology ,software programming langauges are evolving from time to time. It is very important to adapt it. for example if somoene wants you to develop a website and you developed a website and it is not Search engine optimized. As it improves the quality and quantity of website traffic to a website from search engines.\n\nOrganizational changes As described in technology changes. It affects also organizational changes. where the website that was developed was not search engine optimized , You need to make the website again. Or when there is large scale change.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264050,
      "meta": {},
      "text": "Change happens in software developement, because circumstances around and requirements for the software product change constantly. Since developement of a complex piece of software often takes place throughout a longer timespan, changes to said circumstances and requirements during the developement process are almost inevitable. \n\n\tA good example are video games developed for hardware which itself is still in developement. This happens often for so-called launch titles of new gaming console generations. The changes which occur to the hardware, while the software is still being worked on, also affect the softwares developement, falling into the category of technology changes, where a change in technology forces the developement team to adapt their product. \n\n\tThe category of requirement changes is defined in a similar manner, difference being that the changes are not dictated by technology, but by changing needs for the resulting product. In the case of video game developement,  the client i.e. the games publisher might decide that the game should be changed to an online game in order to pander to market trends, thereby changing what is required of the final product and further changing how said product has to be developed. \n\t\n\tLastly, organizational changes may occur when the structure of the developement team is disrupted, for example when important members leave or join the developement team. These changes often require that responsibilities are redistributed and developement procudures are reworked to accomodate for changing dynamics within the team.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264223,
      "meta": {},
      "text": "The whole economy and the business world changed dramatically over the last decades. From strict production schedules exploiting economies of scale to lean production plans to meet individual customer needs. This change in the real world has also influenced the craft of software development from strict processes to empirical processes like Scrum.  For example more documentation changes are needed nowadays such that the company at a later stage can review the code of a project and understand it´s purpose more easily. In the past many financial companies used Cobol with a small degree of documentation leading to problems for younger developers now.\n\nIf customers or project managers change their minds or give ambiguous and non-complete instructions requirement changes might occur for developers. Also law regulations might change especially in industries like the healthcare sector. Furthermore, organizational changes like a new corporate policy about code style and documentation can lead to a change of requirements within a company.\nMoreover, technological changes can bring the biggest changes for the long run. More and more firms are implementing AI coding and machine learning in their software development trying to reduce implementation time and to achieve the best possible product in the end.\n\nAll these active changes make software engineering an agil and most exciting endeavour.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264510,
      "meta": {},
      "text": "Die Welt der Softwareentwicklung wird von verschiedenen Faktoren beeinflusst und verändert. Zum einen durch den technischen Fortschritt und Innovationen im Bereich der Hardware, aber auch durch soziale und gesetzliche Einflüsse wie neue Arbeitstechniken, Methoden, Bedürfnisse und Gesetze. So entstanden z.B. durch Innovationen wie Face ID oder Datenschutzgesetze ein neuer Bereich der Softwareentwicklung. Dieser Änderungen lassen sich in mehrere Kategorien einteilen. \n\nUnter Requirement changes versteht man Veränderungen welche durch neue Anforderungen, wie z.B. neue Bedürfnisse der Nutzer, oder neue Gesetze entstehen. Beispiele sind neue Anforderungen zur Verschlüsselung von Daten im Gesundheitsbereich oder gesteigerte Bedürfnisse der sozialen Interaktion. \nTechnology changes entstehen durch die Möglichkeiten neuer Innovationen und Technologien (Vgl. Face ID). Durch die zunehmende Leistungssteigerung von Computern z.B. wird so AI und ML zu immer wichtigeren Themen bei der Softwareentwicklung.\nOrganizational changes werden schließlich vor allem durch Änderungen innerhalb eines Unternehmens oder einer Gruppe hervorgerufen. So beeinflussen neue Strukturen und Unternehmenskulturen nach einer Übernahme oder Verschmelzung, neue strategische und politische Ziele, aber auch der Wandel der genutzten Technik die Entwicklung von Software natürlich enorm.\n ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265135,
      "meta": {},
      "text": "Change in software development happens because of unforeseen problems, immature technology and new market needs. For example switching operating systems for a better user experience or enhancing a programming language to reduce its complexity and boost its speed for a more effective usage, were some customer needs that needed to be fulfilled. \n\nRequirements change is a process where software is improved to satisfy current market needs and to meet  stake holder requirements. A management of these changes is key to a successful software development, which is why a clear plan of evaluation, execution and validation of the requirements is vital. A great example of a requirements change is Amazon, which first started as an online book selling company, but after recognizing new user requirements, turned into a marketplace for almost all kind of items.\n\nA technological change is when the efficiency of a product or process improves due to an increasing number of outputs given the same number of inputs, meaning a greater reward with the same amount of work. A great example for a technological change is e-learning and online courses because the amount of work to prepare a face to face class is relatively similar to prepare an online class, but the amount of students it can reach is incomparable.\n\nAn organizational change happens when a company adjusts an important element of its organization, such as an internal process, its business model, its leadership, its culture or its implemented technologies, which leads to a different structure and functioning of the company. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265841,
      "meta": {},
      "text": "Software is always developed for real world application and the real world constantly changes and evolves. Change in software development is needed to keep up with those changes.\n\nRequirements changes: happen when the area of application for the software changes (e.g. new functions needed)\nTechnology changes: happen due to technical progress (e.g. adapting to new hardware, software updates)\nOrganizational changes: happen when the organizational structure on the users side changes (e.g. adding new security levels with different access rights)",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266038,
      "meta": {},
      "text": "they happen due to changes in the environment, technological advancements, changes of heart of the customer or simply the real world that the model is modelled after changes as well.  An example could be many supply chains and their constant change during the Covid-19 pandemic. And the abstracted models and their software systems have to change with them to not be out of date and keep working as they're supposed to.\n\nrequirements changes are changes that occur \n\n\ntechnological changes are due to technological advancements made that the developed systems need to adapt to. for example, new processors that are a lot faster need new codes to keep up with the market or customers deciding to switch operating systems.\n\norganisational changes mean the fall of traditional hierarchies in development teams. Now we have individual and competent team members who work together harmoniously to achieve their common goal.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266046,
      "meta": {},
      "text": "Change is a constant in the software development world because the field can evolve in a much quicker way than in other traditional engineering domains. The part \"soft\" of the word implies that it is possible to continuously deliver code that is (or should be) reliable, flexible and re-usable. Materials, delivery of components, and lab experiments are only some of the constraints which are put on all the other \"hardware\" domains, and these do not (mostly) apply to software engineering. An example of change in the real world is the scrum methodology, in which the software is continuously and rapidly changed in an iterative process while the product is being developed.\n\nRequirements can change in the following scenarios: the customer demands a new feature; feedback from the users' experience demands a pivot; a cut on the budget has to be taken into account; the requirements defined in the first prototype version have now become obsolete since the user base has grown, or an error was discovered.\n\nTechnological changes enable new ways of coming up with solutions and adapting existing solutions to these technologies. For example, many companies are leveraging the advantages of cloud computing to continue offering their services with reduced costs and increased time efficiency. Also, innovations in the cybersecurity field will have to be integrated into the software of any other field.\n\nOrganizational changes can happen for example when the software development team scales from 2 people to 8-10 people, introducing new communication requirements, or when a deadline has been moved because of some particular reason",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261291,
      "meta": {},
      "text": "example:\nWhen DICE was developing Battlefied 2042, EA executives constantly put forward new requirements for development with them, such as maps that can be destroyed in scenes, adding old maps(like maps from battelfied 3/battelfied 1942), and custom games with custom rules.( requirements changes )\nBut most of the work had to be redone because of the new Frostbite engine that was developed during the development process.( technology changes ) Because of the lack of developers, people from other EA studios were sent to help with the development. ( organizational changes )\nFinally, due to insufficient development time and chaotic progress, there were a lot of bugs after the game was released, and the number of people online continued to decline.\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264318,
      "meta": {},
      "text": "During software development, the dynamic environment could invoke the changes on the software development due to requirements changes, technology changes, or organizational changes etc. In example after Musk finish his purchase of Twitter, the audit system of Twitter will be changed according to Musk's opinion, that's a reason for change in development and maintenance of Twitter.\n\nRequirements changes is focusing on the perspective of customers, in example if the users or the customers of a Q&A platform want to add a new function so that they could judge the quality of an answer, the requirement of the platform is changed.\nTechnology changes is focusing on the feasibility of technique, in example after the update of windows system from version 10 to 11. The softwares for this system need to be developed and optimized to adapt to the new technical environment.\nOrganizational changes is focusing on the structure of development's team or the team of stakeholders, in example if a start-up for software development employ more workers who own more business experience, they can provide more changes for payoff from the product during the development process.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264599,
      "meta": {},
      "text": "Software-Technik ist ständigem Wandel unterworfen, da sie von verschiedenen dynamischen Faktoren abhängt: Den Erwartungen und Anforderungen der Anwender, dem Stand der Forschung, den Möglichkeiten der Technik, dem Wettbewerb zwischen den konkurrierenden Marktteilnehmern. Zum Beispiel wird aktuell KI immer wichtiger, und Software-Firmen müssen sich an diese Veränderung anpassen, um konkurrenzfähig zu bleiben.\n\nVeränderung kann auf verschieden Arten auftreten. Es können sich erstens die Anforderungen an ein Software-Projekt ändern, etwa weil mit zunehmender Nutzerzahl Performanz immer wichtiger wird, weil Sicherheitslücken ausgenutzt wird und es ein erhöhtes Bedürfnis nach Sicherheit gibt oder weil Software energieeffizienter werden soll, wenn ein Unternehmen Klimaschutz-Ziele definiert.\n\nZweitens kann Veränderung im Bereich der Technik auftreten. Speicher wurde immer billiger, wodurch die Verwendung von speicheraufwendigen Sprachen wie Java oder Skriptsprachen erst möglich wurde. Während Prozessoren lange Zeit immer schneller wurden, bricht diese automatische Performance-Steigerung langsam ein und Software-Entwickler müssen andere Wege finden, um ihre Programme effizienter zu machen, z.B. über Parallelisierung. \n. \nDrittens kann es Wandel im organisatorischen Bereich geben. Entwickler und Experten kommen und gehen, IT-Unternehmen kaufen einander auf, Projekte wachsen immer weiter und müssen schließlich in verschiedene Einzelprojekte aufgespalten werden.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264997,
      "meta": {},
      "text": "Our lives wouldn’t be this easy if developers didn’t work for change and development in their products. We are getting used to the speed of the products we use and what they can do very quickly, so we want more day by day. For example, back then there were no streams and optionals in Java but they were certainly needed for efficiency. If Java designers and developers had not seen this need in their product, they might have been fall behind the competition. There also may be changes that are caused by the constantly changing technology. Apple probably did some changes in its software for its new ARM based chip because there might be problems due to changing hardware technology. Or the banks that are using really old programming languages should maybe change their software because they may not be able to find developers for that language or keep up with the new features. Sometimes it has nothing to do with the technology but there might be new regulations like less energy usage, confidentiality laws. Likewise, the customer may change their decision in the middle of the development. In those cases, the requirements of the project changes, so must the development process. There also might be organizational issues such as changes in the team, company or in the financial budget. Software projects takes a good amount of time so we can’t expect for the team to stay exactly the same. Also, some adjustments may be needed if the planned budget seems to be overbudget. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265111,
      "meta": {},
      "text": "in unserem heutigen Zeit gibt es viele Veränderungen durch  die Softwareentwicklung, einer davon ist die Entwicklung vom Smartphone, da im 2007 war  der ersten IPhone vorgestellt und nachher dadurch die Entwicklung von begrenzte Vorderseite Touchscreen zu voll  Vorderseite Touchscreen und noch andere Techniken sowie CPUs, Kameraauflösung, Rams, Cap, etc...  .Heutzutage benutzen  fast 80 Prozent der Bevölkerung Smartphone.\nzuerst möchte die drei  \"areas\" definieren, \"organizational changes\" :Organisatorische Veränderungen sind solche, die erhebliche Auswirkungen auf die Organisation als Ganzes haben. Größere Veränderungen bei Personal, Unternehmenszielen, Serviceangeboten und Abläufen würden alle als Formen der organisatorischen Veränderung angesehen.\n\"technology changes\" :Technologischer Wandel bezieht sich auf die Idee, bestehende Technologien zu verbessern und neue zu entwickeln, um die bestehenden Produkte zu verbessern und neue Produkte auf dem Markt zu schaffen. Dieser ganze Prozess hilft dabei, neue Märkte und neue Marktstrukturen zu schaffen und veraltete Märkte zu zerstören.\n\"equirements changes\" :\n",
      "score": 41.7,
      "language": "GERMAN"
    },
    {
      "id": 1265898,
      "meta": {},
      "text": "Change happens in software development because many/most parts of software development can be described as an empirical process. This means that we can’t plan every single step during the process but depending on our environment we have to act accordingly. This can be compared to the development of a prototype. You know where you want to go but there are some uncertainties along the way, e.g. reactions of competitors, some false assumptions that you made in the beginning, technical infeasibilities etc. which may force you to change your strategy or goal along the way.\n\nRequirement changes affect the basis on which your product is built on. Changes in this area force you to change this basis. You can compare this to changes in the legal foundation of a market, the expiration of a patent or the changes in the wishes of the customer.\n\nTechnology changes involve the introduction/availability of a new technology. This can mean that there is a new technology available which would make your current software development project obsolete or that there is a technology that would make your whole business model obsolete. That’s why you have to adapt to this change. An example for that could be the effect of the internet on the traveling business because the service of travel agencies was mostly replaced by comparative portals.\n\nOrganizational change can be explained by the organization of your team that is developing the software. Depending on the customer requirements, your (new) team members or new team processes, you have to find a way to work together in the most efficient way that works for everybody and produces the best output.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266007,
      "meta": {},
      "text": "Software development as a whole has changed substantially in the last few years, with the availability of better technological equipment and more refined skillsets but also with a more dynamic and agile approach. Instead of sticking to a predefined plan, today's teams are much more open to adaptation, making it possible for them to react to changes during the development process and not afterwards. Whereas it may have been possible to follow the plan precisely without deviation before, due to the rapid movement of the technological world and the exponentially growing number of ongoing projects, a development team nowadays has to constantly be able to adapt to changes. If the government signs a new law enforcing higher data security, the safety requirements for software will change and a team might have to switch to a different, more secure encryption. Technology is also rapidly improving and a team might be forced to switch to a new platform with improved tools that is better suited to the project than their current one. Additionally, because of the increasingly competitive job market, one of the developers might be headhunted by another company and thus enforce organizational changes. The former member's tasks then have to be distributed amongst the remaining members and the project might have to be delayed temporarily, as to not overwork the development team. In this day and age, the ability to adapt to change can make the difference between a successful launch and a forgotten product.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266336,
      "meta": {},
      "text": "The world is always changing. The technologies, which are used by developers and requirements for them are also changing. There is not only one way to solve a problem, but always more than one. So ingeneers continue to develope more different methods trying to get the best and the simpliest solution. Also changes keep happening in technologies, new technologies are coming and the other are getting old. So in hardware, new processors - new opportunities. And software developers can use it.\n \nFor example:\nwhen amd changed the architecture of their processor from 32bit to 64bit, a developers team had to adapt to new processors so they can work with more volume of data. So they needed to change requirements for the developers who work there and they also needed to their programs, which were written before the new processor comes in the world.\n\nAlso there are organizational changes, which help a business run good. There is a loop, employees are fired and new are hired. It helps to bring another view and a new method of thinking in a team, what helps at the times and to learn a new technologies.\nFor example a team made an application and thez need to support it and give some new ideas in it. But the team is stucked, they do not know what to do further. They need some changes, that's why, they need an organizational change.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262394,
      "meta": {},
      "text": "Changes in software developement happen to keep the process up to date, not changeing the process, can lead to a fallback in the competition with other competitors. Currently you can see this happen in the automotive industry, where the big brands are very slow in adapting to a higher demand on the car software and an young brand has a giant lead in their software. \n\nThe requirements of a product can change, for example can a higher security standard be demanded by the users.\nWith the technologie changeing a software can be forced to interact with the new technologie an by that has to change.\nIf a software uses on central server for all users, and for privacy reasons the server has to be split into more regional servers, the software has to be re structured.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263035,
      "meta": {},
      "text": "In software development, due to the complexity of the project, there are always factors that neither the developers nor the management can control. These factors can lead to changes. They can arise, for example, from new customer requirements, technological developments or organisational changes within the team.\n\nAn example of a real world change would be the introduction of Windows 11: This was a technological change that forced other companies to update their software products to meet the requirements of the new operating system.\n\nThere are different areas of change: Requirements, Technology and Organisation. Requirements changes are changes to the specification of the software. For example, these changes may be introduced by customers after they have seen a prototype of the software and want to change something about the design, functionality or performance.\nTechnological changes occur in response to new technologies introduced by other companies, or as a result of bugs introduced in tools used by the development team.\nOrganisational changes, for example, require the development team to adapt to a new team structure as a developer leaves that team. Or adapting to a new schedule.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263220,
      "meta": {},
      "text": "Change in software development happens because internal and external factors are flexible and can vary. A big factor is the communication between product owner and the developers, feedback from the users/testers of the end product and the innovation of programming tools/libraries. \nAn example for changes in the real world could be the updating of timetables for trains. When there is only one train in the morning when a lot of people commute to school or to work then this won’t be enough. The timetable needs to be changed to accommodate all people.\n\n\nAreas of changes:\n\n•\tRequirement changes: changes in the requirements for the end product \nExample: user has different needs, therefore some functions have to be removed or added; product owner has a different vision; some features for the end product are not possible with the current given requirements; …\n\n•\tTechnology changes: updates of used tools or the availability of new ones\nExample: a new library or tool is available; the update of a used tool removed a critical function that was needed, so a new one is needed; …\n\n•\tOrganizational changes: when the roles of the involved persons, the number of involved persons or certain dates for milestones change\nExample: the scrum master has an accident and cannot work for a longer period of time so one of the developers needs to step up; a few developers have covid and cannot work; the date for the launch of the end product changes; …",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263236,
      "meta": {},
      "text": "Software development isn't a static thing. As you develop a project, you learn more about it, you find better ways of doing things, or struggles arise, and you have to deliver a solution within a given time frame. A multitude of factors play into the development. A data breach could force you to reassess the way you handle the security of your data and force a change. \n\nRequirement changes:\nthe changes forced upon your development can come by the hand of government regulations. The EU for example, thigh tend their laws regarding user data and transparency. To comply with them, some changes had to be done to the handling of user data.\n\nTechnology changes:\na framework or key component of your project could stop being supported. For example, Adobe Flash stopped being supported by mayor browsers. If you had built your software with it, you would have to completely rebuild the functionalities provided by it or switch to a different solution.\n\nOrganizational changes:\nan increase in scope of a project can call for different organizational structures. Scrum for example might work for small teams or startups, but once you have a user base of millions you can't handle the massive workload in such a small team. You have to hire new employees and Scrum ceases to be an effective system to run the project",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263351,
      "meta": {},
      "text": "Change happens in software development due to a number of factors, but the most important are:\n1. Change due to advancments in technology\n2. Change in the working environment (i.e budget)\n3. Change due to the surroundings (i.e dev team)\nWhenever either of these happen, the way that software development has been before no longer applies, and there needs to be a differnt way of doing things, in order to \"survive\" after such changes.\nSuch an example to that can be the company Nokia, which even though they have been leading the market when it came to phones, the company \"fell off\" with the invention of smart phones, as they werent prepared for a change like that. In this example the change due to technology had proven to be a main factor.\nThe three areas of change can be explained further:\n1. requirments change: this change occurs when something changes within the working environment, such as, for example, change in the deadline or budget for the software.\n2. technology change: this change occurs when the current (accepted) technology changes, and there are new ways to develop the software that had been developed until now.\n3. organizational change: this change occurs whenever the surroundings around the software development changes, such as new management, of a new team of developers. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263960,
      "meta": {},
      "text": "As software development is connected to the real world, it is also impacted by change in the real world. New technologies become available and end goals might change over time. An example would be new game engines for video games.\n\nSo, if one were to look at the development process for a new smartphone, he could observe changes in different areas. Let's assume the project leader is replaced and the new person in charge wants to include a new feature he observed at a competing company. For this new requirement, the board of directors provided extra funding, so now additional developers are hired and existing ones are moved to the development of the brand new feature using cutting edge technology, while simultaneously decreasing testing resources to stay ahead of the market. This shows how change can occur in different areas as well as overlapping multiple areas.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264348,
      "meta": {},
      "text": "Einer der größten Herausforderungen in Software Development stellt die kontinuierliche Masse an Veränderung da, die während der Umsetzung eines Projektes auftritt. Dabei gibt es eine Vielzahl von verschiedenen Veränderungen, die einen großen Einfluss haben können. Einige der wichtigsten Bereiche, in denen Veränderungen auftreten können, stellen technische, organisationelle und anforderungstechnische Veränderungen da. Speziell die Branche der Software Entwicklung und der Informatik entwickeln sich in rasantem Tempo und sind hoch technologisiert. Dies hat zur Folge, dass ständig neue Technologien auf den Markt kommen, die eventuell auch für das eigenen Projekt unabdingbar sind, damit man gegenüber Mitstreitern kompetitiv bleiben kann. Doch auch im organisationellen Bereich können Veränderungen zum Problem werden: z.B. können Personalveränderungen oder sogar strukturelle Veränderungen des eignen Unternehmens einen großen Einfluss auf ein development team haben. Mit solche Veränderungen muss dementsprechend umgegangen werden; Beispielsweise muss ein neuer Software Engineer adäquat in das Projekt eingeführt werden, falls er neu im Team ist. Jedoch am wahrscheinlich häufigsten treten Veränderungen im Bereich der Anforderungen auf. Oft wissen Kunden am Anfang garnicht genau, was sie wollen, weshalb es ihnen schwer fällt klare Anforderungen zu definieren. Dabei ist eine Präzises Anforderungsprofil essentiell, um ein Produkt zu entwickeln, dass dem Kunden am Ende gefällt. Werden Fehler oder Ungenauigkeiten bei der Anforderungsanalyse gemacht, kann es passieren, dass beim Entwickeln der falsche Kurs eingeschlagen wird. Wird dies nun zu spät entdeckt, treten Veränderungen/Korrekturanforderungen auf, die teuere und zeitaufwendige Änderungen am Projekt nach sich ziehen können. Die agile Software Entwicklung versucht deswegen einen stark feedbackorientierten und inkrementellen Entwicklungsansatz zu etablieren, um Veränderungen früh zu erfassen und sich diesen anzupassen. ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265935,
      "meta": {},
      "text": "The Change happens ",
      "score": 0,
      "language": null
    },
    {
      "id": 1265958,
      "meta": {},
      "text": "Es kommt immer wieder zu Veränderungen in der Software-Entwicklung, da alle Unternehmen, sich konstant an die Anforderungen der Käufer anpassen müssen. Ein Beispiel hierfür ist die Firma Microsoft, welche die Software \"Teams\" anbietet. Als die Pandemie ausbrach waren alle Schulen auf einen Online Unterricht angewiesen. Anfangs benutzen viele Schulen die Plattform \"mebis\". Da diese sich aber nicht weiterentwickelt hat und den Anforderungen der Schulen nicht decken konnte, benutzten viele Schulen das sich in dieser Zeit gut verbesserte Teams. Durch die Veränderungen in der Software-Entwicklung (z.B. neue Features) hat sich Teams durchgesetzt und steht nun besser auf dem Markt da als die Konkurrenz.\n\nVeränderungen der Technologie sind nötig, wenn ein Unternehmen sich weiterentwickeln möchte um mit der Konkurrenz mithalten zu können oder wenn es ihm nicht mehr möglich ist die Ziele seiner Kunden zu erfüllen durch z.B. fehlende Rechenpower der PCs, welche dann letztendlich ausgewechselt werden müssen.\n\nVeränderungen bezogen auf die Organisation eines Teams werden dann essentiell, wenn das Team z.B. ein paar größere Projekte anstehen hat, welche besonders komplex sind und eine koordinierte Zusammenarbeit des Teams erfordern. Dazu kann man sich z.B. am Scrum Verfahren orientieren und beispielsweise regelmäßige Meetings einführen bei denen jeder seine Tagesziele und bisherige Errungenschaften vorstellt und somit die Teamarbeit fördert.\n\nVeränderungen bezüglich der Anforderungen an die Software bzw. Unternehmen findet dann statt, wenn ein Unternehmen einen Auftrag bekommt, bei dem es beispielsweise darum geht eine Software für einen Airbag zu programmieren. Hierbei muss die Software fehlerfrei sein, da bei einem Fehler die Konsequenzen (eventueller Tod) wesentlich größer sind als beispielsweise ein Fehler in einer Kamera-Software.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1266249,
      "meta": {},
      "text": "Software engineering is a collection of techniques, methodologies, and tools that help develop high-quality software. It deals with a classical project triangle consisting of quality, time, and costs (typical in conflict) and needs to optimize the final product based on these constraints. To keep up with, e.g. competitors, you have to invest in innovation which leads to change.\n\nTechnologies: Changes every day, like the famous Moores law that the transistor count doubles in µCs every two years( =more computing power)\nRequirement changes: e.g. new legal constraints like new regulations, new competitors\nOrganizational Changes:  every organization will undoubtedly experience a change  to remain competitive, like the implementation of new business models or the transition to an agile project management process like Scrum (and therefore, the change to an iterative software development process)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266281,
      "meta": {},
      "text": "Change happens in software development because people recognize that software development must be organized and implemented according with engineering principles and methods. The great development of the Internet also make software development enter into a new period of technological development. For example, people now use online payment to complete purchase, while people before only use bank card or in bar.\nIn the area of the requirements changes, the more convenient and more efficient way of trading promote  the economic development. By technology, the phone has entered in our lives so that we can easy do many things with it like paying instead of bar, getting in contact with friends anytime. In organizational fields, the social diagram make the connections between people even strangers closer.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262244,
      "meta": {},
      "text": "Change happens, because we live in a fast paced world and always strive to achieve something better, faster and greater. This also applies to technologie. \n\nRequirement changes occur when the client has another use case for the programm he wants to have implemented. \n\nTechnology changes occur when there is new technology appearing in the market. For example when a new graphics card is released, the software needs to be adapted to work best with the new hardware. \n\nOrganizational changes occur when for example, the company wants to use a new method concerning the work in teams, for example want's to implement the use of scrum. Or the head of a team leaves the company and a new team leader comes in and changes something. \n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262267,
      "meta": {},
      "text": "Change happens in Software Development due to its complexity, which makes it impossible to have standardized ways of developing software but instead need to be developed based on experience.\n\nAn Example for such a change would be the \"3G am Arbeitsplatz\"-rule introduced in Germany due to the Covid pandemic. Since the employer could be held responsible for applying this rule at his/her company, providers of Workforce Management Software were asked to provide a solution to track the status of vaccination of each employee. The requirements the users needed their Workforce Management Software to meet changed based on a law enacted by the German government.\n\nRequirement changes describe a change in the requirements the User/Customer needs the product to meet. At the beginning of each Project these requirements are usually identified. These requirements might change due to changes in the environment (e.g.new type of user; other types of interactions with the product are needed). Alternatively requirements which previously might have been overlooked can be discovered to have an impact and need to be included. \n\nTechnology changes are changes that occur due to changes in the Technology. Software/Source Code is based on certain technology, which might be updated or no longer supported. If so, the product might need to be adjusted.\n\nOrganizational changes are changes that appear in the organization of the development team. This might includes restructuring of the development team as well as a new product owner who wants the team to focus on other aspects than the previous product owner.\n\n\n\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262645,
      "meta": {},
      "text": "Im Software Development benutzt man mittlerweile vor allem eine agiles Model, \nbei welchem man bestimmte Vorgaben hat(welche sich auch noch ändern können)\nund dann während dem Prozess(empirical) gegebenenfalls adaptiert. Man ist von einem \nstrengeren/robusteren Prozess(defined) abgewichen, weil die Software und die zu erledigenden \nAufgaben zu komplex geworden sind um sie mit klaren einheitlichen Schritten zu bewältigen.\nDurch dieses agile Model kann es während der Produktion zu mehreren Arten von Veränderungen kommen\nan welche man sich dann anpassen muss. So musste Nokia, wegen der Erfindung des Smartphones (technisches Fortschritt),nicht nur adaptieren sondern ihre Produkte komplett ändern und sich der Konkurrenz vorzeitig beugen. Neben technischen gibt es auch noch organisatorische Änderungen und sich wandelnde Anforderungen.\nSo können sich die Anforderungen einerseits durch den  Kunden ändern, indem beispielsweise bei einer Website statt einer erweiterten Suchoption jetzt doch eine einfache Suchoption mit automatisierten Vorschlägen verlangt wird. Andererseits können sich die Anforderungen auch durch externe Faktoren, wie gesetzliche Änderungen, wechseln. Beispielsweise dürfen Onlinespiele in bestimmten Ländern keine Lootboxen verkaufen und müssen dort durch andere Verkäufe ihre Einnahmen erhöhen. Letztlich kann auch ein organisatorischer Wandel der Firma zu drastischen Änderungen führen. Darunter fällt beispielsweise der Erwerb der Firma, wodurch die sich zu entwickelnden Produkte ändern können, weil der neue Besitzer womöglich  Produkte für eine andere Zielgruppe\nentwickeln will.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1263372,
      "meta": {},
      "text": "Veränderungen treten in jedem Bereich des Lebens auf und wir sind tagtäglich mit Veränderungen konfrontiert. Sei es eine Veränderung des Unistundenplans, eine Veränderung der Wohnsituation oder eine Veränderung im Liebesleben. \nIm Bereich des \"Software Developments\" ist es ein fester Bestandteil der Disziplin mit den auftretenden Veränderungen umzugehen und diese zu meistern.\nBei der Softwareentwicklung kann es aus vielen verschiedenen Gründen zu großen Veränderungen des Projektes kommen. Einer der Gründe könnten schlecht formulierte oder sich ändernde Anspruche des Kunden an das Endprodukt sein. Hier fällt häufig erst im Laufe der Arbeit auf, dass ein Teil der Anforderungen missverständlich oder unklar formuliert sind. Dies kann dazu führen, dass nach Absprache mit dem Kunden, Pläne oder bereits implementierte Sachen angepasst werden müssen.\nAuch Veränderungen in der Technologie haben einen großen Einfluss auf das Software Development. Wenn man in die Vergangenheit blickt und sich den Werdegang der Technologie in den letzten 50 Jahren anschaut, kann man unschwer erkennen, dass diese sich so schnell und drastisch verändert, wie kaum ein anderer Bereich. Dabei immer aktuell zu bleiben und sich mit den neusten Trends, wie zum Beispiel der künstlichen Intelligenz, auseinanderzusetzen, erfordert für die Software Developer eine sehr hohe Anpassungsfähigkeit.\nAuch die Organisation von den Projekten ist hoch komplex und verändert sich ständig. Neue Teamzusammensetzungen, neue Managementstrategien und neue Kunden mit verschiedenen Anforderungen an das Team sind Alltag beim Software Development. Und das sind nur die vorhersehbaren Sachen. Es kann auch zu unvorhersehbaren Ereignissen kommen, welche eine Neuorganisation erfordern. Beispiele hierfür sind Verschiebungen von Deadlines oder Kürzungen von Budgets, worauf das Team sehr wenig Einfluss hat und lernen muss damit umzugehen.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264219,
      "meta": {},
      "text": "Entwicklungen sind in vielen Bereichen der letzten Jahre zu sehen, unter anderem auch in der Softwareentwicklung. Veränderungen passieren, da dadurch Abläufe verbessert (vereinfacht & schneller) werden. Des erspart Kosten und ist für Unternehmen somit vorteilhaft. Zudem führen Veränderungen häufig \neiner höheren Dezentralisierung und Flexibilität. Ein Beispiel für eine Veränderung in der echten Welt ist der Ablauf, wie eine Software programmiert wird. Früher wurde hier das Wasserfall Modell verwendet (Konzept - Design - Entwicklung - Testphase). Dies hat sich drastisch zu einem agilen Modell verändert. Hier durchläuft man sozusagen mehrere 100m Sprints, die Wiederholungen und eine kooperativere Umgebung ermöglichen.\n\nAnforderungsveränderung:\nAnforderungen an die Software werden mit der Zeit immer größer. So basieren nun ein Großteil der Apps auf Cloudsystemen, welches vor 10-20 Jahren noch untypisch war. Diese Anforderung ist heute häufig Standard, was zu einer Dezentralisierung führt, vor allem bei der App Entwicklung.\n\nTechnologieveränderung:\nViele Softwares beinhalten neue technische Veränderungen, wie zum Beispiel Künstlich Intelligenz. Diese sorgt häufig für Hilfe von Datenverarbeitung oder auch beim Testen verschiedener Programme. Zudem gibt es KI's, welche schon Teile von Programmen selbst programmieren können.\n\nVeränderungen in der Organisation:\nHier führe ich nochmal das Beispiel aus dem ersten Absatz an, mit der Veränderung des Ablaufs einer Softwareentwicklung. Durch das neue System müssen sich die Programmierer neu organisieren, und zum Beispiel Scrums auf einer täglichen / wöchentlichen Basis vereinbaren. Zudem arbeiten auch die verschiedenen Abteilungen zum Teil stärker zusammen, da paralleler als früher gearbeitet wurde.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1264343,
      "meta": {},
      "text": "Since, nowadays , every software development process adapts agile methodology , changes are more likely to happen.\nReasons;\n1. Requirements are not met as expected./ change in user's requirements.\n2. Technical reasons such as lack of technology, which is important for developing software.\n3. Maintaining software in the long run.( example of Nokia explained in lecture)\n4.Financial issues\nChange in real world could be best explained with virtual classrooms instead of on-premises. Also , how we could play games with each other while sitting miles apart (playing LudoKing)compared to past Decades where we required someone to play with us. Updating your android/ ios every 3-4 month.\nRequirements changes due to change in customers needs, increased competition in market.\nex-During developing a game , customer wanted to add Sound effects which was quite unfeasible and costly.\nTechnology Changes : After facebook , orkut could not maintain/ update its software development process and had to be shut down.It was expected from orkut to provide same services as facebook.\nOrganizational changes- Change in methodology/ laws\nex-Scrum master decided to involve 5 more people in the process.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264508,
      "meta": {},
      "text": "Due to different projects having different requirements and new possibilities and ideas in SD constantly becoming available, it is no constant and easily standardizable process. New and faster or specialized Hardware for example can enable the implementation and execution of algorithms in Software, which were only theoretically possible before. The recent AI Boom is also due to Hardware getting fast enough to handle the necessary calculation, which in turn also enables new SD approaches such as Low-Code/No-Code.\n\nRequirements change for several reasons, one being communication. Explaining a complex system precisely can be a very difficult task especially in a natural language, so misunderstandings are likely to occur. As parts of the project are materialized in Software, these differences between what the customer meant and the provider understood will become more apparent and easier to talk about. Given clarification of such misunderstandings after a sprint is completed, the next sprint can be planned with the correction as a new requirement in mind.\n\nAs outlined above, the available technology also greatly influences the SD process. Beyond hardware, software also changes. Programming languages with their different strengths and weaknesses and thus use-cases simply translate into different tools suited for different situations. The availability of a more diverse set of tools naturally changes processes and outcomes, as this enables better fine-tuning.\n\nHow a project should be organized is not generally an easy question to answer, as modules with complex interdependencies for example will require more thorough documentation and communication between the developers and might require smaller teams for efficient implementations. More developers can however implement more functionalities in a given time and thus those two aspects are to weighed against each other carefully and might change from (sub)project to project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264640,
      "meta": {},
      "text": "Ein Großteil der Softwareentwicklung ist empirischen Ursprungs und daher vorab nicht vollständig planbar und definierbar. Während des Prozesses können sich kurzfristig Änderungen ergeben; deshalb muss die Softwareentwicklung dauerhaft anpassbar und agil ausgerichtet sein. \nEin Beispiel hierfür ist die Entwicklung einer Software für einen Tesla. In einigen Ländern kann autonomes Fahren bereits erlaubt sein, während andere Länder dies noch verbieten. Die Software eines Teslas muss deshalb länderspezifisch häufig auch kurzfristig angepasst werden, wenn sich Gesetzesänderungen ergeben.  \n\nÄnderungen der Voraussetzungen, Technologien und der Organisation können die Softwareentwicklung beeinflussen. Beispielsweise können sich die Anforderungen an eine Tesla Software ändern, wenn das Auto durch neuen Vertriebsfokus auf einen Rechts- oder Linksverkehr angepasst werden muss (requirement changes). Außerdem können sich während der Entwicklung eines E-Autos neue Technologien in z.B. Batterielaufzeiten ergeben, auf welche die Softwareentwicklung ebenfalls agil reagieren muss (technology changes). Ein Beispiel für organisational change ist eine Änderung der Abgabefrist für einen Teil der Software, die Priorisierung einzelner Prozessschritte muss aktualisiert und angepasst werden.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264869,
      "meta": {},
      "text": "Der Hauptgrund, warum Veränderungen in der Softwareentwicklung stattfinden, ist die Anpassungsfähigkeit und Benutzerfreundlichkeit des Systems, die den Menschen vermittelt, immer nach neuen Innovationen zu streben. AI-gestützte Geschäftsprozesse wachsen aufgrund des sich in die digitale Richtung entwickelnden Arbeitsplatzes drastisch. Die Gesellschaft will die Effizienz maximieren und den Aufwand minimieren, so dass zum Beispiel die körperliche Arbeit von Maschinen und Robotern übernommen wird und die Last nicht mehr auf der körperlichen Anstrengung des Menschen liegt.\nDie Steigerung der Bereitstellungsgeschwindigkeit, der hohen Nachfrage nach neuen Apps und eines grenzenlosen Gesellschafts- und Vertriebsnetzwerks erfordert einen neuen Reiz für die Softwareentwicklung. \nEin Beispiel für die Veränderung der Softwareentwicklung in der echten Welt ist die Verbesserung der Geschäfte. Die Effizienz in Setups trägt dazu bei, dass es Beispielsweise keine unnötige Verschwendung von Rohstoffen und anderen Produktressourcen gibt, da es verschiedene Softwaretechniken gibt, um dies zu vermeiden. \nIn den Veränderungen der Softwareentwicklung gibt es drei Bereiche, die Anforderungsänderung, die Technologieänderung und die organisatorische Änderung. \nAnforderungen bzw. Notwendigkeiten der Softwareentwicklung kann sich während der Produktentwicklung ändern, welches auch die Kosten, die Größe als auch die Komplexität verändert. Das kann zu längeren Zeiträumen führen.\nDie Technologie hat sich auch während der Softwareentwicklung verändert. Man legt mehr Wert auf Soft- anstatt Hardware. Außerdem entwickelte sich die Skalierbarkeit und Flexibilität der Cloud, sowie die Erweiterung der Zielgruppen und Plattformen (z.B. Social Media).\nDie digitale Transformation führt auch zur organisatorischen Änderung, welche alle Bereiche berücksichtigt und zusammen führt. Beispielsweise kann durch Kommunikation das Ziel besser erläutert und organisiert werden, was die Softwareentwicklung steigert.\n",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1265001,
      "meta": {},
      "text": "Change happens in software development constantly, due to its agile nature, meaning that any software developer should adapt him/herself to any possible unwanted or unexpected event using the empirical process control model to control the software development. The changes occurring can be classified into requirements, technology and organizational changes. Requirements changes, as their name tells, could be defined as the modifications that should/must be done on the requirements of a software development project for several reasons. This is generally seen in some projects, where the budget or/and the deadline are too optimistic to be doable. Here, making the final product even in a very low quality could be seen as impossible, which makes the project, after realizing it, need to be adapted to new requirements. Making GTA V in a month can make the team change it to flappy bird. Technology changes reflect the constant evolution of the technological methods and tools in the world and can be defined as the change of the development of machineries and equipment helping the software project to be done quickly, with a lower budget or with a better quality. We can mention here the example of the devices, with which the final software is compatible: Making the best software ever, that is only compatible with windows XP, wouldn't a good idea... Organizational changes are those who occur  by administrative decisions or needs of companies and may affect the distribution of the human resources of project teams. For example, the fusion of two project teams will affect the productivity of each developer and requires a new distribution of tasks between the members.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265896,
      "meta": {},
      "text": "\tChange in software development, as everywhere else, is a way to keep up with a rapidly developing world. This constant evolution requieres adaptation.  One of the brightest examples of how a lack of development can lead to  negative effects is Nokia.  Before \"smartphones era\" specialists from Nokia wrongly assumed, that these compact devices were not going to play a big role in the future. Nokia did not develop a needed technology to remain compitetive at the market. Consequently after few years, once one of the largest phone company went almost buncrupt, due to their wrong assumption and lack of development.\n\n\tTechnology is a branch, that has changed significantly over the last few decades. It is easily noticeable for example how the development of the internet has made all other parts of tech to evolve. Nowadays almost every device has to be able to connect, passively or actively to the network. It has influenced technology at every level.\n\n\tSuch an evolution of all kinds of devices, due to growing significance of the internet, made all technical requirements to change as well. As mentioned above, almost every piece of technology needs a way to connect to the web. This requires specific electronic parts, which can enable the device to connect. In other words, new requirements are obviously an effect of development.\n\n\tBut in the end it is us, who have to deal with the change. We also have to learn, adopt our attitude but what is even more important- our organisation.  Whole societies have to reorganise their workflow, as thanks to the internet, it is no more necessary to be every day in the office, in order to tackle all the tasks.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266182,
      "meta": {},
      "text": "Die Aufgabenstellung stellt die Frage: wieso Veränderung im Software Development entstehen.  Um diese Frage zu beantworten, könnte man sich vorstellen wie es wäre, wenn es keine Veränderungen im Software Development gäben würde: So würden wir immer noch nur in der Programmiersprache Fortan oder ADA schreiben, theoretisch lässt sich jedes Problem, welches mit den modernen Programmiersprachen lösbar ist auch mit den älteren lösen. Doch wie wartbar wäre dieser Code dann und wie lange würden Software Developer brauchen diesen zu schreiben. Veränderung ist demensprechend auch oft mit Innovation gleich zu setzen. Es entstehen immer wieder neue Tools die es einem vereinfachen beispielsweise Software zu produzieren: wie zum Beispiel DIEs‘ wie eclipse oder intellij idea, die teilweise Code selber für einen verfassen. \nBeim Entwickeln von Software ist es deswegen besonders wichtig auf Veränderungen in der Umgebung zu achten, was wird gerade von den Konsumenten verlangt, wenn man beispielsweise eine App baut, die einem anzeigt wann seine Zeitung geliefert wird, wobei Zeitungen schon längst online gelesen werden.\nMan muss noch zusätzlich auf den technologischen Fortschritt Acht geben, wenn es zum Beispiel schon KI gibt, die bestimmten Code produzieren könnten, dann braucht man keine Programmierer dafür einstellen und kann da sparen.  \nMan muss sich aber auch auf Veränderungen organisatorischer Art einstellen. Zum Beispiel, wenn Teammitglieder aus irgendwelchen Gründen das Projekt verlassen, muss man schauen, ob das Projekt so realisierbar ist. Zusammengefasst bedeutet das, dass man offen bleiben sollte für Innovationen und Veränderungen in der realen Welt.\n",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1266307,
      "meta": {},
      "text": "Changes happens in software developments both during a creation of a project or  during technologies are developing. Changes are happen   in order  to dealing with complexity and challenge or as aresult of requierements of customers/ users. For instance instagram has less feature before 4/5 years ago. According to users requirements, instagram is developed and some new features such sharing story or using filters become possible. And therefore instagram could compete with snapchat and increase the number of users. As another example for changes from our lives are the robot vacumm cleaners. With the new softwares some companies producted robot cleaners, because the usage of robot cleaners are comfarteable and easy, so that the companies can get a lot of new customers and earn money. The Samsung was only producing normal manuel vacuum cleaners, but after other companies such as Xiaomi produced robot cleaners, samsung  adapted this new development and producted robot cleaners,so that the company dont lose customers unlike Nokia.\nRequirement changes happen, when different needs or expectations of  customers/ users occurs. As a result of change of requirements the project can finish longer/shorter or the project cost more/less. For instance  instagram change their idea and they want to add a new feature (sharing story) .\nTechnology changes happen as a result of developing softwares or technologies. Day by day different products/softwares are developed,which are helping us to make our lives easier. And the companies, adapting the new innovations , are always one step ahead. As an example for this change the robot vacuum cleaner can be given(above).\nOrganizational changes happens mainly during the creation of a project and it effects the working of the team . It might occur for example when the members of a software development team or the ceo of the company change. As an example the owner of twitter change and the new owner is Elon Musk. And this change can effect the development teams and organizational processes.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262347,
      "meta": {},
      "text": "Change in software development occurs because of hardware changes or overall big discoveries concerning electrical devices. The introduction of smartphones is a big milestone, just as much as the introduction of computer games. Also recently VR-devices are being introducted, which require completely new inputs and output, due to their very unique input- and output-system. \nRequirements changes are changes that affect the need for software. With the need for navigational devices in cars for example intelligent pathfinding became really important. This changes the type of software needed and therefore requires a completely new approach. An additional example would be self-driving cars, which need very intelligent programs in order to work properly, which again requires a completely different skillset.\n\nTechnology changes are changes that happen based on the industry developing new more efficient and less pricy devices. As stated before a good example for such changes would be the implementation of VR-Devices or the metaverse overall. New devices require different programming styles and therefore the software development proccess changes with the technology evolving.\nOrganizational changes are changes that affect the development proccess itself. Over time better and more efficient ways of organizing a development team are discovered. One example for such organizational concept is Scrum, a very agile way of working as a team. Back in 1989 software development was viewed as a sort of factory which is easily repeatable with basically no diversions from the plan. \n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262442,
      "meta": {},
      "text": "Software development is not solely about solving a problem, it is also about performance, usability, customer satisfaction, practicality, etc. Change happens because there can be bugs, new frameworks, language updates, mistakes in requirement elicitation etc.. One example could be that programming languages that we use today were not existing before. People were using assembly or low level languages. But new languages are built upon this low level ones, and teams shifted their projects to these higher level languages like Java, Python, C++ etc. \n\nRequirement change might appear due to a change in the application domain or customer needs. For instance, a customer might want to have a food recipe application; however, after a time they might want to include AI to the system. Another example could be that a customer might want something impossible in which case requirements change again. \n\nTechnology change is one of the most prominent ones because technologies constantly get updated, or evolve. For example, a team might want to develop an application using Java 17, but during the development Java can get updated. The team can opt for using the updated version of Java as it might make the development much easier.\n\nOrganizational change can be seen when the organizational structure of the teams get changed. For instance, a team might have 2 front-end developers and 5 back-end developers. Especially if the project is a long-term project, there can be adjustments on the size of the teams; managers can change, the work model can change etc. \n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263018,
      "meta": {},
      "text": "Change happens in software development, because software is often trying to model parts or processes of the real world. Additionally, programming languages and the hardware, that software is written and executed on does continuously change. Therefore a lot of different change happens in software development all the time.\n\nSince the financial crisis in 2008 there has been a lot of regulation coming towards the banking system. Because of new requirements on processes and for example Know-Your-Customer laws, banks had to change software because of these changed requirements while software was already running or while being developed. For many banks, working in waterfall systems, this meant a major setback in the development process, because they are not used to change while working in a project.\n\nUsually, technology changes such as hardware and software changes happen slowly, but increasingly over time. But sometimes a technology change is forced very quickly as can be seen in the java log4j security breach. As the vulnerability became know, security teams had to work quickly, and either shut down parts of systems or find a workaround the problem until an update was provided. Therefore, technology change can happen very quickly.\n\nOne example of organizational change I have experienced was when my former employer DZ BANK AG merged with WGZ BANK in one of the biggest German banking mergers ever. Needless to say there was a lot of change involved. Software, people and processes had to adapt to the new structure.\n\nTherefore, change is happening everywhere and all the time.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263117,
      "meta": {},
      "text": "Sotfware in general has become part of every aspect of our lives; whether in communication, medicine, transportaion, learning, leisure or security and more... So for it to serve it's intended purposes in the best ways possible, it has to adapt to the increasing and fast-changing needs otherwise it could become obsolete, there are also other indirect factors and events that could influence the process. And that is why change happens in Software development. An example for that would be the increasing concerns of people for the lack of privacy on the internet and how new regulations and laws have pushed social media and tech companies to make some changes on their software to abide by these constraints. \nRequirements changes are when the required features and functionalities and other aspects of the software change, for example, when a customer asks for a certain product with certain requirements, then changes his mind and asks for something else, the developers then have to adapt the product and fulfill the new requirements and implement the new features. \nTechnology changes happen when there are new available technologies that bring new possibilites to developing software, for example, every couple of years, when new gaming consoles come out, game developers get to work on more graphically advanced games since these new consoles usually come with better hardware than the previous generations.\nOrganizational changes occur when the team/company developing the software has to change the way it operates for some reason (external or internal like structural change), for example during the pandemic, most sofware developers switched from on-site work to working from home, another example would be a member of a software development team leaving and the team having to adapt to cover the tasks he used to do.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263842,
      "meta": {},
      "text": "In der Softwareentwicklung kann es zu Veränderungen kommen aufgrund von Faktoren, die die Entwicklung beeinflussen. Diese Faktoren könnten neue Gesetze, Finanzkrisen, politische Krisen oder neue Wettbewerber auf dem Markt sein. Ein Beispiel wäre die DSGVO, die viele Unternehmen gezwungen hat, die Verarbeitung von Nutzerdaten zu verändern.\n\nRequirement changes passieren, wenn neue Anforderungen an die Software gestellt werden und diese deswegen verändert werden muss.\n\nTechnology changes treten auf, wenn neue Technologie verfügbar wird, die in die Software integriert werden muss. Sollten zum Beispiel Quantencomputer einsatzbereit werden, so ist das aktuell gängige RSA Verschlüsselungsverfahren nicht mehr sicher und neue Verschlüsselungsverfahren müssen genutzt werden.\n\nEin organizational change kann auftreten, wenn ein immer wachsendes Entwicklerteam feststellt, dass die genutzte Methode zur Organisation des Projektes nicht mehr ausreicht und ein neuer Ansatz genutzt werden muss, der für ein größeres Team ausgelegt ist.\n ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1263973,
      "meta": {},
      "text": "Software development is no longer seen as a process that repeats itself. It is instead an empirical activity that needs inspection, adaption, creativity. That's why it is defined as solving problems in a changing context.\nexamples :The need to fix bugs/ add new features to fulfill the new needs of the customer/ improve performance/ constraints of time or budget -> all this makes it very hard for software engineering to be a defined and totally planned process\nIn order to succeed, a software development team needs to be open to new ideas, listen to the market and follow new workflows, the example of the failure of the Nokia company as soon as the first smartphone appeared illustrates this idea  \n*requirement changes:\nOur Requirements can never be static and they are always tending to change, this can occur due to the demands of the client, or when working on the software and getting to face the complexity and thinking that a change would be helpful.\nexamples: adding a new feature, a new fonctionality\n*organizational changes:\nMany factors known as organizational changes may happen in the team or the company and can lead to software changes.\nFor example: new leadership with new visions/ the adoption of new business models/ changes in the team structure or members\n*technology changes:\nTechnology is always in progress and there is always a new technique or a new programming language and developers have to stay current and develop software that is current to gain the marketability. So having the flexibility to change here is required to meet new technical demands.\nexamples: using a new version control system to organise the project\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264021,
      "meta": {},
      "text": "A typical software development project stretches over a long period of time. And since the world is not standing still in this time the project has to develop and change as well to keep track. An example may be goverments issuing new laws f.e. regarding privacy making previous implemantions of the software unusable.\n\nThere are diverse levels of change, three of them I will explain here more closely:\nFirst, there are requirement changes, which refer to the changes regarding conditions towards the end-product. The customer may have uncovered that the future user expresses distinct new wishes towards the software, so he asks the software team to apply this certain functionality. \nSecondly, there may be technology changes. Technology is constantly developing so software engineers have to adapt. Phones may get equipped with new operating systems, so a software company coding for phone applications has to adapt in order to not become outdated.\nLastly, there is organizational change. This refers to change within the software development company. Be it changes in the structure of the company or the composition of a team. Management may decide it is better to follow the waterfall methodology instead of agile software development or a lagging project may demand allocation of different specalists for the team.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265329,
      "meta": {},
      "text": "Change in software development happens because software has to keep up with the continuously changing technology, the new demands of the user/client or of organizational changes happening in the software development team. First requirements changes are made after the client demands new additions or changes to the software at hand: For example a university administration might ask the developing team of their website to increase its cybersecurity because of recent breaches, and that at the cost of other requirements.\nSecond, technology changes. Software developers have to keep up with the platform updates their software is in or the development of devices. For example social media apps always try to keep up with the newest OS or Android versions so that their apps could still be functional for the new updates.\nLastly, organizational changes. A software developing team can change its working strategy and that affects how the software is developed. For example a team was instructed by the product owner to make one last update for their software that would make it functional for all devices and would only need updates to match the new technology. The team decides to follow a defined process instead imperical one. That way the software could end up worse than expected or the software development goes slower of faster depending on how good the defined plan was.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265848,
      "meta": {},
      "text": "Evolution of programming languages is a good example for a change in the real world. We started with binary code and switched to assembly as soon as we realised that it‘d be easier to program using mnemonics instead of opcodes. But that wasn‘t enough, we invented higher level languages which created useful abstractions that made communicating with computers easier than ever. One of the more recent developments is OOP, which enabled programmers to model real world in terms of classes and objects. We shouldn‘t forget that interpreters and compilers are themselves software products and that they also change with time.\n\nRequirement changes are when a customer changes the requested product slightly or your needs change because of a change of context (i.e. general situation around your software). For example, many companies had to create mobile apps, when smartphones got popular for the first time. Introduction of smartphones came with a requirement of mobile apps, which in turn resulted in new frameworks and programming languages… You could call it a chain of change!\n\nWe might be able to observe a big technology change in the coming years, thanks to our nascent quantum computers. All methods of encryption we know today, will become completely useless with the spread of quantum computers. That means: we‘ll have to come up with new encryption algorithms and implement them. This is a technology change that requires action from our side.\n\nSoftware is teamwork. Any bigger software project of our decade comes with organisational overhead. Companies, which were limited to a country are now international. Because of this, they  have reorganised teams with a new hierarchical model and chosen leaders, who are able to make smart choices for the project.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265866,
      "meta": {},
      "text": "In unserer Welt wandelt sich ständig alles, so auch in der Software Entwicklung.\nEin Punkt ist die immer schneller werdende Technik, wo man früher noch lange Code kompilieren musste, kann man das inzwischen mit jedem herkömmlichen Computer schnell erledigen. Inzwischen benötigt man nicht einmal mehr teure oder aufwendige Programme, IDEs erledigen auch so schon viel für den Programmierer. Auch ist durch den Vorsprung der Technik die Hardware deutlich günstiger geworden.\nDadurch kann inzwischen jeder Mensch mit Zugriff auf einen Computer Software Entwicklung betreiben. Auch viele andere Voraussetzungen sind um einiges kleiner geworden! Wo man früher noch ein riesen großes Wissen über Computer und deren Technik, speziell bei deren Rechenweisen, gebraucht hat, muss man jetzt nur noch die Syntax der jeweiligen Programmiersprache beherrschen und beim Rest hilft auch die IDE.\nDie Vernetzung hat auch bei der Organisation geholfen, man muss nicht mehr direkten Kontakt zu anderem im Coding-Team haben, über das Internet kann man sich inzwischen genauso austauschen, Dokumentationen veröffentlichen oder suchen. Auch kann man mit Leuten auf der ganzen Welt arbeiten, es muss nicht mal gleichzeitig sein, da man einfach weiter programmieren kann (solange der Code gut und verständlich geschrieben wurde).\nInsgesamt kann man auch sagen, dass der Fortschritt viele Möglichkeiten eröffnet und es den Programmieren immer \"einfacher\" macht, dass sie gute Software entwickeln können.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1266107,
      "meta": {},
      "text": "The world is constantly changing every day because of new inventions, trends, needs and many other inputs. This is why change in software development needs to happen to accommodate these changes in people's/company's needs, hardware changes and improvements etc. Without change the software would be soon out dated and unusable in the real world situations. Current biggest change in the technology and economic world is the meta verse/web3 with crypto-currencies.\n\nRequirements changes include changes, which can change what should be the software doing and on what scale, scope. This is very important as it helps to specify the software complexity. Example: Customer wants to add a new functionality to a program, so we have to change the requirements of the software.\n\nTechnology changes include changes in technology, like new inventions or newer and faster hardware, which can have different communication protocols to which we need to adapt our software, so it doesn't become out dated. Example: New graphics card is on the marked, so we should update our software to accommodate for this change, for increased speed. \n\nOrganisational changes can happen within the companies organisational structures, like management changes, developer reassigning etc. Example: Company needs to deliver new software asap, but they are behind, so the company reassigns developer from other projects to this one to finish it on time. \n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266282,
      "meta": {},
      "text": "The change factor is becoming more and more relevant in recent years due to the rapid changes in the environment. New technologies are evolving fast and software developers need to be able to adapt to these changes. A real-world example would be the recent pandemic, where software developers faced the challenge of providing reliable online working tools such as video conferencing on short notice and on a large scale.\n\nChanges in requirements occur when the needs of the customer or the user change during development, and thus the requirements for the software solution also change. For example the customer wants a new feature in his app.\n\nTechnological changes are changes in the underlying technology, such as the development of touch screens, which has also changed the way software needed to be developed.\n\nOrganizational changes are changes in the way an organization operates, e.g. with the development of the Internet many companies started to operate online, which also increased the need for software in this area.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266347,
      "meta": {},
      "text": "- Change has became ubiquitous in software development, for some reasons: \n\t- New technology trends come up and enterprises have to adapt their information infrastructure.\n\t- Customer needs and tastes have changed daily and quickly. \n\t- Companies need to update software to better productivity and management, able to gain more growth as well as efficiency. \n\n- Example: \n\t- Hospitals used to manage their patients information by using paper documents, nowadays converting to digital databases. (technology change) \n\t- Agile software development methods have been replacing traditional methods. (requirement change).\n\t- In a lot of companies nowadays, employees are working in combination of home-office and on-site working. (organizational change).",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262740,
      "meta": {},
      "text": "As opposed to many other industries/fields of study, software development is a relatively new thing. For this reason, innovation happens fast, legal requirements change constantly (adapting to new technology) and customers always want state-of-the-art features built into their projects to be able to keep up with competitors. The implementation of the internet is one example of change in the real world, as it completely revolutionized computer science and software, but also everyday life itself.\n\nOne main category of changes is requirements changes. These happen when the expected funcionality of a product is modified by a new law or because the customer changed his mind (for example). For instance, in 2019 the EU passed a law to prevent copyright infringements online. Therefore, social media platforms such as YouTube had to make significant changes in the way their software works -  the requirements had changed.\n\nAnother kind of changes are technology changes. These happen when research efforts and innovation lead to new opportunities in software development. One example for this are the rapid increase in performance and availability of computers - it lead to both changes in the development process (e.g. code compiles and runs faster) and the products themselves (e.g. better graphics in games).\n\nThe last type of changes are organizational changes. These relate to the way the company and the team of developers are structured. For example, as part of the global Coronavirus pandemic, many employees were forced to work remotely in lockdown, so they had to explore new ways of communicating with their coworkers.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263324,
      "meta": {},
      "text": "The reason why changes occur in the process of software development is that software development is a process of solving problems. In the process of solving existing problems, we try to find a better way.\nFor example, as the need for non-face-to-face lectures emerged during the COVID-19 period, platforms improved their functions by increasing the number of participants or fixing some errors such as buffering.\n\nRequirements change can occur due to changes in user requirements, increased understanding of the stakeholders' needs, customer reorganization, and availability of new technologies. For example, changes can occur if stakeholders want to add specific functions to existing programs to attract more users.\nTechnological changes are mostly caused by technological advances. The software will also change, If the user's environment changes due to the development of smartphones, the development of efficient programming language, and the development of a new operating system. For example, due to the development of smartphones, many programs have been developed in the form of apps or have been subdivided into versions that can be used on small smartphone screens. In addition, when a new OS is updated, the software program's developers must continue to update the program accordingly.\nExamples of organizational changes in software development include completely rebuilding the website, restructuring an department or launching a new department. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263429,
      "meta": {},
      "text": "It is not for sure that an high quality software system today will endure it's quality one year later because conditions change which affect the usability and the quality of the software. First, governments can make new regulations, which might restrict the features of the software systems. So the software system should adhere to new legal constraints. Also other companies or start-ups can come up with new ideas or technologies that can change the market conditions, which will create new challenges for the software system. I would like to give Netflix as an example today, which is an huge success in the film industry. More and more big tech giants entered the film industry by creating new films and series like Disney, Apple and many more, which caused Netflix to loose it's monthly subscribers. What Netflix experience today is an example for the market conditions to change because of new competitors. Requirement changes occur due to new technologies and user requirements. The customer might need an requirement change due to new regulations. For example most of the automakers decided to manufacture fully electrical vehicles by 2022 since it's better for the environment and there is an political pressure for vehicles using renewable energy. Technology changes are important for better and new software systems which adapt to new features. Technology changes occur with new consumer and business demands or new market trends that competitors use. Companies like Apple increasing the usage of AI in most of it's software systems, make it necessary for Microsoft to do the same to compete. Changes in the way an software development team communicates and operates are described as organizational changes. \nFor example changing the roles between the scrum team may help members seeing the problems from different point of views and help them to put themselves in other team members shoes, communicate and work better over time.  ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264682,
      "meta": {},
      "text": "Change in software engineering happens because the process usually does not follow a linear and fully planned process (due to different factors such as high complexity) but goes through the different actives along the engineering process in an agile and iterative way, meaning, going back and forth, adjusting to (changed) requirements and customer needs One famous example is Nokia developing a product which does not meet the requirements of customers, wasting a lot of resources and loosing major market share.\n_\nChange can also occur by technology in general. New technology usually comes with new possibilities. Existing applications, systems, and so on then need to or can be changed according to this new technology. One example is using Bluetooth instead of Infrared back in the days to exchange data on cellphones.\n\nRequirement changes are essential since they need to be updated on a regular basis, especially when they are outdated, error prone or missing at all. One example is assuring safety for blue collar workers with sensors when working with heavy machinery to protect them from collision.\n\nOrganizational change is also important. Today, whole organizations and teams are more flexible when it comes to developing products using more agile approaches e.g. Scrum. In the past, teams were staffed once, the requirements were defined once, and the product was developed in one go. Today, teams are more agile, using short sprints and minimum viable product approaches, using organizational resources more efficiently and therefore more successful.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264708,
      "meta": {},
      "text": "Change in agile software development is inevitable. In agile project, changes are made constantly and new non-functional and functional requirements can appear. Even established requirements shift constantly. Reasons can be immature technology, poorly defined requirements in early stages of the project, bad communication with the customer etc. This can be anything in the real world e.g. you develop an app for a customer and a new function is requested that changes some of the flows that were previously established. \n\nRequirement Changes\n- Corresponds to functional requirements e.g. aspects in apps where a customer wishes to add new levels of functionality and thereby changes the requirements you need to fulfil \n\nTechnology Changes\n- Software engineering is confronted with constant technological changes and trends that impact the way Software developers work. e.g. now the rise of ai applications \n\nOrganisational Changes \n- Reviewing the current organisational structure is crucial for a successful agile software development project, reviewing and changing the set up is crucial (using different team set ups for different parts of the project) ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264811,
      "meta": {},
      "text": "Software und ihre Anforderungen ändern sich oft. Damit verbunden ändern sich auch die Prozesse und Systeme um Software zu entwickeln. Gründe hierfür sind viel vielfältig. Zum Bespiel sich ändernde Wünsche des Kunden oder auch andere Marktbedingungen.\nEin aktuelles Beispiel dafür ist die Corona Situation der letzten Jahre. Viele Entwicklungsvorgänge mussten geändert werden um im Homeoffice zu funktionieren.\n\nEin Requirement change ist, wenn ein Kunde eine neue Anforderung an das Produkt stellt und ein neues Feature braucht. Weiter hin können sich Anforderungen auch von staatlicher Seite aus ändern. Als zum Beispiel das DSGVO eingeführt wurde, mussten Firmen ändern welche Daten sie über ihre Nutzer speichern dürfen.\n\nDamit hängen oft auch technology changes zusammenm, da neuere/andere Systeme genutzt werden müssen um besagte Anforderungen zu erfüllen, bzw. bestehende weiterhin zu erfüllen. Als Apple beispielsweiße ihr neues M1 Silicon veröffentlichte, musste viel Software zusätzliche Execuables anbieten um markfähig zu bleiben.\n\nDas Ziel von organizational changes ist es, unterschiedliche Aspekt, die oft gegenüber stehen, effizient zu verbinden und zu vereinbaren. Gleichzeitig soll das Value für alle stakeholder maximieren werden. Wenn z.B. Entwicklerteam uneffizent zusammen arbeiten und die Komunikation schlecht ist, kann es sich lohnen zu anderen Organisationsformen zu wechseln, wie z.B. einem agilen Scrum approach.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265299,
      "meta": {},
      "text": "In software development dealing with change is very important because teams are often required to adapt to new things or circumstances, like unexpected failures or new technologies. Nokia for example had the challenge to deal with the rise of smartphones and nearly went bankrupt because they weren't prepared for such big changes. \nChange always happens; e.g. with competitors who develop a new more efficient and maybe much better software. Then you would have to deal with this new software and make changes to your own software to be competitive in the market.\nThen there are maybe policy changes by the government where you have to incorporate better cyber security or more customer insight into your software.\nAlso large parts of software development aren't predictable. So while you have the same problem statements, two development teams can come out with two completely different products. Because software development is mostly an empirical process. Unpredictable problems have to be dealt with spontaneously and with precision to ensure the end-product is not only satisfactory, but good.\nSo all in all software development is a process where unpredictable changes can occur and have to be dealt with competently to ensure your team is successful in providing the customer with a good solution to his problem statement.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265755,
      "meta": {},
      "text": "Software engineering aims at the  \"production of a high quality software system developed with a given budget before a given deadline while change occurs\". Therefore, being able to deal with complexity in a context of constant change is imperative for success. A change in the real world could, for example, be a change in data privacy legislation, which needs to be reflected in the code base to ensure anonymity of personal data by design.\n\n1. requirements changes: Most commonly, changes in requirements come from requests of the user himself or from a better understanding of the customer's needs. An example could be that during a project, the client notices that another visualiuzation of data in the management dashboard is important for decision-making in daily operations. Thus, the project scope is adjusted slightly and the software developers are asked to implement this change.\n\n2: technology changes: Changes in technology are also ubiquitous in our fast-paced world. Through new solutions on the hardware side, the introduction of modern software programs or simply program updates can induce a necessary adaption of code bases. An example could be the rise of modern programming languages such as Rust, Go, TypeScript or Kotlin, which are (partly) replacing C/C++, Java, and other older languages.\n\n3: organizational changes: Organizational changes are frequently induced by top management to bring about structural changes in the orgnaization - to reshuffle teams and responsibilities. An example could be an organization which is turned from a line orgnization into a matrix organization. These changes can have significant impact, for example, on the flow of information and thus the collaboration of software development teams.\n\n \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265897,
      "meta": {},
      "text": "Veränderung tritt durch neue Konkurrenten und Herausforderungen im Markt auf. Ebenso durch fehlende Innovation oder durch neue Regelungen der Regierung. Um konkurrenzfähig zu bleiben muss ein Unternehmen innovativ bleiben und sich ständig weiter entwickeln und verändern. Am Beispiel Nokia gezeigt, Nokia war lange Zeit Marktführer für Mobiltelefone, doch nach den ersten Smartphones wurde Nokia fast Bankrott aufgrund von fehlender Innovation und weil Sie ihre Konkurrenz nicht beachtet haben. Wodurch ihre Produkte mit der Konkurrenz nicht mehr mithalten konnten.\n\nrequirements changes: die Regierung diktiert durch neue Gesetze und Regelungen Pflichten die eingehalten werden müssen und somit zur Veränderung führen. z.B. ein neues Datenschutz Recht zum Schutz der Verbraucher, zwingt Internetdienstanbieter dazu ihre Datenverarbeitung und damit verbunden evtl. Algorithmen zu ändern.\n\ntechnology changes: durch Innovation bedingte Veränderungen in allen Bereichen im Software Engineering vor allem bei web 1.0 zu web 3.0. oder bei Autos früher noch durch Kraftstoff betrieben fahren viele Autos heute mit Strom und haben mehr mit einem Computer auf Rädern gemeinsam als mit einem Auto. Oder z.B konnte man früher noch DVD ausleihen heutzutage gibt es große Streaming-Dienst Anbieter wie Netflix welche die DVD überflüssig machen und so diese Branche \"bankrott\" treiben.\n\norganizational changes: der Prozess, durch den ein Unternehmen Schlüsselkomponenten seines Betriebs oder der Strategie ändert z.B früher gab es feste Arbeitsplätze, in sehr großen Teams, nach dem Motto (Toll ein anderer macht es), heute gibt es flexible Arbeitszeiten und Arbeitsorte mit kleineren Teams mit maximal 5-7 Personen die nach dem Scrum Prinzip arbeiten. Ziel ist die Produktivität innerhalb des Unternehmens zu verbessern meist geht diese Art der Veränderung von der Unternehmensführung aus.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266448,
      "meta": {},
      "text": "IT sphere is closely connected to fast changes. Personally, i think, that the main reason for that is the fact of IT integration to all branches of our life. There is a high need to adapt to outer and make inner changes during the process of soft. development (and general in IT) in order to remain on the market and not to go bankrupt (those who addapt first will survive + high concurrence), examples are Microsoft and Intel in their first decades. To be more precise, r̲e̲q̲u̲i̲r̲e̲m̲e̲n̲t̲s̲ ̲c̲h̲a̲n̲g̲e̲s̲ are the changes which in general conditioned by customer needs, for example sushi restaurant decided to have its' delivery service and we as their app creators need to do one more module (requirment — to add page with a form, where people can write their address and appropriate time).  T̲e̲c̲h̲n̲o̲l̲o̲g̲y̲ ̲c̲h̲a̲n̲g̲e̲ is often done to increase the performance.  Example is the situation when main programming language is changed due to the need to supply the project with new opportunities to have better performance, structure and much broader range of available compatible technologies (frameworks for example, you want to test with Selenium WebDriver, thus you will use Java, consider the situation if Selenium would be compatible only with Java, even though it is not in reality, just a stupid example). O̲r̲g̲a̲n̲i̲z̲a̲t̲i̲o̲n̲a̲l̲ ̲c̲h̲a̲n̲g̲e̲ can be done to improve working conditions, reduce costs, save time or speed up the progress.  A modern example of mixed technological-organizational change is working from home office and (group-/team-) communicating via Zoom instead of typical commuting to work and having offline meetings in an uncomfortable environment (or not so comfortable like own house). Although for lots of my colleges the situation is vice versa, they don't feel productive at home. But being at home also gives the opportunity to work much more time, what can help in crisis times. As a bonus, home office reduces electricity and food costs for the company by the way.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261743,
      "meta": {},
      "text": "Change in software development happens and needs to happen all the time because of how the world adapts to new challanges. For example in the real world if another company goes to the market with a brand new software in competition with us and it has better features then our software. At this point we need to adapt and change our software to compete. We want to stay on the market and we want to have the best software on the market so change is the only constant.\n\nRequirement changes can happen every moment for example if the costumer calls and wants a feature of his software you are developing for him to change or if he wants a different design.\n\nTechnology changes also happen often. For example the IDE gets an update or a new version of the programming language gets on the market. Or a new team member has a lot of know how on a different programming language and opens new and more efficient ways to implement features.\n\nOrganizational change happens when new team members join and you have to reorganize the tasks or if one of the team members gets ill and a lot of his work has to be done by someone else.\n\nNote: A lot of this is from my homework last year.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265128,
      "meta": {},
      "text": "Since we are living in a world where change is the only constant, software development also needs to be adapted to new requirements or to add missing conditions to be easier to handle, smarter to work with and more effective.  \"Internet Explorer\" is an example of software development, the browser changed to be faster, more secure, and more compatible with websites and applications and is today known as \"Microsoft Edge\".\nIn this case, three important areas of change, first come requirements changes; to update the needed requirements depending on the demand. In many companies, for example, updates only come after feedback from every part of a team.\n Second, technology changes are to improve the functions of a product for example enabling applications to perform well with many users or developing faster applications and improving security. For example, eBay's technology changes consist of monitoring bigger volumes of data and using algorithms to prevent future problems.\nThe third is organizational change, which involves discussing the problem and managing knowledge using new tools and a business strategy.\n\n.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265149,
      "meta": {},
      "text": "Change in software development occurs because the world in which the development team operates changes. This can be internal, within the team, or external, within the environment around the team. A real-world example of change is the rise of electric cars, which bring up new challenges for automotive companies, require forming of new teams, and adaption of development processes.\n\nRequirement changes are changes that come from the customer's requirements. Because customers often don't know all specifications of their product right at the beginning, this is a frequent type of change. An example is when the customer initially required a service to be used by 1000 users at once and now demands the same service to handle 100000 users at once.\n\nTechnology changes are changes related to the used technology of a developed product. This can be a choice by the development team, or a customer requirement (also a requirement change in this case). An example of a technology change is the transition to a new framework because the currently used one lacks a needed functionality. This may result in larger changes because the new framework needs to be fully compatible with all existing functionalities.\n\nOrganizational changes are changes related to the development process itself. This can be a choice by the team, regulated by law, a customer requirement, or an unforeseeable situation. Many examples of organizational changes can be found during the Covid-19 pandemic. Teams decide to work from home or are obliged to do so by law. Furthermore, the illness of team members requires the adaption of deadlines and task allocation.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265230,
      "meta": {},
      "text": "# Changes in Software Development:\nAenderungen in Software Development geschehen, da die meiste Software ueber einen laengeren Zeitraum entwickelt werden und mehrfach verwendet werden sollen. Jedoch gibt es staetige Aenderungen der Umwelt / an Anforderungen in diesem Zeitraum, wodurch es notwendig sein kann, dass die Software dementsprechend angepasst werden muss.\nBeispiel:\nEs soll eine Chatplattform entwickelt werden, auf der man einmal einen Textchat, aber auch einen Voice over IP Chat haben soll. Waehrend der Entwicklung stellt der Kunde fest, dass das Produkt wegen einer Praesentation 2 Monate frueher veroefentlicht werden muss, als geplant. Aufgrund dieser Aenderung kann der VOIP Chat nicht fertig entwickelt werden und der Support fuer diesen wird gestrichen.\n- requirements changes: \nEin 'requirements change' ist, falls die Anforderungen sich aendern. Zum Beispiel, es wird eine Chatplattform entwickelt, die fuer bis zu 10 Benutzern ausgelegt ist. Ein moeglicher req. change waere es, wenn statt 10 jetzt 1000 Benutzer die Plattform gleichzeitig benutzen koennen sollen.\n- technology changes:\nEin 'technology change' ist, falls die Technik aendert. Ein Beispiel dafuer waere, wenn aufgrund von Budgetkuerzungen schwaechere Hadware eingesetzt werden muss, wodurch die Software dementsprechend optimiert / Features angepasst werden muessen.\n- organizational changes:\nEin 'organizational change' ist, falls Aenderungen wegen aus Organisatsionsgruenden durchgefuehrt werden muessen. Beispiel: Der Realase Date von einem Produkt muss nach vorne verschoben werden, weshalb bestimmte Features wegfallen, da es nicht moeglich ist, diese im zeitlichen Rahmen umzusetzen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265724,
      "meta": {},
      "text": "Change happens in software development because the system requirements evolve depending the maturity of the product, also there may be constant updates, new requirements etc. \nthere may be requirement changes, technology changes or organizational changes. For example, if a system has to be updated it may include new customer rrequirements, if techonology changes a system may be outdated and a new version in a new technology may be needed. Similarily, organiational changes affect software development because if a new product owner joins the prioritization of the backlog may change, ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266012,
      "meta": {},
      "text": "Software development is a very dynamic field (many different languages technologies, patterns ...) \nand it is quite simple to roll out a new version if something does not fit the requirements (or they change)\nSometimes the first version needs to be adapted due to: \n\n* changes in the law (eg GDPR)\n* project vision changes by the team / project owner - implement or remove features\n* feedback from the end user how to improve the experience \n* security risks imposed by upcoming bugs or vulnerabilities\n* technology advancement (hardware advancements like faster CPUs / GPUs ,new software tools ,new target devices, new development patterns ...)\n\n\n\nE.g. changes in a social app. \n\n* add features to access the feed of a friends friend \n* add support for new mobile phone resolutions.\n* patch framework versions and fix bugs\n\n\n\n* Requirements changes - impacts the functionality of the software and how it is used\n\t* Project owner wants different features removed / changed\n\t* Demographic changes (e.g .target an audience in a different country)\n\t* Changes in the law of a country where the software is used\n\n* Technology changes - impacts where and how it is used\n\t* new versions (frameworks)\n\t* bugs / vulnerabilities in existing code\n\t* new programming languages\n\t* new hardware / end devices (smartwatch ... )\n\n* Organizational changes - impacts the team and the future course of the project\n\t* team size changes (new talents / adapt code if a maintainer leaves)\n\t* budget grows / shrinks",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266070,
      "meta": {},
      "text": "As it is the goal of software engineers to solve a complex and new task and they operate in a complex and uncertain environment, their software projects cannot merely follow a predefined plan. In contrast they must account for changes which is why they work in agile set ups and therefor project managers have to manage the triangle between quality, costs and time, plus encounter for possible changes on the way. \nChanges can occur for multiple reasons. As new technologies are being developed in the dynamic market constantly, the software engineering team has to stay vigilant to its external environment and may need to adapt for new technologies. An example would be Blackberry missing the trend of adapting to touch screens on mobile phones. Furthermore, there can be new regulations made by policy makers, which affect the product. As the markets software engineers are operating in are very dynamic, complex and growing the competitive landscape of companies is often unsettled and new competitors are entering the market, which is why one has to look at how the market landscape is evolving and what competitors are working on or bringing to the market. At the same time new markets are being created which might lead to the current project one is working on becoming outdated. Those changes origin external of a team’s environment. There might also be changes within the organizational set up or team members leaving the project.\nRequirement changes: Since a software engineering project takes several months/years, in the meantime the customer’s wishes and needs might change. He will come back to the software engineering team and ask them to adapt his requirements. \nTechnology changes refer to new technologies that might have arisen during the time of the project, making parts of the software outdated and the need to adapt to those new technologies.\nOrganizational changes refer to changes that origin inside the team such as team members leaving and new ones coming in, which can require a new forming process, finding the new team member’s place in the project and new dynamics within the team arising.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266359,
      "meta": {},
      "text": "As we continue to understand more about software development and programs are getting bigger and more complex, the way we develop such systems also changes. Only, because of this we were able to invent things like the internet and bring it to everybody and making it to a big part of everybody's life.\nThe same also happens inside a single project or even just in a single project phase. As the whole team learns more about problems and opportunities implementing e.g. a feature, goals and also time-plans have to be constantly adjusted and reevaluated.\n\nThose are the reasons, why we can't look at software development as an defined process with clear and fixed plans (like in a shoe factory), where any deviation just decreases efficiency and is generally tried to be avoided. So we changed our perspective and are currently looking at software more as an agile, empirical process where through constant adaptations efficiency even improves.\n\nSomething, that happens very often is a change in requirements:\nWhen e.g. a competitor introduces a groundbreaking new feature, there is a new, very important requirement, to implement something similar as soon as possible, to not give the competitor an advantage.\n\nDue to constant research and further development the technology, the environment the software is used also constantly changes and by that leads to change in general development (e.g. in the last decade it became very important for a website to be also easy to use on a smartphone).\n\nIf new ways of organization are discovered, that lead to more transparency or efficiency, those opportunities should be used.\nAn example for this could be the usage of a blackboard, listing some recent decisions, to increase transparency.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263216,
      "meta": {},
      "text": "The rapid development of computing technology and the expansion of the scope of computer applications have dramatically accelerated the process of software development evolution.\nThe balance between required software products and those available on the market is changing rapidly. For example, even classical software products, such as operating systems, are constantly evolving and endowed with intellectual functions, many of which previously belonged only to human intellectual capabilities.\n\nThe software development process has been undergoing the changes that are shaping today's software economy.\n\nSoftware that is used in certain industries is specified by laws and regulations. For example, health regulations define requirements for data privacy and backup protection software in a project. The requirements must be adapted to accommodate any new or updated rules throughout the project and throughout the application lifecycle.\n\nNow there is more Open source software, that is distributed free of charge with permissions to change the code. For example, the leading companies such as Microsoft, Google and others are actively making their inventions open source to speed up software development. As a result, while the cost and effort required to create new software has decreased, the scale of innovation has increased.\n\nMuch of the early software was developed as one set of patterns and a linear approach. But the new approach is shorter and to create a more collaborative environment. For example, modern software is divided into several smaller components that are developed incrementally rather than one giant block. This new paradigm shift has made software development much more robust, adaptable, and efficient.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263266,
      "meta": {},
      "text": "Because of internal or external changes, software development constantly has to change / adapt to the new circumstances. For example: when a new law regarding e.g. data privacy is decided upon, a company maintaining older software might has to implement changes, in order to act within the new law.\nChanges in:\n- requirements : the customer/ some other instance (the government / a law) demands a change or addition of e.g. some functions within the software. Sometimes the reason for this kind of change is a poorly planned development process or a lack of communication between the customer and the developer.\n- technology changes : a new programming language, newer / faster hardware or some security issue is discovered / released. It forces the software developers to adapt to these changes in order to stay competitive / relevant in the industry.\n- organizational changes: a sudden budget cut or a overly strict schedule might force organizational changes. Also changing stakeholders might influence the organization and the direction in which a project is headed.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263301,
      "meta": {},
      "text": "Software Entwicklung ist gerade im Trend der Digitalisierung eine Umgebung die ständig neuen Innovationen und Ansprüchen unterliegt. Produkte wie die ersten Smartphones ermöglichen es Software Entwicklern völlig neue Bereiche zu erschaffen. \nAber nicht nur im Bezug auf längere Zeiträume kann man dieses Phänomen beobachten. Auch innerhalb eines Entwicklungsprozesses können sich die Entwicklungsumstände und Kundenwünsche ändern.  Ein gutes Beispiel dafür sind politische Einflüsse. Sie geben oft Standards vor an die sich Entwickler und ihre Produkte halten muss. Ein konkretes Beispiel wäre die \"neue\" Datenschutzbestimmung\" in der EU. Diese hat den Umgang mit Daten so sehr geändert das viele Unternehmen ihre Geschäftsart und Produkte anpassen mussten. Ei\nn weiterer Einfluss könnte z.B. der der Wirtschaft sein das bestimmte Rohstoffe nicht mehr lohnenswert sind und somit kurzfristig in dem Produkt ersetzt werden müssen.\n\nRequirements Changes: Es könnte aber auch innerhalb der Firma viele verschiedene Faktoren einen Entwicklungsprozess ändern. Eine Änderung im Budget könnte Anlass zum adaptieren sein. Genau so wäre ein Verschiebung der Deadline dazu führen mehr oder weniger Personal anzustellen oder den feature Umfang dementsprechend anzupassen.  \n\nTechnology Changes: Als Entwickler ist man von vielen verschiedenen Technologien abhängig. Libraries, Framworks, der tatsächlichen Hardware worauf das Programm laufen soll. Ändert sich einer dieser Faktoren muss man eventuell daran anpassen. Genauso könnten neue Technologien veröffentlich werden die man nutzen will.\n\nOrganizational Change: Aber auch Veränderungen innerhalb der Firma könnte der Auslöser für Änderungen sein. Z.B. Wenn sich das Personal ändert und nun Fachwissen für bestimmte Technologien fehlt. Oder andererseits könnte durch neue Mitarbeiter neue potenziell interessante Technologien verfügbar werden z.b ein mobile Entwickler eröffnet in einem Desktop Entwickler Team neue Märkte.\n\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1263473,
      "meta": {},
      "text": "Reasons for change in software development:\nThe requirements for the product change because of a changes in the business environment or changes related to the business model, \nmisunderstandings regarding the requirements for the product,\nissues regarding the product because of insufficient requirements,\na need for change because of technical reasons,\nunsatisfactory inspections during a Sprint,\netc.\n\nA real life example of change in software development might be, that the product was previousely developed as a single page application, but on further inspection the client realised that SEO is very important for their business. This means, that the realization of a SPA is no longer ideal for the product, as the requirements have changed. A new approach might be to realize the product using server-side rendering technologies. \n\nRequirement Changes: \nare changes caused by changes of the clients description of the desired output. For example, a client might realise that they will also need an app in addition to the current product. \n\nTechnology Changes:\nare changes caused by changes in the technological environment. For example, if there is a new security issue or there is a better way of achieving the desired output it might be wise to make changes accordingly. \n\nOrganizational Changes:\nare changes caused by changes in personnel of the development team. For example, if two software development companies merge, the development team might change personnel. This will probably lead to changes in the development process, timeline and backlogs. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263919,
      "meta": {},
      "text": "Change can happen every time and anytime in the world of Software Development, which also can be seen in the real world. One very familiar example might be the changes, caused by the COVID19-pandemic. Many urgent projects had to be prioritized to react to the spreading of the virus over other software projects before the pandemic. For instance, a lot of new software had to be developed to trace the spreading of Covid and examine the health status of possible patients.\n\nSuch changes can be divided into three different groups: requirements, technology, and organizational changes.\n\nFirstly, customers change their minds and requirements frequently. A great example might be the alteration of students' needs during the pandemic. Functional software such as MS-Teams or Zoom to replace offline teaching had to be developed and improved furthermore to ensure school and university students the quality of education.\n\nMoreover, global technology continues to develop, which causes technology changes and eventually shifts in the competitive landscape. As the first generation of the iPhone came out to market, other tech companies such as Samsung had to develop their own products with software to keep up with the competition. \n\nLastly, there could also be changes inside a company or a team. When the structure of a team changes with new recruitments or replacements of old members, great organizational changes occur, which the team has to deal with. The project can either be maintained or be led in another direction.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264081,
      "meta": {},
      "text": "I think the major reason why change happens in software development is the development of technology. In the past where the technology was not develped as much as now, everything was more uncomfortable than now. So, they did not even expect something. But, today the technology has been developing rapidly which makes people expect more comfortable and better things with help by technology. Amazon is a good example. Before Amazon's founding, shoppers had to travel and discover things to buy them. However, after Amazon's founding, it became possible to buy products online. The world is trying harder and harder to satisfy expectation of people and hence change happens in software development.\n\nRequirements changes happen when customer require something else as expected or market demands  do not stay stable and change.\nTechnology changes can be found in smartphones, tablets and smartwatches. With them, we can transfer money easily and instantly and buy foods, clothes and furnitures.\nAs organizational changes, an employment of new representatives, restructure of the building or creating a new department could be mentioned.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265150,
      "meta": {},
      "text": "The main reason for changes in software development is the advancement of the technology itself. Hence, old systems would be obsolete. Eg: Nowadays, we use cloud computing\n\nRequirement changes: Developers need to keep learning to be able to catch up with the new technologies\neg: Devs must understand how to work with git or cloud\nTechnology changes: Make Software also for smartphones, not just for PCs \neg: Apps for mobile use\nOrganizational changes: Companies tend to use agile method nowadays, as it is more flexible\neg: Usage of scrum(agile) system rather than waterfall model(obsolete) for software development",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1265263,
      "meta": {},
      "text": "Moderne Software ist agil. Statt wenigen Softwareversionen und großen Releases werden Features in kleinen dauerhaft Updates möglichst schnell ausgerollt. So starten Produkte heute als MVP und werden immer mehr erweitert und verbessert. (Beispiel: Dauerhafte Updates von Apps mit neuen Features, wie zum Beispiel zusätliche Emojis oder geschlossene Sicherheitslücken.\n\nDies ist ein Ergebnis der dauerhaften Erwartungsänderungen. Heute muss Software schnell und günstig produziert werden und trotzdem Änderungen der Zielsetzung ermöglichen. Diese Messwerte (Preis, Zeit und Flexibilität) sind eigentlich konträr, jedoch kann man mit geschickten technologie und Organisationsentscheidungen dieses Dreieck optimieren.\nDazu kann zum Beispiel eine Microservice-Softwarearchitektur dienen, die es durch kleine modulare Bausteine erlaubt langsam kleine Features modular hinzuzufügen. \nZur Organisation socher Softwareprojekte kann dann das Scrum-Verfahren helfen, in dem Features in kurzen Entwicklungszyklen entstehen, deren Zielsetzung jedes mal leicht angepasst oder geändert werden.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265489,
      "meta": {},
      "text": "Change in software development is inevitable because with the creation and the growth of a project, the circumstances around and the targets of the software solution may adapt. With different requirements the whole process of finding new solutions, testing, confirming and maintaining them is done over again. Rapid change is also the reason for using process control models like scrum which allow software projects to be agile, quickly adaptive and easy to shape within the process of creation. \nAn example for change in the real world could be the shift from conventional store-shopping towards e-commerce during the last decade which is rapidly demanding new software solutions like online-shops even for smaller single businesses. A simple information site about brands is not sufficient anymore. Online payment or uncomplicated retouring which requires lots of organization through software are becoming more and more conventional.\nRequirements changes could be e.g. the demand for a secure payment function in an application where people can sell second hand goods or antique things where payment needed to be done privately/manually until now. \nTechnology changes could be e.g. an innovative and more secure encryption method that ensures better security for the customer and is supposed to be integrated in an existing software. \nOrganizational changes might happen e.g. in a business that is restructuring its hierarchy and staff and therefore needs to have an adaption of their business tool in order to reflect the new structure and permissions.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265909,
      "meta": {},
      "text": "Change in  Software Development is Happening because the technology as well as the Programming languages itself (for the most Parts) are further developed. For example the Java stream api was introduced in Java 8. This Api allowed an optimization level never seen befor in java.\n\nA requirement change is happening, if the requirements for a software are changing. For example if a device is upgraded from a 60hz display to an 120 hz display, the implementation should allow the display of said 120hz.\n\nA technologicall change is happening, if the hadware (Ram, CPU, GPU...) is getting better. Sometimes that can cause some optimization to be obsolet  or maybe a programm that is not able to run properly-perfomanc wise is running flawlessly in the future.\n\nAn organizational change is a change that occures when the software development team gets bigger and bigger and you mayb hav to change up the orgnisation to make the development work.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266011,
      "meta": {},
      "text": "Change is bound to happen due to the volatility of software development, caused by different factors such as new technology, new tools or new trends, something every market is susceptible to. An example for change caused by new trends in software development is the most popular programming language. The popular language “Python” is becoming more and more popular while others seem to fall out of grace a little bit (obviously excluding highly specialized applications). This could be attributed to the growing complexity of modern software, where ease of use and maintainability/readability becomes more important than low-level optimization.\n\nRequirements changes:\nWhen the prerequisites of software development changes. For example needing to know the physical fundamentals of electricity for building the first working computers to nowadays not needing to anymore since it is usually sufficient to operate on a higher abstraction level.\n\nTechnology changes:\nA change in available systems or procedures. A prime example for this would be quantum computers. Although I have to admit I know almost nothing about that subject I think it fit this example because it changes the foundations of computers, introducing a new way of approaching software and programming in general.\n\nOrganizational changes:\nThis describes a change in the structure of working. For example with the widespread availability of internet you no longer need to be physically present at your workplace to contribute to a given project. Now one could, in theory, work as a software developer while traveling around the world.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266211,
      "meta": {},
      "text": "Durch Änderungen von nicht beeinflussbaren Rahmenbedingungen wie zum Beispiel gesetzliche Grundlagen können im Entwicklungsprozess neue Ansprüche entstehen (z.B Artikel 13, erfordert verbesserte Filter-Algorithmen). \n\n\nIn den meisten Fällen handelt es sich bei Kunden nicht um Experten im Bereich der Softwareentwicklung. Daher kann es sein, dass ein Kunde seine Anforderung anfangs nicht präzise genug formuliert und erst durch spätere Gespräche und Rückfragen einige erforderte Funktionsweisen angefragt werden \n(https://www.reddit.com/r/ProgrammerHumor/comments/72xjmq/tree_swing/)\nTechnologische Fortschritte sind maßgeblich für den Erfolg neuer Produkte verantwortlich (z.B neue Touch-Technologie des ersten iPhones). Sich während der Planung und Entwicklung an die neuesten technischen Standards anzupassen ist elementar im kompetitiven Markt.\nMit größer werdenden Projekten wächst auch die Anzahl der Mitglieder in einem Team. Dieses neue Team zu verwalten, die Kommunikation zwischen den Beteiligten sowie die Funktionsweise von Schnittstellen zu gewährleisten erfordert einen großen organisatorischen Aufwand.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266395,
      "meta": {},
      "text": "Change in software developement happens because the whole process of software developement is agile with an ongoing exchange of information and an uninterrupted optimization process, with multiple people involved (sometimes even multiple teams). Furthermore software developement is also influenced by external circumstances, which in themselves have nnothing to do with the concrete project. So also these things can cead to change in software developement. \nAn example is the covid-19 pandemic. As in the beginning of the pandemic the uncertainty was high, a lot of projects were shorthend, interrupted or even cancelled. Software developement projects had to be very flexible in these times and had to quickly adapt to the new circumstances.  \n\nRequirement changes means that the customer has reviwed the project and set new requirenments during the process. This was the case when the Bundesregierung decided that the covid-app should no longer track the people but provide these individual keys.\nTechnology changes means that a new technology comes to the market and replaces an old one. This was the case when the smartphones replaced the original mobilephones.\nOrganizational change means that a company changes its structure, working methods or goals. This happens when a company realizes that it is no longer profitable. So the whole department structure and working processes are ordered in a new way to be profitable again.\n.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266480,
      "meta": {},
      "text": "Developing Software is a really complex Process. There are many different teams and people involved in that process, which leads to a variety of different approaches to the same problem. And because everyone tries to find the best solution, the approach and methods of software development change a lot. Also, it is not clear what the \"best\" solution is. Some people may prefer efficiency, while for others the security of the software is more important. That is why there is not one \"best\" way to develop a software, everyone needs to it how it fita the requirements the best. Therefore, software development changes all the time.\n\nIf a customer that orders a software changes the requirements, the software developers need to adapt. That is why you should use object oriented programming for example, so changes can be made more quickly and without having to change the entire code.  It can also happen that, while you develop the software, you notice that some requirements are impossible to implement, so then you need to think of a way around that.\n\nOur technology is changing very quickly, and when you are developing software, you need to adapt to that. For example if computers get faster, you can make your software more efficient. It is really important to always update your software to stay with the technological development, so you are not left behnid by your competitors.\n\nChanges in your organisation alos have an impact on the development of your software. If you get a new team leader, for example, he might focus on different things than before, and you need to change your software accordingly.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262450,
      "meta": {},
      "text": "Das liegt daran, dass es viele Faktoren gibt, die die Softwareentwicklung beeinflussen. Zum Beispiel plötzliche Änderungen des Budgets und plötzliche Änderungen der Anforderungen. Wir müssen also Änderungen im Prozess der Softwareentwicklung vornehmen. Zum Beispiel muss der Kunde plötzlich eine neue Anforderung hinzufügen.\nAnforderungsänderungen：Wichtige Softwarefunktionen werden zu Beginn des Softwaredesigns nicht vollständig vorgeschlagen. Während der Entwicklung der Software werden ständig neue Anforderungen auftauchen. Zum Beispiel wird bei jeder Aktualisierung von tum.live.\nTechnologieänderungen：Die Umgebung kann sich während des Entwicklungsprozesses ändern. Dann müssen wir die Technologie ändern. Auch im Prozess der Softwareentwicklung werden neue Technologien geschaffen, die wir ändern müssen, um die Effizienz zu verbessern.\norganisatorische Änderungen：Ein Software-Entwicklungsteam besteht nicht aus festen Mitgliedern. Organisatorische Veränderungen treten auf, wenn es innerhalb der Gruppe zu einem Personalwechsel kommt.\n\n",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1262885,
      "meta": {},
      "text": "In software development change can occur under various aspects. Software projects are by now mostly too complex and span such a substantial amount of working hours, so that they require frequent reflection on their current status. With every reflection comes potential revision and therefore change in strategy.\n\nFor once, change of the underlying hardware for example, which is a relevant factor for development projects with a substantial timespan. There could be unforeseen innovations, which might bear implications for an ongoing project and require adaptions in the strategic vision, on the other hand they might bring opportunities, which could benefit development's purpose, if adapted to. As a real world example we could mention the announcement and market introduction of the iPhone, which quite drastically changed the name of the game in the market of mobile phones.\n\nThere can be change of requirements in resources, as with every organization, development projects depend on a funding, which again can depend on their potential benefactors confidence and trust. And it should come as no surprise, that time is of the essence in development projects. Preliminary schedules might require adaption as the development process goes on. Popular examples are delayed video game releases or Kickstarter projects, which directly depend on their potential customers faith.\n\nOf course change is omnipresent and often more subtle. It can be seen in every revision along the process, in every organizational adaption, which stretch from insignificant to more substantial. Every coming and going member of the team is a cause of change. In that sense, ways of software development have to consider the basic truth, that you never really know what the future might bring.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264533,
      "meta": {},
      "text": "In software developement change happens all the time, as internal as well as external conditions can change constantly. For example the covid pandemic is a huge external change, that can affect many areas of a software projects, starting for example with the requirements what the customer actually needs. \n\nRequirements changes describe the change of the expectations of the software and what is needed of it to fulfil the demand of the customer. As Zoom was for example used for many conferences and online lectures during the pandemic, while it was barely known before, it had to adapt to also offer solutions for a large number of participants.\n\nTechnological changes also happen all the time, as technology evolves very quickly over time and many new options such as for example smartphones become available.\n\nOrganizational changes happen more internally and describe how the structure of the team or the organization might change, as roles can switch, new people might join while others might leave.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264758,
      "meta": {},
      "text": "Software sollte, nachdem sie entwickelt wurde, fern von einem statischen Zustand sein. Um die fortwährende Nutzung sicher zu stellen, müssen Veränderungen am Produkt vorgenommen werden. Dies kann vielseitige, kleinere Gründe haben, beispielsweiße werden nach dem Release gefundene Fehler behoben, die Performance verbessert, oder das Programm an neue Anforderungen angepasst. Jener Prozess ist unbedingt notwendig, da eine gut funktionierende und adaptive Software starken einfluss auf den Erfolg eines Unternehmens haben kann. So muss das System einer Bank in der Lage sein, sich zB. so anzupassen, das moderne Cryptowährungen gehandelt werden können, sollte sich diese Bank dazu entscheiden in diesen Markt einzusteigen. Handelt es sich bei diesem Banksystem jedoch um ein recht statisches und möglicherweise schlecht dokumentiertes System, stellt dies einen bedeutenden Nachteil gegenüber der Konkurrenz da.\n\nDIese Not zum Wandel kann durch mehrere Quellen hervorgerufen werden:\nZunächst wandeln sich stets die Anforderungen an ein Programm, dies kommt meist schon früh vor, wenn das Produkt das erste mal von Usern getestet wird. Hier stellt sich dann beispielsweise heraus, das die Implementierung eines Wahrenkorbs bei einem Onlineshop sich doch von vielen gewünscht wird, wodurch es zu einer neuen Anforderung wird.\n\nTechnologische Veränderungen rufen ebenfalls eine veränderung in der Software hervor, so befindet sich auch die Hardware im sändigen Wandel, worauf die Software Entwicklung reagieren muss um die neuen Vorzüge voll ausnutzen zu können. Ein Beispiel hierführ währen nötige Änderrungen an einem System, um mit Cloud-Computing kompatibel zu sein\n\nZuletzt gibt es noch organisatorische Veränderungen, auf die geantwortet werden muss, hierbei verändert sich die Umgebung in der Software verwendet wird, zB. der Trend weg von individueller Arbeit hin zu Teams, die nun natürlich gemeinsam an Projekten arbeiten können sollten. Hier ist es nötig ihnen einen geteilten Zugriff auf unterlagen und Tools zu verfügung zu stellen d.h. das System entsprechend anzupassen.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1264965,
      "meta": {},
      "text": "Change happens in software development projects due to complexity, it is not possible to set in stone all requirements from the beginning. Requirements cause an error, so they need to be updated. One example is when a recommendation algorithm of a shopping app is based on false assumptions that need to be adapted within the project. \n \nRequirements change happens when the software requirements get adapted, e.g., detailed or fully changed. This usually happens when new learning in the project cause the need for change. One example could be a self-driving car algorithm, that needs to respond to not previously known edge-cases in on the street (e.g. a horse crossing the street). \nTechnological change can happen, when a different technology becomes available that is a better fit to implement the solution. One example could be that a new biometric sensor allows to lock and secure a smartphone better then the original thought solution. \nOrganizational change happens, when the project organization is changes. This could affect team members, budget, or timeline. Another example could be, that the project approach is changed. For example the implementation of a CRM for a small retail company could start as defined process control, as it is assumed that this will only be a small project. However, after a while the team realizes that the project is more complex than initially thought and that a empirical process control needs to be implemented and the team switches to an agile project orgnization.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265005,
      "meta": {},
      "text": "Veränderung findet dauerhaft in jedem Bereich des Lebens statt, weswegen es auch einleuchtet, dass Veränderung auch im Bereich der Softwareentwicklung stattfindet. Unsere Hardware wird schneller denn je, Internetgeschwindigkeiten besser. Security ist wichtiger denn je, genauso wie Datenschutz. Eine einfache Bedienung und ein gutes/cleanes Aussehen sind schon zum absoluten Minimum geworden. All dies muss bei der Entwicklung einer neuen Software berücksichtigt werden. Beispiel: Keine sich langsam entwickelnde Veränderung, sondern mehr eine abrupte aufgezwungene Änderung. Wenn ein neues Gesetz verabschiedet wird, z.B. durch die EU was Software betrifft, muss jedes Team darauf reagieren und sein Produkt dementsprechend anpassen, z.B. Websitenbetreiber nun auf Cookies aufmerksam machen.\n\nAnforderungsveränderung: Wenn ich einen Musikstreamingdienst bauen würde, würde es nicht mehr reichen, einen Song suchen und hören zu können. Durch unsere hohen Anforderungen wären Features wie mit wenigen Klickts andere Songs des Künstlers, das ganze Album oder ähnliche Songs hören zu können das Minimum, um einen erfolgreichen Musikstreamingdienst zu bauen. (Alles wird besser, und wenn die Standards so hoch sind, sollte ein neuer Dienst in diesem Bereich mindestens dieselben Anforderungen erfüllen um erfolgreich zu werden)\nTechnologieveränderung: Die Hardware unserer Systeme ist so leitungsvoll wie noch nie, ebenso zb. Internetgeschwindigkeiten. Dementsprechend müssen sich auch die Systeme anpassen. Z.B. die Grafik bei Videospielen (heutzustage sind gute Grafiken Standard, ein Videospiel mit einer Grafik wie vor 20 Jahren würde schlecht ankommen)\nOrganistationsveränderung: Durch Aufkommen neuer Technologien und Services wie Notion oder dem Google Ecosystem, verändert sich die Art wie sich Teams organisieren. Wo früher alle in einem Raum saßen, kann heute jeder von daheim aus arbeiten und mit wenigen klickts in gemeinsamen Kalendern Meetings und Aufgaben organisieren und so den Arbeitsprozess steuern.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265022,
      "meta": {},
      "text": "Wieso ändert sich die Software-Entwicklung?\nEs kommen neue Programmiersprachen und die Anforderungen ändern sich.\nEin großes Thema in der heutigen Zeit ist zum Beispiel künstliche Intelligenz, jedoch hat man sich vor einigen Jahren mit diesem Thema noch nicht so viel befasst.  \n\nTechnologische Änderungen: Immer mehr Firmen nutzen die Technologie und Künstliche Intelligenz wird in den nächsten Jahren immer weiterwachsen. Es werden mehr und mehr Probleme damit gelöst oder werden auch jetzt schon in vielen Bereichen genutzt, wie zum Beispiel bei Online-Kundensupport.\n\nAnforderungen: Dadurch ändern sich auch die Anforderungen der Software-Entwicklung. Eine weitere Anforderung ist die Sicherheit von Programmen. Wie man schon in vielen Fällen gesehen hat, können Software-Fehler große Auswirkungen auf Firmen haben, oder auch bei Fahrzeugen ist die Sicherheit sehr wichtig und wird immer ein wichtiges Thema bleiben. Die Technik in Autos wird immer mehr und Fehler können hier sehr gravierend sein.\n\nOrganisatorische Änderungen: Kann man zum Beispiel bei der Medizintechnik beobachten. Immer mehr wird die Technik mit der Medizin verbunden und das heißt zum Beispiel auch Techniker arbeiten mit Ärzten zusammen.\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1265083,
      "meta": {},
      "text": "As technology progresses the need for more sophisticated systems increases. Therefore there is always change in the area of software development needed. So, for example there once was a time when it was enough to present yourself in the market with a car that only had a GPS and a stereo in it. After the time those cars had to recognize traffic-signs for you, hold you on track and even talk to you. So in the end high value car sellers had to adapt and include more and more features or they would not be in the position to sell high valued cars anymore. \nFurthermore, there are requirements changes such as easy ordering systems like amazon. As amazon became easier and accessible for anyone it stomped every other online shop into the ground because the consumers needed an easy way to get there day-to-day items without leaving their house. Then there are technological changes as one can see in video games. The technology and hardware became faster so the need for better looking and even more sophisticated video games increased and those who did not adapt fast enough ended up forgotten. And at last, there are organizational changes in software engineering, as there are nearly no software creating companies that offer the old conservative approach to create a new product. So the old hierarchy in which the boss tells his/her employees to approach their work with a concept that he/she came up with, nowadays the software developers are included in the software process.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265351,
      "meta": {},
      "text": "Because the IT-field is farely new, better or more efficient methods get discovered, change happens quite often. In the real world change for example happened when the lightbulb got discovered and people switched to that more reliant and safe form of light-providing. It worked much better than candles or oil-lamps.\nRequirement changes in software development can occure when clients change their view on some features you need to provide, maybe they decide against a timecounting feature in an app now.\nTechnology changes come into play when for example the next generation of graphics cards comes out, suddenly the software can be more complex aswell, one needs to adapt here and write code that works on the given technology.\nOrganizational change may happen in the development team. After a requirement change for example it may be necessary to expand the group to more developers, resulting in a new structure and roles within the team. Therefore a functioning organization and means of communication must be declared.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265770,
      "meta": {},
      "text": "Veränderungen passieren und das ist gut.\nNur wenn sich die Dinge und auch die Softwareentwicklung verändert kann sie sich weiterentwickeln und neue Lösungen auf den Markt bringen. Häufig sind Veränderungen nicht unbedingt ein Schritt in die Richtige Richtung wie uns die zu Beginn mangelhafte Systemintegration von VW bei ihren ID Modellen zeigte. Hier konnte die brandneu entwickelte Software für die Fahrzeuge nicht mit der verbauten Hardware arbeiten was zu monatelangen Lieferverzögerungen führte.\nAber es gibt auch positive Beispiele für Veränderung. \nSo können Raketen mittlerweile mehrfach verwendet werden. Die Hardware, also die Raketen, unterscheiden sich nur minimal von ihren Vorgängern doch dank modernster Software ist das Unmögliche nun möglich. Die Ursache für diesen epochalen Fortschritt war der Wille eines kleinen Teams und das kreative denken der Entwickler.  \nKommen wir also zu den drei Bereichen der Veränderungen in der Softwareentwicklung.\nEine Veränderungen der Anforderungen kann zum Beispiel vom Auftraggeber ausgehen, direkt vom Markt oder auch vom Gesetzgeber. So könnte eine Umstellung des Firmenimages eine neue Farbgebung des Programmes mit sich bringen.\nTechnische Veränderungen können sowohl durch neue Anforderungen, als auch durch neue Entwicklungen auf dem Markt entstehen. So konnte erst durch die Integration von GPS in Smartphones ein Navigationstool wie Google Maps entstehen.\nAuch organisatorische Veränderungen können den Schaffungsprozess eines Software beeinflussen. So kann durch eine Übernahme des Unternehmens eine vollkommen neue Unternehmenskultur etabliert werden und dadurch die internen Abläufe verändert werden, indem nun ein wesentlich ambitionierterer Zeitplan vorgelegt wird und damit weniger Zeit für teaminterne Kommunikation bleibt.\n\n\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265944,
      "meta": {},
      "text": "Changes can happen because you can´t predict or plan for everything while developing a software. Thus, software development can be seen as an empirical process in which it is important to have an overall plan but at the end of the day you have to face challenges that you did not see coming. For example new technologies may arise which make parts of your software solution outdated, needs and beliefs of the customers can shift, unforeseen events like war or a natural disaster may occure etc. \n\nThrough new laws like the \"DSGVO\" the requirements of software change. Software providers needed to rethink their strategy of how to deal with personal data in order to abide by the law. They for example needed to consider extra measures so that no user data is leaked or accessible by third parties. Furthermore, the changing needs of customers can also change the requirement of a software, which may e.g. result in a completly new user interface. \n\nFurthermore, new technologies can arise and make existing technologies outdated or give room for innovative software solution. Blockchain e.g. facilitates encryption which laid the foundation for crypto currencies like Bitcoin. Additionally, artificial intelligence and Big Data analysis for example enabled the first stages of autonomous driving. \n\nFinally, there may also be organizational changes in the team developing the software. The team has to adapt to new co-workers, a different culture within the company, budgetary cuts etc. in order to work efficiently.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265956,
      "meta": {},
      "text": "Changes are one of the most risky problems in software development. Changes mean modifications, extensions, or any corrections in development process. Software teams consist of many people, that can have different views on solving current problems. These disagreements or requirements from project owner or customer and other factors can lead to possible changes in the software development projects. If there occur changes, there should be meeting organized, to discuss, how to implement these changes to the current project and avoid global architecture changes. The risk should be analyzed and provided with multiple variants of the change's realization. For example, \"log4j bug\". It was a problem, that occurred in one of the most popular java library and was critical for users. Many companies started to search for a solution and a way to implement this changes into their products and projects.\nThe changes can take many forms and types. The first one is requirements changes. That means that, new or current version should be modified and contains new content or the old content should be edited. For example, a new project feature: the project should provide users an opportunity to add comments.\nTechnology changes can occur, when developer team or scrum master want to change the project structure on the programming level. For example, was found a way to make the product faster or more optimized.\nOrganizational changes mean that the current project organization should be edited. For example, a developer can't work with a team together and therefore must be changed.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266207,
      "meta": {},
      "text": "Entwicklungen des Software Engineering\n\n\nFrüher wurde Software von Anfang bis Ende geplant und dann umgesetzt. Man glaubte, dass es möglich sei, Software immer auf dieselbe Weise und mit denselben Prozessen umzusetzen, wie eine Fabrik. Man glaubte, dass ein defined process der richtige Weg sei. Mit der Zeit etablierte sich ein neuer, dynamischerer Ansatz. Man distanzierte sich von der Idee, Softwareentwicklung von Anfang an zur Gänze planen zu können und erkannte die Softwareentwicklung als kreativen und unberechenbaren Prozess an. Die Arbeitsweise änderte sich dahingehend, dass das Projekt in kleinere Happen unterteilt wird und diese Happen nach und nach entwickelt und in das finale Produkt hinzugefügt werden. Auf diese Weise konnte man besser auf unvorhergesehene Ereignisse reagieren oder dynamischer mit Budgets oder Kundenanforderungen umgehen. Dieser empirical process setzte sich mehr und mehr durch. \n\nEin Beispiel eines solchen agilen Models ist Scrum. Dieses Modell wird heutzutage sehr häufig verwendet.\n\n\nDie Software muss sich ständig weiterentwickeln, da sich viele Aspekte rund um die Software ändern. Drei davon sind:\n\n•\tAnforderungen: \nGesetze können sich ändern. Das kann dazu führen, dass z.B. persönliche Daten anders gehandhabt werden müssen. \nNeue Konkurrenzprodukte können auf dem Markt auftauchen und die Ansprüche und Wünsche der Kunden können sich ändern.\n\n•\tTechnologie:\nDie Technologie befindet sich in einem stetigen Wandel. Um konkurrenzfähig zu bleiben, ist es essenziel mit diesem Wandel Schritt zu halten. Wenn man z.B. seine Software nicht an die neue Generation von Geräten anpasst, bleibt man auf der Strecke.\n\n•\tOrganisation:\nUm mit dem schnellen Wandel dieser Faktoren zurecht zu kommen, muss man die Arbeitsweise entsprechend anpassen. Ein Beispiel ist der oben beschriebene Wechsel von Softwareentwicklung nach dem Prinzip der definierten Prozesse zu dem der agilen Entwicklung.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266335,
      "meta": {},
      "text": "Change happens in software development, since its difficult to define detailed project requirements from the get go, some ideas featueres and technologies come up during the development process. Since there is nowrdays a huge emphasis on software as an ongoing service, a lot of these things can change no just during the developmen itself but also during the long lifetime of a software product. A real word change like a new data protection policy that forces you to deploy new data security measueres can affect software that is currently developed or still maintained. \n\nRequirement change: the customer wants a new feature or an already developed one to be changed during the development process\n\nTechnology change: a new piece of technology emerges that benefits your developmen process or an old one that is already used on the project gets deprecated and has to be replaced\n\nOrganizational change: People leave and enter the project or the teamstructure is altered",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262137,
      "meta": {},
      "text": "Change in SW development happens because of new technologies emerging (innovations), the legal environment with new laws that must be followed or also the market competitors that challenge you as a developer. These make the market more complex and leads to a constant need of adaption and change.\n\nA good example in the real world of change is Nokia, which was not able to cope with the new trend of smartphones, before other well known brands like Apple or Samsung, they were the leader in mobile phones, however they didn't believe in the new trend and sticked to their strategy instead of adapting, which lead to Nokia disappearing from this market completely.\n\nRequirement changes: When stakeholders collaborate with the developers, they need to clearly the communicate the requirements. If this is not done properly, a small misunderstanding like seconds instead of milliseconds can lead to a whole new requirement and big changes in the code.\n\nTechnology changes: If an approach is a good solution at a given point in time, but a new solution approach becomes known over the course of the project, which also appeals more to the customer, it may be necessary to change the requirements in terms of technology. Here it can be helpful to invest in continuous training to keep the development teams up-to-date.\n\nOrganizational changes: Due to its susceptibility to change, SW development only works in an agile environments that can adapt and respond to change, for example through SCRUM and heterogeneous development teams.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262181,
      "meta": {},
      "text": "In software developmtnt, change happens for a multitude of reasons. Those may be new technologies that are developed, new insights into what might be the best approach to a given problem, or a change in the markets.\nAn interesting example for this is the covid-19 pandemic. With increasing infection rates, the need for new work models was obvious. People who used to sit in the same office together now found themselves at home, at their own desks. However, they still needed to communicate effectively in order to develop quality software. While some workplaces were already accustomed to being physically separated while working on the same project, others, especially smaller teams were introduced to different tools, such as video conferences instead of being in the same conference room.\n\nThe aforementioned event was also one of the big drivers of requirements change in the last two years. Due to the pandemic, existing software had to be adapted to social distancing, and new software had to be developed for newly arisen problems, for example contact tracing using the EU Covid warning app.\nOrganizational changes also happened a lot, especially at the beginning of the pandemic. People could not use the work organization they were accustomed to anymore, since a lot of people had to work from home. With this change, new forms of communication were needed, which drove many companies to use tools such as Microsoft teams or Zoom.\nWhile having stagnated during the last two years, technology changes has still been visible. New technologies hit the market virtually all the time. May it be new hardware such as new high performance processors, or new software. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262524,
      "meta": {},
      "text": "Changes sometimes happen in the software development,which is from my point of vie unavoidable.For instance,changes in requirements,changes in technologies,changes in costs and so on.A software is more than some source code.It has something to do with the\nfiscal charges,with the end-users,with the idea of devepment team.For example,XIAOHONGSHU is a APP which creates a flatform for users to share their favourite\ncosmetics.But at the beginning the team finds that they can not made money so they started to develop functions served like Amazon,where users can sell cosmetics and XIAOHONGSHU began to make profits from it.\n1.requirements changes:\nProducts are made to those who need it.So how to catch and reply the requirements quickly is always an important thing for big company.Cars are at the beginning somthing for rich people.FORT made cars at first also for rich people but it found a big chance in the market,which is,that the people in the middle class of the society are also in need of a car.\nSince then FORT began to try his best to cut the cost and win a big marketplace.\n2.technology changes:\nTechnology is something iterates very fast.How to make profits from new technology is a big thing.Nokia is a good example.A company called MyDevice developed new tech which enables a screen-touching function,but Nokia did not attach much importance to it.Apple bought the patent of MyDevice and made iphone and all us know the story afterweards.\n3.organizational changes:\nNetflix is a small company at first.But When Hastings took charge of the company,lots of  \nunbelievable changes of organisation took place and now the organisation of Netflix is a world model.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263419,
      "meta": {},
      "text": "First of all, software development becomes more easier than ten years ago because the cost and effort needed for creating new software decreased. That motivates a software development company to offer the best products to clients, therefore the range of innovation and new ideas increased, also more and more products are offered on the market. Furthermore, most of the early-age softwares was developed through the waterfall model. But today, modern softwares is developed with the agile methodology so softwares is split up into several smaller components  that are incrementally developed. It gives a more collaborative environment. The Agile methodology, like scrum, makes  software development much more robust, adaptable, and efficient. Most of the software can not modeled directly with a defined process, it needs time and researches to bring it on the expected state.\n\nThere was a time when everyone only used one browser and only knows Internet Explorer, but in 2008, google chrome arrived on the market and dominated the browser space, also pushed firefox aside with a clear faster and more practical browser that was free to use for everyone. Now chrome continues to be the preferred browser for most users.\n\nRequirements changes form year to year because most of the clients dont really know what they want until they see it for example like a GUI interface someone wanted, and when you deliver it to them, most of the time the result is not what they have expected, so they will change their requirements.\nThe area of organizational changes is also quite obvious, softwares can not be developed by individuals it requires teamwork, therefore you need an organizational structure to support the operation and interaction between the various levels.\nTechnology changes rapidlly, therefore everyone wants the latest and best product, that is on the market. For example every year apple provides a newer version of iphone on the market, which is a good example for technology changes.\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264516,
      "meta": {},
      "text": "Die Softwareentwicklung ist eine große Hilfe für die Entwicklung unserer menschlichen Zivilisation.  In der heutigen Gesellschaft sind wir untrennbar mit Technologie verbunden, und gleichzeitig mit der technologischen Entwicklung müssen auch Softwareforschung und -entwicklung aufeinander abgestimmt werden.\nAuf Software können wir in unserem Leben nicht verzichten.  Doch ohne unser Wissen ist auch ein Software-Update eingetroffen.  Änderungen sind auch in der Softwareentwicklung üblich.  Genau wie bei Apple ändert sich nicht nur das Aussehen des Handys jedes Jahr, sondern auch die Software wird sich ändern.  Es gibt jedoch drei Punkte, die zu Änderungen bei den Anforderungen an die Softwareentwicklung führen.  Das erste ist, dass es einige Probleme bei der Kommunikation gibt.  Wenn der Entwickler mit dem Kunden über das endgültige Modell des Produkts kommuniziert, drückt der Kunde dies nicht klar aus oder der Entwickler versteht es nicht.In der späteren Entwicklung wird der Entwickler die allgemeinen Bedürfnisse des Kunden auf der Grundlage des Allgemeinen ableiten Angaben des Kunden.  Dies führt jedoch häufig zu einem Produkt, das sich grob von dem unterscheidet, was der Benutzer möchte, und dann ist eine Änderung erforderlich. Zweitens ist der Projektzeitraum lang, und dann gibt es einige objektive Faktoren, Benutzer möchten die Softwareschnittstelle, Funktionen und Leistung optimieren.  Zum Beispiel Apples ios15.4.1. Wegen der Epidemie müssen Menschen auf Reisen Masken tragen. Die Gesichtserkennung kann jedoch zuvor keine Gesichter mit Masken erkennen.  Apple hat also einen neuen Gesichtserkennungsalgorithmus entwickelt und beworben. Schließlich gibt es noch das Thema technische Updates.  Da die aktuelle Technologie zu schnell ist und die Hardware-Einrichtungen ersetzt werden, müssen Entwickler auch dies berücksichtigen.  Beispielsweise werden jedes Jahr Apple-Telefone ersetzt und auch die internen Prozessoren auf den neuesten Stand. Viele Entwickler interner Apps müssen dies berücksichtigen und Anpassungen vornehmen, damit dieses Produkt nicht veraltet.",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1264706,
      "meta": {},
      "text": "1) \nSoftware development is tightly linked to the requirements of the customer, the current market and new technologies that may arise. All of those factors are subject to change. That is why in software development an important factor is being able to solve a given problem whilst dealing with change. If the team or company lacks good change management they may loose their competitive advantage and are not able to keep up with the trends of the market. An example of this is Kodak. Before the development of digital cameras they where market leaders but weren't able to adapt their business and technologies to match the new market environment and customer needs and by that lost their footing in the industry. \n\n2)\nDuring the course of a project the customer might change the requirements. Sometimes this is due to the fact that the customer might not even know the full problem statement until the software development team starts working on it and they can say \"wait a second this won't work for us we have to do it differently\". In this case the problem statement needs to be rephrased and the requirements need to be set accordingly. \nThere might also be the case that a new technology has been introduced that could make solving the problem easier or it might put new constraints on the team because the customer wants the product to work with the new technology. \nOrganizational changes can make it harder or easier for the team to work. The company's structure or policies might change and the team has to adapt accordingly. It can also be a change within the team, e.g new processes or a new team leader. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265341,
      "meta": {},
      "text": "Change in software development happens because software constantly has to adapt to its changing and evolving environment. Among reasons for changes are that users demand new features, bugs have to be ironed out, regulations which the software has to abide are put into place, ...\nIf we take the example of Facebook, the software it runs on evolved during the span of years because of the changing environment in the social media realm. The load Facebook's software has to handle is magnitudes higher than during its inception - it now has millions of concurrent users while in its early days this number was probably in its thousands. The software and infrastructure has to scale for this increase in load - instead of running on a single server, nowadays the software has to run on a cluster of thousands of servers. \n\nRequirement changes can happen because of changes in the requirements of the users (e.g. demand in new features),  new information about the domain becomes obvious, etc. \nComing back to the former example, the requirements of Facebook have changed because it has more users; it needs to adapt because of that. \n\nChanges in technology happen when new technologies emerge, old technologies deprecate or improvements are made upon existing technologies. For example, in websites technology has shifted from using jQuery to frameworks like React. \n\nOrganizational changes can occur when the internal state of an organization changes. This can include things like mergers but also changes in focus. For example, when TikTok bought out musical.ly, the software behind it was reworked in a major way.  ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266271,
      "meta": {},
      "text": "Change happens in software development because a lot of things may happen during development, even if apparently not correlated to the product, that can significantly affect the process. Examples of these changes may be the change of requirements, of budget, the entry into force of new laws that affect the privacy policies or management of sensible data.\nThese changes can be grouped together in three categories:\n- Requirements changes, that occur when the client wants the product in development to fulfill different requirements as the initial ones. For example a change in requirements would be to have a product initially intended as a website to also have a mobile application.\n- Technology changes, when a part of the product is developed in a certain way but later on is for example done in another language thanks to an update that solves a specific problem in an easier and more efficient way.\n - Organizational changes, when there are modifications of the team working on the product or when the way the product is organized (data management or structure and connections of classes if developed in Java for example) change to correct or better its design.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266358,
      "meta": {},
      "text": "Our world is constantly changing and even if a project is made to be as stabile as possible, it can still be effected by it. Events like a world wide pandamic or a war, can effect every project and creates the need for adjustments to the changes.\nTechonology change occurs when a new technology has been developt or a new break through has been made. This can cause, that you neeed the adapt your project to these new technologies. For example if a new device has been invented you may need to implement code, that supports it.\nRequirement changes may occur through many things. If it happens you need the change your project to adept to those new requirements. An example would be a competitor has published a new version of their software and has a new feature and now you need to implement it to, to stay in competition.\nOrganizational changes are caused by organization. If a company changes its structure for example, you may have a different team or a new boss, who have different ideas and plans for the project and new to adjust accordingly.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261244,
      "meta": {},
      "text": "Software development is a complex task, that in most cases requires several people: As such it is virtually impossible to predict the whole process from the start, so change will inevitably occur. A simple example for that could be, that a team member gets ill for a longer period of time and his tasks have to be redistributed or the team has to find a temporary replacement. \nOther things can change as well like the requirements for a project. external factors can change and lead to requirement changes. For example there could be new laws demanding certain things, that weren't required at the start of a project, or the company you work for decides to take a different course of action throughout development. Depending on the size of the project software development can take years.\nIn that time the technology changes as well. Modern computers get more efficient as time goes on. The most prominent example for that is Moores law. With better hardware you are able to do more complex things better. You have to adapt to these changes in order to make the best product.\nOrganizational change is also important. To keep up with competitors a company has to change their strategy especially in a volatile market. The whole strategy of a company can change that way. A good example for that is Netflix. They started as an online platform to rent dvds, until they realized, that it is much more practical to just offer the possibilty of streaming movies for a fixed price a month",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1261494,
      "meta": {},
      "text": "Change is inevitable over the course of the development lifecycle, and it happens for a number of reasons. Some of these are technical, some are procedural, some are financial, and some are political or people related. Whether or not the project manager supports the adjustment, it is important to consider why the changes are being requested and the impact they may have on the integrity of the project and the delivery process. \n\nrequirements changes：\nThe reasons for requirement changes are Generally in software development projects, requirement changes can come from the solution provider, the customer or the product supplier, and of course, from within the project team. For example, the scope has not been defined before the refinement, the basic requirements have not been defined and the software has not been structured well to accommodate changes.  \n\ntechnology changes：\nTechnology must also be kept up to date, as in the case of Apple phones, where a new system version is released almost every year.\n\norganizational changes：\nSoftware development is becoming increasingly complex and diverse, with most development teams developing multiple versions at the same time, development/maintenance work co-existing, and simultaneous development in multiple locations, creating unprecedented difficulties for software development management. If not properly managed, this will inevitably lead to version confusion, crossover and interference between the work of individual developers, and the entire development team will operate in a disorderly and undesirable situation, seriously affecting the progress and quality of software product development. This is why it is essential for project managers to receive systematic training in project management.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1262553,
      "meta": {},
      "text": "The change happens because our world is dynamic. The needs of the market is ever-changing and new technologies are constantly emerging. For example the change from Web to App on smart phone. In the past, the websites are absolutely mainstream, but then the smart phone comes and Apps are more popular now.\nRequirements changes: For example, based on market research, the customer wants to add new features to the software.\nTechnology changes: You are developing your website by using handwritten HTML + homemade CSS. But there are frameworks like Bootstrap. You can develop faster and better by using the new technology\nOrganizational changes: Your company will want to change its programmer management model from hierarchical to self-organizing. You must adapt to this change.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262631,
      "meta": {},
      "text": "There is no way of knowing what happens on the road to a finished product. Changes can occur externally but also internally. For example, when Apple introduced their new M1 Chip which replaced the Intel Chips in some of their macs, Developers had to adapt to this change and optimize their products such as apps for the new apple silicon mac series. This is also an example of technological changes. A more general example would be the changes that we need to make at workplaces or university facilities because of the covid-19 outbreak. This change required many organizations to come up with new hygiene concepts.\n\nRequirements changes can also happen. For example, our customers could request additional features for their product. This would mean that we need to rethink our approach. E.g. they want us to design their app so that it is accessible/barrier-free for people with a hearing disability.\n\nTechnology changes can happen all the time as devices such as our smartphones get new updates every once in a while or new product launches (such as the apple silicon macs) can create a need for a change in our applications. Also, new JDK versions can force us to make changes in our code.\n\nWe can also face organizational changes, e.g. if one of our team members stays off the project because of a serious covid-19 infection tasks have to be re-allocated among the remaining team members.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263718,
      "meta": {},
      "text": "Change in software development occurs mainly because we develop software as a mean to help us humans in daily activities, activities which are subject to change due to different circumstances such as market forces, cycles of business , etc.\n\nA good real world example could be that you are working in a project developing a web page for xyz company. The company comes to you with an idea and a plan of what they want but this can change and you would need to adjust and adapt for this in your code according to the client needs.\n\nChange is inevitable in the tech world and it can range from:\n-the legal or requirements perspective (government imposes new laws in the technology sector) , \n-to the technology perspective ( i.e. a new programming language) all the way \n-to the organizational aspect. ( Teams within the company that develop for example software can be subject to changes due to new Leaders or new company policies)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263907,
      "meta": {},
      "text": "Die Softwareentwicklung verändert sich in den letzten Jahren sehr schnell. Die Menge an Kernen, welcher ein CPU hat, ist in den letzten 10 Jahren stark gestiegen. Ein Threadripper hat zum Beispiel bereits 64 Kerne und wird in den nächsten Jahren immer mehr haben. Mit dem Anstieg an Leistung die ein Pc habe kann steigt auch die mögliche Anzahl an ausführbaren Algorithmen. Beispiels weiße können nun lineare Laufzeit Algorithmen nun deutlich schneller gerechnet werden. Wenn nun also die Softwareentwicklung brauchbaren Zugriff auch auf ineffiziente Algorithmen, auf die wir keine effizientere Weiße kennen, in absehbarer Zeit berechnen zu können, schrauben sich die Möglichkeiten der Software immer weiter nach oben. Wenn requirements changes auftreten hat sich entweder was in dem Auftrag geändert was das Ziel angeht oder das Softwareentwicklerteam hat die Bedürfnisse des Auftraggebers besser verstanden, was zu einer Änderung des Ziels führt. Ein Beispiel hierfür wäre, wenn der Auftraggeber mitten im Projekt seine Bedürfnisse so ausdrückt, dass eine Web Version einer App vielleicht sinnvoller ist als eine Client Version und somit das Ziel des Auftrags sich verändert. Technology changes umfasst alle Änderungen in der Technology. Dies kann auch sehr große Veränderungen im generellen Alltag mit sich ziehen. Zum Beispiel wurde das Fax mit E-Mails ersetzt und man kann so viel schneller mehr Nachrichten an verschiedenste Menschen auf der Welt ganz leicht schicken. Organizational changes verändern wie eine Anzahl an Leute miteinander arbeiten. Es sind zum Beispiel Digitalisierungsschritte, also Händische aufgaben die nun von Robotern gemacht werden oder Papierarbeit, welche nun automatisch das Formular ausfüllt.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1263941,
      "meta": {},
      "text": "Software Development is a field that is based on the change to adapt to the Customer's Needs because of their ever-changing Wants and maybe sometimes they don’t have a fixed idea of what they want really from the Beginning. Another good reason is the presence of many external factors such as new competitors or advanced technologies that change the rule of the game. An example is the new innovative mythology that Sony created in Gaming Development by introducing the concept of working with CD-ROM and developing software that can work easily with 3D graphics making its customers able to create much more sophisticated games than its competitor’s consoles (Nintendo). Requirements change is a very important part in the software development life cycle due to many factors one of them is the ever-changing customer requirements. Sometimes customers want a feature today and a completely different one in the next week. Another reason is the market changing(e.g. Apple introducing the iPhone ) forcing other companies to change their requirements to address the new needs(e.g. Android). Software development is a not a stable domain because of the continuously changing technological landscape. New Languages, frameworks, and even approaches will be revealed and this emerging will force many developers who stand still for their experience to face such changes in order to not fall behind because skills and technology that you will use in a future project won’t be your past skill. Organizational change it’s a process that organizations utilize to  maintain a competitive edge in an era of hyper-competition by changing its policies, ideologies, laws, and even their methods and culture taking as example Netflix started the streaming concept in 2007 instead of sending customers DVDs per email  ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264163,
      "meta": {},
      "text": "Change is everywhere in a modern software engineering environment. Software gets better with experience, clients request more features or new technologies release which might make existing problems easier/more efficient. However they might also create new opportunities.\nIntel is one of many companies that missed one such opportunity. Back in 2007 smartphones skyrocketed in popularity, which meant they needed tons of powerful CPU's. Intel the CPU market leader however decided to pass on making chips for Apple's new IPhone, as they thought PC's are the one and only computer someone needs. Back then they missed the opportunity to dominate the smartphone CPU market, which is now ruled by ARM designs instead of x86.\nRequirement often change in the world of software engineering. A recent example is the rise of Tiktok with its short videos which YouTube decided was a threat to their platform. As a reaction they introduced YT shorts which fulfil the new requirement for short video content.\nTechnologies change all the time. Back in the old days, when simple, dumb phones evolved into portable computers, Nokia simply didn't jump on the bandwagon and sank from the position of a market leader into obscurity.\nOrganizational changes have happened since many years. At the beginning, software engineering was considered more like a well tuned factory that can consistently pump out fresh code. In recent times however, the majority of companies switched to a agile approach, which allowed them to listen & respond to the current market situation and as a result, outperform their competitors.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264540,
      "meta": {},
      "text": "change:\nDie Softwareentwicklung Branche muss wie jede Branche auf die Umstände reagieren, immer wenn sich die Welt verändert muss sich auch die Softwareentwicklung bis zu gewissen Maße verändern. Bei neuen technischen Erkenntnissen , neu gesellschaftliche Ansprüche oder gesetzliche Änderung muss reagiert werden.\nBeispielsweise sind die Ansprüche an die Wartbarkeit von Software in den letzten Jahrzehnten immer weiter gestiegen, während früher wegen den schlechteren Computer eher Effizienz an oberster stelle stand. \n\nrequirements changes:\nrequirements changes ist, wenn sich die Anforderungen an das Produkt geändert haben. Auf der Basis des alten Produkts muss dann zu dem neuen Produkt hingearbeitet werden. Bei dieser Änderung wird meist auf den Markt reagiert.\n\ntechnology changes:\ntechnology changes ist, wenn es eine Veränderung (meist einen fortschritt) in der Technologie gibt. Das kann dazu führen, dass die bisherige Methode etwas zu tun vielleicht veraltet ist und es jetzt eine effizientere Möglichkeit gibt, dann muss abgewägt werden, ob der Vorteil der neuen Technologie, die Veränderung, die gemacht werden muss um diese einsetzen zu können überwiegt.\n\norganizational changes:\norganizational changes ist, wenn sich die Organisationsstruktur eines Unternehmens oder einer Unternehmung verändert, oder wenn die Arbeitsmethoden verändert werden. Das ist meist das Resultat von äußeren oder inneren druck und alle abläuft müssen neu definiert werden.\n\n",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1265858,
      "meta": {},
      "text": "Change happens because the world develops, and many aspects change technologies develop organizations changes and new needs develop. An example is Uber which was originally a person to person taxi servis and now with time expanded to food delivery, implemented security feature.\n\nRequirements changes the client has new needs ,Uber had a new requirement for food delivery so they needed new functionalities like the restaurant system\nOrganizational changes the business expands and tha program needs to fit,  Uber now has different parts of the busyness so it has on its app options for ride, food and 2 wheels that have different functionalities   \nTechnology changes the change from mobile to smart phone came with the need to change the design to accommodate new possibilities",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265936,
      "meta": {},
      "text": "Changes happen in software development because you can't fully plan everything and you have to react sometimes to influences of the real world that you didn't predict, in order to be more agile and improve the value and the quality of the product.\nExample: A software development team is building an entertainment application for a car, but they have to switch to a worse hardware, because of the global chip shortage in order to keep costs down. This results in them having to remove some features or focus more on the performance and efficiency of the code.\n\nRequirement changes can occur for example when the opinion of the customer/user changes (for example a different priority of requirements) or when these requirements weren't communicated correctly to the developers. Also a better understanding of the market and the needs can lead to requirement changes.\n\nTechnology changes occur for example when there are new findings in research or a new faster chip is released, that allows you to spend less time on optimizing the code. Another example would be a new version of the programming language or a new operating system.\n\nOrganizational changes can have different causes. A new business model, a new leadership, a new time schedule or a different team structure can be the reason. The best example is when a company gets bought by another company, because often there are a lot of structural changes made.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266333,
      "meta": {},
      "text": "Siehe Aufgabe H01E02 SS2021 Philipp Marsmann: https://artemis.ase.in.tum.de/courses/121/text-exercises/4082/participate/762446 mit Erweiterungen\n\nVeränderungen im software development passieren aufgrund der sich rapide verändernden technologischen Welt, oder aufgrund von vielen verschiedenen Stakeholder, die Teil des Projekt sind und ihre eigenen Ziele verwirklichen wollen, sowie aufgrund von Missverständnissen in der Kommunikation oder von Budget-Problemen.\nAuf der einen Seite können sich die Anforderungen der Auftraggeber bzw. der Kunden ändern, zum Beispiel soll eine App die anfangs nur für den Apple Store geplant war, da man sich dort ein zahlungskräftigeres Publikum erwartet hat, nun doch auch für den Android Store erhältlich sein, um einen größeren Markt abzudecken. Dies sind die requirements changes, nachfolgend die technology changes.\nGenauso ändert sich aber auch die Technologie.   Beim Kunden wurde eine neue Software-Lösung gekauft und nun muss die Software des Projektes auch eine Anbindung an die neue Software des Kunden bieten, oder es wurden neue Hardware-produkte, die wiederum eine andere Software bzw. eine Anpassung benötigen.\nZu guter Letzt gibt es auch Veränderungen in der Organisationswelt, die Hierarchie im Unternehmen wird angepasst und nun finden sich neue Teilnehmer im Projekt ein, vor allem neue Führungskräfte oder der Projektleiter wird ausgewechselt und nun muss das ganze Team sich auf eine neue Art des Arbeitens einstellen bzw. den neuen Projektleiter einbinden. Also die organizational changes. ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266470,
      "meta": {},
      "text": "Changes in Software Development happen because changes happen in the social and technical environment we develop in.\nOne major change since the dawn of computing is the increase of available memory.\nThe guidance computer for the Apollo missions had about 4kB of read-writable memory. Nowadays \nmy home computer has 16GB. This allows software developers to focus much less on optimizing for every last byte of memory and instead allows them to use higher abstractions like Garbage Collection or vtables for Object Oriented Programming.\n\nThis is a technology change that is still ongoing.\nAnother technological change is the increasing number of cores available, allowing for\nhighly parallel and extremely fast programs for a plethora of use cases.\n\nWith time, not only our computers improved, but our social constructs and management as well.\nToday we use different project managing strategies, like Scrum, instead of more traditional top down management. This is an example of a major organizational change.\n\nLast but not least, the requirements of our customers evolved. With the widespread adoption of internet-connected mobile phones, our customers want applications that work on a multitude of devices and not just a Desktop PC or Mainframe. This constitutes a requirements change.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261456,
      "meta": {},
      "text": "Software development is constantly changing at a quick pace and that is due to many factors. One of the most important is the evolving technology. Whether it is the new Techniques or concepts that this field is living, technology has been expanding rapidly and especially in the tools used such as more integrated IDEs and new concepts like Machine Learning and Artificial Intelligence that were little known. Another factor is the emergence of new consumers and a high business demand and that is because a lot of companies are shifting their strategies to finding more digital -based solutions including AI and Cloud Computing. A real-world example is Nokia´s decline in mobile phone sales. The company had obvious difficulties staying in the market with the emergence of their competitors such as BlackBerry and apple. Poor strategic decisions and the lack of exposure to recent technologies had a negative impact.  \n\nRequirement change can happen during the project phase and the developers usually must adapt their plan. A concrete example would be healthcare and security regulations. The law makers can produce new regulations imposing certain Software requirements whether it´s data exchanges or more encryption. \nTechnological changes include keeping up with the new techniques and innovative ideas such as relying on AI or Augmented reality which are used in the Navigation sector. \nAn organizational change is usually a change in the roles between members working on a project or reassignment of their tasks. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262529,
      "meta": {},
      "text": "The change in software development happens if there is for example a new big technological milestone that has been reached, which everybody has to adapt to it to secure their position e.g. on a market or if there is a new demand for a field which has not been thought of exclusively. \nWe see that the changes in software development especially  during the - still ongoing - COVID crisis are essential and has a big impact for and on a society dependent on technologies. During the quarantine times, schools had to be closed and suddenly there was a high demand of online course providers or for meeting software. These software did exist before but they were not prepared to be hit by a mass since they were designed to be used in organizations or companies. Therefore there were requirements changes needed to satisfy this demand. All of the sudden, the infrastructure of such online meeting software were not sufficient for the demand, so the software development had to undergo requirements changes to realize this new demand, cope the new load and had missing features for non-commercial use, especially in communicational features and had trouble on some devices as these software were probably not optimized for universal use/every device. Like I said in the beginning of this assignment, in order for a software company to survive on the market, it has to adapt to new technological advancements. A known example is Nokia, which declined as a feature phone and later as a smartphone company as they didn't adapt their software and hardware to satisfy new demands(new form of hardware, limited software on Windows Phone, lack of updates on Android). To adapt to new technologies, the software development teams ideally have to reorganize themselves(organizational changes) to their new positions to overcome these new challenges and boost productivity and effectiveness.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262884,
      "meta": {},
      "text": "Because on one hand we do not have enough experiments and data, on the other hand the technology will be changing and we are trying to scramble and keep up and sometimes errors in descriptions or poor understanding of client’s requirements.\nE.g:Technology changed the ways of communication\n\nOrganizational changes are those that have a significant impact on the organization as a whole. \nE.g:Employees leave, and new employees are hired, new teams and departments are created.\nRequirements changes occur due to changes in user requirements, increased understanding of the stakeholders' needs, customer organizational re-structure, and availability of new technologies.\nA technological change is an increase in the efficiency of a product or process that results in an increase in output, without an increase in input. E.g: telephone\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263207,
      "meta": {},
      "text": "Engineers create and update software (= programs contributing to the functionality of a computer) based on consumer demand, laws, and more. Due to their complexity and frequent need for updating, softwares cannot be compared with factory-made (often final) goods in their development. For example, the online marketplace Amazon employs engineers to customize their websites according to the current time of year (e.g. Christmas, New Year, Diwali, etc.)\n\nRequirements changes imply feature enhancements like new/modified functionalities in a software product, e.g. new menu additions in MS Word to Microsoft as requested by users. Authorities imposing legal requirements (e.g. the EU’s Digital Services Act) could also lead to a change e.g. in finding more efficient ways to track disinformation and illegal content automatically.\n\nGenerally, technology changes and evolves due to financial incentives, conflicts, and human curiosity. For example, the popular mobile videogame Angry Birds was first released in 2009 for iOS and Maemo. Due to the great market success, the developers also created versions for other operating systems such as Android, which implies a change in development with regard to the initial focus on only two operating systems.\n\nOrganizational changes often occur due to the hiring and firing of (large numbers of) employees due to funding cuts, internal restructuring, and outsourcing. E.g. many American companies like Oracle have outsourced their software development to India since the 1990s. They hired many Indians and as a result, organized themselves more and more as an international company.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264848,
      "meta": {},
      "text": "Q. Why changes happen? \nAnswer: As the requirements of the client grows, we have to develop an agile software to response to the client's needs. To name the corona warn app as an example, scanning the QR code of a rapid test was added later on as per the new stricted regulations in its time.\n\nI am using the corona warn app as an example...\nRequirements changes: As the corona pandemic was new at the very begining, there were not enough functionaloties added to the corona warn app. So the basic requirements of the app were fullfilled, after time being, new wishes/funcionalities were required. Therefore the requirement changes comes into play as the app expand.\n\ntechnology changes: before react or angular dominates the front end development, there were numerous technologies to develop the physical interface of the softwares/applications... \nMain reasons for the technology changes might be the effectivness of the new technologies which are acompanied with several benifits. It could reduce the budget, take less time then old technologies, and they can be more agile and reliable.\n\nOrganizational changes: Changing the implemented technologies in our systems can challenge our organization. Or suddenly due to budget shortage, the team is required to bring the employee load to the minimum. This can overload the whole mangement and it requires agile new ways to stable the project process.\n\n  \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265049,
      "meta": {},
      "text": "Changes could be helpful for finding a solution for a complex problem which is not possible to lose with common tools. An example from the real world could be a need to change a schedule for the trains if a new train line is added. \nA requirement could change because of the importance of some elements of the project: something that looks more important at the beginning can lose the priority on the later development stage. With technology changes it could be needed to update an already working solution to adapt it for upcoming technologies such as blockchain technology or RPA. Organizational changes could be a change of the team which is working on the project  or a change of the separate team members.\n\n\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265564,
      "meta": {},
      "text": "With the world of technology evolving around us, The amount of Data being collected (e.g. by sensors, AI,...) and perceived are increasing exponentially, which brings us to the phrase Big Data. If the softwares being used to analyze these data  don't get updated and start evolving with the technology around them, the chunks of data won't be of any use if they don't get analyzed. This is an example that shows us the importance of changes in software development, that are needed to cope with this amount of available data and information. A real world example is amazon that uses Bigdata to provide product recommendations to its customers, by analyzing what products customers view, and in which order, so they can suggest these products to other customers with similar needs and by that improve their customer experience. \nThroughout a Project not everything goes as planned and many changes take place, e.g. requirement changes that occur due changes in users requirements, changes in stakeholders needs, or maybe the availability of new resources. Another change that may happen is a technology change. Technology changes happen due to development of existing technologies, or invention of new ones, which changes the market structures or creates new markets. Last but no least are organizational changes, which occur to company by changing major organizational structures, e.g. work hierarchy, used technologies or the company's infrastructure.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265902,
      "meta": {},
      "text": "There are different reasons for change in development software. For example, change in environment could be new legal constrictions or laws by the government. An excellent example for this is the EU and Facebook, Google and Co. There should be new regulations against monopoly formation.\n\nAlso possible are requirement changes, when e.g., the consumer or stakeholder have new needs. This can be seen in the automotive industry because more and more people want to drive e-cars and the big manufacturers therefore must develop and produce more of them.\n\nWhen some technology has been improved or invented it is called technology change. Nokia almost went bankrupt when the smartphone was invented and now Samsung uses new technology for foldable phones. If a company wants to stay competitive, they have to use the new opportunities.\n\nAnother challenge are organizational changes. This could be developing a new structure, a new and better database or to develop and use a website for e-commerce. A great example is Marvel, who had a very rough time before producing their own movies. Which this decision to change their structure, they made millions of dollars.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266090,
      "meta": {},
      "text": "Software development needs constant change as the system requires to be able to adapt to unexpected/new scenarios/requirements. Failure to do so might mean the failure of the project. A software cannot foresee everything from the getgo and trying to cover all possibilites would result in an inneficient system, this is why constant review and change is necessary.\n\nAn example for change in the real world would be a transition of software to support a new hardware platform (might be the better alternative). This would be considered an architectural change, affecting the overall structure of the software.\n\nREQUIREMENT CHANGES: These are the funcitonalities and features that are expected from users. A needed change in this area might arise for example, from a better understading on consumer wants, a change in the demand or the need to adapt to the introduction of a new technology\n\nTECHNOLOGY CHANGES: These relates to technolgical advances within the industry that software has to adapt in order to remain relevant and/or can take advantage of in order to make their system more efficent. Examples would be the increasing relliance on AI in things such as predictive analystics and the cotinuous growth of IoT.\n\nORGANIZATIONAL CHANGES: Involves the changes towards how resources are allocated, the used tools and the management of knowledge that are used for the development of software. A change in this area might come from for example a new appoach to management (i.e, agile management) or an increase in resource availability.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266156,
      "meta": {},
      "text": "Most software builds upon other technology. As the underlying technology (hardware or software) changes and gets better, the software built on top of it,  changes with it. A good example for that is web development. In the past, Java applets were very famous, but they have been entirely replaced by JavaScript and other technology nowadays. \nThis is also a good example of technology change, more efficient technologies evolved, so Java applets got obsolete and were replaced.\nAlso, the popularity and thereby the requirements for software driven technology are changing a lot. Ten years ago, it was ridiculous trying to pay with your phone at a shop, today everyone does it. In just a few years, the requirements changed a lot, nowadays, customers expect to be able to pay with their smartphone.\nLast, but not least, there is also a big change in the organization of software development. On one hand, the structure in companies changed from a waterfall-like organization to more agile solutions. And on the other hand, the structure of software itself changed from big, messy applications to technologies like microservices.\nSo, all in all, we can see big changes in many areas of software development over the past few years.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266276,
      "meta": {},
      "text": "Change in Software development is generally a consequence of changes in the environment that developers operate in, which then provoke the generation of new strategies and ideas on how to tackle problems. An example of this could be the foundation and spread of the internet, which, with platforms such as GitHub and Stack Overflow, allows for near limitless collaboration in software development projects, as well as the sharing of information, making software development far more approachable.\nTime also causes our requirements for software to change, for example as web-connected systems need to be engineered to handle many users interacting simultaneously, which was generally not necessary in the time before the internet. \nSimilarly, technological changes also influence the world of software development, as, for example, the creation of increasingly high-level programming languages and intuitive interfaces have opened the field up to lesser programming-specialised individuals, creating new areas such as Web-Design.\nNaturally, the organisation of software development also constantly changes, and Software development becomes more inter-connected and approachable, as developers can work more independently due to advanced IDEs, the internet and open communication. This means that organising a software development project has shifted from micro-managing developers to work on certain tasks a certain way to allowing them more creativity and freedom, only interfering to make sure the team can collaborate smoothly and is fulfilling the task correctly. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262429,
      "meta": {},
      "text": "Sometimes the context of the software development changes, for example the addition of new features.\n\nrequirements changes: \nthe purpose of the software product may change with the time and market.\ntechnology changes:\nthe team may decide to change to another programming language.\norganizational changes:\nthe team may absorb new members to take over the work of someone else.\n\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263036,
      "meta": {},
      "text": "Change happens all the time in software engineering and can have various forms. For example there could be an error in a program which needs fixing or a new revolutionary technology available which should be integrated in the project. Software engineering teams need to react quickly to outside influences or else they run at risk of creating a project which will be outdated at release or buggy and unusable. In the field of technology one can regularly see some companies falling behind their competition as they fail to react to changes. This happened to Motorola, HTC and LG in the smartphone market.\nAs most things in life, you can categorize changes. In software development there are three relevant categories:\nRequirement changes: Here the change occurs because of what users want. They might crave a new functionality in the software or are unhappy with old features. Also the development team might have gained a better understanding of their customers wants and needs.\nTechnology changes: This includes all changes in technology. There could be a new more efficient algorithm or a better processor. Maybe a bug is discovered in a piece of code which the team is using.\nOrganizational changes: This deals with changes within the company. Maybe a member of the team is leaving or there is a new boss or owner. Also, the company could change some of its infrastructure. For example, there could be a new development software or new company laptops.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263251,
      "meta": {},
      "text": "Software development has been constantly changing over the years with the increase of innovations and the change in our environment. Moreover, digitalization and globalization contribute in a more collaborative and effective working atmosphere. Now information and code is much more accessible to everyone around the world, thanks to the open source concept for example. \n\nBut not only is there a continuative change in software development over the years, but change can also happen during the process of developing. \nThis can especially be seen in the area of organizational change. The transition from the waterfall methodology to the agile one perfectly demonstrates it.  Before each task was completed linearly, whereas now reiteration and collaboration grows in in the working process.\n \nYou can also link this changing process to the requirement change. The circumstances and requirements change with the change in needs and expectations of the customer. Often this change happens during the developing process. In respect to the change over the years, quality of the  products need to be adapted to competitional companies for them to keep up in the global market.\n\nAnother major fact is the change in technology. Technology is continually developing to provide more efficiency for cheaper money. An example is cloud computing, which contributed to an massive improvement of the infrastructure. The access to software is now easier, cheaper and faster to people around the world, making software development much more facile. \n\nThus, one can say that change in software development is closely linked to the change in requirement, technology and organization.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263756,
      "meta": {},
      "text": "The technology always advances, so it becomes a struggle for the development to keep up while proceeding with the process.\nEspecially the field of software development has got to deal with change. The development of a reasonable outcome could last month, if not even years, while everything between technologies, market approach, or society could have a significant change in a matter of weeks, enough to have a huge impact on the process. \nFor example, if a hardware company would archive to develop a microprocessors technology with a significant change, all the other hardware companies that are in the middle of creating something not even half as outstanding are forced to immediately change their development to adjust to the newer technology.\n\nThe software development must adjust to requirement changes, technology changes and organizational changes.\nWhen an App-development company has to improve their interface because of a week user experience they have to apply requirement changes, respectively changes bound to user necessities, like availability or usability.\nAnd if the same company has to change their coding language because of a newer better one, they have to do technology changes, which are due to the technology innovation, on which every company has to adjust to stay competitive on the market.\nAnd if the CEO of this company decides to change a few employees’ roles, he is dealing with organizational changes, which are changes that have to do with the culture, infrastructure, employment or even company goals, and change the organization around the development.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264039,
      "meta": {},
      "text": "Software development is an ever-changing discipline, because of many factors. \n\nFirstly, the requirements for software change quickly based on the needs of the end-user. Sometimes the software needs to run seamlessly and take up little storage space on a small device, while at other times it needs to use every bit of the hardware it can on stronger machines, to compute complex things.\n\nAnother way in which the requirements for software change is when the technology and standards around that piece of software change, leading me to the next point: Technology changes. \n\nTechnology changes impact software, because it changes the way software needs to interact with hardware. For example, an increase in mobile phone RAM expands the possibilities for apps that can be run on those devices. Also, if new software technologies/tools are released, they also impact the way we develop code. There's no need to use Java Swing for a modern desktop application, because there are far better technologies for that nowadays. \n\nTools like that increase the productivity of software developers, which in turn changes the way that software developers need to be organized, leading to the next point, organizational changes.\n\nOrganizational changes occur when the market of software, and software developers shifts. Like I mentioned earlier, increased productivity of each developer means that fewer developers are needed, or that more complex software can be built. This, in turn, needs to be accounted for and managed by the people responsible for the software. Outside factors can also impact the organization around software development, like we've seen with the pandemic and working from home, which is actually well suited for programmers.\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264128,
      "meta": {},
      "text": "Change happens in software development because in the real world there are new regulations or demands being announced, or the technology has been improved, thus to follow up and to maintain the best function of the software there must be changes being adjusted. An example of change in the real world could be that after Twitter being bought by Elon Musk,the verification of user authenticity may be altered.\nRequirement changes mean that requirements from the buyer, the marketing department or project manager have been updated. For example the research department finds through the data that a function is not being used and wants to replace it with another function. \nTechnology changes mean that the platform, hardware, development tools or environment on which the software relies has changed. For example, if you are using a library that no longer has public access, you will need to find a replacement or write it up yourself.\nOrganizational changes mean that the division of labour or the due date within the development team has changed, so it is necessary to reorganise everyone's tasks. For example due to some trigger it is decided to implement another function at first while the task at hand has to be stopped and rescheduled.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265922,
      "meta": {},
      "text": "Es gibt viele Gründe warum Software Development sich verändert. Ein Grund dafür können mangelhafte Anforderungen oder ein schlechter Entwicklungsprozess sein. Dies resultiert in defekte, falsche oder sogar fehlende Punkte im Software Development sein, die dann sich im Prozess durch weitere Kosten und einer verspäterten Deadline zeigen. \nImplizit zeigt sich dadurch ein weiterer Grund für Veränderung in Software Development: Probleme zeigen sich nicht direkt. Dadurch dass sich Probleme nicht direkt zeigen, kann die Problembehebung auch erst später angefangen werden. Diese plötzliche und unvorhergesehene Probleme resultieren in Veränderung im ganzen Prozess von Software Development und des Teams. \nDes öfteren kann es passieren, dass sich die Anforderung und die Grundbedürfnisse an sich ändern. Zeigen sich diese während des Software Development Prozesses, bedeutet das, dass man den ganzen Prozess, die Planung und die Bearbeitung neu überdenken muss und im Worst Case sogar komplett neustarten muss.\nBeispielsweise der Autoindustrie. Durch die vielen Gründe von Veränderung ist die Anforderung für elektrische Autos größer geworden und dadurch auch die Software innerhalb der Autos. \n\nDie Veränderung von Anforderungen bedeutet dass sich Menschen verändern und dadurch auch ihre Denkweise und Anforderungen. Zurzeit zeigt sich dies im Themenbereich des Klimawandeln. Dieser Bereich ist vor allem bei der Jugend ein wichtiges Thema. Dadurch dass die Jugend immer mehr gegen den Klimawandel kämpft verändern sich auch ihre Anforderungen, wie zum Beispiel die wachsende Nachfrage von nachhaltigen Produkten.\nDie technologische Veränderung zeigt sich durch den anhaltenden technologischen Fortschritt. Von Maschinen wie der Turingmaschine bis hin zu Super- oder Quantencomputer lassen sich immer komplexere und größere Probleme lösen.\nDie organisatorische Veränderung ist die der Ansatz zur systematischen Problemlösung für die allgemeine Veränderung.  Das Ziel ist neue Strategien zu implementieren um die Veränderung zu kontrollieren und die Menschen daran anzupassen. Beispielsweise Werbung. Von damaligen Anzeigen auf Papier oder Zeitungen, zeigen sich Werbungen sich hauptsächlich digital. Dieser Umstieg benötigt die organisatorische Veränderung.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266036,
      "meta": {},
      "text": "In real life, there are three groups of people involved in software developing. The customer, the development team and the user. The customer, who set up new requirements while developing softwares  lead to changes in software developing. The development team get new ideas and new technology which can improve the software developing. The user meet new problems while using the software also lead to changes. \nFor example, a company ask a development team to develop a new software which help the company , analyze the company's profit. While developing  the company also wants to analyze the loss of the company, this is requiments change. The develop team get a new deta analyzing model which can analyze the deta more quickly, this is technology change. When the accountant of the company use the software, he thinks that the software is not intuitive enough to account the profit and the loss and want the develop team to improve the software, this is organize change.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266267,
      "meta": {},
      "text": "Change in requirement is one of the first reasons for change that comes to mind.For example in the early days a computer with 5MB of memory was seen as outstanding and would cost thousands of dollars whereas now those same 5MB are almost negligible.The second reason is the change in environment:In the early days as well computers took whole rooms for themselves and this is not doable nowadays as we are always aiming to reduce the sizes of our laptops computers phones etc...The third reason are the bugs and problem we encounter when using our softwares that push us to come up with innovative techniques to fix them and prevent them from happening in the future.Another reason is security , cyber security.We are constantly hearing about cookies and new functionalities and data-invading apps that are slowly taking control of our lives and this has made us look to develop our softwares so that they prevent this from happening.The last reason, are simply features because without adding new features a software will become obsolete in no time.\nAs for the requirement change, i already mentioned it with an exemple of how time changed how we look into what´s required from a computer for exemple.\nIn terms of technological change, I think a good example that might explain this is quantum computers which are a \"new\" technology that we intend to use in order to reach new limits that we once thought were indeed limits and impossible.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266368,
      "meta": {},
      "text": "Just like in many other fields, there are lots of changes in software development. There are numerous different reasons for that. For example, you have to adapt to the needs of your customers. If their desires change for some reason, you have to adapt to it and change your software accordingly in order to satisfy your customers. Another reason is the release of new technology. If theres's a new technology that can help you improve your software or that can help you develope much more efficient, you should probably use it, so your project becomes more efficient. A good example is the car industry. Software development in this area was rather simple till now. But with the idea of self driving cars, artificial intelligence was brought into the software development of this area, which meant a very big change.\nYou can differantiate between 3 types of requirement changes:\nI just mentioned an example for technology changes above. You can use new technology like artificial intelligence in areas like the car industry or you can even change your homes into smart homes.\nOrganizational changes are also very common in software development. Projects are often very big and go on for many years. It is normal that the team of developers change during that long time period which often results in organizational changes, for example when the new boss wants to introduce a new strategy or a new system.\nYou can see requirements changes in social media for example. You want to give the users a personalized experience on your platform. That's why you have to develope certain algorithms additionally. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264125,
      "meta": {},
      "text": "The change always happen in software development because in technology we have always to update the programs to reduce their errors to make them more performant and easier to use for the user.\nFoe example the operating system Windows which gets updated every year.\nRequirement changes consist normally in reducing the errors of the programs \nTechnology changes consist normally in making the programs more consistent and performant\nOrganizational changes consist normally in making the programs easier for the user to use by using the minimum clicks for doing the transaction ",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1264206,
      "meta": {},
      "text": "If you define software development as an empirical process, meaning the process of development is agile and doesn’t follow predetermined steps, change will definitively occur. This is due to the fact, that every project is different and during the process of development, the team realizes other functions must be added / edited and therefore the software development process must be adapted.\nAn example of this would be the new “Universal Control” function for Apple devices, where the mouse and keyboard can be cross functional used between iPad and Mac. While developing the idea might have arisen to also drag and drop files between the devices and therefore the software development process had to change.\n\n\nRequirement changes: Requirement changes means that in case the Scrum cycle is being used, the Product backlog changes. In other words, this means the for example the customer wishes to change the product in a way that require the process to be adapted to the new standard. \n\nTechnology changes: The development team must always take into consideration which technology to use for a project and overtime the technology oftentimes improves or for instance a new programming language appears, which might offer some great benefits and because of this the team decides to change the technology to the new standard.\n\nOrganizational changes: Organizational changes occur for instance, when the team changes and a few developers leave the team. This means that the initial plan must be adapted, and the task will be redistributed.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264625,
      "meta": {},
      "text": "The real world changes all the time, and with that the process and requirements change. New technology is created, laws are changed and the market adapts to the societies demands. To keep up with theses challenges, software development teams must constantly adapt to these new standards. As an example, new data privacy laws force companies to build more secure apps.\n\nRequirement changes are the adapting wishes of the customer, who defines what the program is supposed to to. These requirements are usually grounded in the real world, for example real world challenges (like car sharing...).\nTechnology changes are new developments in the technical and science field, like better or new hardware (new consoles...) or new software that can be used for development (new programming languages, version control...).\nOrganizational changes are changes within the companies hierarchy. This can improve communication and teamwork, but can also create new unforeseen challenges.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264686,
      "meta": {},
      "text": "Veränderungen in der Software Entwicklung entstehen vor allem dann wenn die Ansprüche an ein Produkt sich während der Entwicklung verändern. Dies kann dadurch entstehen, dass der Produktbesitzer neue Ideen zu seinem gewünschten Produkt hinzufügt oder den Fokus seines Produkts wechselt, aber auch durch äußere Einflüsse, wie verbesserte Technologien oder durch die Konkurrenz auf dem Markt.\nDie ist zum Beispiel in der Handyindustrie der Fall. Da es mehrere Handyhersteller gibt (Samsung, Apple,...) möchten diese immer das beste Handy herstellen. Dies führt dazu, dass selbst während der Entwicklung eines neuen Handys neue Anforderungen an dieses dazu kommen, da der Konkurrent seine neuen Features vorstellt und man dort mitziehen möchte. \nDaher kann man die Veränderungen in 3 Kategorien einordnen, Veränderungen an Bedarf, Technologie und Organisation. Eine Veränderung im Bedarf können zum Beispiel eine Erhöhung/Erniedrigung des Budgets oder der zur Verfügung stehenden Ressourcen. Dies kann zum Beispiel durch Preisschwankungen der Ressourcen entstehen, oder werden teurere Geräte benötigt um das Produkt Marktfähig zu machen. Eine Veränderung in der Technologie kann zum Beispiel ein die Entstehung eines neuen Prozessors, besseren Akkus oder einer neuen Kamera sein, aber auch die Entwicklung eines neuen, effizienteren Algorithmus/Software. Veränderungen in der Organisation entstehen zum Beispiel durch Ausfall im Personal, vor allem bei Führungspositionen, kann dies zu Problemen führen. \nDa dies in der heutigen Zeit alles sehr schnell passieren kann, ist die agile Softwareentwicklung sehr viel weiter verbreitet, da diese mit den Veränderungen besser klar kommt.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265276,
      "meta": {},
      "text": "Change in software development happens because we live in a fast moving world where everything changes on a daily basis and software development has to stay on top of it or the software will be outdated quite fast. For example the pandemic changed a lot for everyone in their everyday life and software needed to adapt. But also smaller changes have an impact.\n\nRequirement changes are when the software needs to be changed because the requirements changed. For example when booking a table at a restaurant you had to put in your vacination status. The need for that function came with the pandemic and software had to be changed.\n\nA technology change is when the software needs to be adapted because the system it is supossed to run on changed. For example when Windows 11 came out and now for games to run as well as on the old version they need to be updated.\n\nOrganizational changes happen when the software development process needs to be changed due to organizational matters. For example when the number of developers lessens and the remaining need to change certain functions to be finished on time or push back the release date to implement all functions.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265999,
      "meta": {},
      "text": "Change happens in software development because the key principe of software engineering ist problem solving.  The problems to be solved are changing all the time.\nAn example for change in the real world: The convenience in the society today is more and more important. But at a very beginning stage of software development, functions are more important than convenience because the limitation of the technic. \n\nrequirements changes:\nRequirements are more based on the needs of customers than the developer self. For example, the customers accepted the products wich are designed by software engineers passively before. \nBut customers today have strong opinions about the products. The requirements and the feedbacks from customers today are crucial for the success of the product which are developed by the software engineers.\n\ntechnology changes:\nThe relationship between software development and new technologies just like Artificial Intelligence, Big Data,5G and so on are more and more close.\n\norganizational changes:\neg.,Agile software development plays a more and more important role today.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266529,
      "meta": {},
      "text": "Because the system/hardware is getting faster, that means if there is a new technology it brings also new possibilities for software which were before impossible. Furthermore the law also can change and give some new limits which weren't there before or they loosen some laws. It would be also possible that someone has another idea for a software or wants to make it compatible with another software.\nFor example the \"Data Protection Regulation Europe\" is one reason why software had to change.\n\nRequirement change means, that something just changed for any reason, and now the software has to be usable also with the new changes, because of this the software has to be customized.\n\nTechnology change every two years the processors are getting a lot faster than before, so the technology changed and there are new possibilities for software which took before just to long, may now only take a couple of minutes. \n\nOrganizational change can be the law or in a company it also could be the time, money and persons you get to work at one software, if we get less time for a software project most times it won't be as good as when we would get more time, more people or more money for a project, these are all organizational changes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261933,
      "meta": {},
      "text": "It is likely, that a customer, for instance a production manager, changes the requirements of the product he wants to be delivered by the company. For instance, a beverage market purchases a new filling, however this product is built by a different company. To install the filling line into the conveyer belt the existing code, which was implemented by a certain software company has to change. In this situation the customer conveys the new requirements of the software to the team, which then has to implement changes.\n\nThe requirements for software systems are constantly changing as new hardware could be introduced or updated. Therefore it is, just like in the example above, necessary to update the software.\n\nIn the area of organizational changes it could be possible that the team notices that the project is too huge to be finished by themselves. In such situations it might be possible that this team gets help by 2 or 3 other people working in this software company. Therefore they might have to think about their structure of the team again and how it might be possible to achieve a higher productivity within the team. For instance, one of these additional people could be the born scrum master and that's why the team changes to another scrum master.\n\nIn the last few years the quality of sensors has increased by a lot. That's why companies such as Tesla use these sensors in their cars to make it safer. They might add a camera/ sensor in the back of the car. Having the new data of this sensor, they have to change their software as it would be senseless to install a new sensor in the car without using the data it produces.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261985,
      "meta": {},
      "text": "Software development is not predictable. It is about solving the problem that is not solved and making something that have not existed. Accomplishing such tasks is highly complex and requires creativity. Therefore it is nearly impossible to plan the whole process of the development before go through it. We will keep facing the expected issues and changing the plan. Even if we made it, we should change our plan if the users gave negative feedbacks. We have to repeat this process of planning, discussing, developing and reviewing. To handle the complexity we should be empirical and make changes all the time. It is just like escaping the jungle that we never been. We can make a plan to make a fire, but what if it starts to rain? We can determine the direction to go, but what if we face a cliff? We must keep changing our plans and improvise.\n\nAlso, we have to deal with other changes, such as requirements changes, technology changes, and organizational changes. Environments around the software and the team always can be changed in the unpredictable way. For example, the privacy policy about website tracking has been strengthened recently. This can cause the requirements changes, such as adding a popup to ask acceptance about the cookie policy. Fast-evolving technology is also the thing that we should handle with. After the appearance of the smart phone, users started to take interactivity of the website important as the touch screen became new interface instead of keyboards and mouses. Since we should take agile, empirical approaches to make a software, size of the team could be small and each members would have specialized role. Therefore we should handle the organizational changes such as off and on-boarding carefully.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262500,
      "meta": {},
      "text": "Unlike in many other industries software development is not a predictable process. The agile approach is needed to react to changes during development.\nAn example would be if a customer demands new or different features even though development has already started. This is also an example for requirements change.\n\nAn example for technology change might be the rapid development of faster hardware which can handle more complex software with more features.\n\nOrganizational changes could be needed due to more international and diversified teams which emerged in the past years. Remote-work for example can be seen as organizational change.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1262896,
      "meta": {},
      "text": "Software development is a production of a specific software with a limited budget and time. During the developing period, everything can change. For example, user requirements, technology, even the budget and development time period can all suddenly change. Besides, inappropriate development management process can also lead to change. For example, the development didn't define the requirements at the beginning properly. Or they ignored some important requirements. Then the developers might need to go back to the beginning stage to redo everything \n\n\nRequirements changes: Customers change their minds so often so that the requirements for software can change all the time. For example, when developer are developing a website, the customers keep coming up new ideas about the design and display of the website. Then the front end team might need to make some adjustments.\n\nTechnology changes:  Technology changes so fast that it might influence the product development. For example, Apple release new iPhone every year. They change the size and the display of the screen a little bit sometimes. Then some applications should also be adjusted so that they are still user friendly.\n\nOrganizational changes: for example, when coronavirus just exploded two years ago, we suddenly changed onsite working to remote working, which certainly had an impact on communication, coordination among team members und further influenced the software development process.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263241,
      "meta": {},
      "text": "As our environment is constantly changing software developments is changing as well. Furthermore societies requiremtns change over time and software needs then to meet those requirements. Despite that new technologies are constantly developed and so is software development undergoing a constant change. A quite good example for change is that at the beginning of the digital age most software was developed for a PC but when smartphone and tablets were more and more used software needed to be developed for those handheld devices with different requirements than a \"desktop version\".\n\n>requirements change\nA university wants to develop an application where the students can see there timetable. The students then require also to add a roomfinder an the canteen menu to the application. Requirements change is the change in the needs of the users. It is a constant process througout a software development process. \n\n>technology change\nInstead of having call center staff more and more companies use AI for basic problem solving via telephone or chatboots. This happened and is happening as AI technology is constantly getting better and is cheaper than paying actual humans.\n\n>organizational change\nWhereas most organization were very hirarchical organized. Meaning there is an executive maybe different with management levels but there is a straight line of command and reporting. However more and more companies use agile working methods and come up with flatter management structures.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264751,
      "meta": {},
      "text": "Durch den freien Markt und die Globalisierung gibt es sehr viel Angebot und Nachfrage nach Produkten, die Software benötigen. Diese Software ist jedoch selten in einem finalen Zustand, da immer wieder neue Anforderungen durch neue Umstände in der Welt entstehen. Damit eine Firma oder ein Team also Wettbewerbsfähig bleiben kann, müssen sie sich der ständigen Veränderung anpassen. \n\nEin Beispiel für die schlechte Ausführung dieser Strategie ist die Firma Nokia, die Marktführer für Tastenhandys war. Da sie sich weiterhin auf das altbewehrte verlassen haben, wurden sie kurzerhand von der neuen Innovation Smartphone abgehängt. Jetzt spielt Nokia kaum noch eine Rolle, da das Unternehmen nicht mit den neusten Entwicklungen mitgegangen ist.\n\nBei Veränderung unterscheidet man aber nun noch unter drei Fällen.\n\nDer erste Fall - requirement changes - besteht aus alltäglichen Änderungen durch Nutzer- oder Kundenbedürfnisse. Dabei muss der Softwaretechniker nach besserer Auseinandersetzung mit dem Stakeholder oder seinem Kunden die Software auf diese optimieren. Ein Beispiel hierfür wäre eine Handybankapp, die nach Rückmeldungen von Kunden übersichtlicher gemacht wird, indem eine Suchfunktion für Abbuchungen hinzugefügt wird.\n\nEin anderer Fall, die sogenannten technology changes, wurde schon im Nokiafall gut beschrieben. Eine neue Technologie kommt heraus und diese benötigt nun entweder neue Software an sich oder Änderungen, um alte Programme auch auf neuer Technik laufen zu lassen. Es bedeutet aber auch Änderungen wie neue Erkenntnisse in der Künstlichen Intelligenz, die ganz neue Möglichkeiten oder effizientere Wege bieten.\n\nOrganizational changes wiederum entstehen firmenintern. Zum Beispiel, wenn die Führung des Unternehmens, die Teamzusammensetzung oder das Businessmodel des Unternehmens geändert werden. Dadurch müssen eventuell elementare Herangehensweisen wie Codestyle geändert werden, da der neue Chef mehr Wert auf übersichtlichen und adaptierbaren code legt.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265136,
      "meta": {},
      "text": "Change happens because every time something new comes and we have ta adjust the software product to those news for eg: After the covid apple updated the faceId and added the option to recognize the face with the mask.\nRequirement changes when the customer require something else.\nTechnology changes when the software is no more suitable for utilisities.\nOrganaizational change is for eg when the nomber of people in a team changes.\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265144,
      "meta": {},
      "text": "In der heutigen Welt sind Veränderungen unvermeidbar. Andauernd ändern sich Umgebung, Anforderungen und Ziele. Auch im Bereich der Softwareentwicklung muss man sich an stängig neue Begebenheiten anpassen. In der Softwareentwicklung spielen hier vor allem Änderungen bzgl. Anforderungen, Technologie und Organisation eine große Rolle. \nEin Beispiel für eine Veränderung in der realen Welt sind neue gesetzliche Rahmenbedingungen. Falls die Regierung neue Gesetze verabschiedet, muss sich auch ein Unternehmen, welches in der Softwareentwicklung tätig ist, diesen Gesetzen anpassen.\n\nÄnderung der Anforderungen:\nÄnderungen bzgl. der Anforderungen sind unvermeidlich. Diese können beispielsweise auftreten, falls sich die Vorstellungen des Kunden oder die Benutzeranforderungen ändern. Auch ein besseres Verständnis der Bedürfnisse der Beteiligten kann zu einer Änderung der Anforderungen führen.\nEin Beispiel hierfür ist zum Beispiel die Erstellung einer Software für eine online Messe. Falls am Anfang mit weniger Interesse gerechnet wurde und somit die Personenzahl in einem Meeting beispielsweise auf 200 Personen beschränkt war, nun aber doch weitaus mehr Interesse besteht, müssen Veränderungen in der Software stattfinden. Hierbei findet eine Änderung der Anforderungen statt, da die Plattform nun für mehr Personen zugänglich sein muss.\n\nTechnologiebedingte Änderungen:\nIn der heutigen Zeit gibt es ständig technologiebedingte Neuerungen und Änderungen. \nFür einen IPhone User gibt es beispielsweise alle paar Wochen oder Monate neue Updates und damit neue Softwares, die neue Funktionen und Änderungen mit sich bringen. \n\nOrganisatorische Änderungen:\nBei einer organisatorischen Änderung können sich die Struktur oder auch die Kultur eines Unternehmens verändern.\nEin organisatorischer Wandel kann beispielsweise durch eine Veränderung des Wettbewerbs, der Marktchancen oder aber auch durch einen Fortschritt innerhalb des Unternehmens stattfinden. Personalabbau oder eine Fusion von Unternehmen sind aber auch Beispiele für eine Veränderung.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265213,
      "meta": {},
      "text": "Changes in software development are needed to evolve products, fix bugs, and adapt to users needs.\nSuch changes can be seen not only in man-made inventions such as the cell phone (com keys to touch) but also in the flora and fauna. Plants and animals evolve over the years to survive in nature i.e. they adapt to their new environment (problem solving).\n\nAt the beginning of a project you have certain requirements that you should meet. However, these can change over time. Eg you should program the website of a restaurant where at first you only see the menu with pictures and after a while you should add the function of ordering online. These are requirements changes.\n\nTechnology changes are changes to current technology. When a new achievement is invented, one has to astimate: whether the change is needed to improve the product, the needs of the customer changes, etc. For example, the cell phone needed to be changed from a button to a touch cell phone, otherwise our company wouldn't have sold cell phones anymore (like Nokia). A counter-example is the kettle, here the customer does not need much, which is why not much has changed since 30.\n\nOrganizational changes are all changes that have to do with the organization/management of the project, e.g. changes in financial resources. If you have more money available you can hire additional people to improve the product.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266154,
      "meta": {},
      "text": "Gründe für Softwareentwicklung: \n\n- Ein erfolgreiches Unternehmen muss immer im Markt mithalten können. Werden beispielsweise Fehler entdeckt, so müssen sie behoben werden. Man muss sich immer weiterentwickeln, um im Wettbewerb mithalten zu können. \n\n- Manchmal ist man gezwungen Projekte zu unterbrechen, da sich Dinge unerwartet ändern. \n=> Automatisch folgt: Veränderung der Software\n\nGenaues Beispiel: Website/App-Entwickeln\n\nAnforderung: \n- die Kunden wünschen sich die Bequemlichkeit und suchen sich deshalb nur noch Onlineshops aus.\n \n Vor allem in der Corana Krise; \n- der Laden in perfekter Lage bringt nichts mehr; es wird dringend eine Plattform benötigt; folgt man nicht diesen Anforderungen so wechseln sie zur Konkurrenz\n\nTechnologie: \n- dieser Schritt sorgt dafür, dass der IT Bereich des Unternehmens stark wächst (wenn nicht sogar erst wirklich entsteht) man kümmert sich mehr um Techniker und Website Designer und investiert in dieser Branche viel mehr als jemals zuvor;\n \n\n- statt im Laden aktiv zu arbeiten sitzt man als Mitarbeiter hinter dem Computer und kümmert sich um die  Rezession, Wünsche und Kaufabwicklung der Kunden\n\nOrganisation: \n- dies hat zur Folge, dass einiges in der Mitarbeiter Welt und Management sich verändert.\n\n\n Man geht nicht mer nach Plan vor. Viele werden entlassen beziehungsweise deren Job ändert sich: Kassierer zum Beispiel werden nicht mehr benötigt, denn das alles läuft automatisch ab. \n\n- \"Einsortierer\" dagegen befüllen nicht mehr Regale, sondern packen die Bestellungen in Kartons. Dies war man vor der Pandemie nicht gewohnt und aus diesem Grund verändert sich die Organisation um 180 Grad \n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266158,
      "meta": {},
      "text": "Change happens in software development because every technology, product, and regulation we have is developing day by day. We can say change of programming languages as an example. New programming languages may make more efficient solutions for some software applications or projects according to their simplicity and ease of use. The General Data Protection Regulation (GDPR) led to changes in software development.\nRequirements changes: changes happening in the requirements of a model. government regulations or needs of the customers are examples of requirement changes.\nTechnology changes: new technologies may lead the change in software development. Development in hardware technologies, big data, and artificial intelligence may be examples.\nOrganizational changes: the structure of organizations is also changing and it leads to changes in software development too. Agile working is one example of this change and with this change, software development teams became more efficient.\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266210,
      "meta": {},
      "text": "Changes in software development may come from many different aspects. As in any other field in SW Dev there are many players and components interacting with each other, which can make the whole process very complex and a small shift in one component can lead to a change in the bigger scope.\n\nAn example of a change in the real world would be a shift from 3G to 4G and 5G and with it also a change in technology.\n\nRequirements changes: the changes in the initial requirement of the product, can come from customers changing needs, bad communication with clients or misunderstanding of the problem in the beginning. Or the changes can come from the changes in the environment.  For example, developing an SW for a customer, whose targeted audience changed its needs (could be a travel agency and start of the pandemic. )\n\nTechnology Changes: needed changes in the technology and tools being used. Again the emergence of 4G and 5G caused the changes and the need for the adoption of other technologies in order to be able to have the connectivity. \n\nOrganization Changes: Changes coming from the management within the company. For example, change the company structure to a more agile one and therefore implement more agile methods like Scrum, and more tools for agile project management. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266214,
      "meta": {},
      "text": "Software development is an ever-changing, advancing sphere. It is not a simple profession with rules set in stone, but rather a dynamic system with many aspects. Therefore, software engineers have to be lifelong students, always open to learning and adapting to new things. \n\nAn example for change in software development in the real world would be the adaptation of web browsers to smart phones and tablets to be used mobile.\n\nThere are three main areas of change in software development: requirements, technology and organizational. \n\nRequirement changes are the necessary adjustments of a project that stem from various reasons, both external and internal factors, such as the shift in a customer's demands due to technological or economical reasons, having to work with specific programming languages or architectures because of company policies.\nAs aforementioned at the beginning, software development is a dynamic system that makes companies compete in an open market against rival companies. Consequently, there are some requirements every developer team needs to make sure that their project meets. This could also be budget or time, which will be further mentioned in organizational changes.\n\nThe second kind, technological changes, as the name suggests, arise from technological advancements. Software developers have to adapt to the changes in IDEs, programming languages, new hardwares or new libraries that will facilitate their job, otherwise they are bound to be out of their profession in to time.\n\nThe last area, organizational changes, are due to internal reasons in a company. A big company might have many teams of software developers working on different projects. As a result, they have to distribute their budget and their teams’ time carefully in order not to fall behind their competitors. On top of that, a team working on a project consists of people with different domains, e.g. programmers, analysts, testers. In a dynamic business environment, co-workers might be replaced and deviations in a project are therefore inevitable.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266291,
      "meta": {},
      "text": "One of the reasons why change happens in software development is the need to adapt to the requirements  set by either the mangment team or even to bring new Stakeholders so that the product matches the market more . \nFor example more and more companies are introducing the AI technology to there softaware b to attract more buyers . \nrequirements changes : the change in requirements is usually done due to a poorly done requirements  or overlooked ones such as checking the quality of the software  and if it achieves the goals set .\ntechnology changes : as mentioned before taking the path of digitalisation and automatisation plays an important role in the final product so more and more companies are changing their policy for a better production \norganizational changes : it occurs when the current team isn't performing as expected so a change in the the organisation of the team will lead to an improvement in the coordination between the members\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261196,
      "meta": {},
      "text": "If we talk about changes in software development, then most often this is an improvement. For example, On-Premise to Cloud Computing. Cloud computing has made it possible for us to transfer our data to virtual servers and has made life much easier. Today, a huge number of companies have switched to cloud storage, for example, Netflix, a company that used to sell DVDs, is now the most popular subscription streaming service.\nOne area of change is changing requirements. There are many reasons for them, some we can control, others we can't. For example, poorly defined requirements at the beginning of the project, poor communication skills with the client, or the most trivial - clients constantly change their minds - they do not know what they want.\nAnother area is technological change. Thanks to these changes, things that previously seemed difficult are now easily achievable. Examples of such changes are phones, computers and cars.\nAnd the third area is organizational. The most important aspect in software development is organization. Building a plan, separating responsibilities are components of the successful implementation of the project. An example is The Waterfall Model, where tasks are generally handled in a more linear process. This method greatly complicated the process of unexpected changes, and did not often lead to success. A change followed - Agile, an iterative methodology, is divided into several smaller components that are developed gradually. This has made software development much more robust, adaptable and efficient.\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262313,
      "meta": {},
      "text": "Simply put, because the the world evolves. In order to be able to compete in a globalized society, you constantly have to improve and find the best solution for your specific situation. As the software development environment changes, software development has to do the same.\n\nRequirements changes:\nThe world has ever changing needs, therefore the requirements the software has to fulfill are developing too. An example is the need for more energy efficient programs, in order to achieve a carbon neutral society. \n\nTechnology changes:\nSmart people work in the hardware development :), so the technology software needs and uses is improving and changing. Just look at Moore's law. As we discover new technologies like fingerprint sensors or face ID scanners, they need to be implemented by software. Otherwise they would remain useless.\n\nOrganizational changes:\nDuring software development a lot can happen to the organizational side. Especially when the project spans over a prolonged period of time. For example the developing company needs to restructure itself or the client changes. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262670,
      "meta": {},
      "text": "Change happens because problems in the real world seldom offer themselves to static, rigid approaches to constructing solutions. Knowledge of a problem is imperfect initially and new information will be gained about the problem as well as about how well a pursued solution works when implementing possible solutions.\n\nAn example case of such change would be when developing an application for a client where based on the initially collected and defined requirements, a first prototype will be created, on which the client will then surely have new thoughts to be implemented that they weren't aware of exactly in the beginning. On the development side, different technologies perhaps thought to be optimal for solving specific requirements might turn out to be more cumbersome to implement than expected, necessitating code or even architecture changes.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264213,
      "meta": {},
      "text": "Weil sich die Softwareentwicklung über einen längeren Zeitraum streckt und sich Gegebenheiten ändern können.\nBeispiel: Antriebentwicklung in der Automobilwelt kürzen teilweise laufende Entwicklungen im Bereich , um sich verstärkt auf Elektromotore zu fokussieren. Dadurch werden Ressourcen von laufenden Projekten umverteilt.\n\nAnforderungsänderungen: Kunde hat eigene Einflüsse und ändert seine Meinung bzw. Anforderungen an ein Produkt\nTechnologieveränderungen: Die Technologie von heute kann morgen schon als veraltet gelten und dementsprechend irrelevant werden. Abhilfe schafft dabei eine Adaption an die neue Technologie\nOrganisationsveränderungen: Entscheidende Projektmitarbeiter können in Ruhestand gehen, den Betrieb verlassen oder eine neue Stelle außerhalb des Projektes antreten",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1265245,
      "meta": {},
      "text": "By definition, change in the software development, is the transition from an existing state of a software product to an improved one. It is the process of identifying and then working on the implementation of software changes. The fact that technology around us is constantly advancing and changing, leads to software development changing too, as it influences most of it. \nAn example for change in the real world would be, the increasing capacity of computers over the years. Each new computer software is stronger and more powerful than the last because they need to be performing with regards to the newest technology.\n\nRequirement change: is when change occurs due user requirement, such as new wishes or needs of users. An example is Apple's iPhone which has had an increasing size over the last few years. Due to their customer's need for a smaller phone, they have been launching a smaller version of the iPhone the last two years now.\n\nTechnology change: is change management that identifies new technology and then implements it for the purpose of improved profitability and productivity. It increases the efficiency of a product process that results in an increase in output, without an increase in input. An example is Apple's iPod which is now one of the giants in the music industry but wasn't when they first entered.\n\nOrganizational change: refers to the actions in which a company or business changes a major component of its organization. An example is a shop going from little local shop to an e-commerce.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266353,
      "meta": {},
      "text": "There are multiple reasons for changes in software development, largely related to the underlying process analysing a problem statement to develop solution requirements, based on which system and objects are designed, to implement a solution. However, when a problem statement is first tackled, it can be the case that carved out requirements were wrong or need to be adjusted. Changes can result from failing to capture requirements or hidden assumptions between business analysts and developers leading to missing information. Also timing plays a role, as changing externalities such as market developments or consumer needs may result in changed requirements as well, such as the ongoing digitisation which forces business owners to integrate online retailing via marketplaces. While the system of an analog book seller suited all present requirements before, integrating online selling will create the need for the software to be adjusted to reflect the number of online purchases, their status and the resulting stock left. \nRequirement changes refer to changing demands which need to be covered by the developed software, as evident from the example above. \nTechnology changes relate to changes in the overall technology landscape which force a software to be adapted as well, be it the integration of additional security measures through blockchain or the use of emerging tech such as AI and ML.\nOrganisational Changes relate to shifts in the structure of demands of a firm, such as the example described for question 1 - the overall business model changed, therefore forcing tools to be adapted. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261335,
      "meta": {},
      "text": "When creating software, it is difficult to foresee its organization and requirements in the future. As the business that is running the software changes, new requirements emerge and previous requirements alter. To rectify mistakes discovered in operation, increase performance, or improve other non-functional qualities, parts of the software may need to be updated. All of this means that software systems will continue to evolve after they have been delivered in response to changing demands. Especially now, when technology forces the software sector to evolve and alter on a regular basis. A program that is used in a real-world setting must change or become less helpful in that environment as time passes.\n\nAs an example we could consider Microsoft Word, that has been transformed from a simple work processor which operated in 256K of memory to a gigantic, feature-laden system. It now needs many megabytes of memory and a fast processor to operate. Obviously, the developing team had to make huge modifications \n\nHowever, there are many possibilities why transformations in software development may occur. \nFirst, requirements changes, which is a process of redesigning some of the client's requirements. They usually happen systematically, e.g., depending on user necessities.\nSecond area is technology changes: As programs age, their structure tends to be degraded\nby change and so they become harder to understand and modify. That is why it is important to, for example,  replace software drivers or libraries.\nAnd finally, organizational changes, that can occur while company or business alter a component of their software organisation, such as completely rebuilding the website or creating a new department. \n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261421,
      "meta": {},
      "text": "Changes are daily business in software development. When working in project groups with dozens of other developers as well as only a few, it is likely that problem scope, product requirements or the general project organization change. Reasons for this can be shorted budgets, technological problems, integration problems, teaming problems and many more. For example when working on huge projects like the operating system iOS with current versions in use by millions, with permanent updates, new requirements and influence of new technological possibilities, techniques, methodologies, tools and ideas there’s always change and adapting. \n\nWith projects needing time and permanent communication with the customer and project manager, wishes, requirements and even the general problem scope can change. For example when designing an app and shipping only potentially shippable products to the customers for tests, they will for sure come up with new ideas, change wishes and critic the team has to consider in the next backlog. \n\nAs our world is improving very fast, limits in computing speed or storage are never fixed. If you come close to these in your project it can become very expensive or impossible. But, for example, if you have a basically working algorithm that is just slow at the moment limited to computing speed, you have to consider waiting years for computers matching your requirements or making big changes and improvements in your project. \n\nWhen working on a project in software development you have to consider organizational changes. Software Development in most cases means working in teams in the most cases. For example it’s not unlikely that the team changes over time, members or sub-teams miss their deadlines or there are system integration problems when putting the single parts of the solution together. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1262306,
      "meta": {},
      "text": "In software development, changes occur for many reasons. One of the changes could occur because there was little communication between the people involved when the project was modeled. Let's think about a project that a company gives us, if we don't have enough communication with that company about the project we can't be helped to find out what they really wanted to start with or understand what was really needed.\n\nI don't really understand what we have to explain in the second question so I don't know if what I'm going to talk about is correct or not. Thinking of the requirements changes, I can think of a few options:\n- A poorly defined requirement development process\n- Ignored requirements: it may happen that the developers just ignored some of the original requirements\nAs for technological changes, it may happen that the technology changes during the process. And finally, organizational changes could occur because the customer's needs could change as well.\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262754,
      "meta": {},
      "text": "Die Softwareentwicklung gehört zu den technischen Bereichen, die einem tagtäglichen, rasanten Wandel unterworfen sind. Unternehmen, die in dieser Branche tätig sind, müssen stets am Ball bleiben, um nicht abgehängt und damit vom Markt geworfen zu werden. Der Wandel lässt sich grob in drei Unterbereiche gliedern: Den Anforderungswandel (requirement change), den technologischen Wandel (technology change) und den organisatorischen Wandel (organizational change). Diese Bereiche sollen nun anhand des Beispiels der Automobilindustrie genauer erläutert werden: Bei dem Anforderungswandel handelt es sich um einen Wandel in der Nachfrage der Stakeholder, der oft durch Trends bestimmt ist. Während ein Auto früher hauptsächlich fahren können und viel Power haben sollte, geht der Trend heute in Richtung E-Mobilität und umweltschonender Abgassysteme, was einen großen Wandel darstellt. Der technologische Wandel beschreibt das was technisch möglich ist und was der aktuelle technische Standard ist. Während es noch vor 20 Jahr purer Luxus war, ein C-Netz Autotelefon zu besitzen, sind heute moderne Funktionen  wie Unfall-Frühwarnsysteme, Kameras, Bluetooth-Soundanlage, Automatische Einparkassistenen, Navigationssysteme mit Live-Traffic etc. keine Besonderheiten mehr. Um dies alles in kürzester Zeit zu entwickeln ist eine enorme Wandlungsfähigkeit von Nöten. Der letzte Punkt ist der Organisatorische Wandel. Dieser beschreibt eine unternehmensinternen Umstellung für z.B. Performance Optimierungen. Beispielsweise werden in der Automobilindustrie immer mehr Arbeitsschritte durch Roboter automatisiert. Wofür ultrapräzise Roboter entwickelt werden müssen. Ein anderes Beispiel wäre, der komplett strategische Wandel von VW nach dem Abgasskandal. Wodurch sie sich innerhalb kürzester Zeit dazu entschieden haben, EU-Konforme Abgassysteme herzustellen.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1263110,
      "meta": {},
      "text": "Software development is not done once and for all, so changes always happen during development so that the software can better fullfilled the requirements or be suitbable for more users. For example, there is an software, which is designed for amateur but later it wants to fit the requirments of more users, also for professional. So a change occur.\nRequirements changes,  for example the customer wants a software to communicate with others. During development prozess, he wants to add more functions: photo sharing, small cooperativ games, these are requirement changes.\nTechnology changes, for example because of requirement changes some functions must be developed with other development tools, so the technology also change.\nOrganizational changes, for example the people who is a developer suddenly become a scrum master,which is an organizational change. So the number of develop team members changes and the tasks each developer is responsible for also change.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1263547,
      "meta": {},
      "text": "Broadly speaking, change is a substantial part of software development because the development of software is not a well-defined process - as assumed by the defined process control model (which aims to avoid any deviations) - but rather subject to internal and external influences. A prominent example for such an external influence is the ongoing shift to e-commerce which was only further accelerated by the coronavirus pandemic. It is crucial for countless software development projects to adapt accordingly.\n\nMoreover, one can differentiate between requirements changes, technology changes and organizational changes.\n\nRequirements changes are - as the name suggests - changes of the requirements that underlie software development projects. Typically, these include changes resulting from different customer expectations, changes that occur due to a better understanding of the original problem statements and many more.\nTechnology changes, on the other hand, are induced by the availability of newer and better technologies. Especially in software development these can have a drastic impact on how developers can fulfill the requirements of the customer. E.g., the improvement of AI technologies in the last years enable developers to solve old problems differently or problems that couldn’t have been solved before.\nLastly, organizational changes are changes to the structure/organization within a company or - on a smaller scale - a software development team. These include for example policy or personnel changes.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263733,
      "meta": {},
      "text": "Changes in software development happen because of our ever changing world. Nothing is truly set in stone nowadays. Thats caused mostly by these three areas of change. The first is the changes in requirements. The goals and situations at the start of a project might not be the same as the ones at the end. In software development there is always the battle between money, time and quality. One cannot gain all three at once. Therefore only up to two aspects may be prioritized at once. Changes in prioritization result in changes in the way the software is developed. Where this is fairly clear to see is in the devolopment of video games. Many of the iconic hits were made by prioritizing quality, spending an enormous amount of money and time on them. On the other side it is painfully obvious when cuts were made. Changes in technology are also a vital part in software development. They can change the tools that are available and make software development a lot more efficient. One such example is the emergence of AI. It has so far been successful in increasing the productivity, speed, and quality of the development process. Software developers are using AI algorithms to improve multiple stages – project planning and estimation, user experience, and quality testing. The last area of change is organizational. It defines the way software development is controlled. One important example is the shift from a defined process, following strict rules, to an empirical process, steadily adapting. This change in organization shaped software development into what it is today.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264410,
      "meta": {},
      "text": "Changes passiert wenn die Regierungen neue Reglungen schaffen, wenn die Geschäftsleitungen neue Vorschläge haben, wenn es neue  technische Werkzeug eingesetzt werden.\nAls Beispiel nehme ich ein Teamleader in ein Software Development Team. Er arbeitet an ein Videospiel schon seit zwei Jahren mit seinem 10er Team.\n\n\nrequirements changes\n\nDer Konkurrent einer anderen Firma hat die gleiche Spielart wie sein Videospiel veröffentlicht, aber hat nicht so tolle Stimme der Spieler bekommen. Die Geschäftsleitungen meinte, dass er ein paar neue interessante Elemente hinzufügen muss, um den Spieler zu begeistern. Es kann sein, dass die Geschäftsleitungen bald neue Idee ausdenken würden.\nDadurch verändert sich die Forderungen.\n\ntechnology changes\n\nWeil es schon zwei Jahren vorbei ist, gibt es  zur Zeit neue 3D-Graphik Technik und 3D Drucker, um die Arbeit viel zu  erleichtern. Er ist dann gefordert, neue Software und Maschinen zu lernen, um den Endergebnis schöner zu machen und das Spiel nicht zurückgeblieben wirken. Graphics Card sowie andere Hardware kommen fast jedes Jahr was Neues raus. Der Spielentwickler müssen auch in der Lage sein, neuen Technik zu probieren oder neue Software zu benutzen.\nDadurch verändert sich den Tecknik.\n\norganizational changes\n\nAber leider hat seine Firma nicht so viel Geld mehr. Deswegen muss er als Teamleader ein neues Team mit 5 Personen organisieren. Einige Mitarbeiter müssen von diesem Programm raus.\nDie Aufgaben müssen neu aufgeteilt werden und neue Teilnehmer müssen miteinander verständigen können. Zwei davon arbeiten als Figur Designer, aber die haben unterschiedlichen Ideen und Zeichnenarten. Die beiden streiten miteinander und er muss auch eine Lösung finden.\nDas Team hat sich dadurch geändert.\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264522,
      "meta": {},
      "text": "Changes happen in software development, because the conditions under which a software developer works change. These changes can be through new coding languages, improved processors, customers new needs and new markets, developer team's decisions and so on. A concrete example for a change would be that people use libraries while coding, instead of creating the whole code from scratch. With time, software developers create new libraries for different coding languages and save other developers' time. \n\nRequirement changes come from the \"customer\". It can make the whole process harder since it mostly effects every single person working in the project. An example would be a budget cut. The salaries or money used for the expenses should be reassigned in that case.\n\nTechnology changes mostly improve work. It lets the developers work more effectively, saves resources like time, money and/or energy. An example would be using a languaged which is optimized for websites when programming a website.\n\nOrganizational changes can be changes as new members in team, diffrent workstyle etc. It can either be positive or negative.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264966,
      "meta": {},
      "text": "Change happens in software development because the technology advances, a (new) competitor challenges you or the government releases a law that affects your work.\nAn example for change is the EU law which will force phone manufacturers to build their phones with a USB-C charger. This might change some companies development because they are used to a different charging technology.\n\nRequirements changes are changes that occur because the costumer or user requirements change. An example for that would be when an application needs support for handicapped people and therefore the requirements change.\n\nTechnology changes are changes that occur because a new technology has been developed or old one has advanced. This forces developers to adjust their work so that their products still work with the changed technology. An example are the foldable phones which have been released and announced in the past years. With these new phones developers must change the product so that everything is still displayed correctly.\n\nOrganizational changes are big changes inside a company or organization. An example for that would be, when a company launches a new department in order to target a new group of customers.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265363,
      "meta": {},
      "text": "The whole world is in rapid change due to rapid technology innovations, constantly changing customer requirements and legal requirements. And this change goes hand in hand with changes in software development. Change in software development can be divided into 3 different categories:\n\nrequirement changes: Requirement changes refers to e.g. a customer or stakeholder changing the requirements of the project due to external factors. \nAn example of this would be that the customer wants to consume more sustainably due to climate change and therefore also expects the software to enable sustainable consumption. For example, when shopping online, customers are increasingly asked at the end if they want to offset their carbon footprint, and the entire software focuses more on sustainable image. \n\ntechnology changes: This refers to any kind of technology change, such as software updates or new technologies. An example of this would be Speech Recognition technology, which in recent years has been mainly influenced by Siri and is now an integral part of every new electronic device. Even smart washing machines and speakers have implemented speech recognition.\n\nOrganizational changes: Organizational changes such as a new law or a new structure are also changes that have an impact on software development.\nAn example of this would be, for example, that in a company the head of department and 3 other important executives have resigned and thus leave the company and this has a strong impact on the team structure. As a result, the team / department structure must be reorganize.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265917,
      "meta": {},
      "text": "Software development is the type of project which generates a creative/effective solution to a stated problem from the client and needs to correctly identify all new features and functionalities. If the client considers including new functionalities not considered before by the development team, this generates change. Also, inside the team, in order to generate the highest level of quality compliance, some features proposed by a team member will need to be segregated if this risks the general functionality of the developed software. The presence of many people with different minds and different backgrounds from the client and the development team itself generate great ideas but also generate debate, and potential change (or improvement)\n\nRequirements changes:\n- Technology change: The client decides that the user interface will be different. Now the target user device will be an iPhone instead of an Ipad. The technological requirements will need to be readapted.\n- Organizational change: The IT manager from the client company change and asks for a reevaluation of the key requirements for potential improvement.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266105,
      "meta": {},
      "text": "Changes in software development happen, because it's more of an empirical process, not a predefined, all possible cases in the world covered process. This requires experiencing specific cases/situations in order to execute changes to a specific project and these changes can affect any part of the project, no matter the current development cycle.\nAs an example, a game might be almost production ready but in the final user trials a critical flaw in rendering is found. In order for the flow to be fixed a gpu driver specialist is required - this drastic change would revert the team from final testing to recruitment (ground zero).\n\nRequirements might change when a customer realises a new market niche or a change in the market.\nTechnology changes might occur for example when a new version of an OS needs to be supported.\nOrganisational changes could come from customer input and could be manifested in de-/prioritisation of specific parts of the project in response to the market or in order for the deadline to be reached more cheaply by cutting corners in less important areas.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261546,
      "meta": {},
      "text": "It is not always possible to plan far ahead and define all requirements from the beginning. Changes occur in real life all the time, and your software project gets affected by both internal and external changes. For example, your company wants to try a new business model after having a large userbase. This business model requires a new set of features and refactoring some existing ones. Suppose that this new business model includes processing health data. Now you are required to comply with GDPR and you have to change how to store data.  Congratulations! the new business model was a huge success. However, with the increased number of users, your search functionality is slower than expected.  You have made your research and found a new database technology called eslasticsearch and agreed to implement it in your project. Additional to those changes, sometimes parties involved in software projects simply change their wants in the long run. Agile-Scrum methodologies try to increase adaptability to change and provide continuous integration and delivery.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262566,
      "meta": {},
      "text": "The world is not static and outside factors are a volatile system. Ranging from new technologies to new laws and unforseen needs and problems, no set plan will survive contact with reality.\nThe only way to withstand the harsh reality of an ever-changing world is to adapt to it, and be ready for any change to come.\nA famous example is the Videogame Deus ex, in which the game was almost finished, however during some of the final playtests testers complained about some of the gameplay being to exhaustive, and huge parts of the game were completely scrapped and redone. This would be a prime example of requirement change, with previous set goals for gameplay being adapted.\nAnd now, despite its age Deus ex is one of the prime examples of an immersive sim done right.\nChange can come in many forms. It may be a new emergent technology, such as newer smarphones rendering older phones almost completely obsolete, and almost making nokia an outdated relic of the past.\nOr, more simple a change may mean a switch in the dogmas of one's employer, resulting in major structural adaptations needed(along with dealing with a smaller budget, probably), as it happened to a lot of german agencies with the recruiting of external advisor companies and the many changes that needed to be accommodated afterwards.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263003,
      "meta": {},
      "text": "The software development world is always changing and that's inevitable.\nA study have shown that there are some major reasons where the change in the process of software development takes place: \n*Maintenace: for example fixing bugs\n*External changes : for example if something about the project isn't legally allowed anymore (it was at the beginning but the law has changed)\n*Internal changes: Some stakeholders or investors may not exist at the beginning of the project or they are replacing other investors could have a totlally different view of how a problem should be approached.\n*Technical changes are always present beacuse due to our rapid technological evolvement.\n*Changing Expectations: alot of clients don't know what they want until they see the end product, and that's caused by the lack of prototyping.\n\nRequirements changes:\nA decisive reason for those kind of changes is the ineffective management of requirements in the process. For example the constant need for adding new features and functionalities that were not discussed upfront.\n\n\nTechnology changes: \nAs the technologie changes fast, everyone wants to get the latest and greatest which requires software developers to adapt to keep up with it, as new things that weren't possible before would be asked from them.\n\nOrganizational changes:\nThe clients organizational structure can change through the project lifecycle due to external factors, such as the involvement of another vendor or a representative end-user or political pressure.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263194,
      "meta": {},
      "text": "Software Development refers to a set of  activities, which allow for the fabrication of useful software-systems, which can then be utilized by a client in a meaningful manner.  Since systems and requirements for software-based systems constantly evolve and change over the course of time, due to general requirement-changes, technology changes and organizational changes, software development must equally evolve and adapt to its constantly changing environment. An example would be the invention of the ASPICE model in the automotive world, which allows for effective engineering of software-based systems in the automotive industry. With increasing technological advancement in the computer industry, software-systems found their place in Infotainment systems as well as self-driving technology.\n\nRequirements-changes refer to the changes in wishes of the clients, for which the software is being developed, in a formalized manner.  An example is the invention of the Mergesort Algorithm, by John von Neumann, which fulfilled the requirement of an efficient-enough sorting algorithm (at the time).\n\nTechnology-changes generally refer to advancements in technology, which implicitly have reverberating effects in the industries that they effect. An example is the invention of the transistor, which accelerated the increase in computational power of general-purpose computers, especially in the 1950s.\n\nOrganizational-changes refer for example to changes in the organized-systems, which allow for the effective engineering of software-based systems. An example would be the ASPICE model itself, which was an organizational change in the development of software in the automotive industry.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264041,
      "meta": {},
      "text": "invest in innovation,\ndont miss out on new stuff\n\nDa man in der Softwareentwicklung nicht alles im Voraus planen kann muss man sich auf Änderungen einstellen. Verbesserungen, bessere Umsetzungen oder Funktionalitäten, die auf die aktuelle Lage der Welt bezogen sind, sind Jahre vorher natürlich nicht bekannt (Beispiel: Funktionalität zur Reservierung eines Timeslots in einem Laden für die LadenApp aufgrund von Corona). Auch die Hardware, auf der die Software läuft, kann sich verbessern bzw. hat möglicherweise neue Anforderungen.\n\nDie Bedürfnisse der Nutzer, Kunden etc. können sich jederzeit ändern (Requirement Changes). Ale Beispiel dafür kann das vorherige Beispiel der Corona-Funktionalität gesehen werden. Ein anderes Beispiel dafür wäre neue Technologie, mit welcher die Firma oder in diesem Falle die Software mitgehen muss.\nAuch die Hardware kann und wird sich weiterhin über die Jahre verbessern und ermöglicht neuen Spielraum & Funktionalitäten für die Nutzer und Entwickler. Diese Änderung kann in der Computerspiele-Branche sehr stark gesehen werden. Spiele werden besser und besser (Grafik), da den Entwicklern mehr Spielraum (Arbeitsspeicher, Speicherplatz etc.) zu Verfügung steht.\nDer Letzte Punkt, die organisatorischen Veränderungen, sind Dinge wie Änderungen des Personals (Entwickler), der Leitungsebene des Teams etc. Wenn der Team-Leader ausgetauscht wird und der neue Team-Leader nicht mit einigen Punkten der alten Leitung einverstanden ist müssen diese neu realisiert werden.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1264440,
      "meta": {},
      "text": "Change in software development occurs because of our quickly changing environment, often because of changes in legal requirements, a company's needs, lacking requirements, new technology, etc. One example (that I personally experienced) would be a web developer having to replace a fancy backend for a blog page system with hardcoded HTML sites because the project manager decided to use this to improve the site's Google SEO ranking.\n\nRequirements changes are created by people in charge of a project, for example a company deciding they need to redesign their site to make it readable for their visually impaired customers.\n\nTechnology changes are less easily controllable and usually a byproduct of incorporating new software, hardware, etc. An example would be iOS developers having to partially redesign the UI of their app to make it compatible with the newer full screen devices.\n\nOrganizational change is used to attempt an improvement in the development process, like for example increasing the daily meeting time because 5 minutes isn't enough for the team to sync up on what they've covered and plan next steps.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264833,
      "meta": {},
      "text": "In the modern days, there has been such an evolution of technology in different fields, so that models and software that were effective long ago, have become outdated. They key to prevent the death of a tech industry is therefore the change in software development along the rise of new technologies.\nThat´s why change happens, just as we can see in the smartphone industry. Companies like Nokia or Blackberry were twenty years ago leaders but didn’t innovate with the rise of new hardware and kept the model of software, that they used until then. For that reason, other companies, such as Samsung or Apple, took their places and knew how to handle these changes with innovation and a new model of business.\nConsequently, the change in areas of requirements, technology, and organization must be kept up to date. The first one has to do with the change of requirements demanded by the client or the public according to their preferences or needs, just as the implementation of a new feature in the product, that was not notified at the beginning of the project. The second one involves the evolution of new technologies and the implementation of those to the new products, just as we have seen in the example with the smartphones. The third one must deal we the organization of the team in charge of the software development. This change could be the arrival of a new member, the expulsion of some or even the appointment of a new leader and his training.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265058,
      "meta": {},
      "text": "The world is a dynamic, ever changing place, and so are the people, people's wishes, visions, understandings. This is why in software development, as well as in every other field, one has to constantly adapt in order to solve a given problem. For instance, very often in small projects the scalability becomes an important requirement at the later stages of development. Technology changes are also not rare, as new and more optimized software and hardware are constantly under development. And of course, changes in the organization are quite common, e.g. the roles in a dev team are not permanent, which allows more flexibility which leads to higher productivity.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265964,
      "meta": {},
      "text": "I think change happens in software development mainly because of the development of society and the demand of human beings. For example, we are now in corona time and sometimes have to take online courses, which means that the software which can provide us remote learning is in highly demand. It's requirements changes. In terms of technology changes, we have advanced technology now, so we students are not only able to watch the live stream but also able to interact with our classmates and teachers, which enables online courses to be interactive for example opening the camera and microphone and enables us to have classes just like that in presence. It's also based on the requirements changes, for we pay attention to the person to person interaction and need this function of the software, so I think that it represents a close relationship between requirements changes and technology changes.\nLast but not least, organizational changes reflect on the changes of the organization mode, for every people now are responsible for one part of their work but also have to take part in other people's tasks in  order to finish the project faster and more efficiently. Once, people only work in groups but not in teams, which have low efficiency and work separately just like split parts. New organizational changes offer us the opportunity to be more active and creative in teams.\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262344,
      "meta": {},
      "text": "\nChange as a term\nWhat is change in software development and why does it happen? It means that a software product is changing into improved version of it. It happens because of bugfixes and improves \nFor example if an App gets updated to a new version. Spotify for instances got an update lately that prevented it from randomly crashing.\n\nRequirements change\nThe term means, that your general framework is changing, so if for example your user requirements change or the market has changed. Instagram has recently introduced \"Reels\" which is basically a copy of TikTok. It has done so because of the extreme interest in TikTok and its short videos. So the market has changed, because of the sheer interest in these clips.\n\nOrganizational change\nMeans that the company or business is changing a major thing in its organization. For example its culture or infrastructure.  Meaning that if a new CEO is being instated or the scrum master is changing. \n\nTechnology change: \nIt means that you have new technology available. So for example if you get access to better technology or more advanced computers. \n\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262784,
      "meta": {},
      "text": "Software development is a problem solving process in the environment, changes in both the environment and the solutions would lead to changes in software development.\nFor example, Zoom, at beginning, functionality of zoom is simple, with the increasing requirements and demands from users, there are more features added, e.g. background picture setting, share screen, whiteboard, breakout room etc.\n\n- requirements changes: changes brought by clients, for example, client wants to change the shape of a button from square corner rectangle to a rounded rectangle.\n\n- technology changes: changes driven by new technology, for example, the development of deep learning dramatically increases the ability of speech recognition, and many softwares update that function accordingly. \n\n- organizational changes: changes due to organisational arrangements, for example, changing process of software from defined process to empirical process.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263330,
      "meta": {},
      "text": "Change in software development can happen for a multitude of reasons, when you discover a big flaw in you current structure there is a need for change, when your customer changes his demands there is a need for change, or if there is a new big hardware change you might need to change your program according to that new hardwares requierments.\nAn example for change in the real world was when humanity started making first observations of climate change in the 1970's which lead to politics deciding on emmission limits and as a consequence started funding solar panels and better isolated houses etc. leading to an advanced awarness of those issues and a decline of fossil energies, forcing companies to work on apearing mor ecological.\nRequirements changes can happen if an developer finds major issues with those that he has if they are to ambiguous or impossible to deliver, technology changes can happen if the hardware changes making former impossible demands possible. Organizational changes happen if you get new co-workers or your old co-workers get replaced or you get a new leader leading to a period of reforming the team from a changed group.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263654,
      "meta": {},
      "text": "Change in Software Development does often not have one cause but multiple reasons. First you could be forced to adapt your Software to other competitors because theirs is better or faster. For example Yahoo should have adapted their search engine much earlier when Google came up with a better search algorithm. There could also be reasons for adaption because of changes in the technology itself. If there was invented a new kind of technology that is better, your Software should adapt to that as well. For example Nokia did not adapt their mobile phones to smartphones so they almost run out of business after that. This is an example for technology changes. They occur automatically because of inventions of people all the time. Another kind of change is the requirements change. These happen because of user requirements, requirements of the stakeholders or ,as before , because of new technology. For example after Elon Musk recently bought Twitter he wants them to focus more on subscriptions. Organizational changes occur because of changes of in the structure of the company, their strategy or culture. Facebook changed their name to Meta in 2021 to symbolize their changes in the policy and their focus not the metaverse.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264237,
      "meta": {},
      "text": "Softwareentwicklung ist Problemlösung mit stetiger Veränderung. Dabei verändern sich zu einem die Wünsche des Kunden, aber zum anderen auch die Techniken zur Problemlösung. Dabei muss der zu schreibende Code mit dem aktuellen Stand der Technik mithalten können. Dies bedeutet aber auch, dass schon geschriebener Code verbessert werden muss, um damit auf dem neuen Stand der Technik zu sein. Dazu kommt noch, dass sich die Anforderungen an das Produkt verändern, dies bedeutet, dass neue Features oder neue Designs beziehungsweise überarbeitete Designs erstellt beziehungsweise verbessert werden müssen. Zudem wird sich natürlich auch im Laufe der Zeit die Organisation des Entwicklungsteams verändern. Dies merkt man zum einen, da man mit der Zeit natürlich mit neuen Personen im Team arbeitet, das Team wachsen wird, aber zum anderen auch, da das Team neue organisatorische Methoden verwendet, um neue oder bestehende Produkte im Team zu entwickeln bzw. zu verbessern. Somit kann zusammengefasst werden, dass sich sehr viel in der Softwareentwicklung ändert. Ein reales Beispiel wäre die Entwicklung einer App. Dabei würde zunächst ein kleines Entwicklerteam eine App entwickeln. Da diese App sich aber sehr stark verbreitet und an Popularität gewinnt, werden zum einen Kunden höhere Anforderung an die App bekommen. Damit müssen die Entwickler regelmäßig ihre App verbessern, dass diese reibungslos funktioniert. Damit gelangt man auch zu dem Punkt, technologische Veränderungen. Durch die steigenden Nutzerzahlen könnte es zu Performanz Problemen kommen, welche korrigiert werden müssen. Zuletzt wird natürlich auch das gesamte Entwicklungsteam wachsen und sich somit auch die gesamte Struktur des Teams ändern. ",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1264336,
      "meta": {},
      "text": "We live in a fast-evolving society with new technologies and laws emerging every day. This is also true for software development and requires dealing with changes in software engineering. For example, innovations like fingerprint sensors in smartphones require integration of new functionalities into the operating systems in order to be able to support this new feature.\n\nRequirements changes impact the specifications which the software must fulfill, e.g. specific laws or legal constraints with whose the software must comply with. Another example could be that a new market competitor emerges, so that the software product has to be extended to match the competitor's product. \n\nTechnology changes can be innovations in areas that directly impact the functionality or that change the necessity of the software product. For example, a software system might be replaced by an emerging technology and become useless, or it might be required that a software system contains additional functionality to make use of a novel technology.\n\nOrganization changes can be for example budget reductions, important team members leaving the project or company as well as changes in the time frame. \n\nAll of these require an adaptive and agile software development process in order to adequately react to change.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264460,
      "meta": {},
      "text": "Change in Software Development happens due to unforeseen changes.\n\nAn example for such a change would be: A customer changes his opinion on the function he wants the program to fulfill. This forces the software development team to rework or add entirely new code. In any case, this process takes time to complete. The schedule therefore has to be changed to accomodate the extra work that has been loaded onto the team. \n\nThis problem falls under the area of requirement changes. The category contains problems which involve a direct change of the program. Another problem of this kind might arise due to errors during planning. If a lifecycle stage was estimated to take less time than it does in reality, or if it had been entirely left out (be it due to human error, laziness or the urge to advance the project as fast as possible), the timeframe has to be extended yet again to accomodate the unaccounted time. \nAnother category are technological changes. If the project were to rely on technology, which was predicted to be available sooner than it actually is, it would be put behind schedule as well. \nThe final category addresses the software development team itself. Members might have to leave before the time they were originally planned in for. This can occur due to medical emergencies, the person being fired and a plentidude of other reasons. Therefore the need arises for a person to fill the empty spot, the finding of which will take additional time and, because of differing abilities, maybe a redistrubution of tasks. ",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264628,
      "meta": {},
      "text": "Change in software development can occur for various reasons. It is often a team which develops a software system for a given problem statement which the customer faces.\nFirstly, the most obvious reason for change are new requirements of the software system which could be due to a change in the problem statement by the customer. In this case, it is necessary to rerun many steps of the engineering to adapt the product.\nSecondly, there could be change in technology during development of the software system which may force the team to rethink and reengineer parts of the system.\nLastly, there could be improvements or more convenient implementations of the software system which only appear during the development. Coming from a given problem statement, the development team could have a certain vision for its solution. This solution could later turn out to be not the best for the customer and that is why the team might decide to go back a few steps in the development. This is called organizational change.\nOne example for change in software development could be the implementation of a software system for a production plant which is built at the same time. In this case the customer who builds the plant may faces problems during the construction which require a change in the software system.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264697,
      "meta": {},
      "text": "In a world where new technologies appear every day and software development is one of the main contributors to these changes in the tech world so it is normal to expect changes to happen in software development also. People´s desires change over time, new trends come and others disappear and new ways to hack system appears also so a new security system needs to be developed. Our society is evolving quickly and software development needs to change not just to adapt but can also be the main factor in society's changes.\nWe can mention the recent announcement of Facebook  CEO Mark Zuckerberg who believes virtual reality is the future of the internet, that  Facebook has become meta explaining its plans to make a virtual world where people can socialize, work, and play known as the metaverse.\nthere are three main areas of change in software development.\nFirstly there is a high probability that requirements will change over time either because of their lack of precision or simply because some requirement was ignored which can result in a missing requirement or wrong ones.\nSecondly, as I mentioned earlier New technologies and devices are being invented at a frightening pace. while companies may be working on developing specific Technologies another invention appears and it changes market demand so all of them should adapt to these changes or they may stay left behind.\nThe development organization may change also during software development due to different reasons: a change in one of the development teams or even a change in the main process control model that the developers are using if it is not effective enough. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265051,
      "meta": {},
      "text": "Technology improves itself everyday. And this means that everyday we need new ways to figure it out. There is a lot of languages connected to technology. We can count development on these languages as software development. Because regeneration/modernization doesn't means 'got complicated' everytime. There is some people, who works for making a software language easier and with the help of this other people who has great ideas but less software language knowledge, can create modern and compatible with new technology stuff. All technologic devices in our world today has a chip, which coded by sofware-engineering. New device means new codes and new codes need a typing language. These are not obviously english, german or turkish; they are for example Java, C., Python etc. But why do we need a change and do we need a change everyday? Actually we don't need it everyday but definitely we have to change something. For example we needed a change for cars and we made collision avoidance system; with help of this ratio of crashes fell. And all the modernizations in the future will about this and with a goal of %0 crash ratio. This was an example of requirements changes. There are types of changes like for example technological change; I want to give Phones as an example. We used to use small stuff that helps us speaking with someone interaktive. Surely they weren't always small. At the beginning they were big and than they got smaller but now they are going to bigger and bigger. We changed their design and abilities according to needs of new world. They are now complete different stuff, they are like little computers in our pocket (not like old and big computers) We are changing what we need and what we want to avoid. We are now living in half-digital world, i am not sure is it half or more but in the future definitely we will digitalizate more and developed, little faulty and accurate software will help us everywhere. We will need software engineers and people who understands something about software more.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265132,
      "meta": {},
      "text": "agile development world-> constant change in non-functional and functional requirements, shift in already established requirements\nReasons: change of mind/new ideas from customer\n\nReal world example:\nnew isa /changes in operating system -> your software needs updates \n\nrequirements change: as described above (new ideas from customer)\n\ntechnology change: new technology that has impact on your work (e.g. new devices or low level software)\n\norganisational change: new structures in your or your customers company/ extreme shift in requirements",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265353,
      "meta": {},
      "text": "Because the through out the process the requirement, technology or organisation of project (for example stakeholder) might change and the software development must be corrected to the new situation. An example of this could a company that exports hats need to change its exporting routes due to unpredicted problem such as weather change that disrupted transportation routes.\n\nrequirement is a feature that a system must have for it to be acceptable by client for users. requirements can change , whether it be due to poorly defined requirement, unpredicted problems. these missing, incorrect  or ignored requirement will be discovered as the development goes on.an Example of requirement change would if the deadline be pushed forward.\n\ntechnology changes happen when software development is based on a technology that is does not ready to be used at that movement. An example of this would if a game is based on a new game engine that would be released in a year. If the new engine doesn't live up to the expectation changes are needed.\n\norganisational changes is when big part of organisation alters. an Example of this is when a company decide to switch from defined process to empirical process. Real life example of it would if an old-stool book store decides to start selling books online and now they need to divide up their workforce to cover both in person and online customers. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262379,
      "meta": {},
      "text": "Software Development is not a predictable and linear process. It undergoes many changes from the idea creation to the end product(software).\nDue to the fact that the process is empirical(cannot be modeled) many unexpected challenges , problems and new implementation strategies have to be dealt with as they come => Adapting to constant changes is crucial\nUsing agile methods to solve problems software developers can easily adapt to new problems, overcome limitations, improve on their ideas, divide their tasks in various teams and create transparency for their client. In the end, with proper communication with the customer change enables the developers to give the best result and ensure that the customer is satisfied with their product.\nAn example would be a change in laws and regulations in terms of privacy or even in the field in which the product is being used.\nThe three main areas of change  are requirement, technological and organizational changes.\nA common technology change would be software changes to support a new hardware platform ( eg. OS)\nA requirement change can occur when one requirement is forgotten by the stakeholders. This can be rectified by\ninfrastructure changes and retesting.\nSince most developers are indeed human, a lot of conflict and politics needs to be factored in to the process, leading to unwanted organizational changes like a teammate being removed from the project.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263719,
      "meta": {},
      "text": "Changes in software developement happen because our world constantly changes and we continually develope new technologies and have to adapt to them. For example artificial intelligence is a new topic that came up and everyone has to adapt to it and research in this topic so they won't be left behind.\n\nA good example for requirement changes is the corona-warn-app. Every time the government decides a new infection law, there's a possibility that the software developement team has to change the app. Maybe small changes like the info about quarantine rules but there can also be big changes like implementing vaccination and recovery certificates.\n\nAn example for technology changes is the new Apple M1 chip. Software developers that develope software for macs now have to adapt to the new arm architecture and change their software to run natively on the new macs.\n\nFor organizational changes we can look again at the current corona situation, where every company was forced to switch to home office.  Most developement teams were used to work together in offices and had to reorganize to make working from home possible.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264286,
      "meta": {},
      "text": "for the question ONE, why changes happens in software development: \nfirstly, compared with hardware, software will be more easily to be changed and its cost of change is also lower as hardware. Secondly, during the process of software development, changes will often happen in different areas like user's requirement changes, technology changes and organisational changes and so on. there we take the iterative development of model phones as an example. Twenty years ago, mobile phones were usually used only for making phone calls and and sending text messages, now after a long term of the changes by software development, mobile phones can surf the internet, play games and make video calls. The changes in software development make the world as \"Global Village\".\n\nfor the question TWO:\nrequirements changes: during a software development, user will put forward different requirements from before or have more requirements. for example, on a shopping website,  user want to change the ranking from sales priority to favourite comments priority.\n\ntechnology changes: it means change the existing technology and develop new technology. Apple series is a good example. Before iPad and Macbook are independent,  now they can share the screen during the air drop or just let two products in the same wifi. \n\nOrganisational changes: from my opinions it can be understand as the creative/ development team use the new business models or the changes of the organise team. for example, some people leave the team in the middle of software development, no one can take his place at once. So it makes organisational changes in this team. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264815,
      "meta": {},
      "text": "The process of software development changes constantly due to changes in expectation of the customer/investor, a change in funding, a new demand for a certain specialization of the software, the changes below, etc. For example a team is developing the software for a self-driving car. When the testing results show that the car constantly drives over red lights, then the team has to revise this problem before dealing with a less important aspect like the parking assistant.\n\nRequirement changes are important to keep the development up to date. Most times unexpected design changes have to be made, due to feedback from the customers, a misunderstanding (or mistake) between the requirement team and the designers. For example a team is developing an app for running and they want to continue to update the experience of the user whilst running, however the users say that they want more statistics of their runs. So the developers requirements change to improving and adding more statistics.\n\nTechnology changes happen when a new form of technology is developed. For example a team is developing a security system based on RSA (relying on large prime numbers). When quantum computers are improved and are precise, RSA will be a very insecure encryption method, because that quantum computers are very good at equating large prime numbers. So the developing team needs to adjust their system, so that it is once again secure.\n\nOrganizational changes happen mostly when funding is changed. For example when the funding of a team consisting of 10 developers is halved, then about half of the developers are fired. Then there are only 5 developers left to work on the same project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265134,
      "meta": {},
      "text": "Because the essence of software development is to make a plan to solve the problem posed by the customer, while constantly developing new plans, customers will also put forward new requirements based on existing plans.Also Engineering a system based on the proposed solution need a good design,which means that this design should always change because of the result of current design,the limitation of technology,the requirements of customer,improvements by new idea.Especially software development is a field with rapidly changing technologies. There are always new technologies replacing old ones, which means that if you keep using previous ones, they may become obsolete\n\nExample: My group needed to develop a software, and in the middle of our design, the client suddenly reduced our budget, so we had to make changes to our proposal to meet the reduced funding\n\n\nrequirement changes:Wechat users hope that developers can develop and add  text/voice translation functions\ntechnology changes:in views of the high degree of code redundancy,which may lead to data loss and long development cycles,the developers decide to optimize the code and simplify it as much as possible\norganizational change：in the process of software development,the developer team introduced new resources,so the development model needs to be changed",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265261,
      "meta": {},
      "text": "In software development, change happens because our world changes from day to day, and so do the circumstances we have, the possibilities we have and also the problems we have. So it is impossible to start developing software planning everything through in advance. For example, let there be a software company that is currently working on software facing a tough problem. Luckily, another company publishes software that could solve this exact problem in less time and with lower costs. Using this software, our company could not just save valuable time but spend the gained money on other important things. Therefore adapting to this change in software supply would be highly beneficial. Of course, there is also negative change like for example competition, missing stuff or legal problems that need to be adapted to in order to reduce risk, cost and loss of time.\nThere are several types of changes. Requirements changes are changes concerning the resources and things you need for your project. You may for example need a specialist in coding in C++ or more powerful hardware for a better simulation.\nTechnology changes are changes in the area of software itself. As mentioned above, there could be new software that would be beneficial for your company or just new functions in a coding language.\nLast but not least, organizational changes, being changes in the structure of your project or your company. For example, missing staff could change your project structure, so you need to adapt to it in recruiting for new staff or shift the tasks in your development team.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265310,
      "meta": {},
      "text": "Früher gab es in der Softwareentwicklung \"veraltete\" Methoden, mit denen man erst spät Fehler erkennen konnte und auf diese reagieren konnte. Deswegen war die Verbesserung von Fehlern meist sehr zeitaufwendig und sehr komplex.\nDurch neue technische Möglichkeiten und agile Methoden ist es heutzutage möglich direkt auf Fehler zu reagieren und diese während dem Enstehungsprozess einer Software zu beheben, anstatt nach der Fertigstellung.\n\nEin Beispiel aus der Realwelt ist die Optimierung und Weiterentwicklung von Medikamenten. Bevor eine Medikament auf den Markt kommt wird es im Entstehungsprozess oft getestet und optimiert. Somit kann man mögliche Schäden am Menschen verhindern. Ebenfalls kann man durch neue und effizientere Technologien das Forschen weiterentwickeln um somit neue und bessere Medikamente herzustellen.\n\n\nAnforderungsänderung:\nDie Ansprüche an Softwares heutzutage sind viel höher als früher. Sie sind wesentlich komplexer und dürfen nicht Fehleranfällig sein. Zudem müssen sie gegen mögliche \"Hackerangriffe\" standhaft bleiben. Außerdem ist es auch sehr wichtig, dass eine Software sehr effizient läuft.\n\ntechnologische Änderungen: \nEs gibt heute mehr Programmiersprachen die man für seine Software verwenden kann, welche jeweils auch umfangreichere Bibliotheken enthalten. Die Computer sind wesentlich schneller geworden und durch die Digitaliersierung ist es leichter geworden, gemeinsam als Team an einem Projekt zu arbeiten(Zoom). \n\norganisatorische Änderungen:\nEs gibt neue agile Methoden, wie z.b. Scrum, welches die Projektarbeit eines Teams effizienter und erfolgreicher gestaltet. Die Projektarbeit wird in mehrere Phasen eingeteilt, in einem engen Austausch mit dem Auftraggeber das Projektziel besprochen wird und dann ständig getestet wird.\n ",
      "score": 25,
      "language": "GERMAN"
    },
    {
      "id": 1265856,
      "meta": {},
      "text": "There are many reasons why changes occur in software development. Software development is a complex task and nowadays many different functions and features are expected from software. However, at the beginning of the development, it is almost impossible to consider all the requirements. Further, the more detailed and complete the planning stage is, the longer it takes to start the actual development if you want to avoid changes in the later stages. This planning overhead would significantly prolong the time-to-market, which is very important in software development. Further, the environment changes continuously. The three areas of requirement changes, technology changes and organizational changes make up a big part of this. All three mentioned aspects can require an adaption of the software throughout the entire development process and are often strongly connected to each other. Hence, changes in software development are almost unavoidable if you want to develop a high-quality software quickly. \nRequirement changes can occur due to stakeholders anticipating new features and functions which are only possible to implement due to the already provided functions of the software’s current state. For example, if the new software can trace data a lot better than the previous software the company used, there might occur a desire to create more interfaces and analysis tools within the software, which were previously unthinkable and therefore not included in the requirement catalogue. Further, occurring trends can change the desired requirements during the development.\nTechnological change can occur within the field of software development as well as in the application area of the software. Technologies such as 5G enable new features due to the high-speed data transmission compared to 4G.\nOrganizational change can occur when the structure of companies’ changes, for example when two companies merge.\nA real-world example including all three presented reasons for change would be the introduction of windchill in Infineon. The requirements change continuously due to new stakeholders being introduced into the development process in different stages of the development. The technology changes happen all the time because Infineon operates in many different high-tech fields amplifying the effect. Organizational change occurs also quite often due to Infineon’s strategy of continuously acquiring new businesses and integrating them into their existing company. \n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266131,
      "meta": {},
      "text": "Often it is not properly understood what the actual goal is. \nEither the communication between client and the team is unclear which leads to false expectations.\nOr the goal is not properly defined or the project is poorly planned.\nThis leads to imminent change in a projects direction.\nThe current trend is to use machine learning/AI.\nMany customers want their project to be build around those new technologies, even though they might not be the best solution. \n\nAnother contributing factor is the consistent development of technology. Technology is getting more complex everyday. This also affects the projects process. The process becomes more complex which requires are more agile approach to the project. This means being ready to change and adapt during a project's phase. \n\nWhen recalculating the complexity of a project, the decision might occur to increase the teams size.\nThis requires a change in tasks and how they are distributed.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266140,
      "meta": {},
      "text": "There are many elements and influencing factors in software development process, not only the stakeholders involved in the project but also external factors like governments and technologies which changes the state of the ongoing software development process in different aspects. It is obvious that these external factors cannot be controlled by the development team due to highly complex nature but it is also inevitable to control the changes regarding stakeholders which contributes as a human factor. One change that can affect the software development is the financial state of a company since the funding of a project may change abruptly in a crisis.\nThe human factor is the main contributor to the requirement changes. Customer expects different things from the project and have several requirements at the beginning. But these requirements may be not be clearly identified at the beginning or customer may not be aware what they want as an end product from the start. Because of this ambiguity requirements change several times during the development phase.\nIn this digital age we are in, technology develops in a tremendous speed. Different tools, softwares and technologies may arise in the development phase which may require changing fundamental things in the project.\nOrganizational changes may arise from both customer side and software development team's side. Requirements may change from the customer side with a change in organizational structure. A team member's change during the project may stop the project execution or slow down the process.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262443,
      "meta": {},
      "text": "Veränderungen in software development können in folgende Kategorien eingeteilt werden.\n\n\"requirements changes\":\nDiese treten auf, wenn der Kunde seine Anforderumgen an das Produkt ändert. Das führt dazu, dass der Umfang des Projektes größer wird, wodurch auch die Kosten (für Mehr Mitarbeiter ) und die Zeit um das Projekt fertigzustellen steigt.\n\n\"technology changes\":\nAuch die Technologien können sich während eines Projektes ändern. Was zum einen dazu führen kann, dass Projekte schneller fertig werden, zum anderen muss man sich auch an Veränderung in benutzten libraries Oder (was selten vorkommt) an Veränderung Der Standards und Konventionen anpassen.\n\n\"organizational changes\":\nAuch die Struktur eines Projektes kann sich während dem Projekt verändern. So kann es dazu kommen, dass sich die Zahl an Mitarbeitern verändern, wodurch eine neue Aufgabenverteilung nötig ist. Es können auch neue Mitarbeiter am Projekt mitarbeiten, diese müssen dann erst eingearbeitet werden was das Projekt, wenn auch minimal, verlangsamen kann. \n",
      "score": 33.3,
      "language": "GERMAN"
    },
    {
      "id": 1262790,
      "meta": {},
      "text": "Change happens in software development because the world around us is constantly changing and during software development, one has to deal with unpredicted changes in order to be able to compete with others in the global market. \nTake games as an example, they generally are in development for years, as the hardware is getting better and therefore provides more and new possibilities future customers expect the products to be highly optimized with good looks and quality of life features that may have established themselves in the market while the game was still in development. Adapting to change is a necessity.\nIf the user's expectations change or a higher understanding of the user's needs arises this may result in changes in the requirements of the end product. In a game, the requirements may change in a way that menus, that are currently too tedious for players, get updated so that players will like them better. \nTechnology changes are advancements made in the technical field that establish themselves in the market as they further improve on possibilities for development. Games are developed in Game Engines and the Engines used change with the improvements made thanks to new technology being available. \nOrganizational changes occur if something unexpected comes up, maybe a new competitor releasing a similar software, and in order for one's own software to remain relevant new improvements have to be made that make it stand out in comparison.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263512,
      "meta": {},
      "text": "Change occurs in software development due to modern Software being so complex that it is not deterministic anymore which path the development may take. There will be problems that occur during the development which could not really have been foreseen, so the development team has to react flexible to this. One example would be if the laws for cyber security change during the development of some software and the old software does not meet the new requirements.\nThere are three areas in which change might occur.\n-\tRequirement change, when the requirements for the program change. This might happen if the client wishes for the application to have different or more features.\n-\tTechnology change, when for example the program language(s) in which the software is/are written is updated or the software should now run on different hardware\n-\tOrganizational change, when the organisational circumstances change, for example the development team loses or gains a member or working hours change\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263707,
      "meta": {},
      "text": "The companies are looking for more creative ideas because finding original ideas is getting rarer day by day. The thing is, that in software development there were defined processes beforehand: The processes were well planned and strict rules were followed. Whereas with the changes in software development, agile processes are more appreciated right now. Change is important and necessary especially in the software development because software sector is one of the main building blocks of the last and this century. In order to develop new implementations and in order to try new ideas, change is necessary. \n\nRequirements changes : A company's or a team's requirements can change as the products delivered by the corresponding company or team are enhancing or depreciating.\n\nTechnology changes :  There have been massive technological changes in these 20 years. This resulted with also rise and fall of the companies rapidly. As companies couldn't adapt to their environment, they were getting off-track and losing customer satisfaction. This loss of customer satisfaction would later make the companies enter a loop of which they couldn't get out. One example to this would be Nokia. Nokia indeed was one of the pioneers of the revolution in phones. However, Nokia couldn't adapt itself to new environment which was basically integrated phones with enhanced software such as iPhone. \n\nOrganizational changes : Sometimes, organizations and/or companies make radical changes about the core of their company. This leads to massive changes, it could be both positive or negative. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264940,
      "meta": {},
      "text": "Dadurch das sich die Welt und die Gesellschaft konstant entwickelt und verändert muss sich auch die Software. zum Beispiel ändern sich Computerspiele ständig mit neuen Patches um den Wünschen der Kunden entgegenzukommen oder deren Spielspaß mit neuen Inhalten zu erfrischen.\nRequirement changes entstehen, wenn sich die Interessen oder Bedürfnisse zum Produkt der Kundschaft aus verschiedensten Gründen ändern. zum Beispiel weil die Konkurrenz ein neues Innovatives Produkt rausbring wie bei dem Nokia-Beispiel aus der Vorlesung oder weil ein Kunde die Sofware für weitere Zwecke nutzen will.\nTechnology changes entstehen weil immer wieder neue Technik entwickelt und veröffentlich wird die man für seine Software benutzen kann. Sollte man ein Program schreiben, dass so viele Daten berechnet und dadurch zu lange braucht und praktisch unnütz ist, so könnte es sein, dass die Hardware in naher Zukunft schon so viel besser ist das es dann funktioniert.\nOrganizational Changes können Auftreten wenn ein Unternehmen bzw. eine Software Team wachsen muss, weil Software an sich und die Nachfrage größer wird. Dadurch muss man vielleicht die ganze Struktur und Organisation des Teams ändern.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265172,
      "meta": {},
      "text": "In software development change can happen for many reasons: the requirements of the customer can change, the environment can change (due to new laws or regulations), the competition might change, which you have to keep up with. Lastly, the technology can change. \nAn example in the real world would be Google, which now has Cookie Dialogs on all their websites in the EU, due to new laws concerning internet privacy in the EU. \n\nRequirements may change when the customer sees his previous requirements implemented but doesn't like the way they turn out or needs something new/old changed. For example, a customer might want an application in which users are grouped by their major, but due to a new policy of the client university students are now to be grouped by schools, which results in a change of requirements.\nAt last, their can be organizational changes, for example due to a increase in budget a new department is introduced so the backend and frontend team can now be seperated. Another example would be that the client wishes to increase the number of sprint meetings, to have a more detailed view of what is happening.\nTechnological change can occur when existing technologies used in the project get updated or new ones emerge. It can be important to use those, since they might be faster, easier to maintain or offer new features which can improve the application. Another technological change can be the hardware the application uses, a lot of applications now require a smartphone app. AR/VR is an emerging technology, which might now have to be supported.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261864,
      "meta": {},
      "text": "It can be understood that：\n1. The requirements for a software are completely made by the customer, and the customer's needs are changing all the time. \n2.Then each member from product owner to developing team has different understanding of customer's requirements. \n3. It is difficult for software developers to predict the workload of development tasks in advance, so the workload and work content assigned to each person needs to be adjusted in real time before the literator cycle starts.\n\nThree areas of changes:\nrequirements changes:\nIt could be that the requirements themselves have changed, that the cosumer said I would do this before and then changed.\nIt may also be that the understanding of the requirements has changed, I originally thought to do this, but it turned out not to be so.\n\ntechlogy changes:\nSoftware is a knowledge-intensive work that\nIt is almost inevitable that the process of development leads to a new understanding of the requirements. This can cause many concepts in software to change, and even some assumptions to be wrong.\n\norganizational changes:\nFor example, the variability of people on a development team. While developing one project, being temporarily called to develop another urgent project.\nOr even busy times when you have to switch back and forth between several projects.\nOr the budget is not enough according to the change of demand and the adjustment of personnel.\n\n\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262104,
      "meta": {},
      "text": "Software development changes because it is closely connected to the field of technology that is constantly changing. A big part of it is also said to be problem solving, well and having a problem to fix is usually the base for change.\n\nBig companies like YouTube, Meta or Twitter had to do major changes in the EU, because of the new copyright laws that came into force in 2019 - if they hadn't changed their policies, their business would be threatened. And throughout the years they all have done some user interface updates and added various buttons and scroll panes to trick their users into wasting more of their time on their platforms. :)\n\nChanges happen in different areas:\n- Requirement changes are necessary if the during the development process the customer submits additional or new features. He might have had a shift in his user base and done a survey, realizing that he needs to update his users’ wishes.\n- Technology changes are … well a part of the world of technology. New models of phones and computers come out, the old ones are not supported anymore, the operating system updates wreaks havoc in the previous software version; anything of that nature can happen and the development team has to adapt to it.\n- Organizational changes might happen, when there is a new company leader who wishes to make slight changes in the company structure. Or it could happen in the development team itself, when they realize their previous strategy wasn’t effective enough, be it time-/budget-wise or because the lack of communication.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262316,
      "meta": {},
      "text": "There are many factors that can cause changes in software development. It could be for example the different expectations of stakeholders and developers of a product because of poorly defined requirements, technology changes, overly optimistic schedules, and so on. In the real world, the developers can for example misunderstand the expectations of the stakeholders and develop software that has to be changed, because it doesn't fit the expectation of the stakeholders. \nThe requirements can also be changed due to time because for example changing expectations of the stakeholders due to lack of communication between the development team and the stakeholders. Technology changes can also happen. For example, a company reveals a new game engine, so the game development team, which is developing a game based on the old game engine might have to \nswitch to the new one to fulfill the expectations of the consumers. There can also be some organizational changes, for example, some of the developers are leaving the team, so the leader of the team has to redistribute the tasks for every member of the team.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1262460,
      "meta": {},
      "text": "Software Development entwickelt sich immer weiter fort, da jeder, der in der Entwicklung tätig ist, danach strebt die Entwicklung noch einfacher und effizienter zu gestalten. Dadurch verbessern sich Programmiersprachen und die Herangehensweise, beziehungsweise Umsetzung wird enorm verbessert. Ein Beispiel für eine solche Verbesserung/Änderung wäre zum Beispiel die Open-Source Technologie, die in den letzten Jahren extrem in den Trend gekommen ist. Das Open-Source Prinzip beruht darauf, dass jeder kostenlos die Open-Source-Software bekommen und an der Entwicklung mithelfen kann. \n\nAußerdem kommen mit der ständig fortlaufenden Software Entwicklung verschiedene Änderungen dazu.\nEine der drei großen ständigen Änderungen sind die generellen Anforderungen. Mit der wachsenden Anzahl an Programmiersprachen ist man dazu gezwungen mehrere Programmiersprachen bzw. Frameworks zu lernen, um ein erfolgreicher Software-Entwickler zu bleiben. Ein Beispiel für ein neues Framework wäre React, die auf Javascript basiert. Die zweite Änderung ist der Technologiewandel. Mit der Zeit entwickelt sich die Technologie immer weiter und damit auch die Programmiersprachen, die an die neue Technologie angepasst werden muss. Ein Beispiel für eine Technologieverbesserung wären die neuen Grafikkarten von GeForce. Damit Spiele und Software von diesen Grafikkarten unterstützt werden konnten, mussten die Programme umprogrammiert werden.\nDie letzte Änderung ist der Organisatorische Wandel. Ein Beispiel hierfür wäre das Programmieren mit der Cloud und Git-Repositories. Mithilfe der online-Repositories kann man ganz leicht auf den Software-Code von überallher zugreifen. Dies erleichtert viel Arbeit und macht die Zusammenarbeit mit Menschen unkomplizierter, da jedes Team-Mitglied leicht Änderungen online durchführen kann ohne ständig USB-Sticks mit seinen Kollegen auszutauschen, worauf der neue Code ist. Mithilfe der Git-Repositories ist man daher immer automatisch auf dem neusten Stand. \n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1264138,
      "meta": {},
      "text": "The area of software development is a constantly changing one. A major reason for that is never stopping innovation of technology. \nFor example, it may take a team of software developers one years to implement a good type of encryption into their product, maybe an online chat platform. One day after they pushed their changes on production, a research team located at TUM finds out, that that type of encryption isn't all that secure and come up with a new type of encryption. So now the software developers have two choices, either they leave the old type of encryption in their product and risk it being called out as unsafe, or they spend another year implementing the new one. \n\nOrganizational changes are a natural part of any company. Examples are when employees retire, new ones are hired or when employees change departments. These kind of changes have to dealt with properly. So when the leader of a software development team leaves, a new one has to be appointed immediately, because there cannot be a ship without a captain. Another type of organizational change are mergers of two companies. Often the whole company has to be restructured. \n\nRequirement changes happen when for example the client wants to change a feature that has to be implemented into a project. These kind of changes affect the completion time of the project, the budget, diverse risks and needed resources. \nExample: Client wants to change color of a button \n\nTechnology changes happen when a new kind of technology is invented or an existing one is innovated. These kind of changes spread quickly, because they are a way to improve ones systems. Faster implementation means having an edge over competition.  \nExample: Invention of touch screen on phones\n\n  ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264653,
      "meta": {},
      "text": "Change in SD happens due to change happening in the circumstances and environment surrounding the project. As an example, there might be new law/regulations affecting the desired product to an extend, that this has to be incorporated into the development process.\n\nRequirements changes: The product is needed to fit different expectations along the way, e.g. another system needs to be integrated and therefore another API needs to be addressed.\n\nTechnology changes: A new technology arises to enable problem solving in a new, more efficient way, e.g. connecting people through the arise of smartphones.\n\nOrganizational changes: The set of people responsible for the product, involved in the development or destined for usage is not fixed and can change over time, e.g. a team member gets replaced by someone else with different strengths and weaknesses, which results in shifts of responsibilities throughout the entire team.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264958,
      "meta": {},
      "text": "There are lots of reasons why change happens in software development like : 1)Poorly Defined Requirements where this can result in defective requirements, incorrect requirements and missing requirements. 2) someone of the teammember left out at the beginning of the project which could lead to  they could not meet a deadline cause they miss some of the team member, 3)The world continues to change independently of any projects that might be affected;, 4)Updated Technology cause maybe there is a new and better technology enters the market, 5)Bugs and Defects, 6)The customers keep changing their minds so you have to follow up the customer requirements.\n\n-requirements changes: when the customer need to add a new feature to his Website. \n-organization change : ex the scandal of Facebook, that they do not protect their users-Data. so they changed their structur and strategies so they care more about the user privacy.\n-technology changes: for example when a video on youtube had more than billion views and it is interrupted. in this case needed the change to fix this problem, so now a video on youtube can reach to this number of views and bayond without any problem more.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262105,
      "meta": {},
      "text": "Wir befinden und in einem Zeitalter, in welchem Digitalisierung eine zunehmend größere Rolle spielt.\nDeshalb gibt es auch eine stetig wachsende Anfrage nach Software.\nProbleme werden immer komplexer und Anforderungen von Kunden immer spezifischer.\nDeshalb spielt Abstraktion eine zunehmend größere Rolle, also eine vereinfachte Darstellung des zu lösenden Problems ,mit Hilfe von sog. Modellen.\nDurch modellieren wird Komplexität verringert und dient als Kommunikation zwischen Entwicklern die an einem Projekt arbeiten, bzw. hilft auch Außenstehenden das Problem besser zu verstehen. Dadurch kann wiederum das zu lösende Problem in kleinere Unterprobleme aufgeteilt werden, welche zuerst gelöst und dann wieder zu einem Ganzen zusammengefügt werden.\n\nAuch Kommunikation spielt eine immer zunehmend größere Rolle. sowohl mit dem Kunden, als auch innerhalb eines Entwicklungsteams. Es ist immer wichtig zu wissen was genau der Kunde will.  Softwareentwicklung beschäftigt sich nicht nur mit dem programmieren, sondern auch mit den Vorstufen, also dem verstehen des Problems. dem diskutieren einer möglichen Lösung in einem Team,....\n\nDie Kontrolle der Software Entwicklung schweift auch immer weiter von dem konservativen und starren Modell der \"organizational maturity\" ab und orientiert sich viel mehr an dem Modell der \"agilty\", in welchem lernen durch Fehler und Anpassungsfähigkeit an das zu lösende Problem immer wichtiger wird. Ein Beispiel eines agilen Modells ist das sog. Scrum, welches auf empirischer Prozess-Kontrolle basiert.\n\nEin Beispiel für Änderungen in der echten Welt sind Computerspiele:\nwährend vor mehrere Jahrzehnten noch simple Spiele wie Pac Man im Trend waren, sind die Anforderungen nach neuen Spielen mit noch besserer Grafik und noch besserer Story oder ähnlichem immer höher und diese werden auch weiter steigen wie sie es bisher getan haben.\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1262214,
      "meta": {},
      "text": "In order to stay ahead of the curve in the competitve market of today a company has to adapt and develop new ways to be more efficent and to achieve costumer satisfaction, otherwise it would be eclipsed by its competitors.\n\nIn the context of software development this change can occur rapidly during a project if the customer isn't happy with the product. E.g. when producing an application for a specific customer who switches to a new hardware brand the software developers have to addapt.\n\nRequirements changes:\nThe requirements of customers change constantly. E.g. a software developing firm for a car manufacturer has to addopt to the needs of its customer when a new model of cars is released\nTechnology changes:\nTechnology evolves constantly, often new solutions are more efficent then old ones. E.g. advances in hardware(better CPUs) or advances in software(new Operating System)\nOrganizational changes:\nThe structure within a company has to change when it expands/restructures. E.g. a software deloping firm expands to a new location and gets a new regional manager",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263197,
      "meta": {},
      "text": "Change lies in the very nature of technology and in particular computer science, one of the fastest evolving fields of technology. As we try to solve new problems adapt to new conditions, we need new ideas and approaches. Over the years software projects have become more complex. Therefore also the methods of software development have undergone a transformation. Changes can be divided into the three areas of requirement changes, technology changes and organizational changes. \n\nRequirement changes pertain to the demands brought to us as developers. The landscape of IT in general has advanced, so have the requirements for software. With every milestone of engineering, let it be the internet, smart phones, personal computers etc. Developers have been tasked with constructing corresponding software. As certain technologies have fallen out of favor. For instance you will hardly ever be tasked to develop a driver for a floppy disk reader in 2022.\n\nThese changes often go hand in hand with technology changes. Needles to say technology has changed significantly and is still advancing. With your average nowadays Laptop having gigabytes worth of storage projects have been able to grow larger than imaginable 30 years ago.\n\nWith programs becoming larger we have also seen organizational change. Back when Projects were smaller they could be easily completed by a single person. Now that we have large applications, artificial intelligence , autonomous driving etc. we need entire teams. Thus introducing different workflows such as the waterfall model or later scrum.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263488,
      "meta": {},
      "text": "In software development change occurs due to new technological advancements, changing demands of customers, etc. These are events that can happen suddenly without precedent, meaning software developers must learn new skills to adapt to change. One example of this is companies choosing to migrate from Java to Kotlin. Kotlin, a programming language released late 2019, can be considered as a technological advancement since it poses many advantages in comparison to Java. In comparison to Java, it eliminates null references, introduces Coroutines and other features. Therefore, software development teams will migrate to Kotlin, even if this means  taking time to refactor code.\n\nRequirements changes is when stakeholders needs change, a bug in the product emerges,  altering the timeline of the production timeline. One example is a company developing an app for a ride-hailing service provider receiving news that drivers now need to go through additional identity checks before they can provide ride-hailing services. \n\nTechnology changes are when companies adopt new technologies and in-cooperate them into the product. Developers must now learn new skills  in order to continue developing the product. One example is companies migrating from Java to Kotlin as explained above, where developers must new learn a new programming language.\n\nOrganizational changes is when the inner structure of the company changes. For example, the company has now split the software development team into two smaller teams, each focusing on different areas of the product. This means developers will have meetings within their team and together with the other team instead of one big team. This means they will have to organize what updates to give to either meeting depending on the occasion.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264492,
      "meta": {},
      "text": "Change in software development happens because the demands and/or regulations for a given software or product change. An example for this would be the demand change in the phone industry, when the phone marked switched from mobile phones to smartphones and therefore new software had to be developed.  \n\nRequirements change is a part of software development and happens if, for example, the needs or requirements of the customer change or new technologies become available.   \n\nTechnology changes is the concept of improving upon a given technological innovation. An example would be the gaming industry, where game engines, such as Unreal Engine, get improved upon, in order to push the development in technology forward.    \n\nOrganizational changes refer to the idea of adopting new strategies and procedures to handle changes in external areas of a competitive market. An example could be the change or inclusion of a new development software, such as switching the Framework during an app development process. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264562,
      "meta": {},
      "text": "With the exponential growth in software development, it becomes more and more integrated with our lives as well as with various fields. These fields may require rapid and continous changes due to high demand, extra features or possible errors in their system. For example, few months ago Amazon had to update the software for Alexa as it challenged a 10 year-old-girl to stick a penny into a plug. In this case, the software update was crucial since it affects lives in a deadly way.\n\nRequirement changes may be due to expectancy of the client against the reality. A client may expect a solution for an impossible problem and the development team may try to rephrase the problem to have a solution that fullfills the client’s needs.\n\nOrganizational changes may be due to minor or major effects. Minor: If the team refuses to work with each other or refuses to do what is expected from it, or if it is managed badly an organizational change would be essential to succeed in solving the problem. Major organizational change could be because of various elements. For example, if a software team is working with a company abroad and due to war the other company stops working, the team may need a replacement for the role of the other company.\n\nAn example for the tech change would be the adaptation of solving a software problem with other/newer/better programming language. There are over 700 programming languages and some are dying. Years ago, there were popular languages used in software development that had to be adjusted to other languages i.e. java.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265939,
      "meta": {},
      "text": "Software development is an empirical process, which can not be planned in its entirety, projects have to constantly be checked and goal revaluated. Change can have different reasons, for example new legal regulations, new competitors or a change in the market environment. All these different reasons can affect a software development project.\nNokia was the market leader for mobile phones, for quite some time, until smartphones came along and stole all their market share. This is an example of a change in the market environment because the market was demanding smartphones but they failed to act on that demand and subsequently lost their leading position.\n\nRequirements changes happen due to change in the requirements for a given software system. For example if an online payment system is being developed for a customer and that customer wants to add another payment provider to that system.\n\nTechnology changes happen due to change in the technology used for a software system. For example if a phone manufacturer has to make sure their phones are compatible with the new 5G standard.\n\nOrganizational changes happen due to change inside the company. For example if a company is developing a software system with one development team and they decide to add another team and split the responsibilities between them.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266493,
      "meta": {},
      "text": "Veränderungen in der Software Entwicklungen passieren, da sich die Software Entwicklung immer der echten Welt anpassen muss. So hat sie sich zum Beisiel in den letzten Jahren aufgrund von dem weiterverbreiteten Nutzen von Smartphones die Anforderung in soweit verändert, dass für ein anderes mobiles Betriebssystem programmiert werden muss. Dies hat sich natürlich auch stark auf die Arbeit der Entwickler ausgewirkt. \nEs gibt im Grunde genommen drei verschiedene Gründe, warum eine Veränderung notwendig weden könnte:\n1. Wenn sich die Anforderungen ändern, also zum Beispiel werden durch größere Datenmengen vielleicht optimiertere Algorithmen benötigt.\n2. Wenn sich die Technologie verbessert/verändert, also zum Beispiel eine neue Programmiersprache entwickelt wird, die nun eingesetzt werden soll, wie zuletzt mit kotlin bei vielen Firmen.\n3. Wenn sich der organisatorische Aufbau der Firma verändert, also zum Beispiel wenn von einem hierarischen System zu einem System wie Scrum gewechselt wird.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1260813,
      "meta": {},
      "text": "//using part of my homework from ss21\n\nOur world is getting more and more complex with a time. And that requires changes in different branches, and also in software development. As an example for a change in real world, nowadays you can order some food home, which was impossible 20-30 years ago.\n\nRequirements changes:\nNowadays the requirements can change really often and everyone should be ready for changes. In software development specialists that can adjust to new technologies, learn something new in a short time, are in demand.\n\nTechnology changes:\nThe technologies are getting more advanced. Earlier we could unlock our smartphones with a PIN-code, now we usually do it with the face-ID or fingerprints. It's better secured and more comfortable for users.\n\nOrganizational changes: \nOne team of software developers can be in different countries. As we now have internet, people can work from every world corner and communicate via zoom or any other platform. It is very convenient that people don't have to go to a particular country in order to work for a specific company. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1260814,
      "meta": {},
      "text": "During software development, changes can occur due to new updates in technology (be it advancements or newly discovered vulnerabilities), evolving user dynamics, as well as regulatory changes. An example of such a change is the GDPR (data protection law) in the EU, which compelled developers to introduce the necessary changes (e.g. prompting users to acknowledge cookie setting on websites) to ensure compliance. \n\nRequirement changes can occur when the client or user base shift their priorities, or as a result of regulatory changes such as the GDPR example raised earlier. These directly affect the product backlog and the developers have to adapt their existing approach to satisfy these new set of requirements.\n\nTechnology changes can occur as a result of new technological developments or newly revealed vulnerabilities, which may reduce the competitiveness or security of the current software, requiring change. An example of a response to these changes are OS updates which occur after vulnerabilities have been revealed.\n\nOrganizational changes are changes in the structure of/process employed by the development team, and include manpower changes such as a restructuring of the teams, or a shift in the design paradigm that the company is employing. These could be due to decisions made by top management or pressure from stakeholders, possibly even as a secondary effect from other areas of change.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1260833,
      "meta": {},
      "text": "Generally, before the delivery date developers already hold a minimum valuable product (MVP) or a potentially shippable product.  Changes occur because of improvements that need to be realized leading to a better product (MVP), to a process optimization and/or to costs saving too. We are not just talking about change after an MVP is already done and ready - changes can and do happen at any point before then as well!\n\nThese changes can occur under various considerations.\nFrom the client perspective, new requirements could be defined.  E.g. the client want to have a new functionality in the game allowing a music play while starting the game. \n\nFrom the engineer perspective, a new idea or a better understanding of the software (product) can also force him to adjust the game. E.g. by making it possible to select  a different music for the game according to the customer´s preferences.\nModifications can also be from technological order.  E.g. the developer uses Java and during the project updates  are available, which could enhance the product quality. \nFrom an organizational point of view, adjustments can take place if the working team is affected or should be reformed because a team member is sick and cannot work.  Or in a pandemic situation such as Covid-19, the whole working process need to be reorganized (more digitization and agility)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1260836,
      "meta": {},
      "text": "Ein Grund, warum es im software development häufig zu Veränderungen kommt ist, dass sich die Anforderungen des Kunden im Laufe des Projekts ändern, da dieser sich beispielsweise einfach um entscheidet. Auch kann es ein, dass die Anforderungen des Kunden nicht 1 zu 1 so umgesetzt werden können, wie er es gerne hätte. Es kann aber auch an technischen Gründen liegen, wie beispielsweise wenn sich die Computertechnik generell weiter entwickelt oder neue Updates für bestimmte Sachen rauskommen. Noch dazu kann es aufgrund von Organisatorischen Umstände zu change kommen, Beispiele hierfür wären politische Entwicklungen (z.B. neue Datenschutzrichtlinien) oder strukturelle Veränderungen im Software-Development Team.\n\n\nrequirement change:\nEin Beispiel hierfür wäre ein Open World Computerspiel, in dem anfangs die Anforderung war, dass der Main-Character, den man spielt, nur gehen, laufen und sprinten kann. Jetzt hat sich aber der Kunde während des Entwicklungsprozesses dazu entschieden, dass der Spielcharakter auch springen können soll. \n\n\ntechnology change:\nWährend eines Software-Projekts bringt IntelliJ ein neues Update raus, welches grundlegende Veränderungen mit sich bringt. Um mit dem Projekt fortzufahren sind die Programmierer jetzt dazu gezwungen sich an das neue Update zu gewöhnen oder sie müssen sich eine andere Entwicklungsumgebung suchen.\n\n\norganizational change:\nEin Beispiel hierfür wäre, wenn bei einem Software-Development Team der Chef wechselt und dieser eine andere Arbeitsweise hat bzw. auf andere Dinge mehr Wert legt, sodass sich bestimmte Anforderungen/Abläufe für das Team ändern. ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1260847,
      "meta": {},
      "text": "change in software development happens because there are coming new problems, challenges and requirements all the time which need new solutions. A example from the real world is for example the development from ear pods with cable to ear pods with bluetooth.\n\nRequirements changes happen when there is e.g. a new better standard or users have new requirements so you have to adjust your product. A example for that is the development of the cars to electric cars. People and the government are more interested in environment friendly cars so many car brands started to develop them.\n\nTechnology changes is the result auf innovation, research and development of a technology or principle, which is often more efficient and / or cheaper. A Example for that is the development from normal mobile phones to smartphones. There was a research about the display and functions and after they developed it, it became the standard because it is more efficient then the normal phones before.\n\nOrganizational changes happen when a company for example changes his inner structure. For Example by completely redesigning the website of the company, which awakes the interest of customer or makes it clearly arranged.\n\n\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1260848,
      "meta": {},
      "text": "We have always had to deal with changes in software development. There are several actors responsible for this change as the market competition, innovative ideas, and challenging technologies occur every day. \nNew constraints can be responsible for the change (governmental regulations or environmental restrictions).\nNetflix for example had to deal with change in the Ukrainian-Russian war. In fact, it suspended its services in Russia in March and has halted the development of all Russian tv-shows and movies.\n\nRequirements change have an impact on the functionalities. it can happen for example when customers need a new feature in an app or external restrictions require the removal of a functionality from an app.\n\ntechnology changes occur when new technologies (new processor, new camera...) are used in the product . With phones and laptops industry, technology changes happen always .\n\nGenerally in a software development, Employees leave, other are hired, so new teams are created.\nThis is considerate as an organizational change.\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1260849,
      "meta": {},
      "text": "Change in Software Development usally occurs due to changing enviroments or new knowledge on mentioned enviroments like finding new ideas to improve workflow.\n\nThe knowledge expansion could be due to experience working in the respective fields and finding a better workflow for the company/team changing up the game to reach higher productivity.\nThe change in the enviroment could be caused by new co-workers, the change of the underlying systems (e.g. simplification of processes in the used programming language) or changes in law and technology.\n\nThe change of requirements, e.g. law changes or new laws like the german DSGVO require many projects and running systems to adpt to the new situation in increasing their security standards and data flow. This usally is forced by law makers but can also be forced due to exploits in the code changing up the checks and tests on such exploits leading to more testing requiring an adaptiation of the workflow.\n\nAnother regular reason for change is the updating of underlying  hard- and software.\nThose Technology changes force a team to adapt their way of working to react and stay efficent. This leads to new workflows enabled/forced by easier or new cirumstances.\n\nThe organizational changes come in many variations like new leader- / ownership or new employees introduced to the team. This makes it neccesary to create a new workflow to meet new expectations or integrate others into the team. Another reason would be a reshuffle of workforce creating a new skillset in the team requiring a new work concept.\n  ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1260860,
      "meta": {},
      "text": "Software development changes from a defined process to an empirical process (agile), because software development needs to face changing requirements and technical changes, and needs to respond to changes through agile means. For example, to develop a chat software, the development team needs to face various problems, such as the rapid growth of the number of users, the matching of corresponding additional functions, etc., which requires the application of the Empirical process control model, another good example is Scrum.\n\nRequirement change is the change to the software development requirements, refers to the functional or non-functional change requirements of the project or software proposed by the customer. For example, for an App development, the customer suddenly needs to add a function or change a certain function.\n\nTechnology change refers to the fact that due to development costs and other reasons, the project team has to replace the determined technical implementation method, such as canceling the procurement plan for a certain tool.\n\nOrganizational change refers to the process in which the organization adjusts, improves and innovates the elements of the organization (such as the organization's management philosophy, working methods, organizational structure, staffing, organizational culture and technology, etc.) in a timely manner according to changes in the internal and external environment. In software development, examples of organizational change include agile change, personnel optimization and adjustment, etc.\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1260861,
      "meta": {},
      "text": "Why change happens in software development:\nI think change brings the existing software improvement of state and function. It is very important and makes the software meet its intended purposes, keep up with times and not be eliminated. There are a lot of reasons for example the mentioned requirements changes, technology changes, organizational changes and sometimes also code language changes, policy changes and so on.\nExample: The software runs with 4G before, and should be upgraded to 5G\n\nRequirements changes:\neg: The client wants better customer experience or performance, for example the software can run faster or reduce its cost......\nThe requirements can from customers, clients, goverments, companies...... With the development of market demands or other elements, the requirements change, so that the programmers must modify their codes to meet new requirements.\n\nTechnology changes:\neg: The software should adapt to the newtest technology for example AI, RPA, 5G and so on\nTechnology or tools develop rapidly and the old one must be replaced by the latest one\n\nOrganizational changes:\neg: Someone in the development team has resigned and his/her work must transfer to other people. Or the company has changed its leader groups and the requests of bosses change.\nThe organizational policies change or the organization has some transitions in personnel, structure and so on.\n ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1260865,
      "meta": {},
      "text": "Change in software development happens, because it's tools (IDEs, libraries, coding languages, etc.) that developers use are constantly advancing too. What was best practice yesterday, could be outdated or unsafe to use today. An example for this would be the release of .NET Core, making C# platform independent and thus a more substantial competitor to Java in that area.\n\nThat example would fall into the category of technology changes, but there is much more to that topic. Technology changes could also mean better computing power, debug tools, or new platforms entirely. A good example would be old gaming consoles like the NES, being extremely limited in the amount of textures and colors that it was able to display at once, so developers had to come up with creative solutions to work as effectively as possible within the boundaries of the console.\n\nSuch a hard frame to work within could also be seen as an requirement, but generally, the requirements are defined by the customer (or the project description, company owner, etc.). These are usually summarized and well documented, so they are clear to all team members. Changes in these requirements could be caused by the customer wanting to add another feature or the focus of the project shifting into a different direction.\n\nOrganizational changes are caused by a change in the environment of the developer. For example, the development team could be switching to home office, or the team could be getting a new team member, so the workloads need to be readjusted.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1260866,
      "meta": {},
      "text": "Changes happen in software development when the development process is not correctly defined and some of the requirements can not be fulfilled. Another reason is that the software was built on a technology which is not mature enough to use. Also when the needs of clients change, the change also needs to happen. \n\nA change of software development in the real world is that the open source software is distributed free of cost with permissions to modify the code. Modern software development cares more about the collective growth of technology over man's profit. It leads to lower cost for creating new software and the increasing scope of innovation. It allows software development company to offer the best products and services to the clients.\n\nRequirements Change is inevitable and it affects the overall costs, quality and schedule of the software. The effects can be beneficial for the stakeholders when the requirements change are handled correctly at the right time. Otherwise it will result in project delays and failure.\n\nThe developers must keep up with the current technologies and try to gain exposure to the newest concepts. For example, AI has showed great potential over the past few years. And it’s still developing at a pace that few expected. This technology is now playing a great role in our everyday life, from smart home devices to streaming media services. And it is inevitable that AI will trigger a new era in software development.\n\nTo improve quality, lower the cost, compress development cycle time, and  increase customer satisfaction, organisational changes occur in software development. An example is the approach to control software development, which became through agility. The early-age software was with set patterns and a linear approach. Now the new approach allows reiterations and a more collaborative environment. Software is split up into several components and they are incrementally developed, which can make the software more efficient and adaptable.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1260871,
      "meta": {},
      "text": "Änderungen können im Software Development mehrere Ursprünge haben. Einerseits kann der Auftraggeber, Kunde und Endverbraucher Änderungen beantragen. Diese beinhalten meist Veränderung bei den \"requirements\", andererseits kann auch das Entwicklungs- oder Testteam Änderungen z.B. im Code oder Design beantragen.\nBeispielsweise kann sich im Laufe des Projekts herausstellen, das etwas auf geplante Weise nicht umsetzbar ist, weil die neue Technologie noch zu viele Bugs hat, (teilweise) inkompatibel sein kann oder sogar den Erwartungen nicht entsprechen kann.\n\nDes Weiteren kann es sein, dass Abschnitte des Software-Lifecycles entweder teilweise oder komplett fehlen, übersprungen wurden, uneffektiv definiert wurden oder ignoriert wurden.\nWenn man sich z.B. nicht an die \"requirements\" hält, kann man sich nicht wundern, wenn am Ende ein komplett anderes Programm entwickelt wurde. Wenn man ein Strategiespiel programmieren soll, aber nicht drauf achtet, ob das \"requirement\" rundenbasiert oder Echtzeit definiert, kann aus einem „Total War“-Teil auf einmal ein XCOM werden.\n\nEs könnte sich aber auch herausstellen, dass gewisse Interessenten oder Interessensgruppen nicht berücksichtigt oder miteinbezogen wurden. Wenn solche Interessenten zu Beginn des Projektes nicht dabei waren, können dadurch \"requirements\" fehlen.\nEs könnte sein, dass man sich noch an weitere Regelwerke, wie z.B. neue oder übersehene Gesetze, halten muss, oder dass gewisse Zielgruppen nicht ausreichend berücksichtigt wurden. Hier könnte z.B. fehlende Barrierefreiheit oder mangelnde Funktionalität für diejenigen, die damit arbeiten sollen, ein Grund sein, warum das Projekt nochmal geändert werden muss.",
      "score": 41.7,
      "language": "GERMAN"
    },
    {
      "id": 1260878,
      "meta": {},
      "text": "Change happens in software development, because of various circumstances. These can be flaws in the software, changes in the budget, a shorter deadline and many more. However, change isn't always bad, for example, an optimization of the source code could reduce power consumption and improve performance. But avoiding change totally in software development is impossible, because of the creative nature of software development.\nIt isn't simply mass-producing a certain item, it's a solution to a certain problem. Therefore there are countless solutions and each is unique.\nHowever, most changes to software development come from the outside world. These can be summarized into three groups of changes. Requirement changes, technology changes, and organizational changes. Firstly requirement changes happen because the client changed the importance or amount of requirements. These range from small, superficial ones to massive overhauls. An example could be a massive cyber-attack damaging infrastructure and data. Therefore, the client could request a change of priorities such as much more security and privacy in the product, but at the cost of lower performance and a higher budget. This could also go the other way around.\nThe client could have financial troubles, therefore he lowers the budget. As a consequence, the quality of the software will suffer.\nSecondly, technology changes impact software development by innovation. As an example, quantum computing threatens current cyber-security by making passwords useless. Therefore software must respond to this change. An example is 2FA, which wasn't invented to specifically counter the risk quantum-computing poses but improve security in general.\nLastly, organizational changes impact software development from the inside. It can be as plain as a new staff member, new supervisor or being transferred to another team. However, it can also be a change in the work environment or a policy change in the company, which is much more meaningful.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1260880,
      "meta": {},
      "text": "A vital reason change happens is the external environment of a software development. New regulations imposed by regulators force change. Furthermore, constant new technologies and market competitors releasing new software serve as a reference point, giving indication to flaws in one's software requiring change. \nA real life example for change is the success of the electric car manufacturer Tesla. Stricter environmental regulations for traditional fuel-based car manufacturers led to the emergence of the electric car, a new technology.\n\nRequirements change occurs when the requirements for the successful completion of a project change during its lifecycle. An unclear vision about objectives at the start of a project may lead to these changes. For example, stakeholders may test the first version of a new GUI and only then realize that vital features are missing and therefore change requirements.\n\nTechnology changes occur when new inventions come to life which create or enhance products, technologies and entire markets. An example is Blockbuster, a home video rental service provider, who were once the market leader. The emergence of new technologies such as video on-demand streaming services, which Blockbuster failed to adapt to, left the company filing for bankruptcy. \n\nOrganizational changes are changes which have a significant impact on the organization as a whole. A technology change within an organization, for example a website re-design or a new e-commerce platform,  is an organizational change. Likewise for instance the implementation of a new department or major personell change also constitute organizational changes. \n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1260882,
      "meta": {},
      "text": "Softwares are designed to meet market's expectations. The needs of a user are constantly changing, which leads to changes in market requirements. During a software's lifecycle, there will be threatens from outside competitors, changes of customer wishes, and updates of laws and regulations...These are all reasons for changing, which indicates software should keep updating to fit itself to the changing environment.\n\nFor instance, in the real world, due to the corona pandemic, wearing a mask has become a must in public areas. Regarding this situation, the Apple company has launched IOS 15.4 for iPhone. With the support of which Face ID can be used to unlock iPhone even if the user is wearing a mask.\n\n1. requirement change\nDue to internal defects or external pressure, the requirements for software have to change constantly. E.g. when new competitor join the market, when government changes regulation...then software has to be changed to adapt to this movements in requirements.\n\n2. technology change\nWith the development of techniques and methodologies, software has to be updated to the newest changes in the technology world. E.g. computers operating system are updated regularly to match new functions, apps also have upcoming version with the help of new technology.\n\n3. organizational change\nIn the business world, the structure of a company, especially the stakeholders has a great impact on software. For example, the preferences and dislikes of management and shareholders would  probably  be reflected by the software used by the company.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1260885,
      "meta": {},
      "text": "Change happens in software development all the time, because it is impossible to predict all eventualities and the world is not static: technologies can change, as well as the job market or the tax situation.\nThe important thing is, to adapt when the situation changes. \nOne famous example of change in software development was last year in December the Log4j security issue: Companies which used it had to stuff the security issue as fast as possible, and had to rethink their ussage of libraries.\nThese events are impossible (or at least very hard) to predict, and because of that a project will never happen without change of plans.  \nExamples of new situations are edge cases which haven't been considered in the planning stage, or that libraries have new security issues (technology changes), team members leave(organizational changes) or the founding gets shortened(requirement changes).  \n\nOther example of change are for example the increase of technology: Problems which would have been very hard to solve 20 years ago are now easy to solve, just by the speed increase of computers. Another example would be the increasing chip prices in the last 2 years which happened because of several political and technological reasons and lead to a slower increase in performance at least for budget computers --> All things which influence software development!!",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1260914,
      "meta": {},
      "text": "Changes in software development happen due to the very nature of the field: not only does technology constantly evolve and adapt, but such changes can also lead to changes in demand from consumers and clients. For example, with rapid advances and the popularization of artificial intelligence, many applications and services have implemented machine learning and data analytics models.\n\n- Requirement changes could come from a client's request: a change in budget or demands for newer technology are good examples.\n\n- Technology changes could come from an advance in processing speeds and creation of new techniques. Examples of such changes are: the aforementioned concept of AI becoming more and more common for improving user experience, or even updates in hardware such as faster processors.\n\n- Organizational changes can happen as a result of an internal changes: maybe your team decides to use a different framework, or your company rearranges a project's structure or leadership, for example.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1260924,
      "meta": {},
      "text": "During the development of a software product, there will occur changes that will require a reaction from the development team. In a real-world scenario, it is impossible to expect the initial conditions on the market, available technology, workforce condition, government regulations, and many other factors, to hold during the entire production of the software.\n\nConsidering the area of technology, a change in the available technology might have an effect in the tools used by the development team. For example, the launch of a new cloud service could give developers an advantage during development and a newly discovered vulnerability in a tool could force developers to use another one.\n\nRequirement changes might be the result of other changes, including technology changes, market changes, or even government regulations. All these changes might lead to the end-product needing different requirements. For example, new government-issued regulations on personal privacy might require additional forms on the front-end or the data stored in a database.\n\nOrganizational changes from the client's part might change the requirements of the end-product by changes in the budget or through oder administrative decisions. For example, a change in the database used by the client's company will require the end-product to be adapted to these changes. Other organizational changes from the client might require the product to be developed faster, which will have an effect in an eventual planned schedule and the quality of the end-product.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1260931,
      "meta": {},
      "text": "Software engineering is a collection of techniques, methodologies and tools that help with with the production of a [...] software system [...] while change occurs. (slide 86)\nBut why change? Due to the simple fact, that the world is constantly evolving, through innovation, societal shifts (which also impacts work environment and the needs of people), new market situations, etc.\n\nOne significant example for a company, which didn't adapt to these changes is Nokia. They were once market leaders in telecommunications, but failed in just a couple of years, because they didn't switch to smartphones, lacked innovation, didn't upgrade their software and overestimated their status.\n\nRequirements changes:\nCustomers change their needs daily, laws and regulations evolve and bugfixes have to be done due to miscommunication. Because of growing awareness of big data in society and new law regulations, companies (like Meta) have to adjust for their customers and integrate techniques for higher data security - or they would loose trust and customers all together.\n\nTechnology changes:\nBecause humans push the boundaries of what is possible in technology, the innovations in hardware also affect software. Motherboards are becoming faster, more efficient, lightweight and smaller. As soon it was possible to display more colors in displays, every TV/ Video Game console/... company also had to evolve with their products.\n\nOrganizational changes:\nInternal changes occur as well. Ford were pioneers in using the assembly Line in 1914, but from that on the organization has evolved, e.g. the digitalization forced them to hire more and more software developers and the needs of them are evolving because of modern work-life balance concepts, or as we see currently due to Covid: remote work, so new work flows/ systems have to be established for keeping up with the changes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1260937,
      "meta": {},
      "text": "Während eines Software Entwicklungs Projektes können immer Veränderungen auftreten, da es, wie schon im Namen enthalten, eine Entwicklung gibt. Klar gibt es am Anfang schon Vorraussetzungen und Ziele wie das Produkt am Ende aussehen soll, jedoch muss die Umsetzung erst entwickelt werden. Dabei kann es dann schonmal vorkommen, dass nicht alles sofort so funktioniert wie es soll und dass immer wieder kleine oder große Details verändert und angepasst werden müssen. Ein Beispiel wäre, wenn ein Pizza-Lieferant gerne einen OnlineShop machen möchte, wo man per App die Pizza bestellen kann. Dabei könnte es sein, dass die ursprüngliche Anforderung nur ein Online-Shop war und dann während des Projektes die Idee dazugekommen ist, das ganze als App umzusetzen. Das wäre dann ein Wechsel sowohl in den Anforderungen, als auch in der Technologie und würde eventuell auch noch einen organisatorischen Wechsel erfordern, da vielleicht eine schöne Benutzeroberfläche zusätzlich benötigt wird und jemand aus dem Team diese Aufgabe übernehmen muss. Dadurch könnte es wiederum sein, dass diese Person dann nicht mehr ausreichend Zeit für ihre eigentlichen Aufgaben hat und diese dann von anderen Team-Mitgliedern übernommen werden müssen. An diesem Beispiel sieht man, dass die Veränderungen über die verschiedenen Bereiche übergreifend sein können und ein gewünschter Wechsel in einem Bereich, eine Änderung in einem anderen Bereich notwendig macht. Auslöser für eine Veränderung können sowohl der Auftraggeber sein, z.B. wenn ihm etwas an der Umsetzung nicht gefällt. Aber auch das EntwicklerTeam, wenn z.B. etwas bei der Umsetzung nicht so klappt, wie sie es sich eigentlich überlegt hatten.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1260945,
      "meta": {},
      "text": "\nThe reason for change in software development is that there is a lot of innovation in the world. Every day we experience that there is new technology (for example better computers or new ideas which could make a big difference in the world) which needs software to implement it. Nowadays software engineers use AI or Machine Learning to implement those things, which was unbelieveable a few years ago. Furthermore changes in software development are really necessary when it comes to working smart. AI or different softwares can be used to make the development of software much easier. It can be a big mistake to not make a use of intelligent software which hels someone to develop a new software. In addition todays society has many requirements, expectaions and new preferences in APPs or different software (interactive websites, quick online support, fast processing, ...) which leads to new approaches in the development. For example for big projects it is necessary that teams can work together really efficient. This is why additional software like Scrum is used for software development.\nOrganizational changes refer to on how to work in teams on new software. For example with Scrum.\nTechnology changes happen everywhere as i mentioned before. A good example for new technology is AI or the huge amount of data which needs to be processed (Big Data).\nA required change is the development in teams for exmaple with smart software or the use of data which is provided by social media or different sources.\n\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1260951,
      "meta": {},
      "text": "Reasons for  changes in software development : \n1: Change in customer requirements can lead to certain changes in the software development process.\n2: Due to rapid advancement in technologies, there is always a need for change in software development. \n New technology can lead to change in a  certain process, leading to change in software development.\n3: Some management changes can lead to changes in requirements, aspects, or the introduction of new processes, leading to change in software development. In other words restructuring of an organization can lead to changes in software development.\n\n4:Sometimes poorly defined requirements by customers can lead to continuous change in software development. \n \n\nLet's take the example of dm(drogerie market) which has opened a new fulfillment center ,  with new technology,an online shop and a new management team.\n\ntechnology changes: Due to the introduction of new technology and processes, software development had to be changed. For e.g the switching of javascript framework to react framework used for their online shop.\n\nrequirement changes: As processes were optimized and automated, customer requirements were also affected leading to change in software development. Changes in requirements in the future can also lead to continuous changes in software development. \nFor example Now dm wants to track the time spent on reading description of each product on its website, as the requirement has been changed/modifed software company has to work further on the changes due to a new/changed requirement.\n\nOrganizational changes: Due to changes in management and restructuring of the organization, the whole management system has to be modified leading to changes in software development. \nFor instance the new CEO has restructured the designations and their powers, now the whole HR system has to be restructured as well.\n\nRef: Solution last year.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1260957,
      "meta": {},
      "text": "As our world is changing, so is the software we use as we travel it. The tools of preference (like programming languages and IDEs), are updated and thus changed or loose popularity whilest new ones arise. Software development as an empirical process is becoming more and more popular. As change and creativity is what makes companies successful. New trends, new features and new preferences force developers to adapt to their surroundings. A real world example would be a Company called Nokia, which didn't take the Hype-Train on smartphones, and shortly after lost their leading position in the phone-market, as the new trend turned out to be a breakthrough. \n\nYou could categorize these changes into: \n-requirement changes, where the Customer might change the current requirements (product backlog) he had in mind before. So the stack of tasks can lose or gain weight at every step of development.\n-technology changes: there are new features people expect a software to have. As example better graphics on a new tripleA-Game. This is heavily driven by competition and the market. \n-organizational changes are also often the case, as you might get a new Team-Member or supervisor. Or you might join a new project and thus you are forced to work with a new set of people on a common goal. You will have to become efficient as a team and set quarrels aside, which is a process that needs time. Also while doing sprints in a SCRUM, there might be more work, and less free time, which forces you to revisit your work-life-balance.\nAll in all a Software Developer has to embrace change, and become independent, spontaneuos and creative to fully become great at what he is doing. \n  ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1260958,
      "meta": {},
      "text": "In the present time, every action taken by every human alters the world in one way or another. As digitalisation has had a further reach then ever before, these changes can sometimes also concern software development. In the last decade starting with bitcoin cryptocurrency has become more and more popular, leading to new methods of creating new currencies as well as new types of currencies, such as NFTs or DeFi being developed every month.\n\nTechnology changes happen when there is a new type of technology on the market which some customers might prefer over the standard product, this change can be observed for example in the automotive industry, where digitalisation stretches its hands further every day with the introduction of screens and electric cars.\n\nOrganisational changes occur when the ecosystem in which the developer works in gets altered. This might happen by getting a new CEO, new team members or getting a new contract with another company.\n\nRequirement changes are sometimes imposed by changes in the project founders vision, or one could generalise maintenance unter requirement changes by arguing that the requirements constantly change with a growing database/userbase and need to be maintained. \n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1260961,
      "meta": {},
      "text": "Change occurs through new achievements by companies or science that lead to different behaviour or the use of different techniques, objects, etc., making the overall work more efficient. A real world example would be the change from a waterfall project to today's agile approach for projects in business. \n\nRequirement change: The requirements of a project changes. E.g. a customer wants to have a website that is not only stable for 1.000 user but also for 100.000 users\nTechnology change:  The used technology for a project will be changed. E.g. a customer wants to have used a different framework in his website.\nOrganizational change: Something in the organisation of the Project will change. E.g. a developer leaves the team so the workload has to be now rescheduled.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1260969,
      "meta": {},
      "text": "The software development field is known by its fast changes and dramatic growth. Nowadays everyday we discover a new technology or a framework, from static web pages to a world based on web3 and metaverse, from the very intuitive work methodologies like waterfall to the modern alternatives like agile scrum and DevOps. First, talking about the beginning of the working methodologies in the software development fields with the waterfall methodology which was established in 1970 by Winston w. Royce. Waterfall is a project management approach based on linear progression and sequential approach in which the input of every phase is the output of the fully completed last phase. This methodology used to be efficient enough until it reached the point where it can't handle the explosion of the changing speed in the development process anymore. And that was the beginning of a new era, the era of the agile methodologies. While waterfall is a project management approach that emphasizes a linear progression from beginning to end of a project, agile is a way to manage a project by breaking it up into several phases.It includes consistent collaboration with partners and nonstop advancement at each arrange. Once the work starts, groups cycle through a handle of arranging, executing, and assessing.In general agile software development methodologies centered around the idea of iterative development, where the product is now developed throughout an iteration of several repeated cycles. The raise of this new methodologies family is driven by the high speed of changes and the large variety of choices and solutions.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1260975,
      "meta": {},
      "text": "Software engineering is a field that is getting updated rapidly. The reasons for changes are mainly technological innovations and changing demands. As our daily life steadily getting more intertwined with software applications, the area of software engineering updates and improves itself. \nTechnological changes, changing requirements and organizational changes are the main areas of changes and in Softwate development.  My personal opinion is: technological changes are the broadest area of change, because it triggers other areas of changes. Nowadays there are over 700 programming languages. Before high programming languages were invented, it was very complicated to implement a concept.  As programming languages kept on getting advanced, the needed requirements got changed radically, as developing a software became a lot easier. \nOrganization of software developing process also changed through the technological innovations.\n For example, modeling a software for object-oriented languages are a lot different than a not object-oriented language.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1260980,
      "meta": {},
      "text": "Die meisten Gründe entstehen aus dem Trieb nach Innovation, der für viele Bereiche von Bedeutung ist. Viele Bereiche streben nach dem Fortschritt, wichtiger jedoch ist, dass die Lebensqualität aller Menschen dadurch gesteigert wird. Denken wir beispielsweise an die Geschichte des Webs. Vom Web 0.0, der Errichtung des Internets, bis zum jetzigen Standpunkt Web 3.0 und bald Web 4.0. Mittels dieser Entwicklung will man das Internet durch neue Technologien nützlicher machen. Im Web 1.0 konnte man einfache Seiten erstellen ohne große Funktionalitäten. Web 2.0 führte Beispielsweise die Shoppingfunktion ein. Im Web 3.0 gibt es Websites, die viele Funktionen besitzen, was durch neue Programmiersprachen und Technologien, wie Künstliche Intelligenz entstanden ist. Web 4.0 wird die KI noch weitertreiben und zudem neue Dinge wie die Blockchain nutzen, damit man nicht mehr ins Internet geht, sondern das Internet überall ist. Dadurch ändert sich unser Lebensstandard (Digitalisierung).\n\nRequirement changes entstehen durch das Übersehen von Anforderungen oder wenn Nutzer plötzlich neues fordern. Dies kann spontan auftreten und agile Teams müssen damit umgehen können. So kann es sein, dass Nutzer auf einmal einen Darkmode wollen.\n\nTechnologische Änderungen sind selbsterklärend. Künstliche Intelligenz oder die Blockchain zwingen die Hardware sich mitzuentwickeln. Beispielsweise müssen sich viele Entwickler nun an Apples M1-Chip anpassen, der Komponenten kombiniert.\n\nOrganisationsbedingte Änderungen entstehen zum Beispiel, wenn sich das Team ändert oder der Vorstand gewechselt wird. Interessant für uns werden beispielsweise die Erneuerungen von Twitter, die durch den Kauf durch Elon Musk entstehen werden.\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1261001,
      "meta": {},
      "text": "New technologies get invented every once in a while and, if the latter is superior to a previous one in all points, then companies that continue using the old technology will eventually lose market shares and popularity.\nAn example of this is when digital cameras were born. Companies like Kodak did not follow the innovation brought by digital cameras and had real difficulties surviving. \n\nRequirements changes : A requirement change can happen when the client changes opinions on the product and would like a different version of it. Another example would be if new constraints are brought to the table such as environmental or political limits. Functionality changes also of course apply to this area. The teams need to keep track of this changes. \n\nTechnology changes : Researchers discover new ways of solving problems and some are more efficient than the others. You need to keep yourself updated on new technologies to avoid falling like Nokia when smartphones were invented.\n\nOrganizational changes : This is another important area of change and can happen when teams change. The members need to work with other colleagues and the whole process of getting in touch, share ideas and opinions needs to be done again. This takes time and new members do not always get along with each other. Other types of changes in this area could be a budget change, that could happen during the COVID-19 pandemic for example.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1261008,
      "meta": {},
      "text": "1) Change in Software Development\nSoftware development is changing because the environment is changing and the software produced during software development is not isolated, though it has to adapt the reality. Moreover the world is becoming more and more complex and software development has to provide methodologies to deal with this change. For example artificial intelligence requires new methods for testing, maintaining and developing in general.\n\n2) Areas of Changes\nRequirements changes occur while developing and maintaining software. While developing software this could be for example that the customer realized that he needs something additionally or something in a different way than planned before. Software Engineering should be able to react efficiently to such things. Compared to the complete lifetime of a software, the developing process might be a relatively short time, as a consequence the maintenance requires a lot of changes. Software development should be able to fulfill such requirements quickly. Maintainability is very important. \n\nFor larger software projects, that take more time to develop, it is normal that technology changes occur \nwhile developing. This might be a new processor that offers more valuable potential for the customer to get a competitive advantage. Nevertheless the software have to be adapted to that technologies.\n\nOrganizational changes happens for example when the budget is cutted, as a consequence they have to decide whether they have to reduce the quality in general or the range of functions. Alternatively it could take longer. \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261018,
      "meta": {},
      "text": "Change in software development and in general happens because humanity and especially people working in RnD are always on a quest to improve the things we have and thus optimise processes, systems, software etc. If a one such solution is found, it is use by companies and then by people, and so depopularising or making the predecessor technology/process obsolete. For example, smartphones made mobile phones obsolete, which made landlines and payphones obsolete, which made letters obsolete, which made pigeons and messengers obsolete... (who knows the laptop I'm working on right now might be obsolete in 20 years)\n\nTechnology change : a new technology is invented which is used in an industry (transistors and semiconductors, long distance dialing/DDD, mp3 and mp4 as a new way of storing audio and video files instead of CDs and DVDs ) \n\nRequirement change : the requirement of the consumers changes and the industry needs to adapt to that (mobile phones were only used for calls, but then people wanted to send text messages too, and then also get access to the internet and have entertainment on their phones, so the smartphone was born)\n\nOrganisational change : the process used to get something done is changed. (\"the introvert software programmer\" to Scrum system of software development)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261025,
      "meta": {},
      "text": "Changes happen because the requirements for the products and the expectations/needs of the customers or users are constantly changing. Moreover, advancing technology also means that other technologies have to adapt, especially to make use of the newer ones. \n\nWith requirement changes the customer plays a large role, since this could express not only in the development process still new desires, but also (possibly already developed) subrange no longer for necessary. \n\nFor example, a customer orders a website for a restaurant, through which online orders should also be possible. Initially, the drinks were to have their own sections (e.g. subdivision into hot and cold drinks). Now, however, the customer no longer wants the drinks to be subdivided, which means that a change has to be made. \n\nFurthermore, technical changes can happen if the customer first considered the technical adaptation of the website regarding smartphones/tablets to be unimportant, but then changes his mind during the development process.\nFor example, first the customer doesnt want a website that has a mobie version, but then he changes his mind and asks for a mobile version of his website.\n\nLastly, organizational changes can occur where the customer does not always have a direct influence\n\nThis happens, for example, when a member of the team is on vacation (\"foreseeable\" organizational problem) or in the event of illness (\"unforeseeable\" organizational problem). \nFactors such as time difference between customer and service provider can also occur, but can be solved relatively easily through good communication.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261040,
      "meta": {},
      "text": "Change happens in software development because software engineers have to keep up with the consumer's constantly evolving needs and wants and adapt to their requirements.\nRequirements change : Consumers constantly have new needs, with new problems emerging in each period of time, and so the software applications must adapt to that.\nTechnology changes : Software development has to incorporate the new technologies that come with an era of time\nOrganizational changes : Software development has to have a flexible approach when it comes to the organization of the tasks for example. Because some problems might arise in the process and the team should know how to deal with that accordingly\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261041,
      "meta": {},
      "text": "Things don't go according to plan in some phases of the software development process because of unforeseen external influences. An example could be the changing customer behavior towards a product or service.\n\nRequirements changes are some requirements, so things needed for the final product that change. For example, a company is producing sweets, and now the firm has decided to also make vegan and sugar-free candies. Therefore some requirements will also change concerning the software (e.g., rebuilding the webpage -> e.g., having a button to see only all vegan products, etc.). \n\nTechnology changes are pretty straightforward, as it simply means that if some new technologies emerge, they will most probably influence the software development process, as it leads to new opportunities. AI could be an example, changing the way of writing software.\n\nOrganizational changes occur within an organization, as the name suggests. An example could be a manager of a company deciding on changing some structures in the firm that will impact the firm and all of its components (people, substructures, products, company culture, and software).",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1261047,
      "meta": {},
      "text": "A good explanation would be form the greek philosopher Heracltius : No man ever steps in the same river twice, for it's not the same river and he's not the same man. As the world around us changes with the fast evoulution of technology, social media and our understanding of the world the legal or the business side of things change as well. An example would be the increasing number of startups instead of working for companies. It shows the increase oi chances to build a big company without much money. Requirement changes can be due to a bunch of factors such as identifying an error in planning or a change in the main goal as a project proceeds. Legal or political reasons can cause such a change as well. Technology changes happen mostly because of new advancements and better equipment or algorithms. Being able to change the technology if a new advantageous one comes is really important. Organizational changes is more important for the teamwork among workers. It can be useful to increase morale and build a positive work space",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1261059,
      "meta": {},
      "text": "Change in software development may happen for many reasons, such as new equipment and hardware, new customer needs, better technologies and emergence of new tools. There must be many changes that have happened to the industry, but if I were to name one, then it would be the shift from functional to object oriented programming. The change that utilizes the technological leap of the 2nd half of the 20th century and beyond, such changes come as a result of progress and ever-growing experience of people involved, as well as constantly growing standards on the side of the customer.\n\nBoth within a theoretical project and throughout the history of the industry there could be / were:\n- Requirement changes: changes caused by alterations in user requirements, increased understanding of the stakeholders' needs or other reasons, possibly forcing increased workload and other risks that must be managed. An example of a requirement change could be politically motivated cut content from a video game (CoD:MW2 as example.)\n- Technology changes: come about whether you can foresee them or not, bringing new opportunities but also forcing the market to adapt by making outdated technologies unfit to compete. As such, the increase in hardware efficiency made it possible for laptops and smartphones to appear.\n- Organizational change refers to action in which a company or a business change its organizational structure, be it cutting human resources or opening a new department. An example of an organizational change is the shift from waterfall to scrum model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261065,
      "meta": {},
      "text": "Since there is a huge focus on research in information technology and requirements are changing rapidly (e.g. because of chaning demand or new trends), software needs to be flexible and easy to be extended or modified. Also, because international competition is rising, software needs to be competitive and adapt quickly to new environments and demands.\n\nRequirements changes happen e.g. when gouvernments change policies and the software has to comply to new rules.\nTechnology changes happen very often, for example when security issues were found in a used dependency and it has to be replaced or new, faster frameworks are being developed. A software then has to be able to switch to other/newer components.\nOrganizational changes can occure, when a team member leaves the team or the company restructures its departments by splitting up or merging teams. \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1261066,
      "meta": {},
      "text": "Change happens in software development because the problem/topic being addressed by a software solution is likely to change over time. Let's consider the world during the Covid-19 pandemic as an example.\n\nWhen it comes to the requirement changes, consider the company Pfizer for example. Before Covid-19 its vaccine production line might have had a different software configuration which did not account for extremely high demands (which is a new requirement) for vaccines. Consequently, Pfizer had to improve and alter its old software to handle more vaccines and thereby reach the target efficiency.\n\nWhen it comes to the technological changes, during Covid a new vaccine technology became mainstream, respectively mRNA Vaccines. The old software state of the art is likely to be changed in order to produce and test this new type of vaccine. Thus, Pfizer software had to be further developed such that it would account for what the new technology involves. \n\nWhen it comes to the organizational changes, consider the same Covid-19 scenario, now however from the perspective of governments. To address Covid-19, not only Pfizer had to undergo software changes. Companies like Johnson&Johnson and Moderna too. Now assume that governments had their own primitive e-vaccine wallet software which can register vaccination status if a patient got his vaccine from public hospitals only. With this scenario, it is reasonable to assume that the government software must undergo organizational changes because due to Covid-19 citizens can now be vaccinated in so many different locations (e.g. Haus Artz, Public Vaccination Stations etc ...). Now, the e-wallet software must be adapted such that it can work with higher optionality from places.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261080,
      "meta": {},
      "text": "The change happens during the process of receiving the problem statement from the customer and releasing the final product for public access. Oftentimes change occurs at the testing stages because some things don't work properly or could be made more efficient/ better, while other changes happen during the development process, sometimes because the problem statement was wrongly interpreted or the design had some flaws that were discovered later on.\n\nA real life example for change is ?? stuff like climate change? Is the question supposed to be based on software development changes? If so then I guess the fact that things like video games or Windows get constant updates because of better found solutions for handling problems (or for the latter case not lol) so the process of using and improving software is an example of change. \n\nTechnology changes are based on the fact that technology is constantly evolving and sometimes outdated technology is used during the software development process so switching to the newer one might bring advantages (or just realizing that different technology is needed for the solution one is working on).\n\nOrganizational changes are what happens when structural change happens within the development team i.e. new leadership, new people joining the team or some leaving, etc.\n\nRequirement changes are linked to the previously stated changes because with constantly changing working environment the requirements for a successful end product change with it, but also when the solution doesn't work as planned change is required based on how the problem was approached. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261128,
      "meta": {},
      "text": "The reason why change happens in software development is that it does not take place in a closed, predefined, and never changing system, nor do the developed products. Software is an integral part of the real world and as such, is subject to outside changes. People's behavior and preferences change, technology changes, and so on.\nA concrete real-world example of this would be the emergence of more powerful computers, which among many other things, have serious security implications for software. This is partly because of the fact that malicious attacks on software systems become more and more sophisticated with these more powerful computers. We have thus seen a rise in the importance of good cyber security over the past couple of years.\n\nThe term requirement changes describe a situation in which the intended use of a system changes, meaning its users have new or different wishes and needs, that the system should fulfill. An example of this would be that people demand the integration of PayPal into an app, in order to allow an easier payment process. \n\nThe term technology changes describes a situation in which the underlying technology used during the software development process changes. For example the emergence of blockchain technology allowed for the creation of previously impossible systems.\n\nThe final term, organizational changes, describes a situation in which the organization of which the team is part of changes. This could mean the introduction of scrum methodology into the software development process. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261143,
      "meta": {},
      "text": "1.\nWandel ist unausweichlich und passiert dauerhaft. Es werden neue Richtlinien beschlossen oder neue Technologien erforscht. Daher müssen sich Softwareentwickler dauerhaft anpassen und ihre Projekte neu gestalten. Wandel bringt viele Vorteile mit sich wie beispielsweise bessere Entwicklungsfähigkeiten. Das führt zu  besseren Businessmöglichkeiten.\n2. \nRequirement changes: \nAnforderungsveränderungen können in der Entwicklungsphase eines Projekts auftreten und sind häufig unausweichlich. Diese können beispielsweise durch eine Veränderung des Budges oder auch Fortschritte der verwendeten Technologie bewirkt werden.\nTechnology changes:\nDiese folgen meist auf einer Änderung der Anforderungen. Somit kann ein Programm aufgrund steigender Popularität an Schnelligkeit oder Leistung verlieren und man sollte es beispielsweise statt in einer Hochsprache in einer weniger abstrahierten Sprache schreiben, um an Schnelligkeit zu gewinnen.\nOrganizational changes:\nDiese Umfassen Änderungen in der Organisation eines Projektes ohne Rücksicht auf bereits vorhandene Projektstrukturen. Sie können durch einen Personalwandel oder auch Technologieänderungen erzwungen werden.  Dabei kann die beispielsweise die Innovationslust stark steigen.",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1261145,
      "meta": {},
      "text": "To keep pace with the enormous hardware advancements and to maintain control of huge projects, modeling and abstraction have become essential to any development team.\nTaking Google as an example: It would be impossible for any one person to keep track of the whole system, but by dividing it into smaller (sub-)sections and assigning those to individual teams, you can maintain a well ordered hirarchy.\n\nChange in software development requirements can be caused by:\n- the legal situation; not only with traditional legislation catching up to the virtual landscape, but also active changes to existing policies\n- market demands, e.g. a shift in consumer mentality, trends or pressure from competitors\n\nAn example for the latter point would be the growing demand for cloud storage and computing. As more and more people incorperate mobile devices of all kinds into their everyday lives, support for syncronized and independent access to their data and other devices has been increasingly important.\n\nChanges in technology can be:\n- new security breaches\n- new features in recent software updates (e. g. C++20)\n- new hardware\n\nChanges in hardware for example have a big impact on software development, since in order to stay competetive, you have to utilize faster and more efficient hardware.\n\nOrganizational changes can be:\n- Consumer demands (update schedules, deadlines)\n- Expansion of a development team (scaling resources to match demands)\n- Arranging compatability across independent software developers\n\nAn example for the latter would be the growing need for compatability between all kinds of different software. With an ever expanding internet developer need to make their software easily accessable and - most of all - integrateable (namely through a well desgined API).\nCommunication and exchange bewteen otherwise independent teams becomes essential.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1261146,
      "meta": {},
      "text": "Change in software development is nothing uncommon and it actually happens a lot. It occurs because Software Development depends on many external factors like for example budget, changes in requirements, technology, organizational changes and many more things. If the requirements of the customer changes for the project, the team has to adapt to that. If the customer suddenly needs the finished product 1 week earlier, the team has to pick up the pace and reassess their time schedule. If technology changes, the team has something to reconsider again. For example, a new technology or a new tech trend is available, which is much faster and efficient. While the team has worked with the \"old\" technology on the project, they should revaluate, if it would be worth it to start all over again, using the new technology like for example AI in the past. If organizational changes occur, things can be really difficult really quick. For example, if a teammember decides to quit or happens to be sick and can´t work, someone has to replace him or the timeschedule needs to be reassessed. Questions like, how do we make up for the missing member is a really difficult question to solve. An example for a real world change would be the Russian Invasion in the Ukraine right now. Because of that, BMW has to adapt and is now postponing IT Projects into the following year to reduce risk, keep liquidity high and to have a puffer.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261157,
      "meta": {},
      "text": "Change happens in software development because of various reasons some of them are that the requirements, organization, or available technology of projects change. \n\nrequirements changes:\nRequirement changes mean that the framework conditions of a project have changed, which could be due to new changes in the law, such as the copyright reform\n\ntechnology changes:\nTechnological changes occur because new technologies are released that are in some way better than their predecessors, an example of this could be new programming languages\n\norganizational changes:\nOrganizational change describes the change in organizational circumstances such as the process toward a new infrastructure or a change in personnel\n",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1261159,
      "meta": {},
      "text": "Software Development constantly changes because the world changes constantly aswell. Software needs to be adapted to the needs of the users of the software. Myspace as an example was the market leader in social media back then. Now hardly anybody knows it anymore, because it failed to change and adapt to the consumers needs, in contrary corporations like Facebook succeeded also by developing new features.\n\n\nrequirements changes: \nWhile the market and consumers always change their behavior and also the world is a changing place 24/7, software needs to adapt to keep in sync with the requirements given by the market, consumers or laws. Let`s take Cookies for an example, which have been regulated several times by the EU commission. Websites had to adapt their code until a certain date.\n\ntechnology changes: \nAs Hardware for computer constantly gets better and new architectures for components are designed, the software needs to adapt to use the hardware in the most efficient way or even work. E.g. if Intel releases a new CPU with a new architecture Microsoft and Apple need to adapt their operating systems in order for it to work on the newly designed CPU.\n\norganizational changes:\nCompanies and the organisation inside of a company constantly change aswell because of cultural changes, monetary situations, policies, technological changes and many more factors. If a company decides to build a new server park, they will also have to adapt their company intern software to their new server.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261163,
      "meta": {},
      "text": "Veränderung in der Software Entwicklung gibt es ständig, da sich die aktuelle Technik sowie die Anforderungen der Benutzer sehr schnell und häufig ändern. Noch schnellere und effizientere Technik ermöglicht immer mehr Features und Anwendungssituationen. Gut zu sehen ist das am aktuellen Smartphone Markt: Smartphones wurden sehr schnell populär und somit entstand auch ein dringender Bedarf an Software für diese Geräte. Mit der Entwicklung der Technik öffneten sich aber völlig neue Wege. Smartphones haben genug Rechenleistung um Computer zu ersetzen, wodurch erneut Software benötigt wird, welche diesen Anwendungsfall unterstützt. Die Veränderung gehen also meistens mit dem Fortschritt in der Technik einher. Sie können aber auch durch sozialen Wandel in der Bevölkerung oder durch strukturelle Entwicklungen entstehen.\n\nBeispielsweise möchte der Kunde ein Programm, das eine Datenbank verwaltet. Es fällt dem Kunden erst während dem Testen auf, das das Programm zu unübersichtlich ist und daher noch mehrere übersichts Seiten eingefügt werden soll. Das ändert die Anforderungen an das Programm, sodass Architektur des Programms umgebaut werden muss.\n\nEbenso kann es sein, das dieses Programm jetzt seit zehn Jahren in Entwicklung ist und sich mittlerweile der Standart für Datenbanken geändert hat, da sie so noch Effizienter sind. Das Programm muss dann wieder auf diesen neuen Standart umgebaut werden. So kann Technologiewandel die Softwareentwicklung beeinflussen.\n\nGenauso kann es sein, dass das Unternehmen sich entscheidet jetzt keine Datenbanken mehr zu verwenden sondern nur noch Excel Tabellen. Dies ist eine große organisatorische Umstellung, die wieder viel Anpassung im Programm benötig.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1261173,
      "meta": {},
      "text": "Die Softwareentwicklung verändert sich aus vielen Gründen. Z.B.: entwickelt sich die Softwareentwicklung mit den Technologischen und Gesellschaftlichen Entwicklungen mit. So müssen Programmiersprachen immer komplexere Dinge bewältigen können, da die Rechner auf denen moderne Programme laufen immer leistungsstärker werden. \n\nIn der \"echten Welt\" hat ein simples Smartphone heute mehr rechen Leistung als die Computer die für die Berechnung der Mondlandung zuständig waren. Durch die stärkeren Umgebungen für die Programme haben sich die Programme auch in sofern weiter entwickelt das man nicht mehr direkt mit dem Rechner durch die Maschinensprache (Assembler) kommunizieren muss, sondern man kann ich Hochsprachen programmieren.\n\nDes weiteren haben sich auch die Anforderungen entwickelt. Das bedeutet das man heute viel komplexere Programme brauch und dadurch immer größere Entwickler Teams und durch diese größeren Entwickler Teams brauch man auch immer besser Organisation. So sind in den letzten Jahren viele neue Systeme aufgekommen mit welchen man Teams, gerade die Entwicklerteams, besser Organisieren kann.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1262171,
      "meta": {},
      "text": "Just like everything that exists, technology is always evolving. What was once considered an enormous amount of memory space is now something that can be found in any USB Stick, just with much more space. And this change is a necessity, because customers always want what is newer, more advanced. Companies thus need to adapt to this change. For example, in the fifth generation of videogame consoles, Nintendo lost in sales to Sony, partly because its console did not support the use of CDs, which could hold more storage than cartridges. Therefore, Nintendo needed to adapt on the next generation of videogame consoles and created one that could actually support CDs.\nThere are three types of changes in regards to software development, those being requirements changes, technology changes and organizational changes. The first of these refers to when what is needed to create a certain product changes over time. For example, when it is planned to take a certain time to develop something but it ends up needing more time to be fully and correctly developed (like it happens with many modern videogames), and therefore ends up being delayed. \nThe second one refers to the change in technology required to finish a product. For example, when the development of a videogame has to change its engine mid-development because of problems with the previous engine the development had to face with. \nLastly, organizational changes refer to changes in the organization of a project. That could be because of a change in direction or a needed replacement of some members. \n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262490,
      "meta": {},
      "text": "The main goal in Software Engineering is to optimize and improve the current software. The environment is changing frequently. Increasing complexity leads to difficulties to deal with, therefore the current software has to adapt as fast as possible. Finding errors in a system is also part of the job. \n\nThe first change is the requirement change. The System has to be usable not just with Windows, also other operating systems such as MacOS and Linux have to be included. Another point worth mentioning is that the program could be further coded with java instead of C++. \n\nSecond change area is technology-based. Computer and network improve steadily. Long time ago just a little amount of GB space on a Computer was luxury. Nowadays you can easily get some TB via Cloud Computing for little money.\n\nThird is organizational. A firm can have 3 developers, but just next week almost 20. Therefore the task and goal of an developer changes quiet often. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263041,
      "meta": {},
      "text": "Change is an inevitable aspect in almost all areas of life, industry and technology. The future is uncertain and it is impossible to know what will occur; and as a result expectations, existing technology, processes, perspectives etc. are all subject to change. One example of change in the real world is the creation of the internet which allowed for the transfer of information at speeds never before possible. Software development is no different and is constantly exposed to changing conditions - such as changes in requirements, technology, and organization. For example, software being developed for a firm could suddenly require more functions than before as the company expands its operations (such as entering a new industry) simultaneously to the software being developed. Updates to the technology behind or related to the software development - such as the advent of cloud computing over the last decades - could mean that software developers need new training and a new approach to creating the software. Organizational changes could be a restructuring of the roles within the company responsible for the development of software, potentially leading to an abrupt change in individual responsibilities among the software development team as individuals take on new duties and pass on previous ones.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263295,
      "meta": {},
      "text": "Why does change happen in software development?\nWell, first of all new inventions or newer developments happen constantly everywhere in the world so in order to adapt to it and improve the software, it is necessary to apply changes. A similar and more specific reason could be the constant changes in technology nowadays which also leads to a change through adaption. Another reason could be wrong estimation of the outcome of e.g. a written program. If the endresult does not match up with the planned one, some steps of the developing procedure needs to be changed.\nAn example that does not apply for software development, but the real world would be COVID-19. \nWhy, you might think?\nDealing with this virus has been a long and exhausting process for everyone - the governtment and the citizens -.\nAt first the solution to minimize the infections was a world-wide lockdown but soon everyone realised that this was not quite the right the right path: sure, it did in fact minimize the infections, but just for a short period of time because not only did the virus come back after the lockdown, it also spread much fasterthan before since people, or lets say humans, are beings that need social interaction to survive.\nThis made specialists realise that their thinking path needs to be changed since the original plan did not work out. Soon vaccines were developed that began to get rid of the virus. Well at least we thought so, who knew that the virus would mutate and become undestroyable, even if people got vaccinated? \nThanks to this realistic example we can conclude: change is necessary and it helps us to adapt to difficult situations!\n\nThe requirement management is responisble to make sure to meet the customers needs.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264060,
      "meta": {},
      "text": "Die zunehmenden Komplexitätsanforderungen, die an Software gestellt werden, haben auch zu Änderungen in der Weise geführt, wie Software „hergestellt“ wird. Ein gutes Beispiel dafür sind Github oder ähnliche Versionsverwaltungssysteme, die dazu dienen, bestmögliche Zusammenarbeit in der Softwareentwicklung zu ermöglichen. Diese Zusammenarbeit ist nötig, da das Problem der hohen Komplexität von Software durch Stückelung des Projekts in viele Teilaufgaben und Zuteilung dieser zu den einzelnen Entwicklern umgangen wird. Visualisieren lässt sich der Aufbau eines Projektes beziehungsweise einer Software durch Modelle, beispielsweise durch UML-Diagramme. Es können sowohl bereits fertig entwickelte Softwareprojekte analysiert als auch alte Projekte rekonstruiert oder neue geplant werden. Auch existiert eine Vielzahl von Ansätzen, Software zu entwickeln, so zum Beispiel das auf dem Prinzip der agilen Softwareentwicklung basierende „Scrum“. Der Ansatz hierbei besteht ebenfalls darin, das vom Kunden durch den product backlog möglichst genau beschriebene Produkt durch Bildung von sogenannten sprint backlogs, die dann in sprints schrittweise realisiert werden, zu entwickeln. Ein weiterer Vorteil dieser Art Softwareentwicklung ist die Kommunikation innerhalb eines Teams, die durch regelmäßige Abhaltung von stand up meetings garantiert wird. Allgemein gilt, dass ein Entwicklerteam in den Eigenschaften der einzelnen Entwickler möglichst heterogen sein sollte. Dadurch ist sichergestellt, dass nicht nur die Gedanken und Bedürfnisse einer Personengruppe in das finale Produkt einfließen, sondern dass die objektiv möglichst beste Software entwickelt wird.",
      "score": 16.7,
      "language": "GERMAN"
    },
    {
      "id": 1264136,
      "meta": {},
      "text": "Software engineers attempt to develop software systems that solve a problem in the real world. The real world is constantly changing, so software development is in a constant state of change, as well. One example of change in the real world is when Apple introduced the iPhone. The large touchscreen design disrupted the business model of companies such as Nokia and Blackberry, and eventually rendered the mobile phone software development of these companies obsolete in many markets.\n\n\nRequirements changes can occur when the problem that the software engineering team is striving to develop a solution for changes. Perhaps the client decides that she needs a slightly altered product than was originally planned, or perhaps the client decides that the entire problem statement needs to be drastically changed. In both cases, the software development team will need to adapt and reform their approach to creating a solution.\n\nTechnology changes can occur when the tools that the software engineering team is using to solve the problem change. For instance, it can occur both with the emergence of new technologies or the discovery of flaws in currently utilized technologies. In both cases, the team will have to adapt and may start using different tools to develop the end-product.\n\nOrganizational changes can occur when the structure of the software engineering team or other affiliated teams/groups changes. For instance, if the scrum-master leaves to work for a competitor in the middle of a sprint, then there will have to be a replacement scrum-master and this can disrupt the rhythm of the team. \n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264834,
      "meta": {},
      "text": "Change will always happen in bigger projects because it is impossible to determine all factors influencing the project.  Change can happen because the imagined solution cannot be fullfilled due to some factors like physical impossibilities, higher expenses, bad communication and also because of changes in the law e.g. data security regulations or emerging better technologies. \n\nExample: The new Berlin airport. Berlin started the construction in 2006 and pushed its deadline for completion several years until it was finished in 2021. In such a long time frame it is inevitable that there will be changes in human resources and responsibilities. That leads to sometimes changing priorities or a changing vision in the project. If the deadline for completion is pushed several times, the cost for the whole project will rise. If the customer does not have a higher budget, decisions have to be made which pieces or functions of the project won't be in the final version. \n\nRequirement changes: These changes occur when the customer changes the requirements of the project e.g. due to the different personal vision of a new manager or of their own customer requirements. For example, the new manager wants a different design for the ordered website than the previous one. \n\nTechnology changes: These changes happen when a more suitable technology for the product emerges. For example software companies, developing a game for PS4 since several months have to decide if they will also or only work on a PS5 version when Sony announced the new console generation. \n\norganizational changes: These changes refer to e.g. the changes in processes and stakeholders inside an organization. When processes relevant to the Software project e.g. the agile software development method change, it will have an impact on the project too. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265010,
      "meta": {},
      "text": "Software kann sich ändern um dem Nutze zugänglicher zu werden. Bsp: Youtube hatte früher Sterne Bewertungen. Allerdings ist es zugänglicher nur mit positiven oder negativen Bewertungen zu reagieren.\n\nEs gibt drei Arten von Veränderungen bei Software:\n- Veränderung aufgrund von Anforderung\n--Bsp: Youtube hat keinen Daumen runter mehr.\n- Veränderung aufgrund von Technologie\n--Bsp: Websites mussten auf Mobilgeräte und TV-Geräte angepasst werden\n- Veränderung aufgrund von Organisation\n--Bsp: MS Teams, das sich durch online-schooling auf Unterricht umstellen musste\n\n",
      "score": 41.7,
      "language": "GERMAN"
    },
    {
      "id": 1265079,
      "meta": {},
      "text": "Changes in software development is because of the continuous demand for the new features and for keeping the software up to date in order to make it able to survive with the changing technologies and requirement.\nSince nobody expected the pandemic and because of that most of the works becomes online and for that a lot of software application had to change them in order to adapt with the online uses of that for example: google meet added more features to it in order to make it more reliable for online meetings.\n\nRequirement changes: When there is a new, additional or change in the requirements by the customer in order to utilise it in more productive way.\neg.: customer ask to add new feature so that the application is friendly for the disabled peoples.\n\nTechnology changes: Keeping up to date with the technologies in order to get the best efficiency from the software.\nEg: Using the accurate framework or updating software using the new technologies like ML or blockchain if necessary.\n\nOrganisational changes: If the customer or company is changing it's major components like database or employees data etc. then that would be an organisational change.\neg: A company is shifting their area of interest from children to adults in form of it's content or anything.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265859,
      "meta": {},
      "text": "Change is constantly taking place in software development, as the market is subject to constant change. The needs and requirements of the target customers in the markets are constantly changing. For this reason, the analysis and identification of customer needs and requirements is very important for the software development process.\nSince user requirements are constantly changing, the development of software must adapt to these requirements in order to create high-quality software. Developers must meet specific requirements and be aware of specific user constraints when developing the software.  Therefore, in this case, the software must be constantly updated to meet the needs of the users. To achieve high performance, the software must be constantly tested in a test environment to see if it can meet all the important requirements and to ensure that any bug in the software is eliminated. However, the software must always be updated so that users can work with the system smoothly.\nAnother change that is taking place are technological and organizational change. Primarily due to the Covid pandemic, more work is being done from home, and many digital changes have been required in the workplace and in institutions (e.g., universities and schools). There are organizational changes, as some companies need more IT specialists who can manage the technological changes. In order to stay competitive in the market, companies need to be updated with technology and with their system software in order to do their daily business. An example is that more stores are setting up online platforms to sell their products digitally.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265955,
      "meta": {},
      "text": "Change in software development occur for many reasons, that might include: not fully understanding clients need\nor incorrectly detailing or prioritizing the sprint backlog, as well as ignoring some requirements. Also, technologies or priorities might change with time. Eg: Instagram creating Reels as a response for Tik Tok technology.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266142,
      "meta": {},
      "text": "Change happens because what we know today can and will be different than what we learn tomorrow by adding on to what we already knew. Because of this, used technologies or requested features etc. will differ and so will the needs of humans; thus new software methods will be required as time passes as well.\n\nFor example, one feature that is implemented in a software might be later removed again if it becomes redundant due to not being used (requested) anymore, or if there is an alternative and easier methods. (Requirements changes)\n\nTechnology changes alter the way we use our tools are change them entirely. For example, Python 2 was discontinued in 2020, which means that eventually the projects that are written in Python 2 might need to upgrade to newer versions if problems arise due to lack of updates.\n\nOrganizational changes are changes in the structure of businesses. One example would be when the person in charge of a project changes and this person requires the use of other methods than the priorly used ones.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266222,
      "meta": {},
      "text": "Changes happens in software development through 3 areas. \nFirst the Requirements change, it's summarized through the change in clients requests as well as developers improve their understanding of the application domain. For example during the corona pandemie in SS20, the requirement of a handling facility for remote exams\" emerged, which led to additional ressources. Another example  a client, who required a game application that works only for Android and then he changes his mind to make it work for ios too.\nSecond the technology changes aquires is when the software or hardware platform on which the system is build changes.For example  New releases , new updates and then new functionalities appear.\nThird the organizational changes for examples when the  financial budget set to the project at the beginning changes or new team member are hired and now new distribution shoul show up. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1261551,
      "meta": {},
      "text": "The software systems are designed to be used in the real world and changes happen in the real world quite often (very naturally). Therefore it is no surprise for these changes in the real world to affect the software development process, where the software development has to adapt to the real world (and the problem that it tries to solve, that happens to be in the real world).\n\nRequirement changes may occur, when for instance the client/product owner or the user want different or additional features on the system. Then these additional features have to be added to the software.\n\nAs the technology develops and progresses day by day, it is inevitable that there can be technological changes during the software development process. These can be for example a new set of software or hardware coming out. In this case the team may have to adapt their software to this new technology or use this new set of technology in their project to have a more updated software in the end.\n\nOrganizational changes happen, when the due date of a project has changed or a team member on the development team quits the job or can't continue working on this project for any reason. Then the organization of the development has to change and adapt into this new situation.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262515,
      "meta": {},
      "text": "Change tends to happen in software development when the goal that has to be reached changes. There is a multitude of reasons why that can happen. Sometimes it's because the demands of the market have changed or upper management declares that other factors are more important in the project which is why the focus is shifted. \n\nAn example in the real world would be how there has been an ever-growing demand for video conferencing tools due to the global pandemic. With its widespread use case, it is an optimal field and certain companies shifted their focus as soon as they realised how important this software is at the moment. That may have led to an increase in team size or additional funding being provided for this department.\n\tRequirement changes are the term for companies deciding that they have to adjust their goals in order to fulfil the requirements. That may be a need for high performance in the software and that the costumer would sacrifice speed in the development for a quicker software in the long run(coding in c++). \nTechnology changes when the given technology has improved and there is no need to use the current technology anymore. That may be if the project has been going over a long time span already in which technological advancements easily happen. This could lead to a change in the technology being used by the team. \n\tOrganizational change is when a project funding is reduced or a person who was the backbone of the operation disappears. Then the team has to change their focus and potentially reduce their goal. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262699,
      "meta": {},
      "text": "Änderungen in der Software-Entwicklung können aufgrund der Tatsache entstehen, dass der Wissenserwerb ein nicht-linearer Prozess ist. D.h., dass ein neues Detail, dass in einer späteren Phase der Entwicklung seitens des Kunden hervorgebracht wird, die Entwickler zu zwingen ihren Ansatz teilweise komplett vom Anfang zu planen.\nEin Beispiel dafür wäre ein Fahrkartenautomat, der dafür entwickelt wird Fahrkarten eines Anbieters an Bahnhöfen zu verkaufen, doch plötzlich kommt heraus, dasss der Automat auch Tickets von externen Anbietern verkaufen können soll, sodass die Schnittstelle für die Kommunikation mit der Datenbank neu entwickelt werden muss.\n\n\nDas oben genannte Beispiel lässt sich am ehesten bei Anforderungsänderungen einordnen, also dass eine neue Funktion benötigt wird, die noch nicht in der Anforderungsanalyse kommuniziert wurde, zum Beispiel, weil ein Unternehmen dass Bücher produziert und eine Verwaltungssoftware in Auftrag gegeben hat, nun auch Zeitschriften druckt, was eine Änderung in der gesamten Unternehmensstruktur hervorruft.\nTechnologische Änderungen können entstehen, wenn zum Beispiel neue Programme oder Frameworks auf den Markt kommen, die für das zu behandelnde Problem bei weitem besser geeignet sind als die derzeit verwendete Methode. Beispielsweise möchte CDPR in Zukunft auf die Unreal Engine 5 umsteigen, da diese zum einen extern gewartet wird und außerdem eine bessere Performance bietet, als ihre eigene Game-Engine.\nOrganisatorische Änderungen sind Änderungen in der Entwicklungsstruktur, zum Beispiel eine neue Priorisierung der Aufgaben, sodass einer Aufgabe mehr Ressourcen zugeordnet werden, wie ein weiteres Team, dass an diese Aufgabe gesetzt wird.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1262724,
      "meta": {},
      "text": "During software engineering projects the internal and external environments (stakeholders as customers and suppliers or employees) are not stable, but are always in movement. These changes have to be dealt with in software engineering in order to guarantuee that the project is sucessful. In larger projects typically a change management team is involved, that supports not only the project team, but also the project ecosystem.\n\nRequirements are adressed by the \"consumer\" for whom the development is started. By reviewing the first prototypes, testing or a change in the ecosystem the requirements may be adapted. An example for requirements change is the implementation of a new feature for an onlineshop: the original requirement was that the customer is able to put his preferred articles on a wishlist. While testing the business adapts the requirements: It is not only required that the customer can save products in a wishlist, but also to transfer the products directly from the whishlist to the cart.\n\nThere also may be an update of an operating system, interfaces or a new technology on the market, in all these cases there is technological change, that has to be dealt with in software engineering. For example during the implementation of SAP, there will be an update of the system: now all the interfaces that have been built so far have to be checked and adapted in order to work appropriately with the updated SAP version.\n\nOrganisational changes affect the organisation of software engineering teams. For example a team member can leave the company. Then all other team members have to adapt and find a new organisation. If then a new team member comes in again, the tasks have to be transferred and you also have to plan time to introduce the new team member to the topics.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262748,
      "meta": {},
      "text": "Technology changes drastically every year and with that new software is permanently needed. Also the demand of software increases because the world gets more and more digital. An example for drastic changes is the car industry. Each year new cars are released with more and more features. In the near future the first automotive cars will be approved to traffic and especially developing a fully automotive and safe car needs a lot of new software. In this example even the lives of many people depend on how well the software works. \n\nRequirement changes because customers need new software to stay up to date. Software that is already existing just needs to be downloaded or bought so there is more and more software developed in order to cover new problems. Also new upcoming problems require new ways to solve them and therefore new software. \n\nTechnology changes really fast and for companies it's important to keep up with the new technologies to stay competitive. Things like AI changes extremely fast and if you don't keep up with it you will left behind quickly.\n\nOrganization is a really hot topic in the last few years, especially influenced by the covid pandemic. The first time everybody had to work at home and therefore the organization of companies had to change completely. Also society moves and more in the direction of individual working times to work more comfortable according to ones interests and needs. Therefore also the organization in companies has to change to keep up a functional and effective productivity. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263087,
      "meta": {},
      "text": "Because of the technology development and the change of environment in the software development, they may give constains to companies, to force them to make some change. For example when the goverment comes up with new laws that campanies should follow or the market forces companies to change because of their competitors. If you do not want to change, you maybe will be eliminate from the competition. \n\nAt the beginning of the software development customers should give their requirment or their problem statement. If the requirment changes, the direction of the development will also change, because the fuction and the structure of the software have to be changed if the requirment changes. For example if one customer wants one company to design a software for onlineshop. During the development, this customer changes his or her mind and askes for a software for online banking, so that company should change and make a new design for the new requirment.\n\nTechnology changes will also force development teams to change their software during the development. For example nowadays there are many software which not only can be used on a computer but also one smart phone. Before the smart phone came out, most of sofewares were only designed for computer.\n\nThere are two model of software development by organizational changes. One of them is the defined process control model, which is planned, follows strict rules and solves deviations like a production line in a factory. The other one is empircal process control model, which  is without entire plan and they inspect and adapt the development, so that developers have chances to try and optimize. Develop teams may change their model according to their condition.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263172,
      "meta": {},
      "text": "Changes are bound to occur in an ever-changing world. Especially in software development, where production time is a fraction of the time  compared to the automotive industry, for example. \nThose short time spans allow for a great deal of competition, which result in a constant flow of new technologies and methods, so that keeping up to date is almost impossible. Businesses have to, if they want to stay competitive, constantly improve their products and stakeholders will change the requirements regularly. \n\nA good example for change would be the advancements in quantum computing, while not being ready for the ordinary consumer by a long shot, it will have severe impacts on the whole area of computing, with its fallouts not even imaginable. There will be immense changes in Encryption technology and a lot of work is being put in to researching in advance.\n\nRequirement changes:\nDue to fierce competition, a product owner should constantly improve the requirements he sets for his product. This results in requirement changes. The implementation of a short video format which is easy to consume kicked of by the social media platform Tiktok which has been adopted by other companies would be an example of that.\n\nTechnology changes:\nThe IT industry is one of the fasted changing marketplace there are. This requires constant adapting, which if not done correctly could result in bankruptcy of well established firms. Kodak, a photography company, underestimated the significance of digital film and lost a huge part of its market share. A more recent change in technology would be the use of ARM chips by Apple.\n\nOrganizational changes: \nChange in the organizational structure of a company can also change the priorities of set company and its vision. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263390,
      "meta": {},
      "text": "The course of a software development project is determined through a multi-variable equation. Some of them are namely budget for the project, employees, requirements, customer feedback and time. One can have a certain goal or path, but practically it's impossible to control + predict every single variable, hence change in software development is inevitable. \nFor example when Elon Musk decided to create and launch reusable rockets, the software development team at SpaceX definitely had a plan, but as we saw three of the launches failed. Later Elon Musk stated that they were too optimistic with the budget and they had to deal with the shortage of budget, which was probably not planned/expected.\n\nRequirements changes in software development are caused due to a shift in user requirement, stakeholder's needs or simply because new technologies become available. Sometimes project vision might shift towards something else causing a requirement change.\nE.g.: People want cheap contact-less delivery of food, due to the pandemic. Restaurants should acknowledge this and change their requirements to satisfy customers.\n\nOrganizational changes in software development occur when major organizational structures of a company are changed, some are namely adoption of a new business model or new software, change due to government regulations. An example is the General Data Protection Regulation(GDPR), this caused software development teams to change the way they process, store and use data(overall organization). \n\nTechnology change means that new technologies are developed and come into the market, hence as a software development team it can become a necessary step to switch to the new available technology in order to provide an improved product to the consumers. That is why companies should invest in innovation. For example many years ago DVDs were very popular, but were later replaced by streaming services. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263738,
      "meta": {},
      "text": "Hardly any other field is changing as rapidly as Software development. There are numerous reasons for the rapid change. For example, changes in technology are forcing the software development industry to rethink again and again. This was the case, when Apple announced that it was switching from Intel to its own ARM processors. Suddenly, many developers were forced to rewrite their software and adapt it for ARM. Software developers are always forced to react to external changes. They have to react when a customer changes his requirements, for example that the self-driving car should also be able to park itself. But software developers are also constantly exposed to organisational changes. Software developers always work in teams, which, especially in large companies, are seldom allowed to work together on one thing for longer. Restructuring and retraining are normal. There are 2 types of change. The predictable change that follows rules and the sudden and unforeseen change. Resisting both is one of the core issues of software development. Because the software industry is still relatively young, it is often necessary not only to find new solutions to one problem, but also to rethink guidelines and laws, because the problems in the world are often completely new. For example, the EU has been struggling for years to adopt a sensible regulation for data protection. As a result, there are always new demands for adaptation. And this is the case in many areas. The rapid change is therefore due to the fact that software technology is relatively new and also changes and develops very quickly.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264426,
      "meta": {},
      "text": "Das liegt daran, dass Softwareentwicklung kein fester Prozess ist. Es passiert eher selten, dass etwas beim ersten Mal wirklich fehlerfrei läuft und während der Entwicklung können einem auch neue Sachen einfallen oder man muss bestimmte Sachen aufgrund von Budget oder Zeitmangel streichen und so komprimieren. \n\nAnforderungsänderungen:\nWenn man Software entwickelt, muss man immer bestimmte Anforderungsstandards erfüllen, damit das Programm dann auch fehlerfrei und ohne Beschwerden laufen kann. Wenn während der Entwicklung einer Nachrichten-App, die EU beispielsweise neue Internet- und Datenschutzgesetze beschließt, muss das Programm und auch alle noch existierenden genutzten Programme sich an die neuen Regeln einhalten.\n\nTechnische Änderungen:\nTechnische Änderungen können immer mitten in der Entwicklung auftreten, da es auch immer wieder Sachen zum Verbessern und Beheben gibt. Wenn beim Testen Probleme und Bugs auftreten muss sogar im schlimmsten Fall der gesamte Code neu geschrieben werden, bevor es veröffentlicht wird. Selbst bereits veröffentliche Systeme, Programme, Spiele usw. werden regelmäßig geupdatet, weil ihre Nutzer immer wieder Probleme melden.\n\nOrganisatorische Änderungen:\nOrganisatorische Änderungen können entstehen, wenn ein bestimmtes Problem nicht innerhalb der gewünschten Zeit gelöst wurde und so den gesamten Zeitplan verschiebt oder ein Teammitglied unerwarteter Weise ausfällt und jemand anderes seine Arbeit machen muss. Bei solchen Änderungen wird also meistens nicht die Software selbst betroffen, sondern die Planung innerhalb des Teams. Budgetmangel könnte auch dazu führen, dass die Deadline vorgerückt oder hingerückt wird.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264461,
      "meta": {},
      "text": "“The only constant is change” is a famous quote from Greek philosopher Heraclitus. Change continuously occurs all around us and impacts software development. From the perspective of software development three areas need to be considered in detail. But before doing so we will highlight one exemplary development. Blackberry, a manufacturer of mobile devices, used to be one of the most popular mobile phone producers. However, over the course of only 5 years, this came to an end. They simply missed the customers’ demand of so called “Smartphones” that made the physical keyboard, the USP of Blackberry, superfluous. Ever since approximately 2015 the company struggles to remain competitive and is no longer an important market player.\n\nFirst, we need to consider requirement changes. The need of customers changes constantly and so do market demands. A recent example is the Covid-19 pandemic which made millions of people stay in the home office. Other technical requirements were suddenly necessary. Furthermore, various apps occurred that helped fighting the pandemic which were not required before.\n\nSecondly, there are technology changes. New innovations allow us to have more opportunities and thus impact how we develop software. With the internet being available almost everywhere and at all times, we need to store less data offline. Websites that offer services that were previously only offered as an offline-software are now a possibility. An example therefore is “Personio”, an organizational tool for corporations that is only accessible via internet.\n\nLastly, we take a look at organizational changes. Generally, teams try to become more efficient. Popular management tools known as “Lean” or “Scrum” try to significantly change the way teams and companies work. Emphasis is now on being fast to the market. What considerably impacts the software evolution are faster development cycles. At the company I work there is a new version of the App in the App Store every single week.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265084,
      "meta": {},
      "text": "The world is a very agile, competitive and ever-changing environment. The field of software development has its root in empirical research and thus cannot be planned as such from the beginning to the end. Unplanned occasion could be changes in law, differing expectations by the client, difficulties within the team, etc. For instance during the covid 19 pandemic the complexity and importance for online shops exploded. Software development teams had to deal with exponential increases in online shop users and adapt the servers to prevent them from crashing.\n\nRequirement changes are mainly imputed by the client as a reaction to the changing business environment such as new competitors or legal regulations and new requirements that need to be met. Another example could be internal such as a defect that occurs while building the project and is of high priority to get fixed.\nSoftware as such needs to fulfil the users wishes and needs and thus changing needs can impose a new requirement through out the whole lifespan of a product.\n\nTechnology changes are caused by the ever-changing market trends and technology innovations. A very recent example would be the impact of virtual reality which can offer completely different user experience in future and also offer opportunities that never existed before.\n\nOrganisational change is the internal change of a projects organisation to a different through adaption. These could affect strategy, policies, team members, technology and many more. This field of change is very important for an agile field such as software development. Such a change could take place if the current organisation is not efficient enough or very pricy.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265225,
      "meta": {},
      "text": "We live in a world with constant changes, new technologies come to life every day and additionally new software demands and ideas. In order to keep up with those new challenges software development has made some changes in the last years and will continue to change in the future. \nFirst of all the requirements changed, software needs to be more dynamic, intuitive and faster with more and more clients using and more and more development competition. In the mobile market for example the target group expanded enormously and therefore software must be easy to use for everybody no matter how experienced the person is with using software.   \nOn top of that, the amount of technology-options a development team has are increasing. Computers are more powerful than ever, smartphones opened up a new software market and with cloud computing running software became cheaper than ever. This makes software ideas possible that couldn’t have been realized a few years ago simply because the performance was too bad or too expensive. For example software that uses artificial intelligence wouldn’t have been as common as it is nowadays and will in the future simply because the graphic cards weren’t powerful enough or way to expensive.\nIn order to handle the always increasing requirements and keeping up with new technologies and the competition software development teams and their development strategies are becoming more dynamic and faster. For example the model of development changed from a long linear approach such as the waterfall model towards a more agile model like for example Scrum.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266261,
      "meta": {},
      "text": "Software Engineering changed from the basic production of code and written functions to a pretty complex way of improving the current status quo of currently used software or draft up a totally new software solution. This change in working on software is also connected to the common tasks while working on software like budgeting and on tight time frames. On the other hand their is a difference in the approach into software development. While originally SD was based around one self contained deliverable, SD today is different in the way changes and progress is made. With agile working methods one task can be iterated and thus be better improved by repeated thought processes and different perspectives in selected stages. \nA possible example for this change could be working under the influence of the Scrum method which is used to better streamline the backlog work during their different sprints.\n\nThe changes in software development can be divided into the three following different areas: \n1. Requirement changes\n- Typical requirement changes could involve a different need of functionality or interface in a given software. For example your internal HR tracking software needs to be updated to fit with the new DATEV formats.\n\n2. Technology changes\n- Technological change is about the disruption of an prevailing technology which is rapidly improved by a new technology, which gives the customer/user an immense improvement. For example Apple disrupted the handy market with their first easy to use phone (smartphone)\n\n3. Organizational changes\n- Organizational Change could be everything regarding the internal work on the software development in teams or groups, for example the former work on just one software project per person to a change for agile working methods",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262527,
      "meta": {},
      "text": "Changes happens in software development for many reasons. The biggest being the constantly changing technology and the requirements for what you develope software, due to a volatile market and therefore shifting consumer demands and trends which the developed software has to meet. \nA real world example would be Virtual Reality. 2012 the Startup Oculus VR developed the Oculus Rift and introduce a new technology with a growing need of new, different and specific softwares. Another real world example is, if the customer changes the requirement of the software you are developing for him mid project.\n\nRequirements changes are changes where the requirement of the product you are developing or maintaining has changed. This can happen because of new legal constraints, for instance new privacy laws, or because your customer wants new features for his software, like a new user statistic. Other reasons are changes in user requirements / increased understanding of the stakeholders/market needs.\n\nTechnology Changes are changes where new technology in hardware or software, like new programming languages or new processors enable change due to creating new and better opportunity´s. This can change the way you develope software, for example when Java became popular. Or for what you develope software. For instance the growth of smart devices. Therefore more and more software has to be developed targeting these IoT devices. \n\nOrganizational changes are changes in which a company or a team alters a major component of its organization, like its culture, size, working method, leadership or team structure. For example if your company  downsizes your team from 10 people to 5 this would be an Organizational change. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262677,
      "meta": {},
      "text": "Software Development is an industry that is known to have to adapt to many changes. That is above all because of the technology evolving so rapidly, new tools and faster computers being released almost continuously. There are also often changes during a software project because perhaps the demands of a client change during the development phase or there are some unforeseen changes like budget cuts or staff shortage, which is why developers have to be able to react very quickly to this changes. One example for a huge change would be the regular release and increase of popularity of new and previously unknown programming languages.\n\nRequirement changes\n\nRequirement changes is the term that is used to describe that the software development team has to change and especially modify the requirements that were originally set in the beginning of the project. If, for example, the end result of the project was planned to be delivered within 3 months, but after 2 months the developers realize that they cannot hold this deadline, then the original requirement is not met. So the team needs to meet up with the client and discuss a new schedule for the release of the software.\n\nTechnology changes\n\nThe term technology changes includes all progress in technology, meaning if there are new ways or possibilities to develop a software. For instance, the appearance of Integrated Development Environments (IDEs) was a huge step forward, since it made coding so much more comfortable for developers.\n\nOrganizational changes\n\nOrganizational changes typically have to do with the underlying structure of a development team or even big company. If, for example, there is a new leader or the team’s working principles (e.g. from a very strict and inflexible schedule to Scrum), that is called an organizational change.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263566,
      "meta": {},
      "text": "Change in software development processes is inevitable. As the field is characterized by its rapidly developing technology, high-growth firms, innovative processes, and evolving requirements, it is inherently subject to change. One only needs to look in the real world to find many examples of companies who went from dominating their markets to almost dying out: Nokia, MySpace, and Yahoo come to mind. \n\nBy 1970, COBOL was one of the most used programming languages in the world, supporting some of the world's largest banks and financial institutions. Today, you'll be hard-pressed to find anyone developing new software using COBOL, having its role limited to maintenance. Many of these institutions find themselves today migrating their old systems to modern languages, as COBOL experts become harder to find and the language slowly dies out. As obsolete technologies die out and new ones appear, software engineers will find themselves slowly forced to use the latter, as they're often (but not always!) better suited for their tasks. This is a consequence of technological changes.\n\nRequirements are another area where change is very likely to occur. A client's needs can change for a variety of reasons. Maybe new laws appeared, or they realized a feature is missing. For example, the GDPR law forced many companies to change how they treat and store data.\n\nOrganizational changes are also common. Priorities often change when major restructures happen. Such is the case during company buyouts or mergers, CEO changes, and new management. When goals change, inevitably, the software supporting these goals will also change.\n\nThus, it is only possible to conclude that software development teams need to prepare for and embrace change or risk dying out.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263642,
      "meta": {},
      "text": "Veränderungen in der Software Entwicklung gibt es stetig, da es in einem kompetitiven Markt einen Konkurrenzkampf gibt, um das beste Produkt an den Markt zu bringen und sich gegen die anderen durchzusetzen, was bei Software der Fall ist.\nDieser Konkurrenzkampf wird durch die dadurch angehobenen Standards Vorstellungen der Kunden verstärkt. Dadurch kommt es zu Innovationen und Veränderungen. Des weiteren gibt es Veränderungen durch technologischen Fortschritt (bessere Hardware -> mehr Möglichkeiten) sowie Gesetze/Beschränkungen durch die Regierungen. Ein Beispiel sind die Corona Beschränkungen, welche Software Firmen zum Homeoffice gezwungen haben, wodurch es Änderungen hinsichtlich Organisation und Technik (z.B. tägliche Besprechung über Zoom) gegeben hat.\n\nRequirements changes -> Die Mindest-/Standards Vorstellung der Kunden wächst mit der Zeit, da sich neue Technologien und Konkurrenzprodukte etablieren. (z.B. Das Videospiel braucht Raytracing um am Markt mitzuhalten)\n\nTechnology changes -> Neue Technologien sorgen für einen natürlichen Fortschritt der Software Entwicklung\nz.B. Besseres Internet ermöglicht den einfacheren Austausch des Projekt innerhalb des Teams (GitHub)\n\norganizational changes -> Veränderung der Organisation zur Software Entwicklung \nz.B. Der Wechsel von der Idee das ein Team wie einer Fabrik, mit einem festen Plan und strikten Regeln eine Software wie am Fließband entwickelt hin zum Prozess dass man die Entwicklungsphase nicht vollständig planen kann und man sich ständig neu anpassen muss. Fazit: Eine offene Denkweise mitbringen und flexibel bleiben.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264145,
      "meta": {},
      "text": "Software development is something that evolves from day to day and it changes so all of the software engineers and developers have to evolve together with the changes. For example if the client wants that his website faster works the developers have to make some changes in the algorithm or use a different and by doing so they have to also change some different things that were built on that algorithms but dont wikr with the current one.\nRequirements change: Just an easy example, if for example wants a black theme instead of a blue theme. Or along the development period a new functionality is needed from the company and it has to be integrated to the till now developed software.\nTechnology changes: When a business is swarmed with customers it needs a bigger customer service group. So the need of bots or some form of AI integration is needed. So the devs have to make some changed and add some AI bots to answer most of the questions from the customers.\nOrganizational changes: For example after a new client is landed the software development team needs a new organizational system to handle the job quicker and more efficient. A change in the number of teams, team leaders, and the distribution of work and its flow.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264832,
      "meta": {},
      "text": "Change in Software Development is inevitable and can occur due to many reasons, such as the change in requirements for the project (usually as a result of poorly defined requirements in the first place),  external factors either political or financial in nature like budgetary cuts or new policies that obligate the developers to alter their approach. Also, the development of Software Systems rely on inspections and adjustments/adaptations to keep up with changes and demands and fix any bugs or errors that might arise. Thus, \n\nRequirements change is an inevitable software development activity and can occur due to changes in user requirements, increased understanding of the stakeholders’ needs, customer organizational re-structure, and availability of new technologies\n\nconstant change in technological landscape inevitable has its repercussions in software development. New, Fast, more effective technology enters the market \n\n\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266032,
      "meta": {},
      "text": "There are many reasons for change to happen in software development, it may be because the requirements from the customers are changed, maybe they might not be satisfied with an implemented feature/ they want to add a new design choice, etc. But mainly changes happen to improve the project and in some cases the process of implementing the project.\n\nchanges are unavoidable during the course of the development lifecycle. The reasons could be technical, procedural, financial, or even political or people-related.\n\nAn example of requirement change is the inability to get approval from project sponsors, when the requirements kept going through changes and new features and functionalities are often added, resulting in a product that outreach the allocated time and goals, but does not reach an acceptable level of quality. \n\nTechnology changes might be caused by a technological breakthrough, that opens up new possibilities and enables a better more efficient implementation of the requested product. \n\nLast but not least, organizational changes might occur as a result of other changes, that might delay the progress of the product. the company might have to assign more developers to the development team and have to set a new release date or shorten bug fixes or other features. \n\n(reuse from my own last year's answer)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266372,
      "meta": {},
      "text": "It comes to a change in software development, beacuse of the continious growth and the rising complexity of data, which forces the software engineers to enhance their programms. The constantly upcoming new technologies are also a reason for the urge to adapt to this change. \nAn example for a failed project is the phone of the brand BlackBerry. As there was a urgent change to develop touch displays, because the users had much more possibilities and it was easier to write messages on them, Blackberry missed the moment of going with the new technology. It focused on their push-button phone and tried to enhnace it as much as possible but therefore missed the right time to go with the new trend and they lost their position in the market.\n\nRequirement changes are the changes to agile software development. That means it came to a shift were the software developers realized there is constant change in the users requirements, thus they try to be agile in their actions, to always meet the users needs and not stay with a known strategy.\n\nThe area of technology changes has to deal with all the upcoming technologies such as Artificial Intelligence, the Internet of Things and Robots in general, which will have a big influence in the future. It is crucial to learn about and develop these new technologies to keep up with the fast changes happening in this area.\n\n\"Scrum\" is an example for a principle that helps in the organizational change of software development. It works on the transparency of processes and also checks wether actions are directed to the right goals. This makes it easier to act on possible mistakes.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263479,
      "meta": {},
      "text": "Change happens in software development because there is no instruction that matches for all projects. If there is a new technology that is better than the old one, then it is a good idea to use it. For example, you didn't expect that many people use your website, that's why some things go wrong and you need to do some changes and optimisation.\n\nTechnologies changes are required, if new technology much better than the old one and it can improve your app if you use it. Organisation changes are needed, if there are problems with work process, employees do their job inefficiently etc.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1263851,
      "meta": {},
      "text": "Change can be caused by a variety of factors, such as a new update release for software used in a project that requires changes in the existing code or even the discovery of a vulnerability such as Log4Shell - the latter demanding an immediate response.\n\nRequirements changes come from within the project, such as client wanting a new feature implemented. Technology changes can come from outside the scope, such as a new version of a programming language being released. Organizational change can be caused by e.g. a new team member being introduced which then leads to a reassignment of certain tasks and responsibilities.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264261,
      "meta": {},
      "text": "Ein Beispiel für sich ständig ändernde Software wären z.B. Video Spiele. Ein Video Spiel heutzutage ist anders als noch in den 90ern ein sich ständig wandelndes Produkt. Mit pre-Alpha-, Alpha-, Beta-Stages kann man das Video Game an die Tester und später Spieler bringen ohne mit dem Produkt zu hundert prozent fertig zu sein. Zudem werden auch nach den meisten \"Vollversionen\" weiterhin Bugs behoben die zuvor noch nicht korrigiert wurden.\nIn diesem Beispiel wären \"technology changes\" z.B. eine neue Konsolen Generation, die herausgekommen ist. Für diese müssen das Entwickler-Studio einen neuen \"Port\" erstellen, jedoch muss dieser auch die Leistungen der neuen Generation ausnutzen, da sich sonst die Neukäufer in die Irre geführt fühlen können. \"Organizational changes\" könnten bei einem Entwickler Studio vorkommen, falls das Studio von einem neuen Publisher aufgekauft worden ist oder einer der \"Leads\" (Lead-Engineer, Lead-Creative-Director, Lead-Tester, etc.) die Firma verlassen hat.\n\n\nJedoch gibt es auch \"gedrängte\" Veränderung von außen z.B. durch Regeländerungen in Gesetzestexten. So müssen diverse Websiten und Web-Streaming-Host Copy-Right Filter implementieren um den Ansprüchen der EU gerecht zu werden.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1264803,
      "meta": {},
      "text": "Requirement changes in Software Development: \n\nThe software shall allow the customer to communicate with its end users, so that the users cannot only enter their personal information but also communicate with the company which purchased the software.\n\nFor example when ordering a product online the enduser has to enter his/her  personal information like the name, shipping adress and the method of payment. After ordering the product the customer would like to know the current status of his/her order in terms of the current status of the shipment or if it is possible to cancel the order. Therefore the software has to be adapted to the customers wishes. \n\nTechnology changes: \nThe software shall function in multiple environments independent of the operating system the customer is using.\n\nAnd therefore if a new version of the operating system is available the software development team might need to adapt the software to ensure full compatibility and efficient usage of the device it is running on. New Windows Update or new processor releases\n\nOrganizational changes: \nThe development team need to analize, design, implement and test the methods of the software, especially before releasing a new version of the software to ensure the softwares compatibility with new operating systems or to check if the new version meets the demands of the customers.\n\nI have already participated in this course last year and read on Artemis it would be fine if I reused the answers from last year",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266026,
      "meta": {},
      "text": "Technologies change all the time. This can be in the form of a new software update or a newer Model. This change is more noticeable with projects that have a longer development time or a project/software is used which is updated often. And sometimes a change of technology is necessary since none of the currently used technologies can meet the requirements of the customer. For example, the implementation of the cloud has created new distribution channels for applications such as the app store. This completely changed how applications were built and deployed.\n\nOrganizational changes can occur when the law changes or new stakeholders are added to the project. Each new stakeholder can have new requirements. A recent example would be Elon Musk buying Twitter, which will lead to big organizational changes for the entire company and might impact software development projects which are currently running. \n\nRequirements for a project are set at the beginning. They are mostly provided by the client. However, over time the client can change his mind. There can be varying reasons for this, but they all can lead to a change in requirements. Additionally, the two previously mentioned changes will almost always lead to a change of requirements. A concrete example of this could be if the requirements of the team project get changed by the EIST instructors.\n\nThese are just some of the areas that cause a change in software development. In fact, one of the core aspects of software engineering is how to deal with change. The real world is vast and ever-changing. Traditional development methodologies are either too slow or expensive. As a result, agile development techniques were created and adopted.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261926,
      "meta": {},
      "text": "Change in the field of software development is happening all the time. This is mainly due to the fact that today's way of developing software is very agile, and no longer follows strictly prescribed rules.\nFor example, the emergence of a competitive company that develops a product similar to your own is such a issue. Its important to respond to this new challenge and to ensure that the product you are developing still delivers a value to the customer. And that may require some changes to your product.\n\nSome reason for changes are:\n\n1) Changes of requirement\nFor example, it is possible that in the middle of the project the customer realizes that the product to be developed is not actually beneficial for him. To solve this problem, it is important to determine with the customer which areas need to be improved, and then work out a new project goal, which must be implemented again.\n\n2) Changes of Technology\nEspecially over longer projects it is possible that during the project development for example new tools and frameworks appear, which would considerably simplify the project. Thus, a transition to these new technologies would offer a significant advantage, and could allow the project to be completed sooner and with less resource consumption.\n\n3) Changes of organization\nIt is also possible that the organization of a company or a development team changes. New people constantly join or leave a company. For example, it is possible that members of a well-established team leave the company and are replaced by new employees who are not yet familiar with the team.\nSuch changes present difficult problems that must be overcome in order to ensure a proper project outcome.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263323,
      "meta": {},
      "text": "Oft liegen Vorstellung und die Realität weit auseinander. Man denkt sich auf einer höheren Ebene ein Konzept für die Bewältigung eines Problems aus aber im Endeffekt sobald man daran vertieft arbeitet stellt sich raus, dass zB die Deadline nicht eingehalten werden kann, da zu viele Elemente des Problems zu viel beanspruchen an Zeit, Ressourcen oder Arbeitskraft. Somit müsste man das ganze Projekt nach hinten setzen aka das Release Datum nach hinten schieben oder andere unwichtigere Teilprobleme rausstreichen um um dem hingegen zu wirken. Eine andere Form von Änderung könnten Programmiersprachen oder Frameworks sein die mehr Möglichkeiten mit sich bringen.\n\nRequirement changes können sein, wie schon angesprochen ein erweitertes Aufwand an Ressourcen, Arbeitszeit oder für zB. Games eine andere Engine, da die derzeitige Engine nicht für das Niveau an Grafik / Rendering ausgelegt ist und nicht mehr den Anforderungen des Projekts genügt.\n\nTechnological changes kann sein, dass rechenintensive / speicherintensive / Energieintensive Elemente des Projekts nun doch umsetzbar werden, da zB. eine neue leistungsfähigere CPU entwickelt wurde die den Ansprüchen genügt. Über die letzten Jahrzehnte wurden Computer immer mehr leistungsfähiger, immer größerer Speicher wurde entwickelt. Somit kann man im Vergleich zu früher viel mehr erreichen -> man hat einen größeren Spielraum \n\nOrganizational changes können sein, dass sich der Customer nach längerer Zeit noch andere Aspekte wünscht die er gerne umgesetzt haben wollen würde, wie neue Funktionen, eine neue UI, ein neues Konstrukt der Systems. Somit kann man durch agiles Projektmanagement immer Schritte zurückgehen und die neuen Wünsche auch effektiv realisieren und gegeben der Situation gebührend agieren. Oder ein neues Teammitglied muss vertraut gemacht werden mit dem Projekt.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1263592,
      "meta": {},
      "text": "The main drivers of change in software development stem from an ever increasing need for more efficient and flexible processes. Today software development should be faster and therefore one has to make it easier for the single programmer. All those different requirements combined with an increasing amount of new software start ups which aim to innovate lead to a multitude of changes in the field of software development.\nOne of those changes for examples is the nowadays widespread use of IDEs and git whcich enable the coder and their team to work faster and to simplify working from different geographic locations.\n\nRequirement changes are those changes regarding what the software as a product should be able to do. Most of the time this means what the customer wants for their specific needs.\nTechnology changes refer to the underlying technologies which are being used for software development e.g IDEs AI and Cloud Computing.\nOrganizational changes are the changes within the structure and organization of the team and the process of software development. An example for that is the change from waterfall methods to more agile methods like scrum.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263930,
      "meta": {},
      "text": "Change can happen in software development, because the company needs to adapt to a constantly changing environment. An example in the real world would be adding new features to a project in order to be able to compete with competitors. \n\n(1) Requirements changes occur, when for example new government regulations have to be complied with (it might for example be necessary to handle collected data differently).\n\n(2) Technology changes can occur over time, when systems become outdated or a company decides to use different technologies.\n\n(3) Organizational changes can for example occur, when a company launches a new department.",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1264142,
      "meta": {},
      "text": "There are many reasons why the change occurs in software development. The bussiness environment could have changed or the client changed his mind and he has now a different idea how the product should look like. For example during development of some mobile app used to share your cooking receipts based on photos there is conducted a market research that shows that people nowadays only share receipts using videos. So the main idea of the app should be adapted to it and the team should develop the app which uses videos. Requirement change occurs when the requirements change as in the example above. Technology change occurs when we have to switch the technologies used in the project because current one is old or from some other reason. Organizational change can be that we adapt our work model from working 5 days in a week to only 4.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264238,
      "meta": {},
      "text": "In der Welt der Software Entwicklung ist es eher selten dass sich während eines Auftrages die Anfragen des Kunden nicht ändern. Da es sich um komplexe Probleme handelt und der Kunde oft nicht selber genau weiß was er möchte sind Veränderungen unausweichbar. Deswegen muss man während des Entwicklungsprozess euch das mal nachschleifen und das Projekt in der Richtung der Wünsche der Kunden steuern. Nicht nur bei der anfänglichen Entwicklung treten solche Probleme auf, sondern noch vielmehr während der Wartung der Software. . Man unterteilt diese Veränderungen in drei Kategorien: requirements Veränderungen, Technologie Veränderungen, und Organisationsveränderungen.\n\nSchauen wir uns ein Beispiel dazu an: ein Benutzer möchte eine App für sein delivery Dienst haben. Nachdem während der Entwicklung kleine Veränderungen vorgenommen wurden  ist die App fertig. Etwas Zeit vergeht und schon kommt die ersten Veränderungswünsche:\n\n1) Requirement Veränderung: darunter versteht man eine funktionale Veränderungsder Software auf Wunsch des Kundens. Er möchte zum Beispiel nicht nur essen von Restaurants liefern sondern auch die App so entwickeln, dass man direkt waren aus dem Supermarkt bestellen kann.\n\n2) Technologie Veränderung: Darunter versteht man eine Umstrukturierung der existierenden Softwares wegen einer neuen Technologie. Damit hängt eigentlich der Kunde nur indirekt zusammen, da diese Veränderung wegen der fortwährenden Entwicklung der Technologie unausweichbar ist. Es wird zum Beispiel ein neues smartes Bezahlungssystem eingeführt, die Kunden der delivery App bezahlen nicht mehr mit Bargeld bei Lieferung, sondern es wird beim Kauf direkt per PayPal das Geld überwiesen.\n\n3) Organisations Veränderungen: Darunter versteht man die Veränderung bzw. Anpassung der Modelle, mit welchen das Entwicklungsteam die Software für den Kunden herstellt und wartet. Man würde anfänglich meinen dass dies für die Delivery App unseres Kunden nichts ausmacht, doch mit der Zeit wirken sich diese Änderungen auch positiv auf seiner Software aus. Neue Funktionen in seiner App einzubringen verläuft z.B. durch das Scrum Modell jetzt viel schneller. \n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264319,
      "meta": {},
      "text": "Change in software development happens because requirements, technology and organizations are constantly changing and are never static but dynamic. A real world example is the change from analog CD (e.g. music or movie) to streaming. New technological possibilities, such as mobile devices and higher Internet bandwidths, have enabled music and video streaming to spread in a very short time. As a result, previously dominant media such as CDs became obsolete within a very short time and new business models and companies emerged. Streaming was thus made possible by technological changes and led to changes in the requirements of the respective companies. \nOne example of changes in requirements is changes in regulation, such as the General Data Protection Regulation of the European Union. In the course of this change in legislation, all companies had to adapt to the new requirements and digital companies in particular had to adapt their products and services so that they were data protection compliant in accordance with EU guidelines.\nAn example of technology change is the shift from the combustion engine to the electric motor in the automotive industry. This change alters development cycles, supply chains, employee requirement profiles, and products and services. The fundamental change in technology also changes the entire industry (such as suppliers).\nAn example of organizational change is, for example, the sudden shift from face-to-face work and teaching to home office / online teaching in companies, universities and schools in the wake of the COVID-19 pandemic. This example shows that organizations and teams need to adapt flexibly to their environment.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264913,
      "meta": {},
      "text": "Change happens in software developement all the time because the real world changes frequently too. Over the last years, there is a trend towards larger projects, this means more people are involved. For example in the video game industry there are more and more developers needed, because games are always getting more  complicated. This forces companies to adapt and find new ways to manage workloads. Change can also happen within a individual projects developement time. Requirement changes are when the scope of the project gets shifted, new things need to be implemented. This happens because the stakeholders decide the software should adapt to the market to be the most profitable. Technology used in software developemenet changes gradually as older stuff gets outclassed by newer programming languages or frameworks. Nowadays nobody uses plain html and javascript to build a big website, but some time ago this was the case. Frameworks that are used now will eventually no longer be supported and left behind. The developemenet team needs to figure out what technologies they can use for a long enough time in their project.  Organizational changes would be the use of outsourcing, that is getting popular over the last years. Thanks to the internet people all around the world can work on the same project and commit to the same files on git. This leads to new challenges of comunication over these large distances but it has monetary benefits to the company because they can hire people in lower wage countries.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265194,
      "meta": {},
      "text": "Aufgrund neuer Techniken, Forschungsdaten oder Trends entwickelt sich die Herangehensweise bei der Entwicklung von Software oftmals unvorhergesehen. Ein Beispiel hierfür wäre die weite Verbreitung des Internets und dessen Integrierung in Endnutzergeräte wie Konsolen. Für die längste Zeit hatten Spieleentwickler keine Möglichkeit, Patches oder Bugfixes nach Veröffentlichung ihres Spiels herauszubringen. Das spiel wird für immer so bleiben, wie es auf die später verkauften CD-ROM's gebrannt wurde. in der heutigen zeit hingegen ist das anders. Das Prinzip von \"early access\" also Veröffentlichung des Spieles, bevor es Offiziell überhaupt fertiggestellt wurde, ist vor allem unter Indipendent Developern sehr verbreitet. Es bietet den Entwicklern die Möglichkeit, Geld für ein unfertiges Produkt zu generieren, um mit diesem Geld dann die Fertigstellung zu finanzieren.\n\nEin Beispiel für Technologische Veränderung wäre das rapide Wachstum der Leistungsfähigkeit von Systemen, sowohl auf der Sever als auch auf der Privatnutzer Seite. Dadurch lassen sich aufwendigere Systeme, Algorithmen und forschungsbezogene Daten besser und schneller einsetzen, wie zum Beispiel aufwendige RAID Konfigurationen, welche benutzt werden, um daten zu suchen. damit sich diese lohnen sollte eine große menge an Speicherkapazität vorhanden sein.\n\nEin Beispiel für organisatorische Veränderung ist der Wechsel von Einzelnen Programmen, die man gratis auf irgendwelchen Foren finden konnte, hin zu ausgereiften Software an der hunderte von Software-Developern gearbeitet haben. Bei solche Ausmaßen muss man Anfangen einzelne gruppen mit bestimmten Aufgabenbereichen zu bilden und zusätzlich noch eine kommunikationsebene zwischen diesen gruppen verwalten.\n\nZuletzt haben sich auch die Anforderungen an die Software geändert. wären in frühen tagen des Internets klobige UI und schwer zu verstehende Software noch vielzählig genutzt und geduldet wurde, sowohl von Administratoren als auch Endnutzern, muss heute alles mit schönen grafischen Elementen, Abgestimmten Farben und gut durchdachten Menüs versehen werden, um sich auf dem markt Behaupten zu können(kleine hausgemachte Programme sind hierbei ausgelassen, es geht um größere Systeme)",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265984,
      "meta": {},
      "text": "Developing software is a very dynamic process, where change consistently occurs, either based on external factors, like changed conditions (requirements of the user, technical boundaries) or internal incentives (e.g. new ideas by the developers). Change also happens in the real world, for example weather - We have to adapt our clothing to the temperature outside.\n\nA requirement change occurs when the demands for the programmed software evolve. For example, if a new bill (DSGVO) is passed by the government, so now the software has to ensure data protection for all of its users.\nTechnology change occurs when a significant technological progress is being made and the software can now access more resources to fulfill its requirements. This happens for example when virtual reality was developed.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266376,
      "meta": {},
      "text": "Die Art und Weise, wie Software entwickelt wird, entwickelt sich kontinuierlich und rasant weiter. Dies wird deutlich sichtbar, wenn man sich anschaut, wie schnell manche Programmiersprachen an Bedeutung gewinnen und andere hingegen an Bedeutung verlieren. So waren in den 60er und 70er Jahren Fortran und Cobol die populärsten Sprachen, welche heutzutage in keiner Top-Liste zu finden sind. Im Gegensatz dazu gewinnt zum Beispiel Python durch Technologien wie das maschinelle Lernen an Relevanz. Im Folgenden wird es um drei Bereiche der Veränderung von Software Development gehen: Requirement Changes, Technology Changes und Organisational Changes.\nRequirement Changes können sowohl von langfristiger, als auch kurzfristiger Natur sein. So wurde es zum Beispiel über die letzten Jahre immer wichtiger, große Datenmengen (Big Data) zu verarbeiten und zu speichern, durch die zunehmende Popularität der Cloud. Es kann sich jedoch auch um kurzfristige Änderungen der Anforderungen in einem Auftrag handeln. Die Gründe dafür können vielseitig sein. Es könnte zum Beispiel das Budget aus wirtschaftlichen Gründen gekürzt worden sein, die Deadline verringert worden sein, oder eine politische Veränderung, wie neue Datenschutzrichtlinien, Einfluss nehmen. Für solche Fälle ist der Aspekt der Adaption von Scrum essentiell, da das Team so schnell wie möglich auf solche Veränderungen eingehen muss.\nEin Beispiel für Technology Changes ist die immer besser werdende Hardware, welche die vorhin erwähnte Cloud und Verarbeitung großer Datenmengen erst möglich gemacht hat. Weitere bekannte Beispiele sind React.Js, Angular und Vue, welche Web Development revolutioniert haben. \nOrganizational change kann zum Beispiel die Veränderung eines Teams sein. Damit das Team dann mehr als nur eine Arbeitsgruppe ist, muss es die 4 Schritte des Team Developments, Forming, Storming, Norming und Performing durchlaufen. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266472,
      "meta": {},
      "text": "Veränderung entsteht im Zweig der Softwareentwicklung, vor allem durch technologische Veränderungen, und möglicherweise soziale Veränderungen. Beispielsweise, wurden mit der Einführung des Cloudcomputing oder der Entdeckung der Log4J Sicherheitlslücke, die Herangehensweise der Softwareentwickler im starken Maß verändert.\n\nOft tritt eine Veränderung des benötigten Skillsets eines Entwicklers am Arbeitsmarkt auf, möglicherweise durch die Fokusverschiebung des Teams auf gewisse zuvor vernachlässigte Bereiche ihres Fachs auf. \n\nAlternativ können das Auftreten von neuen Technologien, oder Werkzeugen, das Feld der Softwareentwicklung stark verändern und in unterschiedliche Richtungen lenken, wie beispielsweise mit der Einführung von Java, oder jüngst mit der Entdeckung der Log4J Sicherheitslücke, der Fall war.\n\nOrgenisatorische Veränderungen,  treten meist mit einer Veränderung des Arbeitsumfeldes, oder des Managements einher. Sie betreffen unteranderem die vorhandene Zeit zur fertigstellung eines Projekts, oder die Menge an Mitgliedern des Entwicklerteams. Wie etwa bei einer Entlassung oder Einstellung von Mitarbeitern. In beiden Fällen sind Anpassungsfähigkeit und Flexibillität vom Team gefordert. ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1261232,
      "meta": {},
      "text": "Why change happens in software development：\n1. The customer requirements may be changed before the deadline, so the developing system must adjust according to the change.\n2. Technology develops so fast that if an engineer does not know the new technology, he may be replaced by someone else.\n3. A software system is mostly developed by many people, it may exist conflicts between different parts. In order to make the subsystems compatible, the change happens.\n\nExample：\n1. requirements changes\nWhen a customer wants to develop an App similar to Whatsapp, he wants to add new features after a month. For example, this App should apply online meetings for more than 11 people. At this point, there is a requirement change. \n\n2. technology changes \nOne of the features of this App is that the user can use his camera with the help of OCR to recognize an object. A new technology(deep learning) comes out; the OCR will be replaced. This is technology change.\n\n3. organizational change\nAfter the project is finished, someone wants to buy the company and make some adjustments(to departments' structure), and some new departments may be added. This is organizational change.  \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262744,
      "meta": {},
      "text": "unlike many other industries, software development has experienced vast innovation and new ideas in recent years. This might be because it is a relatively new and modern subject, where there is a lot of room for improvement through new innovative ideas. \nBecause software is so easily scalable it has also become extremely attractive financially to develop even the most simple new software. \nOne Example for this is flappy Bird, a simple game where players have to guide a bird through obstacles by tapping on the screen. It was a world wide sensation and now makes around 18m dollars a year in advertising.\nA different Example for intelligent use of software development is Tesla. Tesla collects Data from each of their cars in order to develop new tech such as auto pilot systems. This has led people to value Teslas stock at over 120 times of their earnings.\nLastly, the software development that is the most impressive in my eyes as a whole is the construction of the Apple ecosystem. Making A System that satisfies the customer but also makes him dependant on you tech is genius. Apart from that, the monopoly of the app store has led to Apple making a massive part of their revenue through app store fees. Apple have not changed the world by creating the best Phones, computers or Headphones. They did it through their software architecture. They managed to change the world by using it intelligently.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263659,
      "meta": {},
      "text": "Software developers face all kinds of demands, reaching from the supervisors in the firm, the client, already existing parts of the software that need to be embedded as well as external factors like gouvernmental requirements or macroeconomic factors. An example for the ladder and how it has an impact on software development would be the overall budget that is available for the project.\n\nChange also happens in software development due to requirements changes, which means that the process of how software is build has changed as software need to be able to fulfill more takes and thus codes became increasingly large in the last decades, this refers for example to the software in cars. Software developer need to try to oversee the whole project when they start in order to prevent the project from being fragmentated or even disfunctional. This requires different techniques to build a software structure than if the project code is only very small. \n\nTechnology changes refer to changes in technological opportunities in programming due to new scientific findings. For example with AI, mistakes in the code can be recognised and fixed much faster than before. \n\nOrganizational changes refer to the fact, that the process of software development also depends on the way the developers are organized. For example, it does make a difference if one person is responsible for a specific part of the code or everyone works on every part of the code at the same time. \n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263817,
      "meta": {},
      "text": "The Line Between Mobile and Desktop Gone Forever\nAs mobile devices started to take over the technology world, many developers started to shift their focus to the development of mobile apps. As the 2010s drew to a close, though, a new trend took hold that promises to reunify the desktop and mobile computing worlds once and for all: the development of progressive web app (PWA).\nA PWA is like a hybrid of a webpage and a mobile app, but that’s platform agnostic and provides the same software experience on any device. Think of it as a website built using web technologies but that acts and feels like an app. Recent advancements in the browser and in the availability of service workers and in the Cache and Push APIs have enabled web developers to allow users to install web apps to their home screen, receive push notifications and even work offline. They’re expected to come to replace most desktop software and mobile apps, bringing the same native functionalities to every form factor.\nIt’s installable without the hassle of a real download. This not only highlights the improvement in user experience but also the earlier issue of consumer buy-in. Users must make a conscious decision and even a commitment to download and keep a native app. Uninstalling that app is an equally final decision. In contrast, clicking a simple link is an easy task that requires very little consideration, little data storage on your device, no lengthy download period and no installation. \nFrom a developer perspective, progressive web apps are also more economical. They are faster to build and update. You can also create one version of the app, and it displays seamlessly and identically on all devices. Better yet, they cost less to develop than a native mobile app. A progressive web application takes advantage of a mobile app’s characteristics, resulting in improved user retention and performance, without the complications involved in maintaining a mobile application.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1264100,
      "meta": {},
      "text": "Rechnerarchitekturen können sich ändern und dann muss Software umgeschrieben werden für die neue Architektur. Der M1 von Apple ist ein gutes Beispiel dafür. \nTechnologische Änderungen sind wie bereits erwähnt Architektur Änderungen wie von x86 zu ARM.\nAnforderungsänderungen sind wenn zum Beispiel die Verbraucher etwas neues von der Software erwartet wie die Kompatibilität mit neuen Betriebssystemen.\nOrganisationsänderungen sind wenn sich in der Struktur der eigenen Firma dinge ändern wie ein Chef Wechsel oder ein Börsen gang.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1264744,
      "meta": {},
      "text": "Changes can happen in software development because we cannot fully anticipate the situation when the project starts, different solutions are needed when the situations are different. For example, an online retail shop may consider to add new payment methods for their customers in order to maintain their competitiveness in market.\n\nRequirement changes: customers may want to change their requirements during the development. For example, they may have some feedback or new insight after reviewing the interim product. \n\nTechnology changes: there can be new technology arise and it can be a better solution or provide some enhancements on the product, e.g. AI can help to implement more automation task. \n\nOrganizational changes: the situation can be changed during the development, like market situation or regulations. For example, the regulation of data privacy may be tightened and higher security on data protection is needed. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264883,
      "meta": {},
      "text": "Due to the fact, that one always tries to improve one's system, like making it faster, more adaptable, easier to understand, and sometimes even cheaper and changes occur as the software development process progresses. Changes have to take place in a system to stay in this world competitive market. An example in today's world would be a self-checkout system in a supermarket, the owner doesn't have to employ so many people anymore, due to the system, that might speed up the shopping process thus making it more attractable to people, leading to an increase in costumers. By having a “self” working software, that can replace an employee, the owner already wins.\n\nSoftwares always have to be up to date, in sectors such as requirement changes, meaning since more companies store data, and due to changing laws which make it partly illegal to store the data, systems have to be changed in order not to get shut down. The other sector is the technology change, to remain in this world’s market, technology has to become smaller (sometimes), more adaptable, faster, and better to full fill costumer's demands. And if you don't keep up, you could disappear, like Nokia kinda did, since they didn't invest that much into smartphones. The third change is the organizational change, meaning the change of a company's policy, environment, strategy, etc., and since people’s minds constantly change a company’s requirements should also always change. An example would be, that software has to fit into the company’s policies, like remaining certain privacy of their employee's medical status.\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265056,
      "meta": {},
      "text": "Not very good defined requirements, changing needs can cause a change in software development. For example, at the beginning of the development of WhatsApp, we could just send messages but nowadays we can call other people and even video call them whenever we want. Because needs are changing and a software development project should keep pace with it.\n\nRequirements changes :  The functionality change is a requirement change, for example in a development of a horror game requirements for the game can change for example music in the background, if it is not as tentional as it supposed to be, it can be changed\n Technology changes : The at the beginning considered programming language can be changed because of the requirement changes and needs. \n Organizational changes :  During a software development, the team can need additional software developers or other team members who they need for the software project. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266029,
      "meta": {},
      "text": "1. requirements changes: from simple to complex\nIn the past, the requirements of software were very simple, usually involving only a single function. For example, train ticketing software used to have only one core function, booking tickets. The current software requirements are complex. They not only involve functions but also user experience, aesthetics, etc. The current train booking software can not only order tickets but also points, shopping, and other functions, and also considers user-friendliness.\n\n2. technology changes:\n(1) from On-Premise to Cloud\nIn the past, software was installed locally on corporate computers and servers. And now more and more companies, especially small ones, are choosing to host their software on the servers of cloud service providers. Because cloud services allow them to save manpower, material resources, and costs.\n(2) With the improvement of artificial intelligence technology, compression algorithm, transmission technology and network technology, many softwares now use machine learning algorithms, which can recommend suitable products according to users' preferences. In addition, many real-time sharing, real-time transmission and other functions have been realized.\n\n3. organizational changes\nSoftware development teams are now leaner than before and can respond faster.\n\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266329,
      "meta": {},
      "text": "Other the last years the amount of used software in all areas of live, industry and other fields has grown a lot. Solutions need to be implemented faster than before. Therefor the organisation of development teams has changed and deployment processes have become faster. Also the security guidelines and requirements were growing and data protection becomes more relevant. So the amount of resources used to fulfill security requirements and protect user date have grown over the time.\n\nAs an example for changes in the real world, modern wars based on it system manipulation can be named. This shows how important security is.\n\n\nOrganisational changes are changes in how development teams are organised and how they are structured to achieve der goals. For example the usage of agile working models and scrum has brought lots of changes to how teams are organised.\n\nChanges in requirements are changing the expectations for software. As mentioned above new security standards are an example for such changing requirements. But also the support of containerised environments is a new requirement software needs to come up with.\n\nThis takes us to technology changes. They are new principles of how software is deployed, how server networks are structures and other changes to the infrastructure software is running on. In the last years for example the usage of virtual machines for scaling of software has changed to cloud architecture running with stackable containers organised in clusters.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261902,
      "meta": {},
      "text": "Changes are mostly made to improve the project. When project managers are unable to get approval from clients, requirement changes are made. \n \nIt also means ineffective management of requirements. If new features or functionalities are often added during the development life cycle due to the requirement change, the product will overshoot the limited time and located resources, which leads to unacceptable quality. \n\nFinancial considerations, corporate policies, and new sets of end users are some of the factors to consider as change agents when organization restructurings happen. \n\nExamples:\n-\tAn organization will change its strategies, technology, and culture in response to failure in order to achieve goals. \n-\tTechnology change occurs in software development along with how technology changes in general. \n-\tIdeas that are tied to the new technologies can affect the execution of the project plan halfway through the life cycle.\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263063,
      "meta": {},
      "text": "It is nearly impossible to develop the perfect product in the first iteration, that is why software is developed iteratively, often following the SCRUM model. For example, the majority of applications that one can download gets regular updates for different reasons. One reason could be that something is not working as it should or the user needs have changed so the offering has to be updated.\n\nI already briefly mentioned the area of requirement changes above, to elaborate on that I will stay with the same example as above. To give a more specific example I will use the app WhatsApp, which started of as a text messenger, but now is way more than that. One can now call through WhatsApp and even post pictures for all contacts to see. WhatsApp analyzed what its users needed and added these features, this is an example of requirements changes.\n\nSecondly in the area of technology changes a very interesting and rather new example is the emergence of the Metaverse. It is a completely new technology that requires significant changes. So if a new technology is introduced to the market that was not foreseen by developers, changes have to be made to keep up with the latest technological developments.\n\nLastly in the area of organizational changes an example would be if a company to completely rebuild their website. That can have different reasons like restructuring within the company or adapting the website to current trends like for example sustainability. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263188,
      "meta": {},
      "text": "Changes in software development occur on all kind of topics. \nEspecially with continuous integration, there is no goal of achieving a \"final version\" of software.\nThe software stack above or below one's application will definitely change at some point in the future and will make adaption of the software mandatory if its functionality must be guaranteed.\n\n(There might be an exception to this on deeply embedded systems with no network connection and \"easy tasks\"; But even those might change at some point due to hardware failure etc.)\n\nOn the one hand, a team might have to adapt their code to a new compiler version (Due to security, efficiency, feature set, etc.), in which some legacy operations might not be supported anymore. (Technology change) \n\nOn the other hand, a team might grow or shrink in size if the company decides to reassign its human resources. \nThis might change the scope of work each developer was assigned. (Organizational changes)\n\nBesides those possible changes, there might occur some new requirements during development of a software. \nThe product owner might want to introduce support for mobile-phones during software development, or postpone support for some devices to a later date due to budget cuts. \nAdditional features like translation of a GUI application might be introduced or dropped from the list of requirements. (Requirements change)",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263623,
      "meta": {},
      "text": "Change happens in software development because the world also changes; as newer technologies enter the market, or bugs and lacking aspects of software is found, software should be also adapted. An example would be how there are comments section for apps where users can point out problems or new ideas, and developers might make changes according to those to make the user experience better.\n\nRequirement changes occur because the costumer changes their demands. For example, firstly, the customer of a bank software wanted all characters to be visible while users enter passwords, but later they realized that is not really safe, so now they want characters to be invisible by default and only made visible via a button. Code of the program must be adapted to this new requirement. \n\nTechnology changes occur when newer tools that are better suited for the purpose of the program are released or maybe the new tools are slowly becoming a prerequisite for the program to work. In this case the team has to stay up to date with new tools and adapt.\nA great example would be how constantly new programming languages fitted for certain purposes are coming out, in early years mainly HTML was used for web development but then languages like JavaScript have been released that help to expand the abilities of HTML. \n\nOrganizational changes occur when there are changes within the team or company. For example the number of team members got decreased, so now remaining members have to do more work. \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264404,
      "meta": {},
      "text": "One of the major challenges of software development is dealing with change. Since most software is made to solve real-world problems, it is also dependent on its changing environment. One example for change in the real world is the shift towards mobile applications. When smartphones emerged around 15 years ago, this also had major implications on software development. In adherence to changing user demands, many firms nowadays develop their applications mobile-first.\nChange can be separated into the three areas of requirements changes, technology changes, and organizational changes.\nRequirements change is inevitable in software development and can occur due to changes in user requirements or an increased understanding of the stakeholders' needs. One example could be a new focus on mobile-friendliness due to changed customer’s needs.\nDue to innovation, technologies change all the time. One example could be a shift towards a new emerging technology, e.g., cloud computing. Cloud computing describes the use of hardware and software delivered via the Internet. By hosting software, platforms, and databases remotely, the cloud servers free up the memory and computing power of individual computers, increasing efficiency and reducing costs thereby.\nFinally, organizational change can also have major effects on software development. To deal with external or internal pressures, organizations change their management structures and business processes. One example could be an enterprise that adapts an agile structure that enables it to compete against larger competitors. By adapting agile project management frameworks such as scrum, time and recourses can be allocated more effectively.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264506,
      "meta": {},
      "text": "Software development is about dealing with change when we try to solve the problem. However, the problems will change from time to time, so the Software engineering also need to change to fit this kind of situation better. The typical changes like if we develop new tools or we update the algorithm or data structure in software engineering.\nA example is the optimization of Apps in our Phones that we need to update them due to the changes in real world. Requirement changes are frequent in our lives that with development of the modern world people's need in software will change. In order to fulfill the demand of customers, software change must to face the requirements of users. Like in the corona time, people want to buy more takeaway food and people use Apps like \"Lieferando\"  and so on. At the same time many restaurants also choose to offer takeaway service. Because of the demand of takeaway increase, \"Lieferando\" should improve the app let people use it conveniently. Technological changes focus more on technologies that the developer use. Like if we can pay for the takeaway with \"Paypal\" and if there is new online payment method which also many people use that \"Lieferando\" maybe will try to add this new technology. Organizational changes are dealing with the changes in project team structure like if the boss of \"Lieferando\" development team change, how should workers behavior. Also there is new rule in corona time that workers should follow the 3g rule. \n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264655,
      "meta": {},
      "text": "The whole world is changing every day: including society, economy, politcs and all different service and production spheres. Including Software Development of course. And all of the spheres mentioned above, influence the flow of it. The society dictates the trends and interests, the economical situation influences the choice of tools development teams have to use (cheaper or more expensive or even free) and the amount of employees the company can allow itself and the political situation also narrows the choice of tools due to license limitations. For example: Lately, because of strict COVID-19 lockdown the developers of HOYOVERSE Company could not participate in the development of the product. As a result, the whole development process has been commpletely interrupted and the update could not be released on time. Now the company has to find new organizational and structural solutions.\n\nAs of requirements changes, due to growing risk of data breach and new data protection laws, developers had to implement such feature as data encryption and meet the laws' requirements such as data localisation, wich is for example is quite complicated with cloud services.\n\nWith the development of IoT, AR and VR it is necessary to find another approach to the development of suited software for new devices. Developers have to implement new tools to make the process go smoother and clearer. In VR and AR, for example, they have to find new ways of image rendering and device position monitoring.\n\nUnder the influence of tragical events of the past few years (COVID-19) the companies had to make changes in their structure and workflow organization. Most of the companies have switched to remote work, which has led to a productivity loss and production pipeline changes. And now, after a long time working from home, employees do not wish to return to their offices.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266112,
      "meta": {},
      "text": "According to Forbes Software and IT jobs will double in 10 years, while statistics show a global spending of 605 billion USD in 2021 for software development. This exponential growth shows the constant change of software development. \n\nThere are many reasons for this phenomenon, but one of the most prominent is the constant development of technological landscapes and capabilities. They have also led to new consumer and business demands to improve quality of life and enhance business processes. This, in return, changes market trends and opens possibilities for future change. A prime example for such a change in real life that made an instant impact is the Windows Operating system by Microsoft, which made running software, connecting to the internet or operating a computer accessible for everyone.\n\nOne of the prominent areas of software development is requirements changes, which is a change of software due to changes in demands, requirements and the availability of new technology. Facebook, for example, was the first social media platform created to connect people around the world.\n\nAnother area is technology-change, which connotes the idea of improving existing technologies and developing new ones to improve and create new products. Autonomous vehicles are a significant example for such a technology-change and are promising for the future.\n\nLastly, organizational change implies the altering of a company's organizational component, such as infrastructure or the used technologies to achieve a successful resolution. Nokia implemented such a change and was capable of surviving in the smartphone market by developing new technologies and restructuring its organization.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266167,
      "meta": {},
      "text": "\nChanges in software development occurs, when the usage of the software has to adapt to new technologies, a new form of management in the company or is needed for new things, for example after the market changed from selling mobile phones to selling smartphones, where the design and also the usage came to a whole new dimension. If a software development team cant adapt to this change, the company will fall behind the competitors and when they aren’t able to find a new way, their company/project will fail.\n\nYou can see the requirement changes and the technology changes in the given example: The technology changed from having buttons to type to having a touchscreen, so you don’t just have between probably 9 to 20 buttons but the whole screen the user needs to be able to interact with.\nThe requirement change you can see int the change of the usability of the phone. While you just needed to be able to communicate via phone or SMS with the early mobile phones, the consumers interest grew in the last years into wanting to have a mobile working station you can always use and interact with many apps and mediums (like email, threema, everything that belongs to meta etc….)\n\nThe best way to explain an organizational change would be to look into the network of a company. While the company is small with no big hierarchy you´ll need another system than when you are in a big company with thousands of workers in different departments, who still need to be connected trough a network.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266467,
      "meta": {},
      "text": "It is of human nature to adapt and change. That is why, software development, challenges us to improve the methods that are used for problem solving. Even though it might not have a direct connection to software development, one of the best example for change in today's world, is reusable rockets developed by SpaceX. To give it more context, the launch of a SpaceX rocket is 97% cheaper than a Russian ride cost in the '60s. Even though a lot of people doubted Musk's idea after his series of failures, he managed to succeed. And coming from the lectures, \"early failure is good\".\n\nAdditionally, I would like to explain the three areas of changes using the previous example. The let's say the \"requirements\" for space companies were only to blast something into space. But nowadays the main concern is not only to go into space but to do it in reduced costs and try to not damage the environment that much. By changing the requirements the need for use of new technologies comes along. The development of reusable Propellants was necessary in order to reduce costs and even time of launching as much as possible. A good example for an organisational change is none other than Netflix. In the beginning their business model was to have movies posted to the door of the customers. And with around 500.000 Subscribes that could have possible, but Netflix changed the management to meet the needs of customers and allowed customers to watch content online. Today, Netflix has around 222 million subscribers, a 44.400% growth from 1997.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261351,
      "meta": {},
      "text": "Software development is empirical in nature,  so it can't be entirely go as planned. For example: a game developer team makes a game that is almost in the beta phase and then a new censorship law comes out and the game developer team must adapt the game to the new law. And if the root of the game must be changed, the whole game is affected and the release date is being pushed further away.\n\nRequirements changes: for example: if the customer insists on  better quality of the product, the requirements must be adjusted, either more money or more time.\n\nTechnology changes: the technology world is changing rapidly. For example the era of button-operated phones ended quickly when smartphones have arrived, so the companies must adapt to new technologies to be relevant in the industry. \n\nOrganisational changes:\nExample: if the boss is retiring and has left the team rapidly, a new boss must be chosen to reorganize the team.\nThat said, organisation changes are changes that happen inside a team/company.\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263124,
      "meta": {},
      "text": "\tChange is a natural thing in software development because of the way it works and has to be implemented. Some of the technological advancements are the increasing memory capacity and transistor numbers in a single core.\n\tThe customer may want to change the requirements of the product or a more efficient solution to meet the demands was found(requirement change). \n\tThe nature of computer science is continuously shifting and software updates are a common occurrence. Newer and faster technologies are released steadily and (in order to not fall behind) companies may be forced to adopt the new changes(technology changes). One real-world example is the release of a new operating system(Windows).\n\tAnother reason why the change in software development is inevitable is organizational modification. A new team leader or project manager may be appointed, new employees may be recruited or the company may be restructured.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264396,
      "meta": {},
      "text": "Das Innovationstempo wird sich mit den Fortschritten bei Hardware und Software nur noch beschleunigen. Die alten Methoden können einfach nicht mehr mithalten. Die Menschen wollen einfach nur, dass neue Funktionen und Korrekturen schnell erscheinen und ihr normales Lernen, Arbeiten und Leben nicht beeinträchtigen. Sie sind die Gründe, warum wir Änderung in der Software-Entwicklung brauchen. Wir können das Beispiel \"TUMonline\" nehmen. \"TUMonline\" hat jetzt eine neue Version, nämlich \"TUMonline 3.0\". Dabei gibt es neue Funktionen, die alten Funktionen verbessern oder sogar ersetzen, damit die Nutzer*innen ihres Studium oder Berufsleben vereinfachen können.\nDie Änderung von Anforderungen ist eine unvermeidliche Aktivität bei der Software-Entwicklung, die sich aus veränderten Benutzeranforderungen, einem besseren Verständnis der Bedürfnisse der Beteiligten, Anpassungen der Organisationsstruktur des Kunden und der Verfügbarkeit neuer Technologien ergeben kann. Wenn der Kunde mit dem Design der Software nicht zufrieden ist, müssen Entwicklern auf der Grundlage der Meinungen des Kunden Änderungen am Produkt vornehmen.\nMit der Entwicklung der Technologie in unserer Zeit, müssen Techniker und Unternehmen neue Trends in der Softwareproduktivität erkennen und sich entsprechend anpassen, um die wachsenden Erwartungen des Marktes zu erfüllen. In den letzten Jahren hat sich die Bedeutung der Fernarbeit voll und ganz durchgesetzt. Die Freiheit und die Möglichkeit, von jedem Ort aus zu arbeiten, werden in der Zukunft der Softwareentwicklung dauerhaft sein.\nOrganisatorischer Änderung ist die Maßnahme eines Unternehmens oder Geschäfts zur Änderung von Schlüsselkomponenten seiner Organisation, wie z. B. seiner Kultur, der zugrunde liegenden Technologie oder Infrastruktur, die für den Betrieb verwendet wird, oder seiner internen Prozesse. Ein Beispiel dafür ist ein Unternehmen, das sein Computerbetriebssystem von Windows 7 auf Windows 10 umstellt.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264428,
      "meta": {},
      "text": "Veränderungen sind Teil eines jeden Softwareprojektes. Die Gründe hierfür reichen von veränderten Kundenwünschen zu z.B. Technologischen Veränderungen und firmeninternen Umstrukturierungen.\nBeispiel: Branchenweit findet sich im Rahmen des Produktmanagement den Begriff des Dominant Designs, dieser beschreibt eine Technologiewelche sich zu einem De-Facto-Standard innerhalb einer Branche oder Industrie entwickelt. Um Konkurrenzfähig zu bleiben können kann es häufig dazu kommen das auch die Software überarbeitet werden muss um die neuen Ansprüche des Kunden und des Marktes gerecht zu werden -> Smartphones seit 2007 haben fast alle ein Touch Display welches als User Input dient - Dominant Design. Erforderliche Veränderung: Input ausschließlich über Touch.\n\nRequierment Changes kommen häufig dann vor, wenn sich die Projektanforderungen ändern. Häufig basieren diese Veränderungen auf Grundlage von neuen Kundenwünschen. Beispiel: Ein Kunde möchte im laufenden Prozess ein weiteres feature in dem Programm einbinden. Das verantwortliche Team muss ihre Prozesse umstellen und anpassen um dieses zusätzliche feature realisieren zu können.\n\nTechnology Changes:\nWenn sich im Rahmen eines Software Projektes verwendete Technologien ändern, muss auch dies im gesamten Prozess berücksichtigt werden. Beispiel: Bei der Entwicklung eines Computerspiels werden Hardwareseitig neue Möglichkeiten geschaffen ( z.B. Eine neue Konsolengeneration wird released. Um die neue Hardware unterstützen zu können müssen bereits vollendete Teilprojekte überarbeitet werden.\n\nOrganizational Changes: \nTeams werden zusammengelegt, aufgelöst oder neu gegründet. Das führt dazu das Prozesse in Projekten betroffen werden und auf diese Veränderungen gilt es zu reagieren. Beispiel: Ein Mutter-Unternehmen kauft ein Startup. Für das bereits laufende Projekt gilt es die neuen Mitarbeiter in bestehende Prozesse einzubinden um weiterhin möglichst effizient arbeiten zu können.\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265012,
      "meta": {},
      "text": "Change in software development is basically the transition from the current state of development to a improved state, this is often caused by the change of circumstances, where one will see change benefitial or even neccessary for the success of the software. An example of such change would be that the software development team find out that using the current programming language would not achieve the desired effect, whereas another programming language will do better, in this case, the language in which the team programm will change.\n\nExamples for requirement change would be a shift in market need, where customers perhaps no longer or from now on requires a certain feature of your software, so that the state of production shall be shifted to adapt to this certain need.\n\nThings that will lead to Technology changes are for example the release of a new technology, or perhaps the team will be using a new equipment, perhaps you want to make use of 5G or more integellent AIs to enhance your performance.\n\nAn organizational change would for example be the change of laws and policys concerning the subject, another example would be the change of stakeholders and that can lead to all kinds of changes. Maybe the budget will change, maybe there would be new restraints on schedule.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265612,
      "meta": {},
      "text": "Change in software development can happen due to many reasons, but they have one thing in common: the process is insufficient to complete a required task to an satisfying degree. For Example the need for higher capacities in data storage may require an upgrade to the data management system to retain or evene increase its past access speeds.\n\nRequirements changes are changes, which are needed to fulfill certain benchmarks or requests, be it from the customer or anothe team. An Real-World Example of Requirement Changes would be the program that controls the car safety mechanism the Air Bag needs to be deployed during a small time frame, which provides a hard deadline for the program. Changes are neccessary to finetune the deployment and cooperation with other internal systems to meet Deadlines.\n\nTechnology Changes are required to make the most of the provided hardware. A console needs a different Youtube app than a Windows Computer or a Smartphone. Changes to the Code need to be made to adapt to the goal Architecture and Hardware, it could provide speed Advantages when compared to Code for unspecified Hardware. And programs should also be adapted to different input hardware.\n\nOrganizational Changes are required to be able to integrate Code from multiple People or even Teams. It isn't uncommon to design a initial program, which doesn't have the neccessary intersections needed by other teams. And to be able to make a consolidated functioning product, Organizational Changes need to be made to integrate ones Code into the existing Code. Another Example would be descriptive Programming, which leads to better Understandability for different Coders, since the Descriptors describe the function of a Method or variable.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265921,
      "meta": {},
      "text": "Software development is bound to the environment and change there is natural. For example when prices for elektricity jump high up, it is a change in the real world, but if your Team is working in a server based company, then change in the software development might be necessary, such as making the codes more efficient.\nAdapting is also necessary when technology changes, new relevant innovations can appear any time, for example when a company is based on machine learning and suddenly a new chip gets invented, specialised for the matrix multiplication for machine learning. \nAlso the requirements may change when users are not satisfied with the product, for example a more comfortable interface may be required instead of an versatile one. \nOrganizational changes can also occur, like a rearrangement of teams and tasks, when members of a team become ill for a long time or leave for personal reasons so that the team productivity decreases.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266169,
      "meta": {},
      "text": "In the process of developing a software, one can find many actors, stages and requirements that are interdependent of each other and that are subject to changes or adjustments throughout the whole process. If one unit is altered, it might cause a significant consequence in other areas, which could hinder the functionality of the software. That is why, software development is not only about coding but also about dealing with constant changes. For instance, the initial requirements defined by the customer during the elicitation of requirements, might be adapted or further developed throughout the process, which could cause a significant change in the way the software should be designed. Dealing with this \"last-minute\" modifications and re-arranging the way the software is being developed, is essential for a successful result. \n\nRequirements changes might arise due to e.g. changes in the customer's needs and goals of the project or even short-term changes in market demands or governmental policies, which can impact the basic requirements of a certain program. \n\nTechnology changes can arise if there are new technological findings or if new design standards or compatibility standards are introduced that can affect the functionality of the software when interacting with other devices. \n\nOperational changes within an organization like changes in the lines of command or changes in the way certain operations are approved, can also suppose a change for the way a software displays and executes tasks. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266402,
      "meta": {},
      "text": "Change in software development can be justified by the fact that software development is not a one minute task but more a long and time-consuming process that can take days, weeks, months or even years. More than ever before, our world today, our environment is subject to change on many levels. With that comes that planning security utopian idea in many areas of today's world. Businesses planning the year 2020 were surprised by Covid, the whole world was surprised by the Russian invasion. Software developers have to deal with changing realities very often and need to align their projects to that on a regular basis. \n\nRequirements changes are very common since most of time customers aren't fully aware of all functionalities needed in the beginning. As the product development goes on it becomes apparent what is really needed from the software. Software for an E-Commerce website might need an additional feature to allow customers to send back products through the website (instead of exchanging emails with the company.\n\nTechnology changes also happen quite often. The produced software has to interact and work together with technology that potentially gets new features. Take the introduction of 3D Touch from Apple in their iPhones. Application developers had to take this technology change into account and add features that make use of 3D Touch.\n\nOrganizational changes come from within the project team and their company. Even though project teams mostly stay the same, team members can leave or new ones can enter the team. What could also change are the tools the organization is providing for the software development.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261284,
      "meta": {},
      "text": "Change is an essential part of software development, especially when using scrum and agile programming paradigms. As building a functioning software product requires multiple steps to be taken (e.g. creating the frontend, backend and a User Interface) - change quite often happens.\n\nChange in the real world might e.g. take the form of political change - in particular the political system of a country might change - thereby having a great impact on the people living in the country\n\nFor example, change happens when trying to adapt to new wishes the product owner or the customer has:\nA customer might request a new login interface for the users - this would be in the area of requirement changes as the customer redefines the overall goal of the software product.\n\nFurthermore, when e.g. errors in a certain library occur after some dependencies have been updated or an updated programming language is not compatible to older versions, it's also necessary to adapt to changes as the product might not even work anymore. This consequently is in the area of technology changes.\n\nAdditionally, teams often consist of people with a lot of different backgrounds. Quite often, certain positions in a team might also change: For example, an expert might join the team for a certain part of the project or a new manager might take on the project after a while. This also requires adapting to a changing environment.\n\nOverall, change always happens in software development and it's very important to adapt to a changing environment to stay competitive.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1261710,
      "meta": {},
      "text": "Software development changes because its complex environments are also always changing. Thereby problems, the software tries to solve, change and there is a need for an adapted solution. Software development cannot be a strictly defined process as one can encounter unanticipated problems during development and therefore is rather an empirical process.\n\nExample: If the government introduces a law for a special 9€ ticket for public transport to drive within all cities of the country, software development might be needed to account for this new ticket type within the ticket-purchasing-app of the local transport company that previously did not expect this new special type of ticket.\n\nRequirements changes:\n- Government forces to use upload filters, which need to be implemented in the software\n- Users are not using the ice storm warning App anymore as climate leads to less ice storms\n- Legal changes to financial reporting lead to new feature requests within booking software\n\nTechnology changes:\n- New internet browser version must be supported from software\n- New programming language must be integrated into new software and old software must be adapted\n- New customer hardware, e.g. phone, requires additional development e.g. to use new sensor\n\nOrganizational changes:\n- New CTO demands change of development focus and requires other, new features of the software\n- Hypergrowth of startup leads to heavy increase in software users because of more staff\n- Business was bought by another company and software needs to be integrated in the software the buying company is using",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262479,
      "meta": {},
      "text": "As technology has changed in the past years, software development has changed too, because it is a part of technology, which is pretty often forgotten or underestimated. For example, some years ago, using local phyiscal servers were the way to host a single app. They were expensive, space-expensive and required time-consuming upgrades. Nowadays, a single server can host multiple apps/virtual machines and doesn‘t have to be on site to be accessed, which increased fexlibilty and simplified software development.\n\nRequirement Changes: In the past there was only one platform on which programmers could develop their app/programm on. Nowadays, the requirements for an app are different, as for example many want it to be able to run on multiple platforms, which means developers have to have the knowledge how each of them works. Therefore the requirements changes in regards to the knowledge and platform related skills.\n\nTechnology Changes: For example in 1980, the size of a hard drive with one gigabyte storage used to be the size of a refigerator.  This changed dramatically. Nowadays you can find a mini SD card with 128 gigbyte capacity. Therefore the technology changed for example in regards of storage capacity and with that for software developers too, as the developed software requires storage capacity.  \n\nOrganizational Changes: For example, the size of a team can vary between a start up and a global company. With increasing size, more conversation chanells members can occur. A team of two software developers has one conversation chanell, a team of ten has 45 different conversation chanells. Therefore the organization of the team has to be adjusted.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263524,
      "meta": {},
      "text": "Software Development ist stetig im Wandel, da immer versucht wird möglichst effizient und nachhaltig zu arbeiten. Dementsprechend werden unter Anderem alte Programmiersprachen durch neuere ersetzt. Hardware wird ständig verbessert und Anforderungen an die Entwickler wechseln. So wird heute beispielsweise nur noch selten Ocaml oder COMIT verwendet. \nAnforderungen können schnell aufgrund von Ideen oder Rahmenbedingungen wechseln. So können Gesetze, welche beispielsweise die Sicherheit von Passwörtern betreffen, große Veränderungen in der Softwareentwicklung nach sich ziehen.\nTechnologie wird dauerhaft weiterentwickelt. So kann die Prozessorarchitektur entscheiden, ob Programme angepasst werden müssen.\nOrganisatorische Veränderungen können beispielsweise die Gruppengröße des Entwicklungsteams, oder die Einbeziehung externer Unternehmen betreffen. In dem Fall, muss sich das Team neu einspielen und aneinander gewöhnen.",
      "score": 41.7,
      "language": "GERMAN"
    },
    {
      "id": 1264477,
      "meta": {},
      "text": "Veränderung kann in jeder Phase einen Projektes eintreten, mag sein, dass der Kunde über die Zeit andere Ansprüche entwickelt oder das durch unvorhersehbare äußere Einflüsse der Projektplan geändert werden muss. \nBeispiele hierfür wären:\nKostenentwicklung auf dem Markt (es kann sein, dass durch kurzfristigen Rohstoffmangel für andere (ressourcenschonendere) Platformen entwickelt werden muss. )\n\nRequirement changes:\nBeispielsweise wenn neue Technologien auf den Markt kommen, auf die man sich anpassen muss, um nicht für veraltete Technologien zu entwickel.\nOder wenn zum Beispiel der Kunde im nachhinein noch andere Anforderungen an das Projekt stellt, da sich seine Situation verändert hat\n\nOrganizational changes:\n-Beispielsweise die Team Situation ( durch Kündigungen/ Kinderzeit usw. kann es sein, dass auch wichtige Teammitglieder ausfallen, die ersetzt werden müssen. Hier muss sich auch überlegt werden, wenn kein passender Ersatz (Skil) gefunden wurde, ob die Arbeit dann auf eine andere Art gelöst werden kann)\n-durch Pandemien (Homeoffice etc…)\n\nTechnology changes:\n-wenn sich zum Beispiel die Versionen den Entwicklungsplattformen ändern, ist es oft sinnvoll mitzuziehen und nicht auf der alten Versionen zu bleiben, um die Vorteile der neuen Version auszunutzen \n-oder extremer, wenn zum Beispiel Lieferengpässe für bestimmte Technologien  (bsp. Chips) auftreten, kann es sinnvoll sein, zum Beispiel wieder für alte schon existierende Systeme zu entwickeln\n\n\n\n\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265141,
      "meta": {},
      "text": "Changes happen because there will be always a better way to implement something. \nRequirements changes appear because you need either better software or hardware. \nE.g. when you can't fulfil your order with todays computing power. Like when the interstellar movie was produced, people build a massive computer with a lot of computers connected to each other to render a universe. \nSometimes you just need hard- or software better than you have to make something enormous.\nTechnology changes happens all the way around, when and because somebody finds a way to do things faster, easier and with eventually less money. \nImagine yourself an open formula e.g. fibonacci sequence. Now you turn that open recursive formula to a close formula that only needs 5-6 operations to complete. The software technology changes happens the same way. As hardware is just fossilised software, i could say that gpu, ssd and other parts of computer are good examples falling into this category.\nOrganisational changes is more psychological aspect of software development. They are needed, as you need to communicate to solve bigger problems. And the quicker is communication, the bigger time you spend on programming.\nThere are two good examples. First is scrum, a method that teams use to communicate fast and effectively. Second is git, soft that allows you communicate much less.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266079,
      "meta": {},
      "text": "Change happens in software engineering because software is becoming more and more intertwined with day to day life. Because we live in a fast-paced society where change occurs on the daily, software products need to keep up. For that to be possible software engineering needs to adapt and change quickly and constantly. An example would be the “Digital Services Act” of the EU forcing software giants to enforce illegal content on their platforms. Here the software development of e.g. Facebook must be agile enough to make the change enforced by the EU possible. In this case a new law is the reason why change happens in software development.\nRequirement changes can have lots of reasons. For example the client requests a change to the product because a competitor found a new way of attracting customers with his app and the client wants to have that implemented as well. \nTechnology changes happen all the time. Often because there is a new library that solves a problem of another library or allows the developers to easier implement features/makes them run faster. If that is the case the development team needs to make a decision if they should rewrite and change the source code/subsystem/solution domain objects.\nOrganizational changes also happen all the time because in software development you unable to plan perfectly ahead. So it is definitely possible that (looking at the model-based software engineering chart) the development team realizes during the implementation that a certain architectural use case model does not work as expected and thus have to reanalyse the requirements and redesign software. This is why it is better to develop in “cyclical” systems like SCRUM. \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266081,
      "meta": {},
      "text": "In der Softwareentwicklung ist es nicht möglich ein Projekt nach einem strengen, vorgefertigten Plan abzuarbeiten, da sich die Entwicklung in einem stetigen Wandel befindet. Veränderungen in einem Projekt entstehen durch die neu gesammelte Erfahrung, die zu Verbesserungsideen führt, durch die Veränderung der Anforderung durch äußere Faktoren und durch neu entstandene Möglichkeiten, mit deren Verwendung ein besseres Endprodukt geschaffen werden kann. In der echten Welt gibt es Softwareprodukte, wie zum Beispiel das Windows-Betriebssystem, die sich dauerhaft weiterentwickeln. Die Entwickler müssen die Sicherheit des Systems gewährleisten und neu auftretende Sicherheitslücken gegenüber äußeren Faktoren schützen. Außerdem muss sich Windows fortlaufend an die Bedürfnisse der Kunden anpassen, die neue Programme und Technologien nutzen wollen. \nIn der Entwicklung ist ein Bereich ein veränderbarer Bereich das organisatorische System. Ein vorher hierarchisch organisiertes Team kann sich beispielsweise dazu entscheiden, „Scrum“ als Vorlage für den Entwicklungsprozess zu nutzen, um ein flexibleres Team aufzustellen.\nEin weiterer Bereich, der sich verändern kann, ist die Technologie. Vielleicht lohnt es sich, die Software, die für die Entwicklung des Projekts genutzt wird, zu ändern, da es eine neue passendere Alternative gibt.\nZusätzlich können sich die Anforderungen des Kunden über die Zeit des Auftrags verändern. Zum Beispiel war ursprünglich eine Software für ein selbstfahrendes Auto geplant, doch schon bald will der Auftragsgeber ein neues Automodell mit zusätzlichen Eigenschaften entwickeln, für welches die Software schon einmal angepasst werden soll.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266186,
      "meta": {},
      "text": "Change happens when people discover that there is another way of doing things (way that is better, faster, more efficient). Example: Barriers to the parking lots were previously only programmed to take and scan a ticket. Now many of them have sensors to read the car license plate (and they do that using trained machine learning models - that is still relatively new thing in software development), so leaving parking lots is much easier and faster now.\n\nRequirements changes - customers can change their requirements over time (for example: because of some new technology that they certainly need to have implemented. Exact example: if someone was making website for a customer and in the meantime css was introduced, customer would most definitely like to use it on his website).\n\nTechnology changes - we have almost every year smaller transistors, which means smaller, more compact processors. That gives new possibilities in software development and room to change.\n\nOrganizational changes - It has changed how people work together. Now  they can follow Scrum (and efficiently work together), but before (when computers were first invented and some time after that) it wasn't uncommon that someone worked completely alone on some big project. At present, much more is done in teams.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266549,
      "meta": {},
      "text": "As history has shown for decades, change has alway been part of our lives , a necessary, helpful tool in order to move forward, especially in technological fields. Developers nowadays are required to adapt, evolve in software engineering through changes.\nFor example, at NAS(The United States National Airspace System) new components being introduced for improvement, affect the older ones, because they need to be supported(such as analog and digital voice channels to communicate with the pilots). We could also mention that complexity also creates problems, as everything advances new challenges appear, the increasing and complex needs from users, developing new technologies or limitations to old ones all require the developers to advance, modify the systems. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1261768,
      "meta": {},
      "text": "words: 280, \nnumber of characters: 1901\n\nChange is not just an unfortunate circumstance, but rather a driving motor and core aspect of the software development industry. \nImagine if nowadays we were to program in the rudimentary and obsolete language of Algol - it would be, truth be told, an absolute nightmare. Clearly, change is a direct consequence of the need for innovation and as such opens a myriad of doors and oportunities for groundbreaking progress in the field of technology and specifically computer science. An example for this is the constant shift of programming languages, and introduction of new ones, which offer a broader range of functionalities and therefore have a higher potential than their predecessors.\nThe continuous change in the industry is the reason why agile methods and workflows are very important and paramount for the field of software development.\n\nWith growing demand and changing needs deriving from the average consumer, the needed requirements change as well. The spectrum of requests, consumers bring forward is ever growing and at present day shifting toward certain areas, for instance cybersecurity or personal privacy. Issues facin technology within these fields pose a considerable threat to the average consumer and require new methodological approaces and solutions. \n\nTechnology changes extend throughout the entirety of the technology industry. The earlier mentioned requirement changes lead undoubtedly to remodelling of the applied technology. Imagine storing data on flopy disks - nowadys an inconceivable and unpractical practice.\n\nAll of the mentioned above leads compellingly to changes in organizational and methodical appraches for solving problems and filling gaps in cybercecurity and other areas. Modern problems require modern solutions and modern solutions require modern, agile organizational and empirical problem-solving concepts, such as the so called \"Scrum\"-concept.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262436,
      "meta": {},
      "text": "Software development is with budget, deadline and quality requirements. Furthermore, software development is more like a empirical process that is not entirely planned but need to inspect and adapt to the environment or deviation. People involved in software development are diversified with different background and expertise. One example can be Netflix previously offer customers monthly subscriptions to have movies posted to their door later changed to stream online.\n\nRequirement Change: Changes in client's requirement. Such as adding new functionalities or develop team has understand the requirements poorly, thus need to rearrange. One example of this happening is when developing a system for accounts, the development team may lack the expertise in accounting knowledge, thus need to modify the system.\n\nTechnology Change: Implementation of a new/different technology. Example: Mobile smart phones are becoming more and more advanced and popular, many developers would start to shift their focus to the development of mobile apps.\n\nOrganizational Change: Company structure/regulation change. Example: During time of crisis like COVID-19, company may be under pressure or have changes in budget. Changes of company short-term/long-term strategy. And work arrangement change such as remote working.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262548,
      "meta": {},
      "text": "change in software development happens for the same reason change in the real world happens. Lets take cars as an example. A car nowadays is totally different to way back when the first car was made approximately 140 years ago. This is because car engineers wanted to improve their product by making their car faster, more efficient, more convenient and so on. \nIt is the desire to constantly improve things which ultimately leads to change that we have to adapt to. Software development isn't different from that.\nTechnology changes rapidly, meaning an IDE, a form of modeling or a programming language can easily become outdated as time passes. And in order to remain relevant in such an industry, it's mandatory to adapt to such changes and use what's relevant in the present day. \nThe same change is not only applicable for tech, but also for requirements. Just because a certain requirement - and that can be any type of requirement for that case - has a high demand today, doesn't mean that it has to remain that way in the future. \nThe way you organize your team could also be totally different in the future. Something like Scrum might be a popular methodology in todays time, however, just like everything else, methodologies could also change, potentially leading to different and/or more efficient organizational changes. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263424,
      "meta": {},
      "text": "Agility is important in software development because new customer and market expectations must be adapted to the existing software system while the software is constantly being improved. For example, developers may decide to move the project from an application environment to a web environment that is easier to maintain and more compatible, as the project is now intended to appeal to a larger community. As long as new ideas and technologies such as new programming languages come to market and progress continues in all areas, change in software development is inevitable.\n\nRequirements changes in software development often refer to the various adjustments in software systems that result from constant changes in customer expectations or software defects that need improvement. Over time, developers better understand the software system and the needs of the customer so that, for example, new features can be added to the app or the user interface of the project can be improved.\n\nTechnological changes often mean more elegant implementation of ideas with newer technologies, often resulting from market competition and the increasing ingenuity of people in various fields that require more advanced technological solutions. For example, the use of newer, more advanced machine learning algorithms or hardware systems enables faster and more detailed big-data collection.\n\nOrganizational changes mean fundamental changes in today's international, complexly structured software development processes, such as revising the overall project strategy/structure, adding new departments to the development teams, moving to a completely new area, or adapting to new regulatory requirements.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263690,
      "meta": {},
      "text": "Changes happen because change is the very nature of our world. Thus, it is only natural to assume that changes happen in software development too. Causes for change can come from various sources. For example, if a customer changes the specifications that a software shall fulfill, for example the appearance, in the mids of the project. Change is then basically the evolution of and adaption to outside or inside conditions.\nThe before mentioned example describes a requirement change. A requirement change might occur, when the customer wishes for altered or new features in the software. Requirements are, what the software is expected to do.\nAside from requirement changes there are two other forms of change that can occur. Namely, technology and organizational changes.\nTechonology changes might occur, when new methods or technologies are developed. An example for a new method is the rise of Deep and Machine Learning. An example for new techonologies could be the invention of quantum computers. These computes require a special set up in order to function, which required changes in the operation. Further changes might occur in the future, when computer-chips cannot be reduced in size anymore.\nOrganizational changes might caused by members of the team joining, leaving or being staffed on other projects. Futhermore, shifting deadlines might also affect the organization of a project. An example for this could be the suez-canal crisis, which affected the organization of production, because firms were short on supply.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264159,
      "meta": {},
      "text": "The change in software development is actually a reflection of the change in the solutions, which are needed to solve problems in the real world. This means, that software development changes because  the change of the problems in the real world. An example of such change in the real world is the transaction system. In the 90's people uses ATM to withdraw money and then use it to pay in a store and nowadays people can use their phone with help of an app to pay, in which the software should be developed and eventually changed more dynamically than the software in the ATM, so it can adapt to different versions and kinds of the phone's operating system. \n\nRequirement changes are changes that caused by the escalation in the complexity to fulfill one's requirements. For example, in the past people will eat in the restaurants to save time, because the food can be prepared by someone else, but now people don't just want that their food to be prepared, they also want that their food is sent to their houses to save more time ( escalation in the needs of time ).\n\nTechnology changes are changes in the tools, methodologies and techniques to solve relevant problems in the real world. For example, in the past people can still use hoes to dig the soil for the food production. Nowadays people must use tractors, because they should produce foodstuffs for a lot of people in a short time.\n\nOrganizational changes are changes in the structure of a certain community as a response to the change in the real world. For Example, before social medias were created, there wasn't a multimedia sub-division in the advertising division of a company, And now it is a division, which every company has.    ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264212,
      "meta": {},
      "text": "Change happens in software development because we are exposed to an unpredictable complex environment where we are forced to adjust accordingly. Moreover, regardless of outward reasons the requirements of clients are also of complex nature and throughout the process new realizations and demands can occur, which have to be satisfied. Due to this reason, software development has to be agile. Large parts of software development are understood throughout the experience since they are empirical in nature. Just like in the real world. Many circumstances cannot be fully planned and we have to adapt our daily lives to them. An example is the Covid-19 pandemic. Companies, governments and we ourselves have not foreseen the pandemic two years ago. Our daily lives changed completely since we had to follow certain rules. Many companies had to adjust to using more technology and widen their capabilities in that field in order to profitably and sustainably do business in the market.\n\nrequirement changes means the resources needed has changed. The requirements evolve throughout the process. It can be a service function or a feature one needs to be able to finish the project. For example required could be the know-how of certain employees regarding technical detailsand over time a different kind of service like management consulting would be more necessary.\nTechnology changes means the usage of equipment can change over time and can benefit us in many ways. This can be a certain device that can later on be replaced by a better one.\nOrganizational changes mean the structure or method has been changed. For example an employee is sick and needs to be replaced.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264622,
      "meta": {},
      "text": "-Änderungen in SW Entwicklung passieren weil Anforderungen von Produkten nicht die Erwartung entsprechen sein kann. Durch miskommunikation mit den Kunden, Technologie Änderung auf der Welt (zb Sicherheitssoftware) muss das Produkt darauf angepasst werden. \n-Bs in realen Welt: \t+Spiel release mit vielen Bugs --> muss mit Update verändert werden. \n\t\t\t\t+Sicherheitslücken --> muss gefixt werden\n\t\t\t\t+Softwarefehler zb bei Boing 737 max --> muss gefix werden\n-Anforderungsänderung:\t+Anforderung fehlt: Produkt hat eins oder mehrere Anforderungen von \t\t\t\t\n\t\t\t\t\t\tKunden nicht erfüllt, zb. Sicherheitssoftware ist nicht gegen alle Bedrohung \t\t\n\t\t\t\t\t\tgeschützt.\n\t\t\t\t\t\t+Falsche Anforderungen: Miscommunication zwischen Entwickler und Kunden.\n\t\t\t\t\t\tKunden will ein Dating-App, entwickelt wurde ein Dating-Game.\n\t\t\t\t\t\t+Anforderung unmöglich: Kunden möchte ein Programm das die P-NP Problem \n\t\t\t\t\t\tlöst.\n-Technologie Änderung:\t\t+Technologie veraltet: Sicherheitssoftware ist nicht mehr auf dem neusten Stand.\n\t\t\t\t\t\t+Bessere Methode: es gibt eine effizientere App, usw... schneller arbeiten, weniger \n\t\t\t\t\t\tStrom verbraucht,...\n\t\t\t\t\t\t+Neue Hardware die auf ganz anderen Methode basiert. z. Quantencomputer. \n\t\t\t\t\t\tbenötig dadurch anderen Software. muss angepasst werden\n-Organisatorische Änderung:\t+Teams sind heutzutage verschiedenartiger mit unterschiedlichen skills. \t\t\t\n\t\t\t\t\t\tSoft skills sind wichtig um Teamwork zu improven. Einer der gut Präsentieren kann\n\t\t\t\t\t\tkann sein Team gut sein Standpunkt sagen. Änderung zb. bei Bewerbern suche.\n\t\t\t\t\t\t+Zusammenarbeit von Teams im laufe der Zeit ändert sich. Performance kann sich \n\t\t\t\t\t\tstark ändern, daher kann auch die Arbeit angepasst werde.\n\t\t\t\t\t\t\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265395,
      "meta": {},
      "text": "We are living in a world nowadays that is so well connected and where information sharing is so easily done that change is omnipresent. Therefore also Software Development was not able to keep being an organizational defined process and needed to be more agile to be able to adapt fast to these changes. Functional and non-functional requirements can appear out of nowhere and be gone just as fast which leads to a hard task in managing these requirements and establishing them. One very big example for such a change in the real world that could lead to a huge change in software development is the unleashment of 5G. \n\nRequirement changes is as the name already indicates is all about changes in the requirement of a software for example caused by changes of mind of the stakeholders. But also changes and evolution in the market can cause these requirement changes as well as unforeseen problems in the project. One potential requirement change that could have a big impact would be a budget cut that forces the developer to engage in new ways.\n\nTechnology changes is mainly based on the idea of a new technology entering the market and therefore changing its face and offering new possibilities regarding output for the developers. It happens due to innovation and invention. One of the most obvious examples is Smartphones and how they changed our modern society.\n\nOrganizational changes is more about the way how to deal with these other changes and structuring your organization accordingly by creating new systems or procedures. If the world is fast paced and constantly changing your organization should be able to adapt to this with for example and empirical process structure such as Scrum rather than a defined process structure.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266045,
      "meta": {},
      "text": "//My Solution from EIST SoSe 2020\nIn these days changes in technology and the emergence of new business models is inevitable.\nThe market is driven by competition and new competitors challenge the established players using new approaches in order to deliver more advanced solutions.\nFor this reason the process of software is forced to be dynamic to adapt to changes in requirements, technological changes and organizational changes to be competitive and efficient in an ever-changing environment. \nThe degree of complexity demands a dynamic and fluid process, while you are confronted with emerging problems, by user feedback or a lack of applicability, you are constantly required to adapt.\nThis change in context of adaption is inevitable when you are dealing with complex systems in a dynamic environment and you are trying to deliver the best fit possible.\n\nExample: Availability of a new technology\nA new technology emerges e.g. wireless communication.\nThe demand for wireless clients rises as consumers favor mobility.\nConsequently, requirements in the software development of former stationary clients change as wireless clients become standard.\nA whole set of new user scenarios is now possible, requiring new concepts and possible solutions.\nThe extent of interaction rises, putting a strain on connectivity and data transfer.\nThe previous profile of requirements must be revised in almost every aspect.\nSoftware development needs to be agile and resilient in order to handle a revolutionary change in requirements like this, as quick adaption is mandatory.\nThe concept of Scrum meets these requirements and drives organizational change by descaling its organizational structure.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266117,
      "meta": {},
      "text": "Change in software development is a result of changes in the outside world. These changes could be technological changes, forcing to adapt your product to the newest standards as to not lose against the also advancing competition. An example would be the computer industry with the existence of Moore's law.\nAnother factor would be the demand in the market. You will not be able to sell something if nobody desires it. Products can get undesireable and then need to be adapted to something more desired. This kind of requirement change has hit mobile phones, as normal phones no longer were desired and smartphones took over.\nExisting competition can also force a software development team to react through change, as they may need to adapt, to stay relevant enough too exist beside the competition or even without competition. \nA possible outside world influence could also be law. Sometimes, regulations for certain products enforcing to build and design things standardized or just in new ways get set in place. Not too long ago, such an organizational change hit the smartphone industry, when the EU-parliament voted for all smartphone power sockets to be standardized to USB-C sockets. So now, when smartphones are designed and planned to be released in countries part of the European Union, these smartphones need to use USB-C sockets.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266163,
      "meta": {},
      "text": "Change happens because requirements change e.g. the customer requests an additional feature while the team is already in the middle of the project.\n\nRequirement changes:\nRequirement changes are necessary which are crucial to at least one party involved in the project.\nE.g. the customer requests an authentication service which wasn’t previously needed.\n\nOrganizational changes:\nThe organizational plan of a project is changed e.g. team members get reassigned.\n\nTechnology changes:\nA technology used in the project is replaced or a new one gets added.\nE.g. the team decide they dont want to use Angular anymore and change to VueJS.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261784,
      "meta": {},
      "text": "Due to our continously evolving technology, software and hardware can be outdated really fast. It happens fairly often that for example the game-engine in a gaming-project changes, other platforms or other operating systems appear that you didnt expect. So you suddently have to adapt to these new circumstances in the middle of your project. Best Example is the game Cyberpunk 2077 where they had major issues to comply with modern platforms even though this video game was brand new. Bugs and dysfunctional software was the result. \n\nRequirement changes is if the customer suddently has another problem to solve and the software engineers have to adapt. -> i.e.: customer now wants a special tax-calculation-feature in his accounting software\n\ntechnology changes are if the given technical environement changes  -> i.e.: the team decides to change from unity to unreal engine to develop their video game\n\norganisational changes are conditioned by the team itsself -> i.e.: the due-date shifts or suddently the head of the operation changes to another person",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261944,
      "meta": {},
      "text": "Jeden Tag bewegt sich die Welt weiter und verändert sich. Es werden Leute geboren und andere müssen sterben. Es gibt neue Ideen, die wieder verworfen werden und manche die sich als große neue Erfindung verbreiten. Jeden Tag ist die Erde also ein bisschen anders. Diese Veränderung überträgt sich manchmal auch in Softwareprojekte. Ein Beispiel dafür ist der Palm Pilot eines der ersten „Personal Digital Assitant“, ein tragbarer Computer, welcher Verwaltungsaufgaben für einen Übernommen hatte. Als in den 2000 er die ersten Smartphones auf den Markt kamen wurde das Design von diesem nicht konkurrenzfähig und der Palm Pilot eingestellt.\nDas war eines der häufigsten Beispiele für Veränderungen in einem Projekt ausgelöst durch neue Technologie hier Touchscreens, die das eigene aktuelle Produkt rückständig machen und ein flexibles Umdenken nötig machen.\nHäufig werden Änderungen in einem Projekt auch dadurch ausgelöst, dass man erst nach dem Anfangszeitraum ein genaueres Gefühl dafür bekommt, was der Kunde und die Stakeholder genau an Ansprüche für das Produkt haben und das Projekt sich daran anpassen muss. In der Fachsprache sind das „requirements changes“.\nBesonders werden diese ausgelöst, wenn sie in entweder der eigenen Organisation oder der das Kunden etwas Größeres ändert, wie beispielsweise die verwendeten Technologien oder die Infrastruktur der internen Prozesse. Angestoßen wird diese „organizational changes“ oft dadurch, dass ein Personalwechsel in der Führungsebene stattfindet, der mit einem Umdenken einher geht.\nDas eben viele von diesen Änderungen eine software-Projekt ausbremsen können, zeigt nochmal warum ein agiler und dynamischer Entwicklungsprozess, wie scrum, vorteilhaft seien kann.\n\n",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1262572,
      "meta": {},
      "text": "Change happens in software development with the objective to reduce costs or time and to increase the quality of the final product. For example, many companies such as the web and mobile work management platform Asana had to have their employees work from home during the pandemic in 2020. The employees managed to adjust by using their own available Asana team organisation products to (perhaps now even more effectively) communicate with each other. By quickly implementing technological and organisational changes in their work, the company managed to significantly reduce costs and successfully prevented a worst case scenario.\n\nChanges can be subdivided into requirement changes, technological changes and organisational changes. \n\nRequirement changes describe changes made to the requirements of the final product due to unexpected events. The client may have found a bug or may have forgotten to mention a requirement. Or perhaps they can now verbalise their requirements better than at the beginning. It may turn out that the requirements are not realisable as is, or too expensive in cost. The client may also be forced to include additional requirements, either by law, due to political or religious priorities, or to stay competitive. For example, Software for electric cars and renewable energy systems is being developed due to political pressure. Microsoft must stay competitive and have a search engine, because Google does. And a client may not know beforehand what kind of encryption they need for their product unless a developer advises them.\n\nTechnology change describes the use of better and more modern software. This step will lower costs, as software tends to become faster and better. Decades ago, mechanical and civil engineers used CAD software coral draw, which is much worse than software such as Autodesk with sheer endless possibilities. The difference between using IntelliJ for coding Java, and using notepad++ with no support is night and day. Ransom attacks such as WannaCry prove that outdated software may often pose a security risk.\n\nOrganisational change describes the communication and structural adjustments within a software development team. Agile methods such as scrum allow frequent role reversals to keep motivation high. For example, switching the team organisation from vertical hierarchies to self-organisation and horizontal hierarchies may increase communication time between team members. This tends to result in finding bugs and inconsistencies relatively early in the product life cycle. \n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263978,
      "meta": {},
      "text": "\"Veränderung ist die einzige Konstante\", Heraklit von Ephesus.\n\nDa Softwareprojekte die im Team bearbeitet werden meist sehr groß sind, ist es nicht möglich das gesamte System im voraus bis ins kleinste Detail zu planen.\nDaher wird es immer passieren dass ein zuvor überlegter Ansatz nicht funktioniert und geändert werden muss.\n\nZ.B. wird ein großer Vorlesungssaal eingeplant um In-Präsenz Lehre zu ermöglichen (man ist ja keine Online Uni), und auf einmal ist man froh, dass man wohl doch vieles Online macht, da man in einen kleinen Saal wechseln kann und der Großteil der Studenten die Vorlesung nun online schaut.\n\nDie drei Bereiche der Veränderung:\nAnforderung: (Was wird gemacht)\nBeispielsweise will jemand ein größeres Auto -> das Auto braucht ein Feature Upgrade da nun eine Rückfahrkamera benötigt wird -> Entwickler passen aufgrund des \"requirement change\" die Software an.\n\nVerwendete Technologie: (Womit wird es gemacht)\nDa die Kamera im Auto durch ein neues Modell ersetzt wird, mit anderem Videocodec, muss die Software aufgrund eines \"technology change\" geändert werden.\n\nOrganisation: (Wer macht es)\nDa das Budget für das Automodell gekürzt wurde, muss das Entwicklerteam auf eine Person verzichten und muss Ihre Aufgaben neu verteilen und priorisieren.\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264094,
      "meta": {},
      "text": "Changes in software development are caused by several factors. As the world changes, technology develops and improves as well. That means the systems need to be updated to survive for a longer period. If not, a new system is needed every time a change is to be made. \nNow coming to the different types of changes:\n- Changes caused by requirements come up, whenever the customer changes his requirements. Let us consider a customer running an automobile company. He wants the software to be compatible with the car. Now, if a new car with certain modifications is being produced, the software needs to be changed according to its requirements as well.\n- Technology changes come up because new machines are being produced, which are more effective etc. For example, the company comes up with a new operating system.\n- Organizational changes come up when the working team is being changed. For example, if a teammate cannot continue working on the project due to various reasons, a substitute is needed. In that case, the organization needs to be changed as well. ",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264241,
      "meta": {},
      "text": "Das Wort Software Entwicklung an sich induziert schon, dass es für den Fortschritt oder die Entwicklung Veränderung braucht. So kann sich die Technik nur durch entsprechenden Veränderungen verbessern. Anderenfalls würde sich hier auch nichts entwickeln. Auch ist nötig sich der ständig verändernden Umwelt anzupassen und das benötigt ebenso eine agile Software bzw. allgemein Technik.\n\nEin Beispiel, das diese Aussage unterstützt wäre der Fall Nokia. Hier hatte es der Hersteller verpasst sich den neuen technischne Standards anzupassen und hat verpasst auf den \"Smartphone-Zug\" aufzuspringen. Der Hersteller verpasste somit den Anschluss und musste sich so fast endgültig vom Markt verabschieden.\n\n\nAuch war es beispielsweise in Zeiten der Pandemie wichtig auf Videotelefonielösungen zu kommen. Diese Veränderung konnte man auch im Voraus nicht plannen und so musste man sich direkt drauf anpassen und aktiv Lösungen präsentieren.\n",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1264643,
      "meta": {},
      "text": "In Software development change happens frequently, because requirements can change or you approach a problem a way and you notice it is not the most optimal approach. As you empirically find out what works for your situtation and circumstances via trying different things, things change.\n\nRequirement changes: Product Owner adds mandatory changes during the development to the product backlog, which changes the frontend structure and design of your webapp.\n\nTechnology changes: Developing mobile application not only for Android but now also for IOS.\n\nOrganizational changes: Your Team starts to recruit working students to help develop test cases for your software.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264654,
      "meta": {},
      "text": "Change happens in software development due to continues change in its dependencies, such as change in requirements, in technology and organizational changes, and the need to adapt quickly to these changes.\nReal World Example: Change in design goals\n\nChange in Technology: Software development must be up-to-date with new technologies and updates to stay relevant and to improve security. Example: Quickly updating Log4j after discovering the latest vulnerability to ensure secure app and dealing with implied changes and security investigations.\n\nChange in Requirements: Software development must comply with change in the costumer requirements. Example: Client demanding a significant UI change (like new menu or home page design) of the application after the UI implementation started.\n\nOrganizational changes: Software development must comply with external organizations' requirements (like organizations/governments making regulations or standards ). Example: Software companies must comply with antitrust and privacy laws made by their governments.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266157,
      "meta": {},
      "text": "//Hallo, ich benutze meine Lösung vom letzten Jahr :)\n\nDie Veränderung in der Softwareentwicklung passiert, weil die Welt auch sich ständig verändert und digitalisiert wird, immer mehr neue Technologien und Erfindungen entstehen. Es existieren viele verschiedene Arten von Veränderungen:Notwendingkeitveränderungen, Technologieveränderungen, Organisationsveränderungen. Sie könnten die folgende Ziele haben:Verbesserung, Beseitigung von potentiellen zukünftigen Problemen, Adaption zu den veränderten Erwartungen von dem Markt, von den Leuten.  Die Notwendigkeitsveränderungen enstehen dann, wenn schon die Zeit ist etwas verändert zu werden,etwas ist nicht mehr aktuell oder profitabel und rentabel, oder den Bedürfnissen der Menschheit nicht mehr entspricht, oder auch wenn man die alte Version des Programms nicht mehr problemlos benutzen kann.  Beispiel kann auch Covid-19-Pandemie und die Folgen davon - Homeoffice und Onlineausbildung sein. Die Technologiensveränderungen sind damit verbunden, dass es immer mehr Technologien oder Bedürfnissen von solchen auftauchen und die Softwaretechnik soll sich daran und auch an den Kundenwünschen anpassen.  Das Leben des Menschen wird sehr erleichtert, fast alles passiert digital und man braucht eigentlich gute computergesteuerte Maschine zuhause, damit sie die täglichen Aufgaben erledigen könnten - Fernbedienung, Smartkühlschrank, Kücheroboter, und auch gut programmierte Systeme in Arbeitswelt. Außerdem spielen große Rolle die Veränderungen wegen Organisationsgründen. Es ist sehr bequem beispielsweise auf dem Arbeitsplatz man seine bevorzugte Arbeitszeiten mitzuteilen und bezüglich den Wünschen aller Arbeitnehmer einen Arbeitsplan festgestellt zu werden durch ein Matchingplattform.  Das ist sehr nützlich auch für die Universitäten - beispielsweise in unsere Uni, wo ein Matchingsystem benutzt wird, damit eine schnelle und leichte Verteilung der Studenten in Gruppen passiert.Zusammenhängend lässt sich sagen, dass die Veränderungen in den meisten Fällen sehr gute und wichtige Folgen für uns hinterlassen und unser Leben leicht in den schwierigen Zeit machen. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266328,
      "meta": {},
      "text": "Change in Software Development happens, if the development can’t be continued as planed. This can happen because of multiple reasons. \nOne of these reasons being because of requirements changes, meaning that the intended function for the software has changed. For example, because someone thought of an extra feature that could be added. But it’s not limeted to writing new code, requirements changes can also lead to the need of already existing code to be rewirten, because someone changed his mind about how part of the software should work.\nAnother reason would be because of technologycal changes. This category contains change, which acure ether because some new technology is available or because some techology was thought to be available but isn’t. If for example the software was intended to work on a certain type of technology, however that technology became outdatet, so it was decided the software now has to work on something newer.\nA third reason is beacause of organizational changes, meaing that the team that is currently working on this project, is being restructured, maybe they could gain new mebers to fasten the progress or they lose some to lower the prodction cost or simlpy because that person is unexpectedly unavalible. In both cases the amount of work has to be redistributed cosidering the new team size.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266485,
      "meta": {},
      "text": "Change in software development can have several reasons: Clients might change their requirements or interest, the competition might change, new technologies might influence the market and demand for change. As the IT infrastructure is constantly developing it is important to adapt. A basic example could be a change in the legal situation. Some industries, like for example healthcare, have strict requirements to encrypt their data. A changing law will effect their software development and force to adopt the new requirements. \nRequirements changes is an area of software development that will occur because of new technologies showing up in the market, changes in the requirements of the user, or also a better understanding of your client's needs.\nAs in today's world there is a constant development and progress in new (emerging) technologies, these changes inevitably influence software development. New technologies to this day moved \"desktop-only\" applications to a new sphere by introducing the cloud for example. Another example is the usage of artificial intelligence for monitoring errors in software (e.g. through Deep Code).\nAs nowadays all these technologies and software development is an essential part of almost very company process improvement and adoption to change is necessary for any business that wants to stay competitive in the market. A basic example could be a company deciding to switch to agile SD from their traditional methods to increase transparency and optimize their speed of adoption and also to support faster use of the developed system and thereby minimize risks or vulnerabilities in the process.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262075,
      "meta": {},
      "text": "The process of software development changed. Instead of controlling software development through organizational maturity (Humphrey) nowadays software development is controlled through agility (Schwaber) to be able to react fast and find the solution for every unique problem. Therefore the focus shifts from a defined process control model to an empirical process control model.\nAn example for this shift is the usage of SCRUM as an empirical process control model in software teams. Instead of building the complete software at once, in SCRUM you iteratively optimize your products with every sprint. \n\nRequirement changes: \nA change in requirements for a software could come e.g. from the customer who wishes new functionalities or a new law that e.g. demands data to be handled in a certain way within the application. \n\nTechnology changes:\nA new technology like a new operating system on a smartphone or a new chip in a MacBook can result in changes for the development team as they have to adapt the software for the new technology.\n\nOrganizational changes:\nChanging from a silo to a matrix organizational structure can have massive impact on the composition and the range of tasks of a software development team. \n \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262424,
      "meta": {},
      "text": "Change describes a transition from one condition to another. In software development it often happens because the customers requirements can change during the process or during the validation process some factors show that the system has to be changed before it can be delivered.\nFor the Requirement changes it can include changes in features or functions. Requirements can change even before the software development started but also during the process.\nTechnology changes could be a software change to open source and Organizational changes could be a transition from in-house to outsourcing. This would be a really big change and needs to be decided carefully.\nChange in general comes with more work but is also needed to improve the product.\nTherefore it is important to communicate with the customer so the problem can be tackled directly and changes can be implemented. To control changes a control model can be used e.g. Scrum so every step will be reviewed in an iterative way.\n\nA real world example could be changes in a working team. The team itself already exists but maybe some team members leave and new ones are coming. This also comes new requirements as well as with changes in tasks for each of them.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264171,
      "meta": {},
      "text": "One of the reasons why change can happen if the legal frameworks around the project change. One example of this can be seen when looking at the EU-US Privacy Shield. Companies that had been working under the assumption that the treaty would continue to be legal, developed applications that processed user data across the EU-US border. Once the Privacy Shield was ruled illegal, these companies had to work on adjusting either their product or the target group. \n\nRequirements changes:\nWhen the pandemic begun, Google's algorithm to show how crowded a place was assumed pre-pandemic capacity and therefore would always rank spaces as \"not crowded\" even when the space was actually at its maximum capacity. Google needed to update its algorithm and did so by including people standing in front of the store/space in their calculations. The requirement simply wasn't the same anymore and the product had to be adjusted.\n\nTechnology changes:\nWhen the shift from IPv4 to IPv6 started, companies needed to update their product accordingly and add IPv6 support. When technology changes, often the product needs to change accordingly in order to make good use of performance bonuses or efficiency or simply exclude technology that is no longer used. \n\nOrganisational changes:\nIf the funding for a project is cut by a large amount, the responsible people need to change the development process in such a way that the optimal trade-off between cost & quality is achieved. Another example might be the end of an employment contract with a lead programmer and turning over responsibilities. Organisational changes are the most abstract, in my opinion, as they do not influence the product directly but rather the development process around it (which then in turn changes the product, of course...)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264180,
      "meta": {},
      "text": "Because software development is a creative process there is no way to foresee all possible requirements\nor problems that might come up over the course of development. In the past we tried to plan and organize,\nthe process as much as possible, so to not be suprised and thrown off track by mentioned requirements and problems. But as mentioned, there is no real way to plan ahead far and presicely enough. Therefore the change that occurs is that we go from an overly planned approach to an empirical one, in which we go through the conventional process but at a much higher speed, in order to repeat it multiple times, while at each iteration\ntrying to solve all the problems that came up new so far and stay agile.\n\nA real world example why it is important to be open to change in systems and processes:\nConventional telecommunication companies before the rise of Skype were charging for their services and\ntheir system of communication was centralized and thus very dependent on the company itself.\nWith the rise of Skype, a new way of telecommunication was born. It was decentralized and therefore\nindependent. And it was almost for free as long as you have internet access. Some conventional\ntelecomunication companies adapted and changed and stayed alive, some didnt.\n\nRequirements change:\nA customer might want a new feature while the team is already in working progress.\nThis feature might disruppt other functionality in the existing system or cause trouble in time\nplanning. A new feature is a new Requirement, which changes the overall Requirements.\n\nTechnology changes:\nThe Skype example mentioned before. Internet comes into play, changes the available technology and\nforces companies to change.\n\nOrganizational change:\nA team always works in a certain context. It depends on and is affected by that context.\nThat context is sometimes a certain company that the team works for. Companies sometimes disolve or get aquired, and then the orginisation and the context changes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264828,
      "meta": {},
      "text": "The requirements can change if the costumer changes his mind. For example if a costumer wants a website for his company and in the middle of the development he decides that he wants to have a completely new user interface. \n\nThe technology changes if new compoments or methods are needed for the software to continue to work and be secure. For example if there is a new technology which can break the existing security of a website e.g. of a bank, the developers of the bank have to improve the encryption of their website/online banking.\n\nOrganizational changes can happen if for example the german goverment decides to make a law regarding internet security. The developers of companies which are active on the internet have to make sure that their systems are fullfilling the law of the goverment.\n\nPS: i have used some of my own ideas from the homework last year (SS21).",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265436,
      "meta": {},
      "text": "Change happens because customers need dynamic and flexible processes so that they can improve them over time. That is why change has become a constant in software development. For instance, a recruiting system for master teachers was not necessarily the same as a recruiting process for a salesperson in a watch store. The skills, the turnover, the experience is very different and having the same standard process (as in the past) for both would have made both clients dissatisfied.\nThe requirements are now different, they are looking to be able to be modified and scaled over time. This makes a standard process not work. Using the same example, the university may require a system not only for teachers but also for tutors and working students which makes that the software must be more abstract and allow to make changes.\nTechnology has also changed over time. The systems that are used are different and it is important to see how to connect them together so that they can work as a whole. It is no good to have 3 different processes for each type of employee, they should all somehow be connected and work as one.\nThe organization of the teams has also changed. Scrum methodologies have made teams more dynamic and able to generate code releases faster for customers. They are no longer waterfall processes, they are cyclical processes of continuous improvement. Thus software for the university can be used in the first iterations of the product and no longer wait until the end of the entire creation process to see it.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266362,
      "meta": {},
      "text": "Changes in software development happen for several reasons. IT-Projects are very prone to changes, even more so than others, because the IT sector is developing rapidly and requirements and field standards are changing fast. To keep customers satisfied and to future-proof your project, you want to keep working with the newest technologies and need to adapt to those changes.  \nYou can categorize changes into three areas.\nRequirement changes: These changes happen because the requirements, the things you want your software to do, might change down the line. Maybe your customer only wanted software for his warehouse keeping. A few months later, he realises his company also need that software to be connected to their intranet and should be able to order new stock automatically. As a Software Developer (Team) you need to adapt to this change in request. You might not always have to internally restructure your whole project, but your most certainly have to change your planning.\n\nTechnology changes: As said before the IT sector and its technology is developing very fast. Therefore these changes happen regularly in software development. Technology changes are caused by hardware and software changes. For example, your team might be working on software for a low-powered home appliance tool. Whilst you have been coding for a particular chipset, your hardware department might realise it can't produce that kind of power for a large scale project and it has to change to even less computing power. Software Development now has to adapt again and make sure its software runs as expected and fast as possible on those weaker chipsets.\n\nOrganizational changes: These are typical changes for every (developing) project. Your management has changed and plans to implement new hierarchies or new communication tools. Your team might get more manpower or get cut down. Either way, changes in responsibility, and therefore your project structure, are bound to happen. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266399,
      "meta": {},
      "text": "Change happens in an agile software development environment all the time because of rapid development of new technologies, changing demands from clients and changes within the team. An example from the real world would be that AI and improving computing power leads to passwords being more easy to decrypt. So in order to prevent important information from being leaked, software developers have to adapt to the changes that they expect in the future to accomplish this goal.\n\nRequirements change when the client realizes that the initial problem set does not anymore fit to the actual needs. The problem statement then has to be adjusted. For example when the client does not have a software development background they can hardly imagine what the result of the project will look like, so they will change some tasks along the way, decide to leave out some functionalities in order to safe costs or change the schedule.\n\nTechnology change happens when the technological circumstances of a project change. The team now has to adapt to the new technology in order to fulfill the clients needs. An example would be that a new programming language comes up that the client prefers. Now the software development team has to react to this change.\n\nOrganizational changes occurs when there is a change in the functioning of the software development team or in the clients team. Such changes could be for example the addition or the removal of team members. There can arise challenges in communication, execution and evaluation within the project.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266547,
      "meta": {},
      "text": "Software development is a dynamic task. Engineers usually have to meet client requisites when designing a software product, but those requisites can change with time. Moreover, during the development process, problems are ensured to be encountered and engineers need to be able to be flexible and adapt their product to the circumstances. For example, when data privacy concerns arise in a product, the development team has to make a big effort to solve this concerns and adapt their product to satisfy their clients needs (e.g. WhatsApp and the end-to-end encryption), even though it was not meant to work like that from the beginning.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266557,
      "meta": {},
      "text": "Change is an inevitable part of software development. As users' needs evolve and new technologies emerge, software development teams need to adapt their products accordingly. There are three main types of changes that can occur during the software development process: requirements changes, technology changes, and organizational changes.\n\nRequirements changes happen when the customer or user of the software requests a change to the functionality or behavior of the product. For example, a customer might request a new feature be added, or a change be made to the way an existing feature works. Technology changes happen when the team responsible for developing the software decides to switch to a new technology or platform. For example, a team might decide to migrate their codebase from Java to Kotlin. Organizational changes happen when the company that owns the software decides to make changes to the way the development team is structured or managed. For example, a company might decide to outsource its software development to a third-party provider.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261251,
      "meta": {},
      "text": "Technology develops very quickly, competitors arise, trends come and go, demands on the market change. Due to rising popularity of platforms like TikTok, other companies started adding \"short videos\" feature to their platforms\n\nRequirement changes:\n- customer updates their requirements for the project\n- developers must adapt their program so it can meet new requirements from the client\n- e.g. for many years, an online shop used to accept cash only\n- now, the owner sees the rising popularity of cryptocurrencies and their benefits and decides to implement Monero payments on their website\n- software developers now need to change the infrastructure of the software to implement such online payment methods.\n\nTechnology changes:\n- rapid technology development on the market\n- many solutions created now, can become obsolete in the future\n- things, that might have seemed impossible in the past, are now possible thanks to constantly evolving technologies\n- this can also create new problems and vulnerabilities\n- for example, today's encryption standards that take millions of years for \"classic\" computers to decrypt, could be easily decrypted by quantum computers\n- because of that, software developers need to find new, more secure ways to e.g. hash passwords and other sensitive data.\n\nOrganizational changes:\n- company grows rapidly and needs to adapt to a bigger user base or higher resource usage\n- the company employs new people to join the team and help with further development\n- if the company wants to succeed, it needs to restructure and reorganize itself so it can adapt to the new situation",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262050,
      "meta": {},
      "text": "Why change happens:\nWhile there are certain factors that can be determined by the software developers, still a lot of aspects are empirical processes, which lead to changes in the project that can not be influenced by the team, but have to be considered and adapted to.\n\nReal world example:  \nNokia was once the leading company for mobile phones, but because it failed to notice all the different changes, it almost went bankrupt.\n\nRequirements changes:\nDue to constantly changing legal, social and economic factors, the requirements can change, forcing companies to adapt continuously. This brings the developers to adapt their strategies in order to meet the requirements and be able to compete with other companies.\nLets take Nokia as a an example again: Failing to meet the markets requirements contributed to their downfall.\n\nTechnology changes:\nTechnologies and human knowledge are advancing every day and with that change in certain processes is inevitable, thus creating new standards of efficiency and technology level that software developers should consider investing in, in order to stay relevant.\nBecause Nokia focused on making mobile phones, their phones got outdated and were replaced with smart phones on the market.\n\nOrganizational changes:\nWhile working on certain projects, it can come to unexpected changes. For example there was a certain amount of money assigned to the team, but then the budget got shortened, so certain qualitative aspects would have to be cut and . This requires the team to be flexible and prioritize certain aspects and reorganize their initial plan, accepting the changes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262190,
      "meta": {},
      "text": "Change happens because of the rapid change in technology sector and the environment. With environment I mean the government and the market. When the government comes up with new regulations and laws, you have to change your project according to that. Or when a rival company comes up with an idea and thus has the upper hand on the market, you should change your future plans according so that you don't collapse. As an example we can observe the new features in Instagram that came out in last years. After the success of snapchat stories, Instagram came up with a new feature called instagram stories and this way he satisfied his users. And when Tiktok came up with the idea of short videos Instagram adapted this idea to it's application and started reels which helped them to compete with Tiktok.\n\nTechnology change is the changes in technology sector. As an example we can give the change in programming language world. Every year some languages die, while the others dominate. And the ones that dominate today's world such as Pyhton or Java, might loose their importance in the next years. \n\nWhen the users or stakeholders' needs change, its called requirement changes. Or it might be also because of the mistakes while capturing the requirements of the client. As an example a client can be given who wanted to have a free application for every user but changed his/her mind on the way and wanted to have also premium users who pays for the application for better options. \n\nOrganizational changes are the changes that occurs while implementing the project. For example, decreasing or increasing the number of scrum meetings is an organizational change.\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263696,
      "meta": {},
      "text": "Everything evolves constantly, that's why change occurs. Society changes its opinions over time, technology gets developed further and organizations adapt to changing environments. It's a cycle that repeats itself and which affects everything. This is a challenge, especially in the realm of software engineering.\n\nFor example: Most of the finance sector runs on software developed many decades ago. Numerous changes have made this software not suitable for the current environment but it's difficult to renew it due to complexity. Technological change provided better alternatives. Societal change lead to different requirements which can't be incorporated easily. And organisational change lead to many new functionalities, which lead to even more complexity or an additional need for flexibility, which is challenging to provide.\n\nIn this example the three areas of change can be seen:\n- Technological change: Technology is always developed further. The currently used technology is outdated (sometimes even in a timeframe of a few years) and has to be renewed\n- Requirements change: The wants and needs of humans change over time and lead to different requirements, which have to be adapted into software systems and products\n- Organisational change: Organizations are constantly changing and restructuring to stay competitive. Software systems have to adapt to that and provide the best possible value.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264555,
      "meta": {},
      "text": "The software development can't avoid changes, because everything in the world is dynamic. Just like I planned to travel all over the world in 2020, but the covid-19 stopped my plan. And I have to stay at my school. And another example is, a person want to attend the onsite course at tum, but the underground didn't come in time, so he had to change his way.\nThere can be lots of reasons such as requirements changes, technology changes, organizational changes, political changes and so on.\n\nIf the clients didn't provide enough information about their requirments, it can lead to many problems. For example, they want to add to bed each time, and actually they want bunk bed, but without enough details the developers may implement the method with two parallel beds. It's a communicating problem.\n\nAnd for the techology changes it can be the incompatibility. As we known, the jdk is keeping changing, and each version has different functions, and sometimes the new version isn't compatible with the old versions, so they have to change what's already done.\n\nThere are alos some organizational changes. Their working model, people in one team and technique of the team might be changed. It is possible, that a team can change their working form. Before they have fix working time, but now they only have to finish their project timely and they can use the time with freedom.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264673,
      "meta": {},
      "text": "Dass Veränderungen in der Softwareentwicklungen passieren können liegt daran, dass sich u.A. auch Anforderungen an die Software während des Entwicklungsprozess' verändern können. Zu beginn der Impfinitiative Bayerns im Zuge der Coronapandemie wurde beispielsweise eine Software entwickelt, die den gesamten Prozess im Impfzentrum von Empfang bis Impfdokumentation, Fragebogen und Impfzertifikate begleitete. Da sich die Politik, die Impfkapazitäten und Empfehlungen des RKI ständig änderten, mussten auch die Entwickler dieser Software ständig Ihre Ziele neu setzen und priorisieren um Features wie z.B. die Einführung von Impfzertifikaten schnell in Software umsetzen zu können. Dies ist ein deutliches Beispiel, warum ein Entwicklungsprozess bei solcher Software auf Veränderungen reagieren können sollte.\n\nVeränderungen in Anforderungen können z.B. ausgelöst durch politische Regelungen die Ziele der Software in manchen Teilen neu definieren: Bei Änderungen der Datenschutzverodnungen auf politischer Ebene könnten sich Anforderungen eventuell auch verändern. \nTechnologische Veränderungen passieren z.B. wenn eine neue Technologie auf dem Markt auftaucht, welche die Software oder Ausführung der Software im großen Maße beeinflussen könnte. Ein Beispiel dafür wäre eine neue Prozessor-generation, welche eine Software schneller ausführen lässt.\nOranisatorische Veränderungen sind z.B. an die Ziele und Strategien eines Unternehmens angeknüfpt. Wenn sich ein Unternehmen dazu entscheidet, sich dem Klimaschutz zu widmen und nur auf erneuerbare Energie und nachhaltige Methoden setzt, kann das eine Veränderung in der Softwareentwicklung bedeuten.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264882,
      "meta": {},
      "text": "The reasons for changes in software development can be quit diverse. One reason for changes in development could simply be that a client isn't happy with something that was implemented and wants it implemented in a different way or he simply tells the development team about a new feature he wishes to get implemented. Such a request would most definetely lead to some sort of delay for the development where the team has to find out how to implement these changes.\nAnother potential change could come through the introduction of better technology. An example for that would be if a software development team was working on a game with online functionalities. It could be that through development their server structure and/or netcode could be outdated which could lead to a complete restructuring of their online functionalities.\nThe last origin for change could lie within organizational reasons. Most of the time, especially in the gaming industry, the development teams won't be able to complete the project until the deadline resulting in two potential outcomes. They either scrap certain ideas altering the finished product in the process or delaying the product. The development process would change either way.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264884,
      "meta": {},
      "text": "In just a few years, people have gone from floppy disks to cloud storage, from blurred black and white pictures to HD streaming, and from primitive systems to software systems that amaze with the number of their features and applications. I believe that change in software development happens simply because the rest of the world is changing, which requires the development process to be more efficient, flexible and as perfect as possible. For example, a switchover from Waterfall to Agile Methodology, which allows to substantively move the development forward, while detecting errors in time and correcting them instead of getting a crippled project by the deadline.\n\nRequirements changes: the particular case of Netflix. Netflix was initially selling/renting DVDs by mail, but after the demand ceased, it changed to a  streaming platform. Once consumers’ requirements have changed, the company has found a way to stay in the industry by implementing an appropriate technology, software, etc.\n\nTechnology changes: Cloud Computing. Users no longer need to buy expensive hardware to get good computing power - they only need qualifying software and a good internet connection. Thanks to cloud technologies, software developers can, for example, deploy products without focusing on the features of a particular system, but at the same time distribute the product to all categories of users. \n\nOrganizational changes: Outsourcing. A company hires another company or just a person to be responsible for a part of the project, so three is no more goal to have a huge staff in the office or an office at all. Such an approach should serve as a reason for changes both in the organizational management of hiring companies and in the management of recruited companies.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265901,
      "meta": {},
      "text": "In software development, change happens all the time. This is because no one is able to predict the future, and pretty much everything from requirements to resources could change at any moment. For example the law never really said anything about self driving cars, but when incidents started to happen people realized that self driving software needs to be regulated in some way. This might be incorporated fully into the law and as a result developers of autonomous driving software will need to follow these laws, even if they are already in the middle of development.\nGenerally speaking, change is mostly caused by three things:\nFirstly, the requirements could change. If a customer realizes that they need some additional features, these will also need to be incorporated into the project and resources have to be allocated for them. An example might be a library owner that ordered a system to keep track of which books are curently rented out, but then decides that they want this system to be accessible not only be the staff of the library, but also by clients of the library.\nSecondly, technology always changes. Imagine developing a webservice with python and flask, but then you learn about docker and it's scalability. Migrating to docker might be costly, but it could vastly increase the performance of the developed webservice.\nThirdly, sometimes organizations change. The project owner might change, and with it the focus of the project.  As an example think of a company that cuts the budget of a project severely because another project is assigned a higher priority.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266121,
      "meta": {},
      "text": "Change happens in Software Development for many reasons. \nOne of the reasons is that software is a very important component of our daily life’s – whether in health care, research or our daily coffee from our espresso machine - software can be found everywhere. So as a result of the high demand for software technology, software development changes all the time. An example for change in the real world includes the considerable change of Software through Artificial Intelligence over the past years. Software developers use AI tools to handle many tasks, such as project planning, test automation, or code compilation. \nConcerning this topic, there are three important areas: Requirement changes, technology changes and organizational changes. As I mentioned before, we humans make a big contribution to software development. Through the progress in technology development, the requirements obviously also (need to) convert and adapt to the new standards of todays technology. \nA significant present example, that combines all of the three areas discussed previously, is Covid-19. In 2020, we were confronted with an immediate adaptation in software development. Our society was pushed to change the standards of living, especially in schooling facilities as no real social interaction could take place. As a fast rise in Technology took place, we were able to overcome those struggles. The organization had to change. For that to happen the requirements changed: There needed to be more technology in order to make it possible for students to be homeschooled. Therefore, the big software “zoom” made a big progress in its development. \n\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266277,
      "meta": {},
      "text": "To maintain the quality and reliability of a software, the software must be able to adjust to constant changes and directly or indirectly affect it. Say for example a certain software where security plays a crucial role, is dependent on a certain library, but then it turns that library had some vulnerabilities or security threats. The software then needs to be readjusted to cope with the problem. Change also happens when a software needs to support new technologies and be compatible with new hardware.\n\nRequirement changes: A Software needs to be expandable, say for example a customer wants to add new features to their application, or choose to stop supporting older versions.\nTechnology changes: A Software needs to be able to support new technologies, for example, an app used to use the IP address of the user to locate their devices, and the customer decides to use GPS when it's available instead for more reliability and precision.  \nOrganizational changes: If a team member suddenly gets sick, or quits their job, the development team need to cope with this change and readjust their tasks accordingly. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262614,
      "meta": {},
      "text": "Es gibt ständig Veränderungen im Bereich des Software Developments, da sich die Umwelt auch andauernd verändert. So kommen ständig neue Technologien auf den Markt, die Menschen könnten anfangen anders über bestimmte Produkte zu denken, oder es können sich Sachen in der Politik ändern. Wenn man sich nicht an neue Trends und Veränderungen anpasst, läuft man als Firma Gefahr, zugrunde zu gehen. Ein Beispiel hierfür ist Nokia, die sich damals nicht rechtzeitig an den neuen Trend der Smartphones angepasst haben, während Samsung und IPhone den Umschwung antizipierten und dadurch, im Gegensatz zu Nokia, enorm profitierten.\n\n\"requiremnet changes\" meint, dass sich beispielsweise die Anforderungen während eines Projektes ändern. Wenn sich der Auftraggeber etwa während der Entwicklung dazu entscheidet, dass ihm ein Aspekt des Produkts nicht gefällt und er es gerne anders hätte, muss man die Anforderungen gegebenenfalls neu anpassen.\n\n\"technology changes\" meint, dass ständig neue Technologien entwickelt werden und man sich ständig an diese anpassen muss. So könnten Quantencomputer die Rechner von heute ersetzten, wodurch sich auch die Software Developer und Firmen an die neue Technologie anpassen müssen. Wenn man diese neuen Entwicklungen einfach ignoriert, kann es sein, dass in der Zukunft alle Firmen diese neue Erfindung nutzen und man selber dann zu spät dran ist, um noch davon zu profitieren.\n\n\"Organizational changes\" meint beispielsweise, dass Teams immer größer und internationaler werden, weshalb man die wachsenden Teams gegebenenfalls umstrukturieren muss. Wenn beispielsweise ein Teil des Teams in Amerika arbeitet und der andere Teil in Deutschland, muss man Teammeetings auch auf die verschiedenen Zeitzonen anpassen.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1263268,
      "meta": {},
      "text": "Changes in software development can be caused by a number of things but all of these Changes are caused by the fact that software developement is a new and modern challange which goes through constant change. This is why we need to adapt to Problems that might just be unsolveable, like a truly random number, or new programming languages we need to pick up, or systems we need to deliver on time, while making sure it works and while being able to maintain it afterwards. All of these are common challanges software developers need to be able to handle. \n\nAn Real-Life example is the Corona Pandemie during which programmers needed to work from home. With CO-Workers who speak other languages, who are living on different continents and who you may have never seen in real life. It is difficult to work as a team if the entire team constists of strangers.\n\nRequirement changes are changes in what  is expected of you. For example if you were hired to build a website but now the employer also wants an app and a database. These changes may simply be too much for you but you have to adapt. \n\nTechnology changes as well as there are constantly new techniques to solve a problem, new programming languages being developed and new ideads becoming reality. You need now about these changes. \n\nOrganizational changes can also be important because if the board of a company changes they might feel like they dont need two front end developers which means that you might have to learn something totally new or you might even loose your job.\n\nEvery software developer needs to be able to acknoledge and to overcome these challanges. \n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263604,
      "meta": {},
      "text": "Software around the world changes at a rapid pace. This is due to many reasons, such as new hardware  being released that supports more complex and ample systems, new laws, that obligate developers to adjust their programs, and most importantly:  market competition. Smartphone mannufacturers for example, companies constantly have to release new products with new features suchs as face recognition or finger print technology, to set themselves appart from the competition or not fall behind, remaining relevant.\n\tRequirements change is when the requirements or funtions a software system must be capable of change midst or after its implementation. This can occur because of changes in user requirements, for example when a the traffic on a server is greater than expected or suddenly grows, and to ensure that everything remains functional the software must adapt.\n\tWith new technologies constantly being developed, new software that can utilise this technology or at least be compatible with it must also be produced, refered to as technology changes. Mobile devices are a great example of this. Websites and applications are no longer exclusive to PCs, and when smarphones became popular many companies had to adapt their systems, to make sure their products functioned smoothly not only on desktops.\n\tOrganizational change describes the actions  which alter a major component of a buisiness' organization, technology or infrastucture.  New teams might be formed, or hardware might be upgraded or disposed of. In any case, this changes how a software developer within the organization operates.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263830,
      "meta": {},
      "text": "There can be a lot of reasons why change happens in Software Development. Being such a long process that rarely takes less than a year, and a lot of times needs to be updated for time to come. Being such a year's long process, a lot can happen in the world. New technology coming out, current technology becoming outdated and unusable, even world events and politics can affect the Development!\nThe best example for this is pretty much every game. Most of them take years to develop, with a team of people working on them, depending on it. And the change can come from new game Engine updates (Software being updated) to new consoles and or PC components coming out (New hardware). Respectively, all those things can become outdated. A good example for this is in software would be the Source engine. It is probably one of the most famous ones, being responsible for a lot of now legendary games (Half-Life 2, Counter Strike, Dota 2, Garry's Mod, Team Fortress 2, Portal, Left 4 Dead, Bloodlines, The Stanley parable, etc...). Nowadays, nobody uses that Engine any more, mostly because Source 2 got released, but even that one is only being used by Valve themselves. So if you were making a game in the Source Engine, you would have to change it to another one.\nAnd the last point, about World Event's or political Situation, they can affect it as well. You don't have to look further than the current Russian Invasion of Ukraine. Pretty much every Ukrainian development has been halted, and I don't see much of the Russian ones leaving the Country as well anytime soon.\nThe rest is quite easy, being such a long process, requirements may change during the Development, because things already discussed. But also by incompetence, because previous requirements were faulty and/or incomplete, and they have to be revised.\nTechnology Changes has also been discussed already, that includes Software and Hardware.\nLastly, organizational changes, have mostly to do internally with the development team. If people quite the Project while it is still being developed, thee entire team has to be reorganized. Just look at the development of Anthem, they had a lot of people leaving. But organization can also be rearranged because of feedback they have gotten, and need to change how they work on the project. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264545,
      "meta": {},
      "text": "Changes in requirements for software can often occur during its development, requiring quick changes in direction to satisfy. For example, requirements can change when feedback from end users highlights the need for a previously not included feature or when the target customer changes in response to new market research.\n\nAnother area of change in software development is technological change. New technological requirements such as, for example, a CI/CD pipeline or better scaling for a website, can require tech stack changes or even new personnel with experience in the topic. New technological frameworks such as, for example, a new web development framework or even just a new update to an in-use framework can also require changes to the codebase.\n\nThe third area of change in software development is organizational change. A great example for this is when coronavirus pandemic hit in March 2020 and many companies were forced to lay off workers, significantly affecting the organizational aspect of software development. All of a sudden not enough workers were available to maintain and develop the same code that was previously being handled. This meant that organizational changes within companies such as a restructuring of various software development teams were needed to continue operating effectively. Additionally, many companies were also forced into remote work. This significantly affected day to day processes as new organizational paradigms such as messaging software (slack) and video conferencing software (google meets, Microsoft teams) were brought in to continue to allow for effective communication within the company.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265292,
      "meta": {},
      "text": "In software development it’s important to account for change to happen, as a system may require a revision if there is a vulnerability discovered (for example Log4j), the scope of the system changes (to react to changes in the market), new technologies (new hardware) is available to improve functionality, or new legal constraints are enforced.\nRequirements changes are changes to the requirements of a project and could for example occur when requirements are cut because of insufficient funding, or when the project scope increases to accommodate functionality to stay competitive in a given market.\nTechnology changes occur are when new hardware is available that can be exploited for better performance and new functionality (GPUS for example). \nOrganizational changes are possible I the case that the scope of the project, the team behind it and the organization grow, to a point that the team needs to be reorganized. \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266263,
      "meta": {},
      "text": "In the process of software development we often face a lot of changes because the team has a goal too improve their product and to optimize the working time. \nRequirement changes are really challenging as sometimes a whole team has to reorganize their work to accomplisch the tasks and wishes of a customer, that might be changed while creating a project for example because of external factors(laws, policies, wishes of a customer, mistakes made during planning ). Sometimes this changes are based on a changing of laws of IT-sphere as this one is developping really fast and people care more and more about privacy policies. \nThe other type of changes is organizational changes. The company might try to change its structure,culture,leadership or organisation form in order to improve the productivity or because of some external influences. So nowadays a lot of companies change to the scrum-form to offer better working conditions to their employees and to improve the quality of products. This changes often happen when the small company ist starting to grow and people have to share tasks or delegate some tasks to other people.\nThechnology changes play the huge role in software development as companies try to deploy them as fast as possible as it increases the competitiveness of a whole company. For example nowadays a lot of companies try to use artificial intelligence to make their products easier to use.\nSoftware developpers want to make users life easier creating new apps and programms. As the world and user's needs are changing really fast, software developpers have to pay attention to a lot of things and organize their work in the most productive way. So nowadays a team work is one of the best ways to create a good product and many companies have to reorganize their structures and deploy new technologies to succeed on a market.A great example of such a company is apple which is using scrum and tries to deploy new technologies such as AI(siri) or camera with TrueDepth for FaceId",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266306,
      "meta": {},
      "text": "Change in software engineering happens  \nto adapt to new circumstances (e.g. unpredicted ones like new legislation, new trends, environmental changes, etc).\nWhen Apple dropped iOS 14.5, apps had to seek permission to track users. Consequently, Facebook (Meta) lost about 10 Billion dollars due to this change. In this case,  they had to review their software, considering the new circumstances, and come up with an update  to stop losing money.\n\nRequirement changes-> happen at any stage, it is quite difficult for customers to list their needs upfront and discretely. Often changes occur due to incorrect/impossible requirements.\nAn example might be a case where a working prototype is demanded in a very short period (e.g. days).\n\nTechnology changes-> more and more new technologies like AI, ML, RPA,  and Computer Vision become mainstream, and sometimes it is beneficial to utilize new tools on the new software update.\nFor example, if developers have to deal with a legacy system, they might try methods like process mining to facilitate understanding more about the system's functionality.\n\nOrganizational changes-> sometimes changes occur within the developer team itself. People might quit, others might join the team, and to deal with this, changes might be needed.\nFor example, if a software engineer, that was responsible for programming chips in a barely used programming language, retires, the company might need to consider using another language/chip.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266553,
      "meta": {},
      "text": "Change happens in software development because the world and technologies are ever evolving. We, as society, are constantly faced with new problems to which we have to find solutions to, which means we also need to develop new technologies to tackle these problems. This means that software development is a constantly evolving and changing field. An example of change in software development is our mobile phones. The software used on our mobile phones has changed drastically in the last 10-20 years. Before, people were content with a mobile phone if they could call someone else, nowadays, software has to consider the demand for phones to be used for a wide range of things- from taking photos to online banking. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262084,
      "meta": {},
      "text": "Change. The staggering speed of Innovations in tech alone is a huge change factor in Software Development. Hardware and Software change, organizational standards change. The Software development process has to adapt to that.\nAlso, bug fixes and issues that come up after the rollout need to be changed. These changes can also incorporate Reliability and/or Performance improvements and adaptions. Implementing more features is also change.\nAs you can see, software development is riddled with factors and reasons for change.\nAn example from the real world would be a company having to adapt the development to focus on changing from one infrastructure to another, and adapting the Software to integrate into the new environment. \nRequirements changes are changes that occur when there's a need for functionality that is not yet implemented in the software product. That could be the above mentioned infrastructure change.\nTechnology changes are changes that occur when emerging technologies replace existing ones. This could be due to Research or Development advances. An example is using a new and more fitting framework tackle a problem.\nOrganizational changes are changes that occur when the management structures behind a software development project shift. An example would be new leadership in a department or even the company.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262127,
      "meta": {},
      "text": "Changes in software development can occur for numerous reasons. For the most part however, these can be divided into 3 subcategories: requirements changes, technology changes and organizational changes. \nAll of these require careful and meticulous adjustments, if the productivity of the software development team is to remain unchanged.  \nA change in requirements implies that there are certain expectations and criterias to be met for the due date of the project. These are usually dictated by the client/customer and can range anywhere from extended functionality, to support for different hard-and software. An example of this would be a client requesting for their software to be supported on a different/new type of a processor architecture in the midst of the development.\nChanges in technology take place constantly, as hardware manufacturers optimize their product and release updated versions. The software development team needs to ensure that their equipment is up to modern standards and can handle any task thrown at it, while retaining support for the newest versions of the utilized software. A change in technology can prompt the developers to update their own equipment or force them to adjust their software in order for it to remain supported and stay afloat in the market. \nLast but not least, organizational changes are the ones that take place within the development team itself. An example of this would be an introduction of a new employee or anything that affects the structure of the development team itself. \nAll of these changes are hugely important and can have a tremendous impact on the workflow and the team's structure. As such, they require constant monitring and adjustments on the behalf of the developers and can be detrimental to the outcome of the given problem. \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262785,
      "meta": {},
      "text": "Das Gebiet der Softwareentwicklung und die Softwareentwicklung selbst sind ständig dem Wandel und der Veränderung ausgesetzt. Die Softwareentwicklung ist komplex und kann deshalb nicht als ein linearer Prozess im Voraus vollständig geplant und nach einem exakten Regelwerk ausgeführt werden. Viele Dinge sind nicht vorhersehbar wie zum Beispiel, dass für die Lösung eines vermeintlich einfachen Problems deutlich mehr Zeit benötigt wird als eingeplant. Die Softwareentwicklung muss auf alle Eventualitäten vorbereitet sein, aus Erfahrungen vergangener Herausforderungen lernen und sich dauerhaft den aktuellen Umständen anpassen können. \nDie Veränderungen, die im Verlaufe eines Softwareprojektes eintreten können, lassen sich in drei Kategorien gliedern:\nDie erste umfasst Veränderungen, die sich auf die Anforderungen beziehen. Es ist nicht selten, dass ein Kunde die Anforderungen an die zu entwickelnde Software mitten im Entwicklungsprozess anpasst oder vollständig abändert. Gründe dafür könnten sein, dass der Kunde zu Beginn noch nicht in der Lage war, seine Vorstellungen präzise darzulegen oder er bemerkt, dass die Anforderungen doch nicht dem entsprechen, was er letztendlich benötigt.\nDie zweite bezieht sich auf technologische Veränderungen. Der Technologiemarkt ist sehr schnelllebig. Ältere Technologien werden durch neue ersetzt. So kann es sein, dass dem Softwareentwicklungsteam auf einmal bessere Hardware zur Verfügung steht, die es vereinfacht, die geforderte Performance zu erreichen oder es wird ältere Technologie von Drittanbietern nicht mehr weiter unterstützt. \nDie dritte und letzte bezieht sich auf organisatorische Veränderungen. Ein Teammitglied fällt aus, die Arbeitszeiten verändern sich oder das Verfahren, nach dem die Software entwickelt wird, wird ausgetauscht. \nVeränderungen sind allgegenwärtig und erscheinen in allen erdenklichen Formen. ",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1262952,
      "meta": {},
      "text": "Changes during the software development occur as the world, the markets and the customer demand continuously change. E.g. people maybe didn’t ask for some things in the past, because we didn’t have the technology, but now that technology is available, they want those things included.\nA great real world example for the aplication of agile software development is Philips. After numerous changes to its management structure, the firm introduced several Agile coaches that went to deploy Scrum principles such as Scrum boards and breaking down teams into smaller ones. As a result of changes like these, teams could react to situations faster and bureaucracy was minimized.\n\nThe different members of a team can frequently be exchanged or the strategy itself may be adapted due to bugetory changes or a delay in delivery.\nOrganizational changes can also be mandatory in order to enhance the overall efficience of the project by applying the mentioned Scrum principles. Creating smaller groups, instead of one big group makes organizing and running it easier, more time efficient, and offers a more frequent interchange of ideas.\n\nWith rapidly changing technology, everyone wants the latest and greatest. If you have a long development phase, and many products do, the technology will be changing and the developing team has to keep up and relpace outdated media.  \n\nChange of requirements occurs during the development phase if the solution to the requested problem is to complex and cannot be realized. In that case the problem is divided into smaller problems, that can be solved or alternatively the whoole approach is altered to solve another problem that can equally satisfy the customers needs.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263726,
      "meta": {},
      "text": "Software development is an empirical process and can't be a defined process, because too much changes during the time in which a team is developing software/a product. A predefined process will most likely result in a disadvantageous and unexpected outcome because requirements change, technology changes and there could be organizational changes aswell. An example for a requirements change would be following: The costumer for whome a product is developed was not very clear wih the details of his product, so he demands a change in for example the UI design of a software which is currently developed.\nFurthermore there are technological changes espacially in computer related topics. The team which develops a product may have to ask themselves to switch to a newer and better engine for developing certain aspects of the product. If one had a predefined process in mind, this aspect would be totally neglected.\nThe third change that could occur while developing a software, is organizational. It could happen that some members of the team are taken off or that other people could join. So you have to stay agile to these changes and adapt.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264011,
      "meta": {},
      "text": "Change happens and happened in software development (SD), because it was needed. Many SD-projects were failing, because they took too much time, money, often even the delivered software was outdated, by the time it was shipped. The change was delivered by using a new philosophy in SD. That approach was, what we call \"agile software development(ASD)\" brought about the needed change.\n\nA. Requirements changes:\n\t- You are more often in contact with the customer, so you can adopt easier to changing \n           expectations, and market trends (before agile, problem statements and its solution had to be defined \n           clearly before even starting to work)\n        - Changes even late into the project are welcome (Not everything is done after\t\t \t \n  \t   strict plan, and deviations from the early requirements are prohibited)\nB. technology changes: \n\t- documentations are important, but way more important is it to ship working software regularly (before \t\t\t\t\t\t \t\t \n           that developers used up an extreme amount of documenting)\n\t-  user focused testing (before that, testing started after the developing process was finished, and users    \n\t   where not actively involved in the testing process\nC. organizational changes:\n\t- scrum oriented development in the team\n\t- domain experts and developers meet regularly, (before you did basically contractually write down what \n           was expected, how the customer wanted it, almost no contact until delivery)\n        - working in a team is more important than just working in a group (soft skills and competent \n           cooporation is more important)\n        - positions in a team are more flexible if the situations require it (more flexibility in agile SD)",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264197,
      "meta": {},
      "text": "Change happens in software developement because of continuously changing requirements due to new needs of the client, political decisions, bugs in software or new technologies.\nA bigger example in the real world is the political decision of reducing CO2 emissions on earth, which led to new software in cars to reduce emissions and finally the transformation within car companys to focus their business more on electric cars.\n\nRequirement change happens in a project, when you start with the initial requirements and while working on the project the need of the clients are better understood or changed with increased time spent working on the initial problem. Sometimes requirements also change due to political decisions or when a competitor releases a new product with features you don't have in your own product. A good example is when apple introduced the first iPhone, which triggered a change in requirements in all other phone manufacturers.\n\nTechnology change can happen due to political decisions e.g. the need to reduce emissions in nature and therefore to keep reducing emissions by vehicles with combustion engines. At some point the cost or complexity of further developing combustion engines gets to high while continuously improving the product, which leads to new technologys in the market like electric cars.\n\nOrganizational change is the process within a company or team, when the company tries to change the culture, processes or infrastructure it uses due to changes in new technologies, due to changes in the business model or when the leadership in a company changes. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264281,
      "meta": {},
      "text": "There are multiple reasons for change in software development, on the one hand, change in software happens because of the new ideas or more efficient solutions to the old problems. On the other hand, something in the real world happens, that forces software developers to make a new software, that would solve the up-coming problem. The example of the change in the software development could be the new versions of apps in the App Store. Mostly, developers update their apps because of the bugs, new features, that are wanted by apps users. To be more precise, I noticed that there is a new feature in the SparKasse-App, that allows to request money from the contacts.\nRequirement changes are changes that are forced from the real world. For instance, today people have very strong concerns about data privacy, and software developers have to accept that and change the data privacy settings and software in order to observe these rules.\nTechnology changes I see as changes in hardware, that then leads to a change in software. For instance, when smartphones and the touch screen were developed that lead to a whole new software, that could support these technology changes.\nOrganizational changes I see as the changes in organization of software development. For instance, now developers are used to cobstantly reconsider all the needs and possible solutions of the newest problems, because they found that it increases the efficiency. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264981,
      "meta": {},
      "text": "Softwareentwicklung ist von Veränderungen geprägt, da es sich um einen dynamischen Prozess handelt und Software oftmals über längere Zeiträume entwickelt wird und auch nach dem Release noch verbessert und upgedatet wird. \nMan unterscheidet drei Felder, welche die verschiedenen Ursachen von Veränderungen repräsentieren. Erstens technologische Veränderungen, sobald neue Technologien auf den Markt kommen, für welche man neue Lösungen für vorher bereits gelöste und gänzlich neue Probleme finden muss. Ein konkretes Beispiel dafür ist die derzeitige Forschung an Quantencomputern, für welche es neue Algorithmen beispielsweise zur Primfaktorisierung geben wird, welche derzeit noch sichere Verschlüsselungsprotokolle unbrauchbar werden lassen wird. Unternehmen, welche ihren Kunden z.B. Lösungen im Bereich IT-Sicherheit anbieten wollen, arbeiten schon jetzt daran, auf diese Veränderung vorbereitet zu sein und versuchen deswegen neue quantensicherere Konzepte zu entwickeln. \nZweitens gibt es Veränderungen bei den Anforderungen, welche an die Software gestellt werden. Diese können z.B. durch gesetzliche Veränderungen auftreten. Das ist offensichtlich z.B. bei den meisten Webseiten zu erkennen, welche sich an die Cookie-Richtlinien der EU anpassen mussten, welche letztes Jahr in Kraft getretenen sind. Dafür musste zunächst herausgefunden werden, welche Cookies technisch notwendig sind und welche nicht. \nAußerdem gibt es organisationale Veränderungen, an die sich der Prozess des Software Develpoments anpassen muss, beispielsweise wenn sich die firmeninterne Struktur ändert und sich somit der Arbeitsablauf im Unternehmen ändert, beispielsweise werden neuerdings in vielen Firmen Data Science Abteilungen eingerichtet, welche sich primär mit der Auswertung von Nutzerdaten befasst, um das Produkt der Firma davon ausgehend zu optimieren. Sie müssen mit anderen Abteilungen kooperieren, um die nötigen Daten zu erhalten und praktikable Verbesserungen vorzuschlagen. \nWie man sehen kann, müssen sich Softwarefirmen anpassen, so z.B. müssen derzeit viele Hersteller PC-Software für ARM-Chips optimieren, seitdem diese sich diese durch die Verwendung der Architektur in M1-Prozessoren von Apple stark verbreitet hat, nachdem sie zuvor eher auf Mobilgeräten verwendet wurde. ",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1265575,
      "meta": {},
      "text": "Technology is an inseparable part of our lives. In this area, there are everchanging huge supply and demand. Companies are in a race to give the best response to it. But the only thing that has changed is not limited to this, companies should evolve their software systems according to government new regulations and laws. \n\nThe rise of minimalism is one concrete example of the change in the real world. Customers are in search of products simply and effectively that bring them directly to their goal. As an example, mobile devices require simplicity in a wide range of applications, because of that IOS and Android application developers puts most of the effort to answer that demand. Apps succeed that get one step ahead.\n\nRequirement Changes: Last year, WhatsApp published in some countries a new user agreement, that obligates a collection of the data of its users. After that, the requirement changed, and users started to use more data-friendly apps such as Signal.\n\nTechnology Changes: Every day, we want more and more of our work to be done by technological tools. Internet of Things (IoT) has emerged, which makes it possible to most devices to be connected to the Internet at the same time to be more efficient, thus enabling mutual communication and information exchange. For example, our smartwatch can send the data to our smartphone to set an alarm for the optimum time, by collecting the data on our heart rhythm and movements at night.\n\nOrganizational Changes: With the increase in cloud-based apps and databases, software development tools have evolved to enable teams to work more agile and organized on the same cloud system.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266428,
      "meta": {},
      "text": "We live in a world where change can be constantly observed. An example we know from biology lessons is how some species extinct as our environment and the conditions change. Technology is a brach created by humans and allows us to make incredible things happen. Software could be defined as the base of technology: technology is developed to solve specific problems and this can be realised by using software systems and as our requirements and desires extend, software also needs to be developed accordingly. \nOur requirements change mainly because the requirement stated at the beginning was either defective or maybe even wrong. During the process, we tend to detect the lacks and where exactly the given requirement was defined poorly. For example(a poor one), a client who wants to create a website for their company and doesn't specify certain things can change his mind during the process and state that they don't accept any other color than blue for the buttons on the website. Technology changes occur when e.g. a new field in technology is invented such us artificial intelligence. Innovations such as the transition from touchtone phones to smart phones also cause changes in technology. Organisational changes mainly happen in order to find the most effective way for the developing team in question and get the best results out of a good functioning teamwork. The scrum technique is a good example for this type of changes since it has been found with the motivation of increasing the performance of a team.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263782,
      "meta": {},
      "text": "Software development is a rather new process ever-changing due to constantly being influenced by the outer world such as society. As software development is a very current topic and our world always underlies change, change will also happen in software development. An example for change in the real world would be Microsoft's recent introduction of Windows 11.\n\nRequirements changes: a software development activity occuring when for instance stakeholder (e.g. users, customers, ...) needs or the environment influencing the software change, e.g. Instagram adapting Story function from Snapchat, Reel function from TikTok,...\nTechnology changes: changes in technology / hardware, e.g. invention of 3D printer\nOrganizational changes: change within a company / organization, e.g. new CEO, change in administration",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263822,
      "meta": {},
      "text": "The main cause of change is poorly defined or ignored requirements development processes, flaws in existing designs, changes in market preferences, changes in laws and regulations, poor communication between development teams and customers, etc.\nAn example: the vehicle’s air bags are found to automatically fill with air after driving long distances, this will without a doubt lead to customer complaints, and these produce a change request \nrequirements changes is due to changes in customer needs. Customers may change or increase requirements during production. For example, in the process of software development, customers are not satisfied with the appearance, color and shape and ask for changes\nTechnical changes are due to bugs in code quality or architecture issues that need to be fixed or the birth of new or more suitable technologies, etc. For example, in the process of software development, it is required to change the programming language from C language programming to java.\nOrganizational changes are changes to the development team structure or management in order to make software development more efficient. For example, when communication is poor, adopt an organizational structure that is more conducive to communication\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263983,
      "meta": {},
      "text": "In the last years change is becoming more and more important. In software development change is faster than anywhere else. New faster and better technologies come out every day, new laws and regulations pass to protect the environment, the consumers or to promote innovation and more. Change is an important factor in the evolution and improvement of all things including software. The most recent example that comes to mind is the right to repair movement which has gain a lot of attention recently. Companies especially large ones like Apple or Samsung have traditionally made their products difficult if not impossible to repair on your own and most of the time even if you managed to do so there were software \"locks\" in place to brick your device in case you managed to repair it on your own. Now the EU is passing new laws that will obligate these companies to offer ways to be able to repair your devices, which will benefit the consumers and the environment. Many of these companies have already started to offer spare parts, tools and guides to stay ahead of the curve. That is an example for a requirements change. \nTechnology as stated above is also a fast changing factor. for example now that Apple came out with the new ARM based M1 processors, all developers have to adapt and reprogram their applications to work and take advantage of the new technology. \nLastly there are organizational changes which can be for example in a software company the decision to change to test-driven development, which means the developers will have to change the way they write code in order to have a more secure and bug-free piece of software.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264014,
      "meta": {},
      "text": "Software development creates computer applications. In this process it is not only influenced by technology, which changes every day, but also by a number of other factor.\nIt is affected by changes in legal constriction or market competitors which pushes software development to adapt. Another factor is change in the environment and the people. For example, corona forced the world to change quick in order to deal with the pandemic. With the majority of the worlds population being locked at home, one needed a way to live, work or do school online. The focus of software development was not only on creating online chatting applications like Zoom, also entertainment and social media apps where now more popular. Overall one can say that the pandemic has led to changes in software development.\nHowever there are three additionally areas that effects software development: \n1.Requirement changes results from internal issues. like bugs and defects, as well as external pressures, such as a new competitor. Development is agile, therefore new requirements can appear unexpectedly.\n2.Techonogy changes every day. It is overall a process of invention and innovation driven by ambition and competitiveness. Companies are trying to out run their competitors by keep improving their products and coming up with new features and creations. This contributes to the rapid changes in technology\n3. Organizational changes are also quite common. The project has to be done within the constraints of time, budget and quality. For example, less budget but also requirement changes can lead to organizational changes.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264156,
      "meta": {},
      "text": "Change happens in software dev because of poor communication between customer and dev-team, requirements might be changed throughout the development process, new technologies might be available or the customer might change their organizational structure. \nAn example for change in the real world might be the pandemic and its consequences. Suddenly people needed to stay home resulting in supply problems considering food and other goods as well the urgent need of vaccines. Remote work became much more popular as it was demanded to keep things running and to prevent a total economical breakdown.\n\nRequirements change occures very often, no matter how much initial requirement planning was done before starting the realization of a software project. It can happen because a stakeholder realizes that he needs an additional function in an existing system, for example the need for his application to be cross-platform (windows AND macOS for example). Then the team might have to re-prioritize the requirements again.\n\nAs agile software development is a continous process, technological circumstances for a specific software product  might change during the software development process. New phone cameras or new image formats might directly affect the needs for a image-processing mobile app that the developers could not plan with initially.\n\nOrganizational changes in the customers company can also affect the process. If a restaurant (customer) ordered a order-taking-system for their waiters but then decides to transform their business to delivery service, the software dev team needs to overthink the whole product. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264378,
      "meta": {},
      "text": "Change in software development happens due to the market demands changing constantly.\nOne example would be vine's (former) popularity causing Youtube, Instagram and Twitter to create their own knockoff version of vines: Youtube Shorts, Instagram Stories and Twitter Fleets.\n\nRequirement changes can be caused by new laws or regulations\nFor example the EU online privacy changes forced a lot of platforms to change their data collection policies in the EU.\n\nTechnology changes are caused by new technologies replacing old ones by being more efficient or creating an entirely new field.\nThe emergence of algorithms creadted through machine learned changed the way how social media platforms operate. From then on there was a huge focus on collecting user data to improve those algorithms.\n\nOrganisational changes are caused by the customer wanting a different product or changes to the product.\nFor example if the customer wants an additional feature like an integration of an API to their servers.\n\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265253,
      "meta": {},
      "text": "We use software engineering to provide solutions for existing issues. However, as in any industry, the issues that exist and how we solve them are constantly changing. This may typically occur due to changes in technology or demands by clients.\n\nOrganizational changes: One example of this is the continuing emergence of flexible work models, including remote work, increased outsourcing and modular teams. Increased team fluctuations require software engineers to change the way they cooperate, but also offer opportunities as teams can be changed flexibly to suit new needs. Personally, I have met startups that provide so-called “flexible teams”, meaning they create teams of software engineers according to the customers’ needs.\n\nTechnology changes: As new technologies emerge, older solutions may become inferior (and thus not preferred) or even obsolete. For example, ever since cloud technology became wider known, users tend to opt for cloud-based applications instead of local applications due to the improved flexibility they offer. Therefore, software engineers have had to increasingly adapt their solutions for “the cloud”.\n\nRequirements changes: This is closely related to technology changes, as our needs tend to change as we become accustomed to newer technologies. While the use of mobile devices has increased immensely, people still use their desktop computers for a lot of things. However, users are now looking to improve the fluidity in their electronics use and are therefore looking for solutions that will allow them to change devices without interruptions, such as Apple’s Sidecar feature or progressive web apps (PWA). In order to be correctly displayed on various devices, software needs to be developed keeping in mind the different environments and operating systems it will be used in.\n\nATTENTION: I took EIST last year, but sadly did not pass the final exam, and am therefore reusing my answer from last year (with some tweaks). Kind regards, Giulietta",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266057,
      "meta": {},
      "text": "Veränderung während der Software Entwicklung sind erforderlich, da sich die Welt während der Entwicklung auch verändert. Das ist vergleichbar mit der Desertifikation der Erde und den Menschen, die das direkt betrifft. Der Lebensraum dieser Menschen wird von außen zerstört und die Möglichkeit genommen, das Leben genauso wie vorher fortzuführen, weshalb eine Veränderung erforderlich ist (wegziehen oder anpassen).\n\nrequirements changes: Veränderungen durch veränderte Anforderungen an die Software\nBsp.: Der Kunde verändert den Auftrag, sodass man eine Eingabe nur per Sprachbefehl anstelle nur händisch eingeben können soll → Veränderung in der erforderlichen Programmierung\n\ntechnology changes: Veränderung durch neue Technologie auf dem Markt\nBsp.: Es ist neue Software vorhanden, die die Spracherkennung im Vergleich zur alten deutlich verbessert → muss neue Software integrieren\n\norganizational changes: Veränderung durch Veränderung der Firma\nBsp.: Die Firma verändert ihre Philosophie, sodass der Schutz der Umwelt weit oben steht → Software muss ressourcensparender werden",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266190,
      "meta": {},
      "text": "Explain why change happens in software development:\n1) um die Software effizienter zu funktionieren: Man lässt Software schneller laufen, um die Zeit zu sparen.\n2) Während des Lauf der Software gibt es umvermeidliche Fälle. Um dieses Problem zu lösen, die Software erfolgreich zu funktionieren, muss man Software optimieren.\n3) Der Bedarf und die Verlieben der Menschen haben sich geändert. Um dies zu erfüllen, soll die Software dafür entwickeln.\n4) Die relative Hardware entwickelt zuerst sich. Damit Software und Hardware besser zusammenarbeiten, muss auch die Software entsprechend weiterentwickelt werden.\nExample: \nMit der Iteration von Apples Chips werden Softwareunternehmen auch verwandte Software regelmäßig aktualisieren, damit ihre Software auf Apples Geräten, die mit neuen Chips ausgestattet sind, besser läuft.\ngenauer：apple health in Apple watch, jede Aktualisierung von Notability und GoodNote in iPad.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1263375,
      "meta": {},
      "text": "Especially in it, sector changes are pretty rapid, as technology evolves quickly. \nWhile developing software you will always acquire new knowledge that can force you to change previous code or choose a different library because of dependencies.\nChanges can occur for example if new technologies arrive and you have to use them in order to stay competitive. The competition could e.g. provide better auto-translation because they use a new better Ai using transformers, this forces other big players to upgrade their code and rewrite part of their software.\n\nRequirements changes can occur in different forms. Maybe the customer suddenly has slightly different requirements, or there is a new policy from the government about certain technologies. \n\nTechnology changes constantly as new technologies get created and old systems get depreciated. Often you also have to support new hardware (new server equipment, new graphics cards or processors, a new version of Linux/Windows ...)\n\nOrganizational changes appear for example if a new Team member gets introduced. He probably provides another style of writing code and he has different knowledge for different solutions.\n\nThese are the main different types of change in software development.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264264,
      "meta": {},
      "text": "Changes may happen in software development because of solving problems (bugs and errors during development), provide support of technology updates and changes (HTTP/3, 5G. IPv6 instead of IPv4 because no enough address), achieving customer needs (for example, a company wants to add PayPal as a payment method), providing market requirements (for example AirPods with full support on Windows) and promote performance of software (GPU rendering in modeling software).\n\nRequirements changes: A music company has a website, a software for Windows and a software for phone. They want their develop team upgrades their software. For example if a user downloads a music on their website, he can turn on a function, and it will automatically download the same music on his phone and the software will add it to a playlist which only contains the music he downloads on computer or phone.\n\nTechnology changes: For example, using AI to implement some functions of the software, like facial analysis, AI Chatbot for customer service.\n\nOrganizational changes: For example, a company is running business in the area of sea freight, they will cancel their sea freight business and wants to change its business into air transport. The develop team needs to expand the software with for example airplane schedule and air cargo declaration. They also need to delete the functions for sea freight.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264552,
      "meta": {},
      "text": "There are different reasons why changes happen in software development. Technology changes, new innovations, new regulations from government, new market competitors, enviromental changes. For example in 2020, when the coronovirus pandemic began - enviromental change with huge negative impact on the global economy, Amazon and many other online stores adapted to the situation, leading the possibility of safe delivery - co called no-contact delivery, and even increased their sales.\n\nSometimes customers have little idea about the type of the final product, therefore, in the process of product development, having seen the preliminary result, as any human being, they can change their mind and make changes to the list of requirements - requirements change. \n\nTechnology changes everyday. World famous smartphone company BlackBerry was known for physical keyboards on its devices, but with the invention of touchscreen phones, they had problems with changing and lost its dominant position in the market - technology change\n\nOr halfway through the development, one of the development team can leave the team, and with help of scrum master or someone, who is responsible for organization of software development process, his or her place must be replaced with someone similar, so that the process does not slow down - organizational change\n\nSoftware developers need to be ready to adapt to any kind of changes\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264639,
      "meta": {},
      "text": "Software development changes often occur whenever there are requirements, technology, or organizational changes. \n\nOne example of a requirement change would be the following scenario: My group in the EIST-group project agrees to use Angular as a client framework. After 2 weeks Prof. Krusche insists we use React. This is a requirement change. In general, requirement changes in a (software) project can result from changes in user requirements, available technologies, inadequately defined initial requirements, or new legal constraints.\n\nTechnology change can be described as the innovation, invention, and continuous improvement of technology. Technology change also includes commercializing a technology or making it open source. A good example of technological change is the invention of the modern smartphone. Decades ago, people could only communicate via their phones at home. The invention of the smartphone made it possible to communicate from anywhere. \n\nOrganizational changes are changes in which a company dramatically alters its organizational structure. This might include changes in the culture, the reporting chain, the leadership team, or the infrastructure the organization is using to work together. One example of an organizational change is Jeff Bezos' stepping down as CEO of Amazon and Andy Jassy assuming that role. \n\nA good example of software development change that exhibits more than one of these aspects is the acquisition of Twitter by Elon Musk. Through the acquisition, AI will be increasingly used in Twitter's ranking algorithm (technology), free speech policies will be updated (requirements) and Musk has signaled he will make drastic changes to the leadership team (organizational).",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264858,
      "meta": {},
      "text": "Changes happen in software development, because systems become more evolved and better developped from time to time. The same phenomenon can be seen in the real wordl, where change happens for example when parents raise their child. When the child grows older, they have to adapt their way of educating it, because the child enters new stages of age, where it requires a different approach of education (you cannot treat a teenager the same way as you would treat an infant). In software development there are three ares of requirement changes, technology changes and organizational changes. Requirements can change when unforseen problems occure, for example when interfaces are not adequately defined (this can happen when a key interface was overlooked). Without addressing the interface, the product cannot be integrated into the macro system of which it is a part. Technology can change when newer technology is released on the market. This happens quite regularly as we live in a time where the software industry is lead by a constant state of progress, where technology improves at an incredibly fast rate. Operating systems like Windows for example also keep changing from time to time due to their focus on staying \"modern\" and \"up to date\". Lastly there are organizational changes, which are sometimes the hardest to encounter as a software developper. They can occur when customers change their minds for example due to changes in another area, such as technology changes (for example new and better technology). Dealing with that change systematically is organizational change.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264908,
      "meta": {},
      "text": "Change in software development (SD) is necessary because our environment changes constantly e.g. technology, government regulations, etc. For example if there is a change in government regulations regarding e.g. data transfer which may affect certain platforms, they must manage these changes otherwise they may be shut down (Facebook) .\n\nTechnology changes are happening because of innovation in order to increase efficiency. If SD does not adapt to these changes, the e.g. company probably won't survive on the market.e.g. Nokia: New competitors arose on the market with more innovative software development and thus more innovative technologies (Smartphones). Nokia did not adapt fast enough and lost market share.\n\nRequirement changes are happening when a customer changes its \"wish of functionalities\", respectively if he wants different requirements than the stated ones on the problem statement. For example a customer wants the SD team to develop something like Moodle. Maybe in the first place the customer wanted to allow a like and comment function on uploaded videos but then changes his mind and rather wants a separate forum for that. \n\nOrganizational change is occurring when something in the organizational structure is changing like a member change in the SD team. As the term team already implies, the members are working closely together towards a common goal. If a member has to leave and a knew one is joining, organizational change is happening. The new member has to catch up and they have to get to know each other etc to be a good team again and successful.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265570,
      "meta": {},
      "text": "We actually live in a world where new needs are appearing every single day and where technology keeps amazing us continuously. Not only the user's requirements but also the working environments are changing constantly, hence the need to change in software development in order to deal with the arising requests. This will lead as a result to the user's / customer's satisfaction. Changing programming languages is a great instance that affects the software development. The speed with which a language can from one day to another easily get developed or disappear reflects an example of change that software development must keep up with. \nAs I already said, requirements change affect the software development. In other words, the needs of the customer can easily change when it comes to his product. It can be that he wrote down something wrong in the description of the wished product, or he maybe simply changed his mind. \nAs for the technology changes, no one can deny that this is the era of the digitalization and that new changes and inventions appear every moment. The Internet of things is a proof of that since it became included in our daily life. \nWhen we talk about organizational changes, we can't help but notice its effect on the software development world. The strategy of a team can easily change when noticing for example a mistake or even an imminent risk. However they must adapt in order to deliver the product to the customer as wished for.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266337,
      "meta": {},
      "text": "Changes in Software Development passieren, weil sich die Probleme welche Software Development lösen sollen verändern. Früher hat man angenommen das sich Probleme durch strukturiertes System lösen lassen. Heutzutage weiß man aber, dass die meisten Probleme sich während der Bearbeitung verändern und deswegen ist es wichtig das sich Software Development anpasst. Eine sehr interessante Veränderung wäre zB eine legale Veränderung die von außen Verordnet wird, dadurch könnte ein Teil des Projekts sich verändern und eine neue Lösung müsste gefunden werden.\n\nRequirement changes bedeutet, dass die benötigten Faktoren die mit einbezogen werden sollten sich verändern und weiter entwickeln. Ein Beispiel dafür wäre zum Beispiel, dass der Entwickler sich nicht dazu entschließen darf bestimmte essentiale Bedingungen ignorieren. Dies kann mehrere Hintergründe haben die sich von Kosten bis hinzu einer zu hohen Komplexität erstrecken. Jedoch ist es heutzutage essential und absolut nötig zukunftsorientiert zu entwickeln um nicht angehängt zu werden.\n\nDesweiteren verändert sich auch die Technologie, Computer werden leistungsstärker und Systeme werden komplizierter. Zum Beispiel ist die Computer Leistung die 1969 benutzt wurde heute in jedem IPhone vorhanden. Die Technologie rund um Software delevopment entwickelt sich rapide weiter.\n\nDer letzte Bereich ist die Veränderung der Organisation, früher waren die Developer pure Programmierer und mussten in einer Programmier Sprache Code schreiben, dieses Modell ist aber heutzutage überholt. Heutzutage müssen die Developer fähig effektiv in einem Team zusammen zuarbeiten, mehrere Sprachen beherrschen aber auch Business Partner überzeugen. Zum Beispiel sollten die Developer Python und Java beherrschen aber auch an Workshops für Problem solving vom Business Team teilnehmen um möglichst genau den Wusch/ Problem vom Customer zu verstehen und umzusetzen.\n\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266459,
      "meta": {},
      "text": "Software is always meant to help find solutions for problems in the real world. As the world is constantly changing regarding economical, political, social, etc. processes, software development needs to adapt to this change. For instance, caused by COVID-19 many people had to do home office, meaning they were entirely dependant on their computer and its software. Consequently, the pandemic has increased the effect of digitaliziation, illustrating the increasing relevance of software development . Comparing the current situation to 100 years ago, there has been a tremendous change looking at software development. While it was barely possible for people to own a car 100 years ago, people are nowadays working on developing autonomously driving cars. This is an example for a massive change of software development as an autonomous car includes millions of lines of code. Based on such inventions there have been tremendous technology changes, resulting in a greater dependancy of software towards human beings. In our everyday life technology plays a massive role especially comparing to the situation plenty of years ago.\nThus, the requirements for software have drastically changed as people crave for computers, phones, etc. The market for software is constantly increasing, which means that software needs to develop in order to provide fluently working digital devices. As a consequence the organization of such software project has been changing. It is way more complicated and challenging to face the increased interest of digital devices, meaning that organizing such projects is way more complex and e.g. requires a greater amount of IT qualified workers.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261863,
      "meta": {},
      "text": "The world we live in is very dynamic. Political, environmental, societal and also technological challenges change on a daily basis. Developments in some areas triggers changes in others. As software is used to solve problems, the way software is developed needs to adapt to these changes by changing itself. \nAn example of change in the real world is the adoption of smartphones into the everyday lives of people at the beginning of the 21st century.\n\nIn a software engineering project to develop a website the customer might have asked for a website with a green background. However during the project he can decide that instead he wants it to be blue. This is an example of a requirement change. A requirement change is a change causing goals of a project to be replaced. \nAn example of a technology change would be that during a software engineering project where code is written in Java the developers might realize that it might be better to not use an outdated programming language and therefor switch to another programming language better suited to the task and time (e.g. Python). A technology change therefore is a change in the tools to implement a project (that does not effect the actual product). \nOrganizational change happens when the structure of how product development happens changes in a project. For example in a team people might realize that one person not even directly involved in the development making all the design decisions is inefficient which is why they might give more design responsibility to the actual developers.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262725,
      "meta": {},
      "text": "Software engineering is a set of computer science activities related to the creation, design, or support of software and regularly encounters various changes in various fields.\n\nThe simplest answer to what causes change can be that the demands of the customers change, the competition in the field of software development increases rapidly and the technology develops every day. Also, new requirements can come out of nowhere, and existing requirements can vary several times.\n \nOne of the most well-known examples of change in this regard is when a client has a change of mind during or after the process. You may have developed something like an interface or a report, and when you submit it, the customer has changed their mind and may ask you to rework/redo what you have developed.\nRequirements changes, technological changes, and organizational changes are unavoidable three main changes in software development. \nRequirements Change can be triggered by changes in user requirements or a better understanding of costumer' demands. \nAnother reason for the change is the rapid advancement of technology. We live in a world where technology is constantly changing, and everybody wants the latest tech. Because lots of product has a long development time, technology will change, and developers have to scramble to keep up. With modern technology, new needs may also arise.\nOrganizational changes are another problem that developers frequently encounter. For example, in some circumstances, the customer's stakeholders or team members may not exist at the start of the project. Each of these additional stakeholders or team members may have a different perspective on the problem and intended solution, and they may propose a change or add new needs.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262960,
      "meta": {},
      "text": "  Software systems are complex, and projects are subject to constant change, to remain useful, developers need to evolve with the users´ need and the target environment. For example, supermarket was fined for storing meat around 1 day too long on February 29, just because developers did not take seldom-occurring situations (leap-year) into account.\n  Requirements are diverse, developers need to be uploaded when errors are discovered and when developers have a better understanding of the application to refine the needs of customers. For example, Cybersecurity, to protect data of the government and customers, to fight hackers, they must keep fixing and improving cyber security holes.\n  Technologies are being uploaded at an alarming rate. Many technologies flash in the marketplace and quickly disappear because they lost their marketability to the next generation and better ways to achieve the functionality, software engineers today need to have the ability to grasp new technologies and make use of them.For example, artificial intelligence, Chatbots, voice assistants and other intelligence devices increasingly enter our lives.\n  Organizational changes are the process in which an organization changes its structure, strategies, operational methods, technologies or organizational culture to affect change within the organization.Google achieved transformation by creating greater division. The company's R&D worked on such a variety of projects that it was becoming hard for upper management to focus and prioritize. Then they split into multiple companies, each of them with a narrow focus",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263668,
      "meta": {},
      "text": "Change in Software development happens because the circumstances of a project respectively the environment change. A software development project is supposed to fulfill a task, create a solution to a problem or just fulfill a given need for something. But if for example another solution is found elsewhere, the need is satisfied from an alternative or new requirements are expected, the development team can`t just keep following the initial plan/idea. They have to adjust.\nAn example of change in the real world is when a new law is enacted, with new regulations for privacy issues. This could force the team to adjust their work and change certain things to adhere to the new restraints.\n\nRequirement change can occur due to technological innovation, realization of new challenges or just due to a change in the buyers mind. The software development team has to be flexible to react to new requirements that the customer/client may ask for, like additional features.\n\nTechnology change happens when new innovations are made and progress in our technological advancement happens. For example when a new computer chip with a more powerful core is built, software development has new possibilities and adapt their work to the new possibilities.\n\nOrganizational change is often the restructuring or change in policy, strategy, culture of a company. In software development you might have to adjust to the changes because other projects have become more urgent, new privacy policies cause requirement change or a new culture is supposed to be portrayed on the website of the firm. An example is the structural change in a company from B2C to B2B business, which can cause many new software requirements, website restructuring and more.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264430,
      "meta": {},
      "text": "With the change of requirements, technology and organisation, software devolpmet changes.\n\nWe can not collect all the requirements at the beginning of a project. For example, when we want to hold a party, we need to find the right venue, prepare snacks and drinks, and inform people. These are our initial ideas. But when we implement them, we will find that maybe the drinks need to be prepared partly non-alcoholic, as some people have alcohol allergies. And this is the requirement change.\n\nRequirements change haa been explained. \nTechnology change such as AI.\nOrganizational change such as group collection of objects to reduce complexity.\n\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264603,
      "meta": {},
      "text": "Die Softwareentwicklung beschreibt im Grunde das Nutzen verschiedenster Technologien und Strategien für die bestmögliche Umsetzung eines Kundenauftrags. Die genutzten Technologien und Entwicklungsstrategien sind dabei stark abhängig von der Spezifität des Auftrags, dem Entwicklungsteam und den ihm zur Verfügung stehenden Werkzeugen. Wie sich in dieser vereinfachten Begriffserklärung zeigt, ist der Prozess der Softwareentwicklung durch stetige Veränderungen der einzelnen Faktoren alles andere als statisch. Somit kommt es durch Veränderungen und Anpassungen des Kundenauftrags, durch den Wandel der nutzbaren technischen Werkzeuge oder auch durch Veränderungen der Teamorganisation, insbesondere in der Entwicklungsstrategie, zu konstantem Wandel. Ein Beispiel hierfür findet sich in der Spieleentwicklung, welche meist über mehrere Jahre andauert. Das hochfrequente Veröffentlichen leistungsfähigerer Hard- und Software lässt so ein vor zwei Jahren genutztes System alt aus sehen. Daher kommt es in Entwicklerstudios nicht selten dazu, grundlegende Entscheidungen ändern zu müssen, was wiederum zu Umschulungen des Teams oder auch Änderungen des Projekts selbst führen kann. Neben dem Beispiel für mögliche Auswirkungen des technologischen Wandels sind auch Änderungen in den Forderungen an die Software oder organisatorische Änderungen im Entwicklungsteam wichtige Einflussfaktoren. Ändert sich der Anspruch des Kunden an die zu entwickelnde Software, kann dies neue Grenzen für das Entwicklungsteam hervorbringen. Beispielsweise kann der Kunde seine Ansicht gegenüber des Layouts, der zu nutzenden Sprache oder auch der Relevanz bestimmter Fähigkeiten der Software in einem Maße Ändern, dass bestimmte Entwicklungsphasen erneut durchgangen werden müssen. Zusätzlich haben auch Änderungen der organisatorischen Hilfsmittel oder Management-Strategien des Entwicklerteams einen Einfluss auf die Entwicklung von Software. Hierbei können beispielsweise fehlende hilfreiche Workflow-Features sowie eine neue Arbeitseinteilung zu Einschränkungen führen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264627,
      "meta": {},
      "text": "-A newly defined or ignored requirement development process may lead to changes in software -development. An example of change in the real world may be new requirements for a business, extra sources must be devoted to the program evolution.\n\n-Requirements changes may be the increased understanding of the customer needs.\n-Technology changes may be the new release of technology that improves productivity and profitability.\n-Organizational changes may be the restructuring of organizational units such as culture, underlying technologies or infrastructure.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265118,
      "meta": {},
      "text": "change happens because the requirements from the customer changes, organizational issues changes, or the technology that can be used is developed or limited.\nexample: Twitter has enabled a new function. Messages of iOS users will be grouped by date and time instead of being stamped in DM conversations.\nrequirements changes: Users need to see the messages more clearly.\ntechnology changes: iOS system enables developers to install this new function.\n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265738,
      "meta": {},
      "text": "It’s very important to adhere to change by observing the market and competitors and by investing in innovation.\nOne big example for change in the real world regarding software development is video streaming. Companies like Blockbuster did not recognize the importance of new technologies and so, hundreds of stores closed while more and more streaming platforms like Netflix came to shine and to adhere to the change of technology.\nWhen developers learn to understand and improve their understanding of the application, requirements change. E.g. if a development team finds an issue during implementation, they might have to go back and analyze the problem statement again, which changes the whole process. Thus, you have to work with an agile software development process.\nObserving technological changes for software development is extremely important. Developers need to invest in innovation in order to keep up with competitors. One great example of failed technological change management is Nokia. Nokia did not believe that users would like touch screens and therefore they stayed with the keypad layout, which eventually lead to their downfall.\nAlso adapting to organizational changes is also something a development team should be prepared for. An empirical process, which is not planned and for which you need to inspect and adapt to the development process is a better way to respond to deviations. If you e.g. find a deviation during empirical process before your competitors, you have a big advantage as your solution comes to the market first. Organizational change management allows a team to learn from failing.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266043,
      "meta": {},
      "text": "Change in software development may be caused primarily by:\n1) Changes in the request of the client, who for example may had a new idea for his desired product, or the implementation of previous request is simply not fit for the current enviroment. His company may want to use a new framework, and the implementation of old request may not be needed anymore.\n2) Unsatisfactory implementation, when the result of development does not have needed features or is not functioning correctly. The program may be too slow, to buggy, or lack intented features.\n3) Unforeseen problems. A data leak, for example, can undo all the hard work already done on the project, because the result product will not be safe to use anymore.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266264,
      "meta": {},
      "text": "Software development is one of the fastest growing sectors today, therefore also one that is constantly changing and must constantly react to new circumstances.\nFor example, with the introduction of smartphones, companies had to be able to move with this new technology within a very short time - if they didn't do that (Nokia), they would disappear from the market just as quickly.\n\nThe three areas of change:\nrequirements changes, technology changes, and organizational changes.\nThe requirements changes are influenced by the owner/user of the software. He decides whether the desired software already meets the specifications or whether any changes are still necessary. For example, an app that is about to be completed could be adjusted again if the client wanted changes to the app again.\n\nTechnology changes are changes, which forces permanent maintenance to an application. There can be many reasons why these circumstances change and adjustment is needed, but for example there could be changes in the used libraries or changes on the hardware the application is running, which forces the developers to keep their software up to date.\n\nLast but not least, there are organizational changes. These happen whenever a team of developers are reorganized and therefore the communication and team building starts again and it will take some time until this team is again at their full capability to work in a high efficient workflow.\n\nAll of these changes require the company/developer to be flexible and every day up to date in order to be able to competitive.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261640,
      "meta": {},
      "text": "The following are the reason for change to happen:\n1. Update or downgrade and Compatibility/Number of users: To update or downgrade the current system or to upgrade/downgrade the version of a framework. In my own experience, node-sass version. 4.12 stopped working with vue.js version 3, and we had to update our node and node sass to keep our website running or Nokia changing their phone's operating system to android.\n2. Bug in the system/code: Sometime the whole system stops working and have to be changed. For example: In my organization we had to change our e-commerce system from plenty market to Magento because there was a bug which removed SSL certificate from the websites and the whole system was down for 5 days.\na. Requirement changes: This changes occur due to defect or external pressure such as new competitor, new law, etc. Example: YouTube removing the dislike button, Facebook removing thousands of apps after Cambridge Analytica.\nb. Technology change: This change occurs due to a new disruptive technology which changes the landscape of the product. Example: Black berry, changing the phone design to screen touch and operating system to android.\nc. Organizational change: This change occur in which an organization switches its process or method of implementing a project or also because of external pressure or demand like shareholders demand. This change effect everyone directly in coordination with the process of development. Example: shareholders demand to make a new API for business.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262237,
      "meta": {},
      "text": "Change is unavoidable. Software is still being developed by humans and humans constantly make mistakes. If a feature has been forgotten for example, changes have to be made to the existing software. But there are so many more reasons for changes to occur. Ranging from pandemics and political turmoil to technological advancements and small slip ups. The Covid pandemic for example forced many companies to adapt or even develop new software so work can continue in Home-Office.\n\nRequirements changes can occur very frequently and one of the reasons as already mentioned above is human error or that a competitor implements a feature that your product doesn't. If for example your social media platform only allows photos to be uploaded and your competitors site also allows videos, then changes have to be made to adapt and keep up.\n\nTechnology changes are obiviously very important. Keeping up with modern technologies and actively working on improving said technologies, is crucial if you want your product to survive. In case of Nokia for instance, they didn't anticipate the shift to smart phones and their failure to adapt almost caused the company's downfall.\n\nOrganizational changes occur when a company for example completely shifts focus and instead of producing and developing smartphones they now develop software for self driving cars. In this process the internal structure of the company might change completely as well.\n\nUltimately, every type of change indirectly causes even more change in other areas.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262538,
      "meta": {},
      "text": "Software developing is a creative process. It means that nearly every developer solves a problem differently. Because of that, old models and structures are replaced by newer, more efficient ones. That means especially, that innovation and change is key for development to reach bigger goals faster and more efficient than before. \nThat thesis also relates to actual projects. When the clients requirements changes, the development of his product also have to be adjusted accordingly. Furthermore it happens, that you reach a dead end during development and you have to find different solutions to meet the requirements. An Example for this change of requirement could be, that the project have to be scaled up to handle double the amount of users or to be safer against cyberattacks.\nExamples for technology changes could be, that development can now be made from all over the world. It is no longer necessary for a dev-team to work in the same building, with allows companies to choose only the best fitting employees to form a team for a specific task while increasing overall productivity. This is also an example for organizational changes. The fact, that one person can no longer develop a full grown application, requires detailed management an organization of tasks to get the final merged code to work. A possible solution could be Git. \nRemembering that 50 years ago, programming / developing meant to punch holes in paper-cards, software developing came a long way.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262980,
      "meta": {},
      "text": "Software development describes the process of programming an application or a software system for machines. To make machines work as they are supposed to, lots of steps have to be done, from analysing to designing, coding and testing.\n\nDecades ago, software developers had to establish the basics for devices like an electric washing machine. At that time, washing machines were only able to wash clothes but they probably did not have any features like setting the temperature and the rpm(revolutions per minute) or which kind of clothes should be washed. Nowadays there are \"new\" washing modes like a power saving mode, a fast washing mode or a self-cleaning mode. Additionally, parameters like the power consumption, washing power and many other parameters have been improving for decades as well. Because of the massive progress and research in technology in the past few years, the usage of machines becomes optimised and more and more features are added to adapt the washing process to the clothes and also to the environment. Through the progress, the people's standards are getting higher and therefore the software developers have to make the experience with their machines more comfortable.\n\nNowadays, there are lots of programs which can make developing an application much easier. So the requirements for programming an application are much lower and everything has become simpler and more comfortable  for amateurs.\n\nA very huge change in technology is the smartphone, because the processors have become much stronger in the fast few years, so the processors are much faster in calculating and because of better graphic power, they are able to make animations smoother and more comfortable to people.\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263562,
      "meta": {},
      "text": "Um zu verstehen, warum es zu Veränderungen in der Entwicklung von Software kommt, genügt ein Blick auf die Dauer eines Software-Lebenszyklus. Die Entwicklung von Software und damit von der Idee zum fertigen Produkt kann mehrere Jahre in Anspruch nehmen.  In diesem Zeitraum kann es zu unfassbar großen technologischen Sprüngen kommen, die eine bspw. 2 Jahre junge Idee veraltet wirken lassen. Deshalb muss (ebenso wie bereits veröffentlichte Software durch Maintenance) Software in der Produktion ständig überarbeitet und umgeplant werden. Ein Beispiel für Wandel in der realen Welt ist eine KI von DeepMind. Diese war 2021 in der Lage Grundschulaufgaben zu lösen und wurde ein Jahr später bereits insoweit verbessert, dass sie problemlos Universitätsaufgaben lösen kann (Quelle: Two Minute Papers). Sollte eine Software auf der DeepMind KI von 2021 aufbauen, so müsste bereits ein Jahr später das gesamte Projekt überarbeitet werden. Es kommt in der realen Welt ebenso wie in der Software-Entwicklung immer wieder zu Änderungen, da der Status Quo, nie ein permanenter Zustand ist.\n\nRequirements changes sind Veränderungen der Ansprüche der Software, darunter fallen unter anderem zusätzliche Features. Ein Beispiel hierfür wäre Whatsapp, das zunächst lediglich ein Messanging-dienst war, jedoch in späteren Entwicklungsphasen auch Videotelefonie implementierte.\n\nTechnology changes sind Veränderungen und Fortschritte der Technologie. Es macht wenig Sinn Software auf veralteter Technologie aufzubauen. Darunter fällt zum Beispiel der Fall von DeepMind und die darauf aufbauende Software, die oben beschrieben wurde. \n\nOrganizational changes sind Veränderungen, innerhalb des Entwicklerteams, oder des Auftraggebers. Durch einen sich ändernden Auftraggeber können sich auch die Ansprüche an die Software oder die Deadline ändern. \n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1263737,
      "meta": {},
      "text": "In the agile software development world, change occurs constantly and it´s important to adapt and deal with the complexity of the problems. These changes are innevitable and can derive from differing areas, like for example environmental issues, change in customer´s demand, bug fixes or even improvement of existing systems. \nOne example where we can easily see change happening and how the development team adapts to them is Instagram, an app we can regularly update. Sometimes it´s related to smaller issues and other times even to introduction of new products/services, like the recently introduced reels (videos of ca. 10 seconds), which resulted from the growing popularity of TikTok, a platform just dedicated to these so called reels. Thus instagram had to adapt to new demands of the customer.\nRequirements change can occur due to an increased understanding of the shareholders´ needs or due to changes in useres requirements. Recently, climate change and environmental issues are important aspects that lead to these kind of changes, since the demand for environmental friendly and sustainable products/services is growing rapidly. \nTechnology changes have had an important impact on our lifes especially in the last decade. The constant research, development and innovation in this field had led to major changes, for example the switch from mobile phones with keypads to smartphones with touch-screen. \nOrganizational changes refer to actions in which a company, business or even team alters a major component of the organisation, such as its infrastructure or culture. The growing trend of technologies and the internet has also had a big effect on businesses and basically obliged them to make organizational changes to be able to thrive and compete in the market. One example is e-commerce. Many companies had to adapt to the introduction of this new market by implementing new deparments, having to invest in storage alternatives and more. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264109,
      "meta": {},
      "text": "Im Prozess der Softwareentwicklung treten häufig Änderungen auf.  Für diesen Wandel gibt es viele Gründe. Wenn beispielsweise bei der Entwicklung einer Spielesoftware Zeit und Budget falsch eingeschätzt werden, kann sich das Veröffentlichungsdatum des Spiels verzögern, oder die Qualität des Spiels kann aufgrund eines unzureichenden Budgets nachlassen. Ein Projekt, das schätzungsweise in drei Monaten fertiggestellt werden soll, wird oft um mehrere Monate verschoben, um es zu verbessern und zu verfeinern. Diese Veränderungen sind oft unvorhersehbar und ungewiss. Auf der anderen Seite können natürlich auch menschliche Faktoren hinzukommen. Die Definition von Anforderungen ist möglicherweise nicht klar genug, oder es kann vielleicht auch Anforderungen geben, die abgewägt werden müssen oder versehentlich ignoriert werden. Unzureichende Kommunikation zwischen Entwicklern und Kunden und Teammitgliedern kann zu Änderungen führen.\nVon allen Änderungen in der Softwareentwicklung sind drei erwähnenswert. Nehmen wir als Beispiel die Entwicklung von Spielesoftware: Im Verlauf der Softwareentwicklung können Zielbenutzer im Laufe der Zeit neue Vorlieben und Bedürfnisse haben, sodass sich die Entwicklung von Spielesoftware entsprechend anpassen und ändern muss, um die Bedürfnisse des Marktes zu erfüllen. Dies ist eine Anforderungsänderung. Oder weil die Technologie nicht ausgereift genug ist, um in die Praxis umgesetzt zu werden, oder weil die Kosten zu hoch sind, können Entwickler weniger technisch anspruchsvolle Methoden verwenden, um das Softwaredesign zu implementieren, wodurch die Kosten und das Risiko des Projekts reduziert werden. Das ist ein Technologiewechsel. In ähnlicher Weise ist die Personalfluktuation in einem Spieleunternehmen eine normale Sache, sodass verschiedene Entwickler unterschiedliche Meinungen zur Softwareentwicklung haben, was sich ebenfalls auswirken wird. Dies ist eine organisatorische Änderung.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264273,
      "meta": {},
      "text": "Software Development changes from the classic industrial defined process (using methods like the waterfall model) to an empirical process that provides more flexibility, transparency, software quality and reduces the risk of loss of information.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1264658,
      "meta": {},
      "text": "Since we work in dynamic environments, constant changes occur and they are unavoidable. During a software development project, not all the initial requirements may remain the same: additional constraints or features may be added to the software. \n\nFor example, during a banking software development, a new product (like a credit card) is released and modifications should be carried to the initial requirements, so that users can order the new product through the system. New requirements are added to determine which users have visibility of the new product and can buy it, and which others have system restrictions to get access to it. \n\nTechnologies evolve continuously. An easy example is in the financial industry where new technology is developed or existing technology is enhanced to ensure that institutions are aligned to banking regulations and security compliance.  If the implementation of a certain technology was not planned from the beginning of a project, it may be mandatory to make updates in order to comply with new banking requirements. \n\nChanges in the organisation may imply modifications in the structure of the system, specifically, in the initial object model. For example, some people in a company may have access to certain modules of a system (sales module interface) and other team (marketing modules interface) have access to different modules. If somehow this modules have to be merged into a single one (sales & marketing module interface) and grant access to all involved parties, modifications have to be performed to the structure of the system.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264900,
      "meta": {},
      "text": "In the history of software development it turned out that software engineering isn't a fully plannable and defined process (like in industry for example). Software Engineering is more of an empirical process, which means it takes adaptation and sometimes improvisation too. The main reason for this is because change happens. We can explain this by a real world example of a football manager: A football manager must plan and select players for the next game each week. The manager probably has a plan in his mind (i.e. which players to choose). However, it is possible that one of his players suffers from injury just one day before the game, so the manager must adapt and react to this change.\n\nLike in football, change happens in S.E. too. Some reasons for changes can be: restriction of budget, project taking more time than planned, bugs and so on. There are also following changes:\n\nRequirements changes relate to changes in the requirements of a project. I.e. stakeholders want more than the defined requirements. So the team must adapt the requirements.\n\nTechnology changes relate to changes in the technologies used in the project. I.e. during system integration it turned out that there is a integration problem because the used technologies couldn't merged together. So technologies used in some subsystems must change.\n\nOrganisational changes relate to all organisational aspects of a software engineering project. This field is very broad and contains fields from documenting to organising the team etc. I.e. if a developer of the development team becomes sick, it is a organisational change.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265573,
      "meta": {},
      "text": "The world is changing from a day to the next one and software development is not an exception. It is developing and changing continuously. Software development does not consist of only researching, building, reviewing, and testing but maintaining and supporting as well, which makes a software go through a lot of changes.\nDealing with changes is one of the challenges that softwares face. Changes such as technological changes for example, it is essential nowadays to publish softwares online to install and sell them instead of using CDs to install them like it was in the near past.\nWith this technological progress the requirements are changing in the same manner. It is required and important for softwares to keep them up to date, which is more possible when softwares are offered online by uploading improved and developed versions of the software in comparison to softwares used to be installed from CDs. Another requirement is to make softwares available to buy and install online is that new notebooks do not contain a disc drive anymore.\nOne of the organizational changes acquiring these days is that software's building needs to be done by a huge team of softwares engineers due to its increased complexity. Thus, coming up with new software is moving away from being done by individual programmers to teams.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265592,
      "meta": {},
      "text": "Change happens because the environment changes. An example is; the change in legal department, a new law that hinders the project.\n\nThis environment could be the requirements of the project set by the client, technology used to create the project or an organisational change in the team/workplace. \n\nExamples, in that order;\n\tthe client wants more or something new,\n\tdependant API or a piece of software has changed as such the methods change or\n\tthe management fired some colleagues, so the project structure must change.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265992,
      "meta": {},
      "text": "Änderungen sind ein allgegenwertiger Begleiter im Software Engineering und werden oft von externen Bedingungen ausgelöst, als Reaktion auf beispielsweise von Benutzern gestellten neuen Anforderungen oder dem dazukommen von Anwendungsbereichen, aber auch durch das stetige Aufkommen von neuen Technologien. Aber auch im Falle von Bugs/Fehlern die aufgedeckt braucht es schnelle Änderung. Sollte es beispielsweise möglich werden schnell Primfaktorzerlegung zu erreichen, müssen alle auf RSA basierenden Sicherheitssysteme überarbeitet werden.\n\n1. Wenn von den Nutzern und Kunden neue Anforderungen gestellt werden, so muss darauf reagiert werden. Darum ist ein kontinuierlicher Austausch sowie Kommunikation sehr wichtig. Es geht hier meist darum Kosten zu senken, ein qualitatives Produkt zu liefern und dabei alle Zeiten sowie Vorgaben einzuhalten und das Risiko tief zu halten. Beispielsweise wenn ein Online Shop nun aufgrund des Trends auch will dass Bewertungen und Kommentare gelassen werden können, muss das umgesetzt werden.\n2. Das kontinuierliche Aufkommen von neuen Technologien führt dazu dass auf diese eingegangen werden muss, um dann nicht unterzugehen. Wenn aktuelle Technologien eingeschränkt sind und es neue bessere gibt, so muss die Implementierung darauf angepasst werden. Als beispielsweise Smartphones auf den Markt gekommen sind, wurde es wichtig mobile usability bei websites/online stores einzubauen.\n3. Wenn es in einem Unternehmen und deren Führung, Struktur, Strategie, Teams etc. zu Änderungen kommt, so müssen auch die Software Engineers darauf reagieren. Wenn beispielsweise ein Unternehmen ein komplettes Rebranding durchläuft, so müssen auch die Software Engineers darauf reagieren und ihre Bereiche darauf anpassen, beispielsweise im Front End.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266384,
      "meta": {},
      "text": "Change in der Softwareentwicklung ist eine logische Folge, resultierend aus technischen, organisatorischen aber auch informations-basiertem Wandel. Insbesondere Große Innovationen wie der PC selbst, aber auch fortlaufende Entwicklungen wie die Digitalisierung der Infrastruktur sorgen für umdenken wie Änderung im Anforderungsprofil von Software und Entwicklung selbst. So hat eine bessere Netzinfrastruktur maßgeblichen Anteil an an der Art und weise wie Teams Projekte angeben und sich intern bei der Entwicklung neuer Systeme organisieren. Insbesondere Git und vergleichbare Plattformen sind hier anzuführen. Diese sind mittlerweile konventionell bei der Softwareentwicklung im Einsatz, haben aber einen deutlich dynamischeren und heterogeneren Prozess durch weltweite Zugänglichkeit ermöglicht, wodurch sich technischen Voraussetzungen geändert haben, die im Zuge dessen einen organisatorischen Wandel vorangetrieben haben. \n\nEin weiterer Grund für Änderung in der Softwareentwicklung sind die sich beim Endkunden verändernden Voraussetzungen. Durch technischen Wandel aber auch sich ändernden rechtlichen Voraussetzungen im Bereich Datenschutz und Sicherheit sind Softwareentwickler gezwungen angepasste Dienste zu bieten um Konkurrenten keine Marktlücken offenzulegen. Wenn ein einem Land z.B. Digitale-Signaturen als rechtskräftig etabliert werden und gleichzeitig Peripheriegeräte wie Drucker in Privathaushalten seltener vorhanden sind, müssen entsprechende Maßnahmen ergriffen werden um dem Endnutzer im technisch/rechtlich möglichen Rahmen ein optimales Produkt zu liefern. Entwickler müssen solche (potenziellen) Änderungen stetig im Auge behalten. \n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266545,
      "meta": {},
      "text": "As technology develops day by day, this causes new customer needs, new market conditions, performance improvement, and reorganization in the business. The software development processes have to improve and be developed more efficiently and quickly, so companies must adapt and keep up with these requirements of change. Otherwise, they will lose their market positions very quickly and it will be very hard to regain a position in the competitive market. As an example, Nokia was the market leader in the phone industry. However, with the development of technology, smartphones have started to meet the needs of customers more. Besides, Nokia refused to research smartphones and produce such types of phones. As a result, Nokia lost its market position to Samsung and Apple very quickly and comes almost to the point of bankruptcy.\n\nAs the needs of customers have changed, Nokia should have experienced the same change. For example, while the durability of the phone was more important in the past, now people prefer phones that take better pictures and connect to the internet faster. In order to respond to these changes, Nokia also needs to make changes and improve its technology. For example, they need to find new ways to increase the megapixels of the camera, so that they could attract more customers’ attention. To adapt to these new technology changes and market requirements, Nokia should have changed some parts of its organization. There should be departments that research and produce the parts of smartphones. The scrum teams could be formed for this process and they could hold regular meetings, exchange information with each other, and share the latest developments. In this way, the team would work collaboratively towards one right and top goal.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261296,
      "meta": {},
      "text": "The process of software development is subject to a defined set of requirements the software needs to fulfill, as well as an external and internal environment which changes over time. This leads to change in software development. For example, if there is new data protection legislation passed then this may inhibit the realization of some requirements of a software.\n\nRequirements change happens when the requirements were poorly defined or other errors were detected demanding an adaptation of the current requirements. These changes are wasteful and make the process inefficient. For example, if the requirements were defined in such a way that it is impossible or too costly to implement, then the requirements were poorly defined and need to be adapted in order to make the project feasible.\n\nTechnology change happens when new scientific findings offer new opportunities for software development. Often, these changes impact customers' technical demand or generally bring up new technological opportunities for the development of software. For instance, the advances in AI and machine learning brought up numerous new opportunities for software development such that software developers need to continuously educate themselve on these technologies.\n\nFinally, organizational changes happen when the way software developers organize changes. This impact the process of software development. For example, the software development was greatly impacted by agile frameworks such as Scrum which makes the process much more efficient.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1261682,
      "meta": {},
      "text": "requirements changes: in the process of development, the customer will change their requirement. When the system design is started, the scope will change, and the description of the detailed use case may have many changes.\ne.g. Tokyo Olympiac at start wanted in 2020 to invite visiters from the whole of the world, but because the pandamic held later and accepeted only Japanese.\n\ntechnology changes: during the project there will be new releases, updates, new version.\ne.g. at the start of pgdp I can use jdk 8 to complete my homework, but with more work shall I update jdk 14 to programm\n\norganizational changes: the company owner will be changed and the develop team will add or remove members\ne.g. when Facebook bought the Whatsapp. the company will change the rule process of development and the member of manage\n\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262303,
      "meta": {},
      "text": "Change happens because of high complexity problem statements, fast technological development cycles, variations in the development environment and iterative feedback loops with the customer to fully map the expectations with the product.\n\nRequirement changes are based on updates elicitations, e.g. the customer originally wanted to have an online-shop without advertisement but now prefers to have an advertisement-based business model and web application.\n\nTechnological changes are due to advancements in technology, e.g. necessary updates for applications in the Apple App Store due to updated design or data privacy regulations.\n\nOrganisational changes are a result of a changing composition within the development team and/ or its encapsulating organisation. For example, the product owner could have a severe accident and this way would be forced to leave the team without a potential warning during the development process. ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262311,
      "meta": {},
      "text": "Software-Entwicklung hat sich im Laufe der Jahre verändert und verändert sich auch weiterhin noch. Der Grund für diese kontinuierliche Veränderung von Software-Entwicklung ist das nicht-endende Finden von besseren Methoden, eine Software zu entwickeln. Teilweise veränderen sich auch bestimmte Anforderungserhebungen, weswegen man seine Methoden der Software-Entwicklung verändern muss. Aus diesem Grund ist Veränderung in der Software-Entwicklung eine bestehende Herausforderung für Software-Entwickler. \nWährend der Entwicklung von Software entstehen auch im Verlauf dieser Veränderungen, mit denen die Entwickler umgehen müssen. Bspw. verändern sich die Anforderungen an die Software oder der organisatorische Aufbau. \nEin Beispiel von Veränderung von Software-Entwicklung in der realen Welt ist zum Beispiel die Entwicklung des \"Waterfall Model\" zur \"Agile Methodology\". In der früheren Entwicklung von Software war es gewöhnlich so, dass Software wie in einem Marathon mit strikten Mustern und einer linearen Vorgehensweise entwickelt wurde.  Heutzutage hat sich dies weitgehend verändert. Software wird nun in eher kleinere Komponenten geteilt und sukzessive entwickelt. Das erlaubt es, iterative Vorgänge der kleinen Komponenten vorzunehmen und besser kollaborativ zu entwickeln.\n\nDiese Veränderungen von Software-Entwicklung finden in verschiedenen Bereichen statt. \nIm Verlauf der Entwicklung können \"requirements changes\" auftreten. Theoretisch könnte es sein, dass der Kunde auf einmal andere Anforderungen stellt oder das Entwickler-Team versteht die Wünsche der Stakeholder erst im Verlauf der Entwicklung besser. \nZusätzlich treten auch möglicherweise \"technology changes\" auf, weil Verfügbarkeit von neuen technologischen Möglichkeiten in der Entwicklung auftreten. \nZuletzt besteht auch die Möglichkeit, dass \"organizational changes\" auftreten. Möglicherweise will der Kunde die Organisation der Entwicklung umstrukturieren. \n\n\n ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1262634,
      "meta": {},
      "text": "While developing software many things can make change happen. It might be human error, a changing requirement from the system or the customer or it might be the market and the innovations that happen there. There are many more reasons, in fact change is something very common in developing software. An easy example for this is the updates that had to be made from many companies as Flash was soon to be not supported any more by all big internet browsers.\n\nThat example is also a great example for technology changes. Technology changes are changes in the technology that is available. It can be caused by inovation and discovery but also by prohibitions and decline.\nRequirement changes on the other hand are changes that happen, when the necessary needs the product is supposed to satisfy, change, expand or shrink. Cause of this is usually a change of the market or target group or a change comissioned by the customer.\nOrganizational changes are changes that happen to the organization and / or goals of the company. This might include change of personnel, change of offered products and / or services and other company impacting decisions.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262654,
      "meta": {},
      "text": "The market itself and all market competitors have a huge impact on almost all kind of Projects. Customers want new technology and innovation, as well as a cheap price. Your competitors want to make more profit or sales than you.  There can also be new legal constraints like a new law that limits you or a change in the structure of the company/team you are working for/in. One more reason could be a tool you use to develop your Project e.g., the programming language or IDE you are using gets updated, which brings better performance, comfortable features or a better working experience overall.\n\n1. requirements changes: These changes can happen quite unexpected. They happen during the development of your Project. One example would be feedback from a customer, who is not satisfied with the current version of a project you are working on.\n\n2. technology changes: Companies like Apple or Samsung announce a new generation of their latest smartphone basically every year, unlocking new features, bug fixes or better performance (changes). And it would definitely be nice if the project you are working on is compatible with the newest generation.\n\n3. organizational changes: These changes happen inside of your team, or company. One example for an organizational change would be, if a member of your development team quits or feels sick. This would mean that the whole team has to adept to the new situation and try to find a solution to continue the work.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262686,
      "meta": {},
      "text": "Die Welt verändert sich konstant, auch Software entwicklung ist nicht immun gegen veränderung.  verschiedenste Faktoren können zu veränderungen der software die entwickelt werden muss oder die art und weise auf die software entwickelt wird beitragen. Software entwicklung ist abhängig von dem was Der markt gerade verlangt oder was kunden gerade benötigen oder haben wollen. solche veränderung der anforderung wird \"requirement changes\" genannt. zum beispiel wurde vor einiger zeit in autos kaum software gebraucht, nur für einige sicherheits einrichtungen wie EXP und einen radio spieler. um aber immer die attraktivsten abieter auf dem markt zu sein mussten auto hersteller immer kompliziertere software für autos entwickeln die inzwischen selbst einparken können. \n\ndie technik entwickelt sich auch unaufhaltsam weiter. es gibt immer neuere und Leistungssträkerere komponenten, die weitaus schneller rechnen können. deswegen kann software immer und immer mehr, man möchte natürlich auch ausnutzen was durch die hardware möglich ist und entwickelt deswegen immer neue programme die mehr leistung brauchen dafür aber auch deutlich fähiger sind. solche Veränderung heißt  \"technology changes\". in der Branche von computerspielen wird das besonders deutlich. seit der entwicklung der Raytracing technologie wollen immer mehr spiele diese auch nutzen, was heißt das entwickler lernen müssen damit umzugehen.\n\n\"organisational change\" ist veränderung die von Der firma ausgeht. zum beispiel eine veränderung der firmen Richtlineien oder ein anderer Chef, der andere entwicklungsmethoden bevorzugt. bei \"organisational change\" verändert sich mehr die art und weise auf die gearbeitet wird als das was dabei entsteht.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1262764,
      "meta": {},
      "text": "Changes in the field of software development have happened in the last years, because there has been a change in process concepts, there has been a shift from a rigid Defined process to a more agile Empirical process, which allows to incorporate unforeseen changes, like the example below, more easily.\nChange happens in concrete software development because, engineering has to deal real life changes and complexities during software development, which can create shift of project goals.\nFor example: The Company you design a website for, shifts there sales strategy during your project, which means that you need to need to integrate new Implementations and need to change old ones completely.\n\nThe area of requirement changes incorporates all the requirements that can be changed by the customer or user for the product. For example the functionality of the website you need to create, changes because your customer wants a different user experience.\n\nThe area of technology changes incorporates the technological innovation which needs to be implemented in order for the project to work this might be a new interface system for the website that we want to create. \n\nThe area of organizational changes involves your Team or organizational structure these involve the stages of team development or the overall team structure. In the real world things like sickness need constant adjustment of your organizational structure. So for example if your front end programmer gets sick you will need to assign someone else in the team  who is finished with there work  to take up his post.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262932,
      "meta": {},
      "text": "Various changes in software development can happen because of many changes happening every day in the real life, concretely saying,  in the market, in your company, in your customers'  company, etc. \n\nRequirements changes: Customers may change their requirements depending on their target.  For example, the customer once made a requirement to develop the system for Android apps, however, if they realize that the majority of their target customers are using IOS, they may need to change the requirements to develop for IOS.\n\nTechnology changes: Technologies are further and further developed every day.  New technology can change the markets drastically, for example, many retail shops have introduced shopping apps for smartphones in the last  5-10 years, while they had only local shops or some of them had online shops on the internet before.  Software development teams need to acquire the capability to develop the latest system to be competitive and needed by customers.  \n\nOrganizational changes: Some team members may leave the company during a development project for some reason. Then the tasks need to be reallocated to the developers.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263125,
      "meta": {},
      "text": "Change is inevitable, as technology becomes more advanced and the need for efficiency increases, but it is especially challenging in the software development, as software developers constantly need to adapt their programs to be up to date. For example the first websites were built only for Computers, as phones and other devices didn't exist back then. As phones became more popular, these websites needed to be adapted or completely rebuilt, in order to correctly be displayed on a phone or tablet.\nRequirements changes happen often throughout a project, as the users requirements change, new technologies become available or the team better understands the needs of the customer. For example a customer needs a website, which can handle 1000 users. After some time, before the website is finished, the customer realises the website needs to handle 10.000 users instead of the previous 1000.\nTechnology changes is pretty self explanatory. As time passes, technology will become more and more advanced, which the software developers need to adapt to. For example a new computer with the newest operating system will be faster than an old computer.\nOrganizational change refers to the actions in which a company or business alters a major component of its organization, like the hierarchy of people in a project. If a team has worked for years without a project manager, but then the company decides to hire a project manager for the team, then they need to adapt to the changes in the hierarchy of people in the project.  ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263314,
      "meta": {},
      "text": "During the sofware development process multiple changes could occur. When there's a problem during the development process, a serious bug in the code when time is running out, the team needs to adapt accordingly. Failure to assess the amount of resources available, problems in the management, a change of product requirements from the product owner. Such unforseeable circumstances can appear out of nowhere, which is why it is essential to have the ability to assess the situation accordingly and adapt to it as fast as possible. The world is constantly changing, the technologies are improving and new laws could be made every other day.\n\nRequirements changes: these changes can occur when the user changes their requirements or when the requirements become more detailed.  In this case the software can be restructured or improved accordingly.\n\nTechnology changes: these changes can occur everyday due the constant new findings in research and development of new technologies. Availability to new resources can drastically improve the software that is already being developed. The team needs to be able to implement new technologies in the development process\n\nOrganizational changes: changes in the management, company structure or company policies can lead to changes in the development process. The company could have been brought by another company that has silghtly different policies that must be taken into account.\n\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264160,
      "meta": {},
      "text": "Change happens all the time. Often interior circumstances are influenced, because exterior influences change.\nFor example: You develop a new mobile phone (Nokia) and you realize, that the market situation has changed. (Smartphones are hyped). Then you have two options, either you adapt your product (phone software) to work in the new environment (Smartphnoes) or your company dies.\nAlso possible: the Customer realizes, that the product were not \"what he had expected\". So you have to redo your requirements elicitation.\nGenerally: Knowledge developes exponentially, therefore the whole world developes exponentially fast. therefore everything (not just software development) changes fast these times. So, if you want to be sucessfull in software development, you have to adapt , to match the worlds requirements.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264564,
      "meta": {},
      "text": "Change happens constantly, for example due to changing requirements of a project, for example the client could realize a competitor has an additional fancy feature and therefore also set this feature as an requirement. \nAnother source of change can be technological, this happens for example when the team realizes the current systems do not provide the required data or the required features and therefore another approach is required on how to meet the final requirement.\nOrganizational change can also happen in a project, when for example a lead member on the software or client side resigns and therefore has to be replaced. In this case a suitable substitute has to be found and onboarded onto the project. This could lead to significant delays. \nIn the real world change happens just as often, for example I am on a plane right now which was supposed to get me to Munich tonight, however due to a massive delay I have to spend the night in Paris and it is still uncertain when I will reach Munich. I have to adjust to this change and let people that depend on me know that it has happened and cancel any plans I might have had in Munich. Just like in a software project I have to deal with the change and try to achieve the best outcome anyway. \n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264817,
      "meta": {},
      "text": "Changes occur as a result of a response to the ever-changing IT environment and play a crucial role in delivering suitable and high quality software solutions. In software development projects they are inevitable and, sometimes, they can also be very difficult. When working on a software project, there are a variety of reasons why it might be needed to introduce a change. Some of them include the requirement changes: for example, the stakeholder structure has changed, and the new stakeholders may have a distinct perspective on the problem and desired outcome. As a result, they may choose to modify or add new requirements. Another reason is the fast advancing technology: new and better technologies enter the market and enable new things and functionalities of our product, and we certainly want to stay up to date! Organizational impediments may also lead to some fundamental changes in the functioning of the development team which can have a significant impact on the current project (for example, the new team leader has been appointed). One concrete example of the factor that changed software development to a large extent is the open source software that lowered costs and effort needed for creating new software. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266009,
      "meta": {},
      "text": "In software development change can happen for a lot of reasons some might be: \n- New Technologies & new ideas being developed (outside influence)\n- The Market could be changing (outside influence)\n- New more efficient workflows might be available. \n\nWith these changes the software must also change in order to work with these Changes.\nFor instance: With every new next generation of Phones a lot of apps like \"Messenger\" or \"WhatsApp\" also need to change in Order to accommodate the new Hardware. \nIn addition: Every couple of years the market could be changing thanks to a new generation with unique and undiscovered requests, so in order to attract more clientele, development needs to be ready to adapt to new demands.\n\n\nThree areas of requirements changes include: the change in the users requirement, availability of new technologies and the stakeholders needs. For example, new technology is released to help improve the workflow of the team, so they have to change their workflow and their way of working. The stakeholder might request a feature added, so the team needs to implement it.\n\nThe organizational change may happen and this may include rotating the team: As in a Scrum team each developer may focus on one thing at a time, and the scrum master may request a position change in the development team to play of the teams strength.\n\nThe technology change may happen and therefore some things like learning new technologies might happen where the team needs to invest time to learn the new technology. \n\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266086,
      "meta": {},
      "text": "\"Change\" in Software Entwicklung kann häufig geschehen und ist meist eine weitere Hürde in der Fertigstellung des Produktes. Der Grund dafür ist immer einer von mehreren.\n\nAls Beispiel kann es während der Entwicklung zu Instabilitäten im Program kommen. Diese müssen selbstverständlich zuerst behoben werden, um problemlose Weiterentwicklung zu gewährleisten. Entsprechend müss temporär der Fokus auf die Fehlerbehebung geschoben werden. Zusätzlich führt dies aber auch zur Verbesserung der allgemeinen Stabilität des Programmes.\n\nIm Laufe der Entwicklung kann es eventuell dazu kommen das Klienten weitere Funktionen benötigen. Dies kann das Result direkten Feedbacks von früheren Versionen der Software sein aber auch aufgrund von neu aufgetretenen Technologien sein. Neue Wirtschaftliche Trends können auch dazu beitragen dass das Projekt mittendrin fundamental neu geschrieben muss um neue Technologien zu integrieren und um potentiell Kosten zu minimieren. Oft wissen Klienten erst dann genau was sie benötigen wenn sie zuerst eine \"Rohfassung\" haben. Somit können sie bereits während der Entwicklung ihre Bedenken äußern und Verbesserungen (QoL) vorschlagen. \n\nZudem kann es vorkommen dass der am Anfang angegebene Zeitplan / Entwicklungsplan (vor allem die Länge), falsch berechnet wurde und für das eigentliche Projekt wesentlich mehr Zeit und Resourcen benötigt werden. Dabei spielt das zur Verfügung stehende Budget eine große Rolle. Bei fehlendem Geld und fehlender Zeit kann der Fokus nur noch auf absolut system-notwendigen Komponente liegen, um zu versuchen am Ende ein funktionierendes Projekt zu haben. Sehr wahrscheinlich wird dieses dann aber nicht alle geplanten Funktionalitäten besitzten.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1266302,
      "meta": {},
      "text": "Change happens because of the dynamic nature of our day to day lives. A product that was planned to fullfill certain needs for the customers may not be relevant in couple of months.  \n1. Organisational change is when the hierarchy of the software development team changes. As an example we can look at the waterfall hierarchy in comparison to the nowadays very widely spread agile methodology. \n\n2. Technology changes- Technologies are changing very rapidly. As an example I would give the old phones with buttons in comparison to the new modern touch screen phones. \n\n3. Requirements change- Technology change most ofther than not is driven exactly from a change in the requirements. As above mentioned the market is guided by the needs of the customers, hense why when the needs/wants of the users change, this is being reflected also in the new technology. \nExample: Since the internet became more available on moile devices, more and more people are using only their phones for the day to day work and because of that, bigger screens and more powerful baterries were needed. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266339,
      "meta": {},
      "text": "Change happens in software development, as it is the process and transition of the software going from a previous version to a more improved version, and how to development process would be adapted to accommodate to that change, its important as it represents the development. This kind f change can be seen anywhere in the real world, for example a child. When they grow up, they are constantly changing and learning, and the older they get, the more the education they receive needs to be adjusted to accommodate their new skills. \nRequirement changes are the changes to what the final software would need to be, this could be influenced by the users wishes, for example they might want to add a functionality, for example if a game is being made, the user might want to have the game playable on mobile phones and pc. \n\nTechnology is also developing fast, so this needs to be taken into consideration during software development, so that the user gets an up-to-date product that runs fast, and not with e.g. an old processor. For example the user wants to have VR glasses but end up with a slow version. \n\nOrganizational changes are changes that have to do with the team working on the software, these changes may include the joining or leaving of a member or change in team positions. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266355,
      "meta": {},
      "text": "Change happens in software engineering as the real world around us becomes faster, more demanding of efficiency and new methods but also as the project gets reshaped and the requirements of the project can change overtime. One real world example of change is for example the change in programming language over the years, from C to C++ to Java. \nThe area of requirement change is when a change happens in the need and demand of the user, the stakeholder or the customer and therefore the project needs to restructure itself towards a new goal. This can for example happen if the software engineers are working on a product in an industry where they aren't experts in, where they are only working on the technical part. They therefore wouldn't be able to notice themselves if the industry or the demand of the industry changes, and will need to spontaneously react to a change of requirements during the course of the project.\nTechnology changes occur are also very important changes to react to in the software engineering world. They represent various trends that may seem volatile at the beginning, but that can reshape the software engineering in a major way. One example is for example machine learning operations.\nLast but not least another area of change is the organizational change that can occur. Organization changes include all changes made to the structure of the structure of the project. For example if the software engineering team gets larger or smaller over the course of a project.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262139,
      "meta": {},
      "text": "Change can happen in software development because the solution to a problem can lead to new problems, or can change with changes in the environment.That also implies that where once a software solved a specific problem and worked it will maybe not be able to do the same thing in the future, or with slightly different situation. Software development remind me of learning by doing as the process is not predefined, and changes with the process itself. In the real world the development of a software could also be compared with sailing. Like with software development sailing depends on how the sailing was before and also from the environment, if it raining someone should sail differently than with good weather. An example in real software would be Nokia as mentioned in the lecture, that struggled with the change in the software market that was caused by smartphones (change of environment).\n\nThe first of the three areas of requirements changes would be a change in technology. A change in technology could be described as the development of new technologies in the market that could affect the credibility of the technologies that are already existing.\nThe second change is the change in requirement. A change in requirement can be described as a change in what the software should do or what the problem solving aspect of it should cover. \nThe third area of change is a change in organisation which could be described as new laws, or new politics in a firm that could lead to restriction or change in the development of a specific software.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1262294,
      "meta": {},
      "text": "Change happens when a new approach becomes popular. For example, a big shift in software development was the adoption of Test-Driven-Development (TDD), where you first write the tests and the expected results and afterward the functions and algorithms to achieve these results.\n\nRequirements changes are for example when the client/user wants different functionalities than initially planned. An example of this would be if you build an app for a client which handles sign-up forms for special events. Initially, you planned to send these forms via a link to the guests and they can sign-up on a website, but your client prefers if you send them a PDF they have to fill out so he can print these registrations in the aftermath.\nTechnology changes are when you change parts or your complete tech stack to improve the current product or the development of new ones. For example, if you build a website with plain HTML, CSS, and JavaScript, this can become a big effort to enhance if the functionalities of the website increase. In this case, it would be a technology change if you move to a web framework like Next.js so that future development becomes easier.\nAn organizational change is when the project's team changes. An example would be if the SCRUM master of the project leaves and a new one joins.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263545,
      "meta": {},
      "text": "Change in software development happens because in every second someone is trying to fins a better technique or a better language for certain problems. Everyone is trying to do better. So if you stick to your programming language or on your techniques then people maybe won't hire you. So change in software development happens and a really big example for change in the real world is digitalization. Also in some points software does his own things. It changes and you have to adapt. An Example for change in software development are new development methodologies like Object-Orientation. Like if the environment changes then we have to change also, e.g. new laws or constraints. An example of requirements change is when you are working for a company and you have do things differently because the budget changed or because of new laws etc. An example of technology change is when someone invents new methodologies, new software architecture or there are new companies with different ideas of the same software, e.g. with a better architecture for this software. Like Nokia lost their competitive existence, when other companies came with a new model of mobile phone. They didn't adapt with the market and the technology. An example for organizational change is when the user of a software change or when you change your way to work with your team like using scrum for example. Software development is changing because software is adapting and also the developer or the user are evolving. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264417,
      "meta": {},
      "text": "Change in software development happens because the real world changes and the software has to be adapted accordingly. Thus change also happens in the software development. \nThese realworld changes include e.g. legal change. For example in 2016 Germany changed its GDPR regulations. Thus many companies had to adapt their systems to this change. E.g. different storage of data or couldn´t simply collect all data anymore. \n\nFirst area of requirement changes includes for example a change in peoples needs. This implicates that they have a different requirement for a software (product).For example if people don´t want to share their data with big organizations this implicates that there might be the demant for a new requirement of the software. For example a private surfing mode. \nTechnology changes also happen all the time due to innovation. For example if there is the technical possibility to unlock the phone using the customers face then it implicates a need for change. \n\nOrganizational change includes for example a new project management process that is introduced. A company could decide to use SCRUM and therefore this includes change (how people work, the resposibilities etc. change)\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266288,
      "meta": {},
      "text": "Changes plays a key role in Software Development , our wolrd is also changing day to day , with this Change our Codes and working Style is also changing. We have new Demands and expectation everday , to meet these demands Engineers have to Change and Update thier constantly , to statisfy the needs of the people. Sometimes it can be a major change in whole function of the program and sometimes its can be so minor that user maynot recogonise this. But, with the help of these changes and updates , we make our Program more efficient, Energy saving and give high performance.\nthree areas which have major requirement of changes are:-\n1. Logistics , in the area of transportation and logistics people faces new challenges everyday. People working in these field have to adapt to major changes and updates , in order to meet the Demand of the people. If they will stick to thier old methods and will not adapt with the Demand it will a serious consiquences. Nowdays with the help of Technological changes our Transportation system have become so efficient that we can have our Packages delivered on next day. \n2. Healthcare, because of increasing global population our Healthcare facilities also need to Change. There are new diseases occuring  so rapidly that we cannot find the Cure with the help of old methods. With the help of Computer Calculations and AI ,now Scientists can find the cure way faster.\n3. Socialization, earlier contacts of people were limited to a certain area, since there were no means of Communication with People who were far away, now with the Help of faster and faster Internet and new Socializing SOftwares , people can Interact and Share expiriences with people around whole world. ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266524,
      "meta": {},
      "text": "Die Weiterentwicklung vieler Systeme bringt zwar mehr Geschwindigkeit mit sich, gleichzeitig aber auch mehr Komplexität. Dadurch wird es immer schwieriger die Systeme zu durchblicken und diese zu optimieren. Vor allem bei großen Projekten wie z.B. der Facebook-Website werden viele Components benötigt. Wohingegen es füher noch aus wenigen Zeilen Code bestand und relativ simple aufgebaut war, ist es durch neue Funktionen, Features und Sicherheitsaspekten deutlich komplizierter geworden. Für eine bessere Programmiererfahrung wurde sogar ein neues Framework namens React programmiert, welches erlaubt jedes Stück der Seite in einen eigenen Component zu packen, welcher dann separat angesprochen werden kann.\nAllerdings gibt es auch Taktiken um gegen diese Komplexität vorzugehen. \nZum einen benötigt man ein Model von dem zu programmierenden Projekt. Dadurch bekommt jeder die gleiche Vorstellung, wie das Projekt aufgebaut werden soll. Dies kann \nAußerdem werden viele Meetings benötigt, in welchen besprochen wird wer was macht, was die temporären Ziele für den Tag sind und welche Probleme existieren oder neu aufgekommen sind.\nAber nicht nur während dem\nMetting, sondern auch die ganze Zeit ist Kommunikation wichtig, damit alles reibungslos zusammenspielen kann.\nUm noch mehr Abstraktion zu schaffen wurden auch zusätzlich neue, passendere Programmiersprachen geschaffen, welche zum Beispiel dabei helfen, dass eine Applikation auf dem Browser udn dam Handy gleichzeitig laufen kann.\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1262300,
      "meta": {},
      "text": "Nowadays, there is a lot of good software. Good quality software is something developed with enough budget until a given deadline. Since software development is not a straightforward path, changes will naturally occur. \nFirstly, there are technological changes. For example, cloud computing has become more popular as it takes away the software workload from your computer. Many companies can host their software on a cloud and offer them at a better price to their clients.\nSecondly, there are changes in the requirements. These requirements are maybe a change in trends, the market, or new legal constraints like data security. Facebook and many other social media platforms needed to renew their software regarding data security in Europe.\nThirdly, changes happened on the inside of software development teams. These are more or less organizational changes. \nLibreOffice or CalyxOS are open-source projects developed by many people around the world. All projects happen because of the collective might that software developed through team effort is more efficient than a single person. Additionally, there is also this concept of agile software development that companies use today. The idea states that the development of software is empirical. It is not developed through complete planning but through inspecting and adapting to changes. One of the models based on this idea used by software development teams is scrum.\nIn conclusion, changes happen in software development because change will occur during the development phase. May it have been technological, environmental, or something different. In the end, it is a fact that developers need to adapt to those changes together. Only then will the result be of high quality.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262619,
      "meta": {},
      "text": "Software development, just like any other process, is subjected to constant change, rooted in the human desire to increase efficiency and improve overall wellbeing. \n\nOld patterns, such as the 'factory method' may have been suitable in regard to requirements being constant in the past, but they cannot compete with more dynamic approaches like 'agile development' in the current timeframe. \n\nToday, code needs to be interchangable to accomodate rapid alterations in requisites, while final projects in the past were exactly that - final.\n\nTechnological changes also modified the way software is being developed. Code can be shared globally in mere seconds, intelligent IDEs analyse code snippets and try to predict the next lines, and programmers can code in high level languages because compilers take on the process of translating to machine language.\n\nOrganization went through a process of change as well. Teams became bigger, more organized and  consist of distinctive roles, both in the hierarchy and type of work, while also retaining a ceartain freedom for its members. Mental health, long breaks and a respectful climate are often considered when leading a team of people. \n\nOverall, Software development became more complex, but also more diverse.\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263310,
      "meta": {},
      "text": "Change occurs, because the environment is constantly changing. The technologie, views, opinions, responsibilities and other influencing factors can change from one day to another. This can result in the original plan not being possible or the best plan anymore.\n\nWhen a house is being build, but the client wants to add a floor the original plan has to change, and depending on the stage the house is already in, it will take way more time and cost way more.\n\nRequirement changes:\nDuring the software development the requirements could become more clear or the client could add new requirements. This will lead to changes is the design and could lead (depending on how far the development is) to massive changes in the already developed software, and therefor to higher costs and more required time.\nFor example, if a webapplicaton is in development and the client now wants the application also to work on mobile phones (IOS, Android), more versions of the app have to be build.\n\nTechnology changes:\nIf a new developed technologie is superior to the one used before or the technologie used before doesnt work as expected, it could be a a good idea use the other or a other technologie.\nFor example if one used 2 different ways for developing the same app for IOs and Android and then a new software development kit is released were one can develop one app, that runs on Android and IOs, is could make sense to use this tool kit instead\n\nOrganizational changes\nIf a the organization of the developer team chages, e.g. they get a new leader, the new members may have different preferences and adapt the project to them. E.g. a new leader chages the project from waterfall to agile methodology",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263843,
      "meta": {},
      "text": "The traditional criteria of the project triangle quality, costs and time are expanded by the dimension of change. Change arises because of technological and environmental adaptions. The latter incorporates new regulations when governments come up with new laws or new market competitors that challenge the status-quo. Nokia, former leader in mobile phones, is an example of a company that got strongly endangered by technological and environmental changes. Since Nokia did not foresee the rise of smartphones it almost went bankrupt.\n\n\nRequirement changes arise from miscommunication or environmental changes. The former results from a diverging understanding of a problem in business and tech teams. The realization that a product does not cover a business problem requires an adaption of technical requirements. Environmental changes arise due to legislative changes, such as a stricter regulation on the handling of customer data.\n\nTechnology changes describe the improvement of existing technologies and invention of new ones. It disrupts entire industries. One of the most dynamic technological transformations occurs in the automotive industry in autonomous driving, electrification, and connectivity. Here, the development of the most reliable autonomous driving software for the most affordable price in the shortest possible time (triangle) transforms the industry.\n\nOrganizational changes: Technical products depict a key lever to realize strategic initiatives. Thus, company-internal politics and thereby, relevant stakeholders and their standing, strongly influence how requirements are defined and software is developed. The hiring of a new CTO describes an example in which a new powerful stakeholder formulates new requirements that will result in the deprioritization of others.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263868,
      "meta": {},
      "text": "Change can happen for many reasons, sometimes the software simply needs to adapt to an evolving market, sometimes problems are encountered during development and require an architectural redesign to be fixed. Since software engineering is an inherently empirical process, the development team cannot precisely predict/plan the development of the software and has to adapt to unforeseen eventualities.\n\nRequirement changes are changes of what the software has to accomplish, its purpose/goals, e.g. new functionalities, performance/security improvements.\n\nTechnology changes are changes about the tools used in the software implementation, e.g. if a library gets deprecated or a non backwards-compatible version gets released, the software will have to be modified in order to function properly. This has been especially visible in 2020, when Python2 reached end of life and many programs had to be updated in order to be compatible with Python3.\n\nOrganizational changes are changes that affect the development team and the way they work together, this can be for instance the retirement of a member, who will be replaced by a new one, but it can also be the creation of a new role in the team, e.g. Software Security Engineer.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264308,
      "meta": {},
      "text": "Es gibt verschiedene Gründe, weshalb es wichtig ist, in der Softwareentwicklung mit Veränderung umgehen zu können, denn das es zahllose Ursachen gibt, die unerwartet die Durchführung eines Projektes beeinflussen, ist das Einzige, womit man sicher planen kann. So hat alleine der Ausbruch der Corona Pandemie und die Verschiebung von Arbeit ins Homeoffice, die Kommunikation zwischen Entwicklern innerhalb von Projekten beeinflusst und verändert.\nVeränderung kann in Verschiedenen Bereichen vorkommen, so können sich etwa die Anforderungen des Kunden an die Software ändern, also die Wünsche die z.B. ein Unternehmen an die Funktionalität der Software haben. So kann es sein, dass ein Unternehmen, dass eine App entwickeln lässt, durch eine neue Marktstudie wegen einer veränderten Marktsituation herausgefunden hat, das Elemente im User Interface anders angeordnet werden sollen, um deren Zielgruppe optimal zufriedenzustellen.\nDarüber hinaus kann es zu unerwarteten technologischen Entwicklungen kommen, die die Entwicklung der aktuellen Software beeinflussen, etwa durch Entwicklungen in der KI oder anderen Softwarelösungen. Zum Beispiel kann die Entwicklung einer Onlineshopapp dadurch beeinflusst werde, dass währenddessen extern ein Buchhaltungssystem entwickelt wurde, dass einfach in die App integriert werden kann und so den Prozess erleichtert.\nAußerdem kann es zu Änderungen in der Organisation von Projekten kommen, etwa dem Zeitplan, oder dem Budget. Alleine wenn etwa das Management eines Startups, das eine App entwickelt sich dazu entscheidet, das Budget für die Entwicklung der App zu kürzen, wird diese nachhaltig beeinflusst, indem die Entwickler etwa den Zeitplan oder das Qualitätsziel für bestimmte Funktionalitäten der App anpassen. So wird wahrscheinlich die Qualität gesenkt werden müssen und die Fertigstellung länger dauern.\n",
      "score": 83.3,
      "language": null
    },
    {
      "id": 1264931,
      "meta": {},
      "text": "why change happens in software development:\n- Because the environment is changing so rapidly, software development must also adapt and therefore change\n-for example, new technologies, new legal restrictions/laws, new market competitors might emerge (that could challenge you and other companies)\n\nReal-world example: from cell phone to smartphone.\n-Nokia did not anticipate that there would be a new category of cell phones, namely smartphones\n-they did not adapt to the new environment and almost disappeared from the market\n-(The best way to deal with change is to be open to new ideas and technologies, monitor the needs of the market, use agile methods and invest in innovation)\n\nRequirements change:\n- If a customer has an impossible problem discription, it must be changed so that it still resembles the original, which meets the same needs but is feasible\n-may occur, for example, due to changes in customer needs, changes in market requirements and availability of new technologies\n\nTechnology changes:\n-Technology changes on a daily basis, so companies need to adapt to it quickly\n-This can be seen in the automotive industry, where a new technology, e-mobility, emerged\n-The software development for these new cars must have changed a lot, because now your software must be tailored to completely new engines\n-so you should be able to add new features, fix bugs, and restructure the code to future technology changes\n\norganizational changes:\n-are actions where a company changes a key component of its organization, such as its culture, the underlying technologies or its internal processes\n-An example might be that a software development team is now using the SCRUM approach with continuous integration and sprints, rather than last-day integration as before\n\nAs you can see, these three types of changes are closely related to each other",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264942,
      "meta": {},
      "text": "Software development in the real world is not static, it is constantly changing. For instance, now it is people to get peoples contact information through QR codes. If we view the beginning of this, it started out with exchanging phone numbers then receiving the possibility of sending a contact detail per \"hand\", now this is compressed into a QR code storing all the information. \n\nThis brings us to the first of the changes, the requirements change. These are possibly new demands or wishes produced by customers for the development team. We can take a login for example, the classic account name and password can be converted into a multiple point login with another checking device, in e.g. a mobile telephone or further information. \n\nAnother point of change is the technical one. This focus is shifted not on the direct demands of the client but the hardware available to the development team. Possibly better components or more impact per piece of tech. This increase can be seen in video games, where the games need higher and more intensive components to run the newer games at the wanted frame rates and resolution. \n\nThe last of the three changes discussed in this exercise is the organizational change. If we take Neural Networks/Machine Learning in chess as our leading example, we can see that previously people used to code chess bots through played strategies or known gambits. With Neural Networks, we give our program a set of rules and let it build its own knowledge of the game, leading to higher outputs and results. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265060,
      "meta": {},
      "text": "The changes in software development depend on the improvement of technolody within time. Every year thousands of developers from all across the world find better solutions for a faster and more efficient technologies and bring them to the market. Also, in order to compete with other companies and their product developers try to invent something new within a short period of time, just to be first. \nIf we think of an example, Apple and Samsung come straight to a mind. They are always the ones to compete with each other in inventing the most ergonomic, fastest and most appealing devise to sell to the population. \n\nWithin the change of the software development, it gets harder for a programmer to receive a project to work on if he does not keep up with tendencies and doesn't ecquire further knowledge. There is always going to be a \"hunt\" for the software developers who will manage how to solve the newest problems and challenges, because only they will bring the sphere of technology on the next level.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265086,
      "meta": {},
      "text": "Vom Tag zum Tag werden die Technologien immer fortgeschrittener. Sie machen unser Leben einfacher und lassen uns, auf die wichtigeren Dinge sich zu konzentrieren. Somit werden aber auch die Marktanforderungen höher.\n\nDiese Tatsache gilt für die Softwareentwicklung. Bei einem oder anderem Software können unerwartete Fehler auftauchen. Somit wird mit der Zeit dies verbessert, sodass man die Fehler erwartet, fängt und automatisch behandelt. Auch wird das Design mit der Zeit einfacher und bequemer für den Nutzer. Kompatibilität mit anderen Geräten ist auch ein sehr wichtiger Punkt, heutzutage ist es schon auch bequem, unterschiedliche Betriebssysteme zu kombinieren.\n\nEs können unterschiedliche Veränderungen kommen: technologische, organisatorische und Anforderungsveränderungen. \n\nTechnologische Veränderungen finden dann statt, wenn es eine Möglichkeit gibt, die Arbeit eines Systems effizienter oder funktionaler zu gestalten. Es kann eine neue Technologie kommen, diese wird dann immer weiter verbessert und verbreitet. Ein wäre dann Face ID. Dies hat Touch ID ersetzt, indem man nicht mehr auf den Knopf drücken muss, sondern nur sich selbst sein, um das Handy zu entsperren. Diese Technologie wird dann verbessert(man wird sie mit Maske nutzen können) und weiter umgesetzt (iPad Pro).\n\nEine organisatorische Veränderung wird gemacht, indem man der Aufbau oder die Organisation des Unternehmens ändert. Es kann die Struktur des Unternehmens verändert, neue Bereiche werden eingeführt oder die Mannschaft teilweise gewechselt wird. Auch kann sogar das Geschäftsmodell an sich verändert werden.\n\nBei der Anforderungsänderung geht es um die Verbesserung eines Betriebssystems durch die Meinungen und Vorschlägen der Kunden. Dadurch kann dann die Softwareentwicklung sich zur Perfektion nähern, indem immer mehr Ideen seitens Kunden kommen erfüllt werden. Es wird dann rational abgewogen, und die Entscheidungen bezüglich der Entwicklung werden getroffen. Zum Beispiel, war Yandex früher nur ein Browser, heutzutage hat es mehrere Funktionalitäten (Maps, Nachrichten, Musik).\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266073,
      "meta": {},
      "text": "Veränderungen können jeder Zeit auftreten, denn es gibt oft eine neue Methode oder sogar bessere Methode ein gewisses Software Problem zu lösen. Zum Beispiel wenn man einen besseren Code hat der ein gewisses Problem schneller Löst als der alte Code. Unter anderem kann es auch passieren, dass Kunden plötzlich neue Wünsche haben, die dann umgesetzt werden müssen. Insgesamt gibt es viele Gründe die für Veränderungen in der Software Entwicklung sorgen, das waren nur einige Beispiele.\n\nrequirements changes: \nWie schon erwähnt kann es sein, dass wir zum Beispiel neue Anforderungen von Kunden gestellt bekommen, wenn ihnen zum Beispiel gewisse Prozesse nicht gefallen oder sie selbst vergessen haben daran zu denken was Ihnen alles wichtig ist. Es gibt unzählig viele Ideen etwas zu optimieren oder neue Funktionen für etwas bereitzustellen.\n\ntechnology changes:\nEs kann passieren, dass neue Technologien auftreten die besser/schneller sind, als alte. Wenn das passiert lohnt es sich noch mal das bereits erledigte zu überdenken. Zum Beispiel als Streams in Java 8 rauskamen, wurde damit vieles einfacher und kompakter.\n\norganizational changes:\nEs kann vorkommen zum Beispiel, dass man das Budget zu optimistisches gesehen hat und man mitten im Projekt merkt, dass es viel zu teuer wird, somit muss man sich eine andere/billigere Lösung überlegen die Kundenwünsche zu erfüllen und sich und das Team neu organisieren.\n",
      "score": 0,
      "language": "GERMAN"
    },
    {
      "id": 1266205,
      "meta": {},
      "text": "In the book “Object-Oriented Software Engineering’’ is software development defined as \"projects that are subject to constant change\". There are many reasons why change can happen in software development. \n\n First reason is that software is a discrete System which means it can contain hidden surprises which can be later discovered and changed. Second reason is that developers have a better understanding of the project and better ideas. They figure out whats exactly the needs of the customers are. Another reason can be that developers ignored requirements for some reason, and the result will be, they will need to go back and fix the problem via changes. Last but not least, if developers cut the budget, they will need to do some changes in the project to fit the budget.\nA stakeholder can be missing in the development process which can also lead to changes.\n\nA general example from the real World.  \n ﻿At this moment the COVID-19 pandemic is the biggest challenge which governments and health authorities across the world are facing. Google and Apple joined forces to create a software that would help these governments to reduce the spread of the virus,but at the same time respecting the privacy of the users. Working together meant they had to find a way to collaborate efficiently between their respective software ecosystems and keep up with the requirements of skeptic citizens. \n\nThe technological developments already made through different universities and public health authorities made possible to develop tracing technology\nBecause of the past Facebook scandals, a lot of people are more sensible about their personal data.  To tackle this problem, Google and Apple are launching technology to assist in enabling contract racing.\nThe contact tracing apps store data on an individual's device, not in a central database. This strategy has already been proven to be successful in countries like South Korea and shows great potential in slowing the spread of the virus. We develop software to solve the problems we face everyday, and as the problems change, so will our Code.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261498,
      "meta": {},
      "text": "Software development is all about trying to solve a problem. In the process, developers have to deal with two main challenges: High complexity and change.\n\"Divide and conquer\" alongside integration methods can help handle complexity. However, changing requirements influence this process. Initial problems (unique objects) and requirements are communicated with the customer and subject to frequent change.\nChanges in requirements typically effect the quality-, cost- or time-dimension. For example, management could need to save costs, therefore accepting lower quality. Timeline-changes could lead to acceptance of a different price tag. Conversely, financial issues could force customers to accept lower quality and/or deadline extensions.\nHowever, changing main objectives pose the greatest challenge. Mobile phone manufacturer Nokia, for example, was not able to adapt to customer demand for smartphones quickly enough. At some point though, software developers must have, for example, had to change the operating system's inputs from button- to touch-first to accommodate new types of devices.\n\nRequirements changes happen whenever customers change a software's main required functions. For example, a company might decide that it wants to pull out of a certain market which renders some of the proposed functionality of the software obsolete.\nTechnology changes influence how a software works. For example, a new tool could be available and substantially simplify the software's solution approach. \nFinally, organizational changes include how a company will use software. A manufacturer could, for example, decide to digitize processes formerly handled with pen and paper which could make it necessary for the software to handle new kinds of input sources. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262507,
      "meta": {},
      "text": "Change happens in software development since there is change and progress in how software is used and needs to be used over the time. A change in software usage is inevitable without changing the software itself and thereby its development. A great real world example about change in software development is set in the 2000s. All cellphones in the early 2000s were just able to send texts and manage incoming and outgoing calls.  Since the technology advanced it was made possible to build cellphones with a greater (touch) display and a stronger processor. After Apple introduced the first iPhone in 2007, most of the software applications or websites were not developed for smartphones. Many software development teams had to overthink and adjust their developing in general in terms of: complexity, energy consumption, user interface and memory management, since smartphones had touch/smaller screens, less storage and had to be more energy efficient. \nThis example also shows that technology changes make a different use of technoglogical devices possible and therefore influence or increment the requirements of software. Another good example of how technology changes, requirement changes and organizational changes collude together are virtual reality glasses. As a virtual reality glass is a promising product, you might want to run your software also on those glasses. Therefore you clearly need to adjust your development towards virtual reality. The requirements of your software have changed.  This influences the organization. You probably need more time to delevop the application and there might be some virtual reality developer in your team, everyone needs to organize with. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262685,
      "meta": {},
      "text": "Veränderungen passieren in jedem Teil des Lebens, auf der ganzen Welt und im ganzen Universum.\nOhne Veränderungen würde das Leben wie wir es kennen gar nicht existieren. \nDeshalb ist es nicht verwunderlich, dass auch in einem modernen Thema wie der Software Entwicklung Veränderungen passieren.\nBeispiele für Veränderungen sind überall zu finden. Sei es der Übergang von Elektronenröhren zu Transistoren, die Etablierung des Internets oder nur eine neue Generation von Prozessoren von bekannten Herstellern. \nEs gibt also sowohl Änderungen der Technik auf der Software läuft als auch Änderungen die Menschen erfahren, die solche Software schreiben.\n\nAnforderungsänderungen: \nFrüher war es normal bei einer Überweisung zwei oder drei Tage warten zu müssen. Heutzutage ist es die Pflicht eines Unternehmens in kürzester Zeit eine Geldtransaktion zu bestätigen. Andernfalls wird das Geld nicht überwiesen. Deshalb müssen sich Banken an die heutigen Anforderungen anpassen und neueste Technologien verwenden um weiter agieren zu können. Software muss da mithalten und solche rasanten Berechnungen sicher und zuverlässig abhandeln können.\n\nTechnologieänderungen: \nDie gerade genannten Anforderungsänderungen sind nur durch die vorhergehenden Technologieänderungen entstanden. Durch Rechenzentren und das Internet ist es überhaupt erst möglich so schnelle Transaktionen zu tätigen. Während man früher noch einen Rechenschieber genutzt hat um zu Addieren greift man heutzutage in die Jacke um seinen Supercomputer im Taschenformat rauszuholen und mit vielen Megabit pro Sekunde die neuesten Trends abzuchecken, Bilder zu machen oder zu telefonieren. Software muss also wie die Technik selber vielseitig sein und sich anpassen.\n\nOrganisationsänderungen:\nWährend früher nur ein Mensch an etwas geforscht hat, sitzen heutzutage teilweise hunderte Menschen an einem Software Projekt verteilt über die ganze Welt und müssen auf Probleme reagieren. \n",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1262770,
      "meta": {},
      "text": "Software and the processes of development are fluid. Once software is developed, it doesn’t get abandoned; it is constantly updated to ensure that customers and users are delivered the best experience while also maintaining compatibility with the latest technology. The most influential innovation is the internet and how it revolutionized software development as well as information consumption; software is now developed for multiple platforms and audiences simultaneously. The three categories of changes, namely requirements changes, technology changes, and organizational changes, are often the direct cause for a product to have a different development cycle or be rewritten from scratch. Requirements changes occur when the client requests a feature to be developed differently from what was originally envisioned. Suppose a client wants a feature to have a certain behavior. If the client requests for different behavior during the development cycle, it would constitute a requirement change. When compatibility issues arise or technology progresses, such that the original software could be optimized to run better on modern technology, we refer to technology changes. A great example for this is mobile app developers being required to update their apps to use newer APIs as newer mobile operating system versions are released to ensure security and compatibility. As for organizational changes, these allude to shifts in strategy or the organizational structure of either the client or the developers, such as how the pandemic led many organizations across the globe to adopt more remote and open solutions for their employees to work from anywhere.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264443,
      "meta": {},
      "text": "There are many possible reasons as to why change can happen in software development, like changes in the requirements if for example more users or additional languages need to be supported, or if underlying technology that's being used changes, where you have to adapt your project to make use or stay compatible with the new technology. An example for that would be if an external library used in your code is no longer supported and may turn unsafe over time, so you have to change to a different library to keep up with safety standards.\n\nAs already touched on above, requirement changes generally refer to the things your project needs to do or support. Another example would be additional features that are requested either during the planning, the implementation or the live phase, that were not needed or specified in the original scope of the project.\n\nAn example for technology changes could be if underlying physical technology changes, like the installation of faster data cables that enable you to send more information or make use of real time applications in your project that would not have been possible before, or if the software you are using changes, like the release of a newer engine for your 3D project that you want to port your code to.\n\nOrganizational changes can refer to things like changes in your available budget, hiring or leaving of employees or relocation of your offices.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264748,
      "meta": {},
      "text": "Software Engineering and in particular software development is always subject to constant change. The reason to that is the fact that we are in a world constantly evolving technologically and intellectually, where programs need to be updated to match the new requirements of today. Also, when errors are discovered or a new perspective is added to the project, changes need to be made for the software to perform better. An example to that would be all the updates that social media apps do frequently for their software to keep offering an attractive pleasant experience to their users. \n\nThose changes divide in the three areas. First the requirement changes, those are the changes that the client requests or the changes made by the development team, as they understand better the application domain. For example, such a change could be, a client is asking the development team to change the main page of his app, the buttons could be not displaced as it pleases him, the font is not good looking, etc...\nSecond the technology changes, those are the changes made to incorporate a new technology to the software or new hardware discoveries that directly affect the software providing a new insight that could help the developers update the software to a better performing one. Such changes could be low-code and no-code tools that software developers tend to integrate more and more.\nThird and last organizational changes, also called management changes who’s main two goals are supporting the processing of changes and enabling traceability of changes. An example for those would be the implementation of a tracking code to the software.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265291,
      "meta": {},
      "text": "Change happens because we are living beings in a changing world that continuously bring innovation and have ever changing needs.\nAn example for change in the real world is the release of a new generation of operating systems or the release of a new CPU architecture.\n\nRequirement change is, when the client decides that the software needs to meet different requirements like having additional features or supporting different target devices than originally planned.\n\nTechnology change happens, when the technology changes by, e.g, new hardware that shall be supported, software updates that break compatibility or the dicovery of a glitch in third party software that needs to be addressed.\n\nOrganizational change happens, when the developement team changes by, e.g, new members joining, old members leaving or a member becoming ill.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265376,
      "meta": {},
      "text": "Change can happen at different stages of the software development process. First, software developers need to correctly set and understand the task. Here, requirements communicated by the customer can change, can be misunderstood and reiterated. For example, the product owner misunderstands the customer, and the team starts developing a music streaming app instead of a music producing app. Once the mistake is recognized change is required.\n\nApart from requirements, that can change all the time, during the solutions process better models can be designed requiring changing again. During implementation of the model the team could also recognize faulty design, that requires change again. During testing the software, the team could realize that the software is not meeting requirements and needs change. Finally, maintaining a running software for the customer needs change all the time. For example, security updates to plug holes.\n\n1.\tRequirements Change\nThe customer changes her mind and asks for an app that recognizing pictures of dogs instead of cats.\n2.\tTechnology Change\nDuring development of an app for the Apple app store, a new security code is introduced by researchers elsewhere. Apple now requires all apps to update that security detail.\n3.\tOrganizational Change\nThe team’s top software developer leaves the company during a SCRUM sprint project stage. She leaves several tasks open and unfinished.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266327,
      "meta": {},
      "text": "1. One key characteristic of Software Development is the level of uncertainty leading to an empirical process rather than a defined process. Within the process of software development changes might occur on multiple levels, due to the unpredictability of the process. Every development project is to a certain extent a novelty, which automatically leads to unforeseen hurdles and challenges. For instance, the submitted problem statement might not cover the problem in its entirety, thus leading to change in requirements. From working experience I know that in certain customer projects some required functionalities might not be obvious to the customer, but during the course of the project and after multiple sprints their significance might occur. In one instance, physical effects had a big impact on the measurement results which were not accounted for in the original requirement spec. This became obvious after multiple sprints leading to a change. \n\n2. Requirement changes are changes in the demand that the software needs to satisfy. For instance, changes in the customers workflow or consumer base might lead to a change in the requirements. Technology changes covers all changes corresponding to programming languages, devices, frameworks, database systems, etc. For instance, new releases might make a changes in database systems worthy. Organizational changes summarize all changes to the team structure and personnel within the team. Like a new scrum master joining the team. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266350,
      "meta": {},
      "text": " Change in Software Development\n\nDuring lecture lecturer mentioned case of the Nokia as example. As a Finnish I find this example really interesting. I think that Nokia is good example of problems with organizational changes. In still around 2005 Nokia spent much more money on product development than for example Apple. Problems that caused destruction of the Nokia mobile phones was not lack of product development or technical skill. More likely problems were caused by bad management and organizational problems. Nokia for example tried to develop two operating systems at the same time. In his book previous Nokia's chairman of the board Risto Siilasmaa put the blame on his predecessor Jorma Ollila.\n\nWhen thinking about requirements changes one thing comes first in mind. Climate change is a problem that at least most of the companies try to solve or at least take into consideration when making decisions. Tesla could be a good example in this case. Realization of human actions effect on global climate has created demand for more environmentally friendly transportation. This has opened door for Tesla to gain remarkable market share in car industry. Tesla can also be example of technology changes. Only in recent years battery technology has developed to level where electric cars can compete with traditional car. Tesla is also know for collecting lot's of data. I think software developers have to take into consideration recent technical changes to be able to collect the most reliable and efficient information.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261986,
      "meta": {},
      "text": "Software development is heavily dependent on what consumers want, what technology exists and what goes on inside a given company. These factors are subject to constant change, which makes the purposes and tools of software development change too. \n\nA real world example of this would be the coronavirus pandemic, which caused a big change in how people spent their time. It gave software companies a strong incentive to put a much higher amount of effort into online entertainment and communication services.\n\nRequirements for a project might change when a client puts in a new request, for example if there's been a budget cut or some other development and the client doesn't want certain features anymore. \nTechnology changes a lot, too. Often this change is an increase in speed and capacity. This can make it possible to forgo certain optimizations or expand a program to work on larger data sets. \nOrganisation can change as well, for example if the developers are split into new teams or assigned new positions. This causes the workflow of the project to change, which makes a big difference.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262101,
      "meta": {},
      "text": "Change in software can happen due to unforeseen circumstances that couldn't be accounted for prior to the start of the development process. For example, when building a website for a customer, the team could realize that there are better frameworks to build the product they want to deliver to their customer and maintain it, and so they conduct a re-write using a different framework.\n\nRequirements changes:\nOur customer initially communicates that he's contracting us to build a desktop application. Throughout the coming weeks, more market research is done, and the customer's team come to the conclusion that a web-interface would be better due to mobile support.\n\nTechnology changes:\nThroughout the development process, a breaking security issue is found in one of the technologies used. As security is our customer's number one priority, the team decides to switch to a different technology to meet the customer's needs.\n\nOrganizational changes:\nWhen a crucial team member with a lot of domain knowledge leaves the firm and has to be replaced with someone else.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262155,
      "meta": {},
      "text": "During software development, one has to deal with a high level of change and complexity due to numerous reasons. There are many factors that influence the outcome of a software project and sometimes it is enough that only one minor factor changes to change the whole project (scope). Some of these changes can be traced back to requirements, technology and organizational changes. One example for change in the real world is when the budget for software project gets reduced and the team has to adapt accordingly by either limiting the resources or reduce the product backlog. \nWhen looking at requirement changes there could be for example changes requested by the \"customer\" (who put the project in order) after the software project has already started (e.g. changing the software from a web application to a mobile application). This could change the scope of the project and requires the whole development team to adapt. \nTechnology changes can occur when e.g. a new disruptive technology like Blockchain becomes available and you figure out that you want to base your software on this technology, This most likely results in the development team starting from scratch or rebuilding certain parts.    \nOrganizational change can occur for example when the organizational structure of the team changes, e.g. the scrum master leaves the company and has to be replaced. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262174,
      "meta": {},
      "text": "Change in software development happens because of new technologies, change in requirements (customer wishes), optimizations later on when systems grow or organizational changes like changing refactoring practices.\n\nIn the real world change is a constant force. As time goes on people retire and companies change their staff. If the management staff changes there might even be consequences to the companies whole identity. To give an example I worked for ESRI Germany Group. At some point the management staff decided to sell the company so they did. The new owners transformed the company into a modern tech firm (ESRI Deutschland und Schweiz GmbH) which meant new hierachical structures and new processes in all areas. We even changed all IT Systems for modern ones.\n\nRequirements changes are made by the customer. For example if he or she owns a small webshop and wants a different behaviour when clicking a item in the shop. \n\nTechnology changes appear through new development, research or trends. For example everyone did use the hierarchical database model in the 1960s until Codd conceptualized the relational database model (and after some time). Today there are hardly any other database models but the relational ones or newer trends.\n\nOrganizational changes are made by management. Like the example I mentioned earlier with ESRI Deutschland und Schweiz GmbH there might already be a change in managment itself or if the management of a  company decides to cut budgets there might be the need to reorganize certain costly departments of the company.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263575,
      "meta": {},
      "text": "Part 1 Changes occur in software development due to various reasons ranging from \n1. change of the demands from the end user/client\n2. problem in the ideology of the way of coding the software (previously written code could be faulty/slow or better optimisations could be possible)  \n3. system integration problem where one team made one part of the code and the other team made another but when they try to combine them the resultant code doesn't give the desired output \n4. adding a feature at a later date.\n\nReal world example: updating an online game client to fix bugs or to add a new hero for the users to play.\n\nPart 2\nRequirements Changes;- Changes that occur due to changes in the requirements or demands of the (end-) user.\n\tExample;- The code outputs \"dog\" but at a later stage it came to a decision (maybe among stakeholders or via crowd testing etc) that the output needs to be \"doggo\".\n\nTechnology Changes;- Changes in technology is inevitable and the software also needs to adapt to modern technology either to better suit the end user, for optimisational reason or due to other reasons.\n\tExample:- The shift from 32 bit architecture to 64 bit was a needed one but it did come with it's difficulties. Maybe in the future we get even higher bit architecture which would be great but software would also need to change for it.\n\nOrganisational Changes;- When the place you are working at/ for has changes happen to it's organisation (personnel, hierarchy among colleagues etc ) is called organisational changes. \n\tExample;- Change in the lead dev of a project or change in a team member of a coding team \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263869,
      "meta": {},
      "text": "There are many reasons why change happens in software development. One of the main reasons is the growing number of software engineers around the world. Different people approach software projects differently. So throughout the years, many new ways of organizing and managing software projects came up. \nBecause there are more people than ever using the software, the pressure for companies is high to never stop delivering new content. If they rest for too long, customers may check out the competition. This motivates teams to work even harder on new releases.\nA great example of that would be Microsoft with their Office subscription. Years ago you could buy a version of Microsoft Office which didn't get any updates for a few years. Competitors started delivering more and more features much faster so Microsoft had to adapt. Now, the whole software package gets constant updates with new features. \n\n\nBut the change in software development can happen in a lot of different places:\n\n- Requirement changes can occur when the customer suddenly wants to go in a different direction with his software. Now the team needs to fulfill different requirements to make the customer happy with their work.\n\n- Due to the constant development of new programs, there are also a lot of technology changes. Maybe your team needs to update to a newer version of their IDE. Or change the way you keep the code up to date in the team. Especially for big teams, even small changes in the technology they use can be complicated to manage. \n\n- Especially in the last few years a lot of change happened in the way teams organize their projects. Now, many teams changed to agile methods like Scrum. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264416,
      "meta": {},
      "text": "In software development change happens because software is developed in large teams. This means that usually at any given point in time you will have new team members onboarding and old ones leaving. Different people have a different impact on the product and code base, hence you can speak of change here. This can be seen as an example for organizational change. Another example why change happens in software development is the product goal iteration. You start off with a goal and a set of product objectives, but as the ecosystem changes with time it might turn out that these goals are no longer valid and must be adapted to accomplish a better product market fit.\nAn example for product iteration would be Twitch, starting off as a simple live streaming company called JustinTV and then over time identifying that the gamers (the games industry) are more promising customers as they are highly interested in watching other people game. Therefore they adaplted the product accordingly and implemented the missing features. This can be seen as an example for requirements changing over time.\nHowever not only teams and the product change over time, but also the technology itself. An example for this would be the way we develop websites nowadays compared to the past. In the past one used to use tools like JQuery or PHP, but as Websites got more and more complex more suited technologies were created and deployed, such as React, Vue or Angular2 and NodeJS for Servers.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265174,
      "meta": {},
      "text": "Die Softwareentwicklung ändert sich durchgehend, da sie sich ständig an die neuen Gegebenheiten unserer Gesellschaft anpassen muss. Ein Beispiel ist dafür die Entstehung des Internets, wodurch sich ein komplett neuer Bereich der Softwareentwicklung ergeben hat, der sich auf die Entwicklung weltweit abrufbarer Programme konzentriert. Gründe für den Wandel in der Softwareentwicklung können dabei sehr verschieden sein und werden in die drei Bereiche: Wandel der Richtlinien, Wandel der Technologien und organisatorische Änderung unterteilt . Unter Wandel der Richtlinien versteht man Änderungen der gesetzlichen Lage, wie zum Beispiel Änderungen in Datenschutzbestimmungen, die Entwicklung sicherer Datentransporte erfordert und somit die Anforderungen an die Softwareentwickler verändert. Ein weiterer Aspekt ist der Wandel der Technologien, wodurch Softwareentwickler weitreichendere Möglichkeiten bekommen, allerdings auch beschränkt werden können. Als Beispiel für diese Veränderung kann die Entwicklung der Quantencomputer herangezogen werden, die den Entwicklern neue Möglichkeiten für schnelle Algorithmen geben, aber auch neue Verfahren zur Verschlüsselung von Kreditkarten erfordern. Als letztes gibt es auch organisatorisch Veränderungen, womit interne und externe Einflüsse, wie Wettbewerb oder Vorfälle innerhalb eines Unternehmens, die die Arbeit eines Softwareentwickler beeinflussen, gemeint ist. Ein Beispiel sind die immer schneller werdenden Laptops, die besonders durch die starke Konkurrenz zwischen AMD und Intel getrieben wurde und die Softwareentwicklung langfristig verändert hat. Diese ganzen Aspekte führen dazu, dass sich Softwareentwickler dauernd an neue Gegebenheiten anpassen müssen.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1261693,
      "meta": {},
      "text": "Software is commonly build to solve an existing problem at some time with the currently available technology like programming languages, frameworks or libraries. When time moves on, new problems arise and the existing software might has to be expanded to solve these new problems. This might be necessary to keep competitive on the market, to implement new laws or to keep the systems secure. Furthermore, the technology, e.g. frameworks, available on the market might change as well and get faster, more reliable and better maintainable. So it might be worth to transition parts of the old system to new these new technology. And lastly the company grows and changes as well where new teams form and responsibilities change and thus the organization of the development changes as well.\n\nAn example might be a small company where a single developer wrote the entire login system of a website with minimal features in PHP. Now the time moved on, the company got very successfully and hired a bunch of new developers. To keep up with other web companies, they want to expand their login system to allow additional features like two-factor authentication and allow social providers like login with Google. Additionally, the old PHP application is very slow and resource-heavy and all the new developers have a good knowledge of GO, so they decide to build parts of the new features in GO and transition some old features as well. But because they are an entire team of developers now, they need to use an agile methodology like Scrum to manage their process. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262289,
      "meta": {},
      "text": "Change in software development happens because there are new scientific and practical insights into improving the process behind the development of a project. in late 1990 it was believed that software development should be based on a mature plan before implementation, which made processing changes very difficult. Over time it was perceived that in a fast changing environment (which the IT sector certainly is) it is easier to switch from a linear development into a dynamic, incremental process. This change made it much easier to adapt to change in requirements, team or technology. Also the way teams work together on software projects and how they structure their communication changed with the new models (eg Scrum). \nRequirements Change: Change in the needs of the client (usually) therefore adaptation or addition of requirements. Handled in linear development via change requests often having consequences on budget and deadlines. In agile development handled through new Backlog-items which can be implemented in the next sprint.\nTechnology-change: New emerging technology shall be implemented in the project (which might already be in development). Therefore a change in constrains and handled in different models similar to a requirements change.\nOrganisational change: usually  not a good idea to have developers joining half way through the project, because they have to be introduced and onboarded. Allthough sometimes necessary due to personal changes. Organisational change can also happen if investors change or environment (company) in which the project is developed. Handling is easier in agile development than in linear development.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263732,
      "meta": {},
      "text": "Changes in software development can happen because of many reasons\n- there can be new regulations or laws by governments\n- new market competitors (with new ideas) can start changes\n- new innovations or technologies are often reason for changes\n\n\nit is hard to separate these three because they can depend on each other\n\nrequirements changes - \n   describe the changes of what the people want to be developed \n   for example if they want something to be developed on a different kind of system \n   this can also be triggered by other areas of changes\n\ntechnology changes -\n   Technology changes all the time, and it can affect every part of life, it also happens in software \n   development. Like Artificial intelligence will probably change the way we live in the future. Also the use of \n   cloud systems for saving and storing data changes the way companies work nowadays.\n\norganizational changes -\n   are changes within the company, that have an important role for the company \n   for example changes in terms of  production, different suppliers, different ways of finishing products and \n   submit it to the user/customer, or changes in the value creation of a firm\n   ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263975,
      "meta": {},
      "text": "Change happens everywhere all the time. This might be due to people changing their mind about what they want so the software product has to be developed differently, due to change in the circumstance in which a piece of software has to act or maybe also someone as has done a mistake or not thought of something that has now to be implemented afterwards.\n\nA recent example of change in software development is for instance the \"Corona-Warn-App\". This app was first developed when we did not even had much information about covid itself. We could only guess certain parameters like the typical incubation time or the infectiousness. These would for example influence at what distance the app would show a high-risk warning or whom the app should warn at all. With new gaining information and new variants coming along all these parameters changed.\n\nThis would be an example of requirements changing such as a Calendar app that now not only has a field for location but had to adapt to covid and now also shows a field for a meeting url.\n\nApart from requirement changes there are also technology changes and organizational changes.\nA technology change can for example be an updated programming language that requires adaptation or the new Apple M1 chip you want to support.\n\nA lot of organizational change happened during covid lockdown when all work must have been done from home, certain standup meetings could not longe be held easily, and working hours varied a lot.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264452,
      "meta": {},
      "text": "Change in software development  happens because different factors and requirements evolve, change and maybe even get left out, during the project. This can happen in different areas and for different reasons. For example the development of a covid vaccination app had to change because instead of 2 doses, people now got 3. Therefore they had to adapt the app to make it possible to show 3 codes instead of 2. \n\nRequirement changes happen because the customer has additional needs. In order to address those needs, you have to change the parameters and product of the project. For example he notices that the software is too slow and resource demanding and now you have to make it more efficient.  \n\nTechonolgy change happens if the underlying technology evolves or isn't supported anymore. This is something that doesn't originate from the customer but from the technological environment you are working in. For example if some library gets updated, one might have to use new methods or functions. It could also happen that the programming language you're used to isn't fit for the project so you have to learn something new.\n\nOrganizational changes can occur because the company or team gets restructered or differs from the original layout.  For example if you work in a company and they decide to hire additional staff, you will have to redesign the teams and change the work distribution because additional manpower is available .",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264874,
      "meta": {},
      "text": "(*)Why changes happens in Software development: \nSoftware development is always in changing responding to the fast market changes , user requirements, and the advances in Hardware and software. For instance, big software companies are continuously updating their services that are offered online instead of shipping one major version every couple of years. \n(1)Requirements changes: \nUser requirements change and customer needs affect the flow of software development. For example the needs for a secure way to execute contracts is pushing blockchain nowadays to the next level. Inventing a new trends in software development branches such as cloud Computing. \n(2) Technology changes: \nTechnological modern innovations drive remarkable changes in software development. In particular the invent of quantum computers demands a cooperation with an entire quantum software  stack , ranging from operating systems to compilers, programming languages.. all in the interest of building a quantum software application. However effective quantum software application cannot be developed with classical software engineering methods, Thus we need to build novel quantum software development methodologies, which then will affect the software development branches.\n(3)Organizational changes: \nDealing with requirement changes in waterfall model is inefficient and in some cases impossible . Here when Agile development come to place. With implementing new organizational iterative and incremental  process known Scrum, which made teams operate in more efficient way. An Example for that is the fact that traditional teamwork nowadays barely exists in big tech companies in comparison to scrum teamwork.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266159,
      "meta": {},
      "text": "Es gibt einige Gründe dafür, dass es ständig Veränderungen in der Softwareentwicklung gibt. Einige sind Personenbezogen und bei den anderen hat die Technologie ihr Zeichen hinterlassen, wobei es auch Veränderungen wegen Problemen während der Interaktion zwischen den Menschen und der neuen Technologie gab.  So ein Problem ist das \"das Jahr 2000\" Problem, wobei die Programmierer die Jahreszahlen zweistellig gespeichert hatten was zu riesiegem Problem fuhr - Computer konnten das Jahr 2000 und 1900 nicht unterscheiden. Das \"Nokia Beispiel\", wobei sich Nokia entschied, nicht die neuen Smartphones erstellen zu lassen, sondern ist bei der alten Technologie von Tastenhandies geblieben und somit für Jahre den 1.Platz aufm Markt verloren. \n\nPersonenbezogene Anforderungen gehören zu den requirement changes. Dabei kann es sein, dass die Käufer mit den Jahren anschpruchsvollere Anfragen haben, wobei sie auch wollen, dass dabei die neueste Technologie verwendet wird. Es kann aber auch sein, dass ein Kunde einfach seine Meinung ändert und es führt zu den \"requirement changes\".\n\nZu den technologischen Entwicklungen gehört allgemein die Entwicklung von den neuen Technologien, zB: Betriebssysteme oder künstliche Intelligenz. Dabei muss die Software sich für die neue Produkte anpassen. Im Endeffekt auch die Veränderungen der Hardware führen zu den Veränderungen in Software (aber nicht dringend!)\n\nOrganisationbezogene Veränderungen betreffen die Veränderungen innerhalb von einem bestimmten Team, was für einige Aufgaben zuständig war (meistens passiert innerhalb eines Unternehmens). Dazu gehören die Änderungen von der Leitung oder auch innerhalb des Projektteams.\n\nAnforderungen können sich allgemein verändern, was natürlich Auswirkungen auf das Endprodukt hat\n\n\n\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266440,
      "meta": {},
      "text": "I think that the most important reason for changes in software development is the development in the whole technology world. Technologies became the part of our lives and every person seems to be acquainted with computers, smartphones, internet etc. And that’s why technologies is one of the most profitable sphere. For example we can compare websites development. Today every website uses cookies to show you the relevant advertising. In Germany you have to confirm cookies every time you visit the new website. Targeting became one of the most important part of advertising. ",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266492,
      "meta": {},
      "text": "Change in software development means, that the request for the project have changed.\nThis changes can have many reasons like new ressources (money) or changed requirements and so on.\nVery often there is just progress in research, so that it's possible or necessarly to improve the project.\nFor example Google changed their searching algorithm over the past years many times and nowadays they are using a completly different alfgorithm than twenty years ago.\nThey did so because they got these better algorithms and the user demand for faster searching results.\n\nRequirements changes are changes, which arise from changing request on the project or the product.\nAs an example the covid-19 warning app. In the begining it was developed to follow up the contacts of every person. Over the months the pandemy changed and it got irrelevant to follow these contacts, but then it was important to proofe the vaccination status. The application got a new requirement: it should proofe these qr-codes. \n\nTechnology changes can understand best with the example of an apple iphone. Apple doesn't develop every year a completly different software for the new iphone. They just copy from last year with the exception of the technical changes the new Iphone comes with. It mybe got a new camera, new sensors and so on. Apple needs to integrate these technological progresses into their software.\n\nOrganizational changes are changes in the company itself. This can happen, if a company for example got a new budget for example becaus of going on the stock exchange. As an result many employees could get fired or new one get employed. This leads to a new architecture of company structure. Another reason could be a new executive director.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261255,
      "meta": {},
      "text": "Change in software development can happen, when a customer gets an idea, and the developer has the software necessary to achieve this idea. As a software developer we have to satisfy what our customer needs, or solve the problem that our customers have. We can see this through the making of an AI. Someone in the past probably thinks, what if we can make a machine, that can think independently and act according to the user's wishes. The software requirements for this machine is available, and we can see this implemented in our daily lives. \n\nRequirement changes are changes that happen based on the user's wishes. If a user gives the firm a new idea, development will happen and there will be changes.\n\nTechnology changes are changes that can happen, when other developers in the same field of work develops a new method or make an old better work better. The real world applications of this are probably cloud computing methods and neuralinks.\n\nOrganisational changes are changes that happen inside the company of the software development firm. This change in leadership or in teams will result in a different way of approaching one's problems, which transforms into a change. Let's just say you have 2 different math teachers, and each teacher has their own unique way to solve a problem, but with the same result. This can lead to something positive, having more than one way to solve the problem, assessing positive and negative sides of things.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261484,
      "meta": {},
      "text": "Änderungen treten in der Softwareentwicklung ständig auf, da das Feld der Informatik einem stetigen Wandel unterliegt wie kaum ein anderes. Es kann zum Beispiel innerhalb nur kurzer Zeit neue Generationen von Hardware geben die neue Features unterstützen oder einfach eine deutlich gesteigerte Performanz bieten und somit die Karten für die Entwicklung einer bestimmten Software neu mischen können.\n\nDie Arten der möglichen Veränderungen die zu beachten sind lassen sich grob in 3 wichtige Teilbereiche zusammenfassen. \nÄnderungen der Anforderungen: \nDie Entwicklung einer Software beginnt meist mit einer Zielsetzung. Die Software soll bestimmte Funktionen anbieten bzw. ermöglichen. Während der bei komplexeren Programmen oft lang andauernden Entwicklungszeit kann es jedoch durch z.B. die Änderung von Äußeren Faktoren zu neuen Anforderungen kommen. So könnte zum Beispiel die Fahrspurerkennungssoftware eines Autos plötzlich neue Funktionen benötigen, da eine neue Art der Fahrbahnmarkierung eingeführt wurde. \n\nTechnologische Änderungen: \nDie zur Verfügung stehende Technologie entwickelt sich ständig weiter. Wird zum Beispiel mit einer neuen Generation von Prozessoren ein neuer Befehlssatz eingeführt, so könnte dies eine bisherige Lösung eines Problems in einer Software auf effizientere Art ermöglichen und sollte somit berücksichtigt werden um optimale Ergebnisse zu erzielen. Ebenso könnten neue Programmiersprachen oder Konzepte geeigneter sein als bisherige Ansätze.\n\nOrganisatorische Änderungen: \nEs kann innerhalb eines Unternehmens zu organisatorischen Änderungen kommen welche die Art der Entwicklung beeinflussen und an dies sich daher angepasst werden muss. Ebenso kann es externe Änderungen zum Beispiel durch neue Gesetze geben welche bestimmte Ansätze bei der Problemlösung attraktiver oder ungünstiger machen. Eine Neuorganisation der Abteilungen eines Unternehmens würde zum Beispiel zwangsläufig eine Änderung der Arbeitsabläufe bei der Entwicklung erzwingen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1261967,
      "meta": {},
      "text": "Da die Entwicklung von großen Softwaresystemen nicht in jedes Detail geplant werden können wird es zu irgendwann mal zu einem Zeitpunkt kommen an dem man etwas nicht voraus geplant hat. Deswegen ist es nötigt auf solche unerwarteten Hindernisse reagieren zu können. Nicht nur kann es passieren, dass man in der Planungsphase an etwas nicht gedacht hat, sondern es kann auch vorkommen, dass z.B. der Kunde ein neues Feature oder Funktion im System benötigt von dem am Anfang nie die Rede war. So wir am Anfang mit einem Kunden ausgemacht, dass er eine Software benötigt, welche für die Arbeitszeiten der Mitarbeiter protokolieren soll. Nach der Planung kommt der Kunde mit einer zusätzlichen Idee an und möchte, dass die Lohnabrechnung auch von der Software - anhand der gesammelten Daten - durchführt.\n\nRequirements Changes - passiert, wenn sich Anforderungen an das Projekt ändert. Der Grund dafür können diverse sein. Zum Beispiel,\n- wenn der Kunde ein neues Feature benötigt\n- die Kommunikation mit dem Kunden schlecht war und man erst später versteht was er wirklich braucht\n- wenn sich die Technologie ändert oder die Organisation\nTechnology Changes - passiert, wenn es neue (bessere) Technologien gibt, welche die Qualität oder Kosten des Projektes verbessern. Zum Beispiel, es gibt ein Framework welche für die Entwicklung verwendet werden kann und somit die Entwicklungszeit deutlich verkürzt.\nOrganizational Changes - wenn sie die Organisation dazu entscheidet anders Vorzugehen. Zum Beispiel, wenn man sich zum Wechsel zur Agilen Software Entwicklung entscheidet. Welches sich potentiell positiv auf die Qualität und Kosten der Projekte auswirken kann.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262033,
      "meta": {},
      "text": "We live in a world of change and progress. Each day we set new requirements for our software systems.  Through new technology and competition, companies challenge each other to produce faster, more reliable, and more efficient products. This leads to innovation, creativity, and the reconsideration of established systems. In the past years, companies have changed their approach to developing software. Again and again, new theories are set up around, how one can make software development more efficient faster, and more productive. No system is complete and so it is with software development. There are new approaches and ways of thinking or new environmental influences like a pandemic. An example of these changes in the real world in my eyes is remote working. When I started to work in the middle of the pandemic in the IT department of one of the big German private TV stations the corporate IT was in transition of making their software development more stress-free for their developers by rethinking organization tools and moving them into the web. Tools such as those from the software manufacturer Atlassian ensured that the all-important organizational relevant tools were available from home. This is why our Kanban board changed from a whiteboard to a digital board.  \n\nRequirement changes mean that over time the requirements of the project owner for the developers have changed. It has become more important for companies to produce software quickly than to work on an extensive product for a long time. They accept bugs in order to be more competitive.\n\nTechnology changes mean that through improvement not only software but also hardware evolves and new possibilities are offered to the developers. An example of this is the quantum computer, which will usher a new era of computing.\n\nOrganizational changes are brought about by learning from the past how a team works best together, so new systems are evolving to make software development more efficient. One example is to work according to scrum.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262329,
      "meta": {},
      "text": "Software changes when people have other demands for the device or algorithm. A good example would be mobile phones. Nokia lead the market with mobile phones until people recognized that having a touch display would be nice. Smart phones flooded the market thus the software changed together with the hardware and Nokia had to make a change and adept the model of a smart phone. Also improvements in terms of new algorithms which are better in every single way, change softwares. \n\nRequirement changes: Different problems need or prefer different requirements to be solved. In some cases software needs to be fast so its speed is prioritized and storage management decreases. In other cases storage usage has to be optimized which leads for the software to be slower. Also the mentality of people changes. People are becoming more and more aware in terms of environment, leading to a lot of power saving softwares.\n\nTechnology changes:  The improvement of hardware changes a lot. For instance inventing bigger storage units decreases the priority of low storage usage. Speed can be prioritized since there is simply enough storage!\n\nOrganizational changes: If your software needs to be maintained or extended a lot, making it easier to read is important. It will be easier to apply the changes. Making it easy to read also improves workability in teams. More people can work on one code. On the other hand if the software will never be changed anyway you can focus on optimizing the code and probably making it harder to read. A software for color sorting probably won't need changes in the future, so people try to make it as fast as possible by optimizing the code. If its still easy to read afterwards is very unlikely.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262372,
      "meta": {},
      "text": "Why does change happen iin software development?\n\nThere are multiple reasons as to why change happens in software development. There can either be external changes such as innovation, requirement or target group changes. On the other hand there could also be member changes that lead to changes in the roadmap. \n\nOne example is when the customer has not planned out what they want exactly before software development starts and then suddenly add requirements for the current sprint which means you can completely throw your sprint planning over board and redo it. This is also known as requirement changes.\n\nTechnology changes such as the 5G network will allow software developer to even be able to work on the go, as the new network not only enhances connectivity speed but also allows more devices connected in the same tower range with high performance.\n\nOrganizational changes include member changes. When one member of a team quits or gets replaced that causes changes in the roadmap. Either the other member of the development team need to pick up the slack which might not always be possible as work is usually distributed according to workload. And integrating a new member into a team takes time until this member is accepted and can work hand in hand with the rest of the team.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262386,
      "meta": {},
      "text": "Es verändert sich ständig viel im Bereich Software Development, da immer wieder neue Technologien erforscht werden und auch die Ansprüche der Kunden sich stetig verändern. Ein Beispiel dafür ist die Echtzeit Raytracing Technologie, die ursprünglich von NVIDIA entwickelt wurde. Vor dieser Technologie konnte eine solch hochauflösende Lichtberechnung nur in Filmen verwendet werden, da man hier viel Zeit hat, die Szenen davor zu rendern. Bei Spielen muss dies aber in Echtzeit geschehen, um ein flüssiges Bild anzuzeigen. Diese Technologie musste dann in neuen Spielen integriert werden und wird mehr und mehr zu einem Standard in der Spieleindustriel.\n\nÄnderungen in Anforderungen entstehen beispielsweise auch dadurch, dass Sicherheit immer eine sehr wichtige Rolle spielt, und sich die Möglichkeiten, Sicherheitsmechanismen zu umgehen immer weiter verbessern. So müssen auch die Anforderungen an die Sicherheit einer Anwendung stetig steigen, damit die Sicherheit nicht irgendwann von den Möglichkeiten, diese zu hacken, überholt wird.\n\nEin Beispiel für technologische Änderungen ist auch, dass neue Handy Apps immer häufiger stark webbasiert sind. Viele Handyapps werden heutzutage nicht mehr nativ (also nur für ein bestimmtes Betriebssystem) entwickelt, sondern zentral entwickelt. Hierzu sind dann nur noch sehr kleine und einfache Apps nativ nötig, die die zentral entwickelten Webanwendungen ein wenig aufbereiten und für den Nutzer anzeigen.\n\nAuch organisatorisch gibt es immer wieder Änderungen beim Software Development, da bei einem Team an Programmierern auch immer wieder Leute das Unternehmen verlassen, da sie ihren Job wechseln, oder auch neue Leute hinzukommen. Der Code muss somit möglichst verständlich formuliert sein, sodass sich auch Programmierer, die diesen Code nicht selbst entwickelt haben, ihn leicht verstehen können.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1262484,
      "meta": {},
      "text": "- Software products must constantly change in order to adapt to a changing environment, because ignoring the changes in software lead to failure, For example Nokia was  was the largest cell phone maker in the early 90th, and she ignored the new software technologie and the idea of touch screen phones, and she was left behind.\nAnd concerning the 3 type of changes:\n-Requirements changes: are changes that must be done in order to survive, like correcting faults and bugs.\n-Organizational changes: are changes that facilitate the work, like restructuring a code.\n-Technoloy changes:  improving existing technologies and developing new ones, like moving from keypad to touch screen.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262653,
      "meta": {},
      "text": "Change is what characterises space and time. It happens in every second across every inch of the entire universe. Whether it's the weather or simply how you get to university when there is a problem with the underground service and you decide to take your bike instead, all of it is change. Such changes can also be observed in software development, it can be as big as a whole organisational restructuring or just a minor change in the architecture necessary to fix an issue in the code. Changes in the requirements mean that the requirements, which a product aims to fulfil, change, which can be for multiple reasons. A company might decide that they need to be able to contact 5 million people through an email newsletter instead of just 1 million, such that the product needs to be adapted to allow for that many emails being sent. Or, a company decides that due to the increased risk of cyberattacks, they now only allow logins using multi-factor-authentication, therefore the login process needs to be adapted. Changes in how teams are organised are organisational changes, imagine, for example, a young company (Google) developing search algorithms together with maps which show where businesses are located. However, they reach a point where maps are used so often, that they can't fulfil the requirements anymore when trying to develop everything in one team. Instead, they split up the product, so that one separate team is responsible for each part. Lastly, there could also be changes in the abilities of technology which for example changes how a product is being used. Think about the introduction of the iPhone for example, using a touchscreen instead of a scroll-wheel meant huge  adaptions necessary to the operating system.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262926,
      "meta": {},
      "text": "1.why change happens in software development:\nbecause the requirements for software is changing due to change of the world and our understanding of the world changes.\n2.an example for change in the real world:\neconomy develops, number of people in a city changes, etc\n3.requirements changes example: \nfor some computation problem there might be a high demand for strorage, while after a discoveray of better algo the demand might be lower.\n4.technology changes example:\nsince network speed and bandwidth is largely improved, people tend to compute on cloud while before they tend to compute locally.\n5. organizational changes example:\nsome departments are merged so the requirement of those departments has to be adjusted\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263004,
      "meta": {},
      "text": "Software development is complex and chaotic in nature., making the whole process unpredictable. That's why change is inevitable. Companies need to adapt to the market needs constantly, making the development of a product subject to change to conform to those ever-changing needs.\n\nFor example, Telsa's success in making electrical cars brought change to all major car manufacturers. If eclectic cars are the future, not making the switch can mean the fall of those manufacturers.\n\nLooking closely, change can happen in the requirements as the demands of the clients/market change. Even changes in the law(data privacy), for example, can bring a drastic change to how a company collects data and the way they store it. Facebook, Google, Twitter, and many major companies have shifted the way they collect data and that's a huge requirement change in the way they develop their software.\n\nChanges in technologies are a big factor in the way software is being developed. New technologies keep popping up and ignoring them can be quite detrimental to companies.  For example, the emergence of smartphones opened a new world of mobile applications. This meant developing software for the web is no longer the only option and sometimes even not the best one.\n\nAs software engineering advances, new ways of organizing the workflow comes into shape. Strategies such as scrum reflect a new understanding of how software development can be done. Additionally, even remote work is becoming the norm in many companies. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263150,
      "meta": {},
      "text": "Change is very important for software development. For example, change happens in software development if there is a bug in the software that must be fixed or because of new regulations by the government. \n\nThere are different areas of change:\n\nRequirements changes:\nRequirements changes are changes like new laws or regulations by the government or a change with stakeholders.\nAnother point could be if the customers need changes or there are changes because of market demands.\n\nTechnology changes:\nTechnology changes very fast. So in software development you have always to look for new technologies and use them if possible to keep up with other companies. One big \"new\" technology that came up in the last years was artificial intelligence. Almost every big tech company uses artificial intelligence in their software now.\n\nOrganizational changes:\nOrganizational change refers to the actions in which a company changes a major component of its organization, for example the underlying technologies or infrastructure it uses to operate, or some of its internal processes.\n\nAll these different kind of changes lead to that software developer have to deal with change while the whole development process.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263410,
      "meta": {},
      "text": "Change in software development is a reaction to change in the environment it is designed for. An example for change in the real world could be the automotive market, as electric mobility gains importance, the producers have to addapt to this change and therefore their software developers as well.\n\n\nChanges in requirement:\nIf the company that hired the software development team, wants a additional requirement, that wasn't specified in the beginning of the project the software development team has to addapt and takle this reuqired change. An example could be that company wants two factor authenticification, beacuse it had a security leak, after the software development team already started with the project.\n\nChange in technology:\nIf there is a new technology, that is so important that the current system has to be addapted to it, in order to stay relevant. An example could be Motorola, that didn't adapt to change in technology, namly smartphones and so they lost relevance in the market\n\nChange in organization: \nIf there is a change in organization, for example the comapny you were doing the software design for, gets bought out by another company, you have to organize with their software development team in order not make mistakes and keep the quality high\n ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263578,
      "meta": {},
      "text": "Technology is always being updated and the external environment keeps changing, which makes it impossible to arrange everything correctly and clearly when a project get started. That’s why change happens in software development. For example, if one of our competitors has a better idea to develop a certain kind of feature more efficiently, our team would face challenge and have to improve our efficiency too. \nThere are three main kinds of changes, requirements change, technology change and organizational change. Requirements change when new demands are made by the customer or when developers improve their understanding of the application domain. For example, our customer wanted an app for music at the requirement elicitation, but now he/she wants to add images and descriptions to the music, so the team has to figure out a way to develop new functions. Changes also occur when technology is updated and often lead to new exploitable features. The introduction of machinery, for example, made it possible to standardize mass production in modern factories. The organizational change happens, when the external environments and conditions change. For example, at the level of the company, a core employee of the software developing team resigned and the company needs to find someone who can replace him/her; at the level of society, the government introduced new regulations so that the company should make new rules to adapt itself to them. \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263985,
      "meta": {},
      "text": "As technology is advancing at a rapid pace, change is an inevitability in software development. Because of this a team of developers needs to be flexible and adaptive in their organisation. One aspect of this are the requirements of a given project itself. Through constant communication with a customer the specific goals for a project may shift overtime. For example, the customer may request additional features to be added after testing out a prototype. Another hurdle could present itself in the form of technology changes themselves. Being unable to respond to emerging technologies swiftly bears the risk of being outcompeted by competitors, such as when online streaming services drove off movie retailers like Blockbuster. Change can also be driven by organzational structures themselves, as external factors may force management to adjust accordingly. A company might decide to increase or decrease the size of a team working on a project. In such a case the scope of the project as well as the roles of individual members needs to be reexamined.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264003,
      "meta": {},
      "text": "Change happens in software development, because unforeseen things can happen. If a team is developing software for combustion engine of a car, the project might have to be canceled because the government passes a law that forces everyone to switch to electrical engines. Change might also be necessary because of time and money constraints!\n\nThe requirements of a product may change, because of new market condition. e.g. because of corona the restaurant not only needs a \"regular\" website but also an webshop.\n\nThe technology might also change, because it is necessary to supersede it with a more novel one, in order to increase efficency and stay competetive. For example replacing apache with nginx to improve response time or choosing a better programming language/tool etc.\n\nThe organisation might change, because one team member becomes ill and needs a substitute or drops out of the project entirely. Another reason could be that the scope of the project increased and this requires that more team members need to be allocated to certain tasks.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264684,
      "meta": {},
      "text": "Veränderung in der Software Entwicklung ist wohl kaum zu Verhindern, da diese vielen extern Faktoren ausgeliefert ist. Viele Teile der Software Entwicklung können nicht komplett geplant werden, wodurch immer wieder ungeplante Dinge eintreten. Jedoch sollte man diese Veränderungen als eine Chance sehen etwas besseres zu entwickeln.\nEine Anforderungveränderung kann dann eintreten, wenn der Kunde zum Beispiel einen Teil der Software testet und ihm aber dabei auffällt, dass ein entschiedenes Merkmal noch ergänzt werden soll. Ein agile arbeitendes team sollte diese Veränderung als Aufgabe in den nächsten sprint mit aufnehmen.\nTechnologieveränderungen treten heutzutage sehr oft auf, da es in kurzer Zeit immer wieder neue und bessere Technologie Produkte gibt. Ein Beispiel dafür wäre die Veränderung von \"Tastenhandys\" zu Smartphones. Wobei die Firmen sich in kurzer Zeit dem Markt anpassen und die neue Technologie in die Herstellung aufnehmen mussten um auf dem Markt weiterhin existieren zu können.\nEine organisatorische Veränderung tritt beispielsweise mit einer Umstrukturierung des Unternehmens, wobei die Software Entwicklung sich ebenfalls umstrukturieren und anpassen muss. Ein Beispiel dafür wäre die Corona Pandemie. Die Software Entwicklungs-Teams mussten sich in sofern anpassen, dass alle Teammitglieder von zuhause getrennt arbeiten und die Kommunikation untereinander und mit dem Kunden um einiges erschwert wurde.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264943,
      "meta": {},
      "text": "Software development projects today often have a high complexity and therefore often depend on many different external factors. As a result change in software development might happen because of a variety of reasons and is becoming more of a normality than an exception. A development project can take months or even years to be completed, if there even is a real \"completion\" or it will go on in perpetuity. During this time there will be changes in the environment that will influence the development in different amplitudes. This largely depends on the effect on the technical requirements of the finished product and also the changing demands of the customer. This changes can be aggregated in three different categories: requirements changes, technology changes, and organizational changes.\n\nTechnology change:\nFor instance a change in the technical environment could lead to technical incompatibilities within one program or at the intersection of different ones. An example for such a change can be found within the gamin industry: Due to delays in the development of a new game a new console version is going to be released before the game. The developers of the new game are now forced to adapt the game in an unforeseen way to the new technical environment to target a greater audience.\n\nRequirements change:\nChange can also happen on a smaller scale because of customer demands. While the project is already ongoing, the customer might think of additional features the final product should include and ask for the implementation. For instance a bank that wants to offer online-banking might later, during development, decide to include additional features, as trading stocks. This new requirement must be that included in the current development plan.\n\nOrganizational change:\nThis type of change often becomes a problem when single persons/groups are responsible for crutial parts of the development and are the only ones with the needed knowledge of the project. If for instance one of those decides to leave the team (e.g. leaves company) the implications can be severe.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266023,
      "meta": {},
      "text": "The development of software is a dynamic process and software developers have to deal with changes every day. Therefore a good development team must react to these changes accordingly. An example for an important change was when the German government passed a law to lower the Mehrwertsteuer (value added tax) and suddenly nearly every company had to make changes in their financial programs. This shows how important it is to react to different types of change:\n\nRequirement changes are changes in the requirement of the software, its purpose or the form it should have at the end of development. During development process there is an ongoing dialog between development team and customer (or product owner). To have success with their product the development team must react to the customer's wishes like new features, the ability to run the program on different devices, a different user interface, etc.\n\nTechnology changes are changes in the programming aspect of the project. The software the development team uses may itself undergo updates that change its function or allow new possibilities which a good team too has react too. furthermore there are new safety issues, hack attacks and dangerous bugs found every month which malevolent hackers could use to attack the program, the team develops, and safety measures must be implemented accordingly.\n\nOrganizational changes affect the development team itself. New members may be added to the team or old members could have to leave due to different reasons. The company, the team works for, too may undergo changes in its organization and structure, which may influence the process of development. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1261182,
      "meta": {},
      "text": "Changes in software development could be prompted due to external factors such as newer market conditions or internal factors such as failure in requirement identification.\n\n1. Requirement changes:\nIn the span of the development process, the clients might change their minds several times, thus requiring the modification of pre-existing requirements or additional requirements.\nExample: The client realises during the development of a mobile app that the UI needs to be designed in another way to stand out from new competitors on the market.\n\n2. Technology changes:\nDue to rapid tech trends, and especially when the duration of the development process is long, desired functionalities that were previously unattainable could then be implemented due to new tech.\nExample: A newer encryption protocol allows the developer to implement it and strengthen the system's security to the desired level.\n\n3. Organisational changes:\nWhen a team starts scaling up, organisational restructuring may be necessary to maintain productivity levels and facilitate effective communication between its members. \nExample: A development team of 5 people that has grown into a size of 50 in a year would probably not work very well with the previous team structure. Thus, it could be beneficial to restructure it by e.g. chunking them into smaller teams of 10 and delegating the appropriate tasks to the teams based on the client's needs.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261636,
      "meta": {},
      "text": "Software development is a process that runs over a period of time. During this period, the customer's requirements or the environment can change for a variety of reasons.\nFor example, the COVID-19 pandemic may have changed some requirements for certain software. Various software had to be able to withstand increased workloads due to the lockdown. This requires adjustments when developing software. Due to the constant development of technology, further possibilities automatically result in changes.\n\nRequirements changes arise, for example, as a result of changes in user requirements. It can happen that a customer only understands the possibilities during software development. This can then lead to requirements changes. The customer's requirements can also change as a result of external influences, such as the loss of subsidies.\n\nTechnological development also opens up new possibilities in software engineering. New possibilities can also change the techniques that are used. If a new technology would improve the software, you have to become familiar with this new technology in order to be able to use it.\n\nOrganizational change occurs, for example, when companies change an important component of their organization. Such a change can even occur when a person resigning from an important position (e.g. SCRUM Master) and other people have to take on new tasks. Changing the culture of a company also leads to organizational change.\n\nConsequently, many parameters influence the changes that occur during software development. Why it is important to be able to deal with changes in software development.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261751,
      "meta": {},
      "text": "Nowadays everybody is able to invent or realize a new idea in the software industry and competition is on a high. Thus naturally new updates and features get released daily. So if a company wants to keep up with the competition it has to realign its scope continuously.\nIn the summer of 2020, I worked for the Swiss CAD/Accounting Software Firm Borm. During my time there I was tasked to implement an interface between their solution and an online accounting site Hubspot. Their reasoning behind this move was that their competition implemented such a connection.\nAnother problem for them was that they used an old proprietary script that they invented themselves in the early 90s. Now they were planning to switch to Python, as it offers way more flexibility and collaboration. So they are adapting to new technologies as they change.\nOrganizational changes occur when a leading position is changed or even if a team member is replaced. E.g. this can happen if there is suddenly a need for more programmers to solve the problem in time or the budget has been shortened and the project has to be finished with fewer resources.\nA requirement change could be that the project owner whats that the code is also able to operate on ARM and not only on X86 as beforehand.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262793,
      "meta": {},
      "text": "The adaptability and ease of using the system lead to higher requirements, and so changes occur after the software development process. If changes are not managed properly, affect the overall performance.\nFor example, we witnessed massive growth in the software-industry in the last decade due to digitization phase. More people have gained access to internet and they were realizing the need for computers hence, computers entered almost every household.\n\nLet's talk about the ''changes''. It mostly takes place either to innovate or to improve things.\nTechnological changes are the increased effect of a process that leads to more output without adding more input. An example to support this point is the telephone, it has been changed many times in the past years and become more smart, fast, and dependable through invention, innovation, and diffusion.\n\nRequirements changes depend on what a user needs or how they will interact with products. They are always evolving or shifting. New technologies and evolution also affect the needs and big software projects.\nfor eg. an indian app paytm was used only for payment purposes but as the requirements grew they started online banking, e-commerce, food delivery etc.\n\nOrganizational change occurs when a company changes its strategies, methodology,  etc. to reconstruct the base of organization. It also means the change of the roles of people. For eg. Microsoft was struggling years back with internal matters until major restructuring took place and focused more on personal computing, building intelligent platforms.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263380,
      "meta": {},
      "text": "there is in software development because Software is mostly created to model or augment the real world and the real world tends to not be a static construct. Therefore Software and with that software Development constantly needs to adapt to new variables. For example, the rise of the internet changed how software was developed. Before the internet, there would be copies of Software on a floppy disk and that was it. Today software is continuously updated and maintained.\nRequirement changes are when you change the \"purpose\" of the software. While developing a game you could change your focus from making a good physics engine to making a good rendering algorithm.\nTechnology changes are new features or developments. For example, when Apple changed to its own CPU architecture it had to adapt its Operating System. \nOrganizational changes mean that the software development process changes. for example, if there is a new head of development at a company.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263449,
      "meta": {},
      "text": "Why change happens?\nSo wie fast alles im Leben ist nichts 100% vorhersehbar und so bleibt auch Software als Teil unserer Welt von äußeren Einflüssen wie Kultur, Marktlage, Krisen und Weiterem nicht verschont. Ein sehr präsentes Beispiel hierfür, wie ich finde, ist der Ukraine Krieg. Zahlreiche Webseiten haben seither Schnittstellen für Spenden geschaffen oder Ihre Unterstützung zur Ukraine durch Designänderungen an ihrem Softwareprodukt zum Ausdruck gebracht, welche so sicherlich vorher nicht geplant waren. Die Prioritäten lagen schnell auf zuvor nicht denkbaren Aspekten. Ein weiteres präsentes Beispiel: Das Entsperren von faceID mit Maske. Ohne eine weltweite Pandemie wäre Apple wohl kaum auch nur das geringste Risiko eingegangen faceID leicht unsicherer zu machen im Gegenzug für etwas Komfort. Neben solchen Extrembeispielen unterzieht sich Software allerdings natürlich auch alltäglichen Änderungen, wie besonders gewünschten Funktionen die es gilt neu einzuführen und zu implementieren, neue Wünsche vom Kunden oder das Entdecken von Problemen im Umsetzungsprozess und nötigen Anpassungen zur effizienten Problemlösung.\n\nRequirements changes\nbezeichnen Änderungen an den Requirements also den Zielen/Prioritäten bei der Problemlösung. Diese können sich wie erwähnt im Laufe des Entwicklungsprozess aufzeigen oder durch z.B. den Kunden im späteren Verlauf expliziter gewünscht/verändert werden. Nicht ohne Grund gibt es bei Git das System von Branches mit denen es möglich ist verschiedene Features auszuprobieren und flexibel zu werden bevor man diese ins Endprodukt aufnimmt. Prioritäten wechseln ständig. Ein Beispiel für eine solche Änderung an Requirements und dem Hauptaugenmerk stellt in meinen Augen neben dem bereits oben genannten Beispiel für faceID mit Maske die Einführung von Gruppenmeetings in FaceTime dar. Zuvor war Facetime als private Plattform für Videotelefonate bekannt und auch gedacht bevor es sich nun in Folge der Pandemie auch mehr und mehr zu einem Produktivitätstool für Teams entwickelt hat und dem Vernetzen ganzer Gruppen gerecht wird, auch solchen, wo der Großteil nur einen Webbrowser statt ein Apple Gerät besitzt.\n\nTechnology changes\nbezeichnen die technologischen Veränderungen und die damit einhergehenden Anpassungen an Software. Kaum jemand würde auf heutiger Hardware und bei vorhandener Konkurrenz noch Microsoft Word verwenden wenn es noch auf dem Stand von 1983 stehen geblieben wäre. Hardware und Möglichkeiten im Technologiesektor entwickeln sich ständig und Software muss mitziehen, gerade in dem großen Wettbewerb auf dem Mark in dem Softwareprodukte stehen. Es gilt ständige Innovation zu liefern.\n\nOrganizational changes\nbezeichnen erhebliche Änderungen einer Firma in Ihrer Strategie zur Firmenleitung und ihren internen Prozessen. Dies kann die Zusammenstellung und Organisation von Software- und Projektteams betreffen, die Firmenhierarchie, die Festlegung von Deadlines als auch das setzen von Prioritäten auf gewisse Projekte oder generelle Änderungen am Arbeitsumfeld wie der Firmenkultur mit sich ziehen. Ein Beispiel wäre der Fall, dass ein Mitglied für einen längeren Zeitraum ausfällt und Ersatz gefunden werden muss oder die Aufgaben im Team neu verteilt werden müssen.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1263683,
      "meta": {},
      "text": "Change happens in Software Engineering as SE poses to be an empirical task. You simply cannot fully layout and plan a design and implementation of such a system in one run, because of its complexity. So you start with a plan, knowing that at some point it will fail, starting over and over from the beginning of the agile development process in an iterative manner until the software is ready for shipping. \nWhile iterating, different changes to certain areas of the project might happen and will therefore change the further development of the given project. \nDuring a project, the customer might also redefine their requirements for a project, which then might replace old features with newer ones. Trivially, this will trigger a redesign. This would be classified as a requirement change.\nFurthermore, in a sprint, you might realize that a framework, previously thought to perfectly fit your task, does not have all the features or has an overhead that is too high for your use case. This poses a technology change, which will change this one sub-system, as well as other sub-systems communicating with it. \nAdditionally, organizational changes can and will surely happen in a large-scoped and big SE project. In a company, employees always leave and join, so there cannot be a guarantee that everyone will stay during the whole time of development. If someone leaves the company and no replacement can be found, this would affect the development and realization of submodules and solution domain objects which will change how much work can be done in a sprint as defined by the Scrum master. \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263812,
      "meta": {},
      "text": "Ein Aspekt, der zu Veränderungen in der Softwareentwicklung führt, sind neue Gesetze an die sich technische Unternehmen anpassen müssen. Dafür gibt es zahlreiche Beispiele, wie \"Cookies Freigabe\", Gesetze gegen Monopolisierung, Umgang mit User-Daten usw. Das alles schränkt die Unternehmen stark ein und führt zu Veränderungen in der Softwareentwicklung.\n\nEin weiterer Grund für Veränderungen in der Softwareentwicklung sind die Anforderungsänderung. So zum Beispiel haben viele Menschen ein Bedürfnis nach mehr Datensicherheit. Die Entwickler müssen deshalb neue Lösungen suchen, was zu Veränderungen in der Industrie führt.\n\nErfindungen von neuen Technologien oder Veränderungen in den bereits bestehenden, führt ebenso zu Softwareentwicklung - die Unternehmen müssen dem Trend mitkommen, um auf dem Markt weiterhin Konkurrenzfähig zu bleiben. So hat zum Beispiel die Umsetzung und Erfindung von kabellosen Kopfhörern - viele Unternehmen dazu gezwungen das auch umzusetzen.\n\nZu aller Letzt gibt es auch organisatorische Veränderungen. Diese sind sehr wichtig um den Umsatz zu steigen, die Kundenbeziehungen maximal auszuschöpfen und mehr Ziele zu erreichen. Ein Beispiel für die organisatorische Veränderung ist die Digitalisierung!\n\n\n\n",
      "score": 41.7,
      "language": "GERMAN"
    },
    {
      "id": 1264239,
      "meta": {},
      "text": "There can be various reasons for change in software development, but all of them can be seen as a change in the surrounding conditions of the software development, i.d. prior assumptions have been proven wrong or unforeseen problems require adaptation. An example for this general explanation of change would be the following: Initially a software developing team thought they can satisfy the requirements with algorithm x but because of a deviation between the predicted and actual runtime they have to change their existing implementation and use algorithm y instead. \n\nThis general perception of change can be split up in different areas of change with examples for areas in the following:\n1. requirements change:\nRequirements change describes the sort of changes that are induced by the ordering party. For example company x says they want the theme of an app that is developed at the moment to be yellow instead of red, which was initially planned to be the theme color of the app.\n\n2. technology changes\nTechnology changes arise when a new technology is brought to the market, that is different than the currently used one and could be beneficial to the project a development team is working on. An example for that would be that a software development team has been responsible for the creation and maintenance of the IT infrastructure of a company and a new kind of database managing system is getting popular. The development team now have to decide whether it is worthwhile to adapt this new technology or stick to the one they are familiar with.\n\n3. organizational changes\nOrganizational changes happen if the structure within the software development team changes. An examples of that being a developer that gets pregnant and will be on maternity leave or a member of team is moving to a different city.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264549,
      "meta": {},
      "text": "There are several reasons why change is happening in software development. The first one is for instance, that a process is poorly defined or ignores essential requirements. Another on is that it must always adapt ot a changing environment. That means for instance that based on new external regulations or new internal requirements the product must be adapted. An example for instance would be that for Self-driving cars a new requirement was introduced from the government where the automotive suppliers have to adapt to. \n\nRequirements changes: It can occur due to changes in user requirements, increased understanding of the stakeholders' needs, customer organizational re-structure, or availability of new technologies. An example for that is for instance that a competitive company introduced a new feature in their smartphone, which the company also needs to implement. \n\nTechnology changes: In the past we have found that technology that is famous today is completetly outdated tomorrow. An example is for instance in Web3/ Blockchain development the advance from proof-of-work to proof-of-stake (More efficient) \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265078,
      "meta": {},
      "text": "Changes in software development come as you respond to the ever-changing IT environment, to emergence of new restrictions and laws, appearance of new market competitors with drastically different project ideas etc. \n\nEx1: Kodak went bankrupt and Fujifilm flourished. The cause: management refused to accept the inevitable, despite being aware of the approach of the digital age. Unlike Fujifilm, which recognised the doom of film and explored new markets, Kodak misjudged the analysis and remained in the shrinking photography industry.\n\nNew requirements, technology and organisational changes may appear suddenly and should be competently managed to avoid failure. \nChanges in requirements may occur because of the new business environment or political/government limitations; a new project idea of the client that at this moment in time requires a different solution etc.  \n\nEx2: A legislative requirement, namely the ban on the use of nuclear energy in some countries, thereby switching to renewable energy sources. Industries that can’t adapt to such changes or consider it safer to continue their work on the previous conditions will go bankrupt because of the following sanctions. \n\nEx3: Changes in technology that proceed at a fast pace are well presented by an example of a loss of leadership of RIM to iPhone due to the inability of modern innovation. RIM did not expect emergence of smartphones and couldn’t move with the times.\n\nOrganisational changes are defined as the adaptation of new ideas/behaviours by an organisation with multiple perspectives on a strategic change and organisational development. \n\nEx4: Lego eventually realised that its lifespan of physical toys wasn’t going to have an eternal interest. Lego involved organisational change, decided to implement digital transformation. Instead of focusing on physical products, Lego decided to concentrate on bridging the physical and virtual AR experiences.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265296,
      "meta": {},
      "text": "Change in software development happens because there is constant change in the real world which may affect the software development process. For example a new law that restricts the use of data you need for your project results in the change that you need to create a workaround or a different solution in your project.\n\nRequirements changes can be changes in different areas such as changes in the law that affects the project or the need for a new technology to be implemented to match the market standard or customer needs. For example a new copyright law forcing YouTube to detect pirated uploads.\n\nTechnology changes are changes that result from events such as software or hardware updates or innovations that affect your projects. For example Streams were introduced with Java 8 and thus introduced a new more efficient way to process object collections.\n\nOrganizational changes are changes in the team or the company such as a new culture, a new team leader or any staffing change or a change in the technologies a company uses. For example there could be a new team leader with a different problem solving philosophy such as scrum thus changing the way the team operates.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265410,
      "meta": {},
      "text": "The process of developing a software can last a long time, so the longer it lasts the more changes will occur. For example a new legislation, that forces the developers to adapt to this by updating certain features of the software, otherwise the company can't reslease it. Changes can be broken down in requirements changes, technology changes, and organizational changes. A change in requirements takes place, if the client switches up details of his demands, possibly after you already implemented his former demands; e.g. you design a social media platform and your client suddenly doesn't want a dislike button anymore, because youtube got rid of it as well. Technology changes affect the technology you work on and work with. For example, if you require a more computation in your computer for your code, you can rely on moores-law and wait for the faster next generation of computers. Organisational changes affect the structure within your team or company. For example, if one of your team members quits, you have to find a good replacement for him or distribute his duties over the remaining team. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265638,
      "meta": {},
      "text": "Software development is an agile process that is different every time and that requires lots of communication between different people. If an error occurs anywhere along the way of requirements elicitation, analysis, design, implementation, validation, delivery or maintenance, the project needs to be revised. Additionally, the constantly changing software-ecosystem as well as a increasingly tough competition which leads to conglomeratisation creates the necessity for changing software.\nIf for example team-members have a misunderstanding during the requirements elicitation because of a language barrier, that could cause huge problems.\n\nOrganizational change: Conglomeratisation can be a cause, after a company took over another one it might want to change its software to be better integrated into its own ecosystem. Microsoft might want Activision to change certain things to be better integrates info the X-box ecosystem. \n\nTechnology change: Technology (operating systems, programming languages but also hardware) changes often today. Therefore, software has to adapt in order to keep its relevancy. When your team is working on software for a company in the aerospace industry where speed is of massive importance, the publishing of a new communication protocol between internal services will force you do do some changes as you want to deliver a software solution that is as fast as possible. \n\nRequirements change: We write software for a customer. This person might have an idea which changes over time or might turn out to be un-ideal after we have finished the project. Adjusting the project so it always fits the customers wishes can cause ripple effects. If we implement a review section in an online shop and we afterwards have to implement a word-count-limit for the review, that also involves the database and not only the frontend. So the little change caused larger impact throughout the whole stack.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266303,
      "meta": {},
      "text": "There are a lot of reasons why change happens in software development. Ranging from unforeseen problems to poorly defined requirements or strong competition. A software development team must be able to adjust their work to these new circumstances in order to stay competitive. For example Google Chrome is a quite new web browser compared to others but managed to come out on top. A few reasons for that is because they managed to meet their users need such as fast loading speed and easy configuration through add ons.\n\nRequirements changes mean that the tasks of a project (so what the project does) or the conditions for the project (e.g. the given budet or deadline) change as well as legal changes, for example a higher level of data privacy or security means that the developers have to adjust their systems to these new regulations and requirements.\n\nTechnology changes mean that new (and better) technologies are presented to the market which can change the development of the project. E.g. if there will be a better way or a new standard for developing (reasons for this can be easier implementation or higher performence) mobile apps, developers need to adjust to these new technologies to stay competetive.\n\nOrganizational changes often happen because software development is a fast pace industry in which employees as well as customers have a high turn around time meaning that during a project teammates often leave and new people enter the team.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266497,
      "meta": {},
      "text": "Change happens in software development because new technologies are invented, which make software development easier. For instance, tools like Git make it way easier to monitor development and work as a big team in an organised way. Another change is the importance and business orientation of software development. When applications used to be a new concept, the aim of an application was not as clear, making the organisation and planning steps not as systematic. For instance, Facebook was developed by a college student who liked programming instead of paying attention in history class. It took him only two weeks to build the first version, alone, while not even planning the business aspect of it.\nNowadays, organisation is optimised by concepts like Scrum, that helps a software development team to have clear goals, budget and a schedule, while not limiting the goal to initial ideas by setting the goals as a moving target, in which case the organisational changes occur.\nThat last aspect of requirements changes was not always the standard, but it is a good concept, since developers cannot ensure to fully capture all requirements from the start. For instance, mistakes in communication can happen between a business analyst and developer.\nAnother factor, technological changes, impact development, because adapting to new technologies makes the process more efficient, while requiring the flexibility to adapt. For instance, when smartphones get additional features like GPS, more opportunities were open for developers to implement the functionalities more efficiently and make the app more desirable on the market.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262485,
      "meta": {},
      "text": "A single piece of software undergoes change because of a multitude of reasons – It may have to grow in complexity and number of features in order to satisfy any new requirements presented by the customer or of another nature. A system should also be maintained – which may include anything from bug fixes to converting a whole legacy code base to a newer, more suited one. \n\nAn example of a change in the real world: A project grows rapidly and has to suddenly handle a lot more users at once. This means that the software has to be updated to handle the new flow of users, and with more resources, the developers can focus on deploying new features and/or improve existing code. \n\nRequirement changes are mostly introduced by the customer and may require changing the current use case models, thereby altering/upgrading the overall functionality of the software itself. For example, a bike shop owner decide that they also want to be able to rent out bikes on their website. \n\nTechnology changes are ones which allow us to use better software/hardware. For example, a new GPU is released. Now game developers have more computing power on their disposal, which they could harvest by adapting their game to it.\n\nAn organizational change occurs whenever the team’s composition changes – a team can grow, shrink, or change roles within its members. An example: An application rises rapidly in popularity, therefore the team has a lot more resources at its disposal, and has to grow and allocate more roles in order to keep up with the user flow. \n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262689,
      "meta": {},
      "text": "Change in software development happens, because we live in an agile world where it's natural that everything changes regularly, as we have seen during the last 2 years where everything changed because of corona for example. In software development there are requirements changes, organizational changes and  technology changes. Requirements changes are for example when the customer of the CoronaWarnApp needed a new feature such as certificate scanning instead of only contact tracing. Organizational changes are for example when a team is working closely together and is dependent on each others work, but if a member leaves the team or a new member joins the team the other members have to quickly adapt to this. Technology changes are for example if someone develops a program for apple computers with x86 architecture, but then they release their m1 devices with arm architecture and the developer needs to adapt to this change so people are still able to use the program.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263121,
      "meta": {},
      "text": "Änderungen in der Softwareentwicklung passieren, weil sich die Umgebung um das Projekt herum ändert. Ein Beispiel hierfür ist die rapide Verbreitung von Smartphones. Bevor Steve Jobs 2007 das IPhone vorstellte, nutzten die meisten Menschen ihr Handy nur zum Telefonieren und SMS schreiben. Heute sind Smartphones nicht mehr aus unserem Alltag wegzudenken. Dadurch mussten zum Beispiel Webseiten angepasst werden um auch in vertikaler Auflösung zu funktionieren. Solche Veränderungen bringen Chancen mit sich, wenn Softwareingenieure es schaffen, auf diese Änderungen einzugehen. Zum Beispiel schauen heute über 70% der YouTube Nutzer auf mobilen Geräten. Wenn Entwicklerteams auf solche Änderungen allerdings nicht reagieren können, können sie sehr leicht von der Konkurrenz überholt und abgehängt werden.  Außer solchen technologischen Änderungen, gibt es auch noch organisatorische und Anforderungsänderungen.\n\nTechnologische Änderungen:\nÄnderungen in der technologischen Umgebung können sowohl von anderer Software, als auch von Hardware initialisiert werden. Sie sind unvermeidlich, aber oft nicht so ersichtlich, wie z.B. Änderungen von Anforderungen. Beispiele: Browser unterstützt ältere Features von Webseiten nicht mehr; Mehr Kerne pro Prozessor favorisiert höhere Parallelität.\n\nAnforderungsänderungen:\nÄnderungen der Anforderungen sind vom Auftraggeber ausgehend. Zum Beispiel wenn das Marketing einer App besser ist als erwartet und somit eine höhere Skalierbarkeit erfordert ist.\n\nOrganisatorische Veränderungen:\nOrganisatorische Änderungen sind Änderungen, die durch Änderungen der Funktionsweise des Entwicklerteams entstehen. Beispiele: Ein Unternehmen führt Scrum ein; Ein Mitarbeiter, welcher wichtig für das Projekt ist wird entlassen.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264498,
      "meta": {},
      "text": "Change in software development happens because sometimes there are certain events that pose completely new challenges to our technologies which means that we have to change our infrastructure to cope with them  . The corona crisis for example changed our whole job industry, people had to work from home and therefore had to adapt their technological equipment to the requirements of their jobs. The companies also had to improve their IT Infrastructure in order to remain able to work.\n\nGoing on with the example of the corona crises we can show the requirement changes with the increased demand of home office. So before the crisis emerged, it was enough for companies to offer the opportunity to work from home, but now the requirements changed and they need to offer opportunities for home office. \nChanges in technology offer huge chances for our whole society but also for software development, nowadays our technology is getting better and better with an insane speed. For example CPUs have a huge amount of power today compared to older ones, so the potential is a lot higher and therefore we can possibly create more complex innovations.\nOrganizational changes can happen very often, for example changes in a certain team of a company. If one person, who is responsible for a certain part, leaves the company, we need to reconstruct the team with someone who can handle his part in order the ensure the old productivity.  \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264851,
      "meta": {},
      "text": "One of the reasons for change is that the use case for a software in development changes, for example a Covid app now needs to be able to show immunisation records.\n\nThree areas of change:\nrequirement changes: The software needs to do more or something different compared to when it was planned. Example is the same as above\n\nTechnology changes: The developers need to work with different technology, for example the software now needs to run on different hardware for example, so some functions (e.g. i/o) aren't available or different\n\nOrganizational changes: There need to be adjustments made in terms of who needs to do what in a certain time, for example some team members get sick and can't continue development for a while -> hard to keep the current deadline. It can also be a result of one of the other two types of change. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265871,
      "meta": {},
      "text": "Change in software development can occure because of many reasons. The easiest way to describe why change happens is to say that the situation now just isn't the same as when you started the project. This can happen because of external factors or even from internal ones.\nA simple example of change due to an external factor is that the customer changed his mind about how the logo of the product should look like. He/she prefers another form of representing the product so you, the development team, have to make some adjustments to satisfy the customer.\nThere is 3 types of change that can happen in software development. The first type is requirements change. This is when certain features need to be changed or the overall functionality of your software needs to be adjusted. The example of the logo change would fall under this type of change.\nThe second are of change is technology change. This is when technology around you changes and influences your work. An example for this is the development of code sharing. Today if you have a problem with your code you can simply look it up online and you will probably find a solution.\nThe last type of change is organizational change. This happens everywhere not only in software development. The structure of your development changes an you have to adapt the way you work. For example one team member leaves the group so you have to readjust the workload for each team member. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265963,
      "meta": {},
      "text": "Why change happens in software development?\nDer Wandel in der Software-Entwicklung geschieht, um sich in wandelnden Märkten weiterhin mit hoch qualitativen Software-Systemen  mit festen Budget und vorgegebenen Deadlines gegenüber der Konkurrenz behaupten zu können.\nExample:\nBlackBerry hatte beispielsweise den Trend zu Touchscreens in einem wandelnden Markt verpasst und hat dementsprechend seine Stellung verloren.\n\nRequirements changes:\nDie Anforderungen an ein System stehen in ständigen wandel. Beispielsweise haben sich die Anforderungen eines Kunden aber auch die des Gesetzgebers an ein Auto über die Jahrzehnte verändert. Es wurden immer sicherere und effizientere Autos gefordert und die Industrie hat sich  den Anforderungen angepasst.\n\nTechnology changes:\nBesonders im Bereich der Computertechnik kam es zu großen Veränderungen. Rechner wurden immer schneller und komplexer durch Multicore-Systeme, mehr Transistoren und schnellerer Taktraten. Darauf muss auch bei der Software-Entwicklung geachtet werden, die immer rechenintensivere Systeme entwickeln und implementieren kann.\n\nOrganizational changes:\nFrüher wurden Meetings in einen Terminkalender geschrieben wohingegen heutzutage alles digital und interaktiver abläuft. Die Entwicklungsgruppen organisieren heutzutage sich zum größten Teil selbst. Außerdem treffen sich nicht mehr alle in einem Raum um Meetings abzuhalten, sondern kommunizieren über Plattformen wie Skype.\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266373,
      "meta": {},
      "text": "An example could be Nokia. They have lead the mobile phone market, but didn't exceed at scouting for new opportunities to grow, to be exact they did not realize the potential of smartphones, and when those came to the market Nokia got overwhelmed and couldn't follow the markets' development. This I would count as a requirement change, if I understood it correctly. An example for technology change might be the usage of a more advanced and modern programming language, that has been created and optimized for a specific field that you are in. One organizational change is the usage of scrum. This system is very adjustable, but should always involve weekly(daily, monthly, depends on the teams preference) scrum, which is a meeting in which the development team splits into 3 roles: Product master - the one who is the closest to the customer, Scrum master - a moderator that asks question to the rest of the group and moderates the meeting, and the developers, that are answering the Scrum masters questions, giving insight on what they achieved in the scrum period to the rest of the group.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261174,
      "meta": {},
      "text": "Considering that we live in a globalized world, any development of for example a new technology or methodology gets almost instantly transmitted all across the globe through the internet or other communication mediums. An example of this are the tablets, because as soon as the first Tablet was developed, many companies such as Samsung and Huawei started developing their own versions of it.\n\nRequirements changes happen when the minimal requirements for a products are changed, for example if you had to build a calculator that can only do addition, and then your product owner suddenly announces that it should also be able to do subtractions\n\nTechnology changes happen when a technology that you are using in the development of a product changes, for example if you are coding something in a programming language and it recieves a new update while you are working.\n\nManagement changes happen when there is a change in the composition of the team that you are a part of, for example if a colleague of yours get sick or is replaced by someone else.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261407,
      "meta": {},
      "text": "Changes in software development happen mainly because you can’t plan everything in a project. There are some things that can happen unforeseen. An example of something unforeseen is the log4j vulnerability. Many companies were affected and those who write software for these companies had to react and adapt their development to fix this everywhere needed as fast as possible.\n\nRequirements Change: The requirements of the project suddenly change. For example, the customer stated he wants a web application to see how many items are still left in his warehouse. The application was planned to be perfect for desktop pcs because it was meant for the management department, which only uses desktop pcs. \nSuddenly also the worker in the warehouse must see the inventory. They have to use a mobile phone, or a tablet to open the tool. The team must adapt their web application to work on both mobile and desktop pcs.\n\nTechnology Changes: The team must change the technology they are using because of different things. For example, there could be a problem with a currently used technology, which only can be resolved by completely changing to another technology or the team simply discovered a better technology to do certain things. \n\nOrganizational Changes: Some team intern changes are happening, but the project has to be developed further. For example, the scrum master becomes sick and there is nobody to replace him. The team has to organize itself to maintain the development and decide who gets the temporary role of scrum master.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263588,
      "meta": {},
      "text": "Change happens in software development, because it's impossible to design and plan a system of no matter what size that doesn't need to change. Not unless you are able to predict the future and read the minds of clients and business owners. As mentioned clients can alter their requirements, new technologies or methodologies get released, financial situations change, but also internal factors such as new company owners who may want to focus on a different area will lead to change. A real life example would be Googles switch from Java to Kotlin for their Android OS, because it made development more efficient and the codebase smaller and more maintainable.\n\nRequirement changes are modifications to the needs of the developer, client/s or the stakeholders. For example if the initial requirements were overly optimistic and promise something which can't be delivered, then requirements change.\n\nTechnology changes are modifications to the software stack used by the system, the underlying OS or the algorithms used. For example switching compilers, changing the main programming languages (C++ to Rust) or porting to a new OS (Windows to Linux).\n\nOrganisational changes are modifications to the clients or developers organisational structure through out the development lifecycle. Such a restructuring can lead to a new financial situation, new policies to adhere and potentially a new set of end users. For example a company gets taken over by a new investor, who has a different vision for the software developed by the company.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263933,
      "meta": {},
      "text": "Change in software development happens because the world around it changes constantly. For Example: Machine learning and AI\n\n\nRequirements changes can happen when there are new user requirements or the customer re-structures and change the problem to be solved.\n\nTechnology changes like when machine learning became more wide spread can help you solve your problem more efficient and in a new way.\n\nOrganizational changes occurre when a business or company have structural changes, for example when they would change from scrum to a waterfall model.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264177,
      "meta": {},
      "text": " Many factors have paved the way for the changes in the Software Development.  At first, engineers tried to find a way to control it and the easiest way was considering the Software as an Industrial chain which receives the same inputs and repeats the same process or actions. This step which is one of the first steps in the software development called organizational maturity. Unfortunately, we can't wait for something more than that from engineers in 1989 who were still affected by the development of the industrial field and even people at that time could not think about Software as we think about it nowadays. And one of the most interesting examples are the huge companies at that time which they were IC like General Motors or Ford Motor ...  But during years, new resources were afforded and the engineer's point of view was changed because of the worldwide spread and growth of Windows and then the idea of the browser and many other projects which were based on software development  obliged developers to change their way of working to achieve those huge objectives.  They waited until 2001 to start working on software with the agility process which was basically founded on unplanning and adaptability. And this new way of working can be considered as a reference in the software history because from 2001 until 2022, the technological development is running with his highest speed as result we developed pcs to be smaller and faster, we created phones with touchable screens last but not least we don't have to forget the first generation of the electric cars, and we are working on the second one which works with hydrogen. Software development is the most important factor of all this success, and it will stay playing the same role as long as humanity is running  after artificial intelligence.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264386,
      "meta": {},
      "text": "Veränderungen in der Softwareentwicklung wird durch eine Vielzahl an Faktoren hervorgerufen wie Veränderte Anforderungen, Veränderte Gesetzgebung oder Technologien. Ein Beispiel dafür ist der Trend zu \"Serverless\" Plattformen, welcher durch immer größere Skalierbarkeit Anforderungen benötigt und durch große Fortschritte in Performanz und Software ermöglicht wurde. \n\nAnforderungsänderungen treten sowohl in der Entwicklungsphase eines einzelnen Projekts, als auch als \"trend\" in der Branche auf. Innerhalb eine Projektes können diese Veränderungen durch eine Vielzahl von Faktoren, wie zum Beispiel: verändertes Budget, präzisere Ausarbeitung der Anforderungen oder bei länger laufenden Projekten durch eine sich verändernde Umgebung/Infrastruktur ausgelöst werden.\nInnerhalb der Technologiebranche Folgen sie meist anderen großen Veränderungen in der Gesellschaft (z.B.: Neue Gesetzgebung wie der DSGVO) oder Technologien (wie z.B.: Containerized/Serverless Umgebungen).\n\nTechnologie Änderungen treten meist in Antwort auf veränderte Anforderungen auf. So kann zum Beispiel eine steigende Nutzeranzahl sowohl eine Überarbeitung der Infrastruktur (Skalierung, Plattformwechsel) aber auch eine Veränderung der eingesetzten Technologien wie Sprachen, Frameworks oder Libraries diktieren. Eine Interpretierte Sprache wie Python oder JavaScript ermöglicht so z.B.: eine schnelle Implementierung diverser \"Features\", können aber vor allem bei großer skalierung zu langsam oder instabil sein (keine Statische Typisierung erschwert refactoring).\n\nOrganisatorische Veränderungen werden vor allem bei großen Unternehmenswachstum benötigt. So kann zum Beispiel ein kleines Entwicklerteam welches gemeinsam an einer ganzen Platform arbeitet für den Anfang/Prototyping genug sein. Umso größer ein Projekt wächst wird jedoch z.B.: eine Gliederung in kleine Teams, welche sich jeweils auf einen/eine bestimmte Menge an Bereichen Fokussieren wichtig, da kein einzelner Entwickler in der Lage ist das ganze Projekt auf Implementierungsebene zu verstehen.\nExtrem Beispiele dafür sind Unternehmen wie Google, in denen ganze Abteilungen nur dazu genutzt werden Frameworks (AngularJS), ganze Sprachen (Go-Lang) oder Hosting Services (Google-Cloud-Platform) für andere Abteilungen bereitzustellen.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264705,
      "meta": {},
      "text": "1. As with every Product or Service offered to an open market, the boundaries, rules (regulations) and/or competitors for a specific market may change. This change can force a company to adapt to these changes.\n\nFor example Meta announced earlier this year that it might shut down services from Facebook and instagram if the EU continues its path on data security.\n\nFurthermore the process of software development, does not follow a strict plan. Since the surrounding system can change, so needs the process. Adapting to change is crucial. Dealing with change works best when looking at software development as an empirical process control model you can not fully plan. This promotes the creative nature of software development.\n\n2. \nrequirements change, describes a change in the requirements for a product. These requirements are made by the customer. Information is \"stored\" in the product backlog and can be changed in this status. Once in sprint backlog changes are not advisable. Eg the Userinterface of a product shall now be presented in different countries -> more language options needed. \ntechnology change, adaptation to new technological solutions is needed. Eg in the days when cloud storage arised, new backend solutions were needed to offer that technology change to users and customers.\norganizational change, may describe a situation in which a companies structure changes. Different people need to perform different tasks and a this organization needs to adapt to new obstacles. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264890,
      "meta": {},
      "text": "during a software developing project, it is possible that new knowledge, solutions and tools are introduced into the field, as a project usually lasts longer than technological changes. These causes changes to the existing components in the to be formed system as different, more simplified or modern methods would be preferred and also to prevent deployment of an irrelevant system.\n\nFor example, farmers used to plow land with the help of oxen and horses. But with the introduction of technology, tractors are now more frequently used as they are more time and effort efficient.  \n\nUser's requirements of a system could change over time, errors in a system could arise, laws and regulations of the sector the software is serving under could also be amended. These all lead to requirement changes. \n\nTechnology changes arise frequently as people are always developing and improving existing applications. As of now, Artificial Intelligence, Augmented and Virtual Reality are newly introduced technologies in the field. With that, developers will need to learn and consider those technologies as an option in the project.\n\nThe members of a Scrum team can change with time. New people may be introduced, and an exchange of  positions within the team may occur. This causes organisational changes as the the reviewing, planning and execution of a sprint may change, depending on the work style of the team members, although the general components of a sprint is set.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265027,
      "meta": {},
      "text": "Due to special requirements management, fuzzy and imprecise, fragile frame, overly complex, demand, the inconsistency between the design and implementation, testing, for the state of the project evaluation is too subjective, unresolved and unable to control the risk of changes in production and propagation of reasons such as changes in software development.\nFor example, users often cannot define exactly what they want. They often think they know, but in fact their requirements are based on the current work needs, and the adoption of new equipment and technology often changes the way they work. With the continuous progress of the development work, they may come up with new features, or make changes to previous requests. The more they learn, the more new requirements become, so that requirements changes inevitably occur again and again.\n\nRequirements changes: Without good communication between the developer and the user, the developer deduces the user's requirements based on the general information provided by the user. The resulting requirements are often far from the actual requirements of users, resulting in users proposing changes.\n\nOrganizational changes: project implementation cycle is too long. As time goes on, users will put more and more demands on the whole project.\n\nTechnology changes: Due to the rapid updating of technology, the enterprise may introduce some new equipment, so developers have to consider improvement projects.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265355,
      "meta": {},
      "text": "Change in software development happens because the world changes every day and so do software requirements. Furthermore, user needs change as dynamically and modern software needs to be as adaptive in order to satisfy customer or stakeholder demands in general. For example, the stakeholders of a startup are interviewed every week and their wishes are translated into requirements in order to develop a software that is user friendly and can be sold in the market. Since the world is is now digitally connected software development also has to keep up with a vast amount of complexity.\n\nThere are a multitude of reasons that require change in software development. For example change in the market dynamics of a tech startup might be a reason. For example, the startup deepc operated in a fragmented market of AI radiology analytics utilizing computer vision. After some reconsideration they opted to a operating system which embeds such solutions instead of building another solution themselves. Therefore, the software development changes from building to integrating. \n\nSecond, there is technological change which is required in scenarios where new frameworks are developed and utilized. Therefore, you develop your frontend in react instead of HTML since react is way more agile and flexible.\n\nThird, there is organizational change. For example, a new regulatory law passes and software development has to be adapted for example after GDPR the deletion function needed to be implemented for the database in order to be compliant with the new data protection laws.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265578,
      "meta": {},
      "text": "For some time we observe change in software development and this has a lot of reasons. In the world and especially in the technical world there have been changes over time to which people had to react with new developments.  The area of requirement changes is one important part of Software development activities. \n\nHere we could name the example of smartphones. People wanted to use the internet on their mobile phones and chat with others no matter where they are. This was something which was for example not seen by Nokia early enough, the market leader of cell phones at that time. This was why they were overtaken by other companies and lost their rank because they did not realize that there was a problem which needed to be changed.  What I stated in my example also concerns technology changes as it is obvious that these smartphones needed somehow new or a different technology development. \n\n It was also of course a organizational change needed because this new technology innovation opened a completely new market where companys which maybe didn't even act in the earlier market now became gloabl players in it.  It was a very important innovation and it was necessary to find one's way around the new market and reorganize. This is a good example of how important it is to know how to react to and deal with required changes.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266172,
      "meta": {},
      "text": "Change in software development:\nChange happens in software development because user needs, technologies, ways of working, markets and competitors are constantly evolving. Developers take this opportunities and necessities to provide new and innovation solutions to satisfy these needs. \n\nOne example of change in software development has been the change from waterfall to agile methodology in which software developers have gone from having a predefined frame of work to follow to developing projects in a collaborative way on a team in a more flexible way, making the necessary changes throughout the process. This change provides a better way to reach the goals and fulfill the necessities of users.  \n\nChanges in requirements, technology and organization: \nRequirement changes refers to the changes on the demands of the project, due to different factors, as for example, user changes the requirements, new technologies available for use and change in the needs of the stakeholders. \n\nTechnology changes refers to the new emerging technology trends that have an impact in the way softwares are developed. One example to mention can be the growth of artificial intelligence, with applications like Siri by Apple and Alexa by Amazon, to mention a few. \n\nOrganizational changes refers transitions made in the way the developer organization/teamwork and approach a Project. One example is the adaption of the Scrum framework, were teams solve complex problems through adaptive solutions.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266203,
      "meta": {},
      "text": "Because the needs of users are changing, and the system technology is being updated, there are new standards for software analysis and review.\n\nRequirements changes: Requirements change means that after the specification has been demonstrated, new requirements must still be added or deleted from the original requirements.\nFor example, when developing an application software, the user uses the Android system, but in the development process, the user changes to the IOS system, which leads to the rework of the development work and discards some parts that cannot be corrected.\n\nTechnology: Technological change refers to the adoption of new technologies in the development process, improving quality and reducing cost.\nFor example, updates to Windows systems and updates to computer hardware.\nFor example, the development of computer hardware has led to the inability of some previous programs to run on the latest computers.\n\nOrganizational: Organizational change refers to adjusting the size of the organization, the work of the members of the organization, and the communication between the organizations through scientific management methods. In this way, the purpose of improving the efficiency of the organization's work is achieved.\nFor example, when a company recruits new employees, the purpose can be to change the size of the organization.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266220,
      "meta": {},
      "text": "In der Softwareentwicklung gibt es immer neue Fortschritte und Entdeckungen und dadurch Veränderungen. Die Produkte sollen dadurch in einer sich schnell verändernden Welt immer aktuell und relevant sein. Ein Beispiel dafür sind Apps für Smartphones. In gewissen Abständen erhält die App Updates und dadurch meist neue Funktionen oder es werden Sicherheitslücken geschlossen.\n\nrequirements changes\nZunächst einmal müssen die Anforderungen an das Produkt formuliert werden. Wenn man bspw. eine neue Taschenrechner-App entwickelt, könnten Anforderungen sein: verständliches Layout/Design, die Rechnungen vom Taschenrechner müssen korrekt berechnet werden, usw. Diese Anforderungen können sich natürlich über die Zeit auch immer ändern und müssen aktuell gehalten werden.\n\ntechnology changes\nEs sollen stets neue Technologien verwendet werden. Nehmen wir an in paar Jahren ändert sich der Trend bei Smartphone-Bildschirmverhältnissen (z.B. 16:9 --> 1:1, da foldable Smartphones) dann müsste auch die Taschenrechner-App an die neuen Bildschirmverhältnisse angepasst werden.\n\norganizational changes\nHier handelt es sich um organisatorische Veränderungen. Beispielsweise wenn eine komplett neue App entwickelt werden soll, und die entwickelnde Firma dafür eine neue Abteilungen mit neuen Mitarbeitenden gründet. ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266290,
      "meta": {},
      "text": "Change is inevitable in software development because useful softwares are complex and must evolve according to the environment and end users' needs in order to maintain their usefulness. Projects can span long periods of time, during which requirement changes, technological advancements and organisational changes will occur. E.g. Apple's new privacy features affect Facebook's advertising revenue, and Facebook software developers must adapt their product.\n\nRequirements are complex and will change during the course of the project. Previous requirements may be discovered to be not feasible and clients may have new needs over time. E.g. during the construction of Singapore's Changi Airport Terminal 5, requirement of additional transit facilities emerged, thus increasing costs.\n\nTechnologies advance rapidly and existing softwares must keep up. E.g. when Bluetooth speciﬁcation was first released, mobile device makers began to incorporate Bluetooth in their devices. This then became an industry norm and expectation.\n\nOrganisational changes also occur, and laws and regulations can impact software development. E.g. after the Great Financial Crisis, regulations required more restrictions on trading and information sharing. Developers for financial tool thus had to adapt their software to adhere to the new regulations.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261677,
      "meta": {},
      "text": "Change happens all the time and because of the rapid change in the state of technology it is especially fast in the software industry. Mostly because of improvement of hardware and software.\n\nOne big chance which is still happening right now is the shortage of graphic cards, which is caused by the crypto mining industry. So the computing power of graphic cards and there usage needs to be optimized.\n\nRequirement changes often because the costumer of your product often gets new ideas or thinks old ones are useless the most common one is probably regarding the design of the app or website ...\n\nTechnology changes often for example you see new web frameworks pop out every year (React, Vue, Angular ....)\nBut also the performance of hardware still increases so you can optimize your product regarding performance.\n\nOrganizational changes can happen if the management changes or your company will include some agile project management tools. Starting simply by using kanban boards up to scrum. \nOne of the biggest new things in the last few decades was probably microservices because it improves a lot.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261932,
      "meta": {},
      "text": "Just as the world changes due to infinite constantly changing variables, software, most of the time, depends on the world and its environment. Therefore, software changes, when the world does.\n\nExample1:\nAs most people weren't so good with computers 20 years ago, insurance representatives used software for communication within the firms only. But nowadays, they even use it to acquire new customers - in fact, they even depend on acquiring customers over the internet. \n\nIn Example1, the requirements to acquire new customers changed as technology advanced and increased the standards of the market. In order to stay competitive, the insurance company had to adapt to new ways of acquiring customers. \n\n50 years ago, middle-sized companies needed teams to prepare letters and organize the transportation of them. Nowadays, even the smallest companies can simply rely on code to automatically deliver messages/letters to the corresponding recipient within seconds, while saving three things: money, time, and work force.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262005,
      "meta": {},
      "text": "Change happens in software development because of the consistently developing environment. For instance, the change could happen because of better opportunities in the market, the existence of certain laws that the software has to adhere to, or new innovations or trends that the software development needs to adapt to thus changing the requirements in order to adapt to these new changes.\nFor instance, Kaeser, a german company that produced air compressors,  noticed its developing environment and the high market competition in the field.\nIt was then required for Kaeser to develop in order to maintain and increase their customers.  The consequent organizational changes were that Kaser started selling compressed air as a service to the clients.\nThe company developed from only a producer to a service-oriented company, which lead to technological changes.  Kaeser implemented technological infrastructure for data analytics using SAP HANA and SAM2 in order to improve their performance. \nA further example is Netflix. Subscribers used to rent movies from Netflix up until 2007. Netflix was losing to Blockbuster and in order to succeed, they had to adapt to the developing environment ( online streaming was one of the top emerging technologies). They invested in online streaming technology and in algorithms for data analytics to improve their performance and succeed. The organizational changes were that Netflix no longer rented out movies and sends them by mail, they bought the movies and streamed them online.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263031,
      "meta": {},
      "text": "1) In software development happens because of changes in requirements by customer due to market change, competition, changes in business plan, changes/improvements in technology and tools (new conventions).\nFor example, due to improvements in technology and how every person has access to softwares applications ranging from social media to calculators, the demand for faster/optimized software increases every day. This causes Software Development process to be faster due to demand and also tools provided to developers (many programming languages for many different problems//applications AND smarter IDEs) increased in the amount and usability/efficiency.\n\nRequirements changes:\nA new application in the market might gather a lot of interest and opportunity to profit for a business which can cause customer want more features in the application. In this case, this might cause the priority of requirements to change in the developer team.\n\nTechnology Changes:\nA new best tool for the job can be published, discovered, entered  in a market e.t.c for better efficiency OR if business gets bigger more investments (budget increase) of the projectmight open room for new tool/ upgrades which in this case toolneeds to be introduced and give time to implement it and how it would work needs to be discussed. \n\nOrganizational Changes:\nThere might bechanges in budget of the project which can causechange in development. Employee numbers can decrease or team structure might need tochange. Or if the team doesn't collaborate properly there might be need for changes of employees there as well. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263487,
      "meta": {},
      "text": "Changes can happen for numerous reasons. For example, a single developer can retire or sell his software. An example for this would be Minecraft, which was developed by one person and maintained by only a small team, when Microsoft bought it. After that, many changes in the game itself and also with the user accounts (which users had to migrate to a Microsoft account) had to be done.\n\nA change in requirements could be that another owner has different expectations concerning the software's profitability or the number of users. An example could be that a former Freeware becomes a paid peace of software after a takeover.\nA change in technology can be necessary when an existing system is migrated into another. This can affect login systems, the look and feel or many other things. An example would be the changed login modalities of Minecraft after the takeover through Microsoft.\nLastly, a organizational change might could be the introduction of Scrum or another system to boost productivity. Also, a section of a company can be dissolved or merged with another.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263864,
      "meta": {},
      "text": "Veränderungen sin in der Softwareentwicklung oft anzutreffen, da mehrere Individuen mit verschiedenen Vorstellungen und Erwartungen an einem Projekt arbeiten. Dabei kann es beispielsweise zwischen Auftraggeber und dem Softwareteam zu misskommunikation kommen, beispielsweise wenn der Auftraggeber  ein Model eines Hauses in Auftrag gibt, dies nicht weiter spezifiziert und das Entwicklerteam ein Modell eines Hochhauses liefert, der Auftraggeber jedoch sich eine niedriges Wohnhaus vorgestellt hat. \nVeränderungen in der Softwareentwicklung lassen sich in drei Bereiche gliedern. Erstens eine Änderung des Bedarfs, hier ändert sich während dem Projekt die Zielausrichtung des Programms oder eines Teils des Programmes. Beispielsweise wenn eine Software entwickelt werden soll, welche am Anfang eine effiziente alternative zum erfassen der Buchführung sein sollte, sich der Fokus, bzw. Bedarf im Laufe des Projekts auf die Kostendarstellung verlagert muss die Software dem entsprechen angepasst werden. Zweitens technologische Änderungen, dies ist meistens durch technologische Innovation ausgelöst welcher man sich anpassen muss. Ein Beispiel wo diese Anpassung nicht gut geklappt hat ist beispielsweise Kodak welche bei der Inovation der digitalen Kamera weiter auf die übliche Kamera mit Film gesetzt hat und so abgehängt wurde. Und drittens Änderungen in der Organisation, dies könnte beispielsweise eine personelle Änderung auf Projektmanagement Ebene sein, wodurch sich die Art der Entwicklung, beispielsweise nach welchem hierachischen Prinzip entwickelt wird, ändert.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264785,
      "meta": {},
      "text": "In software development, changes occur to keep software relevant to its users. Whether it's a pandemic or a new development, sustainable software must inspect and adapt to changes in its environment to meet its user base. For example, during the pandemic, most companies had to incorporate new features into their websites, such as video calls to maintain face-to-face meetings with their customers, or new software that allows their employees to work from home. \n\nRequirements changes can be summarized as the changes that occur during development due to the needs of the user base or requirements for the software, such as bugs. For example, adding new features such as group sessions in Spotify or Netflix Party so that customers are not lonely during the pandemic. Also, updates are made to fix bugs that occur when users interact with the software.\n\nTechnological changes can be summarized as the changes that occur due to new inventions. For example, artificial intelligence (AI) dominates the field of technical support and changes the software to make the most of AI, such as chatbots that provide 7/24 online support.\n\nOrganizational changes can be summarized as changes due to changes in the strategy or structure of the company.  An example of this is Microsoft's recent changes to its current business strategy in video games. The company intends to become a portal that no longer sells games individually but offers monthly game passes, which requires a change in the software of its game portal. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265090,
      "meta": {},
      "text": "Change happens in software development, because the technological advancement of the world is constantly changing too. An example is the fact that around 50 years ago newly built computers had simple tasks such as acting as a calculator or similar, while nowadays the demand for complex programs (and therefore complex code) has risen extremely (e.g: a simple smartphone app has thousands of lines of code). \nAt the same time the process of software development had to adapt to the available resources. While the complexity of the demanded program has been rising, the amount of energy/resources have always been limited. Therefore the code had to be optimized for efficiency too.\n\nRequirement changes are exactly those changes: an example could be the fact that the consumers want better products, or that the code needs to adapt to the limited availability of resources. \n\nTechnology changes are changes in the technological advancement of the world. E.g: Past: Computers, only capable of simple arithmetic operations -> today: Smartphones, Smart Fridges, Virtual Machines (...), that all require extremely complex code.\n\nOrganizational changes are changes that occur within companies and/or teams of software developers. While in the past programs may have been written entirely by a single person or split up into the most basic tasks for a big group of people, today the process of software development is much more complex. There are entire models dedicated to optimizing the organisation of a software development team. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265501,
      "meta": {},
      "text": "Changes occur in software development, and these changes are caused by many aspects. As an example, company m develops a new game at the request of a customer. During the software development, the customer's requirements change. The client wants to change from a MOBA game to a shooter game because shooters are more popular during this period, i.e. the business environment has changed. The client came up with a new business idea and the software development, therefore, required a different solution. And, the software developer also had a need for a development process that would also lead to a change. For example, software developers consider which development tools to use, in which environment to develop, and what development methods to use. These needs change during the development process, for example, some developers learn a new technology and expect to apply it to an existing development product to solve some of the problems that have been bothering them before.The continuous change in requirements brings more deep-seated problems, the core of which is the morale of the development team. \"The endless changes in requirements bring endless bugs, endless refactoring and even pushing to rewrite, and then endless overtime. The development team becomes more and more fatigued and loses confidence in the project, or just quit.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261767,
      "meta": {},
      "text": "Change in software development is inevitable since business and development environments change as well. If you regard software development as the core of a viable technical business Modell which is suspect to change, change in software development is not a nice to have, but rather a logical requirement\n\nTechnology changes: \n\nIT security is one of the biggest concerns for companies and developers. Due to the rise of ransomware attacks, lack of clear boundaries for company data, and collaborative development with citizens, data privacy and regulatory requirements are suspect to excessive risk. An example for tech changes would be the increased demand for DevSecOps, where security and compliance requirements are validated at every step of the development lifecycle.\n\nRequirements changes: \nSoftware development becomes faster and more accessible to people less familiar with it. No-code development opportunities through suppliers like kissflow can make software development possible for non-programmers.\nOrganizational changes:\nThe shift from the waterfall Modell to more agile methods like scrum. New management opportunities change the way how software development is implemented. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1262841,
      "meta": {},
      "text": "Da Softwareentwicklung sich über einen längeren Zeitraum spannt, ist es selbstverständlich, dass Änderungen in dieser Phase auftreten. Besonders weil die Softwareentwicklung keinen festgelegten Ablauf besitzt, können Abweichungen auftreten, beispielsweise wenn der Kunde seine Anforderungen an die Software ändert.\n\nRequirements changes: Der Kunde ändert zum Beispiel die Anforderungen, die er an die Software hat, wodurch eine gravierende Änderung im Prozess entsteht.\n\nTechnology changes: Wie zum Beispiel der Trend vom Programmieren für Computer hin zu mobilen Endgeräten.\nProgrammierer müssen neue Technologien immer neu erlernen was extrem viel Zeit kostet und einen nahtlosen Entwicklungsprozess verhindert.\n\nOrganizational changes: Ein Kollege verlässt zum Beispiel das Team, wodurch die Arbeitsproduktivität in ´s stocken gerät und sich evtl. ein neuer Kollege noch einarbeiten muss. ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1263455,
      "meta": {},
      "text": "*There are many cases why change happens in software development: \n- using new technologies.\n- the customer's needs change: some people don't know what they want until they see the product in the real life.\n- fixing some errors.\n- improvement.\n- ignored requirement development process: sometimes the developers could have ignored some requirements, or the requirements were so complex.\n---example---:\nchanging software drivers or libraries.\n-----------------------------------------------------------------------------------------------------------------------------\n* requirements changes: it is a major reason why change happens in software development. The customers keep changing their minds and their requirements. The needs of our environment changes with the time. In other terms,  this kind of change  happens to meet our needs. \nex: improving camera quality of smartphones, photovoltaics(the direct conversion of light energy, mostly from sunlight, into electrical energy) is used in space travel, but today it represents a win In the electricity sector\n*technology changes: the technology is changing so fast and developers always try to use new technologies and improve the old products using the new ones.\nex: cars with self-driving, Home automation, changes in computer architecture... \n* organizational changes: organizations may change their strategy or purpose, introduce new products or services, change the way how they produce and sell their products, change their technology.\nex: scrum model: using series of sprint in projects, which based on the scrum team and supported by scrum master.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263693,
      "meta": {},
      "text": "Veränderung bei der Entwicklung von Software kann viele Ursachen haben. Deren Entwicklung ist kein statischer Prozess und wird von vielen Faktoren beeinflusst: Der Organisation des Projekt, den Anforderungen an die Software und die zur Verfügung stehende Technik. Es gibt nicht die eine Software für alles, sie entwickelt sich stetig weiter und mit ihr muss sich das Development verändern.\nZum einen entwickelt sich die Technik immer weiter und um die neuesten Fortschritte davon nutzen zu können muss die Software entsprechend angepasst werden. Neue Prozessor Architektutren benötigen beispielsweise so gut wie immer mindestens ein Treiber-Update um ihr volles Potenzial auszuschöpfen. Ebenso kann sich natürlich auch eine Software verändern auf der man aufbaut, wie das Betriebssystem, was dann auch Anpassungen erzwingt.\nWährend der Entwicklung sorgen auch Veränderungen in den Anforderungen dafür, dass ein Project angepassst werden muss. Zum Beispiel kann es vorkommen, dass als die Entwicklung begonnen wurde der Kunde noch ein recht kleines Unternehmen hatte, dieses aber dann sehr schnell sehr erfolgreich geworden ist und man ganz andere Datenstrukturen braucht als ursprünglich geplant um alle Kundeninformationen effizient zu verwalten. Es kann auch vorkommen, dass anfangs möglicherweise ein Aspekt wie die Sicherheit nicht bedacht wurde und eine entsprechende Anforderung erst später aufgestellt wird.\nDie Organisation eines Software Projekts spiegelt vor allem wider, wie flexibel man auf andere Veränderungen reragieren kann. Früher wurde versucht alles im Vorhinein zu planen und daraus einen strikten Arbeitsablauf zu erstellen. Inzwischen setzt man eher auf agile Modelle wie Scrum, da sich gezeigt hat, dass immer irgendetwas anfangs nicht bedacht wurde oder nicht so verläuft wie gedacht, vor allem da Software immer komplexer wird.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1264285,
      "meta": {},
      "text": "Change is triggered due to evolvements in internal and external factors. For example, a new technology might appear, the market need has changed etc. That is why software development teams adapt an empirical approach, in order to stay more agile during the product development process, in order to tune the product best for the market.\n\nAn example for change in the real world would be emergence of the new technology such as the 64bit processor, which in return opens up new horizons for software development\n\nRequirements change may happen due to changes in what the market needs, or the state of the competition right now. It is important to constantly keep track of it during the development process, in order not to end up like Iridium, a start-up company which stayed ignorant to the external developments in the market leading to few billions in losses. \n\nTechnology changes sometimes happen due to improvements in the CPUs and GPUs as well as other hardware. Better hardware allows software products to be more \"ambitious\" and execute more advanced tasks due to better system performances, therefore, software developers have to account for that. \n\nOrganizational changes may happen on the higher level. For example, a firm may get acquired, and the software development team now has a new product to focus on. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265630,
      "meta": {},
      "text": "Every software firm’s goal is to deliver a product to its client with the highest possible quality, the lowest cost and in the shortest amount of time. While these companies try to find the best equilibrium between those three criteria, they also need to adapt to different changes during and after the development phase. The firm not only has to modify their business because of technological and digital changes, but also because of environmental by observing the market and following customer needs. Not all firms acknowledged the digital transformation and invested in their existing business instead of innovation. General Motors, for example, resulted in one of history’s largest bankruptcies after being one of the most important car manufacturers for more than 100 years. Failure to innovate and blatantly ignoring competition were key to the company’s demise. \n\nRequirements changes is on of the main reasons for failures in the development phase. Customer needs can change very quickly after a product has been established on the market. Often times other entities come up with slightly better products and you need to adapt in order to keep your clients.\n\nSoftware Industry is fast moving and rapidly changing with the evolution of software technology, new hardware and various process methodologies. Software engineers today need to capture new technologies and make use of them to innovate their existing products.\n\nFinally, developers need to adjust to organizational changes. These can include end-of-life products, a change in government and governmental priorities or strategy and structural changes. In all these scenarios the frame in which software engineers work changes and they need to adapt their products in order to implement these structural changes. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265769,
      "meta": {},
      "text": "Software aims for solving real-world problems, and the world continuously changes. There are different aspects regarding to changes.  New technology might arise, new regulation might be issued, or simply, the requirement of customers changes.\nThe corona-warm-App is a great example. At first, it only deals with whether the user might have a close contact to confirmed cases. But, then, in order to fulfill the corona regulations, it is developed to store the result of schnell-test and/or PCR-test, and the certificate of vaccines.\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266360,
      "meta": {},
      "text": "A need to change in software development can occur, for example, after delievering a demo to the customer. For example when the customer presents an app to the users and users are not satisfied for example with the UI or there is no important function in the app. \nThe customer should deliever this information to the developers, so the developers can take care of it and so that the end product (or the next test/beta version) contains the needed functions / the UI is improved.\n\nRequirement change can occur for example when the development team fix bugs As the team identifies and documents defects, bugs can become priority requirements.\nTechnology change can be applied to the new version of the software for the new hardware.\nOrganizational change can happen when for example a bug was discovered, so the software company has to postpone the delivery date of the software.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266554,
      "meta": {},
      "text": "change happens because world around changes. for example internet was invented and new software is developed to be compatible with it...\nrequirements changes - the client changes what he wants in software,\ntechnology changes - new technology appears that makes some things easier or possible\norganizational changes - new people or teams working, different requirements from management",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1261574,
      "meta": {},
      "text": "like in every field, change occurs and is even important or necessary in the software development because the world evolves and so our needs, and thus we need more effeciency. To be able to achieve that we need to upgrade and change our technologies and more specifically our software.\n\n- Requirement change happens during the project and is like when the customer reconsiders his plans towards the product and updates them, which definitely can affect the product -more specifically the software- development. a more concrete example: the client signs a contract with an investor in china after starting the production of the prototype of his new product in the us. so he requires to double the number of workers and expand his business (his company) by opening a branch in china\n\nTechnology change is reflected through evolution, updates,... the concept, purpose and use of a mobile phone changed after the release of the first smartphone\n\nOrganizational changes is like how the capacity of people visiting supermarkets changed due the pandemic (it sinked in order to provide more space/distance between people and ensure the safety)",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262128,
      "meta": {},
      "text": "Veränderung tritt in der Softwareentwicklung nicht nur beständig, sondern auch in verschiedenen Bereichen auf. Wichtig für den Softwareentwickler ist es daher, die Teile seiner Arbeit, in denen Veränderung auftritt, zu kennen und zu lernen, mit ihr umzugehen. Tut er dies auf die richtige Art und Weise, sieht die Veränderung nicht als Blockade, sondern als Chance und ist bereit flexibel zu arbeiten, so können daraus für sein Team und ihn bedeutende Vorteile entstehen.\n\nSo können sich beispielsweise Unternehmen auf dem freien Markt, die Strömungen innerhalb der Gesellschaft früh wahrnehmen, schneller auf eben diese einstellen und unter den ersten sein, die passende Produkte entwickeln.\n\nVeränderungen treten insbesondere im technischen Bereich auf, gerade die laufende Verbesserung von Hardware, muss eine Entwicklung sein, die ein Softwareentwickler im Blick behält, denn wer heutzutage ausschließlich Software für 32-Bit Systeme schreibt oder all seine Anwendungen für Single-Core Prozessoren produziert, muss sich früher oder später anpassen und weiterbilden, da diese Techniken im Laufe der Zeit überholt sein werden. Bestimmt werden sie für einige Nischenprojekte noch genutzt werden, jedoch wird sich die breite Masse weiterentwickeln.\n\nDoch auch im viel direkterem Arbeitsumfeld des Softwareentwicklers können kurzfristig Veränderungen stattfinden, beispielsweise im Bezug auf die gestellten Anforderungen, an die fertige Software. Der Kunde kann seine Meinung zu einem bestimmten Thema ändern, was zur Folge hat, dass das Team Teile oder sogar einen Großteil des Projekts neu planen, oder zumindest umstrukturieren muss. Auch hier sollte ein Softwareentwickler bereit sein, sich den neuen Anforderungen anzunehmen.\n\nSchlussendlich können auch unvorhergesehene Komplikationen im organisatorischen Bereich auftreten. Mitarbeiterwechsel, Abstimmung mit anderen Arbeitsgruppen oder Veränderung von genutzten Schnittstellen sind nur einige davon. Gerade hier ist es wichtig, nicht den Kopf zu verlieren, sondern den Durchblick zu bewahren und die Vorteile der Veränderung, wie beispielsweise die Kompetenzen der neuen Mitarbeiter, zu sehen.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262384,
      "meta": {},
      "text": "Change is an intrinsic characteristic of the software engineering discipline compared to other engineering disciplines. Change is a very normal thing in software engineering, due to the development of the technique or the new requirements from customers and so on. \n\nExample: IOS version is updated from 14.1 to 14.2, then some functions of the app can not be used. \n\ntechnology change:\nSome new technology is coming up. example: Windows system update\n\nrequirement change:\nThe product owner has a new requirement.  example: The developing software should support online payment.\n\norganizational change: Organizational change is a software engineering necessity. For example, Employees leave, and new employees are hired, new teams and departments are created as the company grows, and businesses adopt new technology to stay ahead of the curve.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262990,
      "meta": {},
      "text": "Arbeitet man als Software Developer arbeitet man im normalfall eng mit den Kunden zusammen um das beste Resultat zu gelangen. Das führt dazu, dass sich möglicherweise die Arbeitsstruktur einer Software Development Firma ändert wie beispielweise der Übergang vom Definded Process zum Empirical Process.\n\nUnter Requirements changes versteht man die Änderung von den Bedürfnissen des Users von der Software beispielsweise den Kunden. Diese möchten zum Beispiel eine weitere Funktion in ihrer Software eingebaut haben.\n\nTechnology Changes sind die Änderungen der Stand der Technik. Da die Leistungen von beispielsweise PC konstant steigen muss die Software demensprechend angepasst werden.\n\nBei Organizational Changes handelt es sich um eine Änderung der Struktur der Software oder sogar des Software Development Teams, was automatisch eine Änderung der Software darstellt.",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1263434,
      "meta": {},
      "text": "Change happens in software development because projects get bigger and bigger. Because of this we need to divide those big projekts into smaler subprojects to be able to solve those smaler pices and put them back together in the end. But the part of integration can cause problems. Those problems can be caused e.g. by bad communication between teams. E.g. two persons each paint the lines of one side of a soccer field. But in the end the lines don't meet in the middle because they started at other points. \n\nRequirement change is e.g. if the management of a company would like to see when and how long their employes work with the softwaretool of the company. For that you need to add a analysis page to the program. \n\nTechnology change is e.g. if a company switches from Windows-devices to Apple-devices. Then the software maybe has to be changed because of the new operating system of the new PCs.\n\nOrganizational change is e.g. if the new assignments should no longer be checked by a real person. Instead there should be a program which analyses the incoming emails and processes the new assignments.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263466,
      "meta": {},
      "text": "Change mostly happens for example if the client requests new features or changes their mind about the current development request. This is a requirement change.\nThis can also be caused by new laws (e. g. the EU's GDPR) that change the legal situation.\nUnexpected bugs that take up important development time may cause some features to be left out because of a strict deadline. In this case, it is possible to remove some requirements/features to make sure that there is enough time for the most important features.\n\nAdditionally, old implementations become outdated over time, because new programming languages come and go. To make sure that the program still runs on current hardware and software, it has to be updated over time. This is a technology change. Another example would be if a  program has to be exceptionally efficient and if new hardware is released, it should be changed to fully exploit its performance potential. This \ncan also happen during development.\n\nOrganizational changes occur if the company decides to organize software development differently. The transition from the Waterfall to the Scrum model, which is more beneficial for software development, is an example for such a change. Each developer has to adapt to the new working process.\nAnother example is a company takeover or merge, which has a different approach for software development.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263678,
      "meta": {},
      "text": "The only real constant in this world is change and therefore also in software engineering change is needed to cope with the changes in our environment. Theses changes could be of large scale like the change of paradigm of mobile phones at the time, when we went from phones to mobile phones to smartphones or of a smaller range like changing the language of a software from German to French if you want to start learning french for example.\n\nFirst area of change is requirements change. This is a direct consequence of the changes in real life as requirements translate the customer needs and the market demands and these two are constantly evolving. \n\nSecond one is technology change. This speaks to itself: as we build new and more efficient technology tools, we have to cope with this new tech in of software developing and utilize it to make more reliable and efficient products. This is for example the case when we think about the emergence of artificial intelligence as a new technology that changed the way we see browsers for example.\n\nThird and last one is organizational changes and what better example to explain this other than the Covid crisis that forced everyone to change the organization of their daily lives. And here again software development had to follow this change and thanks to that we were able to work and study from home and keep everyone safe.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264085,
      "meta": {},
      "text": "Software development is not a smooth process. Customers can change their minds, come up with no ideas or deem previous ideas as unnecessary. Change can also occur from ambiguity or a misunderstanding between the customer and the development team. In the real world, customers aren't usually experts in software development and when they try to explain a specific requirement, they could be explaining a whole different thing. When the development team comes back with the results the customer would reply \"This is not what I wanted\" and the team would have to adapt and make some modifications.\n\nRequirement changes are pretty self-explanatory. it is when requirements change due to whatever reason. This could be due to miscommunication like the example shown above.\n\nTechnology changes are when a new technology rises or changes in the market demand that would deem the whole project outdated if a change isn't made.\n\nOrganizational changes are when changes are made in the hierarchy of the company are made. This could lead to changes in orders from the customer or changes in politics that could deem a specific technology as unusable or the contrary easier to use. This could stem from changes in privacy laws or when a new boss wants to use something else in their project.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264162,
      "meta": {},
      "text": "In our digital world changes occur fast and more often than in other fields of technology. One innovation, one single new idea can cause a whole market to shift and the companies to adapt to this innovation. One example would be the Smartphone, while companies like Nokia and Blackberry were the \"big players\" one year, they became unwanted and meaningless in the next because they simply did not invest in innovation and did not observe the market for new ideas and how to adapt to them. But one also has to be aware of the possibility that innovation may fail. One example that comes to mind would be Xbox Kinnect that in 2010 was on its way to revolutionizing gaming. But the interest was not as big as anticipated and the technology was not good enough yet, so Kinnect was gone within 4 years of its release. Another good example of this is Google Glass.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1264278,
      "meta": {},
      "text": "Veränderungen passieren ständig im Bereich der Softwareentwicklung, sowohl die Hardware als auch die Software haben über die Jahre massive Fortschritte gemacht. Im Bereich der Hardware werden immer schnellere Prozessoren, größere und schnellere Arbeitsspeicher etc. hergestellt, wodurch es den Softwareentwicklern ermöglicht wurde, größere und bessere Programme herzustellen. Im Bereich Software hat es auch einige Verbesserungen gegeben, die das Leben von Programmierern vereinfachen, z.B. IDEs wie Intellij oder System Contol Software wie Git. Außerdem existieren im Vergleich zu frührer mehrere Geräte, für die Software hergestellt wird und an welche sich die Software auch anpassen muss, z.B. sollten Smartphone Apps möglichst energieeffizient sein. Auch wichtig ist die Verbreitung der Bereiche, in welchen Computer heutzutage benutzt werden. Früher war deren Einsatzbereich recht beschränkt, heutzutage benutz man diese fast überall, sei es Landwirtschaft, Autos, Unterhaltung oder Banksysteme. Für jedes dieser Systeme gibt es andere Anforderungen, sei es Effizienz, Sicherheit etc... wodurch die verschiedensten Programme benötigt werden. Es gab auch Änderungen in der Organisation der Softwareentwicklung, während ältere Systeme auf Wiederholung und strikte Ordnung aufgebaut waren, werden nun dynamischere, anpassungsfähigere Systeme bevorzugt, welche mehr Wert auf Kommunikation legen. Ein Beispier dafür ist das SCRUM Modell.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1264543,
      "meta": {},
      "text": "Change in Software development happens due to changes in technology itself and its environment (competitors, legislation etc.). Thus, being ready for everything and predicting every hurdle is very hard. Therefore, software development is usually not entirely planned but rather adapted during the process.\nRequirements changes can occur due to many reasons for example For example you create an app like instagram to share pictures and videos but now due to Tiktok you are threatened and want to also appeal to that same market. That's why you need to create new features that weren't required in the first place. Other reasons of requirement changes can be if important stakeholders of the project have been left out and are onboarded on the project later on or if the requirements weren't well defined in the first place.\nTechnology changes can occur if  you realise that your technology is either outdated or doesn't fit the intended purpose. For example you want to create a platform to store data of a company safely and use an on-premise infrastructure but new developments require high availability of data so you need to switch to cloud computing.\nOrganizational changes can happen if your budget decreases (if sponsors bounce) and people are fired, if the client's organisational structure changes or as you introduce new sponsors/stakeholders.\n\n- partly quoted from me (Katja Sies, ge43lot), SS21\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265345,
      "meta": {},
      "text": "Software requires a high paced and flexible development process, as is involves of problem solving, making it hard to predict how long a task will take. \"Agile software development\" allows teams to quickly react to user feedback and unforeseen challenges and deliver their software in a reduced time span.\nFor example, as it is impossible to write bug free code, teams may have to reaccolate resources and restructure their timeline in order to quickly address critical bug fixes and security vulnabilities by prioritizing it over the development of new features. \n\nRequirement changes occur due to an increased understanding in the needs of the different parties involved, new technologies becoming available or changes in regulations. For example, due to the PSD2 directive by the EU, many online marketplaces (e.g., Shopify) had to change their implementation to meet the regulations. \n\nDue to the fast pace at which technology is advancing the requirements of a project may have changed by the time it has been conceived. A new chip (e.g., Apple’s M1 chip) may have been launched during development and the software will have to be optimized for the new hardware. External factors like these can’t be predicted during the planning stage of the project. \n\nA software project might be subject to changes in its structure. Software is part of a fast-moving industry that sees many software products tested and killed at a fast pace. This leads to the constant restructuring of teams to efficiently allocate the resources. Google is particularly known for this practice (e.g., Google Allo, Google Currents etc.) and allocates their developers to more promising projects like Stadia. \n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266061,
      "meta": {},
      "text": "In der Welt der Softwareentwicklung dreht sich heutzutage alles um die Wünsche des Kunden. Diese Kundenwünsche verändern sich besonders in der heutigen Zeit mit einer instabilen Wirtschaft, der sozialen Netzwerke, Telekommunikation und neuen technologischen Fortschritten ständig. Darauf muss auch bei der Softwareentwicklung so gut wie möglich eingegangen werden, denn Sie ist dementsprechend kein empirischer, linearer Prozess der durchgehend geplant werden kann, sondern muss immer wieder überprüft und adaptiert werden. Ein Beispiel hierzu aus der realen Welt ist zum Beispiel das Bodybuilding. Dabei gibt es keinen stetigen und linearen Muskelaufbau, sondern der Athlet macht Fehler, lernt aus diesen nimmt in Bezug auf die Ernährung und dem Training regelmäßig Anpassungen vor und überprüft in stetigen Abständen (vgl. Sprints bei agiler Softwareentwicklung) das Ergebnis. \n\nRequirements changes: Wie oben erwähnt ändern sich die Anforderungen an die zu entwickelnde Software laufend, weshalb das Entwicklungsteam hier flexibel und anpassungsfähig bleiben muss. Beispielsweise gibt es im Fachbereich in dem die Software eingesetzt werden soll plötzlich neue Datenschutz/Vertraulichkeitsstufen, weshalb sich neue Anforderungen an die Software ergeben. \n\nTechnology changes: im heutigen Zeitalter ändern sich technische Vorgaben sehr schnell und müssen bei der Entwicklung einer software daher flexibel umgesetzt werden können. So kann sich beispielsweise durch ein Update eines Programms zu dem die zu entwickelnde Software eine Schnittstelle haben soll eben jene verändern oder die Hardware der Endnutzer wird ausgetauscht, was ein verändertes UI zur Folge haben kann. \n\nOrganizational changes: Auch das Organigramm eines Unternehmens kann sich im Laufe der Softwareentwicklung ggf. ändern, was neue Zuständigkeiten zur Folge hat. So kann sich beispielsweise die komplette Aufteilung des Fachbereichs ändern, was bei der Entwicklung des Produktes beachtet werden muss. \n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266162,
      "meta": {},
      "text": "Change in Software development is inevitable and occurs due to many reasons in which we can classify in three areas: requirements changes, technology changes and organizational changes.\nAn exemple for it in real life like we already said during the lecture is Nokia which was back then a leader in manufacturing phones and then fell with the creation of smartphones because it didn't adapt.\n\nRequirements changes can occur due to changes in user requirements or increased understanding if the shakeholders' needs which leads to mandatory change in Software development. For exemple the user may want or need new functionalities which must be added in order to remain viable and scale. Like Instagram and youtube who added the shrot stories due to demand from the users after the apperance of Tiktok and the huge demand for it.\n\nOn the other hand as we all know, Technology is changing and it's changing everything in its way like the way we communicate, shop, learn and work. For exemple smartphones, laptops and automobiles are progressing and getting more and more powerful, that's why we need to adapt to this change in order to stay in the market in terms of quality, time and costs.\n\nOrganizational change refers to the actions in which a company or business alters a major component of its organization, such as its culture, the underlying technologies or infrastructure it uses to operate, or its internal processes.\nExamples include going from brick-and-mortar to e-commerce, completely rebuilding the website, launching a new department...\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261734,
      "meta": {},
      "text": "Um den Grund für Änderungen in allen drei Bereichen zu erklären, verwende ich den Begriff \"VUCA World\" (V= Volatility, U= Uncertainty, C= Complexity, A= Ambiguity). Dieser Begriff lässt sich wunderbar auf diese drei Bereiche anwenden. \n\nVolatility\nWir leben in einer Welt, welche extrem unbeständig, instabil ist & in der kleinste Veränderungen unvorhersehbar werden. Folgernd daraus, muss der Prozess einer Softwareentwicklung stetig an die neuen/heutigen Veränderungen in der Welt angepasst werden. z.B Während des Softwareentstehungsprozesses können neue zuvor nicht eingeplante Anforderungen an die Software gestellt werden, aufgrund von neuen Marktgegebenheiten bzw. Wettbewerbssituationen. —>AgileProjektplanung\n\n\nComplexity & Uncertainty \nWir leben in einer Welt, die komplexer und vielschichtiger denn je ist. Vor allem die Bereiche der Digitalisierung & Technologiebranche haben im letzten Jahr -aufgrund der COVID 19 Pandemie- an enormer Veränderungsgeschwindigkeit und Schnelllebigkeit zu genommen. Das hat enorme Auswirkungen auf die Softwareentwicklung in Technologiefeldern. Die Berechenbarkeit und Vorhersehbarkeit von diversen Ereignissen (z.B Wandel von Technologietrends, Anpassen der Software für Technologien an neue Gegebenheiten durch z.B neues Konsumverhalten oder disruptiver Technologien) geht stark zurück. Allgemein ausgedrückt, unterliegen Technologien vielen Einflüssen/Variablen, die sich durch eine hohe Volatilität & Komplexität schnelllebig ändern\nkönnen. Darauf muss die Softwareentwicklung z.B mit agilen & veränderungsbereiten Planungsmethoden oder stetiger Bedarfsanalyse // Statusquo Analyse entgegenwirken.\n\nAmbiguity\nWir leben in einer Welt, die Mehrdeutiger denn je ist. Jeder Mitarbeiter einer Softwareentwicklung besitzt abstrakt dargestellt, seine eigene (Land)-Karte in Bezug auf Informationen, Zielvorstellung & Projektumsetzung. Aufgabenstellungen & Informationen werden unterschiedlich interpretiert. Es können Missverständnisse aus den verschiedenen Rollen eines Softwareentwicklungsteams, aus unterschiedlichen Aufträgen & diversen Schnittstellen entstehen. Dem kann z.B durch eine effiziente & agile Rollenverteilung entgegengewirkt werden oder durch tägliche „Wrap Up“ Sessions, um Kommunikationsprobleme zu vermeiden.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262473,
      "meta": {},
      "text": "One reason why change can happen in software development is when the requirements for the project or the environment where the project is developed changes. For example - the client wants to add a new feature or a new need for the project is recognized through research from the customers. This means that there are changes that have to be applied on the project. \nWe already explained what requirement changes are - they can be the needs and wants of the customer and the needs and wants of the users. Technology changes can be defined as the environment changes - during the time, in which the software is developed, developments in the technology can also appear. In this case the developers should make sure that the software works well with the latest technology improvements. Organizational changes can be a set of things. For example there may be a change in the deadlines, so that the whole timeline has be changed, or there may be a problem with one of the team members that has to be resolved - those type of problems can also vary.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263126,
      "meta": {},
      "text": "The change in software development happens due to a few reasons, like insuffiecient requirements provided by the client (for example, when during a proccess a client comes up with a new function he or she would like to be implemented), external factors (a new technology or method being developed) or a change in the team working on the product.\n\nExample of change: a client suddenly reduces a budget he or she is willing to spend on this product and therefore the software development team is forced to start looking for a new ways to create it or alter it in a way that would require smaller funds.\n\nRequirement changes: the requirement changes occur when a client does not communicate clearly his expectations or a software developer does not fully understand the client or chooses to ignore some requirements (for example, because they are too complex or the developer did not understand them).\n\nTechnology changes: the technology we are using today may no longer be relevant or used in the future and a developer has to adapt to the changing market trends, platforms and just a computer itself changing every year. For example, maybe ten or twenty years ago developer had to write all the codes himself whereas today it is possible to get a simple templet from an amazon and just fill in some gaps.\n\nOrganizational changes: these changes occur when for exaple, a memeber of the development team leaves or a dealine or the budget changes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263632,
      "meta": {},
      "text": "In general you might just say innovation as a concept causes change. The evercoming invention of better systems, methods, languages or concepts must inevitably lead to a change in how we develop software for the simple reason that if there is a better method or way to do something, then why would we not use it. Usually there is no real downside to building new projects with new technology if it actually works better. One great example for change in the actual development process are the upcoming of IDE's before IDE's were a thing, people would have their compiler and the coding process separated, they would code in text editors or something similar. IDE's simply revolutionized the development process for software making it better in almost every way. As mentioned above there was no real disadvantage to using them so people picked them up pretty quickly. \t\n\nThis example can also be used to illustrate the term of technology changes. IDE's simply were a better technology, similar things happen all the time e.g. programming languages or Frameworks improve and change all the time.\n\nOrganizational changes refer to the changes in how a team/company as a whole operates in order to develop software. One major change was from Defined processes to empirical processes. While in the defined process there is a clear roadmap of how, when and what to do the empirical processes accept the fact that noone can know everything beforehand and are more flexible in their approach.\n\nRequirements change is about the fact that while technology advances we want our systems to do more or different things that we probably did not care or think about before. For example with the upcoming of mobile phones you suddenly have the requirement for websites to be correctly displayed on those as well. \n\n \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263700,
      "meta": {},
      "text": "Often times, a software has to be changed over the course of its development or even afterwards when it has already been delivered to the customer. This change may be the result of new emerging technologies, changing requirements, changes in the market or changes in the organization. For example, when the EU created stricter rules for data protection and privacy, many softwares had to be adapted to meet these requirements. \nIn order to prevent failure and for the software to fulfill its purpose, software developers need to manage these changes and adapt to them. Over the course of developing a softare this can be done by agile software development. After the delivery to the customer, it is done via maintenance. \n\nThere are three main areas of change: \n1. Technological changes: They contain any changes of the code or the hardware. E.g. when Apple produces a new iPhone, they need to develop the software to match the new hardware so that new features like an improved camera work.\n2. Requirement changes: These changes arise when the users´ or the customer´s requirements for the software change. A company might for example start a new product line and therefore need to adapt its inventory software to contain that product, its features and its attributes.\n3. Organizational changes: This is the alteration of the work environment in the company. Causes can be government regulations, changes in the business model or in the staff. The former example of data privacy falls in this category.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263779,
      "meta": {},
      "text": "Change happens in software development because it is a very dynamic field of technology. Software is used in almost every system nowadays and therefore has to change if the system it is used in changes. And with the software the development, the technologies and tools used to develop  software and the people developing the software change. One example could be the rise of AI. It required the emergence of a completely new field of software development, new mindsets and new tools.\n\nRequirements change constantly, but especially with the rise of new technologies. For example, the software of fully autonomous cars have completely different requirements than say the software of a simple digital clock. One needs to be very safe, because it decides about life and death of its user, the other has to be perfect, because no OTA updates are possible. \n\nTechnology changes as well with the rise of those new technologies. In the early days of software development, if  you wanted to create an UI, you basically had to manually write functions to draw rectangles, circles and triangles on the screen while nowadays you can just use an graphical editor to create the same UI in 100x less time. There are countless other examples such as AI, big data, and even the abstraction levels of programming languages themselves.\n\nBut with all of those changes, the organization of the development has to change as well. To create a computer game in the 1970s, you did not have to be a graphics designer or animation specialist, you just had to know your assembly language very well. It could have easily been a one-person-project. The software  itself wasn't that complex, but the code and the development was. Nowadays the development is simpler, but the software its much much more complex. Now there are systems with 100s of millions of lines of code, so the way the development is organized and distributed between different people has changed significantly.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264496,
      "meta": {},
      "text": "Software development changes happen because companies adapt to a changing environment demanding more modern and efficient ways in development.\n\nRequiremental changes\n- software intense projects -> collaboration tools, open source\n- scalability of software -> platform independent approach, market analysis\n- long-term maintenance of software -> discussions about structure and modelling to keep software maintainable\n- compatibility to other sotware -> research on standarts\n\nTechnology changes\ncloud computing changed the way of integrating other services and software, eases the setup of servers.\nit demands research to handle future technology changes\n\nOrganizational changes\nmodern positions and job tiltles makes it easier to hire employees\nmodern processes and routines makes the team work efficient as they know from elsewhere",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264641,
      "meta": {},
      "text": "Change in software development happens, when there is a change to the requirements of the software in any kind of way. One example of the real world could be the rapid growth of a start-up that now needs to adapt their software to their organizational and requirement changes. \n\nRequirements changes: Due to changes in the environment of the customer, different requirements develop. This can be for example: \n- A change in the user requirement\n- Increased stakeholder/customer needs\n- New political requirements\n\nTechnology changes: Due to new technologies software has to adopt to these and has to be changed. For example: \n- Availability of completely new technologies \n- New technological processes in the company\n- Adaption to new hardware \n\nOrganizational changes: Due to changes in the organization, the software has to be updated to meet the new needs. This could be for example: \n- A Reorganization of the customers organizational structure\n- Growth of the company \n- Change in the company's budget - higher or lower ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264829,
      "meta": {},
      "text": "Veränderung resultiert aus der Notwendigkeit einer Assimilation. Genau so verhält es sich auch im Bereich der Softwareentwicklung. Bestimmte Umstände können dazu führen, dass Änderungen an bereits bestehender Software oder an von jenen betroffenen Konzepten vorgenommen werden können, wenn nicht sogar vorgenommen werden müssen. Diese Anpassung lässt sich am besten durch das treffende Beispiel der Evolution abbilden. Dieses aus der realen Welt stammende Exempel steht in enger Relation zu Veränderungen in der Softwareentwicklung. Wie auch die Evolution nur dem Zweck dient, Lebewesen und Umwelt an Zeit und äußerliche Begebenheiten anzupassen, so resultieren auch Veränderungen in der Softwareentwicklung, zurückbezogen auf die Anfangsthese, nur aus der Assimilation. Sei es die Anpassung an die Präferenzen der Zielgruppe(n), seien es neue finanzielle Grundlagen, Fehleinschätzungen im Zeitmanagement, oder die Ineffizienz des Produkts. Die darauffolgenden Veränderungen werden stets getätigt, um sich an die neuen Begebenheiten anzupassen. \n\nUnter „requirements changes“ versteht man Veränderungen, die aufgrund meist neuer Anforderungen an das Produkt vorgenommen werden müssen. Sollte das Produkt z.B. nur noch am zentralasiatischen Markt verkauft werden, so  folgen Veränderungen am Sprachdesign sowie Anpassungen aufgrund eventueller kultureller oder religiöser Gepflogenheiten.\n„technology changes“ betreffen Veränderungen, die aufgrund technischer Aspekte getätigt werden. So werden Projekte bei Progression im technologischen Bereich an die neuen Möglichkeiten angepasst, um beispielsweise die Effizienz oder Benutzerfreundlichkeit zu steigern.\n„organizational changes“ können durch Unstimmigkeiten oder Vernachlässigung in der Organisation auftreten. Ein Beispiel hierfür wäre eine nicht klar strukturierte Kollaboration zwischen zwei Teams, die für jeweils unterschiedliche Aufgabenbereiche, welche im Endprodukt jedoch komplementär zueinander stehen sollen, zuständig sind, durch fehlende Kommunikation aber ihre Arbeiten inkompatibel zueinander gestaltet haben. ",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1264947,
      "meta": {},
      "text": "Because the world around the Software changes and by that the Software itself has to adapt to these change by changing itself. If, for example, Dark Mode suddenly becomes an hard-requirement for any kind of UI and any website without darkmode is seen as outdated, the software needs to change and adapt.\n\nRequirement changes are changes that the user/customer might see as neccesary and unbearable to not have, or changes that are forced upon a software in order to be legal. This can either be customers demanding better Privacy and Data Security or the Country and its laws requiring better Privay and Data Security.\n\nTechnology changes are changes within the layers of the technology, that the user/customer might not see but the software and its designers have to adapt to, this might be a change in a library/framework used or the uprising of a more powerful and useful Language/Technology. There was a large technological change within the discord bot community when the second biggest library discontinued the library and thus most developers had to learn a whole new language and recode all of their features.\n\nOrganizational changes are changes that force the team to rethink/replan parts or the whole software, this can for example be a cut in the budget or a moving of the deadline closer so everyone has to revalue their priorities, time shedules and plans to fit with this organizational change.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265882,
      "meta": {},
      "text": "Change in software development may have different reason. As our world is changing, and our daily life is changing, so does software development. But the change may not only be caused by the examples below (requirements, technology, organizational) but also due to insufficient requirement eliciation, insufficient analysis and design, or inefficient implementation.\n\nRequirement changes:\nA developer team is getting their requirements from customers. The customer is setting the requirements he has for the job and these might change over time. But requirement changes may not only come from customers. Imagine you work at a newly found company launching a software-product in Germany. After becoming quite successful, the company wants to expand into different markets, so while also rolling out new features, old features have to be adapted (changed) to different languages and possibly also country-specific regulations.\n\nTechnology change: \nTo deliver state of the art products, developers have to deal with a lot of technological change. Some prominent examples come from changes/updates to different programming languages. As for example the introduction of HTML5, which allowed developers, to implement video and audio. Previously, with HTML4, developers had to use additional plugins for video and audio. \n\nOrganizational change: \nIn an organization, it is normal to have some turnover. People join, and people leave teams. If for example a team-lead of a software project is leaving, the team itself, or the new team-lead has to reorganize and reprioritize (change) tasks and make sure that the timeline is still met. To make sure that no important information is lost with turnover, exact documentation is key. \n\nDisclaimer: Please note that some minor aspects from my solution from EIST last semester have been reused (Thomas Schuhbeck - ga84xoc)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266278,
      "meta": {},
      "text": "because nowadays people needs more complicate software to manage their data and fulfill their needs for using internet in their daily life ex. send email, social media, communication, life streaming but the old version of software cannot fulfill the fast needs and changes for customers, and they didn't have strictly structural process or method like Scrum or OOP. EX.  from System Development Life Cycle( which is a cycle for developing software and highlight on maintaining but the time and money cost is huge) to Scrum which is faster and flexible and can fulfill costumers' needs instantly. \n\nrequirements changes: in the past costumers didn't have to store huge data so hard disk is enough and download to computers but nowadays people usually use cloud computing service and download online\nthere are more complicated projects to be finished nowadays instead of that in the past: ex. online games (which needs multiple layer architecture service) and ConsoleGame (which don't)\ntechnology changes: to be give people a more convenient life so technology will improve \nLow-level programming language become high-level programming language to let people easy to understand and develop software better and faster\norganizational changes : from a strict Hierarchy organization to   horizontal organization to reduce budget and have more Transparency",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261676,
      "meta": {},
      "text": "I think, that change happens in software development because of the constant modernization of the world, and constant globalization. The world is always making new challenges for software developers and the software developers want always to optimize and automatize the whole process. For example, for a couple of years, we couldn't send money online as easily and fast as we can do it now. that's why the developers have the challenge to write the software for that. it should be reliable and safe, of course. that is the first example that popped up in my head. \nThe requirements changes are getting always bigger and bigger. Because of modernization and optimization customers want always more and more goods, always better, faster, and more complex. For ten years customers wanted very primitive software because there wasn't better. They wanted that Windows XP will work properly and could create a word document and save it. nowadays customers want the whole system of software like the whole model of the production process and optimization of this process. The technologies are changing either. For 15 years we had no smartphones, just Nokias with white black screens. The software inside could receive calls, SMS, play snake, and nothing more. now we can have the whole pc on our smartphone, use streaming services on 4G and play pc games on it with the controller. everything needs software. Also, organizational changes are needed. The developers can't just become the challenge and start to work. nowadays brainstorming and other techniques are needed. Also, one person can't control everything and everyone, that's why we need SCRUM for example. Which helps to organize work more effectively and decentralized.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264015,
      "meta": {},
      "text": "In order to control the corona, the Chinese government has provided everyone with a QR code through A mobile app.At first this QR code can record where the person has gone, so that people who have been to the same place as him can be recorded. And then the government began to conduct large-scale corona testing operations, so there was new requirements for this QR code:It needs to be able to record the person's test results.this is the area of requirements changes.Of course, recording huge data is not an easy task. so it is necessary to use big data, because new technological developments make it possible， this is the area of technology changes.And about the area of organizational changes: Initially, each province has its own QR code, which means that if you travel, you may need to register several QR codes. Then this QR code began to be managed by the state, which made everything more convenient, and only one QR code was required for the entire country，each province must submit its own data to the country, which is then managed by country agencies.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264864,
      "meta": {},
      "text": "In the past years, we have seen a major change in Software Development that has in some sort revolutionised the Digital World. All the new technologies are advanced to some extent due to Software development. To one extent, the whole awareness and education around Software development has leaded to people having more awareness on the content, the open source Network where people can inspire themselves on other people's work has become highly important. On another hand we have seen a massive increase in usage of software, from at this point our car, to our toothbrush, to our smartphone everything is surrounded by Software, thus it has become more and more obvious that Software development invades us. In my opinion the requirement changes consist of a certain change in the general functionement with the use of the Scrum System, that companies are able to develop and generate income. On the Technological side, I would say that Software has gone a long way, in providing us communication means, transportation, health, and many more that have drastically improved our lives. Though I believe that through Scrum the planned revolutions and known challenges should be monitored by the Scrum team. Finally to the organisational changes, software development is not a necessarily accessible subject, through Scrum we can improve task management and make sure that developments are correctly carried out. The evolution of today needs a general controlling system with the Scrum team, like the master and others that generally improve the company's success.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265835,
      "meta": {},
      "text": "Change happens in software development because the written code might need to be adapted to new external factors such as new requirements by a department as to what the output of the code should be. For instance, the sales department of a company might want to get new insights into ongoing processes and the code for a program might therefore need to be changed.\n\nRequirement change refers to the changes in the software during or after development due to changing requirements by stakeholders. For instance, the manager of a firm might want to add more features to a website in order to make it more appealing to users, which would change the requirements for the software.\n\nTechnology change refers to necessary changes in the software based on new and emerging technologies. For instance, the rise of blockchain applications has seen a shift in the way software engineers work as a lot of new technologies build upon the blockchain. Software engineers must adapt and be able to new programming languages.\n\nOrganizational change refers to the change that happens within the organization that is developing the software. For instance, if the team size is reduced in a company due to rising costs, it might mean that a single developer has to work more and adapt to accomplish a project, maybe by taking on new roles as well.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266110,
      "meta": {},
      "text": "In general, change in software development means that software evolves from one state to another state. This can be due to various reasons, such as requirement changes, technology changes or organizational change (see below). Changes to software may occur due to new or unaddressed customer/user requirements, unforeseen problems that arise, or more efficient technologies that can reduce the required computing power but must first be implemented. However, various reasons exist.\n\nRequirement Changes: \nRequirements changes imply that the software product must meet new or changed requirements. For example, this may be due to new insights into consumer behavior, market changes, or new technologies. One example is the following: Instagram as a leading software technology platform needed to adapt its product features by introducing \"Reels\". This change in user demand was generated by other apps, such as Tiktok, and resulted in new requirement for social networking platforms. \n\nTechnology Changes:\nTechnologies in Software Development are changing extremely fast. One reason is the large-scale adoption of technologies across all industries. One example of a disruptive new technology is artificial intelligence and machine learning. These technologies hold an incredible amount of untapped potential and thus bring a lot of change to the software development landscape.\n\nOrganizational change:\nOrganizational change usually describes structural changes across teams, departments or firms. This can be, for example, communication initiatives that try to achieve a new common understanding among the various stakeholders in a software project.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266299,
      "meta": {},
      "text": "Amongst the many hurdles in software development, change is one of them. Changes during a project can drastically shift the path that is currently being taken. An example is the technological shift from Nokia to Smartphones and how these present a lot of opportunities for improvement.\n\nan example for each of the 3 categories would be:\n\n1. requirement changes:\nF.e. when the client of a project wants you to change something from the initial design, or simply adds some additional information. requirement changes can range from specific add-ons to alteration of the whole project itself.\nF.e. a client of a database system adding on his desire for the function of accessing it from multiple devices\n\n2. technology changes:\ntechnology changes happen when the project team is using older technology and a better/newer version of said technology is released. F.e. if your team is using a older version of an application instead of updating/downloading it's newer version\n\n3. organizational changes:\norganizational changes are those that occur within the team working on a certain project\nF.e. when new staff is hired by a company so the work is reallocated between existing and new employees to ensure good incorporation of the new staff",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266481,
      "meta": {},
      "text": "The modern world is constantly changing. With the growth of technological progress, the implementation of more complex solutions is required. Therefore, constant changes in software development are necessary. For example, the coronavirus pandemic has brought many changes to software development (e.g. remote work, reorientation of customer requirements).\n\n* In terms of requirements changes more projects aimed at online services became required (e.g. online trading, online conferences).\n\n* One example of organizational change is that more and more team members can work remotely from different time zones, which requires a revision of the classic offline teamwork. Another example is the increasing globalization, when, for example, a software product needs to be provided not only to the local, but also to the international market.\n\n* New frameworks and languages are also making their own changes in terms of technological changes to create more complex and high-load projects.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262707,
      "meta": {},
      "text": "In software development, there are very similar reasons for change in different areas. \nA change in the requirements for the software, or different security standards, or even a technological breakthrough that makes the current use of the software obsolete.\nA big driver of change in the real world is technology. It is constantly changing the way we live our daily lives. Not so long ago, you always had to have a wallet with you to pay for something. Now it's easy to use our smartphone as a cash card. \n\nRequirements change: At the beginning of a software development project, the requirements are defined. But when a project runs over several years, the goal of the project may change, for example, due to a change in business direction. The software must then meet different requirements than defined at the beginning. The sprint model is very helpful for this. Here you can review the requirements before each sprint and define the requirements for that sprint.\n\nTechnology changes: The world is changing faster every day. Technological revolutions are coming faster and faster. New technologies bring new opportunities. To stay competitive in the market, you need to be on the cutting edge. There is no reason to develop software for an outdated technology/system.\n\nOrganizational changes: The goals of an organization can change due to third party influences. Either through a merger or simply a change in management. This can affect a software development project and its importance or focus. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263034,
      "meta": {},
      "text": "Since software engineering projects are complex and take months to finish while a lot of changes happen in the fast running outer world, projects need to respond to this change and embrace it to accomplish goals. Responding to change is key for successful software engineering, minimizing risk and guaranteeing operational excellence.\nChanges happen because of many reasons, e.g. market fluctuation and competition, different consumer demands or miscommunication between project team and customer. Another example: After an app release there a login bugs that lead to change requests.\n\nDifferent change areas:\n1. Requirements: In the beginning of the project phase requirements need to be defined but there can occur problems like misunderstandings between developer and customer. Furthermore, people can make mistakes and write down wrong requirements (writing down \"yellow button\" instead of \"purple button\"). Also, it is very hard to already know all requirements from the starts since one simply cannot predict the future.\n\n2. Technology: There are rapid changes in software technology, hardware and various process methodologies. It is all about grasping those new technologies and make use of them. If a project team has been working on a hardware project for a long time and a new simple hardware opportunity pops up, one should review and reconsider. \n\n3. Organizational: Companies grow, people are hired or leave, there are strategic changes or structural changes (acquisitions). Also, company cultures change. New people or new strategies bring new ideas to the table and impact the project's goals and outcomes.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263042,
      "meta": {},
      "text": "Change in software development happened during the last years because software requirements changed to more scalable applications that need to be delivered fast. This led to a few changes in the software development process, for example the agile methodology where software is split up into small pieces that are implemented separately. Therefore problems are recognized early and a solution can be found without much effort. But change can also happen during the development of an application. This could for example be changes in the client´s requirements during the implementation of the project, but also a faulty requirements analysis due to poor description of the desired features or unsatisfactory tests. Using agile methodology also helps with this changes because the progress gets assessed regularly and deviations can therefore be corrected early.\n\nRequirements changes means that the requirement of the software application get changed during the implementation of the project. If not handled well, this changes can affect the whole project and delay the completion of the software. Such changes can occur because requirements get overlooked, laws and regulation changes or the market demands change.\n\nSoftware Engineering is a fast developing field and new programming languages and frameworks emerge daily. So the technology changes which means that for example the right frameworks have to be chosen individually for every project.\n\nOrganizational changes means a change in the organisation of the software development process. For example when a company uses the linear waterfall model to implement software but then changes to an agile methodology such as scrum.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263685,
      "meta": {},
      "text": "Change in software development mainly occur because software products have to adapt to environmental changes in the world, for example law changes that affect privacy policies.\n\nTechnology changes can directly affect how or why software is developed and on which platforms it has to work on. A good example for this area of changes would be the rising demand and popularity of artificial intelligence which caused massive changes in which opportinuties car companies had to optimize autonomous driving. But also new programming languages can completely influence how companies work and how software engineers have to adapt by learning these new programming languages.\n\nRequirements changes can be caused by insatisfiability or be a result of changes in opinion or needs by the customer. A market priority shift can also cause requirements changes or an unspecific order which can then lead to misunderstanding within the developing process and has to be fixed.\n\nOrganizational changes can affect the work process of software development in a team. An example would be the shift from a defined process view on software development where it has repeatable patterns that get worked through almost like in an assembly line work and where failure is fatal and can get you fired to an empirical process view where it is seen as a creative work process that you can not strictly plan but work through by experiencing problems and solving those while you get more experienced with it. Therefore the risen popularity of scrums (as an empirical process model) is a good example for these kinds of changes.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263905,
      "meta": {},
      "text": "In today's world, the change applies to nearly every imaginable area but the fastest-changing area is of course technology, and therefore software development changes a lot. When we examine how much and how fast technology changes we can easily notice that the change in technology happens exponentially. For example, technology in the world didn't change so much between the 13th and 14th centuries but if we look at the last 100 years, we can see a drastic change in technology. Lots of inventions, new devices, and software coming into our lives and changing them forever. But here is the fun part: These recent changes won't stay too long because one thing that doesn't change is the change itself.\n\nNearly every day someone in the world invents or explores something new in the area of software development and in this very competitive market, the most up-to-date software survives. Because of that, we get tons of updates in a month or even in a such short time.\n\nDue to their changing lives, customers' requirements are also constantly changing. For example, today, every student needs a smartphone and a computer to successfully study at a university. But before the pandemic, one could do without a computer if they don't study a major that really requires a computer.\n\nIn software development, the computer languages and programs are constantly getting old and require change. Therefore, this area needs to adapt to changes and renew its technology to survive.\n\nAnd because of all the changes that I've spoken about, a software company should always be sure that its organizational program is up to date. For example, today, you can achieve more with agility compared to organizational maturity because the requirements of the customer and the technology are always changing, and if you can't change how you organize them, you can't survive as a software developer.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263964,
      "meta": {},
      "text": "External as well as internal factors can influence a software project. In Example, data security laws might change and thereby suddenly influence the architecture of a project. \n\nRequirement changes: The product owner, for example, might suddenly asks for new features, after management realized, that these features make sense to implement in the given project.\n\nTechnology changes: A new hacking technology is innovated, which makes a, before secure, library used in the project insecure.\n\nOrganizational changes: Elon Musk buys Twitter and the goals of the company change. Certain features are canceled or changed and, on top of that, some completely new features have to be created.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264753,
      "meta": {},
      "text": "Software Entwicklung benötigt ständige Updates und Anpassungen, da sich das Niveau für alle Teilbereiche einer Software ununterbrochen hebt. Beispielsweise braucht Software regelmäßige Sicherheitsupdates um die Privatsphäre und den Schutz der Nutzer gewährleisten zu können. Eine Software ist meistens zu komplex um jeden möglichen ungewollten Eingriff in das Programm hervorzusehen, wodurch es andauernd Änderungen bedarf.\n\nRequirement Changes sind der Wandel in den Anforderungen einer Software.  Beispielsweise kann ein Kunde während der Entwicklung einer Software neue Features zum implementieren anfragen, was eine gewisse Flexibilität in dem Zeitplan und dem Programm voraussetzt. Möchte der Nutzer eventuell eine Animation beim Scrollen einer Seite wird das selbstverständlich umsetzbar sein, auch wenn das bei der originalen Vereinbarung nicht angemerkt war.\n\nTechnology changes sind Änderungen in den technischen Möglichkeiten die den Entwicklern zur Verfügung stehen. Beispielsweise muss man manchmal eine Software \"downgraden\" um sie mit einem nicht allzu leistungsfähigen Gerät kompatibel zu machen. Genauso können neue leistungsfähigere Produkte den Entwicklern neue höhere Grenzen setzen. Völlig neue Technologien, die logischerweise neuer Software benötigt, kommen gelegentlich ebenfalls vor, wie zum Beispiel die Einführung von VR Technologie.\n\nOrganizational changes sind Neuerungen von der Seite der Organisation. Beispielsweise werden den Entwicklern neue Deadlines gesetzt, Mittel gekürzt oder erhöht und Änderungen in den Führungspositionen des Teams festgestellt, wodurch eine hohe Anpassungsfähigkeit nur zu wichtiger wird.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264770,
      "meta": {},
      "text": "Change happens in software development generally as well as during the development phase of a specific software project. The pandemic is a recent example how software development has changed in terms of organization. Working from home has become more and more popular and has established itself as the modern form of working also in non-pandemic times. When it comes to organizational issues during the development phase another example might be funds that could not be available anymore on short notice.\nA change in the area of requirements of software one can observe is an augmenting need for software that is nearly perfect as users are totally reliant to the system as their whole business is based on it. For example what would companies like the online supermarkets Gorillas and Flink do if their software does not work? If it does not work then they can not pursue their main course of business, can not generate sales and will lose customers. \nIn terms of technology changes software more and more features IoT and AI. And there is a high pressure to do so probably because it is very conveniant to use.\nAnother general change which also affects software development is an increasing globalisation and internalization. It is not unusual that your working colleagues come from all around the globe. Therefore a software developer itself has to adapt to this change by improving his english and intercultural communication skills in order to create a better working atmosphere in his own team.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265987,
      "meta": {},
      "text": "Software Development is a rapidly changing area influenced by multiple factors such as the technology involved and is therefore subject to change. \nWhen we consider the development of mobile phones over the past 15 years we can clearly see the development from a clunky piece of hardware which was only used for basic calls until now, where your smartphone outperforms entire computers used twenty years ago.\n\nRequirement changes: When first designing a mobile application for a small social media company we might have certain technologies, tools and methodologies in mind to quickly create the app and get in ready for the market. After expanding with the firm international and gaining a lot of new users these requirements might rapidly change. Suddenly we might need multiple languages, better sever connections to support the traffic the users generate and new safety or privacy requirements from the countries we enter - our requirements have changed. \n\nTechnology changes: There are only a few areas wich such a fast paced development as technology in the modern world. The recent developments of hardware supports new ways of calculations and general performance of computers which allows our software to perform much better or new tasks which were not possible in the past - AlphaGo KI outperforming the best players worldwide. \n\nOrganizational changes: Organizational changes include changes in the process and how we structure our software development. There might be a time where we need to change the team a little bit because we require an expert on a specific area, or we notice that something is not working correctly in a previous sprints. Noticing these problems and changing the organization is key even if impediments occur.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262768,
      "meta": {},
      "text": "Changes in software development happen due to the ever-changing environment, incomplete requirements, organizational restructuring etc. Therefore, it is necessary to use empirical processes to adapt and deal with these uncertainties. For example, Microsoft Windows OS constantly rolls out new updates/patches/hotfixes to improve and fix the software due to things including but not limited to new discoveries of vulnerabilities; ever-changing requirements of users and stakeholders; technological advancements.\n\nRequirement changes are clients’ requirements, government regulations and laws, influenced by technological changes, stakeholders’ needs, market competitors etc.  For example, the European data protection regulation in 2016 forced new requirements for constraints on personal data sharing for more privacy of the consumers.\n\nTechnological changes are most commonly advancements in technology however may also be changes in trends and conventions used. Technological change heavily influences both requirement and organizational changes. For example, advancements in the graphic card industry introducing ray tracing brought about many games incorporating this new technology to create more realistic environments, bringing requirement changes for AAA games to keep up to the newest top-notch standard. \n\nOrganizational changes include restructuring of organisation, process, strategies for improving efficiency or effectiveness in development. A negative change could be caused by staff changes. An example of organizational change would be the change from an organizational maturity strategy (a factory like repeatable process) common in the 1990s to using agile strategies such as SCRUM coming about in the 2000s as people widely accept it generally to be a better approach to software development due to its unpredictability needing an empirical process.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263542,
      "meta": {},
      "text": "Change happens in Software development because you have to be more productive and faster than before and to be better than your opponents and be more competitive. For example Nokia was a Marketleader in Producing and selling Mobilephones, until the first smartphones came to the market. And Nokia did not change what they are producing and did not make any Smartphones or other Innovations. So they became obsolete. They were not competitive anymore. Or an other example is scrum. It is a change, because there you have a method, where you are more agile and you have more opportunities to work in a Team.\nRequirements change is also important, because when you want to develop a software you must know what the stakeholders and the shareholders want. And also the government can add or change regulations and laws, which you also have to accept and adapt it to your system. And technology changes is for example a Innovation. For example you get a machine which cost less and does more work in the same amount of time. Or there is the example with Nokia, I explained before. Organizational change means you change your intern structure, because of external pressure or because it doesn't work anymore and you don't make any developments. For Example (hard example) if there is a hierarchy, you remove it. It can also be that the customers change and you have to adapt your software. Without Changes their is not so much development and competitiveness, and you get outdated.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263800,
      "meta": {},
      "text": "\tThe future of many technologies and especially software systems is quite uncertain, as the trend for new technologies change so rapidly. The changes in software development mainly occur due to a demand for new solutions to existing problems. For instance, mobile devices demand more specialized and new programming languages like Swift. Swift was developed specifically to program mobile devices, as it is more convenient so. However, before smart phones entered in our lives, many programs were written in older languages like Fortran or Pascal back in the day, which then became obsolete for new applications and changing demands of products. Today some older languages are still in use eve though limited, but we don't know exactly, when a new software technology will die out or replaced by another.\n\tWhen I was in primary school, my dad had a Nokia cellphone which could call, send SMS and run the Snake game. It didn't have internet or any other messaging apps. Over time, through technological developments the cell phones have become thinner, bigger and faster, thus a bigger part of our lives. Our expectations from a cell phone has therefore changed. We now expect high resolution camera, online banking and bigger memory size for apps and photos and lots of other things that we didn't think we needed before. Since these technologies have become prevalent, we cannot do without them. Just to name a few: Corona-Scan-App, WhatsApp, Gmail, YouTube etc.\n\tTo sum up, the global market and consumer society behaviors will bring rise to new technologies. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263911,
      "meta": {},
      "text": "Change often occurs because the needs and requirements of users vary with time. No software is perfect, and therefore as the needs of customers progress, the software changes accordingly.",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264052,
      "meta": {},
      "text": "There are numerous reasons why change occurs in software development. Some of the reasons I will be discussing are changes in requirements, changes in technology, and changes in an organization with the aid of practical examples. \n\nFirstly a change in requirements may be caused a client desiring a slightly different product. For instance a car company may initially want an application for their built in tablet in the car, but later they may say they instead want a mobile application for the user's smartphone. There could also be change in legal requirements which companies have to comply with e.g. Facebook complying with data protection acts. \n\nChange is also very rapid within technology. For instance in the early 2000s, designing responsive websites was relatively difficult with CSS. But around 2007-2009 there was the introduction of CSS flexbox and grid layouts, which has made it considerably easier to develop responsive websites. Hence web developers at the time had to adapt to these new changes in order to be more efficient and survive in the industry. \n\nFinally, organizational changes can also arise due to changes in management. Turnover of employees is very regular in large international tech companies, hence there may be changes in leadership, and each leader may have their own particular way of running a team and their own preferred design patterns. In addition companies may do organizational restructuring by shutting down divisions which aren't profitable e.g. Google shutting down its \"Google +\" social media application. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266106,
      "meta": {},
      "text": "Softwareentwicklung ist keine Fabrikarbeit, wo man Materalien hineinsteckt und nach festen Arbeitsschritten ein vorher klar definiertes und 1 zu 1 reproduzierbares Produkt erhält. Stattdessen ist Softwareentwicklung ein langwieriger und äußerst individueller Prozess, welcher auf ständige Veränderungen der Umgebung reagieren kann und muss. So hat bspw. die Coronakrise etliche Softwareprojekte mitten in der Entwicklung grundlegend verändert, da sich durch forciertes Homeoffice viele Arbeitsstrukturen geändert haben und sich auch eventuelle Anforderung der Kunden an die Coronakrise angepasst haben.\nDies erwähnt bereits zwei der drei großen Kategorien der potenziellen Veränderungen. Erstens können sich, wie erwähnt, die Anforderungen der Kunden während des Entwicklungsprozesses ändern, sei es durch etwas grundlegendes wie die Coronakrise oder auch einfach dadurch, dass sich ein Unternehmen innerhalb der Jahre der Entwicklung vergrößert hat und somit etwa erweiterte Datenmengen oder ähnliches Verwalten muss. Zweitens kann sich die Organisation eines Projektes ändern. Etwa durch die oben genannte Ausweitung des Homeoffices, oder durch eine zwecks gestiegener Anforderungen durchgeführte Vergrößerung des Teams. Drittens, und im Bereich der Informatik sehr präsent, ist die Veränderung der verfügbaren Technologie. Das kann bereits im Kleinen sein, wenn etwa eine, für das Projekt sehr nützliche, neue Library veröffentlicht wurde. Aber vor allem auch im Größeren verändern sich die Tools und Technologien ständig, so muss bspw. stets evaluiert werden ob nicht eine neuere Programmiersprache verwendet werden soll, welche diverse Vorteile in unterschiedlichen Bereichen bietet, oder ob lieber auf eine weiter ausgereifte, im Team bereits bekannte aber ältere Sprache zurückgegriffen werden sollte. Jedoch ist das nur eines von unzähligen Beispielen, wo sich die Technologie häufig ändert und ständig zwischen, aber auch während Projekten, im Auge behalten werden muss.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266244,
      "meta": {},
      "text": "The most forward reason for change in software development is the change of technology. There are always new programming languages,  abstractions, better IDEs and representations. A general trend towards higher level programming languages and more abstraction can be seen, especially considering long term changes. First there where punch cards, then assembler and then the first high level languages like Fortran (C, python). The peak of abstraction from the hardware being UML Diagrams/ Modeling. There is also a trend towards standardization, for example the USB-standard or the UML-standard. The Hardware is changing a lot, for example might the optimization of the amount of used memory not be as important anymore, because there is a lot of cheap memory today. (optimization for less memory accesses still important). This also changes the required software as companies might not need software that needs few space, but rather fast software. Not long ago software was sporadically used in cars, because they had limited memory for it, but now cars contain up to 100 million lines of code.\nThere is a change in the organization of the development, too. Mainly towards agile empirical processes for development like scrum. Within the last decades one recognized, that software development is not an consistent, invariant or easy process. Software development underlies changes for example due to the fast evolving technology, but also because there are now a lot more laws surrounding internet, data privacy etc. As it changes the software development can't be described trough a defined consistent process. Empirical methods like scrum are more useful for software development, because the process is so complex and divers people are working in it, that it can only be improved trough experience and  a trial and error approach. Meaning that there are no clear rules and the process improves by trying.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266426,
      "meta": {},
      "text": "Changes happen in software development, because companies and development teams strive to develop the best product possible using the human resources, time and technologies as efficient, as they can. This instigates the using of the newest approaches to be on the cutting edge of the industry. For example Nokia not so long ago was the leading company in producing mobile phones, but when the market changed and smartphones where released, they couldn't adopt, and it turned out, that their technologies and projects, they had to offer, were no more competitive.\nA good team of developers has to be adaptive to changes of requirements. Nowadays the requirements change swiftly: for example software developers have to know several programming languages to stay competitive, they have to acknowledge all the new possible technologies, to be socially active, to be capable of interacting efficiently within the team.\nThere also organizational changes that happened to software development branch over the last decade. They are involed by the  willing of companies to optimize the work within the development teams, to make them more efficient. For example Scrum is a very popular approach today, which is belived to make the development process better and adaptive.\n\nTechnology changes are obvious even for people, who are not connected to the development of new software product. Every year companies invest large money to have the best possible technologies, trying to predict the future of the market by experimenting and adapting. For example Nokia case shows us, how the technology change almost destroyed the leader of the market.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261283,
      "meta": {},
      "text": "When developing software change might happen because of political reasons like the Ukrainian war right now. For example, if the Ukrainian military instructed a software company with writing some important new code features for their national security agency they might need the software earlier than they thought because the war broke out. This is a good example of organizational change because the software company that got the job might need to assign more developers to finish on time. This demands a newly organized time plan. \n\nAn example of a requirement change could be that a car company that ordered some special software for their factory got new robots due to some event that destroyed the old ones and those new robots require some extra features on top of the ordered ones. This changes the requirements the software company has to fulfill and therefore might change their internal planning.\n\nTechnology changes can occur for example when new hardware gets implemented into systems. An example is could be the new MacBook Pro which has a new chip and therefore might not support software written for other chips. In this case, it is just an individual case for a few models but if suddenly all new computers would have some kind of new features that make old software problematic this can lead to vulnerabilities that force the software developers to adapt to the change in technology.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1261848,
      "meta": {},
      "text": "In the following I am going to explain why change in software development is essentiell. Our modern world is constantly developing and changing, the needs of people are different every day, that is why change is really important for the software development. The softwares running on the machines people use everyday have to be up to date in order to be supporting to the community. For example, a few months ago we could not imagine having a big part of our classes online instead of on-site. Due to the sudden pandemic we were all forced to stay at home and adjust to the change. If software development can't catch up on those (sudden) changes and on those necessities, it is meaningless for a such quick developing society like ours and it would become an unnecessary burden overtime. The corona pandemic is a great example for those changes, especially the asked three ones. Due to the pandemic the needed requirement changed a lot. Schools who were just fine beamer and projectors before, now needed a complete new system which would allow them to teach their students, even at a high distance. This also shows an organisational change. Before, the school had their classrooms, blackboards and chalk to teach the students the needed stuff, but after Corona, they\nwere not able to rely on their old way of teaching anymore and a organisational change was needed. Due to those changes in requirement and organisation, a new technology (at least for the school) was needed as well. New softwares who support online learning had to be programmed, so that students could continue learning. This is why change (and development) is essential in software development.",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1263940,
      "meta": {},
      "text": "Software development is about the knowledge that we discover.  By using software systems, we understand more and we even acquire more knowledge, and that is by building a model of something that needs to be more understood in the real life, by processing it, working with it, using it we can then control it, or even improve it, avoid anything that could cause harm. so if software development reflects on the real life, the real world, then it would be logical that change happens. As we all know, real life is complex , it keeps on changing every day, even if not everyone notices, but everything changes a bit every day . The speed, the human brain, the ability of understanding is forever changing, and those are a few factors that makes the world ever changing. If we are going to model things from the real world with software development, change has to happen, otherwise the software system would not be useful to us at some other time. We take a simple example from our daily life, the use of cellular data in our phones to get internet. It was called 3G. then it was 4G and now it is 5G. why does it keep on changing? because with the world changing, we need more capable networks, more speed and higher connection as long as the smartphones keep on developping, which will never stop and that is technology changes. \nrequirements changes is taking requirements from clients and adapting to change so it can always be a useful software. \nand organizational changes is about the actions of those who model the software regarding another factor to adopt to the changes of the world for example rebuilding the whole website to be newer and more understandable to the user. ",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264441,
      "meta": {},
      "text": "Veränderungen müssen in der Softwaretechnik ständig passieren um nicht unter der Konkurrenz unterzugehen. So wie sich die Welt verändert, ändern sich auch die Bedürfnisse der Menschen. Diese Bedürfnisse müssen abgedeckt werden. Ein Beispiel ist die Softwareentwicklung in der Automobil-Branche. Autos brauchen heutzutage Sicherheitssoftware (z.Bsp. um die Temperaturen, Druck) um dem Fahrer und den Passagieren Sicherheit zu gewähren. In alten Autos war dies nicht der Fall. Ändert ein Unternehmen dies jedoch nicht, so wird das Produkt, in diesem Fall sicherheits bedingt, uninteressant für potentielle Kunden.\n\nrequirements changes:\nSoftware muss die Bedürfnisse der Menschen befriedigen. \nIn unserer Zeit dreht sich vieles um das Thema Umweltschutz. Auch beim Autofahren wollen Menschen dies probieren zu Berücksichtigen. So haben mehrere Automobilhersteller sich dazu entschieden ein \"Eco-Modus\" einzuführen wo die Software probiert so umweltfreundlich wie möglich zu fahren. \n\ntechnology changes:\nNeue Hardware bedeutet oft auch neue Software. \nBleiben wir bei der Automobilindustrie. Autos sind nun mal auch nicht perfekt. Merkt man dass ein Sensor nicht so akkurat ist wie man es gerne hätte so können neue Sensoren eingebaut werden. Jedoch haben nicht alle Sensoren die selben Ausgaben/Software. Hier muss die Autosoftware angepasst werden.\n\norganizational changes:\nIm laufe der zeit hat sich die Gesellschaft geändert und somit auch das zwischenmenschliche. Wie Menschen arbeiten wollen und wie man das meiste aus Ihnen herausbekommt für das bestmögliche Produkt. Fließbandarbeit war früher sehr vertreten. Wenn ein Fehler gemacht wurde, war das schlecht. Heutzutage lassen Firmen ihren Mitarbeitern mehr Freiraum um sich auch anders an ein Problem ranzutasten. Hier ist jeder Mensch anders und das wird als Vorteil gesehen um eine möglichst differenzierte Darstellung des Lösungsweges zu finden. Am Ende entsteht ein Produkt, welches performanter als das am Fließband ist.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264676,
      "meta": {},
      "text": "From my perspective, changes happen in software develoment from two aspects: internal and external.\nInternal resons can be requirement changes, organizational changes, and etc.\nExternal resons can be technology changes, enviorment changes, and etc.\n\nNokia can be an example for technology change because it didn't catch the shift from mobile phone to smart phone and was squzeed out the market.\n\nThree areas of requirements changes:\nTechnology changes: the software development process may invovle immature technology or vice versa, invovle the outdated technology that doesn't fit the customer need anymore. Example can be the Nokia failure stated above.\n\nrequirement changes: the possible reasons for requirement changes may be that the customers' need changes or the requirements are not well defined or misunderstood. Example can be enviorment change: new regulations or constraints cause the original requirement not legal anymore.\n\norganizational changes: the possible reasons may be the changes of the whole development team or changes of the stakeholders. Example can be the recent news about that Elon Mask buy twitter. This may cause the twitter software delvopment team to change the software development that depends on the new vision and decision of Elon Mask.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264678,
      "meta": {},
      "text": "Not too long ago, the dominant Software Development methodology was the Waterfall Method, which used very well-defined processes to divide the development process into engineering steps following strict rules. This process is the same as the construction of physical buildings such as bridges, buildings, roads, and dams.\nHowever it is  very common for a software system to require major revisions during the construction process (after all requirements and documents are fully completed) due to changes in technology or business, but with Waterfall Method deviation are not allowed, so a lot of extra problems occurs during Software develpment\n\nIn order to face these problems, software engineers have developed many new technologies and practices to redefine the steps of the software construction and development process. Agile Software development uses \"empirical\" processes with are not strictly planned and can adapt to changing requirements. These techniques effectively reduce the occurrence of problems, improve the construction and development process, and become a recognized practice method for software engineering.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265256,
      "meta": {},
      "text": "Mittlerweile stehen uns Unmengen mehr Rechenleistung zur Verfügung als vor 10 Jahren. Währenddessen werden die Ansprüche, die Kunden an IT Firmen stellen, immer höher und komplexer. Um mehr und mehr Code zu managen und schneller zu entwickeln werden mittlerweile neue Methoden für die Softwareentwicklung benötigt. Außerdem benötigt ein Projekt mittlerweile sehr viele Einzelpersonen und diese im Team zusammenzubringen ist eine Herausforderung. Jedoch spielt nicht nur die einmalige Entwicklung eine Rolle, sondern natürlich auch das Instandhalten des Codes sowie das Hinzufügen von neuen Funktionen, um die User Experience zu verbessern. Man benötigt einen Überblick über die Veränderungen, die innerhalb einer neuen Version gemacht wurden. Zudem darf es nicht passieren, dass ohne eine bestimmte Person so viele Details über Einzelheiten im Code verloren gehen würden, dass keiner mehr imstande wäre, das Projekt weiterzutreiben. Sicherheit ist mittlerweile auch zu einem großen Thema geworden, das im Prozess der Softwareentwicklung fest verankert sein muss. Nicht nur das Schützen gegen spezifische Angriffe von außen durch Hacker, sondern in bestimmten Fällen auch das komplett sichere Ausführen von Code. Ein gutes Beispiel dafür ist ein Airbag. Es werden unzählige Situationen mithilfe von Testcases geprüft, damit nichts schief gehen kann und diese Testcases müssen natürlich auch gemanagt werden. In der IT sind wir in einem sich schnell entwickelnden Umfeld und gerade im Bereich Software Development müssen uns daran anpassen, da Techniken von vor 20 Jahren längst nicht mehr mit den heutigen Voraussetzungen mithalten können.",
      "score": 16.7,
      "language": "GERMAN"
    },
    {
      "id": 1265426,
      "meta": {},
      "text": "Ein Grund dafür könnte sein, dass sich das Geschäftsumfeld seit Beginn des Projekts geändert hat. Ein anderer Grund kann sein, dass der Kunde eine neue Geschäftsidee entwickelt hat, die nun andere Lösungen erfordert.\nEine Veränderung, die von der Software-Seite ausgeht, sind Lücken in der Analyse der Prozesse, die implementiert werden müssen.\nAuch Fehler in Beschreibungen oder ein unzureichendes Verständnis der Anforderungen des Kunden erfordern Änderungen. Ein Beispiel für Änderungen in der realen Welt sind neue Geschäftsfelder wie Internet of things, die mit der alten Software kompatibel sein müssen. \nRequirements change ist die Veränderung der Anforderungen an die Softwareentwicklung, das können zum Beispiel weitere Funktionalitäten oder eine Kompatibilität mit einem anderen Betriebssystem sein. \nTechnology change ist die Veränderung der Technik, zum Beispiel andere Festplatten oder Kameras, die von der Software richtig und optimal verwendet werden müssen.\nOrganizational changes sind Veränderungen der Struktur der Software, beispielsweise eine andere Struktur des Codes oder der Rechnerarchitektur. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265474,
      "meta": {},
      "text": "Unlike the process of manufacturing cars for example, software development has oriented itself (at least in the last couple of years) more and more towards being agile and adaptive - meaning that there are no fixed ways of handling problems occurring in development. Software Development is such a complex and versatile construct that having strict guidelines could be more harmful than helpful. \n   Being flexible and agile in the real world is very important in this connected world just as well, which dealing with Covid19 over the past years has taught us e.g.. Nobody expected a pandemic of such scale and thus governments had to adapt and come up with solutions \"on the fly\".\n\n\n(if that is whats asked for)\nRequirement Changes for existing projects happen all the time, for example when a customer had a slightly different product in mind or there are loopholes that are found in the process.\n\nTechnology Changes happen all the time since our modern world is evolving faster and faster, ranging from hardware upgrades to new developed programming languages.\n\nOrganizational Changes are the way things change when it comes to how software is developed from a team perspective. A (fairly) new way of organizing SD are the so called SCRUM-Teams, which work in sprints.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265797,
      "meta": {},
      "text": "Mit dem Fortschritt der Technik verbessern sich auch die Computer. Es wird also auch neue Software benötigt die zb zur Optimierung mit mehreren Kernen arbeiten kann. \nIn der echten Welt erschließen sich durch Technologie neue Jobs und andere werden nicht mehr benötigt, da sie zb mit Robotern durchgeführt werden können.\n\nMittlerweile ist es sehr wichtig geworden, dass die Software schnell arbeitet um die gesamte Rechenzeit zu verkürzen und es damit benutzerfreundlicher zu machen. Früher hatte Software eine noch nicht so große Zielgruppe, sodass das nicht so wichtig war.\nDes weiteren wird die Software immer komplexer und für eine App wird ein ganzes Team benötigt, welches alle verschiedene aufgaben übernimmt, wie die Funktionalität, Sicherheit usw.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1266253,
      "meta": {},
      "text": "Changes in the software development process are inevitable. The simple reason for this is that it is impossible to determine all the requirements for a product in advance, the working environment is highly dynamic, and the world changes as development progresses. For example, technological advances have brought significant changes in the way software is developed, moving from a waterfall model to an agile methodology. In the following, I would like to distinguish requirements, technology, and organizational changes.\n1. Requirements changes occur due to changes in customer needs, market demands, developers' understanding of the products, and changes in the organizational policy.\n2. A technological change can be defined as an increase in the outputs possible with a given level of inputs through the processes of invention, innovation, and diffusion. The vivid examples are automobiles, smartphones, laptops, and wind turbines.\n3. Organizational changes, in their turn, pertain to the altering of structures, strategies, procedures or cultures of organizations. Companies adopting the Scrum method to deliver a software can serve as a good example of an organizational change.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262584,
      "meta": {},
      "text": "Der Hauptgrund für die Veränderung in der Software Entwicklung ist die Tatsache, dass gerade in diesem Bereich sehr große Schritte innerhalb weniger Zeit gemacht werden. Beispielsweise durch die signifikante Steigerung der Rechenleistung oder auch den Ausbau der IT-Infrastruktur innerhalb der Unternehmen und der Staaten. Ein Beispiel aus der echten Welt wäre hierfür das immer mehr aufkommende Cloud-Computing. So können jede Menge Daten extern gespeichert und deutlich schneller auf Anfrage verarbeitet werden. Unternehmen, welche sich auf Cloud-Computing spezialisiert haben, besitzen über enorme Rechenleistung, womit Ihre Kunden mit nur wenig Aufwand komplexe Berechnungen in sehr kurzer Zeit durchführen lassen können. Dadurch werden auch die Kunden in ihrer Software-Entwicklung viel flexibler.\n\nRequirements Changes bedeutet, dass sich während eines Projekts die Anforderungen aufgrund verschiedener Ursachen ändern. Beispielsweise kann das Lastenheft von einem Vorgänger zu ungenau beschrieben worden sein und es müssen noch weitere Definitionen hinzugefügt werden. Auch wird im Laufe eines Projekts die Idee des Kunden nach und nach besser verstanden, wodurch nachträglich Anforderungen an Funktionen geändert werden müssen.\n\nTechnology Changes bedeutet, dass sich bei einem langjährigen Projekt die Technologie soweit verändert hat, dass es nun Sinn macht, gewisse Teile der Software anders als gedacht zu implementieren. Wie oben schon erwähnt, ist Cloud Computing eine zur Zeit aufstrebende Art der Software-Entwicklung. So können während eines Projekts Teile, welche ursprünglich im Haus implementiert werden sollten, auf externe Unternehmen verlagert werden. \n\nOrganizational Changes bedeutet, dass sich die Struktur innerhalb eines Unternehmens ändert. Das kann Auswirkungen auf Berechtigungen innerhalb eines Software-Unternehmens haben und somit sich die ursprüngliche Vorgehensweise ändern.\n\n\n\n\n\n\n",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1263047,
      "meta": {},
      "text": "To begin with, the changes happen during life, because the world does not stay at one position: evolution process, time and from surely people are developing, discover new things. Speaking about software engineering, changes happen because of discovering new technologies, obsolescence of management systems etc. \nSo, the change – this is an act of transformation in response to a need. Change works to improve the performance of an enterprise. These improvements are deliberate and controlled through business analysis activities. For instance, team in project uses management based on organizational maturity and the director sees that the income lowers, long time needed to correct mistakes in code. Therefore, director decides to change the project management to more agile, where report of made work are shown regularly that decreases unknown bugs, displays to stakeholder progress of project, reduces costs \nRequirements changes could happen because of poorly defined requirement or market changes or stakeholders insist on including new functions in product. For example, requirement of transaction security in bank app was not included or was complex to understand, therefore this function does not pass test or have bugs. As a result, team have to go back and fix the problem via changes.\nTechnology changes could happen because of developing better technology or current does not powerful/productive enough to project. E.g. Database could not contain 50 million records that is why needed new one\nOrganizational changes happen when appears a need in reorganization enterprise/ project. It could occur because of grows of project, enterprise or attempting to improve current organization. E.g. As a result of growth, the company divides one department into two separate ones, each of which begins to perform a personal task.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263169,
      "meta": {},
      "text": "Change happens rapidly in the software world. Since the technologies related to the software world get altered, adapted and improved almost on a daily scale, used technologies in the industry become outdated relatively quickly. Additionally, when newer, better and more reliable technologies enter the market, it's more profitable for the industry to adapt. This way change becomes crucial for a company to survive and not succumb to their competitors in today's technology industry. A suitable example in my opinion is the case of Nokia. Nokia was the market leader of the communication industry but they failed to adapt to the change, which was happening fastly and thoroughly in the tech world. Their fall, from market leader to brink of bankruptcy happened so fast, that other companies learned a valuable lesson from that. That's why, while developing the software and keeping constant communication with the customer, we should always adapt ourselves to change.\n\nRequirements changes happen, in that the expectations or needs of the customer changes. Just like software, change happens constantly in every sector. In order to adapt and not fall behind due to requirements changes, one should often communicate with their higher-ups and clients.\n\nI talked about technology changes above and organizational changes happen inside the firm or inside the developer team. As we go through an organizational change, we might expect to adapt to different software development processes such as a shift from empirical to defined process control model. This is also crucial and requires more soft skills than other types of change. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263559,
      "meta": {},
      "text": "Changes happen in software development so that it can quickly meet customers' demands or adapt to the numerous changes in the world and have a better performance proficiency. \nOne Example in the real world that we can clearly see is that 10 years ago we just needed a phone to contact others. As time flies our needs are always increasing and we expect more and more with our phone. Now our phone must have a high performability that we can play games like on pc or we can take pictures which have the same quality as these taken by a profession camera. \n\nRequirements changes are the changes made by the customers as when they want to add to or take away some of their intitial requirements for a product. Example: a customer intitially wants a basic shopping website that buyers can only by Mastercard or Visa. After some time she wants that now buyers should have other payments option and the design of the website should also be altered to match with the new motto of the company. \n\nTechnology changes are changes made by developers in technology to make it better performance-wise such as new languages or new environments are invented to make matter simpler to work with\nE.g: software update in smartphone to improve performance and fix errors\n\nOrganizational changes are changes made inside the structure of a company or a corporation\nE.g: a director is removed from the board\n\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264589,
      "meta": {},
      "text": "The world keeps changing more and more. New technologies are introduced, and new demands are presented. That's why changes also happen in software development. The changes can be to increase the functionality  of the product or solve its mistakes.\nThere are a lot of types and examples of software development:-\n- Changes in the clients' requirements: For example, the client wants to upgrade his company and he came up with a new business idea, which requires new changes in the original project.\n- A new technology has appeared: the product is out of date and the market tends to go to other direction, so the product must be aware of all the new technologies and features nowadays. Like the story of Nokia and the smartphones.\n-  security upgrade: imagine a new startup has created an app that went viral and became well known. Unfortunately, the app started to receive cyberattacks and some hackers tried to access the users' data. In this case, the startup must do security upgrades to keep the data safe.\n- Errors and bugs: As more users tend to use the app, the primary version of the app started to get slower and a lot of Errors and bugs have appeared. In this case, a change must happen in the software to keep up with the increasing demand.\n- low budget: the projects' requirements are more than the budget. In this case, the project is made with the basic requirements and the advanced ones are deferred to the next upgrade phase.    ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265914,
      "meta": {},
      "text": "Da sich generell auch in der Gesellschaft die einstellung zu Festen Autoritäten ändert und man flache Strukturen in denen jeder mitbestimmt als die Zukunft sieht, dies ist in alten Entwicklungsmodelle, in denen eine Person anschafft, was gemacht wird, nicht einzubinden. \n\nWenn ein neue, große technologie rauskommt, die den Markt übernimmt, muss man sich auch anpassen.\nWenn sich gesetzt, z.B. zum speichern von Daten ändern, kann es auch sein, dass man seine prozesse anpassen muss.",
      "score": 25,
      "language": "GERMAN"
    },
    {
      "id": 1265980,
      "meta": {},
      "text": "Changes are an inevitable part in Software development and happen all of the time, because they can range from discovering a bug and thus needing to change the code to the client changing his or her expectations towards the product. \nThe client wanting to add or delete something is a good example for a requirements change, the expectations of the final product are altered and the software development process structure needs to be adapted accordingly.\nA technology change is an important change in technology that will affect the software development process in any kind of way such as artificial intelligence coding, meaning that some of the work can be handled by an AI platform.\nOrganizational change is a part of change that significantly impacts the structure of a software development team. In an organizational change the system is altered by adding / deleting positions or modifying the hierarchy, this could for example be the hiring or firing of staff members.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266104,
      "meta": {},
      "text": "Change happens in software development, because companies need to adapt to changing conditions while working on the project, like changes from the side of the customer, new technologies on the market, increasing flexibility in working times/places (especially after corona) or changes within the company. Due to this, it is no longer sufficient to have a strict plan for the whole project - it is more beneficial for the company and the customer if the process is flexible and can be adapted based on the changing environment. An example for a real world change would be the growing popularity of open source software which is typically developed in a more agile way than commercial software. \n\nRequirement changes: they are changes that the customer makes. For example in the middle of the project, the customer decides they want to add an additional feature that they didn't think of at the beginning. Or maybe the structure of the company (of the customer) changed and it needs to be reflected in the software. \n\nTechnology changes: these changes happen when a new  technology enters the market or becomes more reliable/efficient than previous technologies. For example in some areas,  artificial intelligence is becoming more popular. Another (very old) example would be programmers moving from assembly to high-level programming languages.\n\nOrganizational changes: during the software development process, it can happen that a key employee leaves the company or changes their position. As a result of that the roles in the project have to be reorganized and the plan has to be adapted.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266193,
      "meta": {},
      "text": "The purpose of it is to reduce the causes and effects through taxonomy at its minimum which happen due to change in software requirements. The system adoptability and usability imparts people to demand more that is why changes have to done during the developing cycle and after the product delivery , so if change is not managed properly and from time to time then it can affect the software overall performance. For example a person using 4 years old android phone and he needs to download latest application softwares from playstore ,for that he needs to have a new android software update.\n1) Requirements Changes- Requirements change is an unavoidable activity in software development and can occur due to changes in the market, organisation, specification, technological solutions and project vision .Example to fix bug issues in a software ,battery optimisation in phone games.\n2)Technology Changes-Technology change management identifies new technology and then implements it for better productivity and profitability. It reduces resistance, improves communication and addresses the challenges inherent in major change.Example- Automobiles have changed a lot , now we have electric cars and also self driven cars are developing.\n3)Organisation Changes- The need to make sure that standard methods and operations are used to ensure prompt handling of all change requests while reducing the possible negative impacts of changes. Change management software is developed to bring structure and provide a record of this effort. .Example-Netflix initially used a pay-per-rental model by renting DVDs and they changed to streaming service in 1997-1998 and got very famous.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266238,
      "meta": {},
      "text": "The field of software development is pervaded by change. Those changes happen constantly and need to be tracked by developers not only after the release of their product, but also - and most importantly - during the product's development process.\n\nRequirement changes are those in the client's requirements concerning the features of the product under construction. During the development, the developers and the client are in constant contact and regularly review the intermediate product. The client's requirements might change within the process of shaping of the product. For example, the client might notice that the initial program specification leads to a too complex functionality that might confuse the end user and hence they might ask to simplify it. \n\nThe hard- and software technology has made a long way in the last decades - flash drives, graphic cards, smartphone technology and many more. Since software and hardware are interrelated, the software development teams have to consider these ongoing technology improvements and make sure that the software that they develop will be compatible with technology of the future and scalability/ extensibility is ensured.\n\nNot only does technology constantly changes, but so do organizations, society and their needs. Take the way our attention span changes from one decade to another. The ability to identify these societal changes may cost a developer their business. For example, YouTube has lost a big percentage of their audience when they failed to identify the new way in which people consume video content, before they finally decided to introduce YouTube Shorts - much later than TikTok and Instagram with their Reels.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266409,
      "meta": {},
      "text": "Je nach dem in welcher Lage sich die Welt befindet, gibt es plötzlich neue Themenbereiche, die plötzlich ganz aktuell werden. Zum Beispiel in Corona Zeiten, wird der Health Sektor plötzlich ganz aktuell und alles dreht sich um das Corona Virus. Man braucht eine App um Begegnungen mit Leuten zu tracken, die Kontakt zu Leuten hatten, die in letzter Zeit Symptome hatten. Das heißt das plötzlich ein  neuer Anforderungsbereich entsteht oder eine alter Anforderungsbereich plötzlich wieder wichtig wird. Außerdem verändert sich die Technik über die Jahre. Die Computer werden immer schneller. Es wird ständig geforscht und alles soll immer besser werden. Deshalb verändert sich auch vieles in der Technik. Cloud Computing wurde zum Beispiel in den letzten Jahren sehr essentiell. Jeder kann nun selbst mit einer nicht so guten Hardware, die schweren Probleme lösen. Zu einem neuen super schnellen Computer braucht man dann auch die neuen super schnellen Programme. Auch die Organisation ändert sich. In diesem Bereich wird ebenfalls geforscht um die Effizienz zu erhöhen. Alte, nicht mehr gute Konzepte werden mit neuen, effizienteren Konzepten ausgetauscht. Zum Beispiel war Git eine riesige Änderungen. Die Organisation wurde dadurch drastisch verbessert. Die Leute können damit besser als Team arbeiten, weil Git es den Usern ermöglicht getrennt am Programmcode Änderungen vor zu nehmen und die Änderungen anschließend zu mergen. Das heißt das Softwareentwickler und andere Leute sich in der Branche immer wieder an die neuen Veränderungen anpassen müssen. Die Veränderungen im Anforderungsbereich, der Technik und der Organisation sind also etwas ganz normales, was mit der Zeit passiert. Die Welt möchte sich immer optimieren und deshalb entstehen immer neue Veränderungen.\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1266446,
      "meta": {},
      "text": "Change happens because the world is in constant development, new inventions are developed, management goals change. Hence, the software has to develop as well to adapt to changes in the environment. This is important, to make sure that the business of a company is sustained and that the company stays competitive.\nFor example, the Ukraine war has influence on software development. Companies have to ensure not to deal with companies that have ties to a Russian person that is sanctioned by the EU. Hence, software can be developed that searches commerical registers and make background checks of partners.\n\nRequirements changes:\nThe need of customers for a system might change, which consequently needs a change in the software. F.ex., a banking system, which was previously just used to see the balance of the bank account, might need a function to send money to others as well, because customers demand it.\nTechnology changes:\nNew technologies that can be deployed for a software projects are available. For example, Blockchain Technology is new Technology that can be used for software development and that developers need to deploy.\nOrganizational changes:\nThe company might decide to make an M&A of another company. Hence, the software has to adapt to integrate the buyed company to the existing.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261412,
      "meta": {},
      "text": "Die Entwicklung von Software geht immer schneller. Die Zeit die benötigt wird, um eine Applikation zu entwickeln und zu veröffentlich hat sich von ein paar Jahren auf wenige Monate reduziert. Dafür gibt es mehrere Gründe, die im Folgenden aufgelistet werden. \nGrund Eins ist, dass einem Entwickler heute viel mehr Open-Source-Code zur Verfügung steht als früher, also Code der im Internet gefunden werden kann und anschließend im eigenen Projekt eingebaut und angepasst werden kann. Dadurch spart sich der Entwickler Zeit und er muss im vergleich zu früher weniger Code selber schreiben und stattdessen eher einzelne Code Segmente zusammenfügen.\nZweitens gibt es heute bessere/mehr Angebote von gratis Software(z.B. IDEs oder APIs), die die Software Entwicklung beschleunigen und auch einzelen Entwickler, mit wenig Geld, die Möglichkeit gibt Applikationen zu bauen. \nDrittens wächst der Bedarf an Software in der Gesellschaft rasent. Überall wird Software benötigt und dadruch sind Software Entwickler gefordert schnell Lösungen zu liefern. Dadurch entstehen neue Ansätze in der Software Entwicklung, wie man schneller und trotzdem qualitativ hochwertige Software bauen kann.\n\nDie Anforderung an Software Entwicklung ändert sich, zum Beispiel mit der Einführung des ersten Smartphones, wodurch ein großer Bedarf an mobilen Apllikationen entstanden.\nAuch die Technologie ändert sich, beispielsweise entwicklen sich die Prozessoren stetig weiter und dementsprechend muss auch die Software geschrieben werden, dass sie möglichst Zukunftskompatibel ist und leicht an neue Prozessoren anpassbar ist.\nDie organisatorische Struktur bei der Entwicklung von Software haben sich verändern sich, früher gab es beispielsweise einzelne Abteilungen die jeweils für einen Schritt in der Software Entwicklung verantwortlich waren mit je harten Deadlines, wie in einer Fabrik. Heute arbeiten Teams viel Agiler, die in ständiger Kommunikation stehen und Software wird stetig von allen Teams entwickelt, vgl. SCRUM.\n\n",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1262812,
      "meta": {},
      "text": "Keeping your Code up to date in the modern world of Software Development is essential. For Example due to technology changes or Security Patches in used Frameworks or Libraries you're forced to adapt your Code.\nA concrete example for a Software Vulnerability was the Log4J backdoor. Many Servers running Java used the Log4J logger in order to log Server activities for development purposes. The software world had to adapt all of their code really quick in order to impede larger flaws and keep the damage small.\n\nA requirement change is a change of the end users requirements (e.g. User wants additional features). This could be the case, when the development team gets new ideas or new input or when you need a software to include more features than previously intended.\n\nA technology change is e.g when a new technology evolves during the development process. A roomscanning app started developing an app for room scanning with your smart phone camera. After the first view editions new phones with better sensors (lidar sensors in this case) came on the market and the team had the opportunity to adapt to this new technology, which also resulted in better room scans.\n\nAnd an organizational change could either be the exchange of a team leader or any other kind of personell change or for example a change of the company's holder. (Tech Start-Up gets taken over by a larger company)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263477,
      "meta": {},
      "text": "In our ever-evolving world, change regarding the technical areas is unavoidable. In software development, change might occur for several reasons. One of them are the dynamically developing technologies that can change the actual plan. Some of the necessary requirements and conditions regarding the development process and the final product might not be taken into account or completely omitted in the planning process. Or the reason for change can be the client's needs and wishes changes as well. For example, the client can test the application and want to see some new features instead of the old ones.\nChange might happen because of the internal organizational amendments, such as change in the number of resources, be it financial or human. \nIn the software development process change management with agile approaches must be an integral part of the overall management.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264106,
      "meta": {},
      "text": "Languages change, tools change, techniques change, and create ever a efficient systems—if one would not change, we might still all be writing COBOL. Change happens in software development due to misunderstood/poorly defined requirements, suboptimal implementations, or any other minor reasons. An example of software development change from the real world comes from the invention of the iPhone—phones had previously had image viewing capabilities, but as Steve Jobs demonstrates in his keynote, pinch and zoom technology (which made the audience gasp!) had never been done before in this way, and his vision of user requirements led for this revolution of haptic feedback based user control (natural to pinch rather than use arrow keys to look at an image). Now, touch screen gestures like this are universally understood and staples in the phone/tablet market. With regard to requirements changes, customers might not know that they’re describing a different product than the one they want—clear use case communication and feedback throughout the process is essential, and might lead to changes in the product (EX: User feedback leads to a different UI layout). Technology changes are those that lead to adopting new methodologies or technologies that enhance software creation, and lead to potentially better scalability or implementation of a solution (EX: moving from a text editor to a new IDE can potentially lead to higher productivity). Finally, organizational changes are those that can re-shuffle the entire design/workflow paradigm through new methods of working on a project and ensuring quality (EX: moving from a defined process workflow to Scrum).",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264340,
      "meta": {},
      "text": "Änderungen in der Software Entwicklung sind allgegenwärtig und unvermeidbar. Änderungen können durch:\n1. Neue Anforderungen: Statt in Datenbanken arbeiten Web3 Unternehmen beispielsweise jetzt auf Blockchains, was den Arbeitsablauf grundlegend ändert, da es gravierende Unterschiede im lesen und schreiben der Daten gibt.\n2. Neues Wissen: Unternehmen änderten ihr Arbeitsablauf zum Beispiel vom \"defined process\" zum \"empirical process\" als man feststellte, dass dieser für Softwareentwicklung besser geeignet war.\n3. Neue Technologien: Das bauen einer Webseite brachte beispielsweise neue Technologien hervor. So arbeite man beispielsweise erst mit HTML dann auch mit javascript, zu PHP, zu iQuery und schließlich zu React.\n4. Neue Arbeitsumstände: Zu Zeiten der Corona Pandemie änderte sich der Arbeitsablauf durch Online Meetings, statt Interaktionen im Büro.\nWhile developing a project there can also be change: Team members get fired and hired, people get assigned new tasks, change in roles, requirements, implementation, etc.\n\nRequirement change describes the change in demands a customer has. For example if the customer first wanted a website that shows photographs, but now the customer also wants to have videos displayed.\nTechnology change describes the advancement of technology and knowledge of what's possible. Nokia for example had a rude awakening when Apple launched their first iPhone and all of a sudden their mobile phones were outdated.\nOrganizational changes are changes in the structure and workflows of a certain company/ organization. For example when a company gets acquired by another company,  often times there is a change in employees, company culture, software development frameworks, etc.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264924,
      "meta": {},
      "text": "Um zu verstehen warum es im Softwaredevelopment zu wandel kommt beziehe ich mich im folgenden auf die Definition aus der Vorlesung Software engineering/development is a collection of techniques, methodologies and tools that help with the production of\".\n So muss man in Betracht ziehen das sich nicht nur Softwaredevelopment an sich ändert sondern auch die Prozesse drum herum. Moderne Unternehmen verwenden zum Beispiel Git. So kommt jedes Jahr neue Technik raus die ,die komplett neue Bereiche erschafft...ein bsp wäre das Smartphone. So wandelt sich auch die Methodik wie Software entwickelt wurde. Gerade in den letzten Jahren tendieren Unternehmen immer mehr zu Opensource. Ein Beispiel hierfür wären OpenAI (API für AIs)...Software zu entwickeln wurde dadurch weitaus günstiger und einfacher.\nEin weiterer wichtiger Faktor ist Globlisierung...so können z.b Unternehmen teile ihrer Software außerhalb in Ländern wie Indien produzieren lassen. \nHinzukommt das der Bereich des Softwaredevelpoments ein stetig wachsender Markt ist. So hatte Alphabet(google) 2007 : 16000 Mitarbeiter und 2021 : 150.000 Mitarbeiter. Wachsender Markt = mehr Möglichkeiten und Entwicklung = mehr Wandel. Hinzu kommt ein extremer Wandel an die Anforderungen im SoftwareDevelopment. So gibt es beispielsweise bei Google oder Facebook komplexe Interviews die nur ein ganz kleiner Teil besteht. \nZusammenfassend:\n\"Requirements changes\": Der Kunde will neue features/hat plötzlich andere Erwartungen an die Entwickler + hohe Anforderung an Programmierer\n\"technology changes\": Stetiger Wandel an Technik bzw das erfinden neuer Technik..bestes beispiel dafür sind Smartphones und damit die Entwicklung von Apps\n\"organizational changes\": Neue workflows + Globaliesierung möglichkeit von outsourcing",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265364,
      "meta": {},
      "text": "Der Wandel in der Software Entwicklung lässt sich auf mehreren Ebenen feststellen. Sowohl im Technologie-bereich, in dem durch Weiter- und Neuentwicklung von Software neue Möglichkeiten und damit verbundene Probleme entstehen, als auch auf Staats- und Regierungsebene erleben wir fortlaufend einen Wandel.\nDurch neue Unternehmen auf dem Markt sind die bereits ansässigen dazu angehalten, ihre vorhandenen Technologien weiterzuentwickeln, um ihren Wettbewerbsvorteil wieder herzustellen. Ein Beispiel hierfür ist Nokia, die ihr Monopol aufgrund zu langsamen Wandels verloren haben und nun nicht mehr Marktführer im Handy-Bereich sind.\nImmer mehr neue Ideen und das Streben nach Gewinnmaximierung sorgen dafür, dass die existierende Technologie morgen besser sein muss als heute. Ohne Weiterentwicklung der Software würde das Wirtschaftswachstum schließlich langsamer, die Neuentwicklung von modernen Technologien schwieriger und das Überleben der Unternehmen am Markt unmöglich werden. Es lässt sich also feststellen, dass ohne Wandel im Software- und Technologiebereich unsere täglichen Wirtschaftsziele und Umsatzvorgaben nicht einzuhalten wären.\nNatürlich sorgt auch der Staat für einen gezwungenen Wandel, indem er Gesetze ändert oder neue Auflagen schafft. An diese haben sich die Unternehmen anzupassen und müssen demnach ihre Methoden ändern.\nDer Wandel lässt sich außerdem noch in den Anforderungen bzw. Erwartungen an ein Produkt sehen. Diese ändern sich nämlich fortlaufend durch immer andere Bedürfnisse der Bevölkerung. Ein Beispiel hierfür sind die Anforderungen an in Smartphone. Vor zwei Jahren reichte eine Kamera, heute werden drei Linsen erwartet. Auch im organisatorischen Bereich lässt sich ein Wandel ausmachen, da bei der Entwicklung nicht immer alles nach Plan läuft und man im Team sich ändernde Aufgaben lösen muss.\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266505,
      "meta": {},
      "text": "Change doesn't just happen in software development, they happen everywhere, and since software development depends on things in the real world, changes there affect and change the development process.\n\nSome examples:\nRequirement change: Suddenly there are a lot more users for the website you are building, and you have to switch from a single server to a distributed system.\nTechnology change: A new webframework is released and you decide to switch to it, because it is just better than angular.\nOrganizational change: Your customer switches around it's members and you get a new product owner.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1261367,
      "meta": {},
      "text": "Changes are always happening in the software development field. Soft²ware engineering is all about innovation in order to make our lives easier, more comfortable and more entertaining which is highly connected to the demands and  requirements in the Market. Let's take for example the introduction of could computing. It made it easier to offer software to more people at a lower cost compared to on-premise. Therefore most of the companies nowadays are using cloud computing. \nRequirement change : \nWhen the first Iphone came out, a lot of software developers started learning swift. The high demand of the product have changed the standards of the mobile phone industry and therefore the requirements of the market and software development. So certain factors to satisfy a user's standards when it comes to certain functions or behavior of a system imposes changes.\nTechnology changes: \nThe introduction of AI in many fields such as the automotive industry, made  some programmers get into machine learning , this technological change doesn't cease to evolve more and more and with that a software developer should keep up. \nOrganizational change:\nWith agile software development (the empirical process), members of the programming team may bump into many challenges and problems and there's no escape from sudden change, whether it's a necessary change to adapt or solve a problem or  because of a customer request or even  taking over  taking over a colleague's task .   There's always discussion and research in order to improve and make the project more successful. The owner of the company or the boss might also influence such changes.  \n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261559,
      "meta": {},
      "text": "First of all, the internal factor is thatpeople want to progress and develop, to change things for the better. And people's thinking changes with the fusion of cultures. There is also the occurrence of changes. Due to the pursuit of material enjoyment, with the development of technology, the market of demand is constantly changing. Of course, there are also changes brought about by changes in the natural environment, which may be physical, such as global warming, or biological, such as the coronavirus.  Finally, there is power, which happens when powerful people and groups decide to change the status quo to further increase their power or interests.\n\nIn the requirements analysis stage, the communication between developers and users is not accurate enough. Then, over time, the user's understanding of the entire software has become more and more in-depth. They will ask for more. And the third reason is that technology is updated too quickly. There are also some force majeure factors.\n\nFor example, the game PUBG, when entering the Chinese market, cannot shed red blood when being shot, so the demand has to be changed to green blood. Perhaps in the design process of the game, graphics cards such as Nvidia and AMD have been updated one after another, and the chips of mobile phones have also been updated, so corresponding technical changes have occurred. And organizational change is probably related to capital.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262371,
      "meta": {},
      "text": "Software Development is strongly dependent on technology. As technology is evolving more rapidly than ever before software development is subject to change as well. With constantly changing and evolving costumer wishes a product is never finished but continuously improving. \n\nAn example for change in the real world would be climate awareness - people care more about their carbon footprint and sustainability which makes certain products obsolete, increases the demand for green products and pushes unsustainable companies to act. A concrete example would be Bill Gates de-investing his oil and gas assets (that are traditionally highly profitable)\n\nRequirements changes refer to a change in consumer demand and the product parts resulting from that demand. When a software product is planned initially a certain set of requirements arises. However, with the development new desired functionalities might come up that will change the requirements. For example if Asos or Zalando wants to add a sustainability functionality showing the carbon footprint of their products this would result in new requirements.\n\nTechnology changes refers to the underlying and used technology of a software project. First of all updates and new versions put new constraints on certain products. A prime example would be the new IOS version that allows customers to decline App-tracking. Another one would be the emergence of new technologies, e.g. blockchain based.\n\nOrganizational changes refer to changes of the project organization and the people involved. If the project manager/ lead engineer leaves this can put a strain on a software project. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262599,
      "meta": {},
      "text": "Various external factors play an important role for software developers, such as the quality or innovation of products from market competitors, the needs of customers or targeted audience, etc.\n\nMy example for change would come from the company I work for. We provide real-time locating solutions. One of our solutions for example is putting sensors on players and balls in team sports, and then with the help of tracking from sensors give insight to coaches for them to analyze their team. \nWhen COVID broke out, the company developed a system for tracking employees in factories. When someone gets infected, the system knows who they were in contact with, so that these people can get isolated. The product was offered to many companies, and they ended up liking it, which brought the company a lot of money.\n\nA requirements change is when the requirements of existing or potential customers change. The above given example is a requirements change.\nA technology change would be when a new technology appears on the market, which may potentially steal your customers. An example is the downfall of Nokia with the appearance of smartphones.\nAn organizational change is when the organization of the company or team changes. An example is when a company gets acquired, and the new boss decides to dedicate less budget to the software development team. The team would then have to make changes in order to adapt to the new budget.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262704,
      "meta": {},
      "text": "\tThe process of software development must constantly change to adapt to the changing environment. Change happens in order to improve efficiency and performance by the means of evaluation, identification of potential problems and optimization of certain aspects. Software re-engineering is an example of change that involves the reorganization of existing software to make it maintainable and easier to understand and work with. \nRequirements change may occur during a project due to several reasons : the initial requirements were not well defined and verified for precision and clarity and to identify the potential problems, or some requirements were ignored or maybe the stakeholder have changed their expectations and want to add new requirements .. So changes are made by reviewing existing requirements or eventually adding new ones to avoid miscommunication and incorrect or missing requirements.\n     Moreover technological changes are an important area in software development that involves  investigating and incorporating new technologies and experimenting with innovations to improve efficiency, productivity and profitability and increase the quality of the end product, . Such changes may include framework change, switching programming languages...And to cope with the constantly evolving business world and market , an organizational change is often needed which involves creating new systems and structures, changing the development team in case of bad communication, changing workflow and practices or rearranging plans, priorities and goals to overcome the obstacles..\n     Change in all areas of software development is crucial (Example of Nokia's fall resulting from poor organizational change management and inferior technology(compared to Apple for example)).",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263257,
      "meta": {},
      "text": "In the fast developing world we live in, change is inevitable. It's no wonder that a such an advancing industry as the software industry is developing rapidly over time. \nChange in software development occurrs not only because it is such a new industry  but also because production time of a product is just a fraction of time it takes to build eg. a car. A software company can adapt and change production processes way faster than a car manufacturer does.\nA change in software development in the real world is for example the regulations the goverment puts upon the software industry and -products. For example security compliance: over the last years there were constantly new security requirements added to software products that need to be fulfilled by developers, e.g. in Payment processing and privacy.\n\nChange in requirment:\nCustomers have expanding requirments towards the developer when it comes to performance. For example: while it was pretty standard in 2010 to wait some seconds until a website loads, today most people would be outraged if the youtube video of the adorable cat takes longer than half a second to play.\n\nChange in technology:\nSoftware developers and their products need to adapt to technology changes, for example the hype of mobile phones in the recent decade: now a website/application does not only need a layout for the regular computer user that accesses it via browser, but also for the smartphone community, which needs an app to have a enjoyable UX.\n\nChange in organization:\nAlso in the intern development process changes occurred. For example the trend of project management towards agile development was a great change for many SE, where now scrum is the goto method, while a few years earlier a manager would dictate the whole process.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263856,
      "meta": {},
      "text": "Why is change happening in software development?\nBig and small companies used to have a firm hand on workers in terms of how they are supposed to work. In software development the developers constantly get confronted with new problems where there is no one recipe to overcome this problem. They quickly developed a new concept for software development, where you don't see upcoming problems as a reason to maybe fire the developer but instead see it as an opportunity to maybe be the first to solve this problem and therefore be early compared to competitors. An example for this change would be the method \"Scrum\" where you basically work in cycles with constant communication between the involved parts.\n\nRequirements changes happen because the user of your software might have another wish in terms of functions or design. It can also occur when new technology comes out that might help making the software way better than expected.\n\nTechnology changes happen not only because technology constantly evolves and gets better, but also because in a development team for example it might be useful to let them pick their technology of choice rather than telling them. Or just a new better software releases.\n\nOrganisational change is all the change a company does in terms of used technology, the overall structure or also the workers they draft. Often its just about adapting to new circumstances such as new inventions for example\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264242,
      "meta": {},
      "text": "There are changes happening everyday in the Software Development. Most of them happen because of the rapid technical improvement: there are new transistors and other physical aspects appearing that create new possibilities for the new software development. Another important aspect is market demand. Life is changing very quickly and human's needs as well. In order to survive Software Development need to adapt to people's need very quickly. Thirdly, different Software Companies compete with each other. Competition produces very fast software development because no company want to be left behind the progress. \n\nA good example for the change in the real world would be the software development during coronavirus. Because people were have to work from home, video-conference, such as ZOOM and Gooogle-meets became popular (demand) and those application started to develop their features, such as bigger participants capacity, the ability to blur the background and so on. There were also need to keep control, so infected people would nor participate in public events, the software application, such as CoronaWarn were developed. \n\nI understand the requirement change as change in laws. For example, in Artificial Intelligence - there are certain ethical requirements that could potentially slow down the progress. If we want rapid software development, there should be requirement change too.\n\nTechnology change is the progress in science and technologies. The historical example would be the discovery of electrons by Thompson leaded to big technology change. Nowadays almost all technologies are electricity-dependent.\n\nOrganizational change could happen when the team introduces the new agile organization system, for example. That means the product can be potentially updated many times, which provides greater flexibility and ability for potential development. The new Video game can have more updates every month with some new features, for example.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265063,
      "meta": {},
      "text": "Software engineering is an activity that happens within two domains: the application domain, comprising the industry where the software will be used, as well as the functions it requires to be useful for its users; and the solution domain, which deals with the tools, techniques, and methodologies developers use to create software and solve problems during production. \n\nContinuous change happens in both areas during the development process. Considering the case of an e-commerce, a change in the application domain is related to the evolving needs of the market, the user and the client. For instance, the request of the client to add new features to stand out from competitors, such as an augmented reality function. As for the solution domain, new technologies to make processes more efficient emerge constantly, and the existing ones must adapt to not become obsolete. For example, the team could decide it is necessary to migrate to a new database management system to handle the information faster using fewer resources.\n\nThese changes can be classified into three categories. Requirements changes refer to the changes made by the team after having a better understanding of the application domain, as well as the ones requested by the client or the users to fit better to their needs. For example, accessibility requests for a better user experience. Technology changes comprise the adaptation of software to the constantly-improving technologies in the market. An example for this are apps switching to cloud technology to store and back up content to use less local storage. Organizational changes deal with employees, budget and deadlines. For instance, the addition of a team to be in charge of quality analysis instead of the developers can be made to improve the software significantly.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265368,
      "meta": {},
      "text": "Change in software development happens because we live in a fast-paced world in which external impacts such as innovative technology or disruptive events but also internal impacts such as a change of needs or structure create changes for software. It can be divided into three main categories: Requirement, technology and organizational changes. If change happens in at least one of these categories, then it also impacts the software development, which then has to be adapted accordingly, ideally using SCRUM to mitigate risks.\n\nRequirement changes happen e.g. during the project when initial requirements from our customer change due to external events or changes in the market. For instance, due to the Covid-19 pandemic, our customer needs new functions such as for example an additional communication function in his software in order to communicate with other colleagues in home office.\n\nTechnology changes happen because of updates of an operating system for example from MacOS Big Sur to macOS Monterey where software programs for Mac then have then to be adapted to that change or when a new technology is disrupting the market such as artificial intelligence where then the software can be trained to learn. \n\nOrganizational change happens because of new organizational structures or changes in legal requirements for example when there is a new management team in our customer's company that decides to implement a new data protection policy and organizational structure. These changes impact the software development because the software has to be adapted to the new data protection policy but also changes in hierarchies and teams lead to employees being allocated in new teams and thus, working with different colleagues. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266411,
      "meta": {},
      "text": "Change is a key aspect of software development. During the software development external factors are always changing and the software must keep up with those changes. Also changes in the approach and model can occur.  An example for change could be a newly introduced law on digital privacy.\nChange in requirements:\nSometimes in software development the needs of the costumer changes. For example, during the pandemic a lot more online and home office services are needed in a firm’s software\n\nChange in technology:\nThe software you are building upon or interacting with could be updated or changed leading to changes in your own software\n\norganizational changes:\nNew board members, a new budget plan or a merger/acquisition all can lead to changes in the software development\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262151,
      "meta": {},
      "text": "The IT world is evolving rapidly. Because of new frameworks, technologies, a lot of cool updates etc., there is a constant change in the software development world. During software development, one has to prepare for this change while creating an application, e.g. when there are new laws with which the application and the company has to comply.\n\nA requirement change happens when the requirements a specific entity - like the business owner - has in the application changes. This can range from legal compliance to new features for the users of the application. An example for this could happen in a business management software. The company wants to offer a new product and therefore need to track and analyze specific indicators in their management software. Therefore, these changes have to be implemented.\n\nTechnological changes happen when the technology used in a project - like the web server or the framework - undergoes change. The software then needs to be adapted to this change. For example, a backend could be written using an old Java version. To use the new shiny features of newer Java versions, the backend has to be updated to a newer Java version.\n\nOrganizational changes happen when the team creating the application changes in its composition, e.g. when new members join the team or leave it. Growing businesses always need to recruit new people and fire people who cannot deliver good results. Therefore, organizational changes are an important factor to consider.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263785,
      "meta": {},
      "text": "Requirements change ：The customer's needs have suddenly changed.\nExample :At the beginning of corona, many restaurants added takeaway services. Because people's demand shifted from going to restaurants to ordering takeaway.\nTechnologies change : update\nExample :When the MacBook is upgraded to version 12.0 then some software will not fit and they will also need to be updated\nOrganizational changes : staff changes \nExample : In a company, if the boss fires some employees, then the remaining employees need to regroup to complete the previous tasks",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264713,
      "meta": {},
      "text": "In the last few years, technology has been developing extremely fast, especially with software related things. Everything is improving and trying to reach its maximal potential and that's why we are so fortunate and can enjoy creations like Google, medical devices and more. These are very well designed and managed projects that help us in our every day lives.\n\nChanges in software development happen because the world is progressing so technology progresses with it. An example for that could be AI, AI has been proven to be very useful, for example, it analyzes data for big companies, can assist people with disabilities and makes our lives easier.\n\nConsumers need change as so do the requirements for software development to adapt to them and satisfy the consumer. An example could be video games, the trends change, so companies have to come up with new games that could be popular. In the technical part, programming languages get updated to be more efficient and more improved and code writing styles as well, there are also hardware changes. As for software development teams, there's always room for improvement. Individual skills can be invested in, products and tools as well, good workflow and environment. All in all, changes are inevitable when humanity progresses so fast and competition is bigger than ever.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265039,
      "meta": {},
      "text": "requirements change\nIn the past the demanders of products were the developers themselves, who made what they wanted to make. Now the requirements for a product are often not made by the development team. And people are demanding more and more. So the development team need to fulfill many different requirements.\nFor example Google has added many new functions, such as improving security. Because more and more people are at risk of information leakage, which increases their need for security.\n\ntechnology changes\nPreviously, people were still developing using simple text editors such as Notepad. Now the technology is becoming more and more advanced. In order to improve the efficiency of development, gradually turned into an integrated development environment. For example Eclipse is excellent in error checking and patching code. It saves a lot of time for developers. This makes the development experience better and better.\n\norganizational change\nNowadays, the organizational system of software development is gradually being established and improved. They have different roles and responsibilities. For example scrum team has 3 roles, product owner, scrum master and developers. Teamwork is also becoming more and more important. Everyone needs to make efforts to succeed together. The development of complex software systems is the result of teamwork. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266088,
      "meta": {},
      "text": "Reasons for software development change are the following. It is important to innovate and to be compatible to new movements/ideas and products. This is also know as being adaptive. Another change in software development simply comes from fixing bugs or rewriting it to make it more efficient and elegant. Another reason for change is closely related to my first point. Everything evolves and gets or should get better with time. Without change there is no innovation and without innovation there is not much longer anything that need to be innovated, because it got replaced or simply \"died\". That is why it is important to change software development to make future changes possible and feasible. A good example is apple with the change of the software development to make their M1 chip work with old and new programs and have a flawless transition.\n\nRequirement Changes: The requirements are given by the client. Those requirements can change if the client sees an additional fit for functions decides to leave some functions out because of costs, experience or other reasons.\n\nTechnology Changes: The technology changes are in context to the technology which is used to realise the project that is given by the client and defined by the requirement changes. A technology change can occur if the client does not agree with the the technology that is decided upon, has internal rules that prohibit the clients company with working with that technology or endless other possibilities.\n\nOrganizational Change occurs if for example the dynamic of the team, the client or the client-team relationship changes. This happens if some people change their job, leave the team or additional people join the team. Those situations always call for an organisational change.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261434,
      "meta": {},
      "text": "Software development, like millions other processes of developing, needs to be changed from time to time, otherwise it will stagnated. Developers, that manage stagnated software, will waste more resources (time, money, nerve cells) than their colleagues. The changes can provide people (employees) to work effectively and avoid some difficult obstacles. As an example for change in the real world we can take a human. Most of us grew up, become useful abilities, learn some information, that can be used in various life moments. For example, at 6 years old I learned how to spell letters then at 8 I've read my first book, after that at 16 I have read a \"War and Peace\" Leo Tolstoy and now I'm reading scientific books, like \"Object-Oriented Software Engineering: Using UML, Design Patterns and Java\" B. Bruegge, A. Dutoit. \n\nAs an example of the three areas (requirements changes, technology changes and organizational changes) I want to take a time period of late 19th and early 20th centuries, when the most drastic changes happened. Creation of internal combution engine allowed to develop compact, high efficiency and low cost machines, compared to external combution engine (technology change). To produce a machine faster and cheaper an assembly line (organizational change) was created. And for careful usage of the machines in real life a transport law was written, that requires people to learn and follow the rules. Without the knowledge of those rules people don't have the right to operate their autos (requirements change).",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262087,
      "meta": {},
      "text": "Software development takes a lot of time and therefore the circumstances for the project can change. For example, could it be that a new legal regulation is published which affects a part of the project. That can be a new DSGVO decision and the use of Data in the project.\n\nRequirement changes:\nThe customer for which the project is being built now wants the software to be able to handle more than 1 user per time.\n\nTechnology Changes:\nThe customer wants the software to be built on a blockchain now, and not normal.\n\nOrganizational Changes:\nThe finish date of the software product is shifted and therefore there is more time.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262206,
      "meta": {},
      "text": "Changes can happen in the process of developing software because of broken dependencies, infrastructure changes, business reorientation and company restructuring. A very interesting example is Netflix, which for years set a great priority in having streaming as the only option of watching content, only then to develop offline playing capabilities, which required that a whole backbone (making sure the videos are not pirated, developing the user interfaces even further, changing the protocols used to relay information) of Netflix would be redesigned.\n\nRequirement changes is exactly when the motivations for a software project change, so that a new product/modified solution needs to be developed. A great example of it are startup product cycles, where the product ideas usually change in quite a rapid pace, to which developers need to respond by repurposing the existing software.\n\nTechnology changes are tied to advances or the retirement of certain technologies, to which a existing software needs to adjust if it is to continue efficient and working. A good example of it are Node.js dependencies, which are usually very fast paced and require developers to constantly maintain their code.\n\nOrganizational changes are related to changes in the structure of the software team or the company as a whole. It is usually tied with some form of requirement change. An example is the shift from Microsoft from proprietary products to open source, which greatly changes the dynamic of how development teams should work (as the contributors are not limited to individuals on the professional team).",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263135,
      "meta": {},
      "text": "As in almost all areas of life, changes are bound to happen sooner or later. But in software development this effect of time is more pronounced than it is in most areas of life. Software development produces its own tools to drive progress and innovation, thus constantly improving and changing the ways it is done. While more traditional processes such as cooking, growing crops, etc. can definitely benefit a lot from new technologies its core process stays the same. Whereas in software-development the introduction of a new tool or method can drastically change the way things are done. An example for this can be the introduction of version control to keep track of code, or the invention and widespread use of the internet to communicate and get solutions to problems (Stackoverflow...).\n\nBut change does not only occur over large spans of time, but can also happen in a sole project. For instance, the requirements of a project are not craved in stone, they can and mostly will change while working on the Project. This can have multiple reasons, such as the requirements of the users simply changing or the better understanding of the stakeholders-needs. Also, it can be impossible to implement a certain requirement which leads to having to change the requirements. \n\nMoreover the used tecnology can evolve and hence offer a better way to work. To illustrate lets look at the rollout of Java 8 that introduced the concept of streams to Java. This might change the way bulk data operations are handled.\n\nAlso the organisational structure is continiously changing. The team members, leaders, manager etc. can change. For this it is essential to have good documentation.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263495,
      "meta": {},
      "text": "Changes in software development may be due to\n1. User/customer needs have changed\n2. The surrounding environment (society, business, politics) has changed\n3. R&D resources cannot support the completion of the original plan\n\nExample: \nTeam Alfa adjusts its software development plan due to inaccurate estimates of the originally planned workload\n\nRequirement changes: TikTok's development team changed its recommendation algorithm as people's preferences for watching short videos changed\n\nTechnology changes: After the MacBook with M1 chip was launched, Adobe's R&D team had to make a separate adaptation for it\n\nOrganizational changes: As the R&D teams underwent organizational restructuring, the team's development plan had to be adjusted",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263640,
      "meta": {},
      "text": "With the development of society and technology, the needs of customers, the environment of the market for software have changed, which is the reason for the changes in software development. An example is the disappearance of Nokia. Because of the development of technology, smart phones gradually appeared in the market and people's demand for smart phones also increased, such changes led to the disappearance of Nokia.\nRequirements changes means the change of the needs of the customers or the new ideas of the developers. For example, when  customers have a few requirements for  new features, then the software development should be updated with it.\nTechnical changes in my opinion refer to the improvement of  hardware or software platform on which the system is built or the emergence of new technologies. Such as the emergence of new technology AI or VR make softwares more powerful and require developers to develop the new functions to support the softwares in new ways.\nSoftware development can not done by one person. Because of its complexity and variability, a whole team is needed to carry out the development work. So organizational changes occur when changes happen in the team. For example, if there is a change of personnel in the team, it is necessary to change the assignment of tasks in the team, etc.\n\n\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263980,
      "meta": {},
      "text": "Software Entwicklung ist ein langer Prozess, die meisten Programme sind nicht an einem Tag fertig gestellt, daher kann es während dieser Zeit durch die unterschiedlichsten Faktoren zu den unterschiedlichsten Änderungen kommen, ob diese kleiner und schnell durchführbar sind oder doch etwas mehr Arbeit beanspruchen ist dabei offen. Eine drastische Änderung ist zum Beispiel, dass der Firma, die das Programm beauftragt hat, das Geld ausgeht und daher das Programm, welches zum Beispiel gewisse interne Prozesse effizienter machen soll, um einiges schneller benötigt. Das wäre eine große organisatorische Änderung, da jetzt der zeitliche Rahmen gekürzt wurde muss entweder ein noch nicht voll funktionsfähiges Produkt, welches z.B. nur die wichtigsten und auf die schnelle benötigten Features beinhaltet, geliefert werden oder das Entwickler-Team muss aufgestockt werden um der neuen Deadline gerecht zu werden (organizational change). Es gibt auch andere Arten von Änderungen während des Entwicklungs-Prozesses zum Beispiel, wenn bei der App-Entwicklung eine neue Android-Version herauskommt und man neue Funktionen benutzen könnte, die die App z.B. Energie-Effizienter machen, das ist dann durchaus eine Überlegung wert diese Funktionen mit einzubauen (technology change) oder in einem ähnlichen Fall wird nun Gesichtserkennung durch die front Kamera unterstützt und der Kunde möchte, dass man sich auch damit in seine App einloggen können soll und nicht nur ein Passwort benötigt. Jetzt hat sich geändert, was die App können muss (requirement change).",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264073,
      "meta": {},
      "text": "Changes in software development do always occur, because the development process is dependant on many factors such as technical dependencies and requirements, competitor or restrictions by law. Those dependencies can change at any point in a development process. A good example would be DSGVO (Datenschutzgrundverordunung), a law passed by the EU in 2016, which set new rules and protection laws for working with personal data. Another example would be our fast evolving world of technology, which can lead to changes in the development plan, such as when there are new releases which has to be integrated to the system. \n\nChanges can be grouped into different areas, some of which are requirements changes, technology changes and organisational changes. \n\nRequirement changes consist of changing demands by the customer or the product owner, changes in the functional requirements and demanded behaviours for the system or requirements for the project it self (developers, hardware,…). A good example for a requirement change would be when customer asks for additional functionalities, so that the development team need to adjust their development to that. \n\nTechnology changes includes changes in the technical environment in which the development team operates. An example for this would be when the OS on which the product should run changes from Android to iOS. \n\nOrganisational changes represent changes in the organisational nature all around the development, such as development process methodologies or human resources. One such change would occur when a product scales up in size, the development team may need more developers. \n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264222,
      "meta": {},
      "text": "Software development is a complex task. It is not possible to fully plan it. You have to be able to react to changes. You have a rough plan and than you adapt to the conditions of the environment. \nThere are many factors that can lead to changes. For example, the project needs to be finished earlier than originally planned. The reaction could be to increase the budget or to do less testing. \nDuring software engineering the requirements can change. For instance, a government passes a new law and requirements for your software need to be updated in order to follow the new law. \nAnother factor that can change is technologies. In order to stay competitive you have to invest in innovation and include new technologies in your work. Nokia is an example for a company who failed to realise the potential of the then new technology the smartphone. Nokia was the market leader for mobile phones, but when smartphones from other companies came on the market they weren't able to present this new technology themselfes and almost went bankrupt. \nAnother factor software developers need to be able to react to is organizational changes. That occurs for example, when methods that used to be the norm in a company get replaced by a different concept. In the past we have seen that Scrum has become more and more popular. It may have been unusal to have so many meetings with the team, but in the end doing things differently and trying something knew often leads to a positive outcome.  \n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265318,
      "meta": {},
      "text": "Software often needs to be improved because technology and demands from users are improving quickly. It can be worthwhile to develop new features or solutions fast.\nSomething that also needs to be changed often is protection against hackers or malware, for example in windows. The system always has weak points which can be used to retrieve data from users. Because new ways to get around the system security are constantly being developed, there have to be regular updates to fix the parts of the system that made it possible to be hacked.\nThere are different types of changes in software, one type is when the requirements for the software change, which are considered in the beginning of the developing process in the use/case model. For example, the requirements of a single-player game change when the game enterprise decides to add a multiplayer mode. In this case the use/case model changes because the developer team has to add things like interfaces for user interaction or make it possible to add multiple players to a level.\nIf there is different technology that the software needs to adapt to, like a new type of device, the software also needs to be changed to be compatible. This is for example the case if a website needs a version for mobile phones so it is easier to use for mobile users.\nDuring software development, there can also be organizational changes to improve the way in which the team is working together on the software. These changes are often discussed in meetings during development. One of these changes could be that two developers were working on different parts of the software which weren't compatible, so the developers should now more often review each others work. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265356,
      "meta": {},
      "text": "1 ? why change happens in software development\ndue to change in software requirements，internal issues, like defects, as well as external pressures, such as a new competitor.The system adoptability and usability imparts people to demand more that is why changes occurs during the developing cycle and after the delivery of product, so if change is not managed properly then it can affect the software overall performance. Most Common reason of software project failure is requirement variations. Mismanaged changes in software requirements can also lead to failure of project. \n\n2? provide an example for change in the real world.\n switching compilers, changing programming languages (C to C++, C++ to Java), or changing software drivers or libraries.\n\n3? three areas with examples.\n1)requirements changes\nRequirements changes are unavoidable software development activities that may occur due to changes in user requirements, increased understanding of stakeholder needs, reorganization of customer organizations, and availability of new technologies.For example Customers increased demand for a new user interface for seniors to ensure a user experience for seniors using the product.\n2)technology changes\nImprove existing technologies and develop new technologies to improve existing products and create new products in the marketplace.\nThanks to home Office, the digital trust technology for work applications is reinforced with innovation.\n3）organizational changes\nThe action of a company or enterprise to change the main components of its organization.for example :\ngoing from brick-and-mortar to e-commerce, completely rebuilding the website",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265518,
      "meta": {},
      "text": "On the one hand, software development logically changes like the other field due to technical progress. Especially in the field of computer science, new technologies are developing rapidly. For example, the idea of the Quantum computer is becoming more and more established. Sooner or later, this could raise encryption to a completely new level. In the same way, artificial intelligence is advancing more and more and is being applied in ever broader areas. Both developments lead away from the classical idea of software development. \n\nOn the other hand, local changes can also lead to a change in software development. There is for example the condition of an enterprise to call. This includes organizational things, such as the company structure, the work in teams or as an individual, or even the increase or decrease of the budget for a project. All these things have an enormous influence on how software is developed.\n\nThe third point I would like to mention is the change in the market. Software is becoming relevant and accessible to a wider and wider range of people (whether in terms of location or age). Whether you are 10 or 100 years old, you are surrounded by software everywhere, at least in developed countries. Therefore, software needs to become much more user-friendly and -specific. So coming back to the development of the software, developers need to be much more responsive to the needs of the market or the target audience, which of course can change at any time. For this purpose, surveys or a market analysis, for example, are standard in the development of today's code.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265598,
      "meta": {},
      "text": "Veränderungen in der Software Entwicklung treten dann auf, wenn beispielsweise neue Erfindungen auf den Markt erscheinen und ältere Systeme ablösen. Das kann zum Beispiel eine neue Erfindung sein, die das aktuelle Produkt in den Schatten stellt. Beispielsweise, wenn ich bisher nur Röhrenfernseher hergestellt habe und damit einen großen Erfolg erzielt habe, aber nun von anderen Firmen Flachbildschirmfernseher auf den Markt kommen und das Produkt mein Produkt komplett in den Schatten stellt, muss ich trotzdem konkurrenzfähig bleiben und ebenfalls mein Produkt verändern, da ich sonst vom Markt verschwinde und bankkrott gehe.\n (technische Veränderung)\nDer Grund, warum ebenfalls Veränderungen auftreten können, ist, weil die Nachfrage der Kunden sich ändert. So kann beispielsweise dase eigene Produkt in Vergessenheit geraten, weil die Nachfrage nach umweltfreundlichen Technologien steigt und das eigene Produkt noch fossile Energien benutzt.\n(requirements changes)\nEin weiterer Grund für Veränderungen in Software Entwicklung kann sein, wenn intern Entscheidungen getroffen werden, die eine maßgebliche Neuausrichtung des Unternehmens verursachen. Zum Beispiel wenn ein Unternehmen beschließt ab sofort umweltfreundlicher und CO2 neutral zu agieren.\n(organisatorische Veränderungen)\n",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1266056,
      "meta": {},
      "text": "Software development ist ein bereich der sich ständig verändert. Füher wurden Programme noch durch Physikalische Verbindungen von Komponenten eines Computers \"geschrieben\". Heutzutage benutzen wir Computer um Programme für Computer zu schreiben. \nSoftware develoment geht Hand in Hand mit der aktuellsten Technik und muss somit adaptiv und innovativ betrieben werden, denn die traurige Warheit ist leider, ein Programm ist zu dem Zeitpunkt veraltet, zu dem es fertiggestellt ist.\n \nDurch die technoligische Weiterentwicklung werden die Ansprüche natürlich auch größer. Schafft man es nicht mit der Technologie mitzuhalten wird man zurück gelassen. Natürlich kann man noch ein Spiel für den GameCube Programmieren, jedoch werden die meisten lieber das neue Call of Duty spielen als ein Spiel für eine über 20 Jahre alte Konsole. \n\nEin Software developer muss heutzutage mehr können als einfach nur Programmieren. Programme sind so komplex geworden dass eine einzige Person nicht alles machen kann. Es werden mehrere Personen benötigt welche dann ein Team bilden. Dieses Team muss zusammen komunikativ Probleme lösen können. Diese Probleme sind vielleicht zu komplex und müssen deswegen abstrahiert werden, vieleicht muss auch ein Model erstellt werden um ein Problem oder Konzept zu veranschaulichen.\n\nDas alles muss natürlich irgendwie gemanaged werden. Deffinierte Prozesse können nicht verwendet werden. Keine Software ist wie die andere. Es muss felxibel und agil gearbeitet werden. Ein Produkt wird aufgeteilt auf Teams, nach einem gewissen Zeitraum werden die Teilprodukte zu einem ganzen zusammen gefasst. Dies wiederhohlt sich wodurch mehrere Versionen der Software entstehen immer mit dem Ziel besser als die vorherige zu sein.\n\nThank you for coming to my TED talk.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1266293,
      "meta": {},
      "text": "1) Ein sehr offensichtlicher Grund, welcher zur Veränderung in der Software-Entwicklung beiträgt, ist der stetig wachsende Anspruch seitens der Nutzer an die Software selber. Beispielsweise war man früher schon darüber begeistert, wenn man einen einfachen Text am PC verfassen konnte. Heute wollen Nutzer Software die Features wie bspw. Autokorrektur, Schriftarten & Designs, verschiedene Exportformate etc. enthält. Sprich durch wachsende Ansprüche an die Software, verändert sich auch die Software Enwicklung, da die Programmierer auf immer neue Probleme stoßen werden, die es zu lösen gilt. \n\n2) Ein Beispiel für Veränderung aus der echten Welt, wäre etwa die Automobilindustrie. Früher war man darüber begeistert, wenn einen das eigene Gefährt auf vier Rädern einfach nur von A nach B gebracht hat. Heute wollen die Autobesitzer Features wie Navigation, Info-/Entertainment, Klimaanlage, elektrische Fensterheber etc. Wie auch im vorherigen Fall steigen hier die Ansprüche. Automobilentwickler müssen sich in diesem Fall stetig anpassen und Neuerungen präsentieren, um Wettbewerbsfähig zu bleiben.\n\nRequirements changes: Siehe Erklärung/Beispiel 1)\n\nTechnology changes: Mit der Zeit werden die PCs immer schneller und dadurch auch komplexer. Verschiedene Techniken ermöglichen immer neue Leistungswerte und das wirkt sich natürlich auch auf die Sofwareentwicklung aus. Wenn mehr Leistung zur Verfügung steht will diese auch genutzt werden. Beispielsweise die Berechnung von Viren erfordert eine enorme Rechenleistung. Allerdings muss hierfür zunächst die passende Sofware entwickelt werden. Allgemein formuliert kann man sagen, dass moderne Technik in neuen Herausforderungen für die Programmierer resultieren. \n\nOrganizational changes: In den Anfangszeiten des Computers brauchte es keine großen Entwicklerteams. Zum einen gab es keine großen Kollaborationsmöglichkeiten und zum anderen waren die vorhandenen Programmiersprachen eher spärlich. Heute sind das Ganz anders aus. Durch immer komplexer werdende Sofware und einer enormen Anzahl umfangreicher Programmiersprachen, braucht es große Entwicklerteams. Diese müssen sich untereinander organisieren, um sinnvoll und effizient miteinander arbeiten zu können. Schlussendlich ist die Organisation in der Software Entwicklung von Heute eine ganz andere als früher. ",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1262541,
      "meta": {},
      "text": "Change in software development  happens because development is a dynamic activity. While developing software, there may be unforeseen hinderances such as problems with integration, or a development tool no longer being supported. Change is not necessarily bad though, and can ultimately lead to a better product.\n\nThe three main types of change are:\n- Requirements Change: where a client or manager may adapt/change the criteria or requirements for the software. For example, the client asked for a public web server to be set up, but then requests that it have a log-in added to it.\n- Technology Changes: A change in the technology being used or available. An example may include switching from one development tool to another, when a newer, better suited version is available.\n- Organisational changes: Changes in team structure or organisation. For example changing from a static workflow to a SCRUM workflow would be an organisational change.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264061,
      "meta": {},
      "text": "The world is not static and things change.\nThis especially applies to software development since it is fast-paced and thus changes continuously.\nChanges can for example be new tools such as frameworks or new research insights such as using superscalar GPUs for AI training.\n\n----\n\nRequirements change:\nRequirements are the defined goal of the software. These are specified by mostly the client. The client can change his mind and thus the requirements change.\n\nTechnology changes:\nThose are some of what I touched on above in the first part. These changes are induced by new technologies and will always keep on coming as technology will mature.\n\nOrganizational changes:\nAlso, the way software gets developed and its organization/structure changes as well. This can be the transition to agile software development styles such as scrum. This has a more general implication and is a more gradual process in comparison to technology and requirements changes.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264881,
      "meta": {},
      "text": "The way software development is approached has drastically changed since it first started. \nAn example for that would be Java, how it started as a small Programming Language and turned into one of the most profound programming languages in the world.\n\nRequirement changes occur when the customer wants different features that were not part of the initial plan. Besides that, the plan sometimes does not work out the way that it was meant to due to the fact that many groups work at a big project and therefore, the results do not align as well as anticipated. Java for example is  nowadays much more advanced because they had to update its featureset (e.g. Streams) due to the change in necessity.\n\nTechnology changes occur when the previously used technology is too outdated and better software for example exists at the moment. In order to keep up with the competition, one has to be up to date with the latest technology so that this company does not have a disadvantage in the field. An example for that would be the way software had and still has to be rebuilt to run on Apple's new M1 chips.\n\nOrganizational changes occur when the structure of the firm changes due to a change in project members or when a company expands. Consequently, the initial structure needs to change in order to manage that new amount of people and has to assign a certain role to every member of the team. An example for that would be how WhatsApp was bought vor example by Facebook. Therefore, a lot of organizational changes needed to be done.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265639,
      "meta": {},
      "text": "Changes in software development happen because software engineering is dependent on several input factrs, such as techniques, methodologies and tools as well as a given budget and deadline. Those input variables are submit to change, which than affects software development resulting in a change in the process. That is why nowadays software engineering is a iterative and incremental process, in which after each iteration changes have to be acessed and dealt with (agile software engineering). One observed example of change in the area of software development is that due to the pressure of cost minimization, software development is relying increasingly on the outscharing model, e.g. tech companies in Europe or the USA get their software made from software engineers located in India. \nChanges can occure regarding the requirements. This means that client´s demands concerning software are changing in various dimensions, such as delivery time or functionality. One example is the delivery time. In the past, projects typically lasted few years while nowadays they only last typically a few months in order to deliver the product faster and meet the client´s need. \nThen there is change in the technology. This encompasses for example the available programming languages, hardware, etc. One example is the technology cloud computing, that allows you to take your software workloads to virtual servers, which makes it easier and more affordable to offer software to more people.\n Lastly, changes in the organization also impact software development, meaning the e.g. how software development teams organize themselves, split roles and define the development process. One example is that nowadays SCRUM is a vastly adopted empirical process control.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266109,
      "meta": {},
      "text": "\nAs the software industry experiencing a rapid change, the software development processes needed to be improved so that companies response the changes in industry more quickly.\nAfter the digital cameras and camera phones are invented, the physical photographs become less popular. For example, the Polaroid has experienced a big fall. They were not ready to the change in industry and didn’t response quickly.\nCurrent requirement in the software industry is to adopt the changes quickly. Previously the waterfall methodology was used but waterfall couldn’t response the change quickly. With the agile we have the end product very quickly therefore we can adopt changes very quickly.\nBesides, Agile support the innovation and technology change because it is very iterative. Companies are able to check the product in every sprint and continuously improve the product. \nThe organisation management is highly changed. With agile, teams engage in regular meetings, they can share information with each other and they can work very collaboratively for the high level purpose. The team can be sure that everybody is working for the right purpose.  \n",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266535,
      "meta": {},
      "text": "Many things can cause change it software development, but it is mostly due to the fact that software development and engineering is a creative process that cannot be precisely and completely described by a fixed algorithm or methodology, and it needs to be able to adapt to change in the real world in order to deliver products that will be useful in the real world. One example of change in the real world is the increasing popularity of online shopping. This change can make it worthwile to increase the budget or time spent on developing an online storefront so the quality and user experience can be better and the product can keep up with the change in consumer behaviour. \n\nRequirement changeshappen when the \"checklist\" of characteristics that your product must fulfill changes (normally the specifications of a characteristic changes or more characteristics are added). For example, the EU passed a new data protection law in 2018 so some new data protection features had to be implemented or strengthened. \nTechnology changes can happen when the technology available to you or the technology competing with your product changes. For example, when smartphones were being introduced, Nokia didn't really adapt to the change in their competitors' technology, which caused it to lose the market power it had. \nOrganizational changes happen within the software development team and can be a change in the tools used to communicate with the others, task distribution, etc. For example, if a company starts growing and hiring a lot more software developers, they might also need to reorganize their teams and implement some sort of hierachy so that not everyone has to deal with every pice of code and talk to every other employee (that would just be super inefficient and borderline impossible if the company or project is big enough). ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262090,
      "meta": {},
      "text": "Because our real life is changing all the time so there are so many uncertainties happening everyday, such as policy changes, new technology rise, sudden leave of team member, urgent requirement revise of customers ...these happen all the time in the world.\nAn example in the real world could be that during the software development, we find the software or technology we are using is not enough or no longer available to fulfill the realization of the customers' requirements. Another example could be a new law come out and have some new rules on the software or technology development so some details in our project need revision.\n\nRequirements changes: Customer want to add or delete some requirements during the software development process.\nTechnology changes: Technology we are using is not available or not good enough so we need to change or think new idea of realization of requirement. Or new technology come out and rise so we need to adapt and use the latest technology.\nOrganizational changes:  The member of scrum team passes away or quits suddenly or the capital flow of the project breaks off.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262107,
      "meta": {},
      "text": "Software-Entwicklung folgt einem Plan, wo aus einer Anfrage mit bestimmten Forderungen eines Kunden eine Software entsteht. Dazwischen gibt es jedoch viele kleinere wichtige Schritte die kumulativ zu dem Endergebnis heranwachsen. Auch wenn diese Schritte durch ein Team bearbeitet und durch mehrere verschiedene Managements innerhalb einer Firma beaufsichtigt werden, kann es bei einem großem Projekt trotzdem zu Veränderungen kommen. Das liegt vor allem daran, dass die Entwicklung letztendlich nicht nur innerhalb der Firma \"passiert\". Softwareentwicklung ist ein sehr großes Marktfeld mit vielen Teilnehmern, sei es Kunde, Firma oder Regierung, wodurch ebenfalls äußere Einflüsse Veränderungen herbeirufen können. Die Welt entwickelt sich jeden Tag auf irgendeine Weise weiter, wodurch auch Software und ihre Entwicklung beeinflusst wird (Beispiele siehe unten). Dadurch kann die oben beschriebene Schaffung von Software über Zeit zumindest in ihren Details anders aussehen. Ein Beispiel in der realen Welt wäre, als Nokia, ein Telekommunikationskonzern unter einer Änderung im Markt, der Ankunft des Smartphones, gelitten hat und dadurch pleite gegangen ist, da sie sich der Änderung nicht adaptiert haben.\n\nEs gibt auch verschiedene Arten von Veränderungen. Die Veränderung der Anforderungen geschieht, wenn z.B. ein Marktgegner eine neue revolutionäre Idee auf den Markt gebracht hat, was somit die Anforderungen von zukünftigen Kunden hebt. Technologie-Änderungen treten auf wenn, wenn sich Technologie ändert und dadurch sich sowohl Entwicklung und Angebot adaptieren müssen. Die Wichtigkeit davon ist an dem Nokia Beispiel weiter oben zu sehen. Zuletzt treten Änderungen der Organisation auf, wenn z.B die Regierung ein neues Gesetz erlässt, dass die Firma und Entwicklung beeinflusst.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262193,
      "meta": {},
      "text": "The changes in software development occur frequently because we live in a society, which has an undeniable desire of getting better with technology and developing everyday. This desire to develop, new and more comprehensive needs of the society lead to the inevitability of the improvement in software development systems and also in technology overall. As an example to this point we can present the system and some software updates in electronic devices such as smartphones and tablets. With the help of these updates in the software systems of these technological devices some bugs can be fixed and the vulnerabilites or some system errors in firewalls can be fixed. \n\nThe changing needs of the community can also be misunderstood and interpreted falsely by the developers of the software systems. Then in order to fix the misunderunderstanding, the developers now have to reassemble or reorganize the changes that they have made in their previous software developments, which leads to another change in the development of the software system itself. After the developers are all humans, just like us. Which means they can also make mistakes and can interpret the changing needs of the society defficient or false. The actual needs which the sociery demands can then get fixed by the developers once they acknowledge their mistakes and then try to fix and improve the software the way the society really demanded it. To give an example from the everyday life these mistakes can occur in particular situations such as lack of picking up the right way of doing thing or incorrect prioritization of the requirements by developers.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262531,
      "meta": {},
      "text": "In the lecture, we saw that software engineering is solving problems in a changing context.\nSoftware Engineers need to constantly adapt because changes happen all the time : requirements can change, technology can change, organisations can change over the time of the project. But also analysis (determining users expectations), design (defining solutions to one or more set of problems), implementation (prepare the software for acceptance testing), validation of the system (check the compliance of any elements with its purpose and functions), delivery (the entire process of getting a software product to customers) and maintenance (the process of changing, and updating software to keep up with customer's needs) lead to change.\n\nAn example for change in the real world could be : we are developing this software with this programming language, a new language is discovered, it is better suited for what we are doing, in the meantime our customer wants to add a new functionality to the software. Therefore I should adapt to this technological change and consider using this new language, but also find a way to implement this new technology.\n\nRequirements changes are when the user has different or additional requirements, or that his needs are better understood.\nTechnology changes are new inventions or innovations that allow more possibilities.\nOrganizational changes can be a change in strategy, in the organisation or in the structure of the company.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263462,
      "meta": {},
      "text": "One of the most important parts of software engineering is problem solving. And that happens in changing context. You can't just work in a defined process that is planned and follows strict rules without deviations like in a factory for clothes. \nWhen you for example work on a project with a team, you can't plan every little thing before. You inspect the situation and adapt to it. For example\t: the customer has a spontaneous change in his request. You need to adapt to the situation and communicate with your team and the customer. That's a possible reason why a change could happen during the software development. This would also be a requirement change. \nOr if the customer wants you to do something impossible, you'll have to communicate with them and maybe change the problem statement to find a solution.  \nRequirements change can occur because of changes in the user requirements.(look at the example above)\nTechnology changes can occur due to the use of new technologies. For example if you use a new programming language. \nAnd organizational changes can for example occur due to a major shift in the personnel of the company or due to a change of a the company goal. ( For example you work on a project with a team but the personnel changes and you have new team mates, Those team mates could have different opinions or need more time etc.) ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263890,
      "meta": {},
      "text": "\tSoftware development change often because it's a complex task that is not predictable. Moreover, a lot of people is involved in making it. Thus, taking into account the uniqueness and different need of each person, making it impossible to have a perfect software development without changes from the beginning. That's why a large part of software development is empirical in nature.\n\nExample from real world:\n\t\n\tI was trying to build a website for streaming service for webinar. But after progressing quite far with the software development, a change is needed because it's very expensive to stream a video to multiple users. After that, I changed my website to a ticket buying platform for the webinar, because it's a lot more cheaper.\n\n1. requirement changes\n\nA poorly defined requirement definition leads to requirement need to be changed later. Example : A online shop business requirement changed, because it turns out they need to make their own payment gateway\n\n2., technology changes\n\nPoor planning leads to using a programming language that is not suitable or outdated. A company is building it's software using C, even though there are many better more suitable alternatives\n\n3, organizational changes\n\nWhen a project manager is changed, the requirement for the software can change drastically because each person is unique. This can lead a complete makeover of the software from the start\n\n\n\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263967,
      "meta": {},
      "text": "Tech and computers are a field where new developments still frequently happen, which may have effects on the software being run. For instance, while smartphones have been getting bigger and bigger screens in recent years, there's also been a rise in the popularity of smartwatches, meaning that the GUI of apps being run on these devices needs to be adapted for bigger smartphone screens as well as small smartwatch screens.\n\nChances are that as a project goes on, you get a more concrete picture of what the end product will actually be like. The same applies to your client, which in turn may prompt them to adjust what they want out of the product, resulting in a change in requirements. At the same time, the technology your software is meant to run on may change; for instance if quantum computing became widely available, current approaches to encryption would likely need to be reviewed. The personnel associated with a project may also be subject to changes; sometimes this comes with changes in procedure, policies, or the company culture. These kinds of organisational changes may also need to be accounted for.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264334,
      "meta": {},
      "text": "Change in software development happens cause advancing more into the future means trying to faster processes or upgrade old systems to the new standard or to the new faster pace that was achieved. For example upgrading from an old mobile phone with buttons to the new generation of mobile phone with touchscreens the mobile phones had to widen the screen and remove the buttons as well as the upgrade the technology for the touchscreen and it most likely happened out of convenience. Requirement changes happen when there a changes in the world that leads to adapt your requirements for example you wanted to build a normal car but due to the shortage of oil you considered changing it to an e car. Technology change is if some kind of new technology gets on the market for example back in the days you most likely used SMS but nowadays you use Whats App cause it is way more convenient as well as you don't have to pay for sending a message. Organizational changes is when an organization changes some components or its infrastructure for example you had to run a certain standard in your business but your company bought a new standard so you have to change the standard and adopt it as well as adjust your business with the new standard.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264586,
      "meta": {},
      "text": "Change in software development can happen for various reasons. If the nature or development process of a project is affected by some exemplary factor (i.e. hiring or loss of team members, financials, timelines or complexity), the collection of techniques, methodologies and tools used would likely change - thus being change in software development, by definition.\n\nDepending on the agreement struck between the development team and client, requirements for the intended function, deployment or maintenance of the project in question can change. For example, if the client of a team building a social media app suddenly decided that they want to add more login/sign-up options, the team would need to add these in the backend. \n\nInformatics is an ever-evolving field, where innovation can have significant implications on development. Regardless of the reason, maintenance, ease, efficiency, compatibility etc., most projects in the pipeline will have to pay attention to any changes in the technology they are using, to ensure that the project is made to the required standard. For example, codebases are oft\nen refactored when libraries become out of date, or new features are added in an involved language. \n\nUltimately, a software development team is comprised of people. With people, the organisational structure of the team can always change. For example, if an engineer highly talented entrusted with a niche technology drops out of the project for whatever reason, the team would need to reorganise itself such that it could continue using this technology efficiently, or it would need to replace the tech in question with another suitable one. Promotions could also play a role in who reports to whom. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266092,
      "meta": {},
      "text": "If a Client wants to change the Language of his/her Software to a new one or to update the Language to the latest version then Change in software development happens. For example: A software is written in old version of Java and now the Client wants to have it in latest version.\n\nRequirement Change: For example: The client wants different colors for his/her Software.\nTechnology Change: A good example can be Android Apps, most of Android Apps are written in Java but nowadays Kotlin is taking it's place and now the demand of Kotlin for android Apps is increasing. Companies are switching from Java to Kotlin because it's a modern language for Android developers.\nOrganizational Change: For example, a company is sold to someone else and the structure of the Company is decided by the new owner.\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266332,
      "meta": {},
      "text": "Changes happen in software development almost every day. There are many reasons for these changes. Firstly, to adapt to a changing environment, which is possible is possible by observing your competitors, observing a market, and investing in innovation. \nA great example of change in the real world could be the history of Nokia mobile phones. Initially, they were market leaders for mobile phones, before iPhone or Android phones.  But they did not anticipate that there is a new category of mobile phones, and then they just disappeared from the market. Nowadays, Nokia phones are rarely used, because there are many other smartphones, that have more functionalities and are easier to use. \nThere are three main types of changes: requirement change, technology change and organizational change. The reason for requirement changes is basically a poorly defined or ignored requirement development process. The main factors for their change are customers' needs, developers' needs and their vision of the product, market demands, and, finally, organizational policy.\nTechnology changes can be described as the main factor for the further success of the product. In order to survive in a market, you have to adapt to new trends and improve the quality of the product by correcting faults and adding new features.\nOrganizational changes plays also a big role here. In order to work more effectively, and improve the quality of the work environment, you have to be well-organized, it is possible with time management, soft skills, etc. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262130,
      "meta": {},
      "text": "Software development changes almost every day. They reach from the introduction of new programming languages to software being updated to accomodate for the needs of the digitalization. The first reason for those changes (regarding organizational changes) is the exponentially growing audience for technology and software. Thus changes in organization, like the extension of teams and the coordination of bigger and more complicated tasks is required (eg. Google building new offices). Furthermore, changes in technology have a great impact on the overall change of software development. These include innovations in hardware (eg. VR games, instead of traditional ones), innovations in software (made possible through the stronger computational power of modern processors and other hardware (also the spreading availability of high speed internet), eg. modern software (game engines, video-editing), that is GPU/CPU-intensive (Unreal, Davinci Resolve) The last changes are the requirements changes. Because of the fast development of competitors' software and technical innovations, the client of a development company might change his requirements from one day to another. An example (in game dev) is the introduction of raytracing, as many game dev teams now had to adapt their lighting and shaders to this new technique. To combat requirement changes, a dynamic work environment and risk assessment are necessary.\n\nA significant change in the real world was in 2007, when Apple released the first iPhone, and thus the first modern smartphone, which was quickly adapted by many other companies. Software development thus changed in such a way that it now had to expand to developing software for phones, not only for computers. Apart from that, web development also changed, because now websites had to be also adjusted for small touchscreens.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262332,
      "meta": {},
      "text": "The software development scene undergoes an ongoing change. \n\nThat’s due to the possibilities coding brings. Everybody can grab a few books to learn it and turn their ideas into reality. This can either result in the innovation of new branches, business models or the improvement of existing software. An example would be the innovation of digital image recognition and the way it’s now used in the most various branches like in cars, medicine, security and further.\n\nSo, let’s look at technological changes. An example would be the innovation of better sensors. The affected software teams now have to adapt to this change by creating new software, or update the old on, which might require an improved image recognition algorithm that can hold up with the new hardware, which suddenly changes the whole way of working as a sensor software developer.\n\nWe continue with requirement changes. Because of the new sensor, the development team now needs to work with a new programming language. Or they need to train themselves in the concept of new arithmetic concepts. Maybe now they also require a data scientist or a KI expert to keep up with the technical innovation.\n\nSo new innovations require a lot of changes in the way of working. Of course, this affects the organization of a team. With new innovation, the world of coding becomes larger and we need specialists of various topics. To keep up with this, a team needs to improve its communication and the working strategy on this particular task. \n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263814,
      "meta": {},
      "text": "Software development is a process of creating and maintaining applications, frameworks, or other software components. In the world, where new technologies come to the market practically every day, they of course affect the software standards and the way its development goes. Furthermore, not only the technologies change, but also the environment like governments, that introduce new laws and restrictions, or new competitors on the market, that bring new ideas and challenges.\nFor example, BlackBerry, one of the most successful IT-companies that  sold more than 50 million of the devices in 2011, couldn't adapt to the change. As the smartphones first appeared, the concurrent Apple and Samsung quickly adjusted their products to that and BlackBerry chose the wrong way and couldn't keep their top-place among the other mobile companies.\n\nRequirements changes are changes in user requirements, increased understanding of the stakeholders' needs or customer organizational re-structure. For example, the client changed the way he sees the app, that the software development team was working on.\nTechnology changes are improves of existing technologies or developments of the new ones. For example, as I mentioned in the first answer: the appearing of smartphones on the market which combine mobile telephone and computing functions into one unit.\nOrganizational changes are actions in which a company alters a major component of its organization (culture, the underlying technologies, operational infrastructure, internal processes) For example, the change of the head of the company, who brings the whole new concepts to the working process and sees the projects completely different.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264022,
      "meta": {},
      "text": "With the rise of the internet in the early 2000 and the globalisation of our industries, the demand of quality software that accommodates and facilitates those fields were in high demands. Software development changed constantly because of new requirements that needed to be fulfilled and competition. Amazon for example needed to change to microservices in order to keep up with new customers and scalability.\n\nOne change could be a new requirement from a customer, to implement into the software. Therefor new development cycles like scrum (agile) were created, to better implement new requirements and to replace the waterfall model. There were also big technology changes, that shape the current landscape. The rise of smartphones nearly got Nokia out of business because they didn't anticipate the high demand and didn't hop on the trend. But also in the organisational structure of a company, change was made. To better work with distributes systems and for example microservices, the developers and managers got split into smaller teams aka. domains so they can work on one subsystem of the business and specialise on in. These teams could be scaled independently of the other domains and services. \n\nThe wold is in constant change and as long as that happens, the infrastructure of our globalised world needs to be changed as well. Therefor software development must adapt to the circumstances because software is nowadays everywhere.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264315,
      "meta": {},
      "text": "Change happens in software development because software development normally isn't a predefined and repeatable process. Instead every project is unique and the process of software development therefor empirical. This means that the development of a software can't be planned from beginning to end because very likely unexpected events (further described in the lower part) will occur which the developers have to react to with their knowledge they have already gained. This can be compared with a sailing trip: Of course the route can be planned, but how exactly the wind will blow, is simply unpredictable. So if the wind direction suddenly changes, the sailors probably have to slightly change the route as well.\n\nPossible changes are requirements changes where the customer's requirements change. For example the customer suddenly wants to have an additional feature implemented.\nThere also might be changes in the technology (because in a changing world technology is likely to be changed and especially improved as well). If a framework which is used in the project, has improved for example and now uses slightly different method names, the affected method invocations must be renamed.\nOrganizational changes are changes in the project organization, e.g. a developer who has left the development team and whose work must be divided among the remaining developers.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265016,
      "meta": {},
      "text": "Change happens because developing technology, computing power, and mathematical methods allow statistical methods to be applied more widely, like deep learning algorithms. For this reason, software development methods have to advance to catch this phase. Therefore, the term “scalability” has gained more importance. For example, in recent times, we have witnessed a sharp change from on-premise environments to cloud environments. One of the factors that led to that is scalability. Because we see that customer demands and technical requirements of software development increase dramatically over time, and with on-premise environments, it is a hard process to maintain the necessary resource level to meet this demand. To give a precise example, high-tech companies can grow very fast, and therefore, their databases need to grow as well. To expand on-premise databases, hardware improvements are necessary and these are hard and expensive. Whereas with cloud environments, it takes seconds for companies to expand and scale their databases. Companies can also pay for virtual servers that have more computing power. To sum up, requirement changes can be explained with increased computing power and scalability of databases. Technology changes can be explained with the increased number of services offered by cloud providers. Lastly, organizational changes can be explained by increased customer demand. For example, a customer can give a project that consists of all steps of implementing a deep learning solution. For this reason, companies need more specialists such as data engineers, data scientists, machine learning engineers etc. Therefore, company teams need to re-organise themselves.\n\n\n\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265321,
      "meta": {},
      "text": "Veränderung in der Softwareentwicklung findet deshalb statt, da alles um uns herum sich stetig verändert und weiterentwickelt. \nSie entsteht durch Fortschritt, der durch Forschung und Konkurrenz entsteht. Unternehmen und Entwickler sollten stehts mit dem Fortschritt mitgehen und ihre Methoden und Arbeit dementsprechend verändern.\n\nEin weiterer Grund für Veränderung in der Softwareentwicklung ist, wenn es grundlegende Probleme in der Art der Entwicklung oder dem Team gibt. (organizational changes)\n\nZudem kann eine Änderung der Erwartungen an ein Produkt für Veränderung in der Entwicklung sorgen. (change)\nEin sehr gutes Beispiel dafür, welches auch in der Vorlesung erwähnt wurde, ist das Unternehmen Nokia, welches Marktführer für Handys war, allerdings nicht mit dem Fortschritt der Smartphones mitgegangen ist, sondern weiterhin herkömmliche Handys produziert hat und dann beinahe bankrottgegangen ist.\n\nTechnologische Veränderung bedeutet sowohl, dass Unternehmen und Teams neuste Technologie für die Produktion verwenden sollten, als auch, dass die Produkte selbst an den neusten Stand angepasst werden sollten. Konkret gesagt ist eine automatische Herstellung effizienter und schneller als die „alte“ manuelle Herstellung von Produkten. So ist z.B. ein Förderband schneller und effizienter als ein Mensch, der die Sachen trägt. \n\nDie Veränderung der Produkte bedeutet konkret, dass bessere Bauteile verwendet werden sollten, wenn es welche gibt. Wenn man beispielsweise Elektroautos herstellt und nun ein 40% effizienterer Motor auf den Markt kommt, sollte man diesen ins Produkt integrieren. (technology changes)\n",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1265633,
      "meta": {},
      "text": "Changes happen in software development due to many factors such as changes in the law / new laws or new technology or even new environments that the project has to adapt too. An example to a change in the real world is the case of the new cookie law in the EU suddenly you had to implement these changes to your website.\n\nRequirement changes happen when the project has to fulfill new requirements  for example during the development a new law was published and the then the project has to follow the guidelines of the law.\n\nTechnology changes happen when new Technology appeares for an example an new super great computer gets released so the project has to be campanile to work on that computer or a better suited programming language should be used.\n \nOrganizational changes happen when the organization changes. That means the project team might change \nor a set of internal rules at a company are implemented. As an example for this change would be a team is developing a new website and somebody new comes along that knows javascript so the team lets the new guy help them there for the front end development and the other can shift focus.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266539,
      "meta": {},
      "text": "There are many variable factors during the process of software development. That is why it is called a process. For example the customer realizes that he needs something completely different from what he previously wanted. So the developer has to adapt to the new needs. \n\nRequirements changes can be like the first example. You as a developer present your work to the customer and he did not know that the solution he asks for did not meet his requirements. Now you as the developer have to change that. \n\nTechnology changes occur when you for example write a program which is already outdated. The technology changed during the process so now you have to adapt to that. \n\nOrganizational changes can occur when the organization rethinks its main components. When they decide to have a new operating system running for the whole company.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262165,
      "meta": {},
      "text": "Ever since the rise of industrialisation humanity is used to a stiff working routine when developing a Product. As it turns out way of production works fairly decent when using your employees like Machines (Employe A produces part a, B produces b ...)\nIn the last decades, this opinion started to shift. Companies started realizing, that a work routine that isn't rigid and written in stone is actually preferable to the old system. The reason here is the fast nature of our modern world. Problems appear and are to be dealt with as fast as possible.\nAn example would be the technique scrum. When an institution uses this method they implement a self-adjusting control circle in the workflow. So let's say after three weeks they review the product. Looking at its strength and weaknesses of it they can readjust the priorities and improve the outcome. (Such review circles also happen more frequently but to a lesser extent.\n\nRequirement Changes :\nAn agile working environment is needed -> implementation of sth scrum like\nCoworkers need to be capable to handle multiple subjects or at least have good communication with others who know about it.\nE.g\n\n\nTechnology changes\nMethods of interacting fast with the work of others (e.g git)\nGood feedback system to improve the system itself\n\n\nOrganisational changes\nVery good and frequent interaction with the customer (so the outcome is perfect)\nFeedback Loops getting implemented\nBetter communication with the team about the workload, and what is expected of them\nE.g scrum\n\tOr No mans Sky which listened to their community and made a great game (looking at you EA)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262274,
      "meta": {},
      "text": "Software development is an empirical process in the real world, as opposed to a strictly planned process in a perfectly predictable environment. This means, that a number of aspects which have an influence for the project at hand could change during the time of development.\n\nIn particular, three aspects of a project can be identified in which change generally occurs: requirements, technology and organization.\n1. Requirements could change, if for example, a software is being developed for a specific target group of people, but after a couple of iterations and testing with potential customers, it becomes clear that certain features are no longer needed or the product doesn't fulfill its purpose as expected, so goals and requirements for the project must be realigned with new insights.\n2. These days, a lot of technology used in software engineering is open-source and constantly changes, so especially for projects that run over a longer period of time, some of the code might become outdated and need refactoring, or a better solution or framework might present itself along the way, which could lead to a partial reconsideration of the tech stack of the project.\n3. Organizational changes are often related to human resource matters. In longer-term projects, developers might come and go, or budgets of the company might be cut or raised, which can have a profound effect on any ongoing engineering project.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262285,
      "meta": {},
      "text": "Es gibt viele Gründe warum es in der Softwareentwicklung Änderungen gibt/ es zu Änderungen kommt, so kann sich die Technologie (Frameworks, Programmiersprachen, ...) ändern, die Anforderungen an die Software ändern sich über die Zeit, die Wünsche des Auftraggebers wechseln und auch Entscheidungen der Konkurrenz sowie Geo-politische Ereignisse wie neue Gesetze, Kriege, etc. haben einen Einfluss auf die Softwareentwicklung.  Ein Beispiel in der echten Welt wäre zum Beispiel die Übernahme des Konzerns Twitter durch Elon Musk, so wird es sehr wahrscheinlich dazu kommen, das aktuell laufende Entwicklungen für die Plattform durch Elon Musk gestoppt werden und neue Funktionen/ Änderungen in Auftrag gegeben werden. Dies passiert nicht zuletzt dadurch, dass sich höchst wahrscheinlich die Philosophie des Konzerns drastisch ändern wird und sich die Software Entwicklung daran anpassen muss.\n\nTechnology Changes:\nDamit sind Änderungen in der Technologie gemeint, welchen einen Einfluss in der Entwicklung hat. Zum Beispiel Updates in Programmen mit denen entwickelt wird, neue Funktionen in Programmiersprachen, Änderungen in Frameworks welche verwendet werden, ... . Auf all diese Änderungen muss entsprechend reagiert werden.\n\nOrganizational Changes:\nDiese Art der Änderungen betrifft die Art in welcher entwickelt wird, so kann es sein dass man sich von der klassischen Softwareentwicklung auf die agile Softwareentwicklung umstellt und ein Modell wie Scrum in der Entwicklung einführt. \n\nRequirements Changes:\nAbschließend gibt es noch Änderungen an die Anforderung für die Software, so kann es sein, dass verschiedene externe Ereignisse wie eine neues Produkt eines Konkurrenten, Wünsche der Nutzer der Software, ... dafür sorgen, dass die Software angepasst und verändert werden muss.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262323,
      "meta": {},
      "text": "Change in software development happens because ",
      "score": 0,
      "language": null
    },
    {
      "id": 1262866,
      "meta": {},
      "text": "\nNothing in the world stands still, and we have to incorporate this fact in Softwaredevelopment. Only because i develop a program with a certain tool, doesn't mean that it will be failsafe forever. Maybe a vounerability is detected in the tool like the log4j vunerability and then i have to be flexible, change parts of the Programm and maybe even in the whole development structure and process. \n\nRequirement changes happen when certain aspects of the programm have to be changed, because of changed requirements. Maybe there is a new function that the customer needs, that has to be integrated into the existing code.\n\nTechnological changes happen with time. Maybe there is a new processor type, and you have to forfill certain new aspects during programming to guarantee that your programm will run on all specified products. \n\nOrganizational changes can also have an impact on your development process. Maybe one of your coworkers has suddenly fallen ill, and now his work must be done by others to meet a deadline.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264740,
      "meta": {},
      "text": "An example for change in software development could be the scrum process. Instead of being more planned and time-consuming, this model is an iterative approach divided into sprints where it is much easier to implement changes to or even cancel ideas/features for a product. These may occur due to time constraints, technical infeasibility, or whatever other reason.\n\n\nRequirement changes in development occur for example when a customer has different needs for the software or the target group for the program shifts. The software must then be adapted to better fit those requirements. Changes in technology might occur with the release of a new customer platform or OS for example. In this case the software should be ported and optimized to take advantage of the new technology. It might even be a change in the technology and tools you use to build the program itself, in which case the team(s) behind the project should be assisted in adapting to these new and better methods and technologies. This leads nicely to organizational changes which can be seen as mainly HR related. Reorganizing teams and even crunch (unfortunately) might be necessary to maintain/increase productivity and meet deadlines.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265048,
      "meta": {},
      "text": "Software development (SD) is a complex process with links to many other complex technological and economic areas and highly specialized environments. Changes in any of these adjacent fields can - and often do - also cause change in the course of SD.\n\nAs hinted by the exercise task description, we can mostly distinguish such inducing changes into three main categories. These are requirement changes, changes in technology, and organizational changes.\n\nIn many cases, requirement changes can be understood as a shift in the demands and needs of customers or shareholders. This, for example, encompasses the demand for new or improved features meant to streamline processes at a customer company or the demand for interoperability with other software.\n\nTechnology changes occur when e.g. new technologies become available to a broader spectrum of developers. Incorporating such changes into the own SD process early on can be a good choice. It might allow a company to have a USP and gain expertise before the competition does. An up-to-date example is web assembly, which is adapted by large parts of the web development field. Reasons for this are that wasm allows for circumventing latency issues, provides a secure, sandboxed local environment, and high portability.\n\nLastly, organizational changes could be tied to any of the categories mentioned above or be mainly of political nature. Think of a company that already has a software product for some specific application domain and then decides to acquire another company with more expertise in that domain. In this process, several development teams would likely be merged to create an overall stronger product.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265196,
      "meta": {},
      "text": "Change in software develpment happens due to the agile software development. Agile software development is based on an empirical process using lean thinking. An empirical process is not entirely planed and is constantly inspected and questioned. Then the process is adapted according to the result of the inspection. Lean thinking refers to the exact process: formulate assumptions -> build a minimum viable product (mvp) -> send it to the customer -> await feedback -> adapt the mvp to the customers needs\nThe technique used in software engeneering today is called Scrum and implements lean thinking into a team based process. \n\nThe requirement changes result from the adaption of the Scrum process after each sprint. Another thing that could influence the requirements is that the customer changes or adapts the problem statement as more functionality is added.\n\nTechnology changes occur due to the constant technological innovation. As faster and better hardware is released the way certain problems can be solved efficiently changes too. E.g. the introduction of new chip architectures might lead to other, more efficient ways to solve certain problems. Other algorithms might be more efficient for another architecure.\n\nOrganizational change occur when (important) employees quit their jobs or a given brand tries to improve their processes and e.g. tries to implement Scrum. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265915,
      "meta": {},
      "text": "Change happens in software engineering because it evolves with the world, for example the necessity of technologies like phones made our everyday life completely different, that's why software developement changes, to adjust with the requirements of the world.\n\nIn the past century, humanity explored an exponential evolution, let alone the past decode where incredible technologies became necessities, we introduce new things to our lives in this era fast, and with the requirements changes, software engineering must change too, for example in times of corona, people needed to make contact with each other as rarely as possible that's why a lot of businesses switched to online paying.\n\nWith the technology changes, software engineering changes too. the implementation changes with the design, material..etc For example, we have nowadays electric cars are being more and more developped, and soon, will beat normal fuel cars, both are cars, but they don't function exactly the same, that's why behaving-wise the two aren't the same which makes the change in software.\n\nEfficiency is always a priority in software engineering, that's why engineers always look for different kinds of organization ways that are the most efficient and cost the least. We see this in the creation of new programming languages and the death of others constantly over the past years.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266037,
      "meta": {},
      "text": "Changes in Software Development is something that one will face at each phase of the development process, again and again, until the project is finalized.\n\nA lot of things can \"change\". Expectations from your clients or from yourselfs can evolve in the middle of the development.\n\nBudget can be adjusted, restraining you or enabling you to do more.\n\nNew technologies may need to be adressed as a project can be in development for years. If a project doesn't adapt to those new possiblities, it might become obsolete before even being finalized. \nWe could use the exemple of quantum computers as a new (faster?) way of computing or new infrastructures for 5G opening new possiblities for information transmission.\n\nWe might encounter problems that we didn't imagine beforehand, that would make us rethink a project significantly.\n\nTeam members can change too, as projects can spread over years, such a change can significantly impact a project's flow. A new team member might take time to really integrate a team, and an old team member can leave unreadable code that becomes unusable for others.\n\nOverall, change is everywhere in software development and that's why we need software developers to be able to adapt to it. I think a software developers most useful skill to have is adapation.\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266279,
      "meta": {},
      "text": "As new technologies arise and develop, the needs of companies and people start to change. A programming language that wasn't popular before may start to become popular due to technological changes in the industry. Before the invention of the World Wide Web, there was no need for web developers and the programming language JavaScript. Since everything is on the internet now, every company from startup to big-tech need to hire web developers to appeal to the users. Another example would be the switch to smartphone after the release of Iphone and how companies that don't adapt well to this change like Nokia, which was the one of the biggest phone companies in the world, could turn on its head in just a couple of years. Which is why in the tech world, companies need to embrace change and adapt.\nThe example of Nokia is a good one for the technological changes that a company needs to make to stay relevant. If you don't adapt to the new technology or invention, you will be left behind. A company also needs to keep their size and growth in check. A small startup may need one person to do a lot of things at the beginning but as the size of the company grows, the more specialized employees they will need. They may need to some major organizational changes. Lastly for the requirements change the development of smartphones in the last decade is a great example. After a certain company releases a smartphone with finger scanner, the users expect every other company to do the same due to new standard that was set by the first companies. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266432,
      "meta": {},
      "text": "For Example with the introduction of open-source software systems, the monopolistic approach of big companies such as Google or Microsoft has been changed. While in old times they were using their software to make big profits, now their approach to software development is different. Today they are more active in encouraging the growth by publishing their newly developed software products with open source codes. And their recent approach was really helpful to achieve more total growth in the area of software development. \n\nChanges in Software Development could emerge as requirements, technology, or organizational changes. First of all, requirements change in Software Development is inescapable. Changes in users' wishes and requirements changed requests of stakeholders or managers of companies with their increased scope of knowledge or new emerging technologies could be easily the reason for requirement change. To elaborate with an example, stakeholders of a software company decided in an internal meeting to develop their software product for satisfying their customer's requests.\n\nTechnology changes in software could happen with newly introduced technologies. For example with the rise of Blockchain Technology recently, lots of big organizations started to make investments in new P2P(peer to peer) Payment software or expand their team with new talents in this field. RegTech software is another example.\n\nFinally, ''META'' (Facebook) would be a perfect example of an organizational change. They are having a huge transformational change and that's why it will be inevitable for them to leverage their organizational change management. \n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263152,
      "meta": {},
      "text": "When developing a software, a team often stumble into core problems which could be unfixable if the team decides to keep going without addressing and changing things. For example, imagine your team are developing a program in Java. Halfway through, your team realized that switching to C++ would greatly speed up the running speed of your software. A technology change is needed here and the failure to do so here can lead to inability to compete in the market because of the slowness of your software.\n\nAn example for a requirement change would be a change based on the needs of the stakeholders or users. Midway while developing the software, the team could add or change certain functions of the software based on the demands of the stakeholders.\n\nThe last would be organizational changes and an example for this would be a partnership. Your company could decide to partner with a certain company which has good resources such as datas, man-power etc. which your company could use to research and develop a software which fits the market.\n\n\n\n\n\n\n\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264119,
      "meta": {},
      "text": "In today's highly digitalized, fast-paced market it is rather challenging to stay on top of the everchanging dynamic of software development as new requirements may appear suddenly and the need for agility and the ability to adapt to swift change are critical for a successful project.\nwhat happened to Blackberry which once was the iconic top-selling technology? well, as opposed to its rivalries, Samsung and Apple at the time, that launched the touch screen technology, the company stubbornly chose to keep the same phone Model with a physical keyboard, which ultimately caused its downfall. it is important to note that identifying changes in the development's environment is crucial for a successful project.\nSeveral reasons may induce a change when developing software.  throughout the progress, the client is very likely to apply tweaks or even shift the direction of the whole project, be it because of a new business idea, a complete change of this business's environment since the beginning of the software development, unsatisfactory results of tests or simply to fill in the gaps in the analysis process while implementing the software. \nAn important incentive in the previously mentioned requirements changes is the unprecedented rate at which today's technologies are growing and shifting. that's why it goes without saying, that technology changes are another area that a development team must stay on top of, as the market demand is highly linked to the current trends. for example, software development has evolved to cater to big data needs from collecting, storing, and analyzing data. this need parallelly requires big data security as a key element from the beginning of the development of any software that interacts with data. \nAdditionally, enabling these changes to occur in a deliberate, safe, and structured manner is essential to developing the organizational agility that companies need to succeed in the modern business environment. That's why, organizational changes guide how companies prepare, equip and support individuals to adopt change successfully and to drive organizational success and outcomes. Changes to the roles of individual employees (team dynamics) or the company itself are examples of how these shifts may occur. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264400,
      "meta": {},
      "text": "Change happens in the software development, since the problem is usually complex and there can be problems like unclearly defined problem descriptions or unverifiable requirements found throughout the process of software development. Firstly, the changes will be made, otherwise there could be impacts on further cost or schedule. For example, an ambiguous problem description is found in the software development, then the problem description must be changed, otherwise the systems cannot be built. Secondly, the clients could be unclear about their actual needs and expectations at the beginning, so constant communication and changes help elicit and concrete the expectations. \n\nRequirement changes are stated as above. The problem descriptions without unique objects and unverifiable requirements are needed to be changed so that the requirements can be more appropriate and precise. Technology changes happen when for example the technology the project is based on is not mature enough to tackle the problem, leading to potential risk and delivery problems so that the underlying technology could be changed. Organisational changes are adaptions in the agile process control. For example if the team uses scrum, it will have the retrospective after each sprint to summarise what can be changed and improved in terms of organisation in the next sprint. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265718,
      "meta": {},
      "text": "Change happens in software development for the same reason it happens in any other discipline - industries are constantly changing, innovating, using new technologies and in order to stay competitive and adjust to this changing environment one must change as well. \nAn example for change in the real world would be streaming services becoming more popular than DVDs. Movies used to be sold or rented out physically as DVDs and then played at home. Nowadays, many laptops do not have a DVD drive anymore, because most people prefer using streaming services. Even within streaming services you can say that the business model has changed significantly; from individual renting/ buying to subscriptions.\nRequirements changes occur as a result of environmental changes, e.g. a new technology emerges, causing your business model or product to be adjusted with new requirements for it. In the example above, given a streaming service company seeing a trend in the market of subscriptions being more popular than individual buying/ renting, a requirement change may occur in the company, if they are not yet able to offer subscriptions.\nTechnology changes refers to new technologies emerging and possibly replacing older ones. In the example above that would be the ability to stream movies online rather than needing a physical copy to put into a DVD drive. \nOrganizational changes are environmental changes. These could be within a company or a market. An example would be new competitors establishing themselves in a market or even driving out previous competitors.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266454,
      "meta": {},
      "text": "In Software Engineering developers deal with frequent changes in the environment and have to adapt quick to meet the expectations required. For example the customer for whom the software is being developed might add new demands to the functionality of the product. In this case the developers must adapt quick and see if the change is implementable with the current design.\nThe first of the three main change types developers encounter might be requirements change. Here the Software should be able to run on multiple OS due to not knowing who might use it with what technology in the field. A possible change in the used programming language, such as Java to Python, is quite seldom yet still an option. \nFurther a change in the used technology such as momory capacity of computers that lets the Programm run faster or enables new functionality due to higher processing speeds opens up new oppurtunities but can also make things more complicated. For example the introduction of cloud based computing might throw off the intended design and requires a shift in the prior design thinking.\nThe last typ of change has to do with the organizational level. Herel a core developer might leave or even a new Product Owner might be introduced. The change within teams can have a substantial impact on the efficiency.\nIn summary, software developers can encounter a variety of changes during the development of the software on different dimensions that can be beneficial but also could compromise existing outcomes.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261656,
      "meta": {},
      "text": "Before answering the question lets emphasize 2 types of change: first is the change in technology itself the hardware and the software, and the second is the change in requirements and objectives of the society. Stricter laws on personal data protection change the software, a higher demand of noise cancellation technologies while making calls from crowded places imposes new standards for software. So, change in software development is not only an advancement in technology itself, but is also a response to change in public and private polices and regulations and not only. \n\n3 areas of change\n\n1. Requirements change as we strive for lower costs, better efficiency, businesses and governments impose new regulations to which the technology must follow. For example, a bank serving simple software app written by React Native may have new requirements to be built on blockchain technologies. \n\n2. Technologies change as cutting edge new research and know how contributes to it. Science is being constantly developed due to the new technologies, which itself develops already existing technologies, it's like the. As a result new concepts Blockchain and cryptocurrencies, NFTs emerge. \n\n3. Organizations, for example, can change as a response to a new reality, a vidid example is the hybridization of organizations during the Covid pandemic. Even after the pandemic some organizations choose to offer hybrid jobs. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261972,
      "meta": {},
      "text": "Software development is a product development process, in which a software system or software-part of a system is constructed according to user requirements. In software development, changes could happen at any time, especially in the 3 areas: requirements changes, technology changes, and organizational changes. Becuase in the software lifecircle, there are so many activities that would have changes during the development of software. \n\nThe requirements of customer may change according to the marketing change. For example, a software ware asked to be developed to help produce fuel car, but the price of oil rises strongly high recently so the customer switch to reqiure a software helping produce electrical car.  \nWith the development of science and new technologies, changes could also happen. Maybe new technology could be used in the software development, or some old technologies are not suitable in the software development at all.\nAs for the organizational changes, the organization of the software development team may also change.  Due to personal reason, someone may leave the team or someone else would join in. At this time, the arrangement of development may also be changed on depend, and it may influence the software development.\n\nAs changes happen in software, Software engineering is nessesary. It is problem solving and it deals with the changes and complexity in software development.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263791,
      "meta": {},
      "text": "1)\nChange in software development can arise from internal and external factors. New regulations (e.g. GDPR), breakthroughs in innovation and new demands from customers are examples for external influences, but change in plans can also be required if the current system design turns out to be unfit for otherwise non-changing requirements. \n\n\n2) \nOrganizational Changes:\nOrganizational changes are changes that affect the organization of a business / project. An example would be larger changes in the culture, i.e. the current state of the team. How this change takes place can be explained with a model from Tuckman, Bruce (1965): The culture of a team undergoes major changes in four different phases (Forming, Storming, Norming, Performing), which come with different member behaviours and goals you should aim for (e.g. systemizing processes more strongly in norming).\n\n\nRequirements Changes:\nRequirements changes are when the requirements of a software project change. An example would be the occurrence of new insights regarding how customers use the software. If this is very different from how it was previously imagined, it makes sense to change the requirements of the software. \n\n\nTechnology Changes:\nThe emergence of new technologies can drastically change the development plans for a software project. For example, Apple revolutionized the use of touchscreens in phones, and companies that stuck to the old technology of relying on physical buttons (Nokia, Blackberry) saw themselves losing a big part of their market share. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263826,
      "meta": {},
      "text": "Change occurs in software development because the tools and languages we use to develop software are always being continuously improved. The best example I can give for change would be from the american lunar programs in the 1950s. The first mission to take mankind to the moon, Apollo 11, had a \"guidance computer\" with 2.048 MHz and a RAM of 2048 words, with only 11 instructions. For comparison, the intel 80386 processor that we use in ERA has nearly 4 thousand instructions. 2048 words of RAM means (according to standards we use in ERA - 32 bits per word) equals to about 8 kilobytes of RAM. 8 **kilobytes of ram**. That was enough to take man to the moon, and these days an average browser uses hundreds of MBs, possibly even GBs of ram to open youtube.  \n\nRequirement Changes: Requirements of a project are directly influenced by what the product is aimed to accomplish. These requirements can change drastically. For example, a product made for Banking/Finance will aim for security and accuracy. An inaccurate banking tool is worth nothing, and a faulty one will be discarded. Whereas a product made for machine learning can be anything but accurate, because the product is *intended* to deviate in order for the machine to learn.\n\nTechnology Changes: This is the one that I believe we will come to intimately be involved with in our careers. For example, in the past 20 years, the languages we use today looked drastically different. The CPUs we use for our laptops, 20 years ago, barely had a GHz of processing power.  This continuous change is something that we will be forced to adapt to.\n\nOrganizational Changes: Software development is a nascent branch. Relatively speaking, computers that we can write code for have only existed for around 70 years. That is, give or take, an average human lifespan. Due in part to this, software developers haven't had enough time to develop one perfect way of developing software. As requirements, people and technology change, so does the way we organize our teams. From the strict methods of defined processes all the way to the modern empirical process of software development. \n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265371,
      "meta": {},
      "text": "The use of Artificial Intelligence will make the software proactive. It will tell the software what the user wants based on their expectations of the user's needs, preferences, and behavior. As technologies like AI are growing very quickly software development gets more and more dependent on the data of users and features in software that fit more to their requirements. This will lead to great need for storage and processing of huge data amounts and not only for smart programmers. For example when a small online shop grows, the software development for this web site needs to be changed in order to be comfortably used by way more users then before.\n\nRequirement changes: In early days of chatting platforms like Whatsapp for example, these platforms were only considered to be used for sending text messages. These requirements got obviosly too low with time, so sending pictures, recording audio messages and video calls became inavitable.\n\nTechnology changes: As the number of different programming languages grows, the software development project needs to be flexible and maybe change a lot with time in order to find the most suitable language for its' purposes.\n\nOrganizational changes: In the early days of software development the waterfall methodology, a project management approach that emphasizes a linear progression from beginning to end of a project was the only methodology used for software development. These days always more and software projects need to be organized as agile projects, that means that the software may be used in the first days of its development and is improved by the developing team as the requirements change with time.\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265631,
      "meta": {},
      "text": "Software development is a field which is open to lots of changes especially nowadays, in the days of digital transformation. As we think the concept \"technology\" as a main category, software is one of the sub-categories of it and as the technology is getting more and more developed, it's inevitable to observe changes in software development area. Development means also change, but with one difference. Change can mean both positive and negative, but development means changing positively. Long story short, people need always MORE in today's world. They need more speed, more time, more information, more digitalization, ect. And all these phenomenons are connected to each other at some point, because of this need to more, change happens in software development. As an instance, Code::Blocks is an IDE for the programming languages C and C++. I think we can with peace in mind say that it's a very old, primitive and undeveloped IDE with its interfaces and etc. Therefore, people needed to develop some other more developed and more suitable for use tools like CLion or Xcode. \nRequirements, technology and organizational changes are all intercorrelated concepts. For example, think of a software team of company A working for a one of company B's projects. And there's a request from company B. They want this software team to change their habitual software tool and switch to another tool which will increase the cost but decrease the necessary time for the project. And in this way they can work home-office. This change is a requirement change, because one of the stakeholders of this project required it and now it's (almost) a must. It's a technology change because now the team has to adapt to the new tool and has to learn how to work with it. It's also an organizational change, because this change will evolve their way of work. Maybe they will need more time and need to work more, but they can work remotely and must not come to office. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265989,
      "meta": {},
      "text": "Change happens in software development, because the demand for technology services, in particular software, is increasing exponentially and the end users want to use new features as fast as possible. This creates a lot of pressure for software development, not even mentioning the high competition software companies have to deal with. Therefore, those companies have to design efficient workflows to achieve a business advantage over their competitors, by using the agile software development process to deliver new features as fast as possible, for example. In addition, technology itself is improving very fast, which means that the whole software development has to adapt to those changes, otherwise you risk to fall behind your competitors. An example for this would be Google, Apple or IBM who are investing a lot of time in researching in the field of AI, because they know that the potential of AI will improve the user experience by a margin. To give an example for change in the real world, you can take Elon Musks recent announcement, to make Twitter open source. Not only would this decision make the social media platform more transparent, which is becoming more important for society, but also improves the quality of the service itself.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266041,
      "meta": {},
      "text": "Früher waren Anforderungen an Software wohl eher klar definiert, da damals die Anforderungen der Kunden nicht langfristig auf ändernde Nutzerinteressen ausgelegt war. Durch sich ständig in hohem Maße weiterentwickelten Tools und Hardware steht Software im ständigen Überlebenskampf  mit anderen Marktteilnehmern, wodurch eine kontinuierliche Integration und Erschaffung einer Software überlebensnotwendig wird. Durch die kontinuierliche Weiterentwicklung und stetige Anpassung der Software an die Nutzeranforderungen konnten sich z.B. Apps wie Instagram, Snapchat oder mittlerweile Tiktok gegenüber älteren Systemen wie z.B. Facebook, Twitter usw. vorfallen bei jüngeren Menschen hinwegsetzen. \n\nrequirements changes: Durch steigende Globalisierung und Konkurrenz am Weltmarkt, vorfallen was Software angeht, muss sich Software den Anforderungen des gesamten Marktes stellen, welcher sich natürlich sehr schnell wandelt. Bsp. Autonomes fahren. Wer nicht frühzeitig Marktmöglichkeiten oder -änderungen erkennt und in diese Investiert ist vorfallen in der Software in kurzer Zeit hinten nach(Tesla >> andere Automobilhersteller)\n\ntechnology changes: Hardware entwickelt sich immer weiter. Tools zur Softwareentwicklung entwickeln sich immer weiter. Wer seine Software nicht an neue technische Gegebenheiten anpasst wird früher oder später die Konkurenzfähigkeit verlieren. Bsp. Nokia und Apple/Samsung…\n\norganizational changes: Dadurch dass Softwareentwicklung sehr nah am Kunden arbeitet und schnellstmöglich Kundenwünsche umsetzen muss bedarf es an Hilfsmitteln wie z.B. CICD und Pipelining, und einer engen Absprache im Team(z.B. via Scrum).",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266175,
      "meta": {},
      "text": "Die Software Entwicklung ist ein agiler und komplexer Prozess bei dem es viele Variablen gibt die sich ändern können.\n(wie in der Aufgabenstellung genannt: requirements changes, technology changes, and organizational changes).\nEs können niemals alle Faktoren einer Entwicklung kontrolliert werden --> es muss sich ständig angepasst werden.\nZ.B.: Es wird immer mehr auf den Energieverbrauch(grün) geschaut womit sich auch die Anforderungen an Software ändern.(ein Beispiel hierfür energiesparendere Cryptowährungen im Gegensatz zu Bitcoin).\n\nrequirements changes: \n(Anforderungen an die Software ändern sich)\nDer Kunde eines Software unternehmens will nun das die App nicht nur auf Android-Geräten verfügbar ist sondern auch auf iOS.\n\ntechnology changes:\n(die versendeten Technologien ändern sich)\nWährend der Entwicklung einer Software veraltet das verwendete Framework/ein besser geeignetes erscheint , es muss also umgestiegen werden.\n\norganizational changes: \n(die organisatorische Herangehensweise änder sich)\nEin wichtiges Teammitglied verlässt das Unternehmen, jemand anders muss die Rolle übernehmen/eine andere Abteilung übernimmt vll diese Tätigkeiten jetzt",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266247,
      "meta": {},
      "text": "There are many reasons why change happens in software development but I guess I'm just supposed to provide one example for one reason. One reason of change could be an unpredictable event such as e.g. the covid 19 pandemic, where suddenly everyone needed to work and learn from home.  In many areas, an improvement of communication tools was needed and many companies needed to higher their server capacities to handle much more people using these servers at the same time. For example video conference tools had to be tweaked to fit for teaching.\n\nRequirement Changes: Requirement changes are changes that are caused by the customer. If a customer needs additional features or a feature is not working as needed the development team needs to change the code to fulfill the customer’s needs.\n\nTechnology Changes: Technology changes are changes caused by the improving technology. This hit especially hard in software development, because the used technology changes rapidly. That doesn't mean that this is a bad thing. Better technology can lead to a better product. For example a video game can have more detail and a higher resolution when a better graphics card is available. It can also mean more work if e.g. a new technology does not support the programing language any more.\n\nOrganizational Changes: Organizational Changes can occur when e.g. a law get changed or a new law comes into effect. If e.g. the EU decides to make a new law on personal data privacy, there might be some changes on websites needed to fulfill a new regulation like this.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261451,
      "meta": {},
      "text": "Why change happens (First part):\nChange in software can happen due to a poorly defined Development process or if a software is too old and needs to be updated, or if the inherent providers of the software decide to reorganise their objectives. For example, Apple frequently publishes new changes in the form of software updates. This change is either due to the software needing to be at the same pace / level as their competitors, or the development team of Apple have a slight change in objectives. If Apple would have a big change in objectives and goals, it would be more likely that they would also publish new hardware.\n\nThe three areas of Change (Second part):\nRequirement change is a change in the underlying requirements that a software should fulfil. This might be because of poor initial specification or because the consumer's opinion / need change. Apple consistently releases software updates to fine tune their performance and meet consumer expectations.\n\nTechnology changes are changes that are a result of needing to keep up with the current market and technological competition, this happens by improving the pre-existing technology. For example, Apple recently released the M1 chip because they wanted to improve the pre-existing technology and capitalise on it.\n\nOrganisational Changes are a result of the inherent providers of the software having an overhaul in either their organisational structure or their ideology. This can be back in the day when companies started to move to e-commerce instead of traditional ways of selling. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1261469,
      "meta": {},
      "text": "Why does change happen in software development?\nChange is defined as the undergoing of transformation, transition, or substitution. Naturally, change in the software engineering context can stem from a wide array of reasons; from changing environments and use-cases to user errors (PEBKAC). While these changes often only impact the very local timescale, user error is often alleviated very soon after the error has occurred, there are major trends which also define change in the software world; the implementation of new technologies, devices, and protocols to name a few. \n\nA requirement change is most often thought of as a change in the goalposts. This doesn’t necessarily have to have a negative background. It may also stem from a deeper, more intrinsic understanding of the target users’ needs and how the product will be used. However, requirements changes can also be due to ever-progressing technology. An example could be that due to increased demand, a server must be able to process 100,000 requests a second instead of only 50,000. \n\nA technology change is a transformation in the technological interfaces that surround us. In a software engineering setting, it may range from the IDE being used, over the operating system, to whether or not a program must be able to run on a quantum computer. Technological changes are often regarded as external, semi-anticipated changes that must be kept on the radar if the project is to be successful. \n\nFinally, organisational changes include but are not limited to changes in the hierarchy of the software project. This can include a change in the group-building philosophy of the company (ex: technical vs. marketing focus), but could also apply to the way how strictly classes are defined. An example of this is the very strict OOP approach that Java has and the slightly more “fuzzy” approach that the Python engineers decided to go with where OOP is more of an afterthought for a new learner.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262547,
      "meta": {},
      "text": "Why change happens in software dev.\n\nThe main reason why software development is volatile is due to new technologies adapting or improving due to new hardware or software elements. Also, typically software solutions aren’t really finished, they always have some sort of bugs or flaws within the system which weren’t anticipated or are missed out due to various reasons by the team who developed the final product. An example would consist of video games, which is a vast and expanded industry, when games first get developed and commercially available for the clients to purchases, in this context video gamers. They are presented with a game to play but over a period new bugs get found by the gamers or the developers which enforces the team to solve another problem or patch the problem. One of the largest games launched is fortnite and since they have patched glitches or improved the experience of the game. Requirement change relates in terms of accepting the fact that the project needs to evolve, an example is what I mentioned above. Technology changes can refer to new ways of approaching new technology in a new or established project, for example instead of having CDs to run games we can use the cloud to stream them now. Finally organizational changes are in reference to the team and how the hierarchal structure of the team is defined. This can depend on if the team collaborates well together or if there are issues people must be removed or adjustments need to be in place. An example would be the appointment of Sundar Pichai as a senior manager to lead the new software we use daily which is the chrome web search software. \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264515,
      "meta": {},
      "text": "Mit neuen Technologien kommen auch neue Anforderungen von Kunden",
      "score": 0,
      "language": "GERMAN"
    },
    {
      "id": 1264677,
      "meta": {},
      "text": "Oft sind die Probleme, die durch Software gelöst werden sollen, sehr abstrakt und daher schwer verständlich und kommunizierbar. So kommt es beispielsweise zu Fehlkommunikation und Missverständnissen. Die Lösung die der Entwickler liefert, passt dann nicht zu den Vorstellungen des Auftraggebers und muss immer wieder neu angepasst werden. \nAußerdem ist es oft schwierig, eine technisch umsetzbare Lösung zu finden. Bei der technischen Umsetzung gerät man gelegentlich in Sackgassen, welche bei der Erstellung des Plans nicht berücksichtigt wurden. So muss der Plan immer wieder angepasst werden, was die Umsetzung des Programms laufend verändert. \n\nRequirements change: Die Anforderungen an ein Programm können sich aufgrund der sich dauerhaft ändernden Umwelt ständig ändern. Beispielsweise werden bei Microsoft Office Produkten aufgrund der Marktanforderungen ständig neue Funktionen ergänzt, die das Programm benutzerfreundlicher machen und die Möglichkeiten des Nutzers erweitern. Dabei müssen aber auch neue rechtliche Anforderungen wie z.B. Datenschutzrichtlinien berücksichtigt werden.\n\nTechnology changes: Oft erleichtern bzw. ermöglichen die neu aufkommenden Technologien auch die Lösung bestimmter Probleme. Beispielsweise ermöglicht die Entwicklung von Artificial Intelligence (AI) das Anbieten neuer Funktionen in Microsoft Excel. Hier ist es aufgrund der Nutzung von AI seit neuestem möglich, Tabellen, die auf Papier angefertigt wurden, per Foto in eine Excel Tabelle umzuwandeln.\n\nOrganizational change: Unter organizational change versteht man die Transformierung der Unternehmensstruktur oder anderen, essentiellen Unternehmensteilen, um in Zukunft besser operieren zu können. Aktuell findet eine solche Transformation in vielen Unternehmen beispielsweise durch die Digitalisierung statt. Viele repetitive, manuelle Prozesse werden dabei automatisiert und dadurch effizienter gestaltet. Dadurch ergeben sich große Änderungen in der Unternehmensstruktur da einige Aufgaben wegfallen und neue Aufgaben hinzukommen. \n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264800,
      "meta": {},
      "text": "\"The change is the law of the nature.\" said in our Holy Book GEETA .\nNothing is constant in this world ,so Change and Update are the inevitable part of life. With every new Day , a new kind of problem arises and to solve it we have to update not just our strategies but also our methods such as our Algorithms , Hardware Systems and Organizations.  \nLets take the (1.)Example of our Phones(Mobile Phone) ,in every 3-4 Months there is a System Update ,so that they can provide us better Features, irradicate Old Problems and try to make it more user Friendly and with these kind of Updates we are here in 2022 .Now if you compare to the ERA of 1990s when mobiles started, you can see the result of Updation and Adaptation to the changes.     \n2. Example-> we built car for Transportion but requirements get increased such as A.C , navigation system , automatic windows etc and to improvise these Changes we updated our Technology and to put these Technology into working System we need more organizational skills and power. Almost every Area plays an important role to sustain and adapt the change.\n3. Earlier for Restraunt Food at home ,we have to order and collect it from Restraunt. But requirements increased to home delivery, for that a company setup his Organization ,puts the technology forth to utilize this need as a Business and now they are known as Lieferando in Europe. They also change their polices ,technology  to improve their Quality ,but if they won't some other will do it and capture the MARKET. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264896,
      "meta": {},
      "text": "As the environment changes, new requirements emerge and the system must be modified and reintroduced into the environment. For an example, during the covid pandemic, everyone's reliance on the internet has increased significantly and spurred the growth of cloud computing. Most of the companies hold their software on cloud to enjoy a free and larger capacity of data storing. Somehow, the developer might changing the software due the the changes of client's requirements by adding a new feature. Besides, the improvement of technology has became faster and hence motivating the teams to increase software's performance. Now instead of working with manual programming, we increase reliance on artificial intelligence. Also, we are now exploring a 3D virtual world called Metaverse by the use of VR and AR. Additionally, as a global trend, many companies outsource their software development services to a third party company. They are hired to manage all the tasks in a project and this helps to lower the costs and increase the productivity. Another case is the popularisation of open source software. It decreases the cost and effort needed for creating new software and hence civilising and progressing society as a whole.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266438,
      "meta": {},
      "text": "With the addition of new technology or deprecation of old methods the workload of a software project can change. If for example a new Java version is released, that has either wanted features or important bugfixes the usage of the language can partially change. \n\nThere are three main areas in which change can occur:\n\nWith change of leadership, personell or the buy out of a company the whole project can be subject to change. Is it different working times or if the new colleague has fresh ideas or framework. \n\nAs written above, changes in software versions change the project too. But revisions and advancements in technology influence the product too. By chance the team underestimated the load on the hardware by their software and this gets subject to change. Or the algorithm isn’t even realisable with current hardware (for example decryption of RSA encrypted files). There is a chance too, that you only have the wrong hardware and have to sort that out.\n\nAnd there is the chance that the client changes his requirements. If there is another function that needs to be supported, they want a different framework or different REST-API-Endpoints. It could be necessary too, that you remove existing functionality because of legal or internal purposes. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262208,
      "meta": {},
      "text": "Software changes can occur from internal change as well as from external change. Internal changes entail miscommunication and functional requirement changes, while external changes could be change in language popularity and competitors.\n\nTechnological changes occurs when a specific technology or a code sees a downhill trend in popularity. This can happen when a new programming language is discovered, which is for example more user friendly and more efficient. An example for this would be the change from Objective C to Swift in the IOS developement department.\n\nRequirement changes occur when the initial functional requirements in the current software doesnt match the current functional requirements. This can happen simply due to miscommunication between the customer and the user. This can also occur when the user demands more functionality during the developement process.\n\nOrganizational changes occurs when the stakeholders and higher ups decide to change the workflow or team structure of a team. For example, when a member of the developement team gets promoted to a scrum leader during the developement process.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262710,
      "meta": {},
      "text": "Veränderungen finden in vielen verschiedenen Bereichen der Software-Entwicklung statt, um sich ständig entwickelnde Komplexitäten effizienter erschließen zu vermögen und dem Wandel der Zeit hinreichend gerecht zu werden. Dies geschieht im Zuge der Entwicklung, Optimierung und Neugestaltung zwecks einer zu erreichenden Kostenreduzierung sowie gesteigerten Effizienz im Umgang mit Hemmnissen der Produktivität. Zukunftsweisende Prozesse müssen erfasst, modernen Kriterien entsprochen wie auch Risiken, Defekte und Mängel minimiert werden. Auch Anpassungen an aktuelle Ereignisse in den Bereichen Markt, Technologie und Interessen der Konsumenten sind nötig. Insgesamt besteht das Ziel durch Umgestaltungen eine drastische Verbesserung in sämtlichen Sektoren zu erreichen.\n\nEin Beispiel für eine solche Veränderung der Software-Entwicklung in der realen Welt wäre der Wechsel von NIST im Jahr 2011 von SHA-1 auf SHA-2 angesichts der schwindenden Zuverlässigkeit von SHA-1. Dieser Algorithmus wurde als unzeitgemäß und rückständig identifiziert und musste, um eine Gefährdung der Sicherheit einzuschränken, durch eine aktuelle und angepasste Version ersetzt werden. \n\nEin Beispiel für eine Anforderungsänderung wäre eine, vom Abnehmer ausgehende, plötzliche Änderung der Frist für die Fertigstellung eines Produktes. In diesem Fall ist es nötig Prioritäten zu setzen und die Vorgehensweise bei der Umsetzung zunächst auf die erforderlichen Schritte zu beschränken, um der unerwarteten Anforderung des Klienten unmittelbar gerecht zu werden.\n\nEin Beispiel für eine technologische Änderung ist die zunehmende Entwicklung von Quantenprozessoren, welche zu bemerkenswerten, bisher aussichtslosen Entschlüsselungen fähig sind. Folglich ist es nötig neuartige Verfahren zur Sicherheit und Verschlüsselung bei der Datenübermittlung zu erforschen.\n\nEin Beispiel für eine organisatorische Änderung wäre, wenn sich eine Firma, aufgrund eines großen Erfolges des neuesten veröffentlichten Erzeugnisses, dazu entschließt, umfangreicher in ebendieses Produkt zu investieren, um dadurch die Erträge der Firma weiter zu steigern. Dazu ist eine Umstrukturierung der Schwerpunkte und eine Zunahme der dafür verfügbaren Ressourcen und Arbeitskräfte nötig. Bereits bekannte Leitfäden und Vorgehensweisen müssen angepasst und überarbeitet werden.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262898,
      "meta": {},
      "text": "Why change happens? Because the world is changing. Customers may have new requirements and new technologies and new tools are developed every day which can be applied into the develoment process. For example, 10 years ago people did not use so much mobile devices like today to work, to play, to watch videos etc. So the develepment at that time might focus on desktop application or hardware improvement, which ist a little bit different from today.\n\nRequirement changes: people's requirement change with the environment etc., e. g. before Covid-19 people perhaps did not have so many chances to work from home. However, the requirements for online-meeting has been increased significantly since the pandemic.\n\nTechnology changes: new technologies are coming to the world every day. Without the cloud technology, many things would have been saved, managed and processed locally, but with that we can save a lot of memories and speed up the processing steps by using clouds.\n\nOrganizational changes: from the perspective of business, some times organizational changes occure. Different products from different departments or teams must be merged or optimized because of organizational changes. Under such conditions, software develoment for these specific products should also adapt itself to meet the new challenges, like multiple functions have to be integrated into one app and so on.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262964,
      "meta": {},
      "text": "Change happens in software development because it's not predictable since it's not an easy, but rather complex task. \nWith advances in hardware and thus, also in software, the pace of innovation has accelerated during the last years. \nAn example for change int the real world would be the introduction of mobile phones like the iPhone to the market in 2007. Special software for these devices, their touchscreens as well as their functionalities (e.g. Bluetooth) needed to be written. iOS by Apple is a mobile operating system, a software written exclusively for their hardware.\n\nRequirements change happens for example when organizational changes occur, often times issued by institutions like governments. New laws and regulations are introduced. \nFor example did the covid-19 pandemic result in a lockdown in many places around the world (organizational changes). Since there was a new demand for virtual meetings and also to hold lectures for students online (requirements changes), Zoom or also online teaching tools like Coursera (technology changes) became increasingly important necessities. The growth of companies which come up with new technologies, e.g. new user applications like Instagram, Snapchat or TikTok (technology changes) also results in an organizational change since more employees work for more projects. This requires an even better management so all tasks can be coordinated well.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263307,
      "meta": {},
      "text": "Changes happen basically because of issues and difficulties faced by the developers during the software engineering development process, and those issues can have several natures and causes, but mostly they can be related to three main areas. (Real world example follows with the three areas).\n\nFirstly, we have requirements changes. This can be triggered by the poor definition of the customer's requirements. Fact is, those changes influence the final goal of the software we are working on. As an example, imagine we are developing a software for a school to keep track of its students' grades. To identify the student, we use the matriculation number only. However, the school wasn't clear when they asked for us to include the students' names as well. And now we have to change the software to include their names.\n\nIn addition, we have technology changes. Those can be triggered when we realize that the tools we are using aren't good enough or diverse enough for our goal, or if we find out other tools are a better fit for the situation. As an example, imagine we are using paper to list all the school's students. Out of nowhere, somebody gives the idea of working with Excel, because is faster and easier to access and share.\n\nLast but not least, we have organizational changes. Those can be triggered when somebody of the team has too much to do, or when somebody realized he or she isn't a perfect fit for their task. As an example, imagine somebody doesn't know how to work with Excel, but somebody else does. So those two switch tasks.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263553,
      "meta": {},
      "text": "Change frequently happens in software developement because in bigger projects unforseen roadblocks or problems can suddenly appear which can force a team to reevaluate how they are going to approach the project in the future. \n\nFor example a solution could prove to be more expensive than previously planned so some functionalities might have to be cut in the middle of developing the product to stay in the given budget.\n\nRequirements changes refer to when the requirements decided in the beginning by the software team based on the problem statement of the customer change. For example an customer might want to add another feature or cut one they decide to be unnecessary and not worth the cost. They have to communicate this to the software developement team which has to adapt their approch to the project.\n\nTechnology changes refer to how in the development process the approach to realize and implement a feature is changed. As an example the software team might decide that a different programmimg language or framework might be better suited to the task afer running into roadblocks with the previously decided one.\n\n\nOrganizational changes refer to changes in how the project is organized. This might include the budget provided, the composition of the software team itself and the organizational approach chosen to work on the project (e.g Scrum). For example the team might realize that they need another expert proficient in a certain area in the team to successfully finish the project.\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264391,
      "meta": {},
      "text": "Software hat meist den Sinn, uns im Leben einige Dinge (zB. Buchhaltung, Ausführung von komplizierten Berechnungen, usw.) zu vereinfachen. Da sich unsere Welt sowie die Bedürfnisse der Gesellschaft/der Unternehmen stätig ändern, muss sich auch Software entsprechend anpassen. \nEin Beispiel: Zur Zeit des Lockdowns durch die Corona Pandemie war es kaum noch mehr möglich, neue Menschen wirklich kennenzulernen, da man sich nicht mehr treffen konnte. Viele Dating Apps haben daraufhin sogenannte \"virtuelle Dates\" als Feature hinzugefügt, durch die Pandemie kam es also zu Veränderungen beim Software Development, um sich den Änderungen der echten Welt anzupassen.\n\nBedarfsänderungen: Wenn sich der Bedarf der Kundschaft von Software ändert, so müssen sich die Unternehmen entsprechen daran anpassen, um diese nicht zu verlieren. Auch politische Umstände oder wirtschaftliche Krisen können den Bedarf der Gesellschaft/der Unternehmen beeinflussen. Wenn sich ein Unternehmen bspw. auf Textverarbeitungsprogramm spezialisiert, die Kundschaft sich jedoch ein Programm zum Erstellen von Präsentationen wünscht, so sollte das Unternehmen dementsprechend anpassen.\n\nTechnologische Änderungen: Software braucht immer eine Technologie (zB. einen Computer), auf der sie benutzt werden kann. Wenn sich die Technologien entwickeln und verändern, so muss sich die Software entsprechend auch daran anpassen. Wenn Computer beispielsweise mehrere Kerne bekommen, um schneller Berechnungen durchführen zu können, so muss man entsprechende Software dafür schreiben (SIMD Programmierung) \n\nOrganisatorische Änderungen: Wenn es bei der Organisation eines Projekts/eines Unternehmens zu Umstrukturierungen kommt, so hat dies auch Einfluss auf der Softwareentwicklung. Wenn z. B. die neue Leitung einer Firma eines Chatprogramms großen Wert auf Jugendschutz legt, so werden die Algorithmen entsprechend dafür angepasst. ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264531,
      "meta": {},
      "text": "Change in sofware development can occure due to a lot of different reasons. A great example would be the smartphone. As the mobile market started to boom, software development had to adapt. The technology changed and the different programs and applications had to change aswell. The move to a new platform brought new challenges and possibilities. There is also more that can change than just the technology used. A different management may have other priorities or a different approach to a project, so therefor an organizational change may also occure. Also the requirements of a project can change. If a customer wishes for other features etc.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265050,
      "meta": {},
      "text": "Changes happen due to rapidly emerging new technologies and as a result, changed consumer behavior and stricter government regulations. Nowadays more and more companies switch to sustainable and energy-efficient development. Later, this also could be demanded by law, that all technologies a company, e.g. Amazon, uses, should get an appropriate certification (Green IT). If Amazon doesn't adjust in time, the company will have a hard time having to bear losses and losing clients before they switch to new sustainable technologies and will be able to offer their products again. Requirements changes: 1) it's demanded by law to get a Green IT certificate for all technologies due to climate change: 2) client's requirements may change during the time-consuming software development process. Technology changes: switching to cloud-based technologies due to on-demand pricing principle as you don't have to plan in advance how many resources you will need. Organizational changes: team restructuring, budget-cutting.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261593,
      "meta": {},
      "text": "Unsere reale Welt entwickelt sich weiter und ändert sich dadurch stetig. Beispielsweise kann man das alltäglich an den Preisänderungen im Supermarkt der Einführung neuer Technologien wie z.B. dem 5G-Netz sehen. Über die letzten Jahre wird es auch in der Softwareentwicklung immer wichtiger, auf von außen oder innen kommende Änderungen reagieren zu können, um die Wettbewerbsfähigkeit zu bewahren und (technische) Fortschritte zu seinem Vorteil nutzen zu können. \n\nDie Änderungen in Softwareprojekten können in verschiedene Felder aufgeteilt werden: einerseits können sich die Anforderungen an die Software durch den Auftragsgeber ändern. Dabei ändern sich die Anforderungen an das Endprodukt aufgrund (wirtschaftlicher) Entscheidungen von außen oder innen. Beispielsweise expandiert die auftraggebende Firma und benötigt jetzt ein umfangreicheres Programm. Andererseits kann es natürlich auch vorkommen, dass beispielsweise manche Features redundant werden und wegfallen. \n\nÄnderungen im zweiten Bereich betreffen die Technologien an sich. Durch die rasend schnelle Entwicklung der Technik werden beispielsweise Programmiersprachen oder Konzepte überholt und müssen durch eine neue, angepasster Technologie ersetzt werden. Auch Updates sind denkbar, so erscheinen z.B. auch für Java regelmäßig neue, veränderte Versionen, die man richtig einsetzen lernen muss.\n\nDer letzte Bereich betrifft organisatorische Änderungen. Diese können in verschiedene Ursachen haben: das Ausscheiden eines \"wichtigen\" Kollegen für das Projekt, ein neuer Sitz der Firma, Preisanstiege mancher Waren wie z.B. Strom, oder das Umstellen auf \"home office\". Vor allem die Corona-Pandemie bietet ein gutes Beispiel, wie Teams plötzlich vor massive organisatorische Aufgaben stehen und einen neuen Weg der Zusammenarbeit finden müssen. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1261737,
      "meta": {},
      "text": "Software Entwicklung ist ein repetitiver und kein linearer Prozess. Das heißt, dass man immer wieder ein paar Schritte zurück muss, um Anpassungen für den weiteren Verlauf ermöglichen zu können. Es gibt viele verschiedene Gründe, warum der bisherige Ansatz nochmal umgeworfen werden muss, bevor man weitermachen kann. Der Grund kann beim Kunden, aber auch bei den Entwicklern liegen. Entwickler sind auch nur Menschen und Menschen machen Fehler. Zum Beispiel eine Software, die Daten von einem Server abruft und die Daten speichert. Bisher ging man immer davon aus, dass die Daten von einem http Server aufgerufen werden können. Deswegen wurde die gesamte Software nur auf http Server ausgelegt und kein Wert auf Erweiterbarkeit in diese Richtung gelegt. Dann fällt zu einem späteren Zeitpunkt aber auf, dass die Daten auch von einem FTP Server geholt werden können müssen. Da die Entwickler nur von http ausgingen, haben sie keine Möglichkeit im Entwurf eingebaut, die Unterstützung für ein weiterers Protokoll hinzuzufügen. Nun müssen die Entwickler zurück zum Entwurf und den Entwicklungsprozess dahingehend anpassen, sodass weitere Protokolle auch zukünfitg unterstützt werden können.",
      "score": 33.3,
      "language": "GERMAN"
    },
    {
      "id": 1262021,
      "meta": {},
      "text": "Change happens based on the situation that we are in. Sometimes these changes could be revolutionary and could impact our life like the internet. With new things come the changes. These new things could be new Technology, a new plan, or a new issue.\nSometimes the team made a mistake in the program the code has a bug or something went wrong, we should change some lines of code in the program that we have that is the requirements changes. \nAs time passes the hardware is getting powerful so if we have a server that serves a lot of customers we should change our old server because the chance that the new hardware serves our customers better is higher and with the new server/hardware we should change our software too because we want the best performance from our hardware. That happens because technology changes itself over a time period. \nDuring the Development time period, the changes in the team could happen. Someone gets fired or maybe is sick for a long time so the team can not perform very well and we should change our plan. These changes could have a lot of impact on our product. The look and the functionality of our program could change because of that.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262212,
      "meta": {},
      "text": "Change happens in software development because requirements change, the product backlog could change, etc. Then the team is required to work together and find a solution that fits best. \nAn example for change would be a team building a software for an autonomous vehicle - suddenly the law changes. Now they are required to change the development to adapt to the new law. There will be a few new requirements and some old won't be neccessary anymore. The main project structure will stay the same. \n\nRequirements changes mostly happen because of a not sufficient requirement development process. As a result it can happen that there are incorrect or missing requirements. \nExample:  Something in an app is missing, was not developed\n\nChange of a technology is to take an already existing technique and change it to something different / new \nExample: Apples Iphone is a existing technology that gets changes and upgraded every year. Never 100% new but always slightly different with improved technologies.\n\nOrganizational changes describe how it can happen that the team structure gets changed for a specific project. \nExample: Badly organisated groups, not working together correctly -> get rearranged to ensure the best performance",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262596,
      "meta": {},
      "text": "Technik entwickelt sich sehr schnell. Auch software development ist einer dieser Bereiche. Um mit dieser Entwicklung mithalten zukönnen, passt man die software auch an. Zb. Ändern der Programmiersprache von C in C++\n\nRequirements changes: Die Anforderungen von Kunden werden immer anspruchsvoller und Erwartungen immer höher.  Während vor 25 Jahren eine einfache HTML Seite die Bedürfnisse vieler erfüllt hat, erwartet man heutzutage viel ausgefuchstere Sachen (sei es Design oder aber auch Security). Wenn man sich die Entwicklung von YouTube und co. anschaut sieht man das auch.\n\nTechnology change: Technologien werden immer weiterentwickelt und verbessert. Es werden entweder bestehende Technologien verbessert oder neue entwickelt. Wenn man sich die Entwicklung von CAPTCHA anschaut sieht man das zb. Anfangs musste man nur Wörte, Buchstubaben und weiteres erkennen. Heute werden CAPTCHAs genutzt, um die ML Datenbank von Google zu füttern. Das liegt daran, dass sie die Technologien weiter entwickelt haben.\n\nOrganizational changes: Unternehmen entwickeln neue Technologien und verbessern diese. Auch die Strukturen innerhalb eines Unternehmens ändern sich mit der Zeit. Das was einst noch per Hand gemacht wurde, wird jetzt durch die Weiterentwicklung der Technik automatisiert gemacht. Vgl. zb. den Logistik Bereich. Hier ist zb. Durch Nutzung von Datenbanken und Co. die Arbeitsweise komplett anders als vor 100 Jahren. Auch die Aufgabe der Mitarbeiter ändern sich dadurch.\n ",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1262690,
      "meta": {},
      "text": "Technologie is development fast. This have a big impact for software development for example there are now existing IDE´s, in the past you had to use the Text Editor. The Software Development is faster. The level of development make big steps every day and there is not one small step or a little problem for a long time, people need to be and are faster.\nRequirement  Changes are for example that the most busnisses are using aplications for everything. In the first Time ther where only a couple of simple Apps, now there are thousends of complex apps.\nTechnology Changes came with the fast development of the Technology. The example in the first sentences is working for this topic. But also that the CPUs are better and faster now. In the past where poeple wich waitet for a time that the code is working because the Computer is able for it. Now this woudn't work because the Performance is no longer possible to grow so much.\nAt least we have organizational changes, with the time the methods of working together have changed. For example not everyone makes his own part of the project and at the end ther is one day to put all together and they try out if it works. Taht was the past now all people work together. One Method is the SCRUM Method.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263209,
      "meta": {},
      "text": "Change is inevitably part of the real world; therefore, software engineering needs to constantly adapt to change and be able to deliver high quality software systems while facing change.\nCompanies like Nokia, Kodak and Blockbuster are good examples of why it is important to deal with change. \tTheir businesses rapidly became obsolete due to changing technologies and business opportunities. \n\n- Requirements changes: Modifications of user needs, reorganization of structures or perhaps a better understanding of the stakeholders' initial needs. For example, during the process of software development, there could be deeper findings into what the final user really expects from the product, forcing the software engineering team to adapt to these requirements changes.\n- Technology changes: Refers to changes in the availability of different technologies. For example, new technological developments could be adopted to enhance or accelerate the work of the software engineering team.\n- Organizational changes: Possible modifications in the structure of the team or business unit (or even the company). For example, a change of roles within a software engineering team could involve a modification in the team's goals or its definition of done.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263233,
      "meta": {},
      "text": "Change in software development happens because you need to keep up with the technology. Also it is extremly fast moving every now and then your customer wants to have different. A great showcase of this problem is following situation: You are an software development team for a car manufactory. You are developing the software of the cars. Now in the time of chip shortage the manufactore needs to adapt to the situation and will stop building the same amount of chips into one car. But now also the Software needs to adapt to that problem - it need to work with lesser chips. Also in times of Covid your team can change because of short-time work. It could happen that from one to another week you are half the people in your software development team.\n\nRequirement changes could mean different things. The budget for the project could change and you need to adapt to that. Also the team size could change - the compony is redirecting workers to a different project. Also the deadline could change. \n\nTechnology changes can appear in following situations. You hardware could change on wich you software needs to work. Also dependencies could no longer be supported any more (e.g. Libraries). Or your Frameworks that you are using like Springboot could get an update that brakes your code and you need to adapt to that. \n\nOrganizational changes are changes in the team. Change of your team structure could be a possible reason. Also you process control model could change. But in the control model itself things could change for example in Scrum - sprint time frames, daily sprint meetings.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264005,
      "meta": {},
      "text": "The reason for changes in software development can vary for example issues may occur due to miscommunications between team members and clients or poorly defined goals, which are more of the social category. An example might be a team of developers working on a solution for a field in the medical field that they lack understanding in, while working together with a client who failed to provide a comprehensive problem statement and detailed goal for the developers.  \nOn the other hand, issues may arise due to technical incompatibilities such as the use of incompatible tools or wrong algorithms. For example, a team could have divided up their tasks only to end up realizing that they have all used different data structures that are not easily integrated into each other, which of course is also a communication issue. \nRequirements might change during the development process as the team realizes that for example, their client has provided them with an incomplete problem statement that led them to start solving the wrong issue. \nThe main changes in organization we have seen over the past years is a movement from linear and defined processes towards more agile, empiric ones, such as Scrum. \nIn matters of changes in technology, one might experience challenges that occur when one is still using old programming languages, database systems, or general innovations such as Nokie experiences with the rise of smartphones, when these changes occur it is important to adapt to stay compatible in an ever-changing market. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264926,
      "meta": {},
      "text": "Change happens in software development because it always comes as we are responding to the ever changing IT-environment and also to achieve and deliver the best solution of the software.\nFor example there is a project to build an application for a smartphone and suddenly during the testing of the application, it shows an error. To solve the problem, the developer must change the code again to have a running program, that is why change happens to this software development.\n\nDuring the development there is sometimes the change of requirement for the software itself, mostly from the client. For example developing of an application for train company get change because the client change their mind to add one feature to the app.\n\nTechnology change is when there is a change of using current technology to the newer technology which to make a better solution of the software. For example is the change from Windows 8 to Windows 10.\n\nMoreover, organizational change is when a company changes a major component of its organization, it can be the change of department that impacting the company. For example, the changing of the head departments who responsible of current project.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264946,
      "meta": {},
      "text": "Change in software development happens when the circumstances of the project change. Many details around a the project can change during development then the development has to be reajusted to those changes.\n\nRequirement Changes:\nThe customer might have requested an Android app to be designed for his end users. During the process he changes his mind and now wants a Windows programm. Now the developers have to approach their project differently because the two systems are different from each other. For example you have bigger screens on Windows than on Android which could change the layout of the app.\n\nTechnology Changes:\nThe technology on which is the software is based upon might change during development. The team could be developing an app for Android 11 and during that process Android 12 comes out. Some part of their software might not work for the newer Android version so they have to adapt their code for it to work in the end.\n\nOrganizational Changes:\nThe organization of the development team can change. For example the company could have used a static development process before and midway througout the development of a new app wants to switch to Scrum because they heard that it would be better. Now the development staff has to adjust themselves to this new concept which will take time and impact the development process. \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264989,
      "meta": {},
      "text": "Changes could be of natural causes like the Covid-19 pandemic. Because of that for example, many companies had to adapt for home office. \n\nA requirement change can occur, when the client get another idea of what the software should be able to do. For example he suddendly wants his software to be able to be used on both IOS and android instead of just android.\n\nTechnology happens because of the evolution of hardware. For example, the CPUs before 10 years were much slower compared to today.\n\nOrganizational changes happend for example during the Covid-19 pandemic. Many companies had to reduce the employees, so they had to adapt to smaller teams.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265945,
      "meta": {},
      "text": "Change is a big part of the software engineering industry. It happens due to several primary reasons.\nWe can divide the reasons into three main categories: requirement changes, technology changes and lastly organizational changes.\nRequirement changes occur due to either lack of preemptive planning or a new client request, which better reflects their needs! The introduction of the reinforced data protection laws in the EU would represent an event which induced plenty requirement changes. Many companies had to adjust their infrastructure to store EU data on EU territory! This part in particular is an on-going issue for the international conglomerate Meta Platforms, Inc.\nTechnology changes occur due to the deprecation of old frameworks and languages, which go hand-in-hand with the appearance of new frameworks and languages. Another way those transpire, would be to resolve piled up technical debt from prior stages of the project.\nOne famous example is the migration from rather old languages, such as PHP, to the newer \"driving language of the web\" - JavaScript and TypeScript.\nOrganizational changes can, for instance, happen when the company alters it's goals and policies to enforce a measure that is required to overcome an obstacle. The most recent and likely relatable example would be the COVID-19 pandemic, which had many companies switch their teams to a remote work style and adapt the common practices to fit the new environment. Digital meetings now replaced the stand-ups and in-person conferences.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266240,
      "meta": {},
      "text": "Changes in software development is due to its agility as large parts of software development are empirical in nature and cannot be modelled with a well-defined process. The process is not entirely planned as there is a need to inspect and adapt to changes in the development phase. For example, in the Dutch railway, they employed the Scrum Agile approach by producing the initial product backlog containing the fine-grained, estimated user storeis for the first few iterations. These means that after considering the customer's opinion, backlog is refined so as to create a PUB (publish) systerm that centrally controls both information displayes and audio broadcast systems in all stations.\n\nRequirement changes refers to the changing of backlog of customers wishlist after the daily scrum meeting which improves the incremental processes. Technology changes refers to the improvement of exisiting technology and developing new ones to improve exisiting products in the market. Organizational changes involves tracking and managing changes to artifacts, such as code and requirements. This means that there are changes to documentations and other forms of tracking in the software.\n\n\n\n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266319,
      "meta": {},
      "text": "The environment and surroundings in which the software is planned, brainstormed, developed and delivered is constantly changing, leaving an obvious and natural effect on the development process itself. In the real world, there are many factors contributing to this change, such as: new Governmental/Regional Laws and Regulations, changes in Privacy Policies at large, emerging market competition and technological innovation.\n\nA good example for such diversity in software development would be - Android vs iOS:\nAndroid smartphones have always, since the very beginning, featured widgets on their homescreens. The customizability according to the user's choices has been their greatest attraction towards customers. Over the years this converted to a fan base. And Apple, seeing the demand and jokes made upon iOS about its rigidity, eventually implemented the widgets feature. On the other hand, there are quite a few security features, for which Android took inspiration from iOS. And this is how the tech ecosystem has been thriving.\n\n1. Requirement Changes:\nA solution presented at one point in time, may not suffice for all the future situations, leading to changes in requirements. (What’s required now, may not necessarily be needed in the future) \n\n2. Technology Changes:\nOut of everything, technology has been evolving the fastest. Just like jQuery used to be the go-to solution for WebDevelopment previously, is now replaced by React, Angular, Vue, etc. \n\n3. Organizational Changes:\nAs team members get better offers in career, they upgrade in life. Resulting in new members joining the team. This happens in every level: Developer, Management, HumanResource etc. And with each organisational changes, corresponding innovations are enforced.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262162,
      "meta": {},
      "text": "1.\n\t- The reason for the need of changes, that has to occur in the software development (SD) is that SD is a competition-driven activity, that is why a company cannot be competitive without development. The end-product will be compared to the other companies, that's why this is crucial to be aware of new technologies and to develop the new one to be competitive with other companies. \n\n- Nokia is a good example of the case when a company doesn't keep up the technology trends. In 2007 Nokia had 51% of global market share in mobile phones (Apple has todays only approximately 25% of global market share). But from only 2009 to 2012 its global market share declined to almost 0%! The biggest reason for it was that Nokia has missed \"Smartphone Wave\" when new companies came to the market. Despite the fact that Nokia had enough resources to gain a lead over competitors in this area, they didn't use this chance being blinded by their success, because at the start of occuring of the smartphones people still preferred mobile phones. \n\n2.\n\t- Data privacy: The law changes together with the development of technologies, that is why companies have to adapt to new requirements of data protection of users.\n\t- Cloud Memory: possibility to save your files on your cloud memory saves the weight of the hardware. \n\t- Delivery: it's possible that users from other companies will be interested in your product and it will be \t\tneeded to organise the delivery to that countries. \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1262229,
      "meta": {},
      "text": "There are many different Areas that affect software development. For example it there is a change in any law or legal regulation that concerns the project the development team is working on, the software may need to be changed in order to meet the new requirements. The same applies to changes in technology. It needs to be checked whether the new technology has any benefits or disadvantages and if it is applicable to the software project. The Software development team also needs to change their software so that they dont end up offering a Product that has significant disadvantages compared to competing products.\n\nA real world company that didnt manage to adapt to the changes in their field would be IBM. They didnt want to invest in Computers because they thought that there would only be an extremly small market for them. They managed to survive in the end but went through a bit of a struggle.\n\nrequirement changes: Changes so that the product can be brought to market at all and is useable for the customers.\n\ntechnology changes: new technologies are available that could affect the product.\n\norganizational changes: Changes in the company concerning the overall strategy or hierarchy.\n\n\n \n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263054,
      "meta": {},
      "text": "1. The reason why change happens to software development and why it's not a fixed process is due to the developments of new technology, the environment, new regulations, and more. Take artificial intelligence as an example, a technology that is today integrated into many different technological products like our phones, that requires the software to be simultaneously up to date. Another example is new regulations that take place, like the implementation of GDPR which created a need for software to be GDPR-compliant \n\n2. Requirement Changes are certain expectations of the particular software program/ or system to be produced. An example of a requirement change would be that the user would need to accept the new pop-up regarding cookies when accessing the app or similar. \nTechnology change can be the introduction of a new GUI into a project which might need new knowledge about the system and to tailor it to the needs of the project/users. \nOrganizational Changes could be that there are new developers coming into a team and this requires a shift in the communication when providing information about the project.  \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263059,
      "meta": {},
      "text": "In the software development, we can find many changes happening due to many internal and external reasons. If we consider about internal reasons:\n\t1. Poor requirement gathering.\n\t2. Poor understanding on gathered requirements.\n\t3. Fail to follow a proper software development process due to ignorance, poor project management and \t\t\t \n          poor leadership.\nFurther, if we consider the external reasons which we can't control but somehow adopt for them, they are:\n\t1. Constant changes in the requirements which are given by the client as the client's scope is dynamic.\n\t2. Increasing the complexity of the project with the new requirements or changes in the requirements, so that the team has to redevelop the components or sometime even have to change the software development process. \n\t3. Uncontrollable factors arise from the side of Government (Power cuts due to Government bankruptcy which is now happening in Sri Lanka that brings more negative effect to IT industry) and natural disaster like Covid 19 etc.\n\nFor example: Before the Covid 19, there wasn't a big demand for electronic platforms in developing countries. But, with this pandemic, most of the developing countries went towards online platforms in order to prevent from failing their companies. Banking, education, supermarket etc industries went for online banking systems, online education and e-commerce respectively.\n\nRequirement Changes: If a software development team has been developing a informative website before Covid, but with the pandemic the client required a full web application with reliable payment gateways. Thus, the requirements have been changed due to this external factor, so that there can be many new requirements and changes in the current requirements.\n\nTechnology changes: Though Nokia has gained the monopoly in the mobile phone industry, it failed when other mobile phone companies took over modern technologies and released smart phones where customers went over smart technologies while Nokia's monopoly went down rapidly due to inability to cope with modern technologies.\n\nOrganizational changes: If a Software company decides to move from waterfall process to agile process, they will have to make many changes in the company including employees.  They need cross functional employees, new agile practices, training sessions to adhere to the process and there can be changes even in the development phases of the projects that they are developing. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263287,
      "meta": {},
      "text": "In software development change happens as the real world is not entirely predictable (but rather complex) as not every repeatable process always brings the same outputs. Here adjustment is needed as the most process are empirical and modelling those is not a single task but more a process with continuous adjustments. Besides this the real world is constantly changing and not in a fixed state. This is another reason for changes in the software development. An example for such a change is when gathering the information of a problem in the real world certain requirements could be missed out on and only later be found. When finding these new requirements and information there will be an adjustment of the process/ a change of the software development.\n\nSoftware development is often a longer lasting process and during this time the requirements, technology or/and organisation itself can change. This will then cause adjustments in the software development. Requirements can change when for example finding a mistake in the complex real world and/or the change in the need of the customer/consumer. This could be for example a mistake in number of a survey or other information the software development is based on. Changes in technology cause as well adjustments in the software development as new technologies for example could fasten or improve the whole process or the old technology will simply be outdated and hard to adjust afterwards. Besides this, over time an organisation could undergo changes as well. For instance a change in employees gives on one hand new insight and on the other hand new problems with different expectations. Both of which could lead to another change in the software development of the certain problem.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263371,
      "meta": {},
      "text": "Given no change in the software development, there would not only be the danger that the software’s use cases and the requirements to the software by the customer/end user will drift apart from each other, i.e. the software becomes obsolete, but also vulnerable for attacks by hackers. Let’s take a look at Instagram. Instagram is a software which from todays point of view is nearly entirely different to its previous builds in the past. Not only new and additional features like e.g. Stories or Video calls etc. have been implemented, in order to keep the end user interested in the app, but also various bugs have been fixed and thus hackers need to find new exploits and cannot just take advantage the same security flaw in a code.\nThere is also a constant change in the requirements towards a software. Lets take a look at google maps as an example. First it was an app/website showing city names, all available streets etc. in a certain area. So basically it was an digital version of an analog map. But over the years the requirements by the end users changed towards the app and such simple features would not suffice. \nBy today one can search for restaurants and have a look at the reviews made by customers etc. This means that the requirements for software switched from just digital versions of analog things to a service with way more features and possible use cases. This does also mean that there has to be a change in technology. Looking back a phone was there just to make phone calls. Nowadays your Smartphone is a phone, a photo camera, a navigation system all in one device. Since the software we are using is becoming more and more complex there also had to be a change in the way we organize the software development. \t\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264621,
      "meta": {},
      "text": "Zwei der treibenden Gründe für einen starken Wandel in der Softwareentwicklung bestehen in den sich schneller wandelnden Anforderungen an Softwarelösungen und der stärkeren Vernetzung zwischen einzelnen Systemen. \nDie schnellen Änderungen an die Anforderungen lassen sich gut an den in Automobilen eingesetzten Softwarelösungen verdeutlichen. In der Vergangenheit wurde der währende der Produktion geflashte Softwarestand auf sämtlichen Steuergeräten (bspw. Multimediaeinheit) über das ganze Fahrzeugleben unverändert genutzt. Heute reichen die Hersteller dank Over-the-Air-Updates innerhalb weniger Monate aktualisierte Funktionen nach, welche den stetig wandelnden Nutzeranforderungen entsprechen. Diese Flexibilität muss auch im Entwicklungsprozess verankert sein um auf geänderte Kundenwünsche bereits während der Entwicklung reagieren zu können.\nIn der Vergangenheit arbeitete ein Steuerungssystem für ein Logistiklager beispielsweise oft isoliert von anderen Systemen und bot dem Nutzer nur wenige Zugangspunkte über einzelne angeschlossene PC's. Heutzutage muss es in der Lage sein, mit vielen anderen Systemen zu interagieren um sowohl Informationen weiterzugeben als auch Befehle für Ein-/ Auslagerungsprozesse autonom ohne Nutzerinteraktion entgegenzunehmen. \n\nRequirement Changes: Die oben genannten schnellen Änderungen in den Kundenanforderungen, welche auch innerhalb des Entwicklungsprozesses abgewandelt werden können. Beispiel sind neue anzubindende Zahlungsverfahren in Webshops\n\nTechnology Changes: Systeme werden oftmals nicht mehr zentral sondern dezentral betrieben. Dies ist ein Wandel vom Edge-Computing zum Cloud-Computing. Vorteile sind Robustheit und gute Skalierbarkeit. Beispiel Netflix\n\nOrganisational Changes:\nTeams arbeiten nicht mehr stark hierarchisch und immer in derselben Konfiguration. Stattdessen werden sie für die Projekte aus heterogenen Entwickler für das jeweilige Projekt zusammengesetzt. Sie arbeiten oft größtenteils dezentral aus dem Homeoffice und organisieren sich währende der Sprints selbst.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264964,
      "meta": {},
      "text": "Software development depends on time (deadlines), budget and requirements while changes occur. \nIt is important that mostly changes happen not because your project manager or team members just want to, but because it will help to improve this project, to make it as high quality as requirements demand and as budget and time allow.\n\nThere are some reasons why change happens.\n1.\tThere might be incomplete requirements. Team gets not all tasks, requirements at the beginning and later they have to change code, technologies, methods etc.\n2.\tOrganizational restructuring can also be a reason. Client`s or team`s structure can change. There are alco some financial restructures, project budget can be reduced, corporation policy can change, or some new end users might be added.\n3.\tNew technologies or methodologies can also influence changes in software development. \n\nExample: there is a team of 5 people, who are working on the project. Some day one of them, for example, back-end developer quits, and they are forced to look for another one. Or a client suddenly says that the budget of the project will be not 100000 USD but only 50000 USD.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265336,
      "meta": {},
      "text": "During the development stage of a project the surroundings can change. The development team then has to change the software in order to be able to compete. An example of change in software development would be new data regulations or laws that need to be followed or new requirements from the customer.\n\nPossible changes can be grouped into three categories:\n1. requirement changes: This sort of change happens when the customer requirements change for various reasons and the development team has to incorporate the new requirements into the already existing programm (e.g changes in the situation of the customer/ new needed features).\n2. technology changes: The surfacing of new technology or the change in already existing technology can speed up or slow down the development process. Since the programm shouldn't run on legacy technology, the new technology needs to be incorporated quickly. Another challenge is that the new technology doesnt cause any problems in the already existing code (e.g new updates/technology/features).\n3. organizational changes: changes in the company structure need to be adressed during the development by making sure that they dont impede the developmental process (e.g firing/hiring of people or changes in upper management).",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265838,
      "meta": {},
      "text": "Früher waren Programme nur darauf ausgelegt, ihre eigene, bestimmte Aufgabe wieder und wieder auszuführen. Wenn etwas neues gebraucht wurde, wurde ein neues Programm erstellt und das alte ersetzt. Dass das nicht effizient ist merkte man schnell und erkannte, dass der Prozess bei der Programmerstellung ein kreativer, von vielen Einflüssen beeinträchtigter Prozess ist, der sich an Neuerungen anpassen muss. Es gilt also, das eigene Software Development so weitreichend zu gestalten, damit man auf aktuelle Veränderungen direkt reagieren kann, um nicht neu starten zu müssen. \nEin aktuelles Beispiel ist Elon Musk mit SpaceX. Sie entwickelten Raketen, die nach ihrer Benutzung wieder auf der Erde landen sollen und erneut verwendbar sind. Damit war eine große Revolution gestartet. Doch es scheint, als wäre SpaceX das einzige Unternehmen, dass dieser Revolution beitragen kann, denn andere Hersteller hatten keine Möglichkeit, darauf in kurzer Zeit zu reagieren. Sollte sich diese Idee durchsetzen, könnte dies den Markt sehr verändern.\n\nJe länger und je komplexer ein Projekt dauert, desto größer ist die Wahrscheinlichkeit, dass der Kunde Änderungswünsche während der Erstellung einbringt. Beispielsweise bei einem Online-Shop, der im Nachhinein auch mit Krypto-Währung bezahlbar sein soll. Darauf muss das Development-Team reagieren (können).\n\nAußerdem kann es sein, dass neue Technologien entwickelt werden. So wie z.B. dass selbstfahrende Autos eingeführt werden.\n\nUnd zuletzt muss ein Development Team darauf reagieren können, wenn der Kunde bzw. das eigene Team sich neu formiert und somit ein Übergang stattfinden können muss.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1266031,
      "meta": {},
      "text": "Change in software development implies that we have a state that needs improvement. We could have an unhappy client we could have a team that isn't functional, a software that does the thing it's made for poorly or not at all. In real life this could mean that the client saw a movie on Netflix and got some inspiration for the software that he paid to be made and wants us to implement immediately. One area of change would be requirements changes which means the customer has a different state of the project in mind than is currently being made and therefore we need improved analysis of what the customer wants to deliver the correct product. This can of course be dampened by continuously asking the client for their needs and having an exact idea of what they truly want in detail. Technology changes can be multifaceted but come down to new inventions and features that can be used or are expected to be used by the developer and should be accounted for. An example would be mobile phones being introduced and suddenly every website needs a mobile version that does what the actual website does but is optimized for your mobile screen and touch display. Organizational change means improving processes internally in the team or company by changing your approach to a problem or restructuring your team members to fulfill their utmost potential. In a company, this could mean changing your Teams hierarchy to best achieve your development goal.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266098,
      "meta": {},
      "text": "Change in software development happens, because change in technology and environment happens and software must follow. For example, in 2020 a new generations of gaming consoles was released and game developing companies had to change their production. \nRequirements changes occur when the customer conditions change. For example, the customer wanted you to create an app for cars, but now they want it to be used by pedestrianas as well.\nTechnology changes occur when during the development a new piece of technology was released. For example, while you were developing an app, a new smartphone was released and many users switched to it. You need to be sure it will run there.\nOrganizational changes occur when your team's work is failing at something or is not good anought. For example, someone in the team is failing at the task, so you assign this task to another member and redestribute the work.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266139,
      "meta": {},
      "text": "Software development can change by time. It' s due to miscalculations, change of the actual needs by time, improving things in the whole processor finally Incorrect prioritization of requirements.\n\nRequirements can change in the financial are for example when the whoel team is out of budget. We can also name the evolutional area where a market can change in seconds and also in the changing needs area where Changing needs is often perceived as the main and most important reason for change.  Maybe the customers keep changing their opinions – they don’t know really what they want.\n\nBy technology changes we mean updating the software and keeping it up to date for a better use and application and also taste newer versions for the near future.\n\nAn organizational change is the process that a certain company take in order to adapt to the change of goals or methodology for exemple. It can take many aspects like changing the working team members or appointing a new chef",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266204,
      "meta": {},
      "text": "Change in Software Development can be divided into several areas. On the one hand we have technological change, like changing Software. On the other hand, we have change in the environment (e.g. new legal constraints, new customers, new competitors) . An example for change in the real world would be \"Bockbuster\" they had a video rental business and had to file bankruptcy because Video-Streaming became more popular and competitors like Netflix occurred and they were not able to keep up with the progress.\nRequirements changes that appear when e.g. the problem statement of the customer changes (because of a change of the customers needs). The customer could e.g. need another feature for his website whereas a former important part of the software is not considered important anymore.\nTechnology changes are for example changes in the used software. If for example a car producer decides to use a new kind of assembler, which is better for the car,  you have to adapt to this change.\nOrganizational changes can for example occur, when the team of developers changes, somebody could be sick or leave the company. The rest of the team has to adapt to this kind of change in the organizational structure.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266241,
      "meta": {},
      "text": "The changes are happening because the life is evolving. \n\n",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1266298,
      "meta": {},
      "text": "Software development is an agile process, due to rapid changes to an IT infrastructure, endless updates on competitors strategies and even changes in a customers requests. To remain on board, software developers should be able to recognise changes early and do everything possible to smoothly adapt to new conditions.\n\nGreat example of momentary adaptation happened in January 2020.  As the whole world was shocked by the spread of the new virus, Zoom developers have already started adapting their software to new realities. Quick reaction helped the company to gain enormous popularity and new users. Zoom predicted home offices for thousands of companies and by rights got their moment of glory.\n\nChanges in requirements can appear for example as a result of changes of organisational policy or changes in customers needs. \nWhatsApp is known as a leader-messenger app. However, its main competitor, Telegram, got this status due to earliest changes on data privacy and communication encryption. These changes in requirements helped the app to get its huge clientele and fame.\n\nTechnology changes happen because of constant updates on available technologies and recourses. Being able to occupy a free niche could be a key to success.\nApple TV was presented in 2007 - a technology that allowes broadcasting iTunes content onto any high definition TV. It is amazing how we don´t need a cable now - thanks to a new technology adapted by software developers.\n\nOrganisational changes help the company to stay on the market for a long period of time and gain new customers by using innovative ideas and creating an attractive image.\nSince TikTok started gaining popularity between younger generation, Instagram decided to provide their users a similar function - Reels. This helped them stay competitive, catch the trend and also prevented massive loss of the audience. \n\nIn conclusion I would like to say that changes in the software development are necessary and profitable for each company that wants to successfully perform on a constantly emerging market, retain and expand their target audience.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266546,
      "meta": {},
      "text": "Change happens in software development because you have to solve very different complex problems. For one company you have to, for example, build a website for their clothes store with a search and a shopping function, meanwhile another company wants you to build an entirley different type of software.\nAnother change would be if the legal requirements change like for example a change in the laws.\n\nRequirement changes happen mostly, when the requirements of the product change, that means that the client decides that they want another feature in their website, e.g..\nTechnology changes happen, when you have to apply different technologies to solve a problem, for example a different programming language to programm a clients website or tool.\nOrganization changes happen, between different software development teams. One team is like a five men company with a small scrum team, meanwhile another company has 30 men and then has many different scrum teams and scrum meetings about scrum meetings e.g..",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261905,
      "meta": {},
      "text": "In software development, change happens due to direct and indirect factors that would affect the overall goal, result and success of the development project. Due to highly competitive markets in the software industry, many changes need to be quickly undertaken in order to achieve the success of the software development project.\nAn example would be the removal of third-party cookies from Google Chrome which required extreme changes in the marketing automation technologies, because old systems were highly reliable on these cookies to target individual users.\n\nRequirement change is based on the addition or redefinition of currently defined requirements for a software development project. E.g., If the software usability needs of the stakeholders change, then current requirements needs to readapted to support the newly issued needs.\n\nTechnology changes englobes the readaptation of currently adopted technologies used to built the system, in order to support new or changing functionalities of the software being developed. For instance, proactively adapting a system to support new devices.\n\nOrganizational change comprises the modification of the current structural organization in software development projects. For example, change in the overall strategy to provide significant operational changes in order to achieve better and more focused results.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262202,
      "meta": {},
      "text": "Change in software development usually happens due in order to improve the project in some way. This can happen to better fit the requirements of the contractor, to implement a new industry standard, and so on.\nAn Example in the real world for this would be Snapchat and their story function. With this function, you could post a picture either so all your friends or everybody could see for usually 24 hours after it gets deleted. This functionality became really popular and a big reason Snapchat got as big as it is today. Of course, other social media platforms started noticing Snapchat gaining in popularity, which lead to them also adding the function. It sort of became a new industry standard. Today most social media platforms like Instagram, WhatsApp etc. have added a similar functionality.\n\nrequirements changes: During development the requirements for the developed application might change (for example new functions, competitors implemented)\ntechnology changes: the technology used has to be changed, for example the application was developed years ago now a new faster and safer technology is industry standard.\norganizational changes: for example your company outsourced development, a month into development the hired firm tells you they will need way longer than expected",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262468,
      "meta": {},
      "text": "Seit 2020 ist die größte Veränderung in unsere Welt das Corona Virus. Zuerst entwickelt die Cloud Technologie sehr schnell, da mehr als 80% Menschen zu Hause arbeiten müssen und die Cloud einer der wichtigste Unterstützung ist. Die Cloud spielt eine große Rolle in der Corona Zeit, um die Teammates miteinander kommunizieren, Datei austauschen,  zusammenarbeit zu können.  Außerdem eine andere Tendenz ist die Künstliche Intelligenz z.B. einige Künstliche Intelligenz hilft uns die Code zu schreiben\nDie Künstliche Intelligenz ist nicht so weit von unserem Leben, z.B. die GPT-3 von einem USA Firma schafft selbst Artikel zu schreiben nach training. In der Zukunft wird immer mehr hilfreiche und öfter die  Künstliche Intelligenz im normalen Leben vorkommen.\n\nDie Corona pusht die technologische Entwicklung und gleichzeitig auch die organizatorische Veränderung. Ein Firma müssen genauer planen, wie die Arbeiter seine Zeit verteilt. Aber in der realen Situation die meisten Arbeiter schaffen nicht seine Arbeit wie normal, da die Arbeiter haben viele Herausforderungen zu Hause. Der Manager müssem eine Priorität geben, um zu zeigen welche Arbeit wichtiger ist. Außerdem mehr Infomation Austauschen und Kommunikation sind auch bedeutsam, da die Arbeiter die Situation voneinander besser erkennen können.\n\nDie Software Entwicklung spielt nicht nur auf dem Computer Plattform, sondern auch auf dem Smart Phone.  Im Jahr 2023 wrid vermutlich 4 Billiarden Smart Phone Halter, deshalb ist die Applikation Bedarf sehr groß. Einige Software auf dem Handy sind unerlässlich und populär z.B zum Kommunizieren Whatsapp, zum Spaß Tiktok. Diese Applikationen hilfen alle Bereiche im unseren Leben braucht mehrer Applikationen. In der Zukunft wird immer mehr entwicklt.",
      "score": 33.3,
      "language": "GERMAN"
    },
    {
      "id": 1262928,
      "meta": {},
      "text": "\tChange is rooted in the definition of software development. Be that through code changes, process changes, or documentation changes, the state of the code is always changing as we aim to improve it. \nA simple example would be our TUM Online platform. We constantly use it however often see, changes in the functionalities, interface... Just because software is launched and working, it does not mean it's not changing.\n\tRequirements change is related to changes in the initial problem. Before we start coding, we need to outline and document the requirements of the software we want to create.\n\tAs the needs of a company or customer change, so will its initial problem thus requiring a different solution. For example, 5 years ago, banking apps only had a simple overview of your account, however as the market became more competitive and trading started to become more common, the bank's problem changed. They needed to bring these features to the customers, thus requiring the developer to come up with an application that supported trading as well. The requirements they had 5 years ago are no longer applicable now.\n\tOrganizational change means changes in the software development process or within the structure of the team of developers. For example, a team can choose to control their software development through organizational maturity or agile methodologies. One works in a highly planned and structured way whereas the latter is highly adaptable and thrives from flexibility. Thus, the process they choose will impact the way their code is written and how their end product will look like.\n\tChanges in technology, come as a result of new tools being developed and their availability and new scientific knowledge that can be utilized to build better software. One common example would be AI. As advancements are being made in AI, we see more and more programmers using it and finding new ways to integrate it in their software.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264580,
      "meta": {},
      "text": "Change happens a lot in the software development field because this is a very dynamic field and it's open to contributions from all around the world. As a developer you're entitled to take tasks from what you've given from your product owner and the reason behind that is the speed of technology and the requirements that have occurred based on that speed. An example of this would be new validation rules that you can implement in your application which I'm doing with my current team right now. This was needed because our Product Management team decided that current error messages are not sufficient to give a good explanation.\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265237,
      "meta": {},
      "text": "Software development appeared in 1948, and for a decade it wasn't even considered a branch of engineering. However, after 70 years it became one of the most aspired careers, because in present technology it is everywhere. From hospitals, schools, banks and other major institutions, everyone one of these benefit from its development.\nRequirements changes:\n\t\tIn 1975, the first PCs begin to make their debut. These were not created for home use, but for business. By now everybody owns their own PC and they can be used for entertaining as well as for working reasons. Therefore, if at the beginning the scope was to help eliminate human errors in the services offered by banks (now registers could be kept in a digital format), hospitals (can keep medical records of patient) etc., now it's used for enjoyment. \nTechnology changes:\n\tLet's take a look in the past of older phones (i.e. Nokia). These phones were used for communications reasons and nothing else, while now every smartphone can connect to the internet. People can actually work from them, like they do on their own computers. The smartphones of today are capable of doing more tasks faster than a computer could do back in the 90s. Even the differences between the telephones from this year and the ones from two years ago are noticeable. Another part where technology progressed rapidly was the medical field. Every year new surgeries, which were difficult and dangerous in the past, become easier to perform.\nOrganizational changes:\nIn any major firm in the past, it wasn't a requirement to have software developers, but now multiple teams of them work in the same company. Therefore in 2001 Scrum was introduced, an agile process that uses iterative and incremental framework for complex software development. The goal was that a group of software developers could work together efficiently.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266224,
      "meta": {},
      "text": "The software world is known for being in constant evolution, and very prone to change.\nThe first reason why change happens is that the software world is well known for being competitive and innovative, and in that context it becomes necessary to observe the market and adapt to the changing environment. That way the client won't face the same mistake of who weren't up to date and had to deal with the consequences of it, like Nokia. \nAnother reason behind change in software development is to meet the standards that were set for the coding project. New requirements can appear unexpectedly during the project, which requires re-evaluating it in a way that can do each of the 3 areas of the project triangle justice. \nAn example for change in the real world is switching from C, a low level compiled language, to Java, a high level interpreted one, depending on the desired level of abstraction and performance.\nOver time, new requirements emerge and existing requirements change as the client's needs evolve. An example in requirements changes is an in-/decrease in budget depending on the circumstances. \nTechnology changes consist of improving existing technologies and developing new ones. Artificial Intelligence, Quantum Computing and Cloud are labelled as a technology change.\nFinally, there's organizational changes that consist of a remarkable shift on the team's way of communicating, their operations, and their goals.  An example for major organizational change is switching from traditional ways of communication to Scrum, a strategy to keep the work going and let everyone voice their thoughts, without interrupting the work flow.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266421,
      "meta": {},
      "text": "Change can happen due to various external reasons. Two of them might be changing customer requirements or changes in the surrounding legal/ regulatory framework. One example for the latter can be found in the development of the Corona Warnapp. Several times, law (or at least Verordnungen) changed, so that the app must be adapted accordingly. For example, in that not only the infection incidence levels are important, but also the hospitalization incidence levels. So the developers (lead: SAP, Telekom) needed to adapt the dashboard\nRequirements can change if the customer decided to alter the future state of the product. This can e.g. be done through the product owner. For example, in the given example, the RKI serves as the customer. One change might be that the vaccination status should be implemented directly in the app. \nSurrounding technology is also subject to change. For example, hardware OEMs have the power to decide / influence the apps which are developed on their devices. For example, apple could influence or change the fundamental technology that allows for tracking risk contacts in the pandemic (https://www.apple.com/de/newsroom/2020/04/apple-and-google-partner-on-covid-19-contact-tracing-technology/), e.g. the underlying Bluetooth platforms.\nOrganizational changes might affect the set-up of the development project, so e.g. product owners are shifted to another legal entity. An example is the debate about adding / removing competencies from the RKI to the German Government or other bodies. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261414,
      "meta": {},
      "text": "Change may happen in software development when clients change requirements during the project due to change in business environment or new business ideas that require different solutions.\nFor example, Netflix was originally a DVD rental company. Its website was built for DVD rental. Since the business environment has changes over the decades, Netflix adjusted its website and created an app to transition itself to become a Streaming service provider. \n\nRequirements change may occur due to the followings:\n1. when the requirements were poorly defined during requirement development process\n2. the technology has changed throughout the projects and the requirements need to adapt to the technological change. \n3. The budget or schedule was overly optimistic, the requirements need to adapt to the available resources and limited timeframe\nExample: Netflix mentioned above\n\nTechnology changes means when there's new technology developed, as the new technology becomes available, clients/customers would like the current software to be adaptable to the new technology or would like a upgraded version of the software with new features. \nExample: invention of AR/VR technology, and smartphone/app companies adapt its devices/apps to make AR/VR available on their products.\n\nOrganizational changes can mean the size or structure of the organization changes. When the change happens, The software development project management, such as Scrum and how it works in the organization needs to be adapted to the new organizational structure/size. \nFor example, when a start-up is acquired by a larger company, new teams/departments are formed/re-organized. Consequently, software development project management needs to be adjusted. \n\n \n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262257,
      "meta": {},
      "text": "Day by day, the technology and software are developed and improved. Computers are more powerful, devices' performance is increased, and engineers are most definitely better. While developers are building things with tools, the teams building the tools are also constantly improving the products, that they are handing off to other developers. For example, developers in Android projects were using Java, then Jetpack component, then Kotlin, now again Jetpack and Ktx. \n\nRequirements changes are the emergence of new requirements or the modification or removal of existing requirements, that can come from customers' needs, change in market demands, or even Laws and regulations change. New project requirements and goals can appear unexpectedly, while established requirements can shift numerous times. \n\nTechnology changes are changes, improvements, or new inventions that make the development process more effective, production cleaner more efficient, and so on. For instance, many organizations still relied on physical servers to host applications a decade ago. Each physical server hosted a single app. Thanks to the birth of virtualization, a single server can now host a lot of virtual machines, and server deployment is reduced from months to minutes. This dramatically increases flexibility and also simplifies API development for programmers in a platform-neutral environment.\n\nOrganizational change refers to the actions in which a company or business adjusts a component of its organization, such as its culture, the being used technologies, or its internal processes. Organizational change examples include onboarding new employees, launching a new department, or merging with another company. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262353,
      "meta": {},
      "text": "Hardware, as well as software, are getting updated and improved constantly. Therefore, you will have to adapt and change your programs and setups accordingly. \nWhen a problem, as you have it right now, does not seem solvable, maybe you should change it, or at least the perspective you look at it from to find a way to solve it. \nWhen customers demand more features, you may have to change what you have already got in order to satisfy them. \nAll of this just shows how important it is to see change coming and to alter your program/product or even business accordingly. You can see this with the company Blockbuster, which rented out DVDs. They didn't see how online video libraries were going to take over and missed out on adjusting/converting. This resulted in their bankruptcy, even though they were market leaders at the time.\n\nWhat they also missed out on, was observing their competition. New market competitors can bring many organizational changes with them. For example, a new product that is cheaper than yours. You might have to adapt to their prices, so you need to cut costs by e.g. reorganizing your business and strategies. \n\nBut your requirements can change as well, for example, when your government gives out new legal constraints, laws, and regulations. They can restrict part of your services or your whole service. \n\nWhat is also bound to constantly change is technology. Faster alternatives are published for software, hardware, and setups all the time. The significance for your company can vary from just optimizing a bit, to rewriting your whole code, maybe even converting the software or environment it is programmed for.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262984,
      "meta": {},
      "text": "Generally speaking, because the application domain changes. This will effect the requirements to the software, i.e. what the software must be. An example from the real world are banking apps. They regularly update their security mechanisms to avert potential attacks through security gaps before they're found (or at least exploited in a big manner) by the attacker.\n\nexample \"auto-pilot of a car\"\nrequirements change:\nThe traffic regulations change: On all highways there now is a speed limit of 120 km/h. Consequently the auto-pilot is required a different behaviour. \ntechnology change:\nThe auto-pilot analyzes pictures taken by cameras installed on the car in order to recreate the surrounding. Due to potential misinterpretation of picture elements this method gets discarded. Instead now information about the surrounding is provided by 3D scanners. In order to recreate it, now a different algorithm is needed. \norganizational change:\nThe size of the developer team doubles. Now there's the possibility of simultaneously working sub-teams. This will require an analysis of parallel production pipelines and dependencies of production pipelines to one another. To sum up, to organize the development there's now a new task to be done. \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263098,
      "meta": {},
      "text": "Every day people come up with new findings and concepts. Hence software development must adapt to major and also minor changes. In a lot of cases this concerns the technical side. For example before the first smartphones enter the market Nokia was the market leader for mobile phones. After a short time they lose the leading place because they have not adapted to the changes.\n\nAlso there is a contenuir change in requirements. Due to current enviroment settings it is important to have the ability to adapt to new issues. Maybe there are political changes or a new law appear which influences the project. In case of a new act for data protection the security must be further improved, for instance.\n\nAn important area is the technology change. This field develops very rapidly and brings new changes almost every day. At the moment one of the most famous future changes seems to be quantencomputing. But changes will not only be in the development of specific software for scientific use. Software for daily use needs brand new cryptography technics to be save for the future.\n\nThe last area are the organizational changes. With every new year of experience in the young field of software development there are found better technics to organize certain working processes. The Focus lies on the question how to control software development. In the last years it turns out that that empirical process control models are more suitable for software development then others. An good example is the change from defined processes to empirical processes like Scrum.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263415,
      "meta": {},
      "text": "The topic of change is omnipresent in software development and can be driven by different external forces. The development cycle for new software is a long, continuous process, which can take years to complete. This is especially true for highly complex systems with difficult requirements, such as software for airplanes. Over such a timespan, changes in the external environment and the project requirements, are highly likely and even moreso due to the immense speed at which technological advancements are achieved nowadays.\nOf course, the more and the quicker the context surrounding a project changes, the higher the impact. Accordingly, it is of utmost importance to continuously adapt the project throughout its development. If, for example, a software for a self-driving car is developed factors such as technological opportunities or consumer needs are likely to change over time. These could include new, better cameras or even an entirely different way of mapping the cars surroundings. Not adjusting to such a development would render the Software useless as soon as it is fully developed.\nMainly, there are three different types of change: requirement, technology and organizational. At the beginning of the development cycle, the requirements and goals of the software are defined. If these change later on, requirement change took place. An example could be that a faster runtime is required than initially expected. Technology change can be seen as changes in the technological context of the project. Examples could include changing interfaces on the customers side or new technical advancements which need to be taken into account. Lastly, organizational changes are changes in the organizational environment, both on the side of the customer and the developer. These could include organizational restructoring or changing personell. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264088,
      "meta": {},
      "text": "There may be various reasons, to adapt changes in a software: this could be for instance caused by an innovative approach such as changing the business model. This could demand new features to add on the software. Or changes might be needed, to simply optimize and improve the existing solution to a more efficient version. Even simpler, there could be a bug to fix.\n\nAn example from real world could be an infrastructural change such as changing the compiler or the programming language, or just a cosmetic change like changing the logo or the design, or an algorithmic change.\n\nRequirement change: Could be caused by a change in the user’s requirement or stakeholders’s needs. Business requirements and software requirements often go hand in hand. For example a bank, could have the model of student accounts and standard accounts, where student account members could only transfer 1000€ a month, whereas this limit could be higher for standard accounts. If the bank decided to change this limit for any of the account types, this would be a business requirement change, which would then cause a software requirement change directly.\n\nTechnology changes: As technology trends change fast, this transformative approach also applies to changes in software development. VR could be a good example for that, which causes changes not only in gaming & entertainment industry, but goes far beyond to fields like education. Some gaming software development firms are i.e. obligated to adapt changes according to VR, in order not to fall behind the market.\n\nOrganizational changes: these could be i.e. certain deadline requirements by the customer for certain intermediate/final demonstrations. For example, the customer could demand from the team to deliver the security module of the software product a week earlier. This would be an organizational issue to deal within the team to fasten the process.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264307,
      "meta": {},
      "text": "Change in software development happens because the world (=context) we live in and use this software is constantly evolving. Hence, we need to adapt the software to changing needs, requirements, standards, etc. One big \"change\" in the real world was the appearance of smartphones.\n\nRequirements changes:\nSometimes the requirements for a software change, e.g. the customer needs different functionalities to be able to solve a problem at hand.\n\nTechnology changes:\nSometimes, the software needs to be adapted because there is a change in technology, e.g. computers have new processors and the customer needs to be able to run the software also on these new processors. Or when smartphones were developed this required completely new software systems that could be run on these devices.\n\nOrganizational changes:\nSometimes developers decide to change the payment models and offer a premium version of their software. People then have less functionalities with the free version which must be adapted within the software.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264309,
      "meta": {},
      "text": "Requirements changes:\nAnforderungsaenderungen koennen zum Beispiel entstehen, wenn einem Kunden auf einmal einfaellt, dass er ein bestimmtes Feature noch mit in der Software haben will.\nEin weiteres Beispiel waere, wenn eine Software urspruenglich auf einige hundert Nutzer ausgelegt war, aber auf einmal mit einigen tausend Nutzern umgehen muss. Ist dies der Fall aendert sich die Anforderung an das System und die Software muss angepasst werden.\n\nTechnology changes:\nEine Technologie Aenderung kann beispielsweise ein Update einer, in der Software verwendeten, Bibliothek sein. Dabei kann es vorkommen, dass alte Methoden nicht mehr unterstuetzt werden. Verwendet unsere Software diese Methoden, muss sie wieder angepasst werden.\n\nOrganizational changes:\nEine organisatorische Aenderung kann beispielsweise der Wechsel des Version Control Systems sein, das dass Team nutzt oder der Umstieg der Build Automation Software Gradle zu Maven.\n ",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1264397,
      "meta": {},
      "text": "Because of a new technology that comes up, a change in the outside world or difference in the demand to a software, software development may change. An example of newer technology may be the devices on which content is shown.\n50 years ago, most content was displayed on the TV and in business most Computers were very large machines controlled by multiple people. Then, with the advance in technology the personal computer came, so then everyone designed software for Personal Computers. Nowadays, over 50% of internet traffic comes from mobile devices. This is a very large change in technology.\n\nRequirements Changes:\nThis is when that was originally needed changes.\nWhen a customer expands his product fleet and he needs a larger Software package, the team that programs the software package has to change, what they originally wanted to do.\n\nTechnology Changes:\nThis is not only the case for the technology we program for, but also we program with. When a new framework comes up and everyone wants to use that framework, the Team might want to switch their programming gear to that.\n\nOrganizational Changes:\nWhen the company the programming team works for needs to cut labor expenses and shorten the budget, the team needs to adapt to missing workforce and a task that was originally meant for 10 people now needs to be laid out to 7 people. The empirical model is much better fitted for this than the strictly organized model.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265158,
      "meta": {},
      "text": "software engineering is a dynamic process. because of the many variables that can change during a software development process.\nThat is why you have to adapt to these changes in an empirical process, for instance with the Scrum model.\nthere we adapt the development iteratively and based on lean thinking.\nNowadays these programs need even more adaptation because of the increasing complexity. \nFor example:\nIf you take the development of a finance-related app, that process of software engineering is never really finished like a defined process. If you want to be competitive against other finance apps, you have to add new functions to your app.\nthat is why it is useful to use the Scrum methodology.\nWithin that you meet up every day in the daily scrum, to revise the product.\nrequirements changes:\nyou have to be able to adapt dynamically to many different changes in variables.\nfor instance, back in the day oftentimes the required type of data was fixed, but nowadays we have more variables that are in an interplay with each other, for example the increasing customer needs in social networks. that's why the process has to be openly designed\ntechnology changes:\ntechnology has to be adaptive. For instance, if you develop a program in the field of machine controlling it would be more useful to use C++, in comparison, it would be a better choice to use Python in Data Analysis\norganizational changes:\nthe organization of a team also has to be adaptive to change.\nNot every developer has the same skills and that is why it is important to change the different roles depending on which skill is needed more. For example, in a finance app it makes more sense to work with an expert in AI than in compiler coding.\n\n\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265405,
      "meta": {},
      "text": "Due to the constant need of improvement, change of environment, and competition on the market, changes in the IT field are inevitable. In order for competitors to stay relevant, they need to adapt and constantly come up with new and better solutions to everyday problems. \nWhen it comes to requirement changes, users constantly demand and expect new functionalities and better user experience. For example, Snapchat has recently added a new option that enables users to reply and react to each others messages, as it was in high demand, due to the same functionality on the other competitors apps. \nOn the other hand, technology changes occur as a result of a new innovative solution to an everyday problem. For instance, self driving cars. This was a groundbreaking invention, as it enabled drivers to have an easier daily commute, and be able to drive safely even if they are not 100% concentrated on the road and not well rested.\nLastly, when it comes to organisational changes they help a company work more efficiently by adapting and using its resources in a better way. An example of this would be a replacement of low performing employees with colleagues that have proven to be more productive.  \nTo conclude, changes in software development are necessary for each company that wants to stay relevant and deliver the best possible product to its audience.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265419,
      "meta": {},
      "text": "Changes happen in software development, just like in the rest of the world, since it is in constant change. Something like covid could happen, where suddenly companies had to change their focus drastically and their needs of software implementations. Like restaurants that needed new systems to coordinate deliveries. Or new communication systems, which not only needed a change in the product that a team is developing, but also in the way they are working, since a lot of people also started working from home.\nIn general, you can divide the type of changes in 3 categories: requirement change, technology change and organisational change.\nThe first one, a requirement change, is when the standard the product must meet, changes. For example, when a government passes a certain law, the product has to meet those standards and the team would prioritize this, since they want to get the product approved.\nThe second one is the technology change. This change occurs when a new type of technology appears, and to stay competitively in the market, companies must change their product or internal organization to use this new tech. This is a long-term change, and an example could be the rebranding from Facebook to Meta, trying to go to the Virtual Reality space, which is surging technology.\nThe last category is an organizational change. This is the way the team communicates with each other. It could be that a certain person decides that it would be better to use a model like scrum to work on a software project, and the team must be able to adapt quickly to the new model to work efficiently.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266197,
      "meta": {},
      "text": "Change is happening in software developing, as we live in a constantly evolving world. Market competitors come up with new breakthrough ideas connected to huge benefits, legislation changes and after all also the needs of people change. Software Engineering needs to address that constant change. A specific example for change in the real world are data privacy laws which are getting stricter and more sophisticated, as people begin to grasp which impact their use of technology has. For instance the European Union passed the General Data Protection Regulation in 2018. Software Engineering needs to adapt and make sure that these laws are followed. \n\nRequirements change: That means a change in the requirements of a software engineering project. For example if customers suddenly want the program functioning with a certain speed, or a specific appealing design. Or suddenly a specific security standard is required.\n\n\nTechnology change: That is the case when a new technology poses significant advantages and you have to stick to it in order to maintain the competitive edge. For example smartphones revolutionised the cellphone in   2008. You had to adapt to this new technology in order to stay relevant.\n\nOrganizational change: That means how an entity which performs software engineering is organised. I.e.  How are the hiearchies ,how do they work? As an agile team, as a Scrum team, or conventional i.e. one person in charge which delegates everything to others. Here can also occur massive changes, for example from conventional working style to agile scrum teams.\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261982,
      "meta": {},
      "text": "The field of software development changes quickly and a lot. To not become obsolete, a software product often needs to get updated, refactored, reworked, expanded, and fixed. For instance, if a useful new tool or framework gets released that makes it easy to do a certain task, it's probably a good idea to replace the old way with the new tool, which might be safer, faster, easier to understand, etc. \n\nSecondly, there are external factors that can influence software. For example, if a new law on data protection and confidentiality is passed, a software development team may need to change certain aspects of a particular software product to make it comply with the new regulations. \n\nRequirements changes: if the original requirements are misunderstood or falsely communicated, changes need to be done to meet the right ones at a later point. Some requirements might have gotten ignored and need to be implemented later. Example: Customer asks for an underlined title for his website, when in fact, they wanted the title in italic.\n\nTechnology changes: To meet new technology standards and not become obsolete, technology changes have to be done. Example: In the early days of software development, high-level languages didn't exist. Languages like assembly code were used, which were complicated to understand, were pretty long, and just not that pleasant and seamless to work with. As higher-level languages were developed and released, it made sense to switch to them, even if they were a little slower than assembly code.\n\nOrganizational changes: required if the company is restructuring or working on a new product. Example: a product is merged together with another to form a new product.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263208,
      "meta": {},
      "text": "Change happens because often you just have a vague problem description so the following problem solving procdure cannot be fully specified at the beginning. Deviations can also occur during the software project because of unexpected impediments while creating models or writing code. \nThe approach of an agile software development is building software iteratively, responding to feedback throughout the development lifecycle so that faults and resulting changes aren't seen as something negative much more as a chance to guarantee an excellent version of the product.\nA famous example is the mobile phone where the version of your device gets updated every period to implement new functions and fix older bugs. So the incompleteness in this case is definitely wanted and should foster long-term improvements.\n\nTechnology changes:\nA company produces a software for a costumer and meanwhile new technologies get invented so that parts of the product backlog get replaced by other ideas or can be facilitated due to the new technology.\n\nOrganizational changes:\nDuring software development you realize that your UML Diagram consists of faulty relationships that cannot be matched to code. Reorganization of the basic structure is necessary.\n\nRequirement changes:\nThe product owner and the costumer decide after long negotiations because of newly published polls about shifting interests of the population to focus more on certain aspects of a software and leave out others to ensure developing an economic porduct.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263653,
      "meta": {},
      "text": "One thing is constant in software development and that is change. Requirements, technologies, organization is going to change through out the project and it is inevitable, therefore a software developer should be able to quickly and efficiently adapt to change. But why does change happen? Let's dive into some examples to fully grasp the concept.\nLet's say that a trading company hires a group of developers to create a new stock trading software. The developers in this case will have a project manager to explain to them the project and their duties. The developers are not experts in the stock industry, so they cannot tell apart if an idea isn't practical or won't be of use, they will program what is required. Let's suppose that the developers have almost finished the product, which will launch in 2 months. In this period of time the employers decide that one feature of the app is useless and should be completely changed, or that they don't fancy the UI and want a new design. This is what we call a requirement change, the requirements of the project were alternated, and the developers should modify a part of the software.\nAnother common situation is when the technology used for the software is replaced by a newer, more efficient one. This includes moving to another programming platform or using new/different technologies in code, etc.\nAnother aspect worth talking about is organizational changes. Let's go back to our trading company example. An organizational change would occur if the company decides to reconstruct the organization of the project. The project manager will communicate the change to the developers, who will have to adapt. Maybe the working groups can change or the emphasis of certain parts of the project will change accordingly. \n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263810,
      "meta": {},
      "text": "Since software development has become fundamentally tied to the real world, changes in the real world rapidly translate to changes in software development. \nFor example, ",
      "score": 8.3,
      "language": null
    },
    {
      "id": 1263904,
      "meta": {},
      "text": "Chance in software development can be caused by several reasons. It could be a new technology that would improve the softwares performance or the customer that changed his mind concerning the functionality of the software and therefor reformulate his requirements. \nA could example fro change in real world would be the climate crisis. The trigger for change is the dramatic climate situation in the world. To get out of this crisis the governments of the world have to change existing laws, for example restrict the co2 emissions of a country. \n\nRequirements changes: Functional or Non-Functionals requirements are being changed or updated during the development process all the time. \nExample: Change in payment methods\n\nTechnology changes: Emerging technologies that leads to change in the process of software development. \nExample: More efficient coding environment.\n\nOrganizational change: Change in the organizational structure of the project.\nExample: New Scrum master ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264316,
      "meta": {},
      "text": "1) Software has own complexity and changes, where changes are part of software development lifecycle. Example: software may be completely outdated or may require intensive updating. We need to fix the problem, so customer can use it (update Facebook)\n\n2)  Requirement changes: when you need to change some features in order to understand stakeholder's needs, etc. For example we need to update iOS in order to use latests apps. Another example - change of privacy polilcy in WhatsApp. If the custimer want to continue to use the app he need agree. \n\nTechnology changes: due to multiple bags and undefined problems it is important that software is maintained in a timely manner by updating the code in accordance with changes in the user environment or technology. Example: updating of Instagram for getting new features with corrections of bags.\n\nOrganizational changes: it is an organization of new ideas and adoptation itself. The main goal is to support for processing and tracking changes. Example: change in leadership",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264406,
      "meta": {},
      "text": "change in software development can happen because of many reasons. There is the possibility that changes take place in the real world, for example there might be new laws or restrictions by the government concerning software development. In this case software developers are forced to change something. Also the globalization and mixture of culture and languages lead to change in software development.\n\ntechnology changes: \nNowadays there are changes in technology almost daily. Programming languages that were common a few years ago, are almost useless today and if you want to stay up to date a software developer you have to adapt to these changes. Another example is the improvement and development of software, that can make a big difference and give you an advantage.\n\nrequirements changes:\nThere can be a lot of reasons for the change of the requirements. Factors like customer needs, the action of the competitors or restrictions by the government having a big impact. If some of these factors change, you have no other choice than change something.\n\norganizational changes:\nThe way of communication inside companies and between people, really changed over the last time. Especially during covid-19 it became more and more common to work remotely and have more freedom to operate from where ever you want. Software developers had to get used to this new situation over the last time, but I think its the right direction and I see the future oft software development in working completely remote.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264668,
      "meta": {},
      "text": "Veränderungen passieren während des Prozesses von Software Entwicklung häufig. Die Gründe dafür sind vielfältig und lassen sich in drei grobe Kategorien einteilen:\n\nRequirement changes: Dies sind Veränderungen in den Anforderungen an eine Software. Häufig treten diese Veränderung der Anforderungen auf, wenn die Anforderungen nicht an die Software am Anfang nicht sauber erfasst wurden und nachträglich geändert werden müssen oder auch wenn sich die Anforderungen über die Zeit verändern, ohne dass es am Anfang absehbar war. Ein Beispiel hierfür ist wenn Artemis dafür ausgelegt wird, dass 200 Studenten parallel dies nutzen können, sich aber herausstellt, dass doch 1500 Studenten an einer Veranstaltung teilnehmen wollen. Daraufhin muss das angepasst werden.\n\nTechnology changes: Die Technologie und deren Möglichkeiten werden immer größer und das natürlich auch während des Prozesses der Software Entwicklung. Wenn sich innerhalb eines Projekt eine bessere technische Lösung für ein Problem findet und darauf eingegangen wird spricht man von einem technology change. Zum Beispiel müssten sehr viele Verschlüsselungssoftwares sich verändern, wenn ein effiziente Berechnung zur Primfaktorzerlegung gefunden wird, zum Beilspiel mit Quantencomputern.\n\nOrganizational changes: Von dieser Art Veränderung spricht man, wenn sich die Organisation, die als Auftragsgeber fungiert verändert und darauf eingegangen wird. Zum Beispiel wenn ein Unternehmen eine neue Führungsebene erhält und diese neue Ziele für eine Software haben, bzw neue Schwerpunkte setzen, spricht man von einem organizational change.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1264941,
      "meta": {},
      "text": "Instead of fully planning the whole process in software development, you begin with a rough idea and then react to changes and deviations from your original plan. Instead of trying to avoid those, you welcome them and see them as opportunities. This, aswell as the fact that it is a creative task, are the reasons why change happens in software development.\nThe area of requirements changes involves changes of the needed functionalities of your program. If, for example, your task would be to program a website then a requirements change would be if the external client all of a sudden also needs a web shop integrated into it. A technology change would be if there is a better technology out there that you want to use or if the ones that you use are outdated, for example if you produce memory cards and someone develops a technology which allows two times the existing memory density, then you are required to adapt to the new technology because your competitors certainly will. Then there are organizational changes. those occur when there are changes induced by the goovernment or other regulatory units. If you, for example, sell your product to another country but now there is an embargo against it, then you have to find a different country where you can sell your product instead.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265313,
      "meta": {},
      "text": "There will always be change in software development, because the world we develop software for is also changing.\n\nRequirement changes:\nSometimes, the client needs new features, or re-prioritizes the current ones. For example, if Apple releases a new feature, it might be important to add support for that as soon as possible, as one might lose customers to the competition otherwise.\n\nTechnology changes:\nChanges in existing technology, or new technology, can lead to changes as well. For example, with the introduction of GitHub actions many, primarily open-source projects, has introduced them into their workflow and now require test-runners to pass.\n\nOrganizational changes:\nThere can also happen organizational changes, for example, if you get a new team member or leader. This usually takes some time to get the team working together on their full potential again.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265316,
      "meta": {},
      "text": "Change in software development happens so that products meet the expected requirements of the end-user, a good example of that is the big phone companies(Apple, Samsung, and so on). If for example, Samsung is in the middle of the software development for a new device, while apple publishes a new device with completely new features, Samsung has to add new features as well, so that their device, which is not even published yet stays relevant and is capable of competing with the Apple product. That's why software development is problem-solving in a changing context and agile methods have to be used.\n\nRequirement changes are changes that happen when the customer decides that he wants the software to be capable of doing new or different things than originally planned, or if a miscommunication occurred. For example, if Samsung develops a new phone and when Apple releases a new phone with new features Samsung might have a requirement change to add new features as well.\n\ntechnology changes are changes, concerning certain hardware: while the software is in its development phase you optimize it for the different processors and other hardware, that it will be used on, for example in 2020 when apple introduced their new apple silicon m1 chip most software/ programs were not supported for their mac with the m1 chip .. so the software developers had to adjust to the technology change and make their software compatibly with the new technology (in this case the m1 chip)\n\nlastly you have organizational changes for example when a new management system like the scrum is introduced or managing positions change or someone falls ill for a certain time. At those moments you as a software developer have to adjust to the organizational changes and change the way you work on the software, so that it fits the managing / organizational style. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265920,
      "meta": {},
      "text": "Change in software development happens because of the increasing or changing demands/requirements from the users or customers, for example they want faster programms or bigger database, and also changes happen in order to fix some issues (such as bugs) or simply to enhance it (future development). One of the examples is cloud computing. Back then if we want to share a big file, we need to put it in a drive and send it manually to the person/people, nowadays we can simply share it on Dropbox or Google Drive.\n\nRequirements changes:\nRequirements change can occur due to changes in user requirements or stakeholders’ needs and the arrival of new technologies. Digital transactions are getting bigger and bigger, so the users need a secure and reliable way to handle this, which leads to the availability of Blockchain for example. \n\nTechnology changes:\nNew technology keeps on coming these days in order to fulfill the needs of users. Such as the switch from 4G to 5G, it happens because the 4G cannot handle high density well enough.\n\nOrganizational changes:\nThis change refers to the action of a company altering their targets or infrastructure or other major component. For Example: a car company can drastically change if they decided to only produce electric cars.\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266097,
      "meta": {},
      "text": "Change can happen because of different reasons. Change can occur in any given time. An example would be that a client asks us to develop a certain software. For it we may need tools that costs a lot of money and while the team is preparing to develop the software with the pre-mentioned tools, the client may asks us to adapt the project to a new budget. This a  organizational change that will lead us to adapt. In this example to help us to deal with this change we need to do an analysis of what is actually required and also analyze the technology market since we can come across tools that can be less expensive and can provide us the help that we need. Another example of change is that we may have already given the software to the client. But nowadays the technology market grows faster and faster so the case could be that after a few moths the software outdated. For this example we need to make a technological change. We need to implement, design and improve the current software wit the help of newer technologies.  ",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1266257,
      "meta": {},
      "text": "Change in software development happens because of new economic demands, restrictive law changes, and new innovative technological possibilities. The Smart Watch which represents a combination of a conventional watch, a smartphone, and some sort of a medical instrument that checks its wearer's heart rate while exercising, which changed software development into a minimalistic, highly functional, and intuitive design.\n\nAs of requirement changes, connectivity to the internet bacame more and more apparent, even for the refridgerator at home, the so called smart-home.\n\nTechnology changes occured in higher bandwith with the new 5G network and glass fiber technology, that outclass their predecessors by far.\n\nThe cloud servers brought huge organizational changes to data access for both, enterprises and the private sector, rendering most localized databases obsolete and impractical.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266314,
      "meta": {},
      "text": "Because ot the constant rapid technological development, technologies and systems change constantly. This means that often software development projects (especially the ones, taking longer time) must be changed and sometimes even restarted, so that the systems are up to date. Another reason may be the clients wishes and requirements, as well as any need to fix bugs and errors. Some common software development changes are the change of the compiler (for ex. from C# to Python). \nThe requirement changes are mostly connected to the changes of clients wishes, and organizational to the changes of the management (aim, funding, etc.). Technology changes happen because of the constant technologigal evolution, as well as adaptability to systems. Developers constantly introduce improving changes to platforms.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1261627,
      "meta": {},
      "text": "Change can happen due to a number of circumstances, all having their own respective influence on the outcome of the project. These can be external (for example the market of the project changes) or internal (for example a key developer quits).\n\nMarket changes:\n\t- Influences outside of the project change the way it will be set up, for instance changes in expected revenue\n\t- F.e. A competitor releases a new product that is even better than the one being developed\nOrganizational changes\n\t- The structure the project is set up has to be altered due to variance in f.e. ressources\n\t- F.e. The company has to shift it's ressources towards other projects, therefore the project has to be made simpler\nTechnological changes\n\t- Changes in the available technology can change the possibilities within a project, therefore requiring a re-evaluation\n\t- F.e. A new tool is being discovered which allows tha modification of certain parts of the software / hardware, or even enables new functionalities)\nRequirements changes:\n\t- The requirements of  a project get altered, therefore leading to a different goal and automatically way towards that goal\n\t- F.e. The customer rethinking his decisions and requesting additional functionalities",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262236,
      "meta": {},
      "text": "Change happens because the number of involved parties is huge. At the first glance, only developers and clients might come into mind, but there are also managers, indirect clients, developers of used tools, hackers, politics and many more.  \nIf for example the EU declares a new privacy law, developers all over the EU have to implement the new requirements.\n\nRequirements changes:\nClients or subclients change their minds or have to adapt to new regulations. These changes are passed on to the development team, since they are the executing party.\n\nTechnology changes:\nIf external tools or frameworks are updated, developers should implement them as soon as possible, since older versions might be vulnerable to attacks. The recent log4js problems might be a good example - lots of teams had to implement the updates really fast.\n\nOrganizational changes:\nPersonal changes in the development team, altered management processes. If an employee leaves or joins, the incoming or outgoing knowledge has to be considered.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262995,
      "meta": {},
      "text": "Change happens in software development because it is very past paced, affected by the constant technological progess and has to adapt to the changing needs of its users.\nA very common change would be changing from a programming language to another because one of them isn't used anymore.\n\nRequirements changes happen very often and can happen at any time. Requirement changes are necessary so that the software fulfills all the needs of the clients and are important in optimising the software so that it accomplishes all it's goals. For example if the users of an app all wish that the app would have a specific feature, that feature could be added to the app through change of the requirements that the software should fulfill.\n\nTechnology is rapidly evolving and also has a big impact on software development. Virtual Reality technology is emerging in the last years and to develop software for virtual reality games there have to be changes in the software development process in order to get a good final product. They can't use the same development process than with normal games because it is developped for a different technology.\n\nOrganizational change can be a change in the company culture, a change in management, etc... When covid hit a lot of tech companies had to change the way they were working. People didn't came to the office anymore but had to work frome home which required a big change in the way things were getting done and even changed the workplace culture permanently by switching to more remote work.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263083,
      "meta": {},
      "text": "Change in software development happens due to changes in the requirements, technology changes or organizational changes.\nAn example for change in the real world would be the breakthrough of the smartphone. Companies anticipating the breakthrough could react and develop software for the new hardware, whereas companies not anticipating the breakthrough just could not catch up with the others anymore.\n\nFor example if the costumer suddenly wants an additional function in the software this leads to requirements changes. But if the requirements stay the same there could also be change by technological changes. For example a new technology appears which lets you implement a function of a program far easier and the function gets faster or safer by this new technology this changes the way you're approaching the function.\nThe last big possible change is an organizational change. Organizational change could happen if for example there are new laws or competitors so you have to adapt to this new situation.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263222,
      "meta": {},
      "text": "Software development undergoes change due to several factors.  It is a dynamic process which is influenced by many things, inside and outside of the software project. The development of the software has to take into account all of these changing factors to be able to deliver the best product possible. For example, if a software is being developed for an enterprise, which is then being bought up by another company. The software project is likely to undergo massive changes as many things of the customer are changing. \n\nThe needs and desires of the customer may change during the development phase of the software, thus leading to different requirements for the end product. For example a bakery of donuts first asks a software firm to develop a website and its only function is to display it's items which can be bought in the store. But then it changes it's selling strategy and decides to sell items also online. Thus, requirements change.\n\nTechnology changes lead to change because the way functions can be implemented and run on computers and machines are hugely dependent on the current state of technology. If for example you look at the transition from normal cellphones to smartphones, the whole software of these devices had to be redeveloped.\n\nOrganizational changes influence the software development because the people working on a product and the organizational structure define to a great extend how the project is managed. If for example the team size is getting shrunken to only half the people before, you have to reassign responsibilities and overthink deadlines.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265298,
      "meta": {},
      "text": "Reasons for requirement changes: The original requirement turns out to be infeasible or the client may have a change of mind\nExample 1:\nIn the age where health consciousness is increasing due to social media, Cola has decided to release Cola Zero (zero calories) to appeal to this target market\nExample 2:\nAn online retail website (medimops) originally wants to sell used books but then the owner also wants to sell used clothes as well, thus requiring a larger database and additional resources\n\nTechnology changes: happen because of for instance updates or new releases\nExample 1: Since the introduction of 5G in 2019, iPhones manufactured thereafter adopt the 5G specification for faster speed of Internet connectivity\nExample 2: Since 2007 where online streaming began to be profitable, Netflix has switched from making business in delivering movies to homes to a streaming platform\n\nOrganizational changes: due to changes in recruitment and laws\nExample 1: The CS department at TUM has decided to cut costs for tutoring, leading to less tutors per students available in some subjects, which leads to subject like DWT to pair up two students to complete the take-home assignment to match the work to be done with the smaller number of tutors.\nExample 2: Twitter is now under the possession of Elon Musk, thus the old legal standards will most likely be replaced with ones that suit his wishes, for instance possible removal of speech censoring",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266388,
      "meta": {},
      "text": "Specially in Agile projects, changes are happening every time, it is continiously in development. One example of this can be Spotify, which is well know for using Agile methodologies, they are in always updating features of the platform and the product (the app) is never \"finish\". \n\nRequirements :\n- business : it is the business point of view. For example: \"We need an application that selects data (name, address and telephone number) from doctors around Munich from different sources and let you to filter by certain requirements\".\n- user : this is how the end user is going to interect with the application. For instance: \"When the user logs in the app, she/he should see a GUI that shows this...\"\n- specifications : this is the most technical part. For instance : \"The app should check only soruces from  sites that end with \".org\"\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266540,
      "meta": {},
      "text": "Change in Software development happens as Software development is a constantly changing and improving field. Companies noticed that the change happens too fast and that following a strict plan to develop software over years or months, especially in complex topics was not working as the world around the project still progressed and once the software was produced after the strict plan it was already outdated again. Its basically like in the real world where if you make a plan for the next 2 semesters on how you have to study and how long each day, then you will notice soon that the plan isn't working as in some semesters you have to work more or other things like a part-time job come into your life and you have to adapt.\n\nThere are three areas of change requirements, technology, and organisational. They are all linked, requirements change as stakeholders will have new requirements and these requirements will change within a project as the technology in the world changes and the ideas and beliefs of people. This also has an impact on how technology changes but is also influenced by the change of technology. Therefore organisations have to change as they have to adapt to the changes in requirements and technology so often big companies are slow in the progress of changing and are outdone by quick but small adapting startups. So these big companies have to be agile to adapt to the changes. Therefore the organizational setup in companies also constantly has to adapt to better suit the new ways of improved working.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263046,
      "meta": {},
      "text": "Fundamentally, software development can be seen as a human problem-solving activity. We, as humans, try to progress as a species/human beings and encounter problems along the way that we need to solve if we want to advance. \n\nHowever, we don't live in a static environment. Our environment is in are in a constant flux. \n\nThis has two important implications for software development: 1. Past software solutions, might get obsolete as their application context has changed so much that they become ineffective/inferior 2. Software that is currently in development, might need to be adjusted as the development context has changed. \n\nBoth implications highlight the need for constant adaptation of existing software solutions to a constantly changing environment, ongoing responsiveness of software in development to changes in its context or the need for the development of completely new software solutions.\n\nFor example, about 10-15 years ago the primary purpose of software used in cars was to control certain hardware systems (e.g. airbag, windshield wipers etc.). Nowadays, this has completely changed. Software is on its way to becoming of dominant importance within the car as it is used not only for hardware control, but also for entertainment, increasingly advanced driver assist features and possibly for self-driving software in the future. \n________________________\n\nAreas of requirements changes\n- \tRegulation changes (e.g. privacy requirements)\n- \tBusiness changes (e.g. discontinuation of services)\n- \tIncreased importance of software security (e.g. geopolitical tensions) \n\nTechnology changes\n-\tNew technological advancements (e.g. AI)\n-\tChanges in internal software systems (e.g. cloud computing)\n-\tChanges in interfacing software systems (e.g. software systems used in an industry)\n\nOrganizational changes\n-\tRestructuring (e.g. discontinuation of software systems)\n-\tWork environment (e.g. adaptation of certain software systems for remote access)\n-\tAcquisition by other company (e.g. integration of software systems)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263086,
      "meta": {},
      "text": "Change is something, that every company must get around with. Especially in software development change happens a lot. In complex software products not every aspect and problem is known before development. For example, an important database used for the product could change its requirements for connecting to it can change. The longer a product is in development the more could change during development. Therefore, adaption is so important during development.\nEvery software project has external factors which have their own requirements, often not changeable. If these change during development the developers must adapt their code to the changed requirements. An example could be that the security requirements change, and a 2-factor-authentication is needed instead of a single password for the login.\n\nAnother change during the development process are changes in technology. Many software projects use code not written by themselves, like Open-Source software. This software could get updates and new included technologies. This could make parts of your own code useless or make changes in the already written code needed.\n\nThe last changes a software project could undergo are organizational. Since most of the software products are not developed by a single person a good teamwork is essential for good product. But the longer a development process takes the more could change. For example, a person could get ill for a long time, and a new developer joins the team. \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263839,
      "meta": {},
      "text": "Change happens because of several aspects. For example: changing or new laws or new/improved technology on the market. As explained in the lecture, Nokia was once on top of the mobile phone industry but new technology - aka (apple) smartphones - changed the way of using a phone completely.\n\nRequirement changes: When working on a project, the client might tell you about changes to the original plan that he wants to have implemented, after the projects has already started. That could be an additional/improved or even removes feature. For example: instead of a fingerprint scan the client might want a face-scan implemented.\n\nTechnology changes: For example a new batterie that lasts very long could be implemented instead of the battery originally planned. This could lead to changes in the software development.\n\nOrganizational changes: Change in team members working on a project due to sickness or something else might change the plan for the software development phase.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264182,
      "meta": {},
      "text": "Change in software development in inherent and a result of software development being a creative process that seeks to solve problems rather than a mere sequential process that needs to be executed. And example of such a change would be the changing market conditions that inform which software products are developed, such as the rise of an unforeseen new technology that makes current products either redundant or less competitive. A concrete example of that (as mentioned in the lecture) was the rise of smartphones, though a similar example is the rise of digital photography that made older technologies, and the companies such as Kodak or the software products that were built for them, redundant.\n\nRequirements changes are a result of the changing needs of consumers. Consumers may constantly need faster, cheaper or more efficient products, which then informs the work done be software developers. An example is for instance the rise of online shopping an delivery-based shopping apps, which were born out of the requirement of more convenient shopping being favored by consumers.\n\nTechnology changes are a result of leaps in research in the technology industry making better products possible in the market. An example of that would include GPS technology which enabled location-based services such as Google Maps, Uber and so on which would not have been possible had there not been technological advancement.\n\nOrganizational changes are as a result of how teams and companies are organized or are structured. The most notably example is the rise of remote work, a profound organizational change recently, which has allowed companies and products such as Zoom to break through with products that solve the problem of work connectivity with its products.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264470,
      "meta": {},
      "text": "Throughout the development lifecycle, modifications are unavoidable, and they occur for a variety of reasons. Some of the reasons are technical, while others are procedural, financial and/or organizational in nature. Let's have a deep look into each of them.\n\nIncomplete requirements or their changes.\nIt is possible that during development process some requirements can be changed, in order to add some new features and functionalities, however, when these changes occur too frequently, it results in exceeding allocated time and costs. Moreover, often such product is not successful because of low quality because every functionality should be tested and for this we need adequate time and costs.\n\nOragnizational changes.\nDuring the process, the structure of organization can change. For example, the number of designers or programmers can reduce due to some reasons. So, a team will need more time to manage.\n\nTechnology changes.\nTechnology plays an important role in software development. During development cycle a variety of technology is used and sometimes issues and bugs  can occur, which are really hard to fix in short time and can be expensive. This may lead to modifications in developmeny.\n\n\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266005,
      "meta": {},
      "text": "Changes happen because the requirements may change or developers didn't take into account all of them. For example, new game is published, the developers haven't noticed some errors, bugs. After a while, reviews are appearing or the developers have already noticed the problems, so now they should make the game better, without this problems. Then we can see that there is an upgrade for our new game.\nOrganizational changes: 1) Developers want to present a new issue, technology. At first, they should plan how to convey a main idea(why do we do that action) to people, name all benefits and make the new technology sound great. 2) Hiring a new employee. There is a change in a team because the new employee will fill in skills gaps, so organization of the team's work will change. 3) Promotions. When one appears then the organizational structure have to be changed.\nTechnology changes: 1) New product(game, software etc.) is created. That is called invention. 2) The invented product is being used for the first time. That is called innovation. 3) The product becomes popular and the speed at which it spreads is called diffusion.\nRequirements changes: 1) New software is developing and customer says to change an interface(but once developing has started, there should be no changes in requirements). 2) Developers' understanding of product was another, so they can change the requirements. 3) During developing the product, market demands have changed, so developers should adapt to them.\n\n ",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1261481,
      "meta": {},
      "text": "One key element of necessary changes in software development is that the technology changes quicker than the product. Companies have to be able to adapt to new technologies and new products of the competition. \n\nIn the Automotive sector, it is clearly visible how changes are occurring right in front of our eyes. Not only is the big shift to electric cars coming, but also self-driving cars. Companies have to react swiftly to meet the demands of their customers and to match their competition. Software is a big part of it, nowadays cars have a great amount of Software and it is changing constantly. For these changes lean development seems to be the key. \n\nRequirements changes can come from customers and internal or external forces. In the beginning, we have an idea of how software should behave, but over time these requirements can change and Software developers and Product Owners have to adapt.\n\nAlso technology changes, for example with the introduction of 5G now we have Software, that just wasn't possible before, for example, self-driving cars, which have to react to a great number of inputs in real-time. \n\nThe last change is organizational change. Developers, Managers, Product Owners, and Scrum Master, all of them change constantly. A team has to adapt to these kinds of changes as well. Sometimes there isn't even a warning. Maybe a coworker catches a bad illness and can't come to work anymore. Also, there is a constant flow of new people onboarding the team, which have to get trained as well. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261749,
      "meta": {},
      "text": "Working as a software developer, a person can face different changes.\nFirst example is from a daily life: the initial requirement for the software can be changed.  This happens when the customer who has required a specific operating system changes the idea of a project and adds or subtracts some functionality. Thus, the development team has to adjust their project according to the already altered requirement.\nConcrete: The drones should have not only be remote-controlled but also monitor the weather. \n\nSecondly, many other circumstances may occur that can neither be predicted nor calculated. A perfect example for it would be the pandemic situation. Depending on the kind of the software, that had been being elaborated in the time before the outbreak of the virus, the developers definitely had to undergo Organisational changes. Some projects might have been closed, some were paused, and some were vice versa newly created and organized.\n\nThirdly, a technology change may be necessary for more comfortable usability.  For instance, if an invention of any other technology happens, which our development team finds pretty handy and decides to switch to using the new technology, so can the current technology or platform in use be changed and the new one be implemented into the working on the project. Concrete: Years ago programmers used to use FORTRAN, but as new programming languages were invented such as Python, Java, etc, these started to be widely used instead as they were easier to use, or were more robust, or had some domain-specific functional advantages.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263362,
      "meta": {},
      "text": "Change is natural in any field of engineering as certain technologies start dominating or superior versions of products are made or laws that create the bounds in which you can make software.  For example, MySpace used to be the main social media used back in the 2000s but new competitors came like Facebook, WhatsApp, etc which offered better feature sets than MySpace as the industry changed and developed to be more advanced. requirements changes would, for example, be changed copyright laws and this would affect social media like YouTube or Instagram heavily and the companies would have to start making efforts to stop copyright infringement as is the case already for YouTube which has automated systems in place to detect copyright infringement, for example, the usage of published songs. A Technology change is a change in which the technology changes or rather develops into a better version of itself or a new technology comes that makes the previous obsolete. For example, Cassettes became obsolete when a new technology like CDs or DVDs came which could store much more data and wear a lot easier to use. An organizational change would be a change in the approach to developing software. For example, agile software development compared to organizational maturity, wherein organizational maturity you create a small repeatable process that can be refined or simplified to be done by many but in the case of the majority of software development it is quite empirical so agile software development makes more sense where you work on each step of development bit by bit simultaneously and is iterative.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263515,
      "meta": {},
      "text": "Software development consists of multiple tasks, sometimes in parallel. We might realise during one task that a piece of the model was not right. Therefore, the other tasks would have to readapt their work.\nEx: During the coding phase might realise that the model missed something, -> start over with modifications.\n\nIn the real world, it could also be that new technology is developed. This would require your software to implement it in order to stay competitive.\n\nRequirements changes: If the Product Owner decides to add another functionality, or remove one, the Scrum master would have to rearrange the work.\n\nTechnology changes: As stated in the above example, a company could not afford not to implement new technologies in their software if they want to stay competitive with the others.\n\nOrganizational changes: If a member of the team cannot continue the project, or if the budget gets shrunk during the development, the planning will have to be modified. This might prevent the team from implementing some functionalities.\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264282,
      "meta": {},
      "text": "Change happens in software development due to new technological advances, e.g. the rise of GPU hardware power. This led to the emergence of e.g. more powerful Deep Learning methods such as image processing.\n\nRequirement changes: can be described as unavoidable software development activity. This happens e.g. due to changes in user requirements, increased understanding of the stakeholders' needs or availability of new technologies. Example: Kodak, having to change its technological foundation of analogue photography.\n\nTechnology changes:\nThis means that through innovation or invention an increase of outputs/results is achieved.\nExample: Laptops are today much more power-efficient and capable compared to laptops from 20 years ago - achieved through both software innovations and hardware improvements (e.g. stronger batteries, better CPUs). \n\nOrganizational changes:\nOrganizational changes are changes typically of a bussiness altering one of its major components, such as its internal processes or team setup.\nExample: Siemens a few years ago split up into three independent companies (Energy, Healthineers ...). This led to teams being reorganized and corporate functions (e.g. HR) being changed.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264305,
      "meta": {},
      "text": "Veränderungen in der Software Entwicklung passieren ständig, da die Computerprogramme meist das Bindeglied zwischen vielen Bereichen des täglichen Lebens darstellt. Beispielsweise müssen die Programme den Regulierungen durch staatliche Gesetzte entsprechen, was man zum Beispiel gerade wieder in der EU sehen kann wo neue Richtlinien zur Bekämpfung von Hassrede im Internet verabschiedet wurden, die die Unternehmen stärker in die Pflicht nehmen. Nun müssen Lösungen entwickelt werden die diese Posts schnell und richtig zu finden und dann löschen ohne dabei die Meinungsfreiheit oder Redefreiheit der Menschen einzuschränken.\nDas gerade beschriebene Beispiel zeigt sehr gut, wie neue Anforderungen an ein Programm entstehen können und dabei neue Aufgaben für dessen Entwickler bedeuten. Neue Anforderungen an ein Programm können auch dadurch entsteht, dass durch neu gewonnene Popularität es viele neue User gibt, die die alte Version überlasten würden.\nAuch kann es zu neuen Entwicklungen in der Technologie kommen. Meist kommt jedes Jahr eine neue Smartphonegeneration raus mit neuen besseren Chips oder anderen Änderungen in der Hardware. Hier muss sicher gestellt werden, dass der Code trotzdem einwandfrei ohne irgendwelche Bugs läuft.\nEin anderer Bereich in dem es zu Veränderungen kommen kann die Einfluss auf den Code haben, wäre in der Organisation selbst die für die Codeentwicklung verantwortlich ist. Beispielsweise könnte einer Fakultät ein teil der Gelder gestrichen werden, wodurch die Hausaufgaben der Studenten nicht mehr manuell sondern durch automatisierte Test korrigiert werden müssen, die jetzt neue geschrieben werden müssen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265899,
      "meta": {},
      "text": "Während der Entwicklung von Software kann es zu verschiedenen Veränderungen kommen, da sich die Anforderungen an die Software ändern kann die zugrunde liegende Technologie sich verändert oder die Organisation des Projektes verändern. \n\nVeränderungen in den Anforderungen:\nDurch eine neue Gesetzeslage können sich die Anforderungen an die Sicherheit oder den Datenschutz einer Software verändern. Ist die Sicherheit oder der Datenschutz der bisher entwickelten Software nicht ausreichend hoch, um die neuen Gesetze zu erfüllen, muss die Software daran angepasst werden.\n\nTechnologische Veränderungen:\nDurch die ständige Verbesserung von Technologie, kann es dazu kommen, dass man die Software zu Beginn in einer aus heutigen Sicht veralteten Technik programmiert hat. Um nun auch die neueste Technik verwenden zu können, muss die Software verändert werden. Zudem kann es dazu kommen, dass sich erst während der Entwicklung herausstellt, dass bestimmte Techniken doch ungeeignet für das Projekt sind und man muss dies nachbessern.\n\nOrganisatorische Veränderungen:\nÄndert sich in einem Softwareentwicklungsteam die Organisation bzw. Struktur können Teilgebiete einer Anwendung zusammengeführt werden. Auch dies führt zu einer Veränderung in der Software.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1266002,
      "meta": {},
      "text": "The process of software development is agile in nature. Whether be it due to the change in nature of implementation, change in environment of the environment (of software development) or the last minute changes in requirement ordered by the clients/customers, software development process often undergoes changes.\n\n\n\nExamples for change in real world along with the three areas of changes: \n\n A school commissioned for development of an application for the students, with personalized profile for organizing grades and classes they were taking, along with publishing announcements in the app. When still in development, Covid start spreading and the school had to introduce online/remote classes, which was then ordered by the school to be integrated in the app as well. (Requirement changes)\nThen, foreseeing the complexities and make room for other changes that could be requested or for convenience future updates, developers thought they would be better off switching to JavaScript for the entirety of the project and decided to go with it(technology changes)\nWell, unfortunately the development team also caught Covid and the team reduced in number. The release of the App could be seen affected. The Manager hired other contractors, offered incentives to the employees who could work longer hours, and introduced other minor changes in administration to maintain the workflow since the release couldn't be delayed as it would mean further delay in student's classes. (Organizational changes)\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266304,
      "meta": {},
      "text": "In the aspect of software development, one should always anticipate the changes that might happen. They can come from a handful of reasons, one of which is the natural demand for improvement, which can comes from an external source such as the ever increasing expectation of the customers. These changes could lead to an enhancement to the efficiency on the overall performance of  the team, and the quality of their products. Sometimes a change in the legal system can also unexpectedly call for a revision in the process of developing a software. This may sometimes come very sudden and it's apparent that the software engineers should adapt quickly to such changes, because this is not something that one can foresee to prepare for it, and the slower you adapt, the more advantage you lost compared to other competitors on the market. An example for this kind of requirement change would be how software have adapted to the change in the laws of data protection throughout the decade. \n\nIn regards to the technology, one could imagine that it is necessary that the developers quickly accommodate with the current state of it, Comparing the operating system of a Nokia phone from 2006, for example, and the current smartphone, we could see how fast things have changed and for the same amount of work, if a new technology can give a result faster, or better than the old one, then it is to be implemented by a lot of brands and it is vitally that we software engineers follow the market to have an idea of the current state of the art technology to be prepared for such changes. \n\nLastly, it is naturally that within a company, major changes could happen, for instance in personnel, either for a financial or for efficiency reasons. This can also be a change in the managerial aspect of the firm, for example we have seen in the case of the successor for the position of Apple CEO, and sometimes major reshape in how the company functions could take place, for example a reshape in the culture of the company to suit the ideals of the new managers.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266424,
      "meta": {},
      "text": "Changes in software development may occur because of the following reasons:\n- everyday changes of technology;\n- legal changes (new laws and regulations);\n- market changes (new market competitors, new ideas or ways to handle, new customer requirements);\n- organizational changes;\n- other environment changes, which affect industry indirectly(social, politics, etc. changes). \n\nThe mentioned above reasons lead to requirements changes in software development.\nBecause of the GDPR companies had to minimize the amount of personal data they collect.\nThe production of first laptops and later first smartphones as an example of technology changes required more efficient programs with low memory and energy costs.\nFollowing conventions as a requirement is another example of requirements changes. The software development industry is booming: there are specialists from all around the world, a lot of international products. Without any sort of unification such active growth and productive work would be impossible. \nOrganizational changes is a part of this process. The convenience of scrum workflow contributed to its ubiquity but also questioned its effectiveness for big corporation. As a result a new workflow (Scaled Agile Framework) was developed.  \n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262094,
      "meta": {},
      "text": "Changes in software development happen due to changes in requirements of the customer for the product, changes in technologies used to build the product and changes in organization. If a customer wants additional functionality in his system like additonal online payment possibility for his vending machine (e.g. paypal), developers need to adapt it into the system during implementation (change in requirement).  If a framework used for the development of the system releases a new version, that directly impacts the current implementation, developers need to adapt it to the current version of the framework (change in technology). Last but not least, hiring another employee for the development team means also investing time until he/she is completely integrated to the development team (organizational change).",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263804,
      "meta": {},
      "text": "Changes in software development can happen because the requirements have been incomplete or poorly defined at the beginning of the project. A real world example can be, that the project owner misunderstood the needs of the customer, and the whole development team has to convert the software to another programming language. \n\nRequirement changes: Requirements are defined at the beginning of the project. However during the time of the development the needs of the customer can easily change. An example for that: The customer wants to change the usability of the software, so that the registration in the application should be able to be done in 3 steps instead of 5 steps. \n\nTechnology changes:  Nowadays the technology is improving fast, and there are new possibilities to develop a given software. For example: There is the game GTA 5 which was developed first for older xbox series, but with the time, there were new xbox series on the market. So the development team has to upgrade the game, to be able to play the game on newer editions as well. \n\nOrganizational changes: At the beginning of the project, there is a planed dead line and a given amount of people for that specific project. However it can happen, that during the development some people has to work on other projects so the project owner has to reorganise the team and reallocate the tasks to be able to finish on the given dead line.  \n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263848,
      "meta": {},
      "text": "Change happens in software development because of its empirical nature. Software development projects often experience drawbacks and difficulties which requires the developer team to adjust either the software solution or the requirement definition - change happens. Moreover, initial formulated requirements tend to turn out partly impossible from time to time. An example would be the development of a new Controlling tool - e.g. an extension of SAP S4HANA shaped to individual needs. This project is prone to change since it is dealing in a complex environment: system adaptions have to be checked, errors have to be corrected or requirements turn out infeasible. All these aspects would cause this exemplified software development project to change. \n\nRequirement change means that the initially intended and communicated outcome of a project could change. This could be e.g. because the costumer missed a requirement, a defect was identified, the costumer realized, he/she did not communicate his/her actual need correctly, legislation or the market changes.\n\nTechnology change means the adaption to a different technology than initially planned. Reasons could be e.g. feasibility of a better technology, know-how increase to understand more sophisticated technologies or misunderstandings.\n\nOrganizational change means change in staff, organizational structure or tasks. Examples could be the hiring of a new supervisor (with different goals/style of working) or the collaboration with other (software development) teams.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264214,
      "meta": {},
      "text": "Software Development is a long process. Everytime software is improved, it's changing. This can be adding more requirements or functionality every sprint or fixing a mistake in the testing phase. There reasons why are portraied below. \n\nChange in the real world happens on a daily basis but some are more insisive then others. One example is cooking and its aids eg. from cooking with open fire to ovens to electrical stoves or programmable ovens.\n\nRequirements are defined beforehand, so it's common that they change throughout the process. This could be a poorly definition in the development process or that the expectations of the customers changed. Eg. an application should work on the computer, but then the customer also asks for a phone extention or the developer notices throuout the sprint that something won't work as required.\n\nThere is a consistent improval of technologies and also new ones being invented. So if there is a long software development process, it's possible, that the problem itself and therefore also the requirements changed or that you want to include the latest technology in the project that wasn't there or ready when the project was defined. Eg. a company waited until their code worked with the improved technology.\n\nOrganizational change can occur whenever the team strucure is changing eg. new employees or roles. Moreover the company itself can change eg. the ceo, merging with another company or reorganizing their departements which impacts the project. This can also be found at university when a new professor or ÜL is preparing the course.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264266,
      "meta": {},
      "text": "Software development is a highly agile working environment. Therefore, a lot of \"change\" happens, not only because of ever changing software requirements (new operating systems, new apps or entirely new IT - strategies of a company) but also due to changes in hardware! We are amid a technological and digital revolution. Thus, no matter how fast companies react to hardware / software / security changes, they almost can't be quick enough. It is simply not a valid choice to decide to build a software project just to let it rot for decades. Highly likely, that will not work out.\n\nFor example, BMW uses lots and lots of intelligent chips in their cars for countless applications like measuring temperatures, controlling pressures, etc. They buy these chips from other companies and these companies don't stand still either. With constant development and research, new chips come to market and BMW has to adopt the software in order for it to still work. That's just one of the numerous examples in our interconnected software-driven world.\n\nRequirement changes: When the requirement for a digital product changes, e.g. BMW needs a smaller temperature sensor: The IT-company providing the sensors + chips needs to adapt and react to the new requirement.\n\nTechnology changes: Hardware changes faster than ever. Just compare a computer room of the 70s with a modern smartphone, which is much much faster and much much smaller at the same time. Companies have to react to technological advances to remain market-leaders.\n\nOrganizational changes: A company - e.g. BMW - could find it necessary to rebuild it's software development from the ground up because the results are not productive enough to stay competitive. That's when organizational changes would change the entire way of approaching a software project for example. (Daily meetings, e.g. SCRUM, etc.)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264812,
      "meta": {},
      "text": "Changes in software development are happening when without them it is impossible to fulfill all the requirements set. In the real world electricity predominantly from thermal power plants may violate CO2 emission limits, that may be unacceptable and serve changes in favor of alternative energy sources.\nRequirements changes can lead to a solution to the problem. For example, it is possible to reduce CO2 emissing limits, so that the requirements will be relaxed.\nAnother direction of changes could be technology changes, invention and innovation of technologies and processes. These innovations can facilitate the transition to alternative energy sources and reduce financial and time costs.\nOrganizational changes may affect company's or team's structure, strategy or policies to redirect their resourses and use them better to solve the problem. For example, a project for the transition to alternative energy sources can involve foreign specialists, increasing their funding; select several different teams that perform their subtasks, restructuring some of them etc.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264892,
      "meta": {},
      "text": "Ein Wandel in der Softwareentwicklung entsteht durch eine Veränderung in einem anderen Bereich, mit dem die Softwareentwicklung in Verbindung steht. Ein Grund für diesen Wandel können zum Beispiel neue Studien sein, die das Verhalten der Benutzer untersucht haben. Wegen den Ergebnissen der Studie muss nun die Oberfläche der Anwendung überarbeitet werden, damit sich die Benutzer wohler fühlen und mehr Zeit in der Anwendung verbringen.\n\nWeitere Bereiche sind zum Beispiel die Anforderung der Anwendung, Technologie und Organisation.\n\nWenn sich die Anforderungen der Anwendung ändern, müssen sich die Entwickler an die neuen Anforderungen richten und die alten überarbeiten.\nSo kann der Auftraggeber zum Beispiel neue Ideen haben, die integriert werden müssen oder aber es gelten neue Gesetze zum speichern der Daten, weshalb die Datenbanken der Anwendung überarbeitet werden müssen.\n\nZudem können neue Technologien, wie zum Beispiel ein neues Framework, auf dem Markt erscheinen, die die Entwicklung schneller oder sicherer machen. So müssen die Entwickler das neue Framework erlernen und in ihrer Anwendung umsetzen. Aber es können auch neue Betriebssysteme erscheinen mit denen die aktuelle Programmiersprache nicht kompatibel ist, weshalb auf eine andere Sprache umgestiegen werden muss.\n\nAuch Veränderungen in der Organisation können Veränderungen in der Softwareentwicklung bewirken. So kann zum Beispiel ein kürzen des Budget sich auf die Testphase der Anwendung auswirken oder die Aufgabenverteilung ändern. Auch ein Wechsel des Managements kann die Entwicklung beeinflussen, weil die Abläufe neu koordiniert werden müssen.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265285,
      "meta": {},
      "text": "Often, change happens in order to stay competitive. This includes innovations, competition and strategy. But it can also happen due to changes in the environment. Companies, for example, always need to adapt to their customers. If their needs change, the product has to change. \nAn example for constant software development change is probably any operating system (e.g. IOS, Windows). New hardware is invented, and new third party apps enter the market. Therefore, the developers need to adapt and integrate new features in order to serve the customer's new needs. For example: Since Face-ID is technically possible, software developers need to improve their programs in order to achieve the best result in combination with the new hardware.\nRequirements change happens when the needs of, for example, the customer change. Suppose you were working on a software that should track how many students show up to the lecture. Now you are being told that this information is no longer relevant, but rather how many of them actually listen. Then you would need to adapt the software accordingly.\nTechnology change most often relates to a new innovation found during R&D that increases performance. Suppose a new, more efficient hardware component was invented. But its way of operating differs from the former one. Then developers need to adjust their software and can not simply stick to the current version.\nLast but not the least, organizational change describes a change of an internal structure. For example, team members leaving and joining the project. Now the task is to reallocate work in order to stay productive.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265481,
      "meta": {},
      "text": "Software development is a constantly changing process due to external conditions. The product owner may have additional wishes that were not defined at the beginning or new laws may influence the development process. Problems can also occur that were not foreseeable at the beginning of the development process. A reallive example would be the technological development in the pandemic period. There is now facial recognition with the mask on the cell phone or there are online vaccination certificates with new softwares. So the digitization of our health care system is a real example.\nFor Example: Organizational Change: Twitter was bought by Tesla owner Elon Musk. The old processes of Twitter must be adapted and also the business guidelines, laws would have to be adapted. This means that there will be organizational changes.\nRequirements Change:With so many signing up for vaccination, the vaccination center would need to hire several people from their start and set up rooms to accommodate the new needs.\nTechnology change: With the development of 5G and the first use of 5G prompted other communications companies to launch an update to meet even new 5G technology.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266315,
      "meta": {},
      "text": "The simplest answer to why software development changes occur is that the world changes as well, which means that everything has to constantly adapt in order to retain its use, importance and meaning. In the end of the 20th century even if software was already prevalent in the world, the entry threshold in order to become a coder was much higher. Now, the knowledge about salaries and working conditions in tech is widely available, which leads to a higher popularity of coding bootcamps or widely available resources.\nThere are many areas in which change occurs: requirements changes, technology changes, organizational changes. The first expression may be understood as “requirements to work with software”, which I’ve explained with the use of an example or “requirements of a software”. Now, software is way more advanced and complicated than it was decades ago. Earliest algorithms, which predate the existence of a computer in a form that we know now were really simple (for example algorithms created by Ada Lovelace back in the 19th century), but now they have to be way more complicated in order to keep up with the changing world. The technology changes means that there are always new programming languages or IDEs being created. In 2005 a framework called “Ruby on Rails” was created with a purpose of helping with the creation of databases or webpages. But it doesn’t mean that beforehand nobody created either of them! Other technologies, which may have been less effective were used, but they suited their purposes poorer. The last type of change is the organizational change. As time passed by we were able to develop more rigid structures of software development teams, such as scrum, which determines the size, workload and workflow or the team in order to optimize the work and create new software more effectively.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266348,
      "meta": {},
      "text": "Change in Software Development happens because there is innovation in hardware and software. For instance, the Moore's Law says that the number of transistors doubles every few years, and that results in higher performing chips with more capabilities for complex software. As a result, software development is changing due to higher possibilities in hardware. Of course, there is also change that comes directly from the software part, like faster programming languages or improved ai algorithms. As a general example for change in software development, I think about smartphones, that were ten years ago only able to share messages and to call. Now, they are like a high performing computer, which is able to calculate complex calculations.\n\nThe technology changes part is already explained through the Moore's law.  For me personally, requirements changes are changes that emerge from competition - one company has the fastest program, so its competitions want to have an even faster one. Last but not least, organizational changes come from keep getting better methods of, for example agile software development methods, that result in higher productivity.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266469,
      "meta": {},
      "text": "Changes in software development happen as a result of the changes in problems to solve as well as newly emerging challenges. One example of change in the real world is the increase in popularity and demand for open-source software. As the problems in the modern world become increasingly complex, a need for more collaboration has developed. Open-source software tackles this issue by allowing the masses to be able to utilize these tools and come up with new solutions.\n\nRequirements changes indicate a change in user needs and requirements. This can very often happen during the software development process, forcing developers to adapt and change their approach. For example, a company that needs an e-commerce solution for their customers can inform the developers that their customers’ needs have changed, and require the software to b developed to be shaped in a different way.\n\nTechnology changes indicate a change in used tools and techniques as a result of new technologies. One example could be the emergence of cloud computing, which allows developers to use powerful tools from their devices.\n\nOrganiational changes indicate a change in the organization of the software development process. As mentioned, software developers need to deal with complexity of problems and changes in challenges. As a result, for example, agile software development practices have emerged in recent years, which allow developers to tackle these problems through their iterative and empirical nature.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262223,
      "meta": {},
      "text": "Change in an empirical-controlled software development process is common because it cannot be detailedly planned. Requirements change is one of the most common reasons, it is nearly impossible for the development team and customer to fully discuss all trivial detail before starting designing and coding, so developers have to make respective modifications when the requirement sheet changes. Additionally, organizational change and technology change happens as well. For example, I used to do an internship at a company, and my team was responsible to develop a lip-sync machine learning model for live streams in 3 months. However, after days of work, my team found it is impossible to achieve in a year, so we talked to the manager and finally we agreed on developing an offline model first and testing its performance. That is about how change happens in the real world.\n\nRequirement change: adding new requirements or modifying the existing design. For example, the customer may request to add a night mode besides the original appearance.\n\nOrganization change: quantity change in team members, management techniques change, etc. For example, if the team recruits more product managers, then more details of the software can be carefully discussed.\n\nTechnology change: the development team has to switch to another technique. For example, if the current framework does not work on the next version of Android or iOS, therefore, the team has to use a more adaptable framework.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263689,
      "meta": {},
      "text": "Changes in software engineering can happen due unforseen problems, ignored requirements, immature technology and the need for changes because a program doesn't work as it should. For example if you build a house and the cement isn't as stable as you excepted it to be, you have to adapt to the problem and change the way you build the house.\n\nRequirements changes:\nRequirements change, when the customer wants to add or remove some features.\nFor example if the customer wants some additional safety, for his website, the requirement of the project change.\n\nTechnology changes:\nTechnology changes appear, when there is a new generation of technolgy. For example the change from mobilephones to smartphones. Some companies like Nokia didn't addapt to the new technology and went nearly bankrupt.\n\nOrganizational changes:\nOragnizational changes in software engineering can happen when there are changes in the time, the money and the quality of a project.\nFor example when thetime for a project is shortened and the developers have to find a solution for a problem in a different time span, the team may reduce the quality of the project. So the organization changes.\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264860,
      "meta": {},
      "text": "Es gibt verschiedene Gründe für Veränderungen im Prozess der Softwareentwicklung. Zum einen braucht Softwareentwicklung Zeit und in dieser Zeit können sich die Anforderungen für das zu entwickelnde Programm ändern und dann ist es wichtig sich an die neuen Anforderungen anpassen zu können. Zum anderen können mitten im Entwicklungsprozess neue ungeahnte Probleme auftreten und um diese zu lösen brauch es Veränderung im Entwicklungsprozess. Ein Beispiel für Veränderung in der realen Welt der Softwareentwicklung ist der Datenschutz, der mittlerweile in Deutschland auch gesetzlich vorgeschrieben ist und somit zum Zeitpunkt seiner Einführung eine große Veränderung in der Entwicklung jeglicher Software dargestellt hat.\nInsgesamt gibt es drei Bereiche von Veränderungen in der Softwareentwicklung: Anforderungsänderungen, Technologieänderungen und organisatorische Veränderungen. Anforderungsänderung sind dabei, wie schon zu Beginn genannt, Veränderungen in dem was ein Programm können soll, also zum Beispiel wenn der Kunde oder Auftraggeber ein zusätzliches Feature wünscht. Technologieänderungen andererseits sind wenn sich etwas an der Technologie oder IT-Branche generell ändert, wenn sich zum Beispiel die Entwicklungsumgebung in der entwickelt wird plötzlich verändert, weil eine geeignetere Alternative auf den Markt gekommen ist. Zuletzt gibt es noch die organisatorischen Veränderungen, welche die Struktur des Entwicklungsprozesses betreffen, also zum Beispiel wenn plötzlich der zeitliche Rahmen verkürzt wird oder die Anzahl der Mitarbeiter an diesem Projekt sich verändert.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264998,
      "meta": {},
      "text": "Softwareprojekte und -systeme sind komplex. Um nützlich und aktuell zu bleiben, müssen sie die Bedürfnisse der Benutzer und der Umwelt erfüllen .Der \"Change\" in der Softwareentwicklung kann also viele Gründe haben.\n\nWerfen wir einen Blick darauf, ob der Kunde eine wichtige Feature/Requirement vergessen hat, die er in seinem Produkt benötigt und die er jetzt haben möchte. Der Product Owner hat nun eine neue Requirement, die er erfüllen muss. Er muss sich alle Anforderungen ansehen und jeden einzelnen neu priorisieren und sortieren\n\nMit der neuen Requirement stellt sich die Frage, ob mit der aktuell verwendeten Technologie alles möglich ist oder ob Sie eine neue API benötigen, die Sie finden und anpassen müssen.\n\nUnd die letzte Organisationsänderung. Aufgrund der neuen Requirement kann es vorkommen, dass das Veröffentlichungsdatum des Programms verschoben wird oder wenn Sie dies nicht möchten, müssen Sie entweder einen neuen Entwickler einstellen, der für das neue Feature verantwortlich ist, oder Sie müssen ein anderes Feature oder Bugfix kürzen oder fallen lassen usw.\n\nNatürlich gibt es viele andere Gründe, die Änderungen in der Softwareentwicklung nach sich ziehen können, aber alle Änderungen hängen praktisch voneinander ab.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1266385,
      "meta": {},
      "text": "All changes are inevitable. There will always be need of change, mainly because people and their need and views change.\n\nThe reason we have requirement changes is that at the beginning of the project, the actual end product isn't precisely known. There will always be slight changes throughout the project. Also, a possible reason is the communication between people: Any form of communication involves a sender and a receiver, and the end result is decided only by the receiver. An example will be that a customer wants to change something in the end product.\n\nOrganizational changes are the changes that have the most impact on the organization. They can change the whole organization and everything in it. One of the scenarios is when the main mission changes, the organization of the company needs to evolve as well. Companies often launch major changes because there's a serious new challenge, the business environment has shifted, or a major internal problem, such as systemic harassment, has developed. An organizational change example may be completely rebuilding the website.\n\nA possible reason for a technology change is that year after year there are better and better technologies. After a certain time, there will always be a new technology that will suit one's needs much better. There are a lot of possible explanations why a technology change may be needed: for faster or cheaper production times, for easier control over the development, etc. An example for this is switching from plain JavaScript to a framework.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266449,
      "meta": {},
      "text": "Because as time changes, so do the needs of people who want to pursue a better life and technology. In order to keep meeting people's ever-changing needs, advances in science and technology are needed. Therefore, changes will happen in software development.\n \nFor example, cell phones.\n\nrequirements changes：From the beginning, we can only make phone calls and send text messages, but now we can make video, shopping, payment, listening to music,  etc.\n\ntechnology changes：From the very beginning of ordinary cell phones to smart phones. Smartphones have many technologies that previous phones did not have. The cell phone is also constantly developing its technology to adapt to the needs of people.\n\norganizational changes：The phone started with a single structural function, and now we have, for example\nUser interface services, business logic services, data integration services, data storage services and other fine features.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266523,
      "meta": {},
      "text": "In software development, problems need to be solved in a complex and changing context and environment. Change in software engineering mostly happens because the requirements change, which can have various reasons, e.g. a poorly set requirement development process in the first place, resulting in costly time-consuming adaptions further in the software development cycle. In the real world, when a new software product is being developed, there could be for example miscommunication between the software developer and the \"client\" regarding the scope, goal or process of the product.\n\nRequirement changes refer to the fact that, as written above, a software engineering process needs to be adapted to changes as the requirements have been poorly set, ignored, forgotten or misunderstood in the first place. \n\nTechnology changes refer to the circumstance that the software engineering industry is fastly changing: new technologies are being developed, new methods are being used and new innovations, like AI or ML, emerge. All these technology changes influence the way a software is being developed and software engineers need to adapt and understand the new possibilities of emerging technologies quickly. \n\nOrganizational changes refer to the fact that the development of a software is often dependent on corporate politics and stakeholders' interests and priorities, influencing the software itself. When for example a stakeholder in a higher position prioritizes one feature above another one, although all of the software engineering experts would prefer another feature, most likely the stakeholder in the higher position and with more influence can change the whole development process.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261311,
      "meta": {},
      "text": "Change in software development happens because the word is unpredictable and in a marked where every day something new comes out the developer team should ask themselves if they need to change their product.  \n\nFor example in the automotive industry they publish over the top concepts they can not for fill and go through many design process to make it to a consumer product. \n\nRequirements changes:\nCustomer maybe want additional features implemented or is not happy with the current ones.\n\nTechnology changes:\nBack when Apple released the first Smartphone the other manufacturers needed to adapt to the new technology because it was a disruptive technology and meant they need to adapt and if not they are going out of market like Blackberry did.\n\nOrganizational changes:\nAfter the release of Apples Smartphone, Nokia later realize that they are not profitable anymore and needed to shift their organization to a new module. They bought Siemens and went into the network market and now sell network equipment.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1261455,
      "meta": {},
      "text": "Die Aussage von McConell, welcher in den 90ern stabile Anforderungen als den heiligen Gral der Softwareentwicklung bezeichnete (McConnell, 1993) würde wohl heutzutage die wenigsten Software Entwickler noch bestätigen. Vielmehr befinden sich die Anforderungen an ein Softwareprojekt schon zu dessen Entwicklung im Wandel. Dabei wurde in den letzten beiden Jahrzenten dieser ständige Wandel eher als früher akzeptiert und in den Prozess der Softwareentwicklung integriert, was an dem nun zur Agilen-Softwareentwicklung verändertem Dogma erkennbar ist. Heutzutage werden Softwareprojekte zudem immer größer, sodass zu Beginn eines Projektes es meist unmöglich ist bereits alle möglichen Anforderungen zu erkkennen und präzise zu definieren. Beispielhaft kann hierbei die Entwicklung eines triple-a Spiels wie \"the Witcher 3\" genannt werden, welche natürlich ganz andere Anforderungen an die Software stellt als das Spiel Space-invaders aus dem Jahre 1978. Somit ist der menschliche Fortschritt an sich Grundlage für immer größere Anforderungen an alle Arten von Software. Dabei sollen diese effizienter, schneller, und komplexer werden.\nBeispielhaft für den bereich der technologischen Veränderung kann die automatische Code generation durch künstliche Intelligenz wie im Beispiel von Github Copilot genannt werden. Dabei werden manche ursprünglich von menschlichen entwicklern besetzte Rollen zum Zwecke des Effizienzgewinns nun von Computern erfüllt. \nAuch durch die Corona Krise bestärkt kommt es mehr zu nicht mehr an einem Ort zusammenarbeitenden Gruppen, was eine Veränderung in der Organization der Teamarbeit darstellt. Somit müssen neue Methoden entwickelt werden um das effiziente und zielstrebige Arbeiten am Projekt zu gewährleisten. Exemplarisch können dabei Team-management Sofwares und Teambuilding-Maßnahmen genannt werden, welche das Gruppengefühl stärken.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262060,
      "meta": {},
      "text": "Veränderungen passieren überall. Dadurch, dass sich die Menschen, die Technik und Industrie stetig weiterentwickeln, ist eine Veränderung in der Softwareentwicklung unvermeidbar. Manchmal kommt es vor, dass die Umsetzung eines Plan nicht so abläuft, wie man sich das vorgestellt hat oder einem viel bessere, effizientere Ideen in den Sinn kommen z.B. man sitzt viel länger an einem Problem, als eingeplant oder man findet einen Fehler erst später, der aber das gesamte Projekt beeinflusst. \n\nRequirement Changes: Darunter versteht man die Veränderung der Anforderungen auf ein Produkt. Nimmt man sich ein Beispiel:\nWir wollen ein Programm entwickeln, das jede Währung in Euro umwandeln kann. Angenommen es hat sich irgendwo eine neue Nation gebildet mit einer brandneuen Währung, die uns aber bis jetzt noch unbekannt war. So haben sich die Anforderungen geändert und die Entwickler müssen das Programm anpassen. \n\nTechnology Changes: Wie bereits erwähnt, beeinflusst die Technologie die Softwareentwicklung. Früher waren Menschen mit Handys lediglich in der Lage einfache Telefonate durchzuführen oder SMS zu versenden. Heutzutage scheint das Handy fast alles machen zu können. Man kann darauf auf das Internet zugreifen, Spiele spielen, Textdokumente schreiben, Videos schauen und vieles mehr. So mussten die Entwickler sich anpassen und fortgeschrittenere Technologien entwickeln, um mit ihren Konkurrenten mithalten zu können.\n\nOrganizational Changes: Darunter versteht man unter anderem eine Veränderung im Management. Diese werden intern oder extern verursacht. Ein Beispiel wäre der Klimawandel und die Restriktionen z.B. Energieverbrauch minimieren, die daraus folgen können. Auch das Consumer-Producer-Verhalten wäre ein Beispiel. Organizational Changes bedeuten also eine Veränderung der Development-Strategie.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262179,
      "meta": {},
      "text": "Change happens in Software development because of the continuous change of circumstances around the world and the change  of the new Technologies that are developed and improved each day.\nAs an example, the new privacy protection laws that made the software development team add some features such as accessing the user's data and adding option for the user to download all his data within specific amount of time. Or another example is the development of the programming languages, as the introduction of the Java 8 which made many things possible for the developer and changed many programming method.\n\nThe requirement change : is the change of the demands of the client and how the software should be. For example, if we are developing a game, the client want sometimes to change some features of the game such as the colors of the components,  some rules of the game, ...\n\nThe technology changes : is the change in the technology used to develop the software. For example, if a programming language is not supported anymore we need to find another programming language that meets our needs to work with it. Or if some new features are introduced to the programming language that change the way we are using it, then we need to adopt to the new changes.\n\nThe organizational changes : is the changes in the rules and structure of the work. For example, when the lawmakers have approved the privacy protection law,  the way software are developed and how data are stored is changed.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262251,
      "meta": {},
      "text": "Change happens in the domain of software development because it is an inherently chaotic process. There is no way to plan everything down to the last detail. It is just impossible to foresee every problem without doing the work. This means the developer/team has to continuously adopt to the change in problems and find ways to overcome them.\nAn example for change in the real world is the explosive adoption of smartphones after the introduction of the iPhone. Suddenly there was a whole new domain of devices which needed software.\n\nRequirement change: When the the requirements the software product is supposed to fulfil change e.g. an app that was made for phones needs to run on tablets as a survey found out many target users are on tablets.\n\nTechnology changes: A new technology is introduced/becomes available e.g. introduction of 5G opening up new possibility for mobile development.\n\nOrganisational change: There is a change in the organisation developing the software e.g. a new CEO which wants to take the product in a different direction.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1262308,
      "meta": {},
      "text": "Change in Software development happens due to the constant change of the working enviroment. Its similar to any game wich focuses on the interaction with another. Because if he does a mistake or pressures you the enviroment changes and with it the possibly best strategy. Therefore you need to adapt and change your aproach to guarantee the best outcome.\n\nThese changes vaguely categorised in three groups. Requirement changes, wich change the overall requirements of a problem. For example when your customer decides they want to shift their focus onto another branch of their business. Technological changes, which happen due to new breakthroughs in technoligie. A good example is the upcoming development of electric cars, whose software clearly deviates from the conventional fuel powered cars.\nOrganizational changes, which happen due to a change in the interal organization. For example if one the team members have to leave due to any reason and you cant find a matching substitute. You and your colleagues need to change your asinged roles to fill the gaps.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262940,
      "meta": {},
      "text": "Changes happen in software development because of various reasons. A fault in the implementatin of the algorithm is one of those. Other than this, communication problems between the teams can also cause chaos in the development process leading to the need of change. \nIf there is a bug in development of an algorithm of a cloud storage company which was discovered after beta release, it would be important to work on it before there are any data leaks. \n\nRequirement change is the change in the requirements that were set by the client. For example a client could ask to change the product if they find out that they have a legal issue with their product.\n\nTechnological change is the change of changing the current technolgy for th improvement of the current one. One example of it is the innovation of iPod, which was an innovational change to the existing MP3 players which was made possible by the technological change. \n\nOrganisational change is the change in the structure of an oganisation and thier daily operations to keep up with the changing needs of the organisation. For example the pandemic forced major organisational changes in most of companies by moving the teams to home offices and making a structure that helped the companies to survive the pandemic without the physical presence of the employees in the offices. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263275,
      "meta": {},
      "text": "Change in software development happens due to external impacts that require adaptions to the original roadmap. A real-life example would be a customer that changes his mind about software requirements during the development process.\nRequirement changes can not only be caused by customers. The requirements of a software product can also change because of new laws which result in new regulatory requirements. \nTechnology changes can be related to new technologies on the market. During the development process of software, which can take many years, competitors might enter the market with better technologies, so you have to overthink your own software project to maintain your software up to date. There might also be other scenarios, for example new security issues concerning existing protocols which have already been implement in your software.\nOrganizational changes cover all changes that concern the planning of a software project. An example are human resources: If a developer leaves the company, you must reconsider your whole project roadmap.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263445,
      "meta": {},
      "text": "Technology is constantly evolving with each passing day. Everyday, more and more people are collabrating to  create new software and hardware. New ideas are coming to fruitition. That's the reason why change happens. As some important people said: \" Only thing that doesnt change is change itself. \" . Facebook is changing in the real world with each update.\nTechnology changes are change in demand, thirst for new software and future.\nOrganization change is methodical collobration between developers through using new methods such as scrum.\n\nRequirement changes is something i don't understand. Maybe keeping pace with wars, natural disasters, world-shattering meteorites. We need to defend the eart if such things happend and change our policies accordingly.\n\nPS: My words and \"kurz und präzise\".",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263461,
      "meta": {},
      "text": "There are numerous factors that necessitate change. \nIf not controlled, stakeholder expectations alter over time due to technological changes, new and changing stakeholders, or changing wants and needs.\nThroughout the project, requirements may change, for example, if the customer changes their mind or if a need proves to be impractical. \nFor example, during the development of the Berlin Airport, the need for a major aircraft handling facility arose, resulting in increased expenses and resources. \nNew releases and upgrades are examples of how technology evolves. \nFor instance, the requirements of mobile devices, such as smartphones, which range from keyboards to touchscreens. \nChanges in the organization, such as laws and recruiting \nFor example, when a firm goes public, new legal requirements and processes must be implemented or old ones must be changed.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263977,
      "meta": {},
      "text": "Change occurs because during develpoment of software there can always be new laws, competitors and also technologies which demand change in order for a project to succeed, given the new environment. A new law could mean that a project is not allowed to launch, for example a change in user privacy regulation would cause a lot of trouble for an upcoming social network. A new competitor is another aspect which can cause change, for example a new feature which is getting very popular within a short timeframe like tiktok forced instagram to implement the \"reels\" feature, which some call a knockoff. A new technology like apples m1 SoC forced many developers to come up with optimized version of their software or else get left behind by competitors. \n\nrequirements changes:\nAn example would be a new car wihch should now also be able to drive autonomous. This new requirement would cause a lot of change in almost all stages of development.\n\ntechnology changes:\nAn example is the growing demand for electric vehicles in the last few years. This technology is different from the ICE and causes changes in many areas, from production to software. 30-45 minute charging breaks did not exist before and force changes in the infotainment softwares of almost all manufactureres except tesla. \n\norganizational changes:\nAn example would be switching from a defined process to an empircal process (like Scrum) to control software development. This would mean a complete restart of how a development team works.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264717,
      "meta": {},
      "text": "Beim Entwickeln von Software kommt es stets zu Veränderungen, da sowohl externe als auch interne Einflüsse auf das Projekt einwirken. Nachdem der erste Entwurf entwickelt wurde und die ersten Tests durchgeführt werden, kommen etwaige Fallstricke zum Vorschein. Ebenfalls kommt es bei Projektpartnern beim ersten Prototypen oftmals zu Veränderungen, da dieser seine Wünsche nicht klar genug kommuniziert hat.\n\nBeispiel: Angenommen man arbeitet als Software-EntwicklerIn für eine Firma, welche eine Hotelsoftware entwickelt. Nun sollte für einen externen Kunden der Wellness-Bereich digitalisiert werden. Nach dem Festlegen der Ziele wird ein erster Prototyp programmiert und sich erneut Feedback eingeholt. Hier zeigt sich, dass die Anforderungen des Kunden doch von den ursprünglichen Zielen abweicht. Da frühzeitig Feedback eingeholt wird, können die notwendigen Veränderungen schnell implementiert werden und der Kunde zufriedengestellt werden.\n\n\nBei Änderungen der Anforderungen muss die Software dahingehend angepasst werden, dass diese erneut die Ziele und Eigenschaften erfüllen. Hierbei kann das oben genannte Beispiel erneut herangezogen werden. Durch das frühe Feedback des Kunden konnte noch zeitnahe die Fehlentwicklungen abgewandt werden und sich schnell auf das Notwendige konzentriert werden. Da der Kunde schon frühzeitig in den Entwicklungsprozess eingebunden war, können die Auswirkungen dieser Veränderungen schnell abgewandelt werden.\n\nUnter Technologie-Veränderungen versteht man beispielsweise, falls die Software mit einer anderen Programmiersprache / Version weiterentwickelt werden sollte. Dies kann dadurch benötigt werden, falls so Schnittstellen zu den Partnern kostengünstiger und effizienter entwickelt werden können. Auch könnte eine neue Version der Programmiersprache mehrere Features einbringen, welche die Anwendung nochmal von der Konkurrenz abheben könnte. \n\nFalls die Organisation / das Team, welche die Software entwickelt, umgruppiert wird, kommt es zu  Organisatorischen Veränderungen. Diese Art verändern zwar nicht unmittelbar die Anwendungen, jedoch kann sich durch den geänderten Informationsfluss oder Führungsstil zu Problemen kommen. Beispielsweise könnte ein Konzern die Software-Abteilung aufgrund des Software-Booms neu strukturieren und so effizienter gestalten. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265627,
      "meta": {},
      "text": "Veränderungen in Software Development entsteht aufgrund von Ereignissen, welche wärend der Planung des Projekts nicht bedacht wurden oder unvorhersehbar waren. Software Development ist kein strikt nach Plan laufender Prozess, bei dem jeder Arbeitsschritt vorher bekannt ist, sondern ein ständig fortlaufender, \"empirischer\" Prozess. Es ist somit ein Prozess, der immer die neuesten Erfahrungen miteinbezieht. Wenn man Veränderungen in Software Development betrachtet, kann man sie in drei Bereiche Einteilen:\nDer erste Bereich ist die Veränderung an Anforderungen für das gegebene Projekt. Dies kann zum Beispiel von Seite des Auftraggebers herrühren, welcher neue Features, wie zum Beispiel einen Log-in Screen, für die angeforderte Website braucht. Aber auch generelle Geschehnisse in der Welt können Auswirkungen haben. Der Klimawandel ist seit neuestem stark in den Vordergrund gerückt, wodurch Ressourcenschonender und Effizienter mit der gegebenen Hardware umgegangen werden soll.\nDer zweite Bereich ist die Veränderung beziehungsweise Weiterentwicklung von Technologien. Vor ein paar Jahren war es noch normal, dass eine CPU nur einen Kern besaß. Durch Weiterentwicklung der Technologie wurden Mehrkernprozessoren binnen weniger Jahre nicht mehr wegzudenken. Entwickler mussten sich nun daran anpassen die neuen Ressourcen, die ihnen zu Verfügung standen, auszunutzen, um einen Vorteil (oder keinen Nachteil) gegenüber der Konkurrens zu haben.\nDer dritte und letzte Bereich ist die organisatorische Veränderungen. Diese tritt zum Beispiel dann auf, wenn ein neues Arbeitsmodell wie SCRUM eingeführt werden soll. Dies findet meistens statt, um die Effiezienz und die Teamarbeit zu erhöhen und hilft somit das Projekt schneller umzusetzen.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1266099,
      "meta": {},
      "text": "Change happens in software development because a software project is always exposed to influences from the outside world which is constantly changing. \n\n\nRequirements of a software project can change if the market conditions change. The customer might, for example, plan to serve a new business segment. The software has to be adapted in order to cover the new use cases.\n\nTechnology changes are sometimes necessary because libraries, frameworks and other dependencies might be deprecated or unmaintained. Newer versions of dependencies might introduce breaking changes which have to be considered.\n\nOrganizational changes occur for example when new members join the company and other members leave or when there are changes to the structure of the teams in a software project. The implementation of agile methods is also an example of an organizational change.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266352,
      "meta": {},
      "text": "Change can occur in software development when outside factors, controllable or not controllable, affect the project team or the client. An example could be the (still ongoing) COVID-19 crisis that happened unexpectedly and forced companies to put more people into home office, which might have had a negative impact on the performance of project teams, and could have affected the client's requirements due to possibly increased costs on digitalisation and employees not being able to work due to illness while still need to be paid.\n\nMore specific requirements changes can happen when a company has to cut costs due to PR, for example, and thus has to put their priorities somewhere else. For example, a company might put their priority on efficiency at first, in order to be able to focus their servers on other things as soon as possible, and of course also to follow the greater goal of being enviromentally conscious. After cutting costs, a company might prefer to save in projects and rather finish faster than saving money (but less) on energy.\n\nTechnology changes can occur in the inverse case. A company might be able to fund more money into a specific project and would instead pursue efficiency above speed. Thus, it might want to invest into using a lower level language (i.e. C++).\n\nOrganizational changes could be caused by individual persons' behavior. A sudden grave illness or mental problems due to personal problems might force the team to find a new leader.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262406,
      "meta": {},
      "text": "Why change happens in software development: \nAs software engineering projects advance in development so do the original requirements.\n\nExample for change in the real world: \nI worked on a note taking app that can transform hand written math formulas to latex code. \nUsers requested the additional functionality to transform hand written charts into automated diagrams. \nSo user feedback caused a change in the ongoing software development. \n\nareas of requirements changes: \n- technology: as technology advances new requirements emerge. For example with NFC technology now being available in most phones people demanded the ability to pay with their phones wirelessly. \n- organisational: The company Black Berry used to develop popular phones. But they got outdated by the competition and had to change their strategy. As a result their requirements have shifted to suit a new target audience in the cloud computing/storage industry. \n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262844,
      "meta": {},
      "text": "In der Software-Entwicklung ist man durch das Umfeld wie z.B. Technologien, die sich ständig ändern und erneuern, oder auch Umwelteinflüssen Veränderungen ausgesetzt. Man entwickelt zum Beispiel eine Plattform für Benutzer und diese wächst sehr schnell. Dann muss man auf diese Veränderung reagieren (am besten auf agile Weise), z. B. mit neuen Funktionen, die mit dem Wachstum Schritt halten. Zum Beispiel mit einem neuen Feature, das den Feed der Plattform kompakter macht.\n\nAnforderungsänderung bedeutet, dass sich die Anforderungen an die Softwareentwickler ändern. Ein Beispiel für eine Anforderungsänderung wäre, dass Sie eine Plattform für einen Kunden entwickeln und der Kunde plötzlich aus Datenschutzgründen die E-Mails der Benutzer beim Einloggen nicht mehr speichern möchte. Diese Änderung muss dann umgesetzt werden.\n\nEin Technologiewechsel bedeutet, dass sich die Technologie des Softwareentwicklers ändert beziehungsweise dass neue Technologien auf den Markt kommen. Zum Beispiel könnte man überlegen auf das neueste JavaScript- oder Microservice-Framework einzusetzen und alle damit arbeitenden Mitarbeiter ggf. darauf umzuschulen. Das wäre eine Technologieänderung.\n\nEine organisatorische Veränderung bedeutet, dass sich etwas organisatorisch im Softwareentwickler-Team oder an einem Projekt  verändert. Beispielsweise kündigen Teile vom Team und neue kommen hinzu, die aber andere Entwicklerkompetenzen mitbringen und entweder in das Projekt eingearbeitet werden müssen oder sich Teile des Projektes zugunsten dieser Skills ändern.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262945,
      "meta": {},
      "text": "Changes in software development can occur because of various reasons. When requirements, technologies or organization change, software development can change too. For example, there was huge companies, producing mobile phones as Nokia or Motorola. But then appeared smartphones and became more popular, so software developers need to keep it in mind. When appears a new platform or some updates (it may be release of new game console or a new version of operating system), that directly affects changes in software development (technology changes). Also software development changes because of requirements changes. When customer suddenly needs something else, software developers need to be able to accept changes. Maybe a shop need a website. But suddenly building of the shop is burnt or something else. Now website developers need to change website. The project can need unexpected changes in process or not, when customer need something new. It may be DB - navigator or google maps, when there are construction works in the city. Organizational changes example- the developer get sick and company has a strong deadlines. Company must take measures. So end product can differ from planned product. There are many reasons, but they have in my opinion something in common. Software development react to changes in outside because of adaptation to be in demand in so big competity.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263675,
      "meta": {},
      "text": "Change likely happens as a result of demand, necessity, and innovation. For example, the typical speed/frequency of processors in computers has topped off some years ago. The desire and demand, however, for increased speed due to more complex programs has increased. To combat this, developers focused on other areas of the processor to increase speed, perhaps the most overarching example being the increase in transistors \n\nRequirements changes - A perfect example of this is as given above - processor frequency could not be feasibly and viably increased any further due to the inability to match the processors speed in the cooling process. \n\nTechnology changes - The smartphone is paradigmatic of this. Little space for hardware power combined with the desire for longer battery life meant that development focuses were much more specific than in a typical computer. The most common issue being to make apps and software as energy-efficient as possible.\n\nOrganizational changes - Change in the way software teams undertake the development process. For example with scrum having sprints, and wherein the expectation is that there is a prototype ready for shipment as quickly as after the first sprint. Organizational changes can also be as general as employee turnover, resulting in companies having less or more available workers and having to then make decisions on the best way of going forward with the new (lack of) resources.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264683,
      "meta": {},
      "text": "Changes happen in software engineering due to the changes in customer needs and the new technology advances. For example, with the advent of the internet, web development came to be trendy, and with the spreading of mobile phones, mobile app development such as Android/ios development became more and more popular.\n\nThe requirements changes are caused by the evolutions of customer needs. Take game applications as an example. The current users are more concerned about the UI/UX qualities and the interactiveness of the games than they used to be, which lead to the requirement changes in the game app development.\n\nThe technology also changes rapidly, including programming languages, frameworks used, etc. For example, C++ and Java replaced C as a more dominant programming languages due to their Object-oriented-Programming qualities, which make them more versatile in software development. Python also gained its weight in modern software development for its readability and plentiful libraries.\n\nOrganizational changes are the changes in the organizational process of software development. There are defined process, which is pre-planned and lack flexibility and the empirical process which is less planned in advance but inspect and adapt. Agile software development is more used nowadays as compared to waterfall development for its flexibility and agility. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264737,
      "meta": {},
      "text": "Change in Software develpement happens, because after you started your project and fixed your requirements, new ideas come up, that the team has not thought of before or new/more advanced technology comes up. that gives the opportunity for change, that was not possible before. \nRequirement change is when new requirements for the project come up during development, reason can for example be: competitors bring new features, so you need to match them, to stay atractive for customers. or you notice things, that went unnoticed before and that require change. or you/outside (eg. test group) comes up with new ideas, that the team did not think of before.\nChanges because of Technology happen, when new technollogy gives opportunities that were not possible before and you need to adapt , so that your product stays atratcive to customers or want to get a advantage to competitors by better technology. for example in game development, when new things like VR glasses come up, you can adapt your game to that, so that they can be used playing the game. Which is something you would not know to be possible/useful, before Vr glasses where developed.\nOrganizational change can happen e.g. when the company structure change and new people become responsible for the project and they have differnet ideas or legal requlations change, which make change to the software inevitable. e.g when a new data law is passed and you need to change the processing of personal data in for exampe a smartphone app needs to changed or even the whole buissness model of the app.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266192,
      "meta": {},
      "text": "The world keeps changing. The market and its demands are highly dynamic, so competitors simply have to continuously adapt to current trends. Be it like TikTok with its unique user experience: Soon Instagram introduced Reels, YouTube introduced Shorts and Reddit redesigned its mobile app's video player to mimick TikTok's endlessly scrollable video feed. So, because requirements changed, they all had to completely overhaul their concepts and software to remain competitive in the market.\nBut technology itself is also subject to continuous changes: Let's focus on Adobe Flash Player here. Over the years, it was replaced by HTML5 to be usable on a greater number of (mobile) devices and to ensure more security. As we all know, Adobe's Flash Player was discontinued at the end of 2020, so all competitors who hadn't rewritten their software to make use of HTML5 by then were basically cut off from the market.\nBut the overall organization might also change: like when Facebook acquired Instagram in 2012: A previously independent software developer team was suddenly required to alter their software to be integrated into Facebook's software ecosystem. Be it through direct crossposting to Facebook that had to be implemented or shared APIs for privacy settings etc. So from then on, they just couldn't change the software however they liked, but instead had to coordinate every update and major feature release with Facebook to ensure mutual compatibility. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266300,
      "meta": {},
      "text": "Change happens in software development due to some reasons: \n- Requirements changes :\n   (Poorly Defined Requirements);\n     Incorrect requirements, and missing requirements.\n  (Changing needs);\n    Maybe the customers keep changing their minds, or they don’t know what they want until they see it. \n- Technology changes : (Immature Technology);\n    Using outdated IDEs to solve problems. \n- Organizational changes: (New and changing Stakeholders); \n   Sometimes and with time, some stakeholders leave and are replaced by new ones to the project. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266320,
      "meta": {},
      "text": "Change happens in software development, because not everything that is planned can be 100% put into the final prodcuct. \nSometimes there are boundaries that can't be overcome leading to changes in the development process. Boundaries can be a lot of things for example finding flaws in the own planning or even  a change in the environement.\nAn example would be when you are developing an app and suddendly a new law is introduced which you have to follow in order to maintain the guidelines.\n\nRequirement changes: \ta change of the core idea of the product and what it should achieve\n\t\t\t\t\tex. you realize that a certain feature in your software will attract more customer/consumer demand\n\nTechnology changes:\tthrough the creation of technological advancement you adapt to better technology\n\t\t\t\t\tex. you use a better processor as it rapidly improves your video graphic rendering\n\t\t\t\t\t\nOrganizational changes:\tchange in the structure of how the team has been working\n\t\t\t\t\tex. you change from the waterfall system to the scrum system as you deem it to be more efficient",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266519,
      "meta": {},
      "text": "Sometimes in our minds we have ideas or models that look like they are perfect, but in real world it doesn't mean it will be as good as you thought. That's why the changes in software development happen. During the process of software development we make everything step by step, discussing every aspect with a client and at the end it might be, that the client isn't satisfied, because in the reality it is not good, even though the product was made as the client wished. For example, the client wanted some red cars in the program, but after they saw how it looks like they changed their mind and told to switch cars' color to green. \n\nThere are three types of changes: requirements changes, technology changes, and organizational changes. First happens at the beginning of the main process, like changing the type of program or appearance of it by adding/ deleting some parts as client wished.\n\nTechnology changes happen when there are some new technologies, innovations that might make the development process much easier or better. For example, the team had outdated computers. After the new computer models came out, they got them to improve the main process because it increases the work quality so the finished product will be better.\n\nOrganizational changes are the changes in team. For example, they changes the worker, that was responsible for some part of code. It might be hiring a new person to increase the speed of completing tasks.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261826,
      "meta": {},
      "text": "Veränderungen in der Softwareentwicklung kommen heufig vor. Grund dafür ist, dass die Entwickler beim schreiben der Software sich zwar Gedanken über die Verwedung und Anforderungen dieser machen, welche sich aber nach langer oder auch kurzer Zeit schnell ändern können. Ist eine Software beispielsweise für ein Unternehmen entwickelt worden, so muss diese sich ändern, wenn das Unternehmen sich ändert und die Ziele Andere werden. Außerdem erkennt man auch erst oft nach der Nutzung des Produkts wo Optimierungen und Fehlerbehandlungen vorgenommen werden können. Ein Beispiel für Veränderung in Software ist z.B. bei der App Instagramm zu sehen. Diese haben seit 2020 die Funktion der Instagramm-Reels eingefügt. Dardurch wird sich erhofft dem Nutzer einen besser zugeschnittenen Content anzubieten und dardurch diesen länger auf der App zu halten. Hier musste nicht nur die Benutzeroberfläche geändert werden, sondern auch ein Algorythmus geschrieben werden, der die Präferenzen des Nutzers erkennt.\n\nrequirements changes:\nBeim erstellen einer Software können wie obebn genann die Anforderungen der Nutzer sich ändern, aber auch die der Unternehmen. Manchmal merkt man auch später erst, dass manche Anforderungen vergessen wurden und andere garnicht nötig waren.\ntechnology changes:\nEine Veränderung in der technologie hat meistens immer eine Veränderung in der Software zur Folge. Hardware und Software müssen sich immer wieder anspassen um zusammen ein optimales Produkt zu bilden. Wird zum Beispiel aus einem Handy, welches mit Tasten bedient wird eines, welches ein touch-Display besitzt muss dementsprechend auch die Software so geändert werden, dass alle Funktionen und mehr realisierbar sind.\norganizational changes:\nOft wechselt sich auch die Organisation beim Entwickeln, um effizienter zu arbeiten. Ein Beispiel dafür ist Scrum.\n\n(keine Wörter mehr)",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1262335,
      "meta": {},
      "text": "Software Developer needs to adapt to the new Technology, new ways of Data Storage and most importantly the desires of the users around the world, for example the Cloud Storage. More people rely on the new way to store their data because it was more secure and not that efficient anymore to store them on a disk, for several reasons such as broken hardware or corruption, that leads that software engineers around the globe needed to work with this type of storage. \n\nThe needs of the people change from time to time, the Internet use is more than ever in human history, so many people want to have more secure programs to protect themselves against cyber attacks,\n\nAlso the technology is evolving rapidly, 26 years ago it was a phenomenon that games in 3D space where published, like Mario 64, but today many software engineers working on games in VR-Space.\n\na program in the past where just for one specific use, but as the time goes, on the Software engineers needs do program them more generic, so for example companies can adapt the program more to them to be more uniqe and more useful to them. for example Unity is a Game Engine that can be used to show objects in 2D/3D Space, that can be used for Games but also for the Film Industry.     ",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262503,
      "meta": {},
      "text": "Der Wandel im Software Development entsteht durch eine Vielzahl von anderen Entwicklungen, die alle einen Einfluss auf das Software Development ausüben. Wenn man im Software Development die Abstraktion eines realen Problems modelliert, das reale Problem aber immer komplexer wird, so muss zwangsläufig auch die Abstraktion und die Modelle mit der Zeit komplizierter werden.\nEin Beispiel hierfür wäre die Modellierung unseres Universums. Zwar verändert sich das Universum selbst nicht, unsere Modelle für jenes werden aber immer genauer und treffender. Mit der Zeit kommen immer mehr Details hinzu, aber auch grundlegende Aspekte werden neu definiert. Das Erstellen von Computer-Modellen und -Simulationen wird somit immer weiter wechseln.\n\nDer Bedarf an die Software verändert sich im Allgemeinen durch alle Änderungen, die in der realen Welt von statten gehen. Wie oben schon genannt wird die Realwelt komplizierter, wodurch auch die Herausforderungen für die Software-Entwicklung steigen.\nÄnderungen im technologischen Bereich wären einmal die stetige Vergrößerung der Größe von Speichereinheiten in Festplatten und Caches, aber auch die zunehmende Geschwindigkeit und Taktraten von Prozessoren. Jede neue Generation von eigentlich bekannter Hardware bringt neue und modernere Fähigkeiten und Herausforderungen. Ferner kommen immer wieder ganz neue Konzepte und Systeme in diesem Bereich auf, wie aktuell etwa die Quanten-Computer.\nIm organisatorischen Sektor werden die Entwicklungsteams von Jahr zu Jahr größer, internationaler und diverser. Zugleich werden die Projekte, an denen die Arbeit organisiert werden muss, immer größer. So stellt die Weiterentwicklung bestehender \"Öko-Systeme\" wie die Google Search die organisatorische Seite vor immer größeren Herausforderungen, wenn mehr Developer mit immer mehr anderen Berufsträgern zusammenarbeiten müssen.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1263104,
      "meta": {},
      "text": "Changes in software development can happen very unexpectedly and quickly. This is mainly due to the fact that software development has to fulfill many requirements, for example, those of the customers, laws or even things like competing with new products from competitors. Only if all the requirements have been fulfilled, will the product be successful. In addition to this, I believe that these changes happen especially quickly, because software development is a more easily accessible industry than many others. This means that competitors can easily copy existing products and enhance them.\n\nWe define requirements changes as changes that occur to what is generally wanted from the product that is being developed. The origin of such changes might be customers that start wanting to have an emission-free product (for example, as was the case with blockchain mining / proof of work) or laws changing regarding the technology that is being pursued.\n\nTechnology changes happen when the underlying technology which is being used for software development changes. An example for this would be that a new version of the programming language used, is released. I would argue that software development, in the end, is the main driver of technology changes.\n\nOrganizational changes happen on a much higher level. In general they happen when there are changes in the human resources of a software development team / company, for example, a manager being replaced. But an organizational change could also be as simple as changing the name of a company, which could have wide ranging effects on the whole organization (e.g. Facebook -> Meta).",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263476,
      "meta": {},
      "text": "Change happens in software development partially because of outside factors including, changes in the environment and specification, emerging new technologies as well as changes in law. Software teams have to be well prepared for all types of changes.\n\nAn example of the last one is the change of EU regulation regarding data privacy and cookies, after which all websites operating within the EU had to ask users for permission to add cookies.\n\nRequirement changes come from the client. These can come because the client wants to add a new feature to the project or prioritize a task over another. Such changes have to be accounted for to deliver maximum satisfaction to the customer. A defined planed model of software engineering would not optimally apply to this (and other) changes, unlike in scrum where a preliminary prototype can be delivered within a month (i.e. one scrum cycle).\n\nTechnology changes come when new and powerful new tools appear on the market. Companies that do make use of these new technologies typically outperform and out-compete companies that are latent and are not agile. An example to this is how the market leader Nokia almost got bankrupt for their late response to then emerging smartphone market.\n\nOrganizational change occurs when the company decides to change a major part of its culture, work process or technology. One such change might be merging from a defined, planned process to an agile one like scrum, where the priorities are assessed around once a month and the communication occurs more or else daily.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263607,
      "meta": {},
      "text": "Change in software development projects is essential, so that the final product is efficient. It generally aims to the enhancement of the product's performance and quality. Change can also happen while dealing with impediments (like realizing that the used technology comes with more costs that the assigned budget, so changes must be made in regard of the budget or the technology) Changes are generally divided in 3 areas: There are new requirements that must match the new needs of the market and keep up with the competition. Also, unforeseen problems may arise, which would mean that requirements must change to take into consideration solutions to the problems. \nThere are technological changes that make for example the already chosen tools or even methodologies obsolete.   There is also the problem of \"immature technology\" which means that developers may have promised the product owners/stakeholders to introduce a brand-new technology to the market but they realize that this technology still isn't mature enough (maybe to adapt to already existing products in the market).\nThere are finally organizational changes like the will of the development team to use new tools to communicate or as a response to a dysfunctioning dynamic in the team (maybe introducing new developers).\nNokia represents a real-world example for the importance of taking change into account in the software development process. Even though the company was 1999 the leader in the phone market, its lack to keep up with technological and requirement changes had dire consequences.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264277,
      "meta": {},
      "text": "Changes are an essential part of the human civilization and have only got more in our digitalized environment. So it is not surprising that changes happen especially in software development, a field strongly influenced by changes in requirements for certain products, changes in technologies software is built upon and changes in internal structures that create new questions about the direction of the product. A great example of change is the usage of new architectures for processors. In case of the new Apple M1-series chips, many software developers had to make changes in their projects to make their software run natively on these new chips.\nRequirement changes are changes in the requirements the software has to have to fulfil its role, e.g. in the use in businesses. Changes happen here mostly because of changes in needs. Examples of these changes can be observed in the development of tax software. Tax software has to constantly adapt to new laws and thus new requirements.\nTechnology changes happen when the technology the software has run on changes. An example of that is the creation of video games that are made for next generation consoles. Since these often have different architectures, developers have to make technical changes to their software.\nOrganizational changes happen when the team or the company changes their structure. An example is the dismissal of an important software developer in the middle of a project.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1264405,
      "meta": {},
      "text": "Change in software development:\nOne source of change in software development is it's heavy dependency on external factors which can change like own business decisions and those of competitors, budget limitations, legal changes, technological progress and user expectations. Another source of change is internal to software development: due to the complexity of today's software problems it's impossible to evaluate a possible solution without already investing a lot of time and resources before realising that a different solution would be a better fit, so the complete approach might have to be changed in the middle of a project.\nFor example the introduction of the GDPR/\"DSGVO\" had a huge impact on how large social media companies have to mange data of EU citizens.\nRequirements changes:\nRequirements of a software project can change at any time, for example when clients have new feature requests or are not satifsfied with the current user experience.\nTechnology changes:\nThe adoption of more modern, more appropriate and better supported technologies like for example replacing jQuery with React or MySQL with a better suited NoSQL database system leads to technology changes.\nOrganizational changes:\nSoftware is developed by organizations and thus decisions made for the whole organization can affect software development. For example when a company is acquired by a bigger corporation, current tooling and infrastructure might need to be replaced by the inhouse infrastructure of the new corporation.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264760,
      "meta": {},
      "text": "1. Software development is a process which is actively influenced by external factors such as the evolution of the market for a product, the evolution of technology on which a product is based on and the ever-changing working environment the software developers who develop a product are in. \nBecause all these factors are continuously changing, mainly driven by profit maximization, so is software development also required to continuously change to meet the demands.\nMobile apps work on a patch-based release schedule so that they can dynamically change according to the newest standards in technology and that is why, for example, with the increase of display size, most apps need to be changed, so that they can profit from the bigger display space and display more information on the screen.\n\n2. Requirements changes are changes that must be taken when a product should meet certain conditions, such as how most apps today allow you to sign up and/or log in using your Gmail account instead of your designated account credentials.\n\nTechnology changes occur when technology achieves a certain level that can improve the performance of a product. 64-bit systems are the norm now and compared to 32-bit systems they work with longer primitive data types, which can improve accuracy.\n\nOrganizational changes are changes that occur inside a development team and consist of changes in the way the team is composed and generally works. Apps now work with microservices that require smaller teams compared to some years ago when apps had bigger teams behind.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264907,
      "meta": {},
      "text": "Change happens in software development due to financial problems, technical problems or administrative problems.\n\nIn many cases the project budget is not enough for software development which could lead to the change in the software. Technical problems could be due to the limitation of the software or due to limitation in hardware, or it could be to improve performance or support more features. Administrative problems could be change in leadership, who could have different idea than the previous project leader. This could result in changes in the software.\n\nAn example would be the change in software due to Covid-19. For example, the software in Airports. Flights had to be booked in such a way that there was always a free seat between passengers. And to make sure that the plane was not crowded. This was done using changes in the software\n\nRequirements changes:\nThis change happens in software, usually when the customer of the product wants some more or less features in a software. For example, a customer could want additional features in their software, such as a software playing a sound on end when giving a result.\n\nTechnology changes:\nThis change could be due to lacking hardware power or changes in device drivers or change in other software programs which might affect the developing software. An example would be when upgrading from Windows 10 to Windows 11, some software programs might need to be changed so to better use the Windows 11 or to be compatible with it. \n\nOrganizational changes:\nOrganizational changes is the change in leadership, administration or team structure. The new leader could have new idea, which may affect developing softwares. An example would be a change in software when the CEO of a company is changed. The new CEO could have a different approach to softwares than the old one. He may introduce new company policies that may affect developing softwares. \n\n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265034,
      "meta": {},
      "text": "Software development changes with the advancement of technology. For example, the concept of the mouse and the clickable graphical interface were introduced in the 1980s, the development of microelectronics and digital audio and video technology led to the use of multimedia information such as images and sound in computer applications.\nSoftware development follows changing requirements. For example, if a person initially wants to write a bookkeeping software, but then he wants to compare the money spent differently every month, he can add features to the original software.\nTechnology change certainly affects software development. Before Steve Jobs introduced the Apple phone, software development was focused on computers and tended to be for professional use. Then now there are portable phones, and as a result there is a wide variety of software that can serve all aspects of our lives.\nOrganisational maturity can control software development. Specific examples are repeatable process, Capability Maturity Model Integration (CMMI). As an organisation becomes more and more mature, his effectiveness and efficiency in cooperation and other competencies improve, which will naturally be good for software development.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265903,
      "meta": {},
      "text": "Software development is a process and it is common that years pass from the start of the project until its finish. The world is changing dynamically and so it influences the market needs. The stakeholders in organisations prioritise solving a problem and more often than not it is easier to change the original plans to do so. \n\nOne can highlight three change spheres. The first one and the most common are changes in requirements. product managers often find out that the original needs are no longer valid. In that case, developers need to look at the fresh requirements and adjust their methods to fulfil the new requirements most efficiently. There could be a situation that which a product manager interviewed more users and found out the convenience of a fast login was more important than safety. Thus, the new PRD didn't include a need for OTP, specified in the original document.\n\nThere is also a constant development of technology. Just in the past years, many software companies needed to adapt their products to the newest standards. For example, the new MacBook series has a new architecture of ARM chips that requires an update of the software to work optimally.\n\nThe last type of change is organisational change. Often, when a company is restructuring, a different organisation of the teams is needed. For example, there may be a decrease in developers working in a product team during lay-offs, so that from the usual 2 developers in a product team, there is only one.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266049,
      "meta": {},
      "text": "Often times software development cannot happen in a linear fashion. Instead the customers specifications or wishes,  the competitors offerings or the industry-landscape as a whole might change throughout ongoing development all of which a competetive business will have to adapt to. An example for such changing requirements is the luca app which quickly incorporated newly requested features such as displaying the results of tests or vaccination details.\n\nFirstly, requirement changes can often occur when the busines need of the client or their understanding of their problem changes, for example when their users request a new feature in their software.\n\nTechnology changes can occur when the underlying foundations of the technical project change or new options appear, e.g. when new javascript frameworks emerge and others get deprecated which could inspire a switch.\n\nOrganizational changes may occur internally during development when groups, the development process or personell get altered midway through a development cycle. For example teams might switch from waterfall to an agile model of development.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266259,
      "meta": {},
      "text": "A good example of change in software engineering would be the switch from assembly to more abstract languages.\nRegarding engineering requirements, this change happened because programs were growing increasingly more complex and assembler code would be very difficult to keep track of for larger projects. On the other hand this also coincides with a change in technology, because computers were starting to become a lot faster, one could also manage to sacrifice some of the speed of very optimized assembly code for the sake of abstraction, which wouldn't be feasible if computer's performance remained as limited as they previously were. This also has the advantage of being able to make code more accessible for debugging or future people working on it by allowing easier documentation of a project. The change happening here was a shift from only considering the performance of the program to also caring about the time needed for developing and maintaining a project. Regarding organizational changes the best example would be the change in production from the structured waterfall model to the more lightweight development environment of agile models. Instead of making development a predetermined and predictable plan to be followed we have come to see development more like a journey where one might know the destination but the path relies on the challenges found along the way. Again, a change that optimizes workflow even if the final product may not be the perfect solution one might expect at the start. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266366,
      "meta": {},
      "text": "Durch die ständig voranschreitende Digitalisierung wächst die Zahl von Anwendungsbereichen für Softwaredevelopment stark an. Durch den steigenden Grad an Vernetzung aller möglichen Endgeräte nimmt die Netzwerkenticklung einen immer höheren Stellenwert ein. Alltagsgegenstände wie beispielsweise Küchengeräte, Kühlschränke, Fernseher und Beleuchtungsanlagen werden nach und nach in zunehmenden Maße an das Internet angebunden. Die in den letzten ständig vorranschreitende Verfügbarkeit von mobilen Endgeräten, wie Smartphones, Tablet Computern sowie Smartwatches für einen Großteil der Bevölkerung gibt der Welt der Softwareentwicklung eine ganz neue Bedeutung. Zudem steigen die Rechnerkapazitäten von Prozessoren noch immer an und neue Entwicklungen wie Quantencomputer öffnen Tür und Tor für zukünftige bahnbrechende Entwicklungen.\n\nDurch ebenjene Entwicklungen verändern sich allerdings auch die Bedürfnisse der Kunden von Software.\nWurde etwa vor einigen Jahren noch eine App mit sehr langen Ladezeiten und einer sehr langsamen Perfromance von einem Großteil der Kunden akzeptiert, so sind die Ansprüche in den letzten Jahren durch die rasante Entwicklung so sehr gestiegen und die Konkurrenz am Markt so groß, dass eine solche langsame App von den Kunden innerhalb kürzester Zeit durch eine performantere Alternative ersetzt werden würde.\n\nEin Beispiel für die Änderung von Technologie ist beispielsweilse die Ersetzung gewöhnlicher Mobiltelefone durch moderne Smartphones mit ungeahnten softwaretchnischen Möglichkeiten. Durch diese Entwicklung hat Nokia seine führende Stellung unter den Mobiltelefonherstellern verloren.\n\nDurch die mit den steigenden Rechnerkapazitäten und der steigenden Vernetzung einhergehende steigende Komplexität erfordert Softwaredevelopment heutzutage einen ganz neuen Grad von Organisation um die neuen Herausforderungen zu bewältigen, beispielsweise bei der Entwicklung eines Betriebssystems eines Smartphones im Vergleich zur Entwicklung eines Betriebssystems eines Handys welches kein Smartphone ist.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266533,
      "meta": {},
      "text": "With the popularity of the Internet, software development has become more and more popular, and software development is gradually forming an industrial chain. People's lives need to be facilitated and software development leans towards the change of life.\nFor example, the development of artificial intelligence software in the 5G era. Convenient payment, distant and precise operation without delay, all need new software development with 5G to achieve.\n\n\nRequirements changes: During the testing process, it is found that the user's tendency is different from the original plan. For example, players in game development are not satisfied with the implementation of a certain feature and need to be adjusted by the developer in time. Or players are very fond of the originally unappreciated features, requiring more input from the developer.\n\nTechnology changes: Using other technologies can be simpler and faster. For example, a feature can be implemented in different languages, but some languages can simplify the development steps and make development less difficult. Some languages have their own features that can help develop better.\n\nOrganizational changes: New developers need to be added to the scrum team to better optimize the code. For example, if you encounter a difficulty that cannot be solved within the team, you need a new developer to join the team to work with you to complete the software development. New communication between developers can help generate new ideas and achieve better results.\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261243,
      "meta": {},
      "text": "It's not possible to create the \"perfect product\" when talking about software. This implies that a software should get continuous updates, fixing its bugs or adding functionalities.\nLet's say an existing app requires a framework, which is now outdated and will deprecated soon. The development team will need to refactor the app's code, in order to keep it up to date and prevent future issues.\n\nA requirement change occurs when the actor requesting the product changes the products requirement.\ne.g: the admin of a system will now be able to ban users from a web app\n\nTechnology changes involve an update in the tools used to realize the product.\ne.g.: after changing a module used for a specific task, a new module needs to be found - or its functionalities need to be rewritten\n\nOrganizational changes occur when a company changes its team structure.\ne.g. the chief decides to change all of the company's teams to work using the agile development's guidelines",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262483,
      "meta": {},
      "text": "There are multiple reasons for change in software development. In our fast living world expectations, wants and needs of customers and internal and external stakeholders change proportional to the change in technology. An example in the real world might be artificial intelligence. In the 20th century people predicted that computers will take over the world. Nobody really believed that this would happen to close in the future but looking at the current situation we use AI systems everyday because they enriching our life drastically e.g. homesmart devices or further autocomplete functions to aid in coding using a sophisticated deep learning approach for developers.\nRequirements changes describe the wants and needs of companies or people that change over time. While people required a portable telephone that they could always talkt to people a few decades ago, they now require their mobile phone to be portable computers, that can do almost everything from phoning, networking, planning, watching movies etc.\nThe change in automotive sector from combustion engine cars to electric car is an example for technology change over the past years where the main goal of driving is the same but there is a shift from old to a new technology.\nOrganisational changes describe what is the next new in your organisation. An example might be changing the internal communication system in your company from calls and emails to slack/discord (a communication platform).\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263089,
      "meta": {},
      "text": "There are many reasons why a change in software development might happen. Software development is a process and developing a product needs time. In this time the circumstances could change. The customer could change their requirements or the budget could change. Also in the time, you need somebody else could develop new technologies. \nThere also are changes inside the working process all the time. While programming there could be unexpected problems, there might be new ideas or better solutions and issues could come up while maintaining the older code.\n\nA example is a team that is programming a learning platform for a school. The circumstances will change all the time because in a new school year the content of the lessons differs from the last one. Also, the teachers often have new ideas for the content on the platform. And while programming the old code is changed and there are new ideas.\n\nYou can roughly divide the changes in software development into three groups. Requirement changes are changes in the ideas and needs of the customer. For example, a new function might be needed.\n\nTechnology changes are changes in the technology that is used, in the technology that users have and in the technology of competitors. For example, there could be a new technology that would make the use of the programmed platform way easier for the customer. It would make sense to integrate it.\n\nOrganizational changes are changes in the budget, the members or the given time. For example, deadlines could change or a member could get ill. ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263840,
      "meta": {},
      "text": "Softwareentwicklung ist heutzutage im stetigen Wandel, weil immer neue Technologien entwickelt werden, die noch nie da gewesene Probleme erschaffen oder weil die Regierung neue Regulierungen entwickelt und so Unternehmen handeln müssen. Als Beispiel könnte man hier die Fintech-Unternehmen anbringen, die mit immer stärkeren Bafin-Regulierungen zu kämpfen haben und teilweise den Zahlungsverkehr an etablierte Banken auslagern oder eben neue Lösungen mittels Software schaffen. Aber auch neue Wettbewerber zwingen Unternehmen stetig mit neuer Software zu wachsen. \nDer Bereich der Softwareentwicklung hat sich in den letzten Jahren auch immer weiter dahin bewegt, agile Teams zu bilden und wirklich kundenspezifisch zu arbeiten, anstatt Massensoftware, die für jeden nur ein Kompromiss ist, zu entwickeln. \nEs gibt aber auch im Prozess der Entwicklung immer weitere Veränderung, wie z.B. „requirement changes“. Diese Art von Veränderung entsteht, wenn der Kunde andere Anforderung an das Produkt hat oder die Softwareentwickler selbst ein besseres Verständnis für deren Bedürfnisse entwickeln beispielsweise wenn die Entwickler nicht wirklich die Zielgruppe des Kundens verstanden haben. \nDann gibt es noch die „technology changes“, die man beispielsweise sehr gut im Automobilbereich betrachten kann. Dort wieder immer mehr Software benötigt, um beispielsweise autonomes Fahren zu ermöglichen. Es tauchen immer weitere technologische Möglichkeiten auf, die wiederrum ganz andere Softwarelösungen benötigen. \nAls „organizational changes“ versteht man Veränderung in einem Unternehmen die sich beispielsweise auf die Firmeninfrastruktur beziehen. Bei sich verändernden Prozessen, muss sich auch der Einsatz von Software verändern. Ein Beispiel dafür wäre die Umstellung von physischen Telefonen auf Telefonie über das Internet. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264151,
      "meta": {},
      "text": "Die Entwicklungen in der Automobilindustrie sind ein excellentes Beispiel von Veränderung in einer Branche, die bis 2015 nicht von massiven Breakthrough Technologies beeinflusst wurde. Doch der Switch vom Verbrenner zum Elektroantrieb kombiniert mit dem Zukunftstrend zu autonomem Fahren haben die Industrie grundlegend verändert. Die traditionellen Autohersteller befinden sich gerade eine Phase geprägt von hoher Uncertainty und das Risiko von innovativen New Market Entries abgelöst zu werden ist hoch. Doch welche Treiber verschaffen neuen Marktteilnehmern wie Tesla und Nikola einen Vorteil gegenüber Playern mit jahrzehntelanger Erfahrung? Die Antwort ist Software und die verbunden unbegrenzten Möglichkeiten und Herausforderungen. \n\nMeiner Meinung nach liegt die Dynamik von Veränderung in der Softwaretechnik in dem „Don’t reinvent the wheel“ Prinzip. Change wird dadurch ermöglicht, dass man immer wieder auf Innovationen und Bausteinen anderer Teilnehmer aufbauen kann.\n\nRequirements Changes werden vor allem durch die kontinuierliche Steigerung der Komplexität der Probleme getrieben. Requirements müssen von immer größeren Departments gemeinsam bestimmt werden und die genaue Bestimmung des Ziels kann dadurch beeinträchtigt werden. Bezogen auf unser Automotive Beispiel können hier zum Beispiel nicht nur interne Requirements eine Rolle spielen, sondern auch rechtliche Anforderungen in Bezug auf autonomes Fahren. \n\nTechnology Changes werden vor allem durch Innovationen getrieben, welche es ermöglichen komplexe Probleme auf andere Arten zu lösen. In unserem Automotive Beispiel wäre dies die Entscheidung zw. einer funktionalen Programmiersprache vs. einer AI Lösung. \n\nOrganizational Changes beziehen sich darauf, welche Strukturen in unserem Unternehmen vorhanden sind, um komplexe Probleme zu lösen. Das beste Beispiel für einen Change ist hier der Wandel von dem on-site Arbeitsplatz zu remote online Lösungen.  \n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264234,
      "meta": {},
      "text": "Unsere Welt verändert sich dauerhaft. Meist haben wir darauf keinen Einfluss. Nehmen wir als Beispiel eine Firma, die elektronische Geräte baut und die passende Software dafür entwickelt. Diese Firma hat keinen Einfluss darauf, dass Russland einen Krieg angefangen hat und jetzt wirtschaftlich sanktioniert wird. Durch die Saktionen ist es jetzt nicht wie bisher möglich bestimmte Komponenten, die in den Geräten verbaut werden, aus russland zu importieren. Komponenten, die als Ersatz verbaut werden können gibt es aus anderen Ländern, allerding benötigen diese eine andere Datenschnittstelle. Die Software muss angepasst werden. Technologische Änderungen wie diese sind nur eine Art von Veränderungen, auf die ein Software Engineer vorbereitet sein muss. Requirement changes entstehen wenn Forderungen von Kunden, was ein bestimmtes Produkt können muss (neue/andere Funktionalitäten, schneller / auf mehr Geräten gleichzeitig arbeiten, etc), sich ändern oder falsch kommuniziert wurden. Die dritte Art sind organisatorische Veränderungen, wie wenn eine Firma während der Entwicklung Besitzer wechselt und das neue Managment, die internen Prozesse der Firma ändert und jetzt z.B in einem kleineren Team gearbeitet werden muss.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264806,
      "meta": {},
      "text": "Change happens in software development, because the requirement of the customer, the team organization as well as the technology often change. In addition, large parts of software development are empirical in nature, which requires an agile technique to deal with such empiricism while developing a software.\n\nRequirement changes mean that the demand of customer may alter, for example the software is required to be able to apply to a new system. \n\nTechnology changes mean that new technologies have taken place in the software world, requiring the software developers to adapt their project to these new technologies and to be able to deal with potential competitions.\n\nOrganizational changes occur when the sturcture of the development team is changed, for example the team members are reduced due to inevitable reasons, needing the team to come up with a new efficient type of organization to further continue the development.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264854,
      "meta": {},
      "text": "Software development in practice is mostly about a certain project that has as its goal a functioning software that solves certain problems and requirements. This project and with it the development phase will be over a certain time period, often several weeks. \nDuring the project, it is always possible that problems, new ideas or external changes arise, that will make a change in the project plan and the software to be developed necessary. \nIt could for example be, that a team of developers work on an HR software to manage employees. At the same time, a competitor builds a better software, so the product manager decides to focus on building a recruiting tool instead, which has very different requirements and needs different software. \n\nRequirement changes: The customer for a software development project gets new ideas what he needs in the software. At the beginning the customer wants a software that tracks his goods in the warehouse, but suddenly he wants that also every warehouse worker needs to be tracked with the software by logging in goods with a unique barcode. Customer requirements often change.\n\nTechnology changes: A customer wants to track his goods in the warehouse. Suddenly he hears of blockchain, a technology that is more secure to manipulation by warehouse workers when they want to change logs in retrospect. Suddenly the software developers need to build a software with blockchain and their previous idea with obsolete technology becomes redundant. \n\nOrganizational changes: Due to budget cuts, the 10 people-software team gets cut by half. Until the deadline, it is now impossible to create the desired software with the current plan. The plan needs to be changed, the software will look different in the end.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265929,
      "meta": {},
      "text": "\tSoftware development constantly changing due to the increasing importance of the role of technology in everyday life. Today, almost every person on the planet has at least a smartphone. And if you look at the general trend in developed countries, then the average person may well have a smart car, a house, robotic assistants, voice assistants, and so on.\n\tTherefore, the demand for technology is very high. People want more powerful devices, more convenient and functional programs. Progress is a consequence of continuously developing technologies and this can be seen in all areas of human activity.\n\tIn my opinion, this is the main reason for the change in this area.\nDevelopers are people too and they also want a more convenient and functional development environment, new features of the programming language. Therefore, small updates of various programs can be released daily, adding functionality to the working environment.\nIt follows that developers need to learn new things and keep up with new ideas.\nAnd already from this, we see new requirements for staff and the team. New working conditions. After all, when changing one part of the system, it will entail other aspects of it.",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266201,
      "meta": {},
      "text": "Softwareentwicklung ist kein Arbeiten nach Schema F, sondern ein Prozess, der angepasst an die Anforderungen des jeweiligen Projekts, ständig im Wandel ist. Da Softwareentwicklung sehr abhängig davon ist, auf welchem Gerät die Software danach eingesetzt wird, können neue technologische Fortschritte einerseits neue Möglichkeiten bieten, zum Beispiel eine erhöhte Rechenleistung, was neue Features erlaubt, oder Arbeit beim optimieren erspart. Andererseits könnten Einschränkungen, zum Beispiel durch eine Chip-Kriese, drastische Veränderungen bei der Softwareentwicklung bedeuten, weil aus Kostengründen Leistung und/oder Features  gestrichen werden müssen.\n\nRequirements Changes bedeuten Veränderungen an den Anforderung an die Software. Ein Unternehmen könnte durch externen Wettbewerb dazu gezwungen sein, neue Features in die eigene Software einzubauen, oder bestehende zu verbessern, um Wettbewerbsfähig zu bleiben. Es kann aber auch sein, dass der Auftraggeber neue oder andere Features möchte.\n\nTechnology Changes bedeuten Veränderungen an Hardware oder Sprachen-/ oder Systemen, womit das Softwareprojekt realisiert wird. Das kann einerseits den Vorteil bringen, dass Dinge die vor dem Fortschritt in z.B. Hardware nicht möglich (oder nur sehr schwer möglich) waren, nun zu realisieren, oder Dinge, einfacher zu realisieren, weil dafür neue Methoden entwickelt wurden. Das können Datenbanksysteme sein, aber auch schnellere Übertragungsgeschwindigkeiten und neue Programmiersprachen wie etwa Go von Google.\n\nOrganizational Changes bedeuten Veränderungen in der Organisation und Führung. Das kann einerseits eine Veränderung im Team sein, also das Team wächst oder schrumpft. Andererseits kann sich aber auch einfach nur die Methodik der zusammenarbeit ändern, z.B. Scrum oder andere Methoden oder einfach nur ein neuer Führungsstil des Chefs, etwa durch einen Teambuilding-Workshop.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266389,
      "meta": {},
      "text": "Software developement is complex and not predictable. One of the most intersting things about Software Development is that it is never ending. There is always something to be inproved on within the product lifecycle or something which needs to be added. You are able to use certain basic structures to make it more coordinated (organizationlal maturity vs adility) but in the end every process is different and every Problem needs a specific solution. Technology too is always changing and evolving so during the development process we need to adapt to those changes. A change could be that our costumer has new functions that he wants to implement in the software during the product lifecycle.\nThis is also a good example for requirement changes. These occure during a development because the idea of the product changes within the lifecycle and new ideas need to be implemented. Another reason could be that other companies in the same market are introducing new functions which we dont have.\nThechnology changes are happening because not only the software is evolving, the hardware is too. One Example for this is that our costumer has gotten a new server system with different hardware which we need to adapt to.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266510,
      "meta": {},
      "text": "Technologien entwickeln sich immer weiter, insbesondere die Hardware, für die Software entwickelt wird, verändern sich und werden meist immer komplexer. Dies ist die Folge von dem Verlangen, Prozesse immer einfacher und angenehmer gestalten zu können. Ein Beispiel wäre der Wechsel von Tastenhandys auf Smartphones. Hiermit wurde (mit der Zeit) ermöglicht, dass beispielsweise eine Internetverbindung direkt vom Smartphone möglich war und kein externes Gerät (Laptop etc.) notwendig war.\n\nRequirement changes: \nViele Prozesse werden digitalisiert, dementsprechend verändern sich die Anforderungen auf Implementierung dieser in die entsprechende Software. Ein Beispiel wäre das Einbauen einer Speisebestellung oder einer Reservierung auf der Website, welche früher entweder persönlich oder telefonisch geregelt wurde. \n\nTechnology changes: \nDie Anforderungen können unter anderem komplexer werden, da es auch neue Möglichkeiten gibt, diese effizient zu bearbeiten. Aber auch für die Kommunikation innerhalb eines Teams werden immer wieder neue Möglichkeiten entwickelt, um diese zu vereinfachen. Beispielsweise die Einführung von Git ermöglicht es einem Team, unabhängig von einem bestimmten Gerät auf einen Code zuzugreifen und somit besser arbeiten zu können. \n\nOrganizational changes: \nAufgrund der oben genanten Punkte wächst der Arbeitsaufwand, die neu koordiniert werden müssen. Entweder die Gruppe wird um x Personen erweitert, die die \"neuen\" Aufgabenteile übernehmen oder den Personen in einer Gruppe werden neue Bereiche zugeordnet. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262466,
      "meta": {},
      "text": "Changes happening in Software development are: that new programming languages are developed, and companies shift from one to another to keep up with the ever faster-changing world. 50 years ago, maybe C or Java was the most practical to implement, but nowadays, one may argue that they would instead use Python or any other newer Models to do so. \n\nRequirement change: The software has to comply with the needs of the customer, which at one point may be to have a colorful webpage as colored PC was introduced and they wanted to show those of; may nowadays be a minimalistic style with a simple color pallet and therefore improve the softwares functionality. \n\nTechnological changes: New Software or Applications have new requirements. Companies want to use AI, for example, to give each customer the best-personliesed experience they could imagine, from finding the best suggestions to considering everything the person has been looking at in the past and showing them something they didn't know they would need. \n\nOrganizational changes: changing requirements are often organized by corporate politics. Board members or shareholders might see other parts of the software as more critical and want different parts of the program worked on first. Or there is a shift in the company structure to adapt to the newer principles such as Scrums. This is entirely different from the olden ways with no flexibility to having all the flexibility they need to complete the project while still being organized and a Team.  ",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262561,
      "meta": {},
      "text": "1)\nThe first reason is the complexity of the application field and business changes, it is difficult to determine. The second is the change caused by multiple factors involved in customer's demand. A new idea of the customer may overturn the previously confirmed demand after repeated discussion.\n\n2)\nrequirement changes: For example, when a customer wants to fundamentally change the original requirements, this often means a shift in the customer's company strategy or business.\n\ntechnology changes:Changes within the system, such as computer hardware, system software, or data, require adaptation. For example, with the rise of 5G technology, smartphones are being updated to embed 5G signals.\n\norganizational changes: Changes in working systems or regulations or policies related to the operation of software. For instance,the company decides to reduce the number of people in the program but keep the working days the same.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262730,
      "meta": {},
      "text": "With the pace at which the world is evolving, there is no force greater than innovation. This forces change in every industry, but software in particular is required to change and adapt to the demands and needs of the population at a rapid speed because it is so deeply rooted in our day-to-day life. From communication on a global scale to international travel and the financial industry - the world is unthinkable without software. A current example for change in software development is Web3 and in particular Cryptocurrency.  In a matter of a few years, decentralized currency has found it's way into our life and coins like Ethereum and Bitcoin have seen unreal growth. This trend requires for developers to integrate these new payment methods and use e.g. the Ethereum stack.\nThese changes can also be seen in the requirements for software engineering. For example as more data gets collected from the population, more performance and software is required to process the data. To satisfy the changes in performance requirements, a change in technology is required. You can see this in the evolution of chip design and performance over the years. And to also meet the expectations in software volume and quality, organizational changes have taken place for example the shift from a defined development process to an empirical development process using control models like scrum.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263095,
      "meta": {},
      "text": "Change in software development happens practically all the time as new technologies arise\nand old ones are discarded. This is particularily true for webdev where new javascript frameworks \nspawn every two seconds and often gain insane popularity and adoption (a recent example for this\nwould be vue.js etc.). As to why change is happening so rapidly in this field, is also easy to answer.\nUnlike FPGAs for example, where a few companies dominate the space and innovation is almost impossible due to closed source synthesis and routing, software development is more transparent and harder for companies to monopolize. \nApparently there are three areas of change in the software world. Requirements changes happen when the client wants a new feature that is currently impossible to implement due to restrictions in\nthe tech-stack in use. If a customer wants his website to run faster and the company built everything with ruby on rails then they will have a harder time optimizing for speed than say if they used a compiled language for backend purposes. The second type of change would be technological change of course. This is fairly self-explanatory, as there are probably very few people who would choose to write their production code in cobol these days. Advances in programming languages are a very influential factor for technological change. Right now lots of people are working on c++ and c replacements like rust or zig as these languages are fairly old and could benefit from some improvement. The last area of change are the organizational changes. This most likely means that management decided to use new technology xyz and therefore you are forced to use said technology, which also facilitates change overall.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263832,
      "meta": {},
      "text": "Change in software development:\nThe technical environment started to change more often. Therefore the old methodology for software development was too static, planed and Linear. Much like in a factory where everybody has a main skill and task. Developers needed a more agile methodology to adapt quicker and more efficient. One way to achieve this for instance is using the Scrum Framework. \n\nRequirements changes:\nThe customer could change the specification of the problem statement at any time due to technical innovation, a growing and agile Market and other reasons. Therefore the developers need to adapt rapidly and be able to reorganize the project. Take covid for example. May company's lacked sales and therefore revenue. this concludes in budged cuts for already ongoing projects. -> Budged change -> Requirement change\n\nTechnology changes:\nThere is always a high possibility that a Technologie gets outdated while being used. If the team for example uses cloud space of a contractor that is bought by another company, the conditions could change and may not fit anymore.\n\nOrganizational changes:\nLast but not least there could be Organizational changes. For instance the rescheduling of deadlines. If company A for instance launches product that is similar to the one company B is currently developing, company B maybe needs to reschedule theire own release to stay competitive.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263906,
      "meta": {},
      "text": "The technologies for software engineering are subject to change. People invent new tools or programming languages and adapt accordingly. This means that people change their previous methods so that they are also feasible with the new inventions, for example the invention of object-oriented languages. In the world, people used to work by hand and since the invention of the steam engine they have adapted their methods/techniques.\n\nRequirement changes:\nThere are legal requirements according to which the programs have to be adjusted, for example the capping of commissions for financial services, which did not exist before.\n\nTechnology changes:\nThe introduction of a new technological tool, such as the compiler. Accordingly, the programs have to be adapted.\n\nOrganizational changes:\nThese occur, for example, when an employee leaves the company and a new one is hired. The permissions for the project must be adapted for the respective users. \n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264025,
      "meta": {},
      "text": "1.1 why: \nCondition change quickly: customer needs , environment conditions changed, for instance, market, competitors, government policies etc. ,  technology developed quickly , stakeholder changed ;\nUnforeseen problems:  the unknowns and unknown unknowns in the future. Budgets get cut.  Delivery dates are moved up ;\nMistakes and errors : communication mistakes, decisions mistakes , analysis mistakes , customer does not know exactly what he wants ;\n\n1.2 example:\nApple unlock iPhone's Face ID even when wearing a mask, change happen quickly and needed urgently during the coronavirus pandemic.\n\n1.3 \nrequirements changes:\nKey stakeholders missed the beginning meeting of the project. Then, Stakeholders represent requirements.  Missing stakeholders result in missing requirements. Another situation is that the developers could have just ignored some of the original requirements.  \n\ntechnology changes:\nSome Softwares have a very long development time, for instance, space projects, airplanes, automobiles, and even accounting software can take years to develop,  the technology changes quickly  and you have to keep up. As the new technology is coming up, the new needs and functions should be included in the development.  \n\norganisational changes :\nAt the beginning of the development , some stakeholders may not participate. And during the development, some stakeholders leave and new stakeholders take part in.  Each new stakeholder could have own opinions or developing strategies. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264501,
      "meta": {},
      "text": "Customers can change their mind due to some change of business environment  or maybe client came up with new business idea (For example political environment can change which leads that customer requires different functionality) . Or changes in Software Development can be triggered internally, for example: missing requirements or unknown side effects. In software development you cannot plan the process in a \"factory way\" - in reality SD is a process of discovering knowledge through development, usage and then improvement of the software. Another external factor that can trigger change are new vendors, technologies, methodologies. Some times the reason for change can be financial - when using one technology or vendor gains financial benefits to the customer or even political - when new rules are set, and therefore the end product should follow specific requirements (also can relate to certifications, for example: ISO) \n\nRequirement changes: they can happen due to increased understanding customer's needs, for example: a company Congatec GmbH wants to employ access management system according to ISO standard, but they realize that they also need additional functionality for internal use\nTechnology changes: new technologies can make the final product for the customer more effective and efficient. Those technologies could include: RPA, Quantum Computing, Virtual reality, etc. \nOrganisational changes: organisation is open system it is subject to internal and external environment - to adapt it goes through a change, change can be natural or forced in it's nature. Therefore, when a company goes through a change it requires diferent functionality of the software and ways of working ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265637,
      "meta": {},
      "text": "There are many steps in the software development process and it usually takes a considerable amount of time to go through the process of requirements analysis, software design, coding and testing. During this time there are inevitably changes,  such as changes in the customer's budget during the process, and the software developer has to make changes accordingly.\n\nrequirements changes : In the beginning, the customer wanted the software to be a customised software for some people and later wanted the software to be used by most people\n\ntechnology changes： Technology upgrades have become even more powerful\n\norganizational changes： A sudden change of leader or team member during a software development process",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265804,
      "meta": {},
      "text": "Der Fortschritt hat in unserer Gesellschaft oftmals einen schweren Stand. Dennoch ist Veränderung unausweichlich und ständiger Teil unseres Lebens. \nBesonders präsent ist die Veränderung in technologischen Bereichen: Der Markt ist riesig und in den letzten Jahren extrem schnell gewachsen, daher wird dort viel geforscht, weiterentwickelt und optimiert. \n\nDie Softwareentwicklung ist einer dieser Bereiche, der sich extrem großer Veränderung unterzogen hat.\n\nGrund dafür sind die wachsenden Einsatzgebiete für Software - es ist kein Nischenprodukt mehr, das nur in bestimmten Geschäftsfeldern für ganz spezielle Anwendungsbereiche genutzt wird, sondern inzwischen ein sehr breites Produktsegment, das von allen Altersgruppen in allen erdenklichen Bereichen eine wichtige Rolle spielt. \nDoch damit der wachsende Bedarf und die steigende Komplexität an Software-Anwendungen erfüllt werden kann, bedarf es effizienten Entwicklungsprozessen und erfolgreicher Zusammenarbeit zwischen den vielen Entwicklern und Stakeholdern. Dies ist der Grund für die vielen Veränderungen.\nEin Beispiel für Veränderung im Bereich der Softwareentwicklung ist der Wandel von Inhouse Entwicklung zu Outsourcing in Ländern wie Indien, was zu Kostensenkung und mehr Innovation geführt hat. \n\n__\n\nRequirements change:\nBeschreibt die Veränderung aufgrund von sich ändernden Nutzeranforderungen. \nEin Beispiel: Der Wandel hin zu mobile-first applications. Durch die Verbreitung von Smartphones konnten komplexe Programme auch auf kleinen Handys laufen und Nutzer hatten die Erwartung, dass entsprechende Programme auch auf mobile Endgeräte optimiert sind (bspw. Smartphone Banking).\n\nTechnology change: \nBeschreibt die Veränderung aufgrund von technologischem Fortschritt.\nBspw. der Wandel von lokaler Software zu Cloud Computing, der es einfacher macht, Software zu verbreiten, zu warten und dabei zudem die Kosten senkt.\n\nOrganizational change:\nBeschreibt die Veränderung in den Organisationsstrukturen.\nBspw. der Wandel bei der Produktentwicklung vom Wasserfallmodell zur agilen Produktentwicklung: Anstatt eines linearen Planungsmodells, wird Software heute in Sprints und Iterationen entwickelt und die Entwicklung in mehrere kleine Einzelteile unterteilt, was sie effizienter, anpassbarer und Nutzer-orientierter macht. \n\n\n\n \n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266077,
      "meta": {},
      "text": "In Softwaredevelopment kommt es häufig durch upgrades in der Programmiersprache oder gar durch neue Programmiersprachen zu Veränderungen . So wurden am Anfang Programme in Assembly dann in C und heute in Java geschrieben. Da Java auf den meisten Geräten ohne große Anpassung läuft kam es mit der Etablierung zu einem großen Wandel in der Software Welt.\n\nDurch die sich in der Welt immer ändernden Situationen braucht der Kunde auch eine andere Software. Früher brauchte er eine Software zum formatieren und drucken von Seiten für seine Ordner heute eine Software um alles Papierlos im System oder auf dem Server zu speichern.\nDazu kommt auch die fortschreitende Technologie. Früher wäre es nicht oder nur schwer möglich gewesen alles auf dem Server zu speichern wegen limitiertem Speicherplatz und zu hohen Kosten für Kleinkunden.\nAber auch durch immer größer werdende Firmen ändert sich die angefragte Software. Früher haben 10 Leute in einer Firma in einem Programm zusammen arbeiten müssen, heute können es hunderte sein, demenstprechend muss die Software dann auch übersichtlich gestaltet sein und für die Nutzung von vielen Personen ausgelegt sein.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266185,
      "meta": {},
      "text": "Why does change happen in software development:\nAs customer needs/ the market changes, like what happened to Intel a few years ago when AMD released their Ryzen processor line up, Intel had to change from their usual 4 core cpus, which they produced for almost a decade, to more modern ones. A new ceo took place at Intel, probably one of the many changes the company had to do to keep up with market demand.\n\nThis could also be used as example for \"requirements change\", \"technology change\" and \"organizational change\".\n\nRequirements change when you understand the needs of the customer better while developing, or they change their requirements about the software themselves. The requirement NC for tum changes every year too for example.\n\nTechnology changed as competition arose on the market for faster, cheaper and more efficient computers, or in wars as countries where competing on technological level, e.g. the turing machine to solve the enigma code, rockets and nuclear energy.\n\nbig organizational changes in companies where the introduction to labor laws & workers rights movements and most recently, home office.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261766,
      "meta": {},
      "text": "Change is the only constant.\n\nChanges happen in software development when\n 1. laws and policies about the internet and software are changed.\n    e.g. Privacy policy   \n2. the requirements of customers are adjusted or increased  \n3. the operation system of the hardware or the hardware itself are updated\n4. the software development tools are upgraded\n5. the programming language is updated  \n(Answer from the previous year)\n \nExample for change:\nCustomers have been requiring a safer and more responsible internet environment after several security issues and user-date breaches happened. They want the control of their own personal date. Therefore, big companies made changes to their software. Apple updated the iOS that third-party Apps are not allowed to collect user's location data in the background without permission from user.\n\nRequirements changes: \nThe need of customer is changed. Example: just like what I explained above.\nTechnology changes: \nnew technologies are brought to the market, so that companies have to adjust their software \nExample: Google and Apple have to make changes to the Android and iOS screen control functionalities because of the application of high refresh rate display on smartphone\norganizational changes:\nA manager has to quit because of personal reason. The new manager runs the team in a different way.\n\n\n\n\n\n\n\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262284,
      "meta": {},
      "text": "Software development is field that relies on a empirical system, exactly because of the massive changes that can happen during the production of software. The first and main area which causes the aim of the software developers to change is the change is requirement (mainly from the customer). That is usually happening because the customer is not a software engineer himself, and does not understand how difficult it is to implement a specific feature. Other times, the communication between the product manager and the customer is insufficient, which leads to a difference between the expectation of the customer and the product. This last example is easily prevented with an organizational change: by choosing to use a system like Scrum, which is based on a lot of communication, these kind of mistakes can be avoided. The last main area which causes change in software development is the area of technological change. This can be seen in two ways: the first is that the software must be adapted because the technology that is available changes (eg. people use smartphones, instead of key phones) . The second way would be the unrealistic expectations of the development team, on how easily it will be to write pieces of code that are able to interact correctly together. All these factors cause change, which needs to be adapted to. The sooner people adapt to the change of specification, the better it is. That is why a system like Scrum which imposes daily meetings is so good for dealing with change.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262543,
      "meta": {},
      "text": "The Idea of software development for a while was a repeatable process. Comparable to a car factory where the same steps are repeated over and over.\nBut software development turned out to be not predictable and not an easy task. And it can not be modeled with a defined process that is repeatable. You need a diverse team with different expertise. It is also partly empirical which means you probably do not fully understand it. Because there are changes in the world for example in requirements elicitation, analysis, design, implementation, validation of the system, delivery, and maintenance, Software development has to adapt to all of those changes and therefore has to keep changing itself.\nFor example, other than normal cars the new electric cars use software to control the car.\n\nRequirements change can arise due to changes in user requirements(wishes and needs), customer organizational restructuring, and technological change. For example, online banking made it much more convenient for customers to access their bank accounts even from on the go. Therefore banking apps were created. \n\nTechnological change is the idea of improving existing technologies and developing new ones to improve and create products. It also creates new markets and new market structures, but might also destroy obsolete markets. For example from computer to laptop was a great technological change, because it made working from everywhere possible. \n\nOrganizational change describes the actions a company or business unit takes to change a key element of its organization, for example, its culture, the basic technologies, internal processes, or infrastructure it uses to operate. For example, starting to integrate scrum into its management.\n\n\n\n\n\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263589,
      "meta": {},
      "text": "Change in software development happens because the context in which software is being developed may change at any time.\nA real world example for change might be a change in the requirements of a customer, when developing e.g. a website for a cookie shop. At first, the website might have  representative function only, but later the shop owner may realize that it would be nice to have an online shop function. The requirements changed and thus the developers have to react to that change by extending the website.\nWhat I just explained is an example of requirement changes. Technology changes happen, when e.g. a new technology emerges that has an impact on how software is being developed. An example might be the use of git, which has changed the way collaboration in development works.\nOrganizational change is more an internal matter of  the company developing software. When, for example, agility is being introduced into a team of software developers, the respective roles and responsibilities of everyone involved may change.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263647,
      "meta": {},
      "text": "\tMy understanding of \"change in software development\" is the transition from an existing software product to a newer, improved version of this product. If software engineers come across a problem, they know it must be fixed, so they fix it. This represents changes in software development. \n\tFor example, on 29. February 1988, a supermarket was fined for offering meat one day too long. The computer printing the expiration dates for food products did not consider the uniqueness of leap years. This problem signaled to them that it must be improved, which lead to improvements in functionality of the product.\n\n\tOften it is the case that intial requirements are poorly determined. As a result, problems arise that could have been avoided. For example, an incorrect requirement is if a ticket distributor sets a requirement that ticket distributor machines should be available to people at least 40% of the time, as they should be available longer. \n\n\tTechnology develops over time. Humans continuously find more productive ways of carrying out a task which causes technology changes. An example of this is in accounting, nowadays all the account entries are done on a specialized software, whereas humans used to enter everything with pen and paper before. \n\n\tOrganizational changes refer to improvements in aspects like communication and planning. For example, many firms hold normal meetings where everybody sits at a large table, however some firms incorporate stand-up meetings as these are more interactive and inclusive. A more productive work and interaction environment leads to better planning, for example. \n\n\n\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265735,
      "meta": {},
      "text": "Change in Software Development usually occurs due to different factors: shift in customer needs; evolution in technology; growth of markets; (terminal) problems in the software, discovered in the procces of development. Changes can be both made in the name of improvement of the functionality or structure or because of the need for solution to a certain problem. An example for a significant change in Software Development would be the creation of the Swift language from Apple, which they mainly created for their needs. After it was released, the software giant started using it for the development of their apps.\n\nExamples:\nReqirements change - Customers want to add or change functionalities to the product\nTechnology change - Migration to a new generation of software/hardware. Implementation of new modern ways \n                                   and technologies in the current product. \nOrganizational change - Re-strucuring of the project, replacement in leading positions, which leads to new \n                                        organisational order and schedule. Loss of a team memmber, rearrangment of the  \n                                        workload",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265801,
      "meta": {},
      "text": "Change happens in software development because it is an empirical process. We cannot know everything in advance and do not know the steps we are going to follow exactly. So we start with a plan but when we come into problems we need to be able to adapt to them. Since it is also a very fast changing industry, we need to be able to adapt to external changes as well. There are different kind of changes that can occur in software development. Requirement changes occur when your project requirements change because for example new requirements are added by the project issuer. \nTechnology changes occur when you have to adapt to the fast changing landscape surrounding you project. As an example we have IBM who didnt adapt fast enough to new computer technologies. Organizational changes can happen when the team building the software changes and new team members need to join the team or other team members need to perform more tasks.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261208,
      "meta": {},
      "text": "Change is very present in software development nowadays. During the development there are many fluctuating factors like customer wishes, available libraries/frameworks etc. \nThere may also be important bugs/exploits that come up and need to be fixed/prevent.\nA real world example for this is the Log4J exploit, which caused a flood of updates in many software products. \nDeveloping Software also doesn't stop after releasing the initial product, but includes continuing to work towards the customers desire/feedback.\n\nrequirement change: The customer's opinion changes or his knowledge improves, causing a change in what the customer wants. \ne.g. The customer now wants a smartphone app instead of a web page, because he realized it will get more customers.\n\ntechnology change: A new technology/library/framework becomes available,\ne.g release of a new framework like angular will cause some teams to restructure their project to the new framework.\n\norganziational changes: The customers team or your team is restructured, for example with new member or a replacement.\ne.g. the customer's contact for you gets fired and replaced by a new one. The new guy has slightly different requirements.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261991,
      "meta": {},
      "text": "There are many different reasons for change happening in software development.\n\nPhysical development occurring needs updates to use advantages of new improved hardware\nNewly developed attack vectors or tools used by attackers led to a lack of system security, so security improvement is needed.\nNew custom requirements lead to changes in system functionality\n\nNew laws cause changes of data protection regulation which need update of security policy and security system to fit the new policy needed.\nAn example of requirements changes is the new EU-General Data Protection Regulation (GDPR).\n It caused the need of e.g. website operators to change their data security policy in order to fit in the new regulation(Requirements changes).\n\nTechnology changes: touch screen development and development of sensors to detect the position of the device and its effect on mobile games.\nFor example, the \"Doodle Jump\" was firstly presented for key devices then it was upgraded for use of touchscreen instead of keys. Nowadays the game is even sensitive to the angle change you hold the device in.\nAn organizational change could be organizational growth, which causes e.g. a database to be expanded since there is more information to care about. For example when a company is sucessful it hires more people. The company needs a database with information about the workers: names, salary. If at the beginning a simple Excel table might be enough it will be too complicated to handle it when there will be thousands of workers. Apple might be a specific example for such a grouth - there were only few people at the beginning and now there are many thousands of people working for this company\n\nPlease be more specific and explain the reason behind the frequent occurrence of change in software development in more detail.\nCorrect explanation, but weak example.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262110,
      "meta": {},
      "text": "Software developent is agile, so everytime something can change. So for example when Creative Assembly noticed their game total war warhammer 3 is totally bugged, they canged their current goal to fix them first instead of releasing the new map, so they canged their current goal.\nRequirement changes exists, when the software goal changes. So for example if the customer wants to get a new feature to his software, its a requirement change.\nTechnology changes exists, when the team want to use another (most time better) techology (for example another program for developing or other external libraries).\nOrganizational changes exist, when for example the coder leaves and the team needs to find another coder.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262510,
      "meta": {},
      "text": "Change happens quite often in software development. This is because sometimes the customer changes the requirements of the software which leads to a organizational restructuring of the project. Another reason is, that often the written code has many external dependencies, which might be updated or changed with time. This means the code must be adapted in order to keep working. Sometimes it also happens, that the client requirements are understood wrongly or there are gaps in the problem description.\nIn the real world change is everywhere, all the time. In nature change is very often associated with the weather. There are many weather phenomena and they are changing quite often. Another example is climate change, which is a more complex a longer progress.\n\nRequirement changes are a common activity in software development. If the customer for example comes up with new ideas and solutions the development team has to integrate new features because the requirements changed.\nTechnology changes occur automatically when dependencies used in the project get updated or new dependencies are released. This happens for example when a framework which has been used by the development team to create the project's website becomes outdated and has to be replaced by another framework. Then the development team has to make changes to their project in order to keep the website running.\nOrganizational changes are changes made to the team structure and organization of the project. This happens for example if the software development team gets reassigned to another project or new members join an existing team.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263522,
      "meta": {},
      "text": "In software development, things are constantly changing because the environment constantly changes. There could for example be a change in a certain programming language for instance a new version of Java which introduces new features like Java 8 introduced the stream API back then, which requires software developers to change their behaviour and ways to develop as well to always be up to date and make use of newer and potentially more efficient features.\n\nAn example for requirements changes would be if the customer suddenly changed his mind about a part of his requested software. This leads to new requirements to the software, which the developers need to ensure are met in order to satisfy the customer and enhance the reputation of the team or the company.\n\nAn example for organizational changes would be if a company decides to change its \"definition of done\"(Scrum). As all Scrum teams must follow said definition, this would mean that a lot of things may need a rework, as former increments may now be no longer considered increments. This is a huge change to which the Scrum Teams would have to adapt to in order to maintain their productivity and quality of their products.\n\nAn example for technology changes would be AI. Today AI can already code pretty well, which is a technological change upon which developers must act to remain competitive. Of course there will always be certain things that only humans can do, but using newly developed technologies like a coding AI can tremendously decrease work load for tasks which are repetitive or generally tasks which the AI can do just as well as humans but much faster.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264606,
      "meta": {},
      "text": "Change is a big factor in software development. It can occur in nearly every step of the process. The world keeps advancing and so even the \"finished\" product can always be improved. For instance, the laws on computer sience are relatively new in our society and thus are subject to constant change. This of course impacts the software development process.\n\nFurthermore, the requirements of the project in general shift frequently. This can have many different reasons, like the stakeholders change their mind on a matter or a faulty problem statement or simple miscommunication.\n\nOur Technology keeps evolving and so we have to adapt. Take phones for an example. Almost every year a new product is released which is faster and improved. As software developer you have to keep your software up to date and make use of the technological advancements. You can´t release a new app for a product thats already outdated.\n\nAs software developement takes place over a substantial period of time and is a team effort, organizational challenges will present themselves. The team has to be agile, as change can always happen. For example, a team member could fall ill, or leave the team entirely. The management could change etc. The pandemic proved itself to be huge organizational challenge.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264731,
      "meta": {},
      "text": "Software Development ist ein Bereich der ungleich zu anderen Branchen oder Abläufen keine festgelegten Prozesse hat, sondern sich immer durch verschiedene Faktoren im Wandel befindet. Ein gutes Beispiel um dies zu verdeutlichen, ist das Internet. Wer sich vor zwanzig Jahren noch dagegen gesträubt hat eine Internetseite für sein Unternehmen zu bauen, kommt heute nicht um eine ganze IT Abteilung herum, welche dann auch eigene Firmen-Software entwickelt um Prozesse zu automatisieren und zu verbessern . Eines dieser Faktoren sind die requirements changes, also der Wandel von Nachfrage, Customer needs, aber auch dem technischen Verständnis der Gesellschaft, welche sich z.B durch die rasante Verbreitung von Smartphones abbilden lässt. Dies hatte natürlich eine enorme Nachfrage an Konsumprodukten wie Social Media und anderen Apps zur Folge. Passend dazu ist ein weiter Faktor die sogenannten technology changes, welche sich vor allem durch technologische Trends wie die Nutzung von Open Source Software, künstlicher Intelligenz und weiteren technischen Fortschritten an die sich jeder Developer und jedes Team anpassen muss um relevant zu bleiben. Der letzte Faktor sind die sogenannten organizational changes, welche sich vor allem durch ein Wandel in Business Strategie oder sogar des Produktes von Firmen oder Organisationen erkennen. Diesen Wandel erkennt man in fast jeder Branche, ob es ein Amazon ist, wessen Haupteinnahmequelle nicht mehr der Onlinehandel sondern die Bereitstellung von Serverleistung (AWS) ist, oder die gesamte Autobranche, welche in den Lieferengpässen der Corona Pandemie gemerkt hat, dass ein Tonnenschweres Auto schon lange keine Maschine sondern viel mehr ein Computer auf Rädern ist welches durch einen Chip Mangel technisch um Jahre nach hinten geworfen wird. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264739,
      "meta": {},
      "text": "Change happens in Software development because every Software need to be updated for many reasons.\nA change can happen if there is a problem in a system or not. Just to implement new techniques and improve the quality of the product. In our real world change is very important because it help us to stay always up to date for example changing the software of smartphones.\nThere are many types of changes.\nSometimes change happens because it's required. For example a customer want to add or to correct something special in his system. Also there is the technology change and these are to develop a system and provide it with new technologies. For example , an owner of a smartphones company wants always to add new technologies in the system of his smartphones. Finally the organizational changes is the process in which any company or organization try to change or develop its own operational methods, platforms and technologies. For example a start up can develop their own methods or their own system.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264764,
      "meta": {},
      "text": "Change happens in software development because we're in the age of technology. Not only because of that but basically when we're living in a world,where changes happen daily, we cant expect \"zero development in software\".\nAn example for change in our life can be the telephones, that we're using so easily and not thinking much into it but is interesting for our grandparents to see when we \"video call\" them :d\n\nLet's get to the three areas of changes, that I'm going to talk about shortly. These are: requirement changes, technology changes and organizational changes.\n\nRequirement changes: This change will happen even if the people involved in the project want it or not. I will explain what I mean by this sentence. Even if the people involved in a project agree on a set of requirements for their project, these requirements will probably not stay the way they have been discussed. For example if there is an application, and I am the user who has uploaded this application, I have some expectations from the app. And when I first upload it, i'll probably not like everything about it, and will demand for something different(like an update). And this can create a difference in the previously discussed requirements.\n\nTechnology changes: This is the most common thing everyone has an idea of. As the technology changes and develops everyday, we cant expect the software development to stay the same as it was years ago. I dont know if i can explain what I mean but for example when streams get introduced with java 8, then we cant go ahead and say \"no i dont like this\" and not use it.\n\nOrganizational changes: We talked about what a group and a team is in the first lecture. So an organizational change is also very important when it comes to a team working succesfully together, and always bringing out the best in each other. An example can be from my life. My sister applied for many jobs when she was trying to find a job, and some of them had tests based on the appliants personality and working style and when and how they work the most efficiently. I dont know if this is already a common thing in Germany but in my country not every place does this, so I wanted to give this as an example. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264792,
      "meta": {},
      "text": "Softwareentwicklung ist ein komplexer Begriff. Es gibt in der Entwicklungsphase viele Hürden, die man bewältigen muss, wie z. B. Anforderungen organisieren, Planung, Realisierbarkeit usw. Dementsprechend ist die Erwartung von Endprodukt nicht immer die tatsächliche Realität. Zusätzlich hat man gewisse Deadlines, die man einhalten muss um den Kunden nicht von der eigenen Inkompetenz zu enttäuschen. Schließlich lässt es sich durch die Beispiele sagen, dass es immer Veränderungen gibt.\n\nAngenommen man hat eine Software für Windowsgeräte entwickelt. Um sie z. B. auf Apple OS zu haben, ist es notwendig, dass die Software die neue Hardwareplattform unterstützt. Diese Veränderung kann die gesamte Softwareperformanz beeinflussen.\n\nBeispiele und Erklärungen für gewisse Veränderungen: \n\n1. Anforderungsänderung: In dem Entstehungsprozess kann es vorkommen, dass das Entwicklungsteam merkt, wie unpräzise das Anfangsdesign oder manch ignorierte Punkte doch zu relevanten geworden sind. Bspw. ein Ego-Shooter-Spiel für den Charakter besitzt keine Nachladefunktion oder die Map besitzt viele Glitches.\n\n2. Technologische Veränderungen: Man muss mit der Konkurrenz in der Technologieverbesserung mithalten oder sogar deutlich besser sein. Bspw. eine Software der AI muss effizienter und  schneller sein, d. h. gewisse Muster schneller erkennen, die menschliche Fähigkeiten in unterschiedlichen Punkten übersteigen und selber auf schnelle Problemlösungen kommen.\n\n3. Organisatorische Veränderungen: Man muss aufpassen, wo welche Ressourcen eingesetzt werden, welche Tools man implementieren soll und ob die Kenntnisse in gewissen Bereichen ausreichen um insgesamt besser zu voranschreiten. Dazu gibt es hin und wieder organisatorische Veränderungen. Bspw. beim Videoplayer hat der Nutzer keine Vor- oder Zurückspuloption.\n\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266225,
      "meta": {},
      "text": "Software development keeps changing because tools, methods and technology are changing extremely fast. Especially with the further development of agile technology, most of the companies realized the need to change their way of doing business. For example I witnessed a small automotive company's development of agile system in their IT department with a 5-people team.\nRequirements change: While technology are developing, requirements are also changing. Companies have to define requirements well, so that they can structure most of their daily work upon it. For example a software can be outsourced or produced in-house, this is a crucial decision and in order to take this decision, requirements should be set precautiosly.\nTechnology changes: With the tansformation from Silos to DevOps, faster and reliable programs became a need. In order to enable applications well for huge amount of users, business domains needed to be improved.\nOrganizational changes: with the transformation from waterfall system to agile system, companies had to restructure their IT and also other departments. Roles of people had changed. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266308,
      "meta": {},
      "text": "Changes in software development happen for several reasons. One reason is that technological innovations happen all the time. Because of that, you can always create new software or add new features to your product.\nFor example, when the smartphone was invented, many companies had to include applications for mobile devices in their development process.\n\nRequirements changes happen when the customer changes their mind about their demands. An example would be that the client says the software needs to developed with a lower budget and fewer features than previously planned.\n\nTechnology changes happen when new technological innovations are made that can improve the process of software development. An example would be git, which made it easier for multiple people coding together, which is why many companies started using it.\n\nOrganizational changes can happen when, for example, a new manager is assigned to a project. He may change the size of teams, the frequency of meetings, the time frame for objectives, etc.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266414,
      "meta": {},
      "text": "Changes in software development happens mostly for one reason : improving the product. This can be achieved in many ways. There might be missing requirements, so you add some. The performance of the product might be suboptimal, so you try to improve it. But you could also have misunderstood the purpose of the product altogether, which would lead to you having to adjust it accordingly. Each of these points requires you to change something. If for example you need to develop a communication service and focus on the quality of the transmission while you were supposed to focus on the number of people that can attend the call, then you would have to adjust it, so that the quality might be lower but the total amount of people allowed in a call increases. \nThis would also be a case of requirement change. Additionally there are also technology changes and organizational changes. Technology changes can occur, when your technology gets outdated. If you use a programming language that is just not optimized for your requirements it might be a good idea to change it.\nLastly organizational changes can occur when the personal changes for example. If the personal changes, so do their skills. If someone leaves the team that is the only one that is good certain aspects of programming that others might not be as good as, there might be a vacuum that needs to be filled but cant. At that point you might need to change the according part entirely.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262327,
      "meta": {},
      "text": "Change happens in software development, because it usually takes a long time to fully develop an application.\nIn that time, the customer might think of new requirements for the software, a new product is released that can be integrated into the application, or the development team is restructured.\n\nAn example in the real world would be the cloud, where developers need to use the platform specific APIs (e.g. using Google Firebases Firestore as storage for your app) while they otherwise would have used the API for a self-hosted application.\n\nA requirement change is, when the customer changes their mind and for example wants their website mobile optimized.\nA technology change is, when new technology becomes available, for example hardware accelerators for machine learning, which can have a huge speedup but requires the team to rewrite the software for the accelerator.\nAn organizational change is when the resources of the company that develops the software change. An example would be the developer working on the backend of a website leaving the company, which requires another member of the team to take over the backend or to train a new hire.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262878,
      "meta": {},
      "text": "Change in software development happens in multiple different subdomains. The change of the software within its development process and implementation is the most obvious aspect of change. Furthermore, change happens within the fields of requirements elicitation, analysis, design, validation of the system, delivery, and maintenance. Software development is a process that deals with changes from within, such as a change within the development team, as well as external influences like changes in the requirements of the end-user. Both have potential impacts on how the current software is perceived and how it would need to be adapted in the future. Change is an integral element of software development. Just like change happens within the construction of a building or within product development of a startup, software development is very similar. \nOrganizational changes describe changes in the setup of the bureaucratic and supervisory surrounding of the software that is being built. Administrative changes, changes in project management, or the people within a team can change. \nTechnology changes can be about the changes in complementary and supplementary software. This can be related to the rollout, collaboration, language in which the software is written, or new technologies that facilitate the need of the users (like the change from a typewriter to a keyboard attached to a computer or smartphone).\nRequirements changes encompass changes in the purpose and needs that a software caters to. Requirements changes can be changes in planned features triggered by users' desires based on the feedback that they give. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263527,
      "meta": {},
      "text": "Why does change happen in software development?\n\nChange in software development is inevitable. There is never “the perfect software”, that means that there is always something to improve, fix or tweak/optimize. Furthermore, change can also happen because of the pressure by customers to deliver something new or because of new hardware or software  requirements. The competition is also a big factor to consider. Almost every company wants to make money and grow their business and this is most of the time connected with change. Just to be that tiny bit better than your competition.\n\nAn example for change in the real world:\n\nChange in the real world for example is the development of real time graphics. These changes happen because of the desire to optimize, improve and the development of new hardware that can handle more complex tasks quicker.\n\nRequirements changes:\nDevelopment of for example ARM based operating systems and the requirement to make your software available for these kinds of systems. \n\nTechnology changes:\nNew processors or graphics cards that give you the opportunity to create more graphical powerful software.\n\nOrganizational changes:\nWith new technology sometimes there is the need for a new expert that knows everything about it. Therefore, this can lead to organizational changes.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263624,
      "meta": {},
      "text": "Change in Software Development occurs because of different reasons. Software Development is a dynamic field with new inventions being made every day, which can make the current workflow outdated or obsolete, thus requires change. Also government regulations or new requirements to the product could require to change the development. \nAn Example of change in the real world, that comes to my mind is the story with BlackBerry Phones, which were quite popular before iPhones and Android came around, because you had many features of a PC, but on your phone. Blackberry Phones had in contrast to modern Smartphones a keyboard instead of a touchscreen, and even with the invention of the multitouch touchscreens, Blackberry didn't bother to change it on their phones. Because not reacting to this change Blackberry eventually died and now nearly nobody is using Blackberry Phones anymore.\n\nTechnology changes are if one technology gets replaced by a new, more advanced one which makes the old one outdated, as seen in the Blackberry Example.\nOrganizational changes are changes, which are initiated by the people who organize the development project. \nRequirement changes can either come from the product owner who initiated the whole project and now wants it to have a different set of features or by the goverment with requires the project to change this because of new laws and restrictions.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263692,
      "meta": {},
      "text": "Software Entwicklung ist von vielen verschiedene Einflussfaktoren abhängig oder leicht zu beeinflussen. Diese Veränderungen können zur schlechten Weiterverarbeitung der Software führen. Falls eine Veränderung wirklich durchgeführt werden muss, dann müssen im schlimmsten Fall die gesamte Software von den Anfängen neu planen. Jede Änderung bringt eine eigene und andere Konsequenz mit sich. \n\n\nRequirements changes: \nDefinition: Veränedrungen sind ein wesentlicher Bestandteil der Software Entwicklung. Die Anforderungen eines Projektes befinden sich im stetigen Wandel und werden stark von Faktoren wie zum Beispiel: Marktschwankungen Nachfrage der Konsumenten, Konkurrenz, etc. \nDie Änderungen in den Anforderungen können sich schon am Start eines Projektes ereignen, und auch noch nach Fertigstellung und Veröffentlichung eines Projektes an Dauern und wieder neu kehren (Updates). \nKonkretes Beispiel für „requirements change”: Änderung der Requirements durch den Kunden oder Auftragsgeber\n\nTechnology changes: \nDie Technologie ändert sich ständig. Auch hat die Technologie verschiedene Fassetten. Alltägliche Beispiele wären die Internet Technologie, Mobile Computing oder aber auch die künstliche Intelligenz. \nDie rasanten Veränderungen wie Beispielsweise dem Internet, welches Unmengen von Daten pausenlos erstellt, sind maßgebliche Faktoren für die „technology changes“. Auch die Nachfrage nach Anpassung von Software für verschiedene Plattformen steigt nur. \n\nOrganizational changes: \nEin Software Engineering Projekt kann nicht nur mit dem Fachwissen der Programmierer zu Stande gebracht werden. Dazu wird Organisationstalent benötigt, da das Entwickeln einer Software auch Bestandteile wie zum Beispiel Kosten, Qualität oder auch Verlässlichkeit beinhaltet. Auch müssen regelmäßige Updates oder Wartungen auf Grund des stetigen Wandels in der technologischen und auch realen Welt durchgeführt werden. Man benötigt durchdachte Lösungen, um die organizational changes zu überwinden. \nDie Aufgabe ist es zum Beispiel, da Kosten und die Qualität zusammenhängen, Ressourcen so zu verteilen, sodass die Kundenzufriedenheit und der Vertrieb der Software so zusammenspielen, dass Gewinne erzielt werden können. Beispielsweise, werden des Öfteren Beta Versionen einer Software auf den Markt gebracht, um während der Entwicklungsphase, dennoch Mittel erzielt, um die Entwicklung weiter zu führen. \nUm eben genau diese Probleme zu lösen oder zu umgehen, benötigt es ausreichend und gute Organisation des Projektes. \n",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1264326,
      "meta": {},
      "text": "The answer is simple, because the world changes. And with that there are more uncertainties and problems. Facebook now Meta started using PHP, only available in the USA. But with time, more people start using it. So there is a potential problem for the security and optimizations. SO they change the languages to Node.js and REACT and made better encryption methods. TO keep up with the people and the new technology.\n\n-------\nrequirements changes: The client may change his view point of the product later. And the developers have to fix that. Or new laws or rules might come out, so the project has to be premade.\n\nTechnology changes: There are many programming languages and platforms (PC, mobile, consoles). And the technology improves every month, every year. If we compare 2002 with 2022. Flip-flop phones and analog phones only able to call and message someone in 2002. And now you can do anything on a phone. The same goes for programming languages. The most used always change from C to C++ to JAVA to Python to ...\n\nOrganizational changes: In an organization, the CEO or the Director can change. And with that he/she might change the budget, the rules, the workflow. And all that will affect the products as well as the teams working on them. For example, pushing the release date of a product earlier, this will make the team to work overtime or to publish the product without some of its functionalities.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264756,
      "meta": {},
      "text": "Software development is about finding ways to represent and adapt reality in the tech world. \nFor example 20 years ago when the internet was not common as it is now, there was no need for online shopping websites. However, nowadays even grocery shopping can be done online. In the pandemic, these developments in the tech area saved too many lives and even prevented the disease from more to spread, since people did not have to go in public to meet their basic needs. With these new and evolved needs and adapted software developments human life got much easier.\n\nAs these changes in real life, the software development processes are also constantly facing changes in the areas of requirements, technology changes, and organizational changes.\n\nFor example, in a project, it is common that the expectations of the stakeholders to change. Which results in changes in the project requirements. A real-life example of this can be a change in the budget. When the budget changes, the outcomes would also have to change. And it results in changes in the development process. \n\nIn another case, while dealing with complex requirements of a project the main requirements can be ignored or overlooked by developers. Organizational changes help to focus on the right things instead of concentrating on doing many things at once.\n\nA possible change can also occur in the area of technology. Since technology is evolving each and every day, a more suitable technology for a project can be found which also results in a change in the way of dealing with problems.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1265796,
      "meta": {},
      "text": "Why changes happen:\n\tAs time goes on new innovations and tech as well as customer demand lead to changing requirements in what your products need to offer. To not lag behind your competitors that constantly innovate you need to invest in keeping track of market trends as well as R&D to ensure your product stays at the top of what is possible. \n\tThe environment of software development needs to be agile to ensure that new non-functional and functional requirements can be met, preventing project failure. An example for this would be a company failing to switch to let their device run on a new operating system that is far superior and used by all their competitors. This would eventually lead to the project failing due to the customer base switching to the newer, more efficient models.\n\nRequirements changes: Whether it be the end-users or the customer, the requirements that a piece of software must meet can sometimes change on the fly. An example of this would be the user base of a website complaining about feature changes, leading to the development team needing to fix any issues that have popped up due to it or scrap the new additions entirely. \n\nTechnology changes: If new hardware gets released your software needs to be able to run on it properly, especially if your customers are planning on running your software using the new hardware. This can lead to teams needing to thoroughly test the new development environment to ensure quality. \n\nOrganizational changes: New members to a team need to be intergrated as smoothly as possible, preventing any potential disruptions to the workflow. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261183,
      "meta": {},
      "text": "In the last couple of decades it became more and more apparent that Software isn't something that is final or done after development. Most of todays systems, programs, apps etc. are constantly updated, revised and extended due to the need to meet regulations or to stay ahead of competition. For example browsers constantly need to improve security to ensure protection from new malware or other threats for security and privacy. If it would become clear that a browser is very unsafe people would most likely stop using it.\nThe requirements for a software, for example as mentioned beforehand a government regulations that the software needs to meet, could change in general or even during the active development of a software. Also the customer could als add a new requirement.\nThe technology used for a software is always dependent on the time and the newest, most efficient systems. For example the area of machine learning and deep learning is in constant progress and achieves more and more milestones for example was AlphaFold revolutionary for the prediction of protein folding. So if machine learning is part in a software that is to be developed one should make sure to use the best and newest technology that is affordable.\nAs mentioned in the lecture is the organization of software development is also a subject that is often talked about and attempted to improve. The trend to transform software development more into an iterative progress where mistakes are allowed and more and more communication is encouraged and embedded into the schedule are examples for those changes.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263039,
      "meta": {},
      "text": "Viele Veränderungen in der Software-Entwicklung lassen sich darauf zurückführen, dass frühere Entwicklungmethoden oft auf einen vordefinierten Ansatz zurückgreifen, der im Vergleich zu heutigen Methodiken zu ineffizienten und fehleranfälligen Resultaten führt. Heutzutage verschiebt sich der Schwerpunkt im Entwicklungsprozess immer mehr von linearen, zu agile Methodiken. Diese erlauben deutlich anpassungsfähigere und effizientere Entwicklungensprozesse von Software. \nEine der großen Hürden in der Software Entwicklungen ist der Umgang mit Veränderungen während des Entwicklungsprozesses. Durch agile Methoden kann mehr darauf eingegangen werden, was ein wichtiger Grund für die Veränderung in der Software-Entwicklung darstellt.\nVeränderungen in der Entwicklung kann man grob in drei Teilbereiche unterteilen. Diese werde ich im Folgenden erläutern. \nVeränderung der Anforderungen :\nAnforderungen an die Softwareentwicklung können sich sehr schnell ändern. Dies hat verschiedenste Gründe, alle haben jedoch gemein, dass der möglichst gute Umgang mit diesen Veränderungen für den Erfolg des Projektes essentiell ist. Ändert der Klient beispielsweise seine Geschäftsidee, oder entstehen Veränderungen im Anforderungsprofil der Geschäftsidee, müssen schnell neue Lösungen gefunden werden, die eine zufriedenstellende Antwort auf diese Veränderungen darstellen.\n\nVeränderung von Technologien : \nManche Technologien, die heutzutage bei der Entwicklung genutzt werden, können bei der Entwicklung sehr schnell obsolet werden. Hierauf muss bei der Software Entwicklung geachtet werden und notfalls neue Technologien mit einbezogen werden. \n\nVeränderungen in der Organisation:\nHeutzutage kann man eine starke Veränderung der Organisationsform von Softwareentwicklungsprojekten sehen. Da heutzutage der Einsatz von agilen Entwicklungsmethoden wie zum Beispiel \"Scrum\" an Beliebtheit zugenommen hat, gehen auch Veränderungen in der Organisationsform mit einher. So wird beispielsweise bei Scrum das Team in drei Teile eingeteilt. Dieses besteht aus dem ScrumMaster, dem Development Team und dem ProductOwner. \n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1263725,
      "meta": {},
      "text": "Software development ist an empirical process, not everything can be planned in advance. Because you are creating something new everytime upcoming problems might come as a surpise and you have to act and possibly adjust your product quickly. Startups often \"pivot\" multible times unitl finding out what their costumers really want, every of these pivots comes with massive change for every member of the startup. \nRequirement changes are changes in the customers or stakeholders needs or requirements. If you are building a software to simplify taxes by example, and a tax law changes, your software is useless until you updated it to the new requirements.\nThe term technology changes refers to the change that comes over time with new  and better technology that can or must be implemented in the product to stay ahead of competition by improving quality.\nOrganizational changes are changes in how the software is produced. If you switch increase time between Scrum meetings or switch to a completely other model, you have made an organizational change.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264448,
      "meta": {},
      "text": "technology changes:\nBeginnen wir mit dem technischen Wandel. Auf Grund des technischen Fortschritts und der ständigen Modernisierung gibt es immer mehr Möglichkeiten die Softwareentwicklung auf ein höheres Level zu bringen. Beispielsweise ermöglichen die Erweiterung von Software und Hardware einen gigantischen Fortschritt in der Softwareentwicklung. Dadurch dass immer mehr Möglichkeiten entstehen, gibt es immer kreativere Lösungsansätze, die letztendlich zur ständigen Veränderung/Verbesserung der Softwareentwicklung führen. Es gibt sowohl immer mehr Erweiterungen bisheriger Software/Produkte, als auch das Entstehen von komplett neuen und einzigartigen Software/Produkten. Diese andauernden Fortschritte führen aber auch zur Steigerung der Konkurrenz. Diese muss sich anpassen, um mithalten zu können und weiterhin auf dem Markt bestehen zu können und somit konkurrenzfähig zu bleiben. Sie muss nun auch innovieren, was zu einem ständigen Wettbewerb und Kreislauf führt. \n\norganizational changes:\nZudem gibt es aber nicht nur Veränderungen auf technologischer Ebene, sondern auch in der Arbeitsweise und Organisation der Softwareentwicklung. Auch hier wurden im Laufe der Zeit immer effektivere Methoden gefunden, um die Produktivität und Ergebnisse zu erhöhen. Ein Beispiel für eine aktuell sehr beliebte Arbeitsmethode ist derzeit Scrum.                                                                                                                                                                                      \n\nrequirements changes:\nDes Weiteren ändern sich auch die Anforderungen. Dieses ändern sich entsprechen des Marktes. Da der Markt sich ständig erweitert (z.B. durch technischen Wandel), ist eine Änderung (Erhöhung) der Anforderungen die Folge. Während beispielsweise vor einiger Zeit die Herausforderung war Navigationsgeräte herzustellen, ist es nun die Herausforderung selbstständig fahrende Autos herzustellen.\n\nEin allgemeines Beispiel für Änderungen ist AI (Artificial Intelligence). Diese hat sich so weit entwickelt, dass sie nun zum Alltag des menschlichen Lebens gehört (Smartphone Apps, Smart Cars wie Tesla, Smart Homes, …) und sie entwickelt sich immer weiter. Es gibt beispielsweise Diskussionen ob Maschinen im Stande sind menschliche Aufgaben wie die Pflege im Altersheim zu übernehmen. Also auch hier kann man die enorme Entwicklung sehen: Von Navigationsgeräten zur Pflege von Menschen in Altersheimen.                             \n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264472,
      "meta": {},
      "text": "Software Entwicklung wird heutzutage nicht mehr als ein großer Prozess gesehen, den man von Anfang bis Ende verfolgt, sondern vielmehr als ein, in ich sich iterierender, Prozess in dem immer wieder neue kleinere \"Subprozesse\" durchgeführt werden (Agile Software Development).\nDies ist sinnvoll, da im Laufe eines Software Entwicklungsprozess immer wieder neue Anforderungen und Veränderungen gestellt werden, welche effizient berücksichtigt werden müssen. Diese neuen Anforderungen können aus unterschiedlichsten Gründen im Laufe eines Projekts entstehen.\n\nEin Beispiel hierfür sind Requirements changes. Dies sind Veränderungen in den Anforderungen, die der Auftraggeber an das Projekt hat. Besonders häufig weiß der Auftraggeber zunächst selber nicht zu 100% was genau er gerne entwickelt haben möchte. Angefangen bei einem groben Problem Statement können deshalb im Laufe des Projekts noch weitere Anforderungen hinzu kommen, welche dann in den Prozess mit aufgenommen werden ( Stichwort Product Backlog bei Scrum, in dem diese neuen Anforderungen zunächst aufgenommen werden). Dies könnte beispielsweise dadurch begründet sein, dass ein Competitor ein ähnliches Produkt veröffentlicht hat, auf welches man reagieren muss.\n\nNeue Anforderungen können aber auch als Technology changes auftreten. Dies meint Veränderungen in der technischen Umsetzung des Projekts. So könnte es beispielsweise dazu kommen, dass im Laufe des Entwicklungsprozess neue Technologien (Innovationen) entwickelt werden, welche dann, um sie kompatibel mit der Software zu machen, Veränderungen in der momentanen Software erfordern.\n\nOrganizational Changes, sind Veränderung in der Organisation des Projekts. Dies könnten interne Probleme im Team verursachen, aber auch externe Veränderungen, bspw. gesetzliche, welche zusätzliche Datensicherheit erfordern und so die Organisation des Projekts verändern.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264634,
      "meta": {},
      "text": "Change happens due to updates in both technology and laws, or due to changes of concepts by the client or the team. But also the organization is a big point, since it describes the infrastructure, the worker and the budged, that are of several importance to the development. A theoretical example for a change would be a team developing a software to store passwords, but during the development, news reach them, that state, that the encryption algorithm, they wanted to use, got cracked. Therefore they now have to seek for alternatives.\n\nRequirement changes: The client wants to modify requirements or the team wants to improve one aspect of the development. E.g. instead of a video, the client wants a picture on the start-page of their new website.\n\nTechnology changes: A new technology (mostly better) could for example deliver better performance in speed and performance. Despite the team having already started the development with the old technology, they decide to switch to the new one. For example machine learning could be a more appropriate way of solving a certain type of task, than by solving it via traditional programming. In this example the change during the development could be due to the release of a new library.\n\nOrganizational changes: This change mainly concerns the organization and therefore also the team. For example the budged gets shortened and the organization cannot pay all workers and the infrastructure for the software also can't be built appropriately.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264786,
      "meta": {},
      "text": "When something like software development is in question, changes are bound to happen. There's a constant need for improvement, augmentation and just stuff in general that will either bring profit or make life better or something along those lines. There's also a possibility that change can be caused because of some new laws/rules or it can just simply arise because of some worldwide event. An example of this would be the switch from on premise to cloud computing. People needed something that will make it easier to store data and also result in less expenses. \nRequirement change happens when, for example, a new law regarding safety or a new rule has been created and we have to adapt to that requirement, or an even better example is when a lot of people start using a certain variation of a product and there becomes a need for that product more than other variations, change is needed because adaptation is required in order to stay on the market.\nTechnology change happens when a new type of technology is invented and it shows better results than the previously used technology and in order to keep up with the upkeep, a change is need, for example the switch from on premise to cloud computing, almost all of the companies worldwide now use cloud computing because it shows better results.\nOrganisational change happens when, for instance, a new boss is appointed as the top position of a company and he doesn't like the way the company functions, meaning some organisational change is going to happen by firing some members or changing the staff.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264939,
      "meta": {},
      "text": "in software developement Change happens due to some forces that affect software development. A example was the big scandal of log3. This led to the big reshifting of systems that were in danger by that security breach. That's why it is very important to have really agile methods. Requirements changes is when the client that wants to have the software changes its requirements for the software project. For example if a client wants to have a new feature that should be incorporated in the software. Technology changes are changes of the technology itself. For example if a new python version is released that behaves a bit different (python 2 versus python 3) The last type of changes are organizational changes. So for example if an important person, that has a lot of knowledge about a project leaves the project. If this happens you need to reorganize your project. \n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265996,
      "meta": {},
      "text": "Change in Software development happens because of our progress in technology and knowledge. Every year we invent new possibilities to improve software development. That causes that we have to adapt to our progresses to remain relevant to the market. In the real world an example for change would be the car industry. Because of our technological development and to adapt on the circumstances of climate change we slowly switch from cars engined by fuel to other ways power our vehicles like electricity mobility.\n\nRequirement changes develop if a product for example needs to fulfill new conditions and needs to adapt to them.\nA good example would be again the car industry qhich needs to adapt their cars to the new conditions caused by climate change. \nTechnology changes develop because technology is getting better and better. To remain relevant to the market we need to use these new technologies and use them for our own advantage. An example are the mobilephones which are getting better and better, because of new technology, what is used by the mobile phone manufacturers to stay relevant for the customers.\nAn organisational change can happen because of a personnel change, for example if a manager of a business leaves and theres a new one, he can maybe swap the strategy of the company.\n\n\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266324,
      "meta": {},
      "text": "It is safe to say that the fact that software development evolves has a huge impact over our lives. \nHow is that so? We all value our time, especially the time we can spend on whatever we want, excluding our everyday work.\nEvery branch of today's world is slowly (or quickly in some cases) moving towards digitalization. A great example of how software development changed our world would be archives - those we explore to find out the history of our ancestors.\nIn the past we had to go all over different documents and check each one carefully. What a time waste! Now we can just use the software shared by archives to quickly filter all documents they possess (so it's even more than just uploaded scans as it worked in the past) and eventually find what we want - Arolsen Archives would be a great example here.\nObviously, the requirements are changing accordingly. The performance of average PC is unimaginably better than in, for instance, 90’s. Consequently programmers are not that limited. However, with the technology changes such as new C++ standards, it is also required to learn additional things. Switching between C and C++ in late 90’s allowed programmers to use classes (not just functions!), inheritance, namespaces (std might be the best example here – instead of writing std:: all over, we can just use the namespace thing) or the overloading.  Being a good programmers also means that you have to stay up to date and adapt to changes – which always broadens your mind.\nRegarding organizational changes, we have to mention tools such as GIT and JIRA. There are various ways for team leaders to have a control over the projects. The key factor here, once again, is the time. If we keep recording our changes and code and saving them day by day to eventually come back is another way to waste your time. Tools such as GIT have a huge impact here since they allow you to check what changes have been exactly made and when. We can have different development branches – another unimaginably important feature for the team leader. JIRA is a tool well integrated with GIT. We can use it to easily assign tasks to our team members, see their progress, set the due dates and make the whole project goals a bit clearer for everyone.\nSummarizing, it doesn’t really matter whether we are programmers or not - software development definitely makes our life easier and more enjoyable.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266463,
      "meta": {},
      "text": "Change in software development happens because it is not a standardized, predefined process like manufacturing goods. Development can be unexpectedly influenced for example by bugs popping up. Requirements changes are changes the customer makes to his request, for example adding in new features. Technology changes describes the phenomenon of new, more advanced technologies becoming available. Most of the time, existing problems can be solved a lot easier with new technologies, so changes have to be made to the project to incorporate the new technology. Organizational change is required because the ever-evolving technologies and requirements changes are hard to implement without the development team being able to adapt. Likewise, old predefined development methods are being abandoned in favor of development methods such as Scrum, where you revise the whole project every week or so to be able to adapt fast to requirement changes.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266479,
      "meta": {},
      "text": "One of the main reasons to make changes in software (update it) is the risk of security breaches. Many of ordinary people (not like us, excellent TUM Computer Science students) do not have a idea how serious those security problems could be. They think that it could happen only in film or in worldwide-known companies like Facebook or Twitter. Unfortunately, the exploitation of security flaws is not just a theory. Criminals willingly exploit known software vulnerabilities to achieve their goal of stealing money from a bank account or of getting access to your personal informations. An example is sending phishing emails that contain an attachment that is designed to exploit a vulnerability in your computer’s software (such as MS Office or Adobe Reader) to install malware. If these holes in software are discovered, the vendors will make efforts to deploy new versions to resolve such issues as soon as possible. That’s why it’s important to keep your computer or phone up to date. If you upgrade your software to a newer and often more secure version, criminals are much less likely to attack you and get your data.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1261981,
      "meta": {},
      "text": "Because the world of software has the underlying aspect of creativity and human mistakes, it will always experience change. Since humans are the ones mostly writing code, every now and then things such as zero day exploits will appear in important parts of a product. The ability to adapt to changes like these is critical in an ever changing environment since they affect the own position on the market.\nRequirements changes are one part of the equation in software development. It is the change mainly generated by law, the expectations by users and the stakeholders. A good example for law enforcement is the \"DsGvo\" which required websites to first ask the user for consent about using cookies.\nTechnology changes are quite important as well, since a company should always invest in new fields of technology to not fall behind in competition. For example Nokia did not invest in smartphones enough which turned out to be a mistake because smartphones skyrocketed in market share.\nLastly, organizational changes are about optimizing the process of developing software in terms of the team.\nAs one might expect, having a consistent workflow as a team most likely improves the performance of a team. \nThis is where concepts like scrum play an important role, since allow groups of coworkers to function as a real team and thereby improving delivery of good software. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262196,
      "meta": {},
      "text": "Change can happen at any time, any place, any situation and everybody needs to react on that, as well our software. During software development the requirements, what the software should be able to do, can change, the environment of development can change, the people and working time can change.... \nOne of the most obvious changes in the real world is the covid19 pandemic. Now, everybody needs to wear a mask in the supermarket. \n\nRequirement change means, that someone, who wants to have the software, customer or end user, wants the software to do some small things different or additionally. For example, the customer orders a gaming application for iPhones. During development he then also wants the app to adapt to android smartphones. The software does not need to be changed completly, just some small adaptations need to be added to react on this requirement change.\nTechnology change happens, if there are new inventions, that are advantageous to use. Regularly there do appear faster and faster processors. Software and Hardware needs to deal with that progress. \nOrganizational changes means a change in something that structures or strategieses the software project. Maybe during development it is decided to change the project leader. This could affect some strategical decisions for the software or the motivation of the developers.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265802,
      "meta": {},
      "text": "Change in software development happen because of the changing needs of people, evolving technology, a competitive market  and a growing numbers of users.\n\nAn important change in the real world was from On-Premise to Cloud Computing.\n\nrequirement changes can happen when the customer is not satisfied with the product or has additional requests to the software.\n\nA technological change is defined as  increased efficiency of an product.For example The computer had a lot of technological while back then you couldnt do much  but calculate you now have the capacity to do many different tasks. Quantum Computers will also inflict a technological change. \n\norganizational changes are changes that occur in the work enviroment such as adding, removing and replacing staff members, adding new fields in a company or moving to another location.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262039,
      "meta": {},
      "text": "Changes are common in software development. According to the definition of software engineering, we are required to solve different problems in an ever-changing context. \nDue to the technology development, the customers always come up with new requirements. So, a software engineering team must adapt to the new environment, learning new development tools and new concept. For example, Facebook has already changed its name to meta for the next step of development. \n\nThere are usually three areas of changes, requirements change, technology changes, and organizational changes. \nRequirements change frequently. This could happen because of missing requirement, need misunderstanding and external reasons. To ensure the software high-quality developed, implement the highest priority would be helpful.\nThere is always new technology. The technology improvement is always strongly connected to the software engineering. Years ago, we did not have 5G. But now , 5G is already in our life and it is able to raise the development process to the next level. Also, without the new concept or new techs, we will be not able to do some specialized production. \nOrganizational changes might take place because of the change in a company’s structure, strategy or procedures. It may change the way things are done. For example, employee training .The company held employee training, in order to let them learn new skills and also develop within changes. The developer are trained to work by a new method to fit in the future challenges and competitions.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263269,
      "meta": {},
      "text": "Why change happens: As science offers new abilities and societies have new demands, software development has to adapt to the change, example: new progamming languages: Machine Code 1949 -> Java 1995. \n\nRequirements change: change from the customer or legal side, example: legal regulations requires adaptation, example: IT Securtiy laws \nTechnology change: changes in new technologies, example: Blockchain or Clouds\nOrganizational change: change in the way of doing projects, teaming or hirarchy, example: In-house -> outsourcing",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263854,
      "meta": {},
      "text": "Software development has changed quite drastically over the years. Back in the days it was thought of, as somewhat of a determined process where you get the same output every time you get the team the same input (factory like). Nowadays, people have realized that the process of software development is definitely not deterministic and can not be replicated 1:1 every time you get the same input. There are many factors that play into creating a software that best suits a given problem such as time, money, commitment to the project, connections within the team, etc. so for example: A software that had to be rushed because the customer gave an overambitious deadline, very much differs from one that had the same input but adequate time.\nRequirement changes:\nIf the customer gave the order to develop an app that can track your friend's location, and you are almost done but then a global pandemic breaks out and the customer wants you to add a corona tracking function, your requirements just changed.\nTechnology changes:\nWhen mid-development a new Windows version is coming out, you and your team have to adapt to that and also develop a version for the new windows.\nOrganizational changes:\nIf during the development phase, the CEO of the company changes and the new one has a different work ethic, and he changes for example the sizes of teams within the company, and now you're missing a College that is an Organizational change. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263874,
      "meta": {},
      "text": "In every software development project, the team has to deal with changes over the project duration. Changes can occur in different areas, in the external environment of the project or internally. When changes occur you consequently have to restructure your work and change your initial plan. This is why the way the traditional planned software development changed into a more agile way of working. Thus when changes within the project team occur such as personal changes the team can adapt more quickly. There are a lot of different areas where change can happen.\nA huge area of change is due to new requirements or needs from the client. If e.g he demands a different function for an App that he ordered, the developers need to adapt the affected parts and maybe change existing code or prioritize other tasks than initially intended. This is the area of requirements changes that occur during the project. You, therefore, need an agile way of working in order to be able to react in a flexible way.\nThe second area is technology change which is more of an external component. There are constantly new technologies emerging or used in an organization. Whether it's in the solution space or simply in the market. In order to always foresee the latest trends, you need to be innovative and adopt new technologies that often make you more efficient.\nThe last change area is organizational change. A company is constantly changing due to internal and external factors. Those may be because of management decisions, new legal regulations or new competitors on the market. Thus software development also faces changes in order to stay competitive and attire to new legal constraints.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264090,
      "meta": {},
      "text": "Change can happen during software development because of demands from the software market where software has to be as efficient as possible, but also it can be because of the demand from the client itself. Without these changes, the software would be less valuable in the market or the client can refuse to accept the built software. An example for the change can be seen with programming languages a certain team is using to develop the software. A combination of SQL as language for database and Java as backend might not be as efficient as NoSQL and Python with Pandas for making software related to data analysis and data science. Therefore, a change in the development is necessary.\n\nRequirement changes are changes that are affected/influenced by the stakeholders/users/clients. For example, a user may change their mind mid-development. Before they prioritize speed more than safety, but now they want a safer software for them. Therefore, the development also has to change accordingly.\n\nTechnological changes are necessary changes in software development related to the technology used, in this case for example the programming language as stated above before. If the team is too late to adapt to the changes, the software will automatically have less value in the market. For example, if Python has a bigger market than Java now and if there is no technological change in the development whatsoever, the developed software will be less acceptable in the market, unless it performs much better than the default Python software. \n\nOrganizational changes can be related to team organization or something completely bigger than that that is still connected with the software company. Team organization change can be necessary when a group of software developers there failed to achieve the essential goals of the job assigned to them. The one in charge probably has to be changed. Related to the company, business relationship with different companies result in different organizational needs and necessity, which results in organizational changes during software development.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264224,
      "meta": {},
      "text": "With software engineering we try to solve real world problems by making use of computers.\nOur real world is constantly changing in many areas. With software development being tied so close to what is happening in the real world and which problems are arising, software engineering must deal with constant change.\nFor example, I must develop a Software for a subway ticket machine, which lets you buy tickets with physical currency. But now my client has saw, that customers prefer to pay via card and wants the machine to also accept that. This is a change in the real-world and I must adapt my Software to it. This constant change is a reason for agile methods in software engineering to react quick. \n\nIn general, we distinguish between three types of change in Software development.\n\nRequirements change means that the customers’ requirements change (as in my example) or my understanding of them. I have to adapt my software to it. \n\nTechnological change means that today’s technologies in use will likely be obsolete in a few years. Thus, the technology that is being used to develop software will change. Today I might use SQL databases for a dwh but in a few years I might have to use more and more NoSQL. \n\nAnother type is organizational change. Organizations are constantly changing, whether it is their strategy, or culture. If the competitive landscape changes a company might want to change strategically by building a greater online presence, this will also affect a developer, who must develop this. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265070,
      "meta": {},
      "text": "In software development, Change needs to happen for our Software to improve. These Changes can also be seen in the real world, where for example a Software for a User Interface or the reprogramming of it can save People much Time, resources and money.\nA change of requirement in software development can simply be a more or less sophisticated goal, changing the requirements to be higher or lower. For example, while developing a shopping site, users might be unhappy that certain quality of life functions are not present, which gives changes the requirements for the software to satisfy the customer. A change in technology can happen through new chips and cards, which may change the way things are being programmed. A change of organisation might occur, when a team isn’t being as productive as it can be.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265960,
      "meta": {},
      "text": "Change in software developement occurs during the problem is solved. The process of software developement \nincludes the comparison of the current application with the goals of the whole project. That leads to a constant adjustation of the current models or application.  One example is the developement of an mobile app where after the first tests of user interaction are done more possible things the app has to deal with come up. Then the whole user interaction may be readjusted.\n\nRequirement changes are changes where the user or the client who employed the developement team has new ideas on what the developed project should be able to do, or the task becomes more concrete. An example is a mobile game which already works, but the client now also wants the language to be changed, which was not part of the original task.\n\nTechnology changes happen when there come out new technical features and the application has to deal with them, an example would be the usage of a mobile app on the newest version of the operating system of the mobile phone.\n\nOrganizaional changes occur if the process how the developement is managed changes, an example would be that a person drops out of the developement team and the distribution of tasks has to be arranged in a different way.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266126,
      "meta": {},
      "text": "1. As the word already says, it is a development. From the point of the Problem statement of the customer to the software system for the user there is a long process with various people involved, the development team. Often the requirements that the customer states are incomplete or he will change his requirements throughout the process. But also the development team has to adapt often things while testing to match the desired design and functionalities.\n\n2. An example could be that in an industrial firm a manager wants to make a workflow more efficient by building an application. Therefore he speaks with a development team of his firm that builds him the Application. Throughout the process some software firm brings out a tool that exactly meets the requirements of the manager. Because of this external influence, the firm would either buy this software and cancel its own project, or adapt its application so it has all the desired features of the already existing software that the manager now wants. \n\n3. \n-There are changes because of like or of necessity. Either new features and functionalities are added, because of the designer or the customer that has more ideas through the process, but these are not mandatory. Or the developers see a need for the success of the software.\n\n-New technologies can affect the execution of the project plan halfway through the lifecycle. Often the competition develops new technologies and oneself wants/has to catch up.\n\n-Organizational structure changes (a new manager or customer) could mean new requirements or just the end of the project.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266242,
      "meta": {},
      "text": "Change in Software development is caused by the circumstances of the project changing in a way, that the current plan is no longer optimal. From 1983 to 1985, the video game console industry in America almost completly crashed. The quality of the products for these consoles, developed by third-party companies was getting lower and lower. Therefore less people were interrested in video games. The big companies like Atari and the third-party developers did not manage to adapt to those changes, by. e.g. raising product quality.\n\nRequirement changes are changes in the needs of the customer. While most projects got a clear mission statement, listing what the end product should do, the basic goal is to get something that fits the needs of the customers. And as the need of the customers are changing, the software might need to adapt to those. Therefore the development needs to be adjusted to work towards the updated goals. As an example a customer corperation could have merged with a foreign corperation and they want the tool do support both languages of the corperations.\nTechnology changes are caused by new tech standards, new software and changes to existing software.\n As an example, when a new operating system gets realeased, like Windows 11 and the customer changes their operating systems to the new one, the software needs to be compatible with the new operating system. \nOrganizational changes, are changes to how things are organized. This could be because new members join the team and/or others are leaving the team. Tasks might need to be reassigned or work load can be redistributed.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261948,
      "meta": {},
      "text": "In general, change occurs in software development because the assumptions made beforehand do not hold anymore or things happen that weren't anticipated. The developers and project managers notice and have to make adjustments. Wrong assumptions can be made, for example, about the time needed to finish a project (deadline delayed)  or it turns out that a problem can't be solved as expected and a workaround is necessary. For example, the code the developers  wrote is running slower than assumed due to a too optimistic estimation about an algorithm's runtime. The code is rewritten so that is exploits multithreading; the performance improves, and the code runs as fast as expected.\n\nRequirements changes: The customer decides that he wants to have more or different features than originally requested. \nExample: He ordered a software system that helps him manage his company's sales. After a talk with his company's employees, he finds out that they would like to have remote access to the system so that they can work from home more often. This extra feature has to be implemented by the developers.\n\nTechnology changes:  New innovations, hardware or software make an adjustment necessary to keep up.\nExample: In 2021, hackers figured out how to exploit log4j. If the customer's software is affected, the developers must react immediately.\n\nOrganizational change: Financial or management circumstances affect time or monetary resources for a project. \nExample: With falling sales figures, the customer has to cut the budget for the software he ordered. The developers adjust and make the necessary changes (less functionality, etc.) so that they can still deliver a good product within their new limitations.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262255,
      "meta": {},
      "text": "\n\nBecause of the unexpected environmental change,  rapid optimization of technologies and consolidation or takeovers of companies, change will definitely take place during the software development phases.\nDuring the software development, some changes might take place since the requirements of customers can be changed because of the unexpected environmental change, and technologies used for performing certain tasks might be changed for higher productivity due to the innovation. \nFor example, a local shop might ask a software engineering team to develop software for automating the entire cashiering process. But due to the corona pandemic, people rather shop online so that they might change their demand into designing an online shop application.\nAlso if a software engineering team has already established the plan, however, meanwhile a new algorithm was designed which can remarkably increase the productivity. This team would likely introduce this new algorithm which cause the technology changes.\nAlso if the company of the software engineering team is taken over by the other company, and the current company decides to change the scale of each team will lead to organizational changes.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264199,
      "meta": {},
      "text": "Change is something that none of us can stop. The world of software development is not exempt from change. Technology must evolve in order to improve our quality of life. Developers must improve in order to keep up with the evolving of technology. If we take a look at the internet just 10 to 15 years back, we can see how much things changed. We went from mostly text-based webpages to lots of content in all forms: photos, videos, games, programs, software and so on. \n\nThe software we develop nowadays has changed very much since the last years. There is a constant requirement for privacy for example in massaging apps like whatsapp or telegram that now offer encryption on both messages and calls. Games now require better anti-piracy and anti-hacking software. Our phones need operating systems with better and more secure apps. \n\nOne big step we took was when more and more web2 applications started to appear. Nowadays we seem to transition towards web3 which is a new technology. We have changed the way we interact with content online. We now have virtual reality. New technologies like autonomous cars and robots have emerged. Technology will forever be on a road to change (for the better hopefully). \n\nIn order to optimise and improve the way we work, we also has to do some organisational changes. A simple method like replacing the so called “big bang” integration with continuous integration works wonders. Or a newer organisation style like scrum works also. \n\n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264801,
      "meta": {},
      "text": "Change happens as developers get more experienced :)",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265372,
      "meta": {},
      "text": "Changes occur frequently in software developement. This can happen, because the requirements of the clients change (which they will). A real example is, that there is a new law, that new cars have to fulfill a certain safety standard, which means that they have to be able to report an accident automatically. That is of course a new requirement which forces changes in software. \nRequirement changes occur all the time. Mostly because the customer has not a finished product in mind, when defining the requirements, but as your software turns more and more into a working product chances are that the customer finds optimization potential or new features, which lead to change.\nOrganizational changes are changes, which happen because of a change of a higher organization, for example a new law (as in the example above).\nIn technology changes you change your used (software) technology to a usually newer, better one. This happens all the time. Software environments usually last just about 5 to 15 years till they are outdated, that is why software engineering is considered as a continuous learning process.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266168,
      "meta": {},
      "text": "Software development is dealing with change and complexity while trying to solve the problem.\nThe reason why change happens in software development is because there are complex problems which cannot be solved if the problem description is not changed.\nFirst of all you have to understand what the problem is then you divide it into smaller pieces.\nThe pieces together get put into a larger structure.\nA problem is solved by proposing a solution and a plan and engineer a system based on the proposed solution using a good design.\nTo overcome the complexity you have to create abstractions and models. \nThe first step to deal with change is to elicit requirements which need to be implemented. The problem needs to be analysed and designed to continue the process. After validating the system the changes are getting delivered.\nYou can use UML to deal with change especially while analysing end designing through models which enable developers to specify a future system.\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261970,
      "meta": {},
      "text": "Changes in software development occur dynamically. These phenomena can be easily visualized by comparing the software developing environment between nowadays and in the 1990s. \nBack then, the main programming method was based on C-programming on DOS. Nowadays, they are associated with the concept of the object-oriented programming.  \n\nRequirement plays an important role which describes the functionality of the system and the milestone to satisfy the clients facilitating the communication among developers, clients, and users to define a new system. Requirement changes can occur due to many factors such as: \n-\tchanges in business and technology environments \n-\tconflict of interest between various stakeholders due to individual priorities and requirements and failure of communication \n\nDue to the technology changes ways of developing a software has diversified. One could clearly choose among various programming languages considering its means of software. C and C++ was used for high performance and optimization, java for data processing in networking environments. Though, due to the technology changes, a myriad of new programming languages such as JavaScript and Rust are introduced providing more functionalities and possibilities in ways to develop a software. \n\nRegarding changes in organisation, there has been a transition from traditional team to a self-organizing agile team. Unlike a traditional team following a hierarchical structure of a project manager being the team lead, every participant of an agile team communicates on the equal level. This organization change has occurred to cope with labor force shortage enabling flexible respond to the frequent change of requirements. \n\n\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262022,
      "meta": {},
      "text": "Changes happen because different customers have different wishes or there are technology changes. Of course, different team members also make the forming of a team different, as visions are different or the expectations what the team wants to achieve. It's up to the team members to get in stage 4 of team development so to trust and motivate each other or not and only a pseudo-team is formed.\n\nrequirement changes: customers, users, domain experts and stackholders have different ideas what the product looks like. So the analysis of a problem is different. You have to devide it into smaller parts like \"divide and conquer\" and than make the synthesis to a bigger result.\n\ntechnology changes: different program languages for die implementation and design of a product, another compiler and IDEs\n\norganizational changes: delivery of the product or the validation of the system",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262287,
      "meta": {},
      "text": "Die Welt verändert sich stätig. Wir sind von Feuer und Metallen zur Kraft des Dampfes gekommen und mit dieser heutzutage zur Elektrizität. Doch Veränderungen passieren in immer kürzeren abständen. Gerade in der Informatik, dadurch das wir immer mehr Möglichkeiten durch die Hardware existieren. Können diese Veränderungen in der Software passieren. Während früher ein Programm groß war mit 5 MB, ist es heute recht klein mit 100MB. Was früher ein vollwertiger Personal Computer war ist heute in unserem Smartphone drin. Somit musste sich die Software auch daran anpassen, an die neuen Systeme wie ein Computer funktioniert (zB x86). Wenn man sich 3D Modelliere Programme anschaut brauchen die um einiges mehr Leistungen, doch kann man damit Bilder erschaffen die von der Realität schwer differenzierbar sind. Die Veränderung der Technology brachte auch Veränderung in der Software, zB in Smartphones (SP). Jedes Jahr kommt ein neue SP Reihe heraus und  früheren Reihen werden nicht mehr unterstützt. Die Apps die für solche SP herauskommen werden dadurch schnell Outdated und funktionieren nicht mehr mit dem neueren Betriebssystem. Dies benötigt auch Struktur um dann solche Apps schneller zu Updaten. Organisatorisch haben sich GIT Worflows gebildet um Updates schneller raus zu bekommen. Als ein Beispiel für solch ein GIT Workflow existiert der Master Branch, der die derzeitige Stabile Version enthält. Neben diesen Branch hat man den Alpha und Beta Branch die neue Features bekommen und sie testet. Als letzter Branch existiert der Hotfix Branch. Dieser ist da um schnell Updates in der Stabilen Version zu bekommen gegen Bugs.",
      "score": 58.3,
      "language": "GERMAN"
    },
    {
      "id": 1262314,
      "meta": {},
      "text": "As the goal of software development is creating a product that is in demand, useful and can compete with others in its domain, it is important to adapt to the market environment. This includes changes in client's demands, laws, technological progress, but also changes within a development team or project as a result of an empirical process which rests on experience-based adaptation.\nKraydel, for example, a TV video calling and well-being monitoring firm used by the NHS innovated during the pandemic, adding an embedded camera and pulse oximeter to their product which can automatically alert carers and family members. Through this they have been able to respond to their clients' special needs and demands in the context of a Covid-related change in patient-professional relationships. \n\nAs mentioned previously, there are different types of changes, one being technology change in which technological advancement for example leads to developers needing to adapt to new innovations, which might also enable them to do things that were not possible beforehand. This could be new programming languages or for example the development of 5G. \nAnother type of change are requirements changes which can be lead back to the user's changed needs and required functionalities of the software. An example could be the one stated before related to the pandemic or an adjustment of software in response to new IT laws which might for instance raise new issues concerning data security and privacy. \nLastly, organizational changes happen within the firm or development team. This could concern the organizational structure of the group or the process type, like changing from a waterfall to an agile methodology.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262482,
      "meta": {},
      "text": "Change is a very usual and common topic in software development. The main reasons for this are that programs and software projects become more and more complex. Also, in many cases change is needed in software development as the requirements of the later user of the software were not clear to the developer in the beginning of the project because there was a communication gap between the two parties. An example of such a change could be the development of a software system for a big bank. Because of many changes on that field, with newly emerging direct banks also the provided software must change and evolve. That can be a process of many years and many iterations of software improvements. During that years the employees on both sides can change and that then requires the new employees to get to know the project and the goals. That is why there is constant change in software development.\n\nRequirement change:\nAn example here would be that through the process of software development the programmer gets to know the problem better and thus can reallocate the main emphasis to meet the newly recognized requirements.\n\nTechnology change:\nAn example for technology change would be the digital transformation. Where nowadays the trends of mobile device software or artificial intelligence bring up new challenges in software development that were not there before and require a dynamic adaptation.\n\nOrganizational changes:\nAn example here would be that the later user of the software needs to change the requirements of the software due to changes inside his organization (e.g. new management approaches) that require new or adapted features and tools.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262540,
      "meta": {},
      "text": "Changes in software development happen all the time, since it is a field that is very adaptable. It is (or at least appears to be) easier to change a specific coding objective than it is to change an entire line of production. Furthermore, any technology related work is currently very prone to changes, as technology changes and improves quickly. Moreover, software development also changes for the same reason as almost all other fields, such as organizational changes. A company might for example replace some of the management and the new managers modus operandi differentiates from the former mangers. There are multiple types of changes, for example:\nRequirement changes: changes in the expectation of the software you are developing. For example, a project may originally be planned to only be used in a transition period, but while you work on it management might decide to extend its expected life span, forcing you to restructure your project.\nTechnology changes: software development is a fast-changing field, since technology gets better and faster every day. A new technology, that may be beneficial to the project you are working on may be released at any time during the project, and you may want to change your project to adapt to this new (beneficial) technology. For example, machine learning may soon become better and easier to implement and therefor be a viable/better option for some projects.\nOrganizational changes: Your team may also experience organizational changes, for example when a new member is added to the group, or another member is expected to be sick for an extended period of time. This may lead to changes in responsibilities and the need for communication with the client.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262831,
      "meta": {},
      "text": "Change is inevitable in software development. The main reason why change happens is, that software engineering is an agile environment. One of the saddest examples is the BlackBerry phones. They were once the choice of the businessman, with their beloved physical keyboards. However, RIM didn't catch up on the changes in the industry, the rise of the Multi-Touch screen smartphones. Now, RIM (named Blackberry, after 2013) is no longer a competitor in smartphone industry and is only remembered with their disappointing downfall.\n\nRequirement changes happen frequently. One of the most common requirement changes happen because of a poorly defined requirement development process or an overly optimistic budget/schedule. So the requirements can change within the development and become more and more realistic.\n\nThe technology is an ever evolving field and we see technological breakthroughs all the time. The changes will bring greater expectations from the customer, and the software developer needs to be agile enough to keep up with the new technologies and remain a competitor in the industry. (cf. Blackberry example)\n\nThe last change that can happen is the organizational changes. This is what happened to BlackBerry after their downfall in mobile phone industry. After making hardware for years, they turned themselves to a reliable security software development firm. A change in fields come with a change of organization. However, the organizational changes are not only limited to that, an organizational change can occur after e.g a takeover from an another company etc.\n\nSo the best precaution for software engineers is to be ready for changes all the time.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264718,
      "meta": {},
      "text": "Working on software for a client means that you always have to meet the standards of your client. Whether your client decides mid-project to change the whole interface or if he just wants to adjust some complications, you'll have to oblige.\n\nFor example, you could be working on a project for an application that can change the colors of LED strips. However, after sending in your first prototype, he tells you that he doesn't want a color wheel and instead wants fixed colors to choose from. You would have to go back and change it for him!\n\nThere are three main areas of change: requirements changes, technology changes, and organizational changes. \n\nRequirement changes are needed changes and unforeseen problems that need to be fixed. These can come from the clients or from the developer himself. \nA developer cannot predict the unknown, so there will be problems occurring, that the developer notices while testing the software for example. \nAnd sometimes the problem your software addresses and the basic need for your product changes. This would have a drastic impact on your project and would require a lot of rethinking and changing of your product.\n\nTechnology changes happen when for example a project is based on a technology that is not mature enough to use at the time or the opposite. \n\nLastly, there are organizational changes, which could also come from the developers or the clients. \nThis could be as simple as a poorly defined requirement development process or problems occurring from the client's side like missing shareholders or an unachievable budget.\n\n\n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265715,
      "meta": {},
      "text": "why change happens:\n1. technologies change everyday, for example, the emergence of electric vehicles, Software must change accordingly.\n2. new legal constraints, for instance, during the corona time, the use of QR Code as an electronic voucher for vaccination.\nthree areas:\n1. requirements changes: People prefer shopping online to shopping malls;\n2. technology changes: 5G network will allow many more people to get information;\n3. organizational changes: because of epidemic, a lot of companies change the organization and let their works Home Office, which leads to the development of software like Zoom.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266059,
      "meta": {},
      "text": "Due to the continuous improvement of technology, we can not live without the convenience that the technology has brought to us. One of the most important technology is software. Software helps human solve a lot of different problems by analyzing and dealing with complexity. With software development, the market can be more competitive. Many companies used data analysis to know customer behavior, then they develop new products meeting customers requirement to be a leading market player.\nWhen talking about the example of software development changing in the real world, I come up with Blockbuster, a company which was very famous for video rental. However, the more convenient became the internet, the easier can people watch videos online. But Blockbuster did not notice the tendency, they neither changed their strategies nor caught the opportunity of technical transformation. Blockbuster needed to know how fast and how the technology and the market went. They should do the research on consumer behavior. Meanwhile, they should also start another technical department which is responsible for responding the technology changes. They could not just focus on the market they were. Most important of all, the executives did not find out where the problems were, so they could not make right decisions and respond the technology changes in the first time. If the executives in Blockbuster could perceive the changed technology and find out a suitable solution or the development of software, they might not be quit in the video market.",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266164,
      "meta": {},
      "text": "There are many reasons for change in software development. A lot of changes occur for the sake of optimizing a previously defined system. There are other reasons such as the rise of new technology, new demands and so on, and all of these factors create constant additional workloads and hurdles that a software needs to adapt to.\n\nRequirements changes:\nOne great example would be the rising market in games and the newly released unreal engine 5. Most games that have wanted to make a big impact have decided to start using this engine, despite previously being developed in a older version. The main cause of this is the impact on consumer demands. Higher quality graphics and faster reaction times are gaining more importance and companies such as Intrepid Studio are making changes based on these new requirements.\n\nTechnology changes:\nTechnology is constantly developing and it changes a lot of aspects of development. A basic example would be the change in Huawei smartphones. Android developers have gotten new projects and all new technology to work with, all because Huawei decided to no longer use the android operating system. These changes happen constantly. AI, RPA and Software security are changing, with new viruses and new challenges that we need to adapt to.\n\nOrganizational changes:\nThis is a more internal change, and is more so connected with people. Klika is a company that most recently changed from having a full on team do a specific project and staying there for a while, to personnel moving from one project to the other based only on capabilities and specializations of their employees.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261725,
      "meta": {},
      "text": "According to last week's lecture, technology is evolving and changing day by day, so software engineering, which means using the right engineering principles to produce and present a quality software product that is reliable and cost-effective, is also undergoing changes. With the advent of laptops, large desktop computers were hit hard and dropped, forcing them to change to become more efficient and competitive.\n1.requirements changes: This happens when the customer has a new request .Or requirements imposed by the government and laws. For example, you have prepared a plan for a store and your customer who owns the store decides to change the conditions of sale . For this reason, you are obliged to change the program according to the customer's needs.\n2. Technology changes: Due to the daily advancement of technology and efforts to provide better and more economical products and applications, you have to change. For example, by producing high quality cameras, mobile phone manufacturers to be superior to other companies. They use new cameras in their phones2. Technology changes: Due to the daily advancement of technology and efforts to provide better and more economical products and applications, you have to change. For example, by producing high quality cameras, mobile phone manufacturers to be superior to other companies. They use new cameras in their phones.\n3.organizational changes:For example, team members who were software developers and developers migrate or die. In this situation, the program needs organizational changes with the new team.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262270,
      "meta": {},
      "text": "Change happens in software development because of many reasons: Possible reasons are: development is not on schedule (some features need to be cut), a new software appears which is superior to the current software in many ways or management decides to reorganize roles and tasks.\n\nAn example out of the real world is raising a kid. The target is rather clear: The kids needs to be raised into a healthy, happy and independent adult. However there are many obstacles to overcome. The child might have diseases or disabilities, get on the wrong track, listen to German Rap etc..\nAn exact plan is impossible to think of.\n\n\nRequirement changes:\nA software product has certain requirement and functions that it needs to fulfill. However the customer might change their mind on what is needed over the course of the development.\n\nCustomer A doesn't need feature x anymore.\n\n\nTechnology changes:\nThe tech world is constantly evolving. Thus, new and better software might be published, old software stops being supported or software has new requirements. \n\nSoftware B not only has the current used software A's features, but is also cheaper and has more features.\n\n\nOrganizational changes:\nA team is constantly under change. For example roles inside the team can change (hierarchy), team members leave the team or the team's budget is cut.\n\nTeammember x of Team A dies. x's role can't be fulfilled by anyone else in the team.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262534,
      "meta": {},
      "text": "Changes in software development occur in order to respond to changing demands and needs of the customer in the market, improve performance, overcome certain bugs or security issues, achieve scalability etc. These factors are quite versatile and may sometimes lead to paradigm shift in technology or in major cases overcome constraints of the Software. An example is the face recognition technology, which introduced a new and prevalent technology to bring a greater convenience without compromising security, causing the majority of the brands to offer it. \n\nRequirement changes primarily constitute the problem statement, which defines the purpose or aim of the project. Through requirements elicitation, which models the interaction between the prominent stakeholders such as the end-user and development team members. 3rd Area involves analyzing by for example developing a correlation between the objects based upon specifications through an Application domain diagram. \n\nTechnology change has object design as its first phase. For e.g. through UML diagrams, which has to be adapted time to time. Secondly, the development phase which involves implementing innovative ideas through coding the solution of the problem solution. Finally, one must test and verify the accuracy and performance of the software, which is done through testing frameworks in various languages such as JUnit and PyTest.\n\nOrganizational changes involves managing the quality of the product or software as its first area. Furthermore, it contains structural aspect such as inspecting the flow of the project and its various subdomains. The 3rd area deals with managing the persistency and functionality of the technology, known as configuration management, and is used in various sectors such as telecom and banking.\n\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264267,
      "meta": {},
      "text": "Change in Software development can happen for example because of the change in the world we live in, such as during the first lockdown due to COVID-19 where the daily scrum meetings could not be held in person anymore due to everyone working from home, therefore these meeting had to be held online.\n\nRequirement changes are tied to the stakeholder of the operation, so when for example the stakeholder suddenness specifies that the Log-in service for his Website requires you to have a password that contains at least one capital letter and at least one number and multiple accounts with the same name are not allowed. If the development team has already finished that part of the project, that would mean they would have to go back and change the system in place.\n\nTechnological change can be when the stakeholder makes the decision that suddenly the project should not be coded in Java anymore but instead in c++, which would mean that the entire project structure must be re-thought and recoded within the new programming language.\n\nAn organizational change would be, if a development team suddenly would be under new leadership, and said leader enforces different rules more strictly, forcing the development team to adapt and potentially changing the workflow.\n",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264951,
      "meta": {},
      "text": "Changes in software development occur constantly due to change of the environment, which results a necessity to adapt  to those changes and creates a possibility to come up with new creative solutions. For example, detecting issues in the project at the testing-phase can lead to a change of the developing process, because the discovered issues should be corrected.\nRequirement changes can happen as a result of external changes or also due to poor communication or not precisely defined requirements. Further clarifications could lead to correcting already developed software or expending the \"list\" of tasks, that must be fulfilled.\nTechnology change also has an influence on software development : a newly presented technology could make the product outdated(as was also presented in the lecture with \"Nokia and smartphone\" example) and create a need to completely change the course of the project. On the other hand, new technology can also be used in the developing the project and simplify the developing process.\nThe organisational changes can occur due to internal changes : for example, the expansion of the developers team could lead to the redistribution of the tasks and duties in order to use the skills of the new team members and maximise the teams efficiency. \n",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265280,
      "meta": {},
      "text": "Eine der wenigen Konstanten dieser Welt ist, dass sich Dinge immer ändern und weiterentwickeln werden. Gesellschaftlich aber auch technologisch werden wir uns stets weiterentwickeln und niemals einen status quo erreichen. Genau aus diesem Grund wird sich auch die Softwareentwicklung weiter anpassen müssen. Ein sehr gutes Beispiel hierfür ist die stetige Entwicklung der deutschen Bahn app und ihrer Möglichkeiten. Mit der fortschreitenden Digitalisierung entwickelte auch die Bahn ihre app immer weiter, sodass mittlerweile auch das einchecken online möglich ist und man dem Schaffner das Ticket nicht mehr vorzeigen muss. \n\nEiner der Bereiche die am meisten zur Softwareentwicklung beitragen, ist der technologisch Fortschritt. Hier führen neue technische Möglichkeiten dazu, dass sich auch die Softwareentwickelt. Ein Beispiel hierfür ist eine sich ständig verbessernde AI die dazu führt, dass mit dieser mittlerweile auch shopping apps entwickelt werden können.\n\nEin weiterer Bereich ist die der organisatorischen Veränderung. Diese findet zum Beispiel auf einer politischen Ebene statt, auf welcher versucht wird Prozesse schlanker und effizienter durch Digitalisierung zu gestalten. Hierfür wird zum Beispiel versucht es einem zu ermöglichen sich online zur Wahl zu registrieren, was vorher nur durch einen Brief möglich war.\n\nLetztlich entsteht Softwareentwicklung auch dadurch das sich die Erwartungen der Gesellschaft und möglicherweise Kunden verändern und dementsprechend neue Dinge entwickelt werden müssen. Ein gutes Beispiel hierfür sind die neuen Einkaufapps (Flink, Gorilla), welche in der Corona Krise groß wurden, da die Nachfrage hierfür extrem wuchs, da die Leute nicht mehr so gerne einkaufen gehen wollten oder konnten.\n\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265739,
      "meta": {},
      "text": "Changes in the software development occur very often. One of the main reasons is that even after a \"software product\" is finished it can still be improved or adapted in many ways. You may want to add a new function or new features to the product ( ex. Softwareupdate in IPhones) or you may want to make sure that your software is safe from hackers (ex. security software need to be redesigned or updated, because as the technology advances your safe product may now be easy to hack)\n\nRequirement changes: Sometimes you may start the project by a clear vision and idea and structure it very well, \n                                     only to realise later, that the problem can not be solved in this way or even can not be \n                                     solved at all (many unsolved theoretical and practical problems in C.S. (effiziente \n                                     Primfaktorzerlegung)  )\n\nMany times in the software developing it may happen that although in the begginig the \n                                     team and the customer agree on some requirements, these are not met as expected, and \n                                     need to be changed after further discussions\n                                    \ntechnology changes:   As mentioned above you need to stay up to date with the new security softwares as they \n                                    are more advanced.\n                                   You may also want to make your product compatible with more devices/platforms\n                                   (e.x you developed a game for PC, but you want to expand in Xbox/PS4)                               \n\norganizational changes: Usually a software project can last many months or even years. Within that time team \n                                       members can leave the project (better offer elsewhere, maternity leave) or new ones \n                                       may enter (graduates). So often the organisation must be adapted without that \n                                       resulting in delay in the project. The work must be adjusted and perhaps tasks must be \n                                       reassigned ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265840,
      "meta": {},
      "text": " Software systems are complex. And in order for them to remain relevant, they need to evolve together with the users' needs and target environments.\n During the lecture, \"Nokia\" was given as an example of a company that failed to adapt to the environment changes happening around them. The same was true for another big company at the time, namely \"MySpace\". It was a company that found success as the first social network that reached global audience. But in 2009 it was overtaken by \"Facebook\" and since then the social network has seen a continuing loss of membership. Similar to \"Nokia\", \"MySpace\" didn't focus on the changes surrounding them -  the company focused on building an audience around entertainment and music instead of improving the user experience. And by the time they realized their mistake it was too late.\n Another such example is \"Kodak\" which, even though invented the first self-contained digital camera first, didn't invest in this new technology, which lead to its struggles and eventual bankruptcy. Software development is also influenced by technological changes, as systems have to constantly adapted to work with new and newer technologies.\n Sometimes these changes can happen during development, so companies have to adapt to them. The philosophy around organizing software development also evolves as newer methodologies are tried to find a way to better work with the changes.\n But it's not only technology that changes. Requirements also do - new companies with new ideas appear that threaten established corporations, which are required to continuously improve their offerings to stay relevant. Legal changes also lead to new requirements, to which companies have to adapt in order to be on the market.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262142,
      "meta": {},
      "text": "As software is used in nearly every branch of science and throughout our daily lives, every major development in society and science creates new demands to it. Therefore also the development of software has to adapt to such changes, to provide the required development speed and quality of the created products.\n\nAn example would be the Covid pandemic. Social distancing forced also software developers to work from home. For this reason, many companies had to adapt their process of software development, switch to all-online communication and make high efforts to plan work ahead of time, to ensure effective teamwork and the fulfillment of customer demands.\n\nRequirement changes happen, when software has to be adapted due to user requirement changes, lack/surplus of ressources (e.g. lack of server-performance for a rising number of users) or previously poorly designed requirements/ requirement goals that have now to be changed or improved.\n\nTechnology changes occur if development in the technological sector creates new ways of problem solving and new tools of implementation or optimization of software, as well as improvements in hardware performance.\nThis way, more complex and powerful software can be created to meet demands that couldn't be met before.\nSimilarily it's possible for old tools or hardware to become outdated, so that e.g. other programming languages have to be used.\n\nOrganizational changes occur due to changes in the structure of a company such as cut budgets of certain company divisions, integration of one company into another, the hiring of new workers, or other similar changes on a company's organizational structure.\n\n \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263796,
      "meta": {},
      "text": "Software development is an empirical process, which means it can't be planned in advance, but you have to identify and solve problems during the development process.\nOne example is the corona epidemic. It forced universities and schools to provide online classes or recordings, so they had to quickly adopt their systems, even though this wasn't planned beforehand.\n\nThe change can be a change in requirement, meaning that the original requirements defined at the start get extended or changed. E.g. an application was originally expected to be only used by a few people, but then it became very popular and now the additional requirement arose, that it can handle large amount of request in a short time.\nIt can also be a technology change, which means, that during the development process newer and better technologies get published, so you have to either use the new technologies or your software is already outdated before it was used in a production setting for the first time. For example a new library gets published, that can solve your problem way more efficient then the implmenetation, that you currently use. So now you have to include it even though it wasn't planned in the beginning.\nThe third type of change is an organizational change. That means that there are changes in the management, that also influence the software project, e.g. the budget for the project gets cut, so now there are less programmers in your team and you have to adapt by cutting some requirements.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264216,
      "meta": {},
      "text": "First of all change in software development happens due to technological progress  which leads to have to adapt certain methods and approaches in the field of software development. Additionally there is also the obvious reason that over time the needs/problems/requirements of the clients and customer change. A quite recent example for this would that when the Pandemic broke out software developers had to react to the sudden need of digitization in schools and universities as well as more generally the demand of more online services (e.g. online-shopping) that used to be offered in person.\n\nThree areas:\n- requirements changes:\nOver time the problems and needs of clients or more generally people change and therefore in software development it is important to be able to react quickly to these new challenges. Also you need to look at potential changes in certain standards/laws that could lead to change. An example for this would be the focus on privacy and data protection over the last couple of years which lead to big software companies like Facebook to have to adapt their software appropriately.\n\n- technology changes:\nWith innovation and new technologies there comes also the need to be able to adapt quickly to new systems  without ignoring them or not taking these seriously as the technological advances rapid.\nAs an example for this you could look at MP3-Players which used to dominate the music-electronics market until smartphones made them useless and redundant.\n\n- organizational changes:\nWhen the head of a development team suddenly changes and therefore introduces a new approach to solve certain problems, the software developers need to be able to adapt their way of work to continue to work productively even with the change in their teams or their companies organisation.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264509,
      "meta": {},
      "text": "Change can be considered either a good or a bad thing depending on the situation or the people working on a  given project. Usually change occurs when unforeseen factors appear that challenge the team to improvise, adapt and overcome the given obstacle. This happens because the world keeps constantly changing itself bringing new innovations and new systems but also competition and hardship. One example for change in the real world could be the situation caused by global warming. This new situation for humanity has started global changes in the way that we live our lives daily, like being more careful wehen we go out shopping, watching our carbon footprint or just starting to recycle.\nAs for change in software development there can be a number of different changes that can come up during this process such as requirements changes, as an example when the requirements that were set at the beginning of a project suddenly change and force the team to adapt. Organizational  changes can encompass situations in which a member of the team has to leave the team or a person is kicked from it for some reason or other. Lastly technology changes occur when the a new kind of technology comes out during the working period of a project and forces the team to choose between almost starting over with better tech or too keep going with their current setup.\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264775,
      "meta": {},
      "text": "There are several motives for change in the domain of software development. These reasons can be summed up though to three specific causes. First of all is the need for new features. As time progresses the needs of the software users change thus also creating an incentive for software developers to add new features. Additionally another reason for change is the correction of faults that might have stayed unnoticed. Last of all the restructuring of code to accommodate for future changes could also be a reason.\nAn example for a change in software development and system software in particular is the operating system of Microsoft Windows. Over the years it has changed dramatically both in features and code. Overall Microsoft Windows has been and still is one of the most impactful softwares that have ever existed. \n\nRequirement change is a software development activity that can be caused by defective, incorrect, and/or missing requirements. That is the case when for example microsoft word doesn't have an autocorrect system that detects spelling errors. This is a missing user requirement that needs to be added. \nTechnology changes happen when new technologies are developed, innovated and adapted. A current example for a technology change is the introduction of the 5G network which opens a lot of doors for mobile developers. \nOrganizational changes occur in the context of a company's structure, strategy, policy etc.. An example that shows organizational change is when a company for example Google buys a platform like YouTube. YouTube as a company has to be integrated into the organization of Google. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265145,
      "meta": {},
      "text": "Change in software development happens when the requirements or parameters change. For example, as more and more people had smart phones in the 2010s, part of the market shifted to mobile applications. Today, almost everything can be done on the computer or on the smart phone.\n\nRequirements changes: These changes can have an internal or external background. For example, a bug in the software can cause parts of it to be completely redesigned. Likewise, a new competitor in the market can ensure that one must carry out improvements oneself in order to remain competitive.\n\nTechnology changes: With the current trend towards artificial intelligence, more and more users want machine learning structures (or AI) in their products (e.g. Spotify's automatically generated playlists)\n\nOrganizational changes: When these changes occur, the organization of the project changes and workload shifts, as well as requirements for the software (e.g. a new CEO wants to reorganize the company and make change to the products)",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265320,
      "meta": {},
      "text": "Requirements change: Customers might change their thoughts during the software development phases or they might realise that their goals are unfeasible and they have to change their goals.\neg. Project Stuttgart 21 was announced in 1994. After the construction work in 2010, the project faced a lot of unfeasible issues, like the environmental concern. Therefore they changed their original project plan and the whole project will be finished in 2025.\n\nTechnology change: New Technology update\neg. Cloud computing allows people to get and use the data more easily. Nowadays, more and more firms buy this service, in order to storage the large volume of data.\n\n\nOrganisational change: Firm/Team structure change\neg. Activision Blizzard was bought by Microsoft, so its legal requirements will stick to Microsoft.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1265993,
      "meta": {},
      "text": "I think that change happens in software development because of the really big competition on the market. \nEvery company tries to be on the market with the best fastets and most usable software. \n\nOn the other hand the users want the best product and sometimes may overpay products because the are just absolut reliable and fast (e.g. Apple :p ) but of course one of the most important aspects is comfort. \nAs an example i would like to bring in the portable musicplayer and smartphones. Smartphones are used everyday and everywhere. Why carry two different devices when you can put a better Audiocard in a smartphone(technology changes), develop good earphones with good and comfortable connection(technology and requirements changes)(e.g. automatic establishing connection when inserted and so on)(requirements changes).\nThats why the portable musicplayer almost absolutely vanished from the market. But now the music companies had to reorganize and think of new ways to distribute the music. Thats why streamingapps appeared (organizational and requirements changes). \n\n\n\n\n\n ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266118,
      "meta": {},
      "text": "The world develops and changes constantly. Software development is no exception. There are constantly new inventions, developments and discoverys that change the way we approach our software development. One example of change in software development would be when a security breach like for example the log4j problem last year is found. You as a software developer would have to adapt to changes like that and resolve that security problem to make sure your software is as safe as possible for the client.\n\nThere are three different areas of change in software development:\nRequirement changes means changes to the features, or expectaion to your software, like for example, when your client wants to add a feature to the software while your developing it. You have to adapt to that change and try to implement that new feature the client asked for.\n\nTechnolology changes means new inventions and developments in technology, that influence your sofware develpment. And example would be the invention of Smartphones. We use Smartphones everyday and many web applications or programs have to get optimized for smartphone usage, so they are easier to access with them. You would have to react to changes like that and possible optimize your software for smartphone usage as well.\n\nOrganizational changes would mean changes within your company, or your team. That could be for example when a new employee enters your team. You would obviously have to adapt to that and try to get the new employee involved as quickly and good as possible. Or when an employee leaves the team you would have to distribute the work of that employee evenly among the rest of the team.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266473,
      "meta": {},
      "text": "There is a change happening due to a change of demands and the technological environtment. Shorter lifecycles, the demand for faster development and solutions and the comparable low entrance hurdle into the softwaremarket are just a few reasons. ",
      "score": 16.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262374,
      "meta": {},
      "text": "Change can happen in software development as a result of change in laws and regulations. Companies strive or should strive to achieve so called \"Regulatory Compliance\".\nA couple of years ago banks and certain internet platforms had to adapt to the GDPR (General Data Protection Regulation). They had to increase the security of their systems and data.\n\nRequirement changes are made at the client's request. The company's clients request what functions they want the software implement and the company hast to add those functionalities to their existing software. A once implemented system must be kept to latest standards and must be updated regularly.\nEven after a product is completed and sold to the client, during usage the client may realize they don't like certain aspect of it after all and want it o be removed or changed. \n\nTechnology changes are introduced when new and better machines or tools which companies can use to better fulfill their goals enter the market.\nA cartography company could have been using standard CPUs like Intel i9 or AMD EPYC but decided to change their processors when faster and cheaper GPUs entered the market. However, after switching to using GPUs they had to rewrite the software and recalibrate their cartography systems because those GPUs contained different hardware languages or different libraries.\n\nOrganizational changes are internal within the company.\nIf someone gets fired or leaves the company willingly someone needs to step in and take over the job that person was doing. The company could also hire new people who would contribute new skill sets to the team and could know how to better solve certain problems. Then the software could be redesigned according to the team's new cumulative knowledge base.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262789,
      "meta": {},
      "text": "-Changing needs is often perceived as the major reason for change. Maybe the customers keep changing their minds.\n- Developers find major problems and issues with the requirements and so the changes begin. When we start making changes, more and more changes come out. \n-Unforeseen problems occur or the system that you interact with changes unexpectedlly,...,all of these things can result in change. \n-Or sometime the basic need for the product changes, if this happens, the whole project needs to be rethought.\n-Exemple: switching compilers, changing programming languages, or changing software or libraries,...\n- Requirements change is an inevittable software development activity and can occur due to changes in user requirements , increased understanding of the stakeholders'needs, customer organizational restructure, and availability of new technologies. For example: the customer change their minds.\n- A technological change can be defined as an increase in the outputs possible with a given level of inputs through the processes of invention, innovation, and diffusion. For example: automobiles, smartphones, laptops,..\n-Organizational change refers to the actions in which a company or business alters a major component of its organization. For example: going from brick-and-mortar to e-commerce, completely rebuilding he website, lauching a new department, or switching from a silo structure to a matrix.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264235,
      "meta": {},
      "text": "In Software development you produce a software system over a period of time. During this time, change can basically occur anywhere: Governments might change regulations, the market might change with other competitors, new technologies arise, etc. In order to be competitive you have to adapt to those changes, as quickly as possible. Nokia for example had difficulties when the first smartphones came up on the market because they did not see the change coming and could not adjust to it quickly enough.\n\nRequirements changes:\nAt the beginning of a software development process, the customer provides a problem statement. Over time the requirements of the original problem statement can change. This is inevitable in software development and happens due to new technologies and a change in the customer's needs. E.g. if the customer is in need of an additional feature, it is going to need time to implement said feature and maybe needs the software to be restructured appropriately.\n\nTechnology changes:\nIn the planning phase of software development, it is decided what the application domain is and what the solution domain is. Both of them can change due to new technologies: The solution domain can change if there is a new programming language for example. The application domain can change with new technologies in terms of hardware. \n\nOrganizational changes:\nOrganizational changes correlate with all the other changes which can happen during the software development process. When requirements change, the SD team needs to reorganize to adapt to it. Maybe a part of the team has to manage the requirement changes. It might also happen that a member of the team is not able to work. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264387,
      "meta": {},
      "text": "Gerade im Bereich der Informatik schreiten neue Entwicklungen schnell voran und Unternehmen müssen ihre Produkte anpassen, um relevant zu bleiben. Der Prozess der Softwareentwicklung muss deshalb agil sein, um schnell auf solche Veränderungen eingehen zu können. Die folgenden drei Beispiele erklären verschieden Arten von Veränderungen genauer:\n\nRequirements Changes:\nDiese Art von Veränderung kann zum Beispiel durch neue Gesetze auftreten. Als beispielsweise in 2018 die neue Datenschutz-Grundverordnung in Kraft getreten ist, wurden neue Funktionen notwendig, die den Nutzer mehr transparenz bieten, wie deren Daten verwendet wurden. Außerdem gab es für Software die neue Erfordernis, dass Nutzer um Erlaubnis gefragt werden mussten, bevor ihre verwendet werden. Softwareentwickler sollten einen agilen Entwicklungs-Prozess nutzen, um auf solche neuen Erfordernisse rasch eingehen zu können.\n\nNokia als Beispiel für \"technology changes\":\nAls in 2007/2008 die ersten Smartphones entstanden sind, gab es einen großen Umbruch in der Technologie. Nokia hat diese sich rasch verändernden Technologien nicht erkannt und ihre Produkte nicht angepasst, was letztendlich dazu geführt hat, dass das Unternehmen als Markführer von Mobiltelefonen abgelöst wurde und heute im Vergleich zu Apple, Samsung, usw. unbedeutend ist.\n\nOrganisational Changes:\nVeränderungen, welche die Softwareentwicklung beeinflussen, treten auch dann auf, wenn sich die Organisation eines Unternehmens ändert. Das kann in vielen Formen passieren, ein Beispiel auf jüngster Vergangenheit ist der Kauf von Twitter. Durch die Übernahme könnte sich das Management des Unternehmens ändern und der neue Besitzer hat andere Vorstellungen, wie sich die Plattform in Zukunft weiterentwickeln wird. Das hat natürlich auch starke Auswirkungen auf den Prozess der Software-Entwicklung, wo es nun neue Anforderungen und Schwerpunkte geben wird.\n",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1264486,
      "meta": {},
      "text": "Es gibt Veränderungen in der Softwareentwicklung, da sich Technologie und Anwendungsgebiete stets weiterentwickeln. Es werden neue Programmiersprachen verwendet, einsetzbare Algorithmen und Datenstrukturen werden vielfältiger, komplexer und effizienter und Computer werden leistungsstärker und intelligenter. Musste man beispielsweise zu Beginn des Computerzeitalters noch mit Assembler programmieren, kann man heute auf eine Vielzahl an Programmiersprachen wie z.B. Java, C++ oder Python zurückgreifen. (Technology changes) Außerdem gibt es für viele einfache Probleme bereits Lösungen, weshalb Softwareprojekte immer kompliziertere Problemstellungen lösen sollen können. Zum Beispiel ist das Drucken eines PDF-Dokuments heute kein Problem mehr für das man extra einen Lösungsweg erstellen und Software schreiben muss. Dafür müssen heute weitaus komplizierter Probleme/Technologien gelöst/entwickelt werden. (requirement changes) Dadurch ist es, um eine effiziente und zeitnahe Entwicklung von Programmen sicherstellen zu können, notwendig geworden, dass mehrere Softwareentwickler an einem Projekt im Team zusammenarbeiten, was früher vielleicht nicht immer der Fall war. Einfache Spiele wie pac-man oder snake brauchten keine großes team an Entwicklern, sondern konnten ggf. sogar von nur einer Person erdacht werden, während Computerspiele heutzutage weitaus komplexer sind und riesige Entwicklerteams zusammenarbeiten müssen. (Organizational changes) ",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1264594,
      "meta": {},
      "text": "Software engineering focuses on problem solving and requires certain technique, methodologies, and Tools. The engineering team needs to build a complex system according to the requirements of the customer with a limited budget before a given deadline. Thus, the development procedure of a software system could be influenced by many factors. An Example: A competitor company plans to publish a similar software to the users in advance, which may take up a large part of market. The customer will then require to bring the deadline of the developing process forward, which will change the original working schedule of the developing team.\n\nThe requirement changes mostly come from the customer and the users. The customer may change their original developing concept and make requirment changes. When the developed software system is being tested or already published, the users will take part in the testing or maintenance process. Many computer games provide a testing server, where the developers can get acknowledge of the utmost requirements and feedback from the users and make changes in their developing process.\n\nThere are many possible technology changes. The estimated hardware environment of the users may change, the OS may be various from user to user, and new technologies may show up... For example, if Intel publishs a new shipset with new architecture, the developers needs to make sure their code being able to run on the new chipset.\n\nA common organizational change is personnel change. If a member resigns from the team during the developing process, then someone needs to take over his/her job and guarantee the team still moving forward.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264620,
      "meta": {},
      "text": "Software development is about technology and technology changes every day. Therefore it is no suprise, that software development changes as well. And those changes happen in three main areas:\n\ntechnology changes:\nWhen new technology is invented, software development has to adapt and try to make better products with this new technology. For example: the first computers were very big and worked very slowly. But the technology developed so much, that now almost everyone has a mini computer on a smartphone, on which we can use the internet everywhere we go.\n\nrequirements changes:\nSometimes the environment is responsible for change in software development. For instance, when the government sets up new regulations on data security, it changes the requirements for the software and it has to be adjusted until it aligns with the rules again.\n\norganizational changes:\nAnother reason for change are new market competitors. For example the social media platform \"Facebook\" used to be very popular. But now it can't keep up with the newer platforms such as \"Instagram\" or \"Twitter\". And everyone who still uses facebook is considered \"old school\".",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265998,
      "meta": {},
      "text": "Früher wurde Software so entwickelt, dass man sich die Wünsche des Kunden angehört hat und dann die Software komplett entwickelt hat. Da aber die Software komplett auf einmal geschrieben wurde und in nicht fertigem Zustand nicht benutzbar war, hatte man am Schluss sehr viele Bugs. Heutzutage entwickelt man immer einen Teil der Software und fügt Schritt für Schritt mehr funktionalität ein. Hierbei ist es besonders, dass man die Software nach jedem Schritt benutzen kann, auch wenn die Funktionalität am Anfang natürlich nur sehr gering ausfällt. So werden mittlerweile alle großen Softwareprojekte entwickelt, dies kann man sehr gut an Apps, wie Netflix, sehen, die ständig Updates bekommen. Diese Vorgehensweise kann man auch in dem Überwachungsprozessmodel Scrum wiederfinden.\n\nHeutzutage wird von Software Entwicklern, die neu eingestellt werden deutlich mehr erwartet als damals, denn es reicht nicht mehr zum Beispiel nur eine Programmiersprache zu können. Es gibt nämlich schon auch eine Technologie, die versucht programmieren zu lernen, wodurch reine Programmierer eventuell nicht mehr nur programmieren, sondern auch fremden Code besser verstehen müssen, damit die Software immer noch gewartet werden kann usw. Wie man an diesem Beispiel sehen kann entwickeln sich auch die Technologien immer weiter. So hat zum Beispiel auch Nokia einen ziemlich großen Fehler gemacht und wollte sich nicht mit der Idee von Smartphones anfreunden und hat so sehr viel Beliebtheit verloren und ist mittlerweile nicht mehr so bekannt. Wie oben schon beschrieben wird Software nun in kleinen Schritten entwickelt und nach jedem Schritt kann man den Fortschritt des Programmes sehen und das Programm auch benutzen. Dieses Konzept wird zum Beispiel auch in Betriebssystemen umgesetzt. Denn ohne dieses Vorgehen wäre es extrem schwer so eine Software zu bauen.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1266228,
      "meta": {},
      "text": "Wärend eines Softwareprojekts kann es immer zu Änderungen in eigentlich allen Bereichen kommen da es viele Einflussvariablen gibt und diese meistens nicht konstat sind. So können sich die Anforderungen mitten im Projekt ändern weil das Programm eine andere neue Funktion implementieren muss oder manche Funktionalität unbrauchbar/überflüssig wird. Ein Beispiel könnte sein, dass man innerhalb einer App eine neue Nutzergruppe hat, die eigene Funktionalität brauchen. Ganz konkret könnte das zusätzlich zum \"User\" ein \"Moderator\" sein, der Moderations Funktionalitäten braucht. Es könnte aber auch sein, dass sich sowohl softwareseitig oder hardwareseitig Neuerungen ergeben, die massiv auf die weitere Entwicklung Einfluss nehmen. Beispielsweise könnten softwareseitig gewisse Verschlüsselungsalgorithmen \"über Nacht\" einfach lösbar werden und man müsste so das gesamt Sicherheitskonzept neu erarbeiten. Ein Beispiel für die Hardwareseite könnte sein, dass sich im Laufe eines gewichtskritischen Projekts Möglichkeiten durch neue Batterietechnologie ergeben, die man nutzen möchte. Die neue Batterietechnologie könnte sich nicht nur auf das Volumen/Kapazität/Leistung auswirken, sondern eventuell auch eine insgesamt kleinere Apperatur ermöglichen, die dann auch dementsprechen kleinere Komponenten benötigen würde. Auch kann es sein, dass eine Veränderung Einfluss auf das gesammte Projekt haben könnte. Veränderungen in der Organisation eines Projektes wie im Personal können natürlich auch auftreten. So können wichtige Mitarberiter das Unternehmen verlassen, was Auswirkungen auf die Arbeitsweise oder die Verlängerung eines Projekts bedeuten könnte. Oder aber wenn durch Zeitdruck oder erhöhtem Arbeitsaufwand die Notwendigkeit bestehen neue Mitarbeiter einzustellen und diese in das Projekt einzuarbeiten durch eine Erweiterung oder Umstruckturierung der Rollenverteilung der bisherigen Mitarbeiter.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1262376,
      "meta": {},
      "text": "Change in Software development occurs due to many reasons and is a very common concept, now also incorporated in common software engineering methodologies, such as Scrum. Change happens throughout the development cycle due to influencing factors that change the expected or targeted scope and functionalities of the developed software, but also the underlying infrastructure used for the development. Factors playing a role here are not only scope, but also time and budget, constraining what is possible and what is aimed for. \nAn example for change in the real world would be the decision to move from on-site to cloud-based storage, impacting significantly the used underlying technologies.\nChange impacting software engineering can be categorized into requirements change, technological change and organizational change.\nRequirements change is the most common form of change as throughout the development of a specific project and the backlog, developers become aware of struggles and time delays related to specific features, but also understand which functionalities might be easy to add, based on the current setup. This leads to an adaptation of the scope / the requirements, with exclusion of less important features requiring a long timeline.\nTechnological change relates to underlying infrastructure which might need to be used or assessed in a different format than previously planned. Examples include updated functionalities of programming languages or environments, but also different IT infrastructure choices for the delivery of the agreed requirements.\nOrganizational change relates mostly to timeline and team composition, requiring a shift of responsibilities and prioritized activities.\n",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1262411,
      "meta": {},
      "text": "Change in software development can happen for a variety of reasons, from internal realisations to external factors, or a combination of both. One would be improvements in hardware, such as the speed of CPU's, that may invalidate certain approaches/make others easier-in other words, a change in technology. Another could be the gradual discovery that certain methods and techniques such as scrums generally garner superior results, or even that something like an agile approach is superior to one of organisational maturity, which would indicate an organisational change in how the development itself is handled. Finally, a requirement change would be a change that is facilitated by, for example, changes in demand in the market-ease of use might start taking precedent over efficiency for companies, for example, or a new trend(such as the smartphone) could take hold. As people and companies start needing different things than before, naturally, software development must also evolve to accommodate these and adapt to new phenomena. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262772,
      "meta": {},
      "text": "Änderungen in der Software Entwicklung können von \"internen\" und \"externen\" Ursachen ausgelöst werden. Entweder müssen Änderungen wegen dem Kunden vorgenommen werden, da dieser nicht mit der Lösung zufrieden ist, oder externe Ereignisse, wie Beschlüsse der Regierung oder Interessensänderungen der User, zwingen ein erfolgreiches Unternehmen, um seinen Erfolg weiterhin zu erzielen, zu einer Kursänderung.\nAmazon hat beispielsweise angefangen, online Bücher zu verkaufen. Mit dem Wandel der Zeit kamen nicht nur mehr Produkte dazu, sondern auch Streaming Angebote für Filme/Serien und Musik. Immer mehr User bevorzugten die einfache Streaming Methode im Gegensatz zum Kino Besuch. Deshalb hat sich auch Amazon angepasst und Änderungen in Ihrer Software vorgenommen um nicht nur die Webseite zum shoppen anzubieten, sondern durch langer Weiterentwicklung auch in die Entertainment Richtung zu gehen.\n\nRequirements Changes: Seit 1.12.2021 ist es zum Beispiel nötig, dass Banner einen Website-User darüber informieren und auch seine Erlaubnis einholen, dass die besuchte Seite Cookies verwendet und somit Daten über den Benuzter sammelt. Dadurch mussten viele Unternehmen ihre Seiten dementsprechend anpassen.\n\nTechnology changes: Microsoft muss sich ständig an technologische Fortschritte anpassen. Mit der Entwicklung von neuen Betriebssystemen und dazugehörigen Updates, bieten sie den Usern neue Features und Möglichkeiten die neu entdeckt wurden. Auch werden technologische Fortschritte wie die Weiterentwicklung der Prozessoren unterstütz und die Betriebssysteme dafür ständig angepasst und heraus gebracht.\n\nOrganizational Changes: Wenn ein Kunde neue Fristen setzt oder seine Vorstellungen der Application ändert, müssen die Abläufe der Entwickler darauf angepasst werden, um trotzdem noch rechtzeitig mit der Entwicklung fertig zu werden. Die Organisation des Teams muss angepasst werden.",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1263276,
      "meta": {},
      "text": "Change happens in software development for a number of various reasons.  Most notably, the development of new hardware or changes in society. An example of this is the breakout of the covid-19 virus, causing an international pandemic and forcing a multitude of people to isolate and work from their homes, causing the rapid increase of communication and management software development like zoom, bbb and various other services. \nThere are also multiple different kinds of changes. \nRequirement changes are one of those, these describe a change in the requirement of your software. For example, in the case of the covid-19 pandemic, various software for large companies, had to be adjusted for people to be able to work from home, thus it being a new requirement.\nA different kind of change, the technology change, expresses a change or a development in the hard/software layer affecting our software, for example, the development of faster hardware or an update of any system software, our software is supposed to run on.\nLastly, the third kind of change, the organizational change, describes a change in the organization of your development team, this can include, but is not limited to: a new deadline, decrease / increase of resources etc. An example for this is a decrease of budget, potentially affecting the quality of your software.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263672,
      "meta": {},
      "text": "In an ever-changing world it is crucial to be able to keep up with new needs and face new problems. In software development this change is often motivated by new technologies and possibilities as well as competition on the market. Since the beginning of the pandemic we saw a vast growth of online-learning tools as well as solutions to make working from home possible for people in all kinds of professions, when it was no longer an addition to the traditional systems, but a new necessity.\nRequirements changes are changes of the desired features of the product. It might happen that the customer changes their mind about certain details or might even add to the list of requirements, which could possibly even set the progress back.\nTechnology changes can include something as using more advanced solutions for the features of a product, when there is new technology available on the market. For example providing an update for an app and tailoring it to a new generation of IOS or Android. Another example could be a streaming service adapting to be able to show videos, that were captured in a higher definition, whenever there has been an improvement of camera quality. Or more development related, the introduction of new software for communication within the team or company.\nOrganizational changes include changes in management or within the teams. Like new members joining or acclimatized members leaving the team. Another organizational change would be the fusion of branches as well as splitting into new ones.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264645,
      "meta": {},
      "text": "Change happens constantly in software development due to changing customer needs, changing markets and generally changing influence by many external and internal factors. A customer, you are developing an application for, might request changes along the way e.g. when a more efficient framework or tool is released. If he did not request this change, the result might not be able to compete on the market. Another example for a change-inducing factor is Covid. Many companies had to dismiss staff due to income shortages etc. As a reaction the size of software teams might have gotten significantly reduced so said teams had to be fundamentally reorganized (organizational changes).\n\nAn example for requirement changes would be the following case:\nIf a customer wants to release their project on a given date, the development team is required to achieve a publishable product by then. However, if another company then announces a similar product to be released earlier than that of the customer, he might suffer considerable losses if people decide to buy the other company's product. Therefore the customer might want to publish his product even earlier to beat the competing company so suddenly the development team is required to go even faster.\n\nAn example for technology changes:\nGPU manufacturers just keep implementing new technologies like AI systems and different kinds of cores to speed up gaming performance. A game in development should certainly support as many of these new technologies as possible to grant the gamers the best possible gaming experience. If the game studios did not implement these technologies they might suffer from low player counts, because noone likes to play games at 0.42 fps.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264914,
      "meta": {},
      "text": "Veränderung in der Software Entwicklung können aufgrund externer Faktoren auftreten, wie z.B. neue Technologien oder Methodiken zur Entwicklung.\nAber auch ungenaue Anforderungen des Clients, interne Restrukturierungen oder finanzielle Gründe können Veränderungen hervorrufen.\nEin konkretes Beispiel für Veränderungen ist beispielsweise ein neues Javascript Package, das eine deutlich höhere Performance als das aktuelle hat und deswegen unbedingt integriert werden muss.\n\n- Veränderungen der Anforderungen (requirements changes) können Veränderung im gewünschten Produkt sein, z.B. dass der Client statt einer Handy-App sich dazu entschlossen hat, dass lieber eine Website entwickelt wird. \n\n- Veränderungen der Technologie (technology changes) kann durch technologischen Fortschritt ausgelöst werden. Konkret sind das beispielsweise bessere Alternativ-Technologien oder Sicherheitslücken in bereits verwendeten Technologien. \n\n- Veränderungen der Organisation (organizational changes) sind z.B. dass eine neue Führungsperson statt SCRUM eine andere Methode für die Projektplanung einsetzen möchte und sich nun der ganze Entwicklungsprozess verändert. Veränderungen in der Organisation können daneben auch durch finanzielle Entscheidungen, eine andere Unternehmenspolitik oder eine veränderte Zielgruppe ausgelöst werden.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265307,
      "meta": {},
      "text": "the customer  always change their mind or their Requirement through the project.\norganizational changes\nBecause of the forbidden of benzin cars all over the world in 2030, the BMW Group decide to add 10 more Groups to develop the electrical car. The bmw engineering have to be rematched among their groups, in order to develop the electrical car.\nRequirement changes The EIST instructors change their minds about how the player can control their car. The new idea is to use steer wheel to steer the car on gameboard. \ntecgnology changesWe update the bumper game to use the VR glasses, which has the exciting and amazing game experience. ",
      "score": 25,
      "language": "ENGLISH"
    },
    {
      "id": 1263382,
      "meta": {},
      "text": "Change happens in software development due to the number of unforeseeable factors. Our world is simply too complex and too fast moving one to be prepeared for everything and you can't see everything in advance, you can't design a whole software in advance. Requirements change: sometimes the client changes his mind and demands a different product. (with more, less or different features) Or with subscription based software the users may change their priorities. Technology changes (all of the technologies change with time) : most of the time developers write their software on a operating system, which they do not develop, thus most of the updates and changes in the op system are unpredictable, so naturally sometimes you have to adapt to these changes. But other technologies can change too (more advanced devices [phones, pc, mac etc.] change every year, a device can be discontinued and no longer requires development on that system  for example) Organizational changes: these are most of the time changes in the structure of the company, for example a software engineer quits his job, someone may become sick or simply a planned structure of the team may not work and requires change.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263669,
      "meta": {},
      "text": "Software systems are very complex and therefore it takes some time to fully understand the project goal and when it is better understood precious errors have to be corrected or changes to the system have to be implemented to better reach the project goal. During the implementation there might arise new questions that haven’t been specified in the beginning, which would lead to a change. There can also be organizational changes like a change of the budget, time or a change in the development team, for example the addition of a new team member or the loss of one. Additionally there can also be technological changes, for example when a new technology is released that could be helpful for the project, the plan has to be changed to include this new technology. \nAn example in the real world would be a plan for a holiday trip to another country. Changes might be necessary, when somebody gets injured, then you would have to find a doctor or maybe terminate your trip early. If you fly by plane your plane could be late, which might lead you to have problems to catch your connecting flight. ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264173,
      "meta": {},
      "text": "Changes in software development happen for various reasons. Mostly, this is because something happens outside of the project and not so much in the project.\nOne reason could be changes in your or the client's company. Others could be the publication of a new invention which affects your final product or third parties such as vendors or suppliers. An example could be the release of a software update of the platform you are designing an application for. If this new update already implements features that your application would solve, they will become useless or obsolete, so the requirements have to be adjusted.\n\nRequirement changes are changes in the user requirements. That means that\n- the client wants a general condition which he has previously made to change,\n- the clients' general conditions or needs get clearer or\n- the client underwent an organizational restructuring (Budget shortage for example)\nTechnology changes refer to the release of new technology on the market which affects the project you are working on. This could be a software update of the platform for which you are creating the product, new devices with which the product has to be compatible with, or even changes in the tools required to create the product (If they don't support the current state of the product anymore).\nOrganizational changes occur when a company alters major components of its organization. This could reach anywhere from culture, infrastructure (or the technology used) to internal workflow. An example of this could be the change of leadership in a company (If the new leadership wants things to be done in a different fashion than the previous leadership, things must be changed).\n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264176,
      "meta": {},
      "text": "Change in software development can have multiple causes. There could be changes to the law, changes mader by the client or even changes to the development tools like a security concern. Maybe a team is working on a project and suddenly they realise that the way you intended to solve a problem does not work like that. Or a team is implementing a service and suddenly the law gets changed and requires them to take a different approach.\nRequirement changes may occur when the client suddenly realises that they are not happy with the current requirements, maybe one feature is missing or it is not completely as they intended.\nTechnology changes may occur when the technology being used in the software or the development process changes. Maybe there is a new update for a programming language that changes how some things are done, maybe a library is updated or a security vulnerability is found and needs apropriate handling.\nOrganizational changes may occur when aspects about the development process are changed, such as developers leaving the development team or the deadline being changed. Maybe the team switches from using IntelliJ to Eclipse.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1264333,
      "meta": {},
      "text": "Die IT Branche ist eine sich sehr schnell wandelnde Branche, in der es ständig zu neuen Entwicklungen\nkommt. Während zu Beginn der Computer für Software Entwicklung noch aufwändig in Assembler programmiert wurde, ist es beispielsweise möglich, dass zukünftig das reine Coding von künstlichen Intelligenzen übernommen werden könnte. Der Workflow und Entwicklungsprozess ist selbstverständlich für beide Extreme ein komplett anderer. Dieser harte Kontrast demonstriert, wie stark sich Software Entwicklung an die aktuell verfügbaren Technologien und Anforderungen anpassen muss und sich ständig mit dem aktuellen Stand der Technik mitentwickelt.\nSoftware Entwicklung muss sich auch an die jeweilig momentanen Anforderungen anpassen, da es beispielsweise vor 30 Jahren noch keinen Bedarf an mobile oder web Developern gab, da es schlicht die entsprechenden Plattformen noch nicht gab, da sie technisch noch nicht möglich waren. Genauso ist inzwischen eine Anforderung der meisten Programme großes Augenmerk auf Sicherheit zu legen, was auch ein sich ständig wandelndes Feld ist, da beispielsweise Verschlüsselung mit Algorithmen, die noch vor Jahren als sicher galten, mit modernen Computern innerhalb von kurzer Zeit entschlüsselt werden kann. So gehen mit technologischem Fortschritt für Software Entwickler auch immer neue Anforderungen an Software einher.\nAuch organisatorisch müssen Teams in der Software Entwicklung ihre Arbeitsweise immer wieder anpassen, da zum Beispiel durch Plattformen wie Zoom oder MS Teams die Zusammenarbeit auf internationaler Ebene bzw. nationaler Ebene über größeren Distanzen möglich wurde. Das gilt allerdings nicht nur für Konferenz Plattformen, sondern auch allgemein für die Zusammenarbeit in Teams, bei der regelmäßig überprüft werden muss, ob der aktuelle Workflow noch effizient ist und durch neue Tools weiter verbessert werden könnte.",
      "score": 75,
      "language": "GERMAN"
    },
    {
      "id": 1264685,
      "meta": {},
      "text": "Change happens in software development, because new technologies arise or the government enforces new rules, which the software has to apply to.  A example would be Facebook, which has to constantly update their user - experience, because new trends like TikTok come up and in order for them to be competitive they have to adapt to new trends.\n\nRequirement Changes: In this case the requirement of a software change, because the user requests it or the the environment demands it. E.g. a antivirus - software has to constantly update their code, because new virus types are developed, which try to hack your computer.\n\nTechnology Changes: In this case new technologies replace older ones, because they are more efficient or are less harmful for the environment. E.g. Tesla is a car company with electrical engines, which are less harmful for the environment and other car companies have to adapt now. \n\nOrganizational Changes: This case can happen, if someone demands a software, but during implementation, you recognize that e.g. the budget or your time runs out, so you have to cut out some features to still return a appropriate solution given these circumstances.\n ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265360,
      "meta": {},
      "text": "Changes in software development happens when there is miscommunication, false implementations or setting up the wrong goals. For example, in designing a new app for TUM, the changes might occur in the field of UI design, functions and the target users.\n\nRequirements changes are such like new functions required for current people in the library or in Mensa, or adding new feature for guest and students. Technology changes focusing on the methods or technics applied within the development, like changing in develop tools. Organizational changes happen when the project duration is longer, and the development group might have a change in leader or staff which would lead to a change in organization.\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265618,
      "meta": {},
      "text": "Changes happen because of the future not being predictable or because of errors appearing in the organization and communication. \nA great example for a change is the corona crisis. Being feared at the beginning and many people suffering from the virus, a lot of fast decisions had to be done. This led to the majority of education shifting towards online lessons.\nMany websites and services had to be updated and prepared for the huge amount of users entering the site and obtaining all the materials from their classes. The amount of requirements increased drastically. Software, hardware and security systems needed to be expanded, and so the work and organization. To be prepared for the new role as an online class provider, new technology had to be integrated into the hardware and software and on top, new security threats appeared. Playing a way bigger role many people's lifes, online education portals became target of many malicious hackers. So security designs and security technologies had to be adapted to the new threats. More people had to be employed for the duty to keep the systems secure and organization had to be renewed. \nOrganization in general had to be rethought because of the bigger amount of resources and workers needing to function together.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265927,
      "meta": {},
      "text": "Software ist zu komplex um im Vorhinein von Anfang bis zum Ende völlig ins Detail durchgeplant zu werden. Daher kommt es im Laufe des Entwicklungsprozesses zu unerwarteten Ereignissen, auf die angemessen reagiert werden muss. \nDas in der Vorlesung verwendete Bild eines Schiffs, das durch das Meer von A nach B segelt, trifft die Realität sehr gut. Auch wenn das Ziel klar ist, ist der Weg nicht klar definiert, man muss auf veränderte Windbedingungen und Wellen reagieren. Aufgrund der unglaublichen Dynamik des Meeres - der Informatik - ist es unmöglich immer stumpf einem vorher fest definierten Plan zu folgen. \nSo kann es sein, dass noch während der Entwicklung eines Produktes mit Hilfe einer bestimmten Technologie, diese Technologie veraltet, bzw. eine neue Technologie so viel effizienter ist, dass ein (zuvor nicht geplanter) Wechsel sinnvoll wird. Auch neu entdeckte Sicherheitslücken fallen in diese Kategorie. So muss in diesem Fall nicht unbedingt die verwendete Technologie gewechselt, aber möglicherweise auf eine neuere Version geupdatet werden.\nZudem kann es sein, dass die Anforderungen an das Produkt sich ändern. Dies kann z.B. darin begründet sein, dass die Konkurrenz mit einen neuen Feature alle Kunden abwirbt und man deshalb gezwungen ist nachzuziehen. Wenn eine (öffentliche) Community eingebunden wird, die Features vorschlagen kann, sind sich ändernde Anforderungen sogar klar vorgesehen. Dies ist bei einigen Spielen, wie z.B. Golf It oder Baldurs Gate 3 beispielsweise der Fall.\nZu allerletzt kann es auch dazu kommen, dass Teile des Teams aufgrund von Krankheit, Fortbildungen o. Ä. ausfallen. Da wären wir dann bei den organisatorischen Änderungen, die ebenfalls nur begrenzt einplanbar sind. Die Corona-Pandemie gehört ebenfalls in diese Kategorie und ist wohl eine Welle der Art, die kein Softwareentwicklungsteam voraussehen konnte.\nAlles in allem ist die Veränderung in der Softwareentwicklung in der kaum fassbaren Komplexität und der daraus resultierenden Dauer, die es für die Entwicklung eines Produktes braucht, begründet.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266367,
      "meta": {},
      "text": "Change in software development occurs due to various reasons, such as due to changes in technology, finances, requirements, etc., resulting in the software to be modified to fit recent changes.\n\nAlthough change has many forms, a good example is a customer deciding to change their hardware that is not compatible with the software being provided, requiring modification to the product. In this instance, technological requirments change, resulting in a need to change the software.\n\nRequirement changes occur when customers or aims require for the software to have different requierments, thereby requiring changes to be done to the software or approach. These changes usually evolve throughout the implementation of a project, so expecting to work with these changes is essential. An example would be when the desires of the customer has not been completely understood, requiring the software to have different functionalities.\n\nWhen the hardware that the software is run or supplementary software gets updated or is no longer available, the software needs to be changed. This doesn't just apply to software development, but to all areas of life as technological changes result in changes in our own daily lives too, such as the internet being widely available resulting in easy access to a variety of information. \n\nOrganizational change is the change that occurs to a company, such as changes in strategy, size, ownership, culture, etc.. This could relate to how a project is downscaled when the company decides to cut down on personnel due to budget limitations or a switch from a waterfall to an agile model in development.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262191,
      "meta": {},
      "text": "Change happens in software development  because It's almost impossible to make perfect software that doesn't need to be modified at once . Software can be buggy .    Otherwise software is born for human needs , so it will change as long as the needs are changing . And people's needs can be changed by many external factors . In addition there are  many clever software designers who even have been creating needs for people .  For example , in the beginning, social software could only provide communication via messages .  Now they provide audio and video call which almost greatly replaced the role of the telephone and so on.\n\nRequirements changes :  With the development of society, people will have new needs .  So customers will request to change or  add new  function to the product according to the new requirements .   \nExample :  Adding new features to a  game software to give new experience to the players. \n\nTechnology changes :   Technical innovations could be required in a software development for many reasons . For example the customer might request a innovative software or just because of the competition within the market (industry) .\n\nOrganizational changes : During the software development it could also exist changes like manpower changes , material resources changes and financial resources changes .  All of them could influence the whole process of software development . \nIn these cases the whole team even have to keep changing their original plan . \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262501,
      "meta": {},
      "text": "requirements change:\na customer gives your software development team a problem statement for a mobile game. In this problem statement, it says that the game object should be controlled by the mouse. However, a month later, the customer changes his opinion and wants the game object to be controlled by the keyboard. As a consequence you and your teammates have to adjust your software to the new requirements.\n\ntechnology changes:\nNokia was a market leader in the mobile phone industry. With the introduction of iPhones, there was a technology change. So they should have, in order to maintain their position as market leaders, develop a software for smartphones. However they failed to do that and lost their market shares.\n\norganizational changes:\nFor example, your company that used a Windows operating system got acquired by Apple. As a consequence, the internal structure and the company culture changed. As it is an apple company, all the devices got changed to apple products. Hence, the software engineering team has to update the internal software applications, so that it is also compatible to iOS",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262963,
      "meta": {},
      "text": "Sometimes in software development change happens because the world changes, the requirements of the client changes or the requirements were misunderstood. Sometimes when we don't do a good requirements analysis we implement the functionality or some details in a wrong way and therefore have to change something in the software. \n\nRequirements changes: lets say the client wanted us to develop a car. the requirement was that the car is blue and now the client wants it to be green. \n\ntechnology changes: when developing a car there can be technological changes. for example we developed a blue car. suddenly new technologies arise like electric cars and the client of course wants to adapt to this technological change because it is environmental friendlier. The technology changes and we have to adapt to it. \n\norganizational changes: The client might want to reorganize the product. instead of 2 seats they might want 4 seats and therefore will change the way the product is organized. ",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262979,
      "meta": {},
      "text": "The world itself is ever changing. In software development, change can also occur. There could be a new employee or team member, who needs to be introduced to a project, or a new supervisor could be assigned to the development team. There can also be changes or updates for the programming languages, used in a project.\nChange in software development happens, because change happens everywhere. These days, some developers try to make their algorithms as energy-efficient as possible. Why is that? Because the worlds temperature is increasing and changing.\n\nThere are three main areas of change in software development. A change in the requirements for an existing project for example, has the impact on the project that it needs to be changed and modified, in order to fulfill these new requirements. If a bank already offers an app for smart payment, but now wants the customer to be able to also buy bonds with the same app, the app needs to be changed.\n\nTechnology changes can also have a big impact on existing software. By utilising new technologies, completely new approaches can be used to solve problems. An example would be self-driving cars. While a few years ago, most concepts of self driving cars (and respectively their software) would have mostly relied on distance sensors or similar tools, these days, image processing or AI can be used for much better results.\n\nAn example for organizational change would be the the aforementioned changing of the project manager or supervisor of a developer's team. The employees have to adjust themselves, and their projects, to the new organizational circumstances, that are set.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265077,
      "meta": {},
      "text": "Change happens in software development nowadays because our world is changing everyday and everyday people need different needs . Thats why software technologies build for a certain reason and in a certain time area can maybe not be needed in the future. And another reason for that can also be optimization , that means some software applications can be optimized by algorithms and patterns discovered after creating the app which will help users have better experience using them. \nWe can understand the main reason behind needing changes in our world by having a closer look to the different types of changes in software engineering ,\nwhich are :\n-requirement changes : this is one of the most importent changes in software development , like it name says , requirements changes is based on what the users of software application are expecting from the developper in a certain field and in a certain time , and those needs change with time and ppl would need different needs . We can take example of cars, there is different type of cars that have been discovered depending on drivers need like family cars , sport cars ,  pickup cars etc..\n-technology changes : it's basically the influence of technology on the change made to software , which can lead to optimization . Exp : We today see new type of technologies applied to cars like for example E-Cars which help save the planet without being so expensive . \n-organizational changes : This type of change is based on people activities. Developers try to understand and focus on how people act on the software and around it . And use that to improve their applications . Example :  Applications have generally different versions and updates to fix errors and bugs seens and reported by users and testers.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1266052,
      "meta": {},
      "text": "The vastly changing discipline of computer science and software development is often confronting with big changes. Through the technical nature and the rather short lifetime of software, different technology is newly invented and also different requirements are desired. A example for the change is the fast shift for web application to mobile application. In nearly 20 years the perception of most technology companies had changed to the desire of costumer to have mobile application for their newest smartphones.\n\n\n- Requirements Changes => In software development for external clients the requirement often changes parallel to further development. At the beginning the structure of the software is planed, but with further progress the ideas might change because some features seems outdated and some state of the art feature need to be added. So the overall development is always Inspect and adapt.\n\n- Technology Change => at the beginning of the digital age nearly every developed software was run on stationary computers which meant that the resource allocation of memory and energy consumption was not as important as devloping, because those PC had \"enough\" resources to deal with these softwares. But with the further development of digital devices and the upcoming trend of mobile devices the resources of memory and energy decreases and software developer needed to program overall more efficient software to deal with the change in technology. \n\n\nOrganizational Change => this is especially relevant for young start ups then at the beginning of developing as software, daily scrum meeting with 5 team member is a effective method to overview the development and adapt to different changes. But with further expansion of the company the method of scrum meeting might be ineffective and that is why the bigger team needs to change to a more effective method for bigger ventures. \n ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266085,
      "meta": {},
      "text": "Im Grunde verändert sich das Software Development, um sich, Prozesse oder das Endprodukt zu verbessern, also z.B.: die Qualität eines Software Systems, die Effizienz bezüglich finanzieller und zeitlicher Ressourcen. \n\nEin Beispiel für eine Änderung in der realen Welt wäre der Wechsel vom Waterfall Modell zur Agile Methodologie.\nDas Waterfall Modell wurde sehr früh als langer Marathon Run mit festgelegten Patterns und einem quasi linearen Vorgang eingeführt. Hingegen basiert die Agile Methodologie auf viel kürzeren Sprints, erlaubt Re-Iterationen und viel kollaborativere Zusammenarbeit. Anstatt eines gigantischen Brockens, wird moderne Software in kleinere Komponenten, die schrittweise entwickelt werden, unterteilt. Diese Veränderung hat zur Effizient, Robustheit und Adaptivität der Software Entwicklung beigetragen. Somit geschieht auch ein Wandel vom Defined Process mehr hin zum Empirical Process, z.B. das Scrum framework.\n\nEin Beispiel für eine Veränderung in der Organisation:\nDas wäre wie zuvor schon erwähnt der Wandel zur agilen Entwicklung mit Scrum. Um genauer zu sein beispielsweise die verschiedenen Scrum meetings (Tägliches, Retrospective, etc.), die zur Verbesserung des nächsten Projekts, Fehlerbehebung und Motivation beitragen.\n\nEin Beispiel für eine Änderung in den Requirements:\nDamit alle Mitglieder in einem Development Team, die verschiedene Expertenbereiche haben, sich gegenseitig verstehen und zusammenarbeiten können, ist Abstraktion eines komplexen Problems oder Systems wichtig. \n\nEin Beispiel für eine Veränderung in der Technologie:\nDie Verwendung von Grafikkarten wurde drastisch gesteigert, da sich diese besonders gut für künstliche Intelligenz Anwendungen verwenden lassen. Auf Grafikkarten kann man sehr gut neuronale Netzwerke abbilden und sie sind außerdem hoch parallelisierbar.\n\n\n\n\n",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1266173,
      "meta": {},
      "text": "In addition to time, money, and quality, there is now a fourth dimension in project management: change. In the Agile development sector, change is unavoidable. Existing requirements can change multiple times, and new non-functional and functional requirements can appear out of nowhere. Project failure can result from a failure to manage such additional requirements.\nThese changes can appear due to several reasons, clients' opinions can alter, the terrain of competition changes, the market is flooded with new and improved technology. The first example of an unpredictable factor could be the corona pandemic which led many companies, for example, to change completely their operation plan and to do a complete digital transformation to survive this shift. \nRequirements Change is an unavoidable component of software development, and it can be prompted by changes in user requirements, a greater knowledge of stakeholders' desires, a customer's organization reorganization, or the availability of new technologies.\nNew technology and devices proliferate at an alarming rate. Demand for software developers' growing skill sets has created an environment where it might be difficult to find the competence needed to complete a software development project. An example of technological change could be the internet tv, which refers to the blending of the Internet and traditional television capabilities. The qualities of the larger TV screen and distance from the device will tend to develop new usage patterns and technology specializations, just as smartphones made application miniaturization popular.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1261837,
      "meta": {},
      "text": "When the system is created by sections and at the end the interaction of these parts in the whole system, could produce errors or no matching at all.  \n-fix the errors or adjust the requirements \n-systems that were not available before or when the systems interact with the environment e.g. new technologies or market forces.\n-adjust the requirements according to the expected functionality of the system. \nE.g Zoom meeting tool recently new features were added according to users need. \n\nRequirements changes : an application that will make possible the interaction between people but when creating the application the developers found that new requirements should be implemented to increase the usefulness of the app and avoid future errors. Always communicate with the customer sometimes requirements are not clear from the beginning. Adjust and modify when necessary to solve a problem. Example : when creating new systems and there are no previous examples. \n\nTechnology changes : new technologies are available after the initial requirements then it is convenient to implement or use when applicable this new features that is when change happens. For example: AI machine learning \n\nOrganizational changes : agile methodology where the groups of people become a team to help develop a system. New communication style and process where all the stakeholders are involved and that there is no manager or person that dictates the way it should be the process only coach/mediator that communicate and help with the impediments to achieve the goal. For example : the role of scrum master ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262253,
      "meta": {},
      "text": "There are changes in software development because you can't plan everything in advance. There are and always will be unpredictable events. For example, the customer may change his requirements in the middle of the project, because he no longer likes X but Y, or he no longer wants to invest as much money in the project as initially thought. These are examples of requirement changes. But there are two other areas: Technology changes and organizational changes. Technology changes include, for example, an upgrade/downgrade of hardware, which allows for better/more efficient algorithms to be used. Organizational changes, on the other hand, could be a change in the distribution of tasks.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262288,
      "meta": {},
      "text": "In software development, change happens when the requirements for a software product and/or the underlying hardware is changed. For example, when the hardware became powerful enough and internet speeds became exponentially bigger, YouTube introduced higher resolution video streaming and a new design to their page, that couldn't be run on older systems.\n\n\nRequirements changes are changes to software that are made because the products needs to meet different requirements, i.e. do something slightly different from before. For example, messaging was introduced to Instagram.\n\nTechnology changes are changes introduced due to the development of new technology that makes new stuff possible. For example, ray tracing was implemented in many video games when GPU producers introduced ray tracing support to consumer grade GPUs.\n\nOrganizational changes are changes in the organization of a company that happen due to external (new technological base requirements, market pressure, etc.) or internal factors (new management, new CEO, etc.). For example, in 2017 Nokia underwent an organizational change, separating their \"Mobile Networks business group into two distinct, but closely linked, organizations: one focused on products and solutions, called Mobile Networks, and the other on services, called Global Services.\"",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262415,
      "meta": {},
      "text": "Changes in software development happen frequently because developing a complete product that meets all the requirements is difficult. The most common changes that happen during development is when there is a defect within a product. The defect can be major, requiring the development team to recreate a large chunk of the product again. Another form of a defect can be found through bugs in the product. Even if the bugs are minor, they have to be fixed and addressed as soon as they're found because otherwise it could cause more problems in the long term. There can also be changes in the technological side of things. For example, the product may need to be optimized for newer devices. It's quite common to see a new device come with completely different hardware and software which requires changes to be made. Another form of change in software development can be found when there is a requirement change of the product. This can happen due to various reasons such as the change in the laws and regulations requireing the end product to be within the new boundaries. Another possibility is when the client wants changes with the product during development. This can happen due to simply missing one of the initial requirements of the client, and also when there is a shift in the market demand and the client needs to alter the product to meet the new demands. Another change that can happen is when the organization changes meaning that there could be changes in politics, business infrastructures, and in the stakeholder's requirements. All of these changes forces the development team to constantly adapt and change the product accordingly.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263807,
      "meta": {},
      "text": "because everything changes as time went by, the requirements from the customers and many in and external factors changes and it make the changes in software development. an example for this is the software development during this covid time.\npeople prefer doing everything online than offline, so they want to do everything at home, so the requirements change. maybe we need add more online meeting oder something else to our software.\n\nand in these 2 or 3 years the technology grow very fast, we have stronger cpu and something else. it saves time by the problem solving and can handle more things at the same time. so we can do more things with it during the software development. this is the technology changes.\nand under stressful life and working some people may choose another job and quit from the job of developing , and he may play a big roller in the developing team. we need to change the structure of the team and assign the job again.  this is an example for the organizational changes. \nfor all these changes we need to change the development with them together, to make the software fit the time, the requirements.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263815,
      "meta": {},
      "text": "Change in Software Development\n\nDer Bereich des Software Developments befindet sich im ständigen Wandel, da sich die Anforderungen, aber auch die Arbeitsweise bereits stark verändert haben und sich dieser Prozess auch in Zukunft fortsetzen wird.\nEs wurden beispielsweise agile Methoden der Softwareentwicklung, wie Scrum eingeführt. Dadurch wird ein Projekt nicht unabhängig vom Kunden fertiggestellt, sondern der Kunde ist Teil eines iterativen Prozesses bei dem ihm immer wieder verschiedene Prototypen präsentiert werden und er ein direktes Feedback geben kann.\n\nAußerdem kann es zu Veränderungen aufgrund von requirement changes kommen. Beispielsweise hat der Kunde seine Hardware von einem Tastenhandy auf ein Smartphone umgestellt und hat neue Anforderungen. Eine App für ein Tastenhandy muss ganz anders gestaltet sein, als eine App für ein Smartphone, wo die Bedienung über ein Touchpad möglich ist. Das Display bietet deutlich mehr Möglichkeiten für die Softwareentwicklung. Es kann jedoch auch eine Herausforderung sein, da das Gerät trotz der vielen Möglichkeiten einfach zu bedienen sein sollte. \n\nAuch der technologische Wandel führt zu einer ständigen Veränderung der Softwareentwicklung. Die Speicherung von Daten in der Cloud war eine der wichtigsten Veränderungen in der Informatik. Ein Nutzer kann seine Daten heute zum Bespiel in Google hochladen und mit anderen zusammenarbeiten. Ein Austausch per Mail oder USB-Stick ist nicht mehr nötig. Dafür mussten neue Funktionen in der Software eingeführt werden.\n\nZudem kann es in Softwareentwicklung zu Anpassungen und Veränderungen aufgrund eines organisational changes kommen. Ein Beispiel dafür wäre, dass ein ERP (Enterprise-Resource-Planning) System bereits vom Controlling des Unternehmens genutzt wird und jetzt weitere Bereiche wie das Personalmanagement oder Verkauf in das System integriert werden sollen. Diese Umstellung führt zu neuen Funktionen und zu einer Umstrukturierung des Systems.\n",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1263939,
      "meta": {},
      "text": "Change happens in Software development because it is a creative activity that is unpredictable and in most parts of empirical nature. You have to adapt your process and workflow based on the feedback you get while executing the project. Consequently a big part of software development relies on trial and error, which forces you to constantly adapt to the errors to find the most fitting solution. An example of change in software development is software stacks or programming languages get update and might destroy previously built functionalities. Developers then have to quickly adapt quickly to get their program up and running again. \n\nRequirement changes happen when new or different functionalities are required than previously agreed upon, or certain become redundant for the end product. A real world example for this would be that a client requests a website that can handle 1000 requests per minute however, it suddenly gets much more traction. Consequently the requirements change to 100,000 requests per minute which has to be adapted quickly to prevent constant crashing. \n\nAs technology becomes more advanced, you have to constantly adapt to those changes to keep up with competitors using the newest available technology. An example would be upgrading to the fastest and most used cloud services to keep your website as performant and user friendly as possible. \n\nOrganizational changes can be changes within your company that might influence the way your projects gets developed. An example here is a new project leader that prefers a different software stack and would like to convert the project. \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265203,
      "meta": {},
      "text": "he development of software can be broadly divided into three phases: the phase of hardware and software integration (50s-70s), the phase of software as a unique product (70s-90s), and the phase of networked and service-oriented\nphase (90s-). Software and hardware evolve in a mutually reinforcing manner; according to the famous Moore's Law, hardware doubles in transistor count and halves in price every 18 months. Software runs on top of hardware.\nSoftware can replace hardware and perform many functions that hardware cannot perform. At first, software development was low and slow; however, the advent of the operating system has made software development difficult (difficult to develop and slow to implement).\nHowever, the emergence of self-operating systems has made software development (the difficulty of development and debugging, etc.) less difficult, thus allowing people to \"build software based on software\", so that software can no longer be limited by the single function provided by the hardware, but can be combined with a range of functions.\nInstead, a range of more complex functions can be combined. So subsequently, software can be produced as a stand-alone product.\nthe increasing importance of software compared to hardware.\nThe increasing size and architectural complexity of software.\nSoftware has evolved from a centralized single point of entry for development and services to become more pervasive and publicly available.\nSoftware is evolving from centralized single-point development and services to more pervasive and public use.\n\n",
      "score": 0,
      "language": "ENGLISH"
    },
    {
      "id": 1261200,
      "meta": {},
      "text": "The world changes everyday and people need a new version of nearly everything. This includes software developement. For example with the start of the covid-19 pandemic there were many new needs including a website for counting the covid cases, vaccine certification proofing etc. Before that people needed the so called basic version of this things. This can be an example for the requirment changes and technology changes together. Another example for the technology changes is online shopping and meeting websites/platforms for the people who wanted to stay inside of their houses and for the people who needed to go to work but weren't allowed by the restrictions. For organizational changes we can give the logistics of an delivery company and appointment system of an hospital. With the pandemic the amount of people that shops online have increased immensely.  That also applies to people who needed to go to hospital because of covid-19 or for another reason. The change of the world in every direction is inevitable and people trying to keep up with the speed of change. With the increas of the technological advancements people trying to find a better solution for every problem. This pushes us to change and improve.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1262738,
      "meta": {},
      "text": "H01E01 Change in Software Development\nVeränderungen in Software Development entstehen, weil sich alles in der Welt verändert: Die Hardware, die Gesellschaft (Die Nutzer), die Wirtschaft und die Politik.\nAls Beispiel lassen sich das Aufkommen der Streaming Dienste nennen, welche auf monatlich abgebuchte Abonements setzen. Ein früher Implementierer dieser Idee ist der mittlerweile sehr erfolgreiche Musik-Streaming Dienst Spotify. Konkurrenten, wie etwa Google Play Music haben dieses Konzept jedoch viel zu spät erkannt, weshalb dieser Dienst untergegangen ist.\nDies lässt sich beispielsweise viel besser über Scrum realisieren als über das veraltete Wasserfall-Modell.\nRequirements Changes können auftreten, wenn die Nutzer womöglich andere Interessen vertreten, als zuerst angenommen. Um auf diese Veränderungen eingehen zu können, sind viel Kommunikation zwischen den Entwicklern und dem Kunden nötig.\nTechnology Change entsteht unter anderem, da sich die Rechenleistung stetig verbessert. So kann z.B. eine UI jetzt aufwendiger gestaltet werden, wo sie früher noch extra lightweight gehalten musste, um auf Mobilgeräten zu laufen. Natürlich muss dies auch schnell erkannt werden, um nicht den Konkurrenten hinterherzuhängen.\nOrganizational Change bedeutet, dass man nicht in festen Prozessen verbleibt, sondern stetig die Nutzung seines Produkts, und der der Konkurrenten beobachtet, und darauf seine Entwicklung anpasst.",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1264324,
      "meta": {},
      "text": "Due to changing requirements and emerging technologies, trends and changes in the application and use of software engineering concepts are necessary to keep pace with the latest technological developments.\n\nTechnology changes happen when new technologies emerge and render prior used technologies redundant by making the creation of software and the application of software engineering concepts more efficient and convenient. One Example for technology change could be the evolution of modern Programming languages. As efficient as Assembly for example can get, it is hard to maintain especially if projects are overwhelmingly large.\n\nRequirement changes are connected to technology changes. To enable clients the best experience possible with the product, the use of software has to adapt to the needs of interest groups. Oftentimes development is limited by what recent inventions can offer at the moment. If the requirements posed by the client cannot be realised by current software, software must change by the same magnitude.\n\nOrganisational changes are related to companies which distribute software. For a while major companies restricted the access to their software to the public. This changed when it has proven useful to open source software with the Result of faster Technological advancements, I.e. due to the development of free tools that big Corporations also use. ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266103,
      "meta": {},
      "text": "In todays time, when everyone wants their custom- made piece of software it is really hard to foresee how everything is going to work out.\nAt the beginning of a software development process the team creates a roadmap with some goals, deadlines, their budget und a plan, how to implement all those requirements.\nSince every piece of software is unique there can be a lot of unexpected occurences along the way and the develpment team will have to stay flexible and adapt to them in order to get the best possible result.\nThe customer could have a change of heart and demand some more/different requirements or it could turn out that there wont be enought time or budget to finish the project like it was planned. \nDuring the development process the team also improves its understanding on how they want to design everything and might decide that changing some things would improve the overall product. \n\nRequirement changes could be new guidelines for data protection, that the software needs to comply to.\n\nThere is a constant change in technology nowadays and the software needs to make use of all the advantages. \nIf there is a new a hand tracking algorithm for Virtual Reality it doesnt make sense to try to implement an old hand tracking technology. \n\nOrganizational changes could be a change of deadlines, or a cut to the budget, also there could be new team members that everyone will have to learn to work with very quickly.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266226,
      "meta": {},
      "text": "Changes in software development happen because the market is always evolving. What is modern today might be outdated tomorrow. (Technology evolves at a very high pace, especially software). You have to invest into innovation and be open to change to stay ahead of the competition. Otherwise you're going to end like Nokia.\nAnother example is the crypto currency \"hype\", companies that adopted quickly (they changed their payment methods to be capable of crypto transactions) and accepted crypto currencys gained interest from new customers-> Company grows(f.e. Tesla-> shares price went up). \n\nRequirements change: This is pretty self-explanatory. The custumer changes the requirements (what the software must be capable of)\n -> f.e. A new ios is released and \"Twitter\" has to update its mobile app to run on the new ios\n-> new data-security laws, app must tell the consumer which information it uses (f.e. location, age, etc...)\n\nTechnology change: Also pretty self-explanatory. New technology comes around every day(new cameras, new cpus/gpus) and products have to be updated alot to be defined as modern(ios update every two weeks) or new products using the new technology have to be developed.\n-> new IPhones are released yearly to be up to date with modern technology(new cameras with higher quality pictures | new cpus | etc...)\n\norganizational changes: organizations change pretty much daily to be more profitable(people have to work more and some people are fired) or to adapt to the modern time(new software-> new specialists \n| COVID-19-> home office (meetings via zoom instead of in-person meetings))",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266262,
      "meta": {},
      "text": "The change happens because the building the system and requirements for them are complex. For example, if unexpected error occurs in the system, the engineers have to resolve it. When the engineer has found better solution, it also should be updated accordingly. Because there are many different entities are involved to the project, it is difficult to satisfy everyone's goal at the same time. \n\nFor additional questions, let's assume we have a customer who wants to build their stock-trading App for mobile. There is only iOS system in the market at the moment. \n\nThere are only two requirements from the customer which are:\n- The color of the page should be white\n- The app should be working on all types of mobile OS that released in the market. \n\nA. requirement \nIf the customer wants to change the color of the page from white to black, it's a requirement change. \n\nB. technology \nWhen the Android system has been released within the period of project, the engineers have to implement their solution to new operating system additionally to satisfy customers second requirement. They need to learn new languages or tools for that maybe. It's a technology change. \n\nC. organizational\nIf one of the senior software engineer has been fired and new graduate developer has joined the team within the project period, the task of each team member is most likely to be changed. It's a organizational change. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266305,
      "meta": {},
      "text": "Software development means analyzing real-life problems and drawing a roadmap by considering possible solutions. As it can be understood from this definition, the problems of an unstable life will not be stationary, the requirements of the software will naturally change during its development of this software. To take an example, let's say we're on a software development team at a company and a customer requests a facial recognition plug-in for use in a banking application. Our customer, who could not solve his/her problems related to legal restrictions after we started the development process, may request changes to this add-on. We may also have to analyze the situation well and quickly adapt to the changes in question.\n A change similar to this situation may not be caused by the customer, but by the dynamics of our team itself. While working on a similar project, if we learn that one of the libraries we use is no longer supported and that another library with similar features is more effective, we may experience a transition period. We can say that this situation is due to the continuity of changes in technology.\n In addition to changes and updates in technology, we may encounter other changes due to our own team dynamics and organizational decisions. If our team does not use the agile system at the beginning of a project but decides to use it later in order to be more effective, it means that this is an organizational change.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266342,
      "meta": {},
      "text": "There are certain Stages which need to be gone through before one has completely developed a Software, which isn't always trouble-free and straightforward. Lack of Communication within the development team, unrealistic Timelines, cultural changes are some of the issues which can pose Problems during the Process. \n\nWith the constant Evolution & rapidly accelerating Digital Transformation , companies need to adapt certain changes and modifications to overcome these issues and get going. \n\nFor eg:- With increasing Costumer Demands , softwares now need to be more user-friendly and easy to use.\nWithout adaptation, softwares tend to become outdated quite rapidly.\n\n1. Technology Changes : With the rapidly accelerating Digital Transformation and more and more new technologies flowing in , companies need to adapt respectively.\nEg: Virtual Reality and Augmented Reality\n\n2. Organizational changes: For utmost productivity, companies must try improving their management and infrastructure. \nEg: Scrum",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261796,
      "meta": {},
      "text": "Throughout the development lifecycle, changes occur for a variety of reasons. Some of these reasons are technological, while others are financial or organizational. Switching compilers, programming languages (C to C++, C++ to Java), and software drivers or libraries are only a few of the changes. Whether a project manager supports the changes or not, it's crucial to consider why they're being asked and how they might affect the project and delivery process.\n\nSome changes are forced by requirements. These are also the outcomes of a project manager's inability to obtain project sponsor approval. When, for example, the client's requirements change throughout the development lifecycle, a new business idea emerges, new features and functionalities are frequently added.\n\nTechnological changes may create a diversion from the project's original execution plan. For example, new technology-related ideas may have an impact on the project plan's execution halfway through the lifecycle. Clients can be so picky about what they want out of a project that the specifications keep changing. The more a client contacts with vendors interested in taking on the project, the more suggestions they receive for improving the product and lowering development costs.\n\nOrganizational change refers to steps taken by a firm or business to modify a major aspect of its organizations, such as its culture, underlying technology or infrastructure, or internal processes. If the client's organizational changes occur in the middle of the project lifecycle, the delivery team should expect either a closer examination of the project or change requests. When a company is for example restructured, financial considerations, corporate regulations, and new sets of end users are some of the elements to consider as change agents.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262028,
      "meta": {},
      "text": "Veränderungen in der Softwareentwicklung können unter anderem durch die Entwicklung neuer Technologien ausgelöst werden, die sowohl das Vorgehen bei der Entwicklung von Software als auch die Interaktion der Endnutzer mit dieser stark verändern. Oftmals ist es wichtig mit diesen Veränderung mitzuhalten, um nicht von der Konkurenz abgehängt zu werden.\nAndere Innovationen wie die gewaltigen Fortschritte mit Neuronalen Netzwerken machen es möglich vollkommen neuartige arten von Software zu entwickeln, die zuvor schlichtweg unmöglich gewesen wären. \nEin weiterer wichtiger Faktor sind die sich verändernden Rahmenbedingungen für die Entwicklung von Software. So kann es passieren, dass neue Gesetzte oder Regulationen beschränken welche Software entwickelt werden darf. Prominent sind hierfür zum einen der verschärfte Blick auf Datenschutz und Privatsphäre, aber auch neuerdings die Frage, welche Entscheidungen Software und KIs treffen dürfen und welche Software nicht mehr ethisch vereinbar ist. Aus diesem Grund haben bereits gigantische Unternehmen wie Google oder Microsoft eigene Ethikräte einberufen.\n\nDie Veränderungen in der Softwareentwicklung lassen sich grob in drei Bereiche einteilen: \nDer erste Bereich sind die \"requirements changes\", also Veränderungen der Anforderungen an die Software. So könnte unter anderem ein Kunde weitere Features von der zu entwickelnden Software verlangen. \nDer zweite Bereich sind die \"technology changes\". Dies betrifft alle neuen Technologien, oder Veränderungen alter Technologien. Hierbei kann es sich um kleine Dinge handeln, überarbeitete Protokolle oder um vollkommen neue Technologien, wie zum Beispiel Blockchains.\nDer dritte Bereich sind die \"organizational changes\", so könnte eine Firma zum Beispiel entscheiden die Abteilungen umzustrukturieren oder gar teilweise auf eine horizontalere Organisation zu wechseln.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1262280,
      "meta": {},
      "text": "The change in software development is from an empirical process with one strict cycle of work that does not allow mistakes to agile software development. In agile software development the work is divided in sprints with daily scrum meetings. That way at the end of each sprint the team members are able to evaluate how to continue with their work. The reason for the change is that that way they can adapt to new circumstances and learn from previous mistakes meaning they are more flexible and can work more productive.\n One change in the real world is globalization, where you have to work with people from all around the world.\n\nRequirement changes means that during the development process the requirements for the project can change. For example when developing an application the client can change how he wants the design to look like. The team will have to react to that and change it in their sprint backlog for the next sprint. \nIn todays world technology is changing vey fast with new programming languages coming up, serverless networks like clouds and the internet growing all the time. That way in the past decade internet security has become more and more important and therefore has to influence the development of certain projects. \nOrganizational change is a change in the company or team itself. For example 3 members of a scrum team leave the company and therefore new employees are hired. That means that everybody in the new team has to get to know each other and the project or way of working (e.g. programming language, etc.) in the new company so that they can work productively and together as one entity on a project. ",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262705,
      "meta": {},
      "text": "\"Software engineering is a collection of techniques, methodologies and tools that help with the production of a high quality software system developed with a given budget before a given deadline while change occurs\"\n(Lecture 1, Slidesatz \"Agile Software Development\")\nVeränderung ist also schon Teil der Definition von Software Engineering. Um konstant gut funktionierende Systeme zu liefern, müssen diese sich entwickeln und verändern, besonders wenn sich die Umwelt ändert oder die Entwickler das Problem besser verstehen durch die vorangegangene Entwicklung. Ein Beispiel hierfür wäre die Entwicklung des Apple Iphones als erstes Smartphone.\n\nRequirements changes: Weil Anforderungen an das System oft wahnsinnig komplex sind und generell noch nie da gewesene Systeme entwickelt werden, müssen Anforderungen oft geändert oder verbessert werden oder es werden Fehler entdeckt, die repariert werden müssen. Auch kann es vorkommen, dass neue Ideen, die auch implementiert werden sollen hinzukommen z.B. müssen bei Instagram nun nicht mehr nur Fotos sondern Videos verarbeitet werden können, da sich die Wünsche der Nutzer verändert haben.\n\nTechnology changes: Durch Veränderung in der Technology eröffnen sich oft völlig neue Möglichkeiten und daurch auch neue Anforderungen und Wünsche an Systeme. Diese neuen Anforderungen müssen oft in ältere Systeme eingebunden werden oder Systeme in die neue Technology übertragen werden z. B. der Übergang von Banking in einer Bankfiliale, in der Überweisungen auf Papier abgegeben wurden und zentral bearbeitet wurden zu Online Banking auf Smartphones etc. bei dem jeder von überall auf der Welt nur eine Internetverbindung braucht, um Geld in teilweise Sekunden zu überweisen.\n\nOrganizational changes: Manche Software Development Projekte dauern viele Jahre lang an, so kann sich auch in den Firmen einiges ändern: neue Angestellte kommen hinzu, alte gehen, es ist also konstantes Trainig notwendig, um das Verständinis aufrechtzuerhalten. Es arbeiten normalerweise viele verschiedene Menschen an solchen Projekten, so muss die Kommunikation stimmen.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1263636,
      "meta": {},
      "text": "Software development is a relatively new field, that is heavily researched, which is why there are many new discoveries on how to do things differently. Moreover, the requirements for software change as the field develops. \nNowadays there are much different exceptions of software than when it started of people expect an easy-to-use GUI and Top end security for their data, rather than a Console interface and files saved in plaintext. \nThere have been several big changes in software development recently Apps as a Web service rather than a desktop program (for example Office 365) have become popular demanding Software developers to be familiar with web-, technologies, frameworks and security.\nFurthermore there can also be many changes during development of a Software such as:\nRequirement change: \nThe customer requires the software to support new or different features during the development of the product. An example would be That for some reason the client had to change to a different operating System and thus requires the product to work on it.\nTechnology change: \nThere is a new “better” technology that can be used or a flaw with the old technology is discovered requiring to change the technologies used to develop the product. For example it could be that a security flaw is found in a the logging library that the development team was using (like the recent log4j vulnerability) requiring the team to switch to a different logging solution.\nOrganizational change:\nA change in the organization of the software development process. For example the team might switch to a different modeling language or change their documentation standards, use a different strategy to report progress or changes of the workflow used to develop the software.\n\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264588,
      "meta": {},
      "text": "Change in software development is inevitable. There are many reasons for the evolvement of software, such as the demand for new features, vulnerability to bugs and constantly improving hardware. A simple example for change in software development would be video games, which have evolved significantly. The software used to be simple, allowing a computer game only to played in a 2D-format with few pixels on the screen. Nowadays because of the technological advancements and higher-end programming languages the creation of complex 3D-games is possible. This example of computer games can be used to explain three areas of changes in software development. \n\t\t \nRequirements changes describes the demand for improving and maintaing good software. In the case of computer games, new features have to be added frequently, otherwise a lot of people will loose interest. But also the code has to be reviewed and improved otherwise developers will be confused and bugs will creep in.\n\nTechnology changes entails the improved technolgy at our hands, allowing better software. For instance computers nowadays have much bigger memory and a lot more pixels on the display. This paves the way for more complex and graphically advanced games being made. \n\nOrganizational changes consist of changing the team structure and also the development environment.\nHaving 20 developers work on a single task would not be efficient, so different models are created, for example scrum, which has the advantage ob being very agile. Furthermore, decisions like which IDE to use for the developers are included in organizational changes.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266111,
      "meta": {},
      "text": "Software Development - Branche mit einem der schnellsten Tempos der Entwicklung und Modifizierungen der Welt. Die Frage \"warum gibt es Änderungen und Entwicklung überhaupt, und wieso ist die so schnell?\" würde ich so beantworten: Wo eine Nachfrage gibt, da ist auch einen (in dem Fall \"mehrere\") Angebot(e). Software Products sind überall, sie erstrecken sich heutzutage auf alle Bereiche des Lebens der modernen Menschen: von Smart Home Systemen bis zu hi-tech Biolabors, von dem Zugang zu allen Informationen der Welt mit Hilfe nur vom Handy in deiner Tasche, bis zu Beherrschung des Weltraums mit Hilfe von Raketen.\nMenschen wollen immer, dass ihr Leben leichter und bequemer wird. Dazu hätten sie gerne z.B. ein paar neue Features auf ihrem Mac, was bedeutet ein neues Update von Apple gefordert ist. Wettbewerbsgeist herausfordert Unternehmen zu weiteren und größeren Schritten in Software Engineering Branche (wie z.B. Konfrontation zwischen Apple und Microsoft). Software Developers streben zum Progress auch für das Hochgefühl.\nRequirements changes: Wie beim oberen Beispiel gesagt, Menschen fordern mehr und mehr um ihr Leben zu erleichtern. Außerdem sind schnellere und effizientere Software-Lösungen immer bei z.B. wissenschaftlichen Problemstellungen gefordert.\nTechnology changes: Um eine höhere Effizienz zu erreichen, muss man ständig sowohl schon existierende Technologien modernisieren, als auch ganz neue entwickeln. Prinzipien der Berechnungen oder Sortierverfahren, die mehr speicher-/energiesparend sind, können dazu einen Beispiel sein.\nOrganizational changes: Organisatorische Fragen sind auch sehr relevant für Software Development. Auswahl des qualifizierten Team, sowohl eine richtige Leitung spielt eine Rolle für den Erfolg des Endprodukts. ",
      "score": 91.7,
      "language": "GERMAN"
    },
    {
      "id": 1261303,
      "meta": {},
      "text": "Example: Development of a roomFinder App for the University:\n\nRequirement changes:\nDuring a software development there are many changes, since on the one hand the requirements and/or desires change nevertheless or new ideas would like to be added by the stakeholder.\n\nAlso some people don’t really know, until they see it. First they say to the developers \"Do what you think and then I say if I like it or not\".\nA main reason is, that the requirements of the stakeholders are poorly defined, so the developers don’t really know what to do. So the customers first have to better define their wishes.\n-> Example: A requirement is that the app has to be accessible for mobile devices.\n\n But that's not that meaningful. Does it only apply to smartphones or also laptops and Tablets?\n\nTechnology changes:\nAnother reason for change is the technology is changing so fast. We have this rapidly changing technology, which means everyone wants the latest and greatest. With technology I mean for example the software of the camera in an mobile phone. \nDuring a project to release a new version of a software, for example, a competitor already introduces a newer, better technology. Due to these rapid developments, it can happen that during an ongoing project, the customer's wishes change and it is said, for example, that one would also like to have the newer features that the competitor has already presented.\n\nExample Smartphone software development: current customer request :camera with 5x zoom. During development, another company brings out a camera with 10x zoom. Thus, the customer wants the customer request to be at least a 10x zoom.\n\nEx: The app is developed for Android 10, but when the project is finished, Android 11 has been released, and the customer wants, that the app is customized also for Android 11.\n\nOrganizational changes:\nAdditionally there will be new stakeholders during the process or some stakeholders leave the project.\nDuring a process, the best programmer in the company, for example, may be absent due to illness for a few weeks. A replacement must then be found. However, there is no such good one and so two other programmers are hired to replace him, but they need twice as much time. This change increases the budget because two programmers have to be paid and the delivery date is delayed. So it is always possible that the process flow has to be reorganized due to some situation.\n\n\n__This part above was from my homework last summer term. For this I got 4.5/6 points because the organizational change and the example of technology change was not clear enough. Therefore I added some new sentences.\n\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262281,
      "meta": {},
      "text": "The field of software development tend to change constantly, because when a new software starts, new needs emerges by users of the products. And after fulfilling the needs with updates, users would be having new requirements to a software, either needs that wasn't found until the update was executed or a new requirement due to the update, creating a recursive loop. An additional reason is, if developers finds/invents an efficient way to design the software.　\nFor example, I once introduced a time management app to efficiently manage the working time in a store. Though, after some time, the employees asked me to add some functions that would make it more efficient, which I did. Like this, new programs/updates fulfill some needs, but causes users to have more, advanced requirements\n\nRequirement changes are the act of adjusting to what the customers require in their product or service that they use. The explanation above also explains this area of change. After the introduction, I had to adjust to new demands.\n\nTechnology changes happens when developers find a new, efficient way to create a program/product, or create a new program/product. For example, assume there is a program that inspects a 2D grid with a random size, from left to right, up to down. This would work, though, if the developer would find out about threads, the program would be shifting to threads due to its efficiency.\n\nOrganizational changes are structural shifts that companies meet, due to its new business strategy, leader, technology etc., to gain more benefit. For example, it would be an organizational change if your boss changes and the boss demands employees to work in a team of 8, which was originally 4.  ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263505,
      "meta": {},
      "text": "Change can often happen in software development because during the process a lot changes like requierement of the customer, new updates of the software, new laws.  \n\nRequirement change happens when for example the customer changes his mind about what the software should do. Now the customer wants that not everyone should have access to specific area of the system therefore some things have to change.\n\nTechnology change can happen if we have a new release of the existing system. As example we can highlight the headphones. At the first beginning people used cables to plugin to the smartphones. Nowadays everyone has a bluetooth headphone. That means every smartphone should be able to connect with bluetooth therefore the requirement of smartphones changed.   \n\nOrganizational changes happen, for example, when the project manager says we need more IT specialists and hires more employees, he also changes all the tasks and groups. A organizational change occurs through the hiring of new employees.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263633,
      "meta": {},
      "text": "Software development doesn't happen in a vacuum. The development team is in constant exchange with the outer world. Other parts of the world set the requirements, provide the necessary tools, are inhabited by the enduser and even decide the developer team. There is not a single step in the development process which doesn't interact with the real world. It is an incredibly fast changing world, and therefore the development has to adapt to this change. \nNew and changing challenges of our time might shift the focus on which software should be developed. One example of that would be covid19, which heavily changed the way we live and use all kinds of software. \n\nrequirements change comes from changes in the user requirements, a better understanding of the customers needs and mostly has to do with a poorly defined requirement development process. \nOne Example of change is again covid19 which forced everyone to stay at home and therefore changed the user requirements for a lot of software. \n\ntechnology changes are amongst the most exciting changes. New technologies are developed every day and might completely change the possibilities of software development and the platforms for which\nsoftware is developed. One recent example would apples M1 chip which lead to a lot of companies having to adapt and optimize their software to the new processor. \n\norganizational changes happen because of changing leadership, an acquisition by another company or restructuring of the company. One Example would be the controversiall acquisition of twitter by Elon Musk who will undoubtedly give twitter a new direction and change the companies politics.   \n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264296,
      "meta": {},
      "text": "Warum es während der Softwareentwicklung zu Veränderung kommt, kann verschiedene Gründe haben. Allem voran ist die Softwareentwicklung ein so großer und komplexer Prozess, in dem so viele Leute involviert sind, dass es meist nicht sinnvoll ist diesen von Anfang bis Ende hundert Prozent durchzuplanen. Dadurch ist es notwendig Veränderungen Raum zu lassen und sich an diese anzupassen, anstatt sie durch eindeutige Planung zu eliminieren. \nEine der größten Veränderung die wir in den letzten 50 Jahren erfahren durften ist die Erfindung des Internets. Es beeinflusst mittlerweile den Alltag jedes Menschen. Des weiteren sieht man den Einfluss des Internets auch in Firmen. So vereinfachte sich die Kommunikation sowie Organisation erheblich. Apps wie Microsoft Teams oder Zoom finden in jeder großen Firma Anwendung.\nAnforderung ändern sich, da zu jeder Softwareentwicklung auch Kunden gehören, die die Software in Auftrag geben. Wenn die Kunden beispielsweise nicht eng genug in den Entwicklungsprozess eingebunden sind, könnte es sein, dass sie später mit dem Produkt unzufrieden sind und zusätzliche Änderung verlangen.\nTechnologie ändert sich stetig. So will man immer die neueste und beste Technologie. Entstehen während der Softwareentwicklung also neue für die Software relevante Technologien, kann das große Veränderungen mit sich bringen. Ein Perfektes Beispiel ist der Wechsel der API während der Entwicklung, weil die neue API mehr Funktionen bereitstellt.\nAuch bei der Organisation des Entwicklungsteams können unerwartete Veränderungen auftreten. Alle Mitarbeiter sind nur Menschen und daher muss man sich auf Fehler oder andere externe Faktoren vorbereiten und sich an diese anpassen.  So kann es beispielsweise passieren, dass ein Mitarbeiter krank wird und so seine Arbeit auf die restlichen Teamkollegen aufgeteilt werden muss. \n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264996,
      "meta": {},
      "text": "Veränderungen in der Softwareentwicklung passieren unter der Prämisse der Komplexität der Aufgaben, so ist die Lösung von Projekten fast ausschließlich im Team zu erarbeiten. \nDadurch ergeben sich laufend Veränderungen angesichts auftretender Fehler, die korrigiert werden und der in Folge des ständigen Austausches mit anderen Teammitgliedern vertieften Verständnisses der Software, sowie Anpassungen hinsichtlich veränderter Anforderungen. \nNehmen wir zum Vergleich die Autoindustrie, so ergeben sich verblüffende Parallelen. \nVeränderungen in der Auffassung der Mobilität der Zukunft und Veränderte Schwerpunkte in Betrachtungen umweltschonender Technologien haben zu der Entwicklung von elektrischen Autos geführt, anders gesagt, haben sich die Anforderungen an ein Auto verändert. \n\nSpeziell gibt es die drei Bereiche von Veränderungen. Die Veränderungen von Anforderungen, von Technologie und organisatorische Veränderungen. \nDie Veränderung von Anforderungen kann etwa die Erweiterung der Aufgabenpalette sein, die ein Kunde an eine App stellt, die etwa noch in der Entwicklung ist oder schon entwickelt und deren Funktionalität erweitert werden soll. \nTechnologische Veränderungen kann man sich anschaulich anhand von Fernsehern vorstellen. Waren vor ein paar Jahren noch LCD Fernseher der letzte Schrei, hat die Entwicklung von LED und nun OLED Fernsehern die Firmen dazu gezwungen ihre Produktion und Entwicklung anzupassen. Sie gingen eine Veränderung durch. \nOrganisatorische Veränderungen sind unter anderem auf die lange Zeit zurückzuführen, die ein Projekt braucht um fertig gestellt zu werden. In dieser Zeit verlassen etwa Teammitglieder das Unternehmen, wechseln in andere Abteilungen oder gehen vllt in Rente, weshalb neue Mitglieder eingestellt und eingearbeitet werden müssen. \n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266119,
      "meta": {},
      "text": "The main reason for change in software development is having to adapt to change in the real world like new or different legal rules or new developments in the market through new innovations. An example for this in the real world are new payment methods or at least another favorite payment method for the majority of people, like for example contactless payment.\nThe area of requirements changes can be explained as changes in the customer's wishes and demands for the software. For example the customer might want the software at an earlier time than initially planned and therefore the development team has to lower the final quality of the software or the amount of overall functions of it in order to manage to be finished in time for the new deadline.\nOrganizational changes describe the new way of organizing the development of a software. This means using the empirical process control model, by working with for example scrum, instead of continuing to use the defined process control model.\nLastly the area of technology changes can be described as adapting to new emerging technologies like for example Augmented Reality. A place where this could for example lead to changes in software development is the fashion industry where you might no longer just showcase your pieces but even let the customer digitally wear it.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266265,
      "meta": {},
      "text": "Changes happen, because the world and the culture are changing and by time technology is evolving. For example, nokia has long been the leader in cell phone sales, but new technologies came along and the smartphone emerged, quickly replacing the old cell phone.\n\nA requirement change could be that in developing social media apps trends can change how to communicate, so the app has to be updated to follow this trend by adding new features or changing the apps concept. Such as many messenger follow the trend, that people not only want to chat, but also want to present whats going on now in their life by sharing photos or videos.\n\nA technical change would be that the language in which the programm is written is no longer supported that much or other languages turn out to be much more advantageous. Such as it is in Android development, Google prevers Kotlin over Java, so with time more and more would be supported in Kotlin by Google but not in Java.\n\nOrganizational changes come up for example if the developt programm gets bigger and bigger, so you need also a bigger development team, maybe with new roles such as an designer. The game Minecraft was developt by one person in the beginning, but after time more people played the game and it needed more features in a shorter time with more quality, so the team grows.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266371,
      "meta": {},
      "text": "Software engineering is a problem solving activity which requires to do analysis in order to understand the given problem and being able to divide it into pieces and in the following to do synthesis to put the divided and worked pieces together into a larger structure. While proceeding this different techniques and methodologies are being used. Software development is mostly described as agile because in order to deliver a high quality software development with a given budget a hard working team should deal with complexity and change.\n\nCoping with this issues are mostly done through agility also an empirical process control model.  An empirical  process model aims to inspect problems with gaining experiences through the process and try to adapt the software development to the occurring problems. For example apps that we use frequently are being developed through the years because of the changes in the user's new requirements or expectations. So in case of a need a software development is always open for changes. \n\nI want to explain requirement changes in detail giving examples of real life. In the previous years Instagram did not have the functionality to add a link to a story and share it but in time with the high popularity of influencers and big brands choosing to do their PR and marketing mostly through social media a new requirement is born: being able to add links of articles to stories. In this case the software was updated as the users wee able to share links on their stories.\n\nTechnological changes are also another aspect of change in software development. While technology rapidly being improved so do new languages, tools, frameworks, approaches and services come up. So the software developers have to be able to keep up all with these changes and adapt to them. In order to deliver high quality software in a given time for the optimum price. This aspect drives us immediately one to another: organizational change.\n\nIn our century beside of the change and adaption in software development, every human being witnessed adapation and change in their daily lives with the Covid- Pandemic. We had to maintain the quality of work what we were doing, attending for classes, doing homework, attending meetings, holding presentations etc. but we had to find a new way to get those work done. So we started to use Zoom more frequently for example as we did before. Also when a dynamic of a software development team changes or they have a new manager or the rules they have been following for a long time are change, they should be also be able to fit the new working environment and dynamic because software engineering is a team work.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266405,
      "meta": {},
      "text": "Remark: I reused my answer from last year!\n\n\nSoftware projects are dependent on several aspects, and since circumstances always change (e.g. goals for the project, knowledge from market research / user surveys, introduction of new and better technology), there is always change in software development.\n\nConsider two companies merging (organisational change). Then, the according software needs to be adapted to reflect this merger and the newly added data endpoints, customers, functionalities, etc.\n\nLet's pretend, we are in 2012. Most companies use REST APIs and Facebook develops GraphQL as an alternative query language for a companies API. Consider a company having performance issues due to their applications sending several API requests while only needing a bit of information from every request. They see GraphQL as a good solution and make a technology change for their software projects to switch from REST to GraphQL.\n\nConsider a company providing a messaging app with a functionality to create groups with up to 5 members. They collect feedback from user surveys and realise that that member limit is set too low. Therefore, they decide to take this member limit up to 50 and need to make a requirement change for the software to reflect this change.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266512,
      "meta": {},
      "text": "World around us is constantly changes, so software engineers must quickly adapt to these changes. Requirements for software engineering project can change - world changes also for customer and so their requirements for software changes. For example, with DSGVO appeared new requirements for handling personal data. So software engineers now need to follow these rules and adapt their process of development and software.\n\nAnother obvious example of change is technological change. Technologies develop constantly and software engineers need to stay in trend. For example, cloud based development. With stable and fast internet connection cloud based data servers became more popular. So, today customers often demand cloud based application.\n\nTo adapt to all this changes, software engineers also develop new oranisational tactics. Before process was organized through organizational maturity with sctrict rules and plan. But today software engineers rather use agile processes that are much more adaptable to constant changes.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262247,
      "meta": {},
      "text": "Developing a software is solving problems, and the problem and the tools for it can change based on real world event, which leads to the changes in software development. For example, when microcomputers first came out, the softwares all look very simple. This changes when average consumers begin to use them and now many modern softwares have very beautiful UI. \nRequirement for a software project can change due to new needs from customers and markets. For example, nowadays many video sites, which in the past only provides video playback also privide live streaming, because real time streaming is loved by public and provides great profit. Therefore requirements change so the sites can provide these new services. \nTechnoloy changes are vital to keep softwares up to date. A recent example is Apple's Mac moving to its own ARM-based SoC. This required many developers to adapt their code to new tchnologies so that their softwares run natively and their customers fully enjoy the benefits of ARM. \nThe organization of dev team can also change, in order to optimize the development process and increase its efficiency. A famous example is Microsoft's Longhorn project. During early developments, many ideas were proposed by different teams and added into the OS, making it gigantic and full of bugs, and could never be released on schedule. Therefore the organization changes and the whole project was reset. Some good ideas were kept, others were ditched. Teams work much more efficiently, and it was finally released as Vista, laying the fundation of all future Windows. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262888,
      "meta": {},
      "text": "Note: A part of the answer is from my submission last year:\n\nIn the field of software development, the requirements, the technology, and the organization of the project are often not specified from the beginning. It takes time to develop a software, this can not be done in 2 weeks. So therefore during the project duration a lot of factors can change. Requirements can change during implementation or the organizational or technical environment may change. These changing factors are challenges when it comes to software development. Take, for example, a car-sharing app that is to be developed: \n\nChanges in requirements can occur when the wishes/requirements of the customer become more concrete during the development of the software or even new wishes from the customer are added. For example, in the car-sharing app, the customer only later realizes that it is important to him that the user can filter the number of seats within a car. \n\nChanges can also occur in the area of technology. Especially when you consider that technology changes so quickly.  For example, the car-sharing app was written for a specific operating system and as the software was being finalized, the operating system was updated/changed. So the developers have to be able to withstand the changes. \n\nFurther changes during software development can occur within the organization of a project. So a new stakeholder can be added. Thus there are further/new requirements within the organizational structure, which must be fulfilled. In such cases, there can be time delays or additional costs. For example, there is a new project manager within the customer's company who expresses further requirements/wishes that have to be implemented. To apply this to the example of the car-sharing app, the new project manager wants to extend the app not only for the city of Munich but also for the city of Berlin. This will lead to time delays and possibly the budget will also expand.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262969,
      "meta": {},
      "text": "Change happens due to a number of reasons. Clients demanding new things to be added, things to be cut out, errors and bugs happening and overall developers just having a better understanding and wanting to improve the project they are working on.  Changes can also happen due to other external factors, technological factors etc...  \n\nLets take an example of developing a mobile application.   A requirement change would be the client wanting some new features added on top of the existing ones.\nThe developers then need to address this and make it happen.  Technology changes would be the application always having to be up to date and compatible with every new mobile software version, update and overall with other applications and systems.\n\nWith changes comes the need for organization changes.   This would be keeping other coworkers informed about all the changes happening, about the new requirements and keeping them up to date with every new source of information and generally keeping a change log.\n\nOrganization change also means having to reorganize and start a fresh approach to solving the new challenges ahead.  An example could be change in leadership or change in organizational culture (how things work and are organized).\n\nNOTE: I re-used this solution from last year since I am repeating the EIST course this semester. It is my own and personal solution. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263293,
      "meta": {},
      "text": "Changes is an integral part of software development. Unexpected changes might happen every single day in different aspects so that the software development team is supposed to adapt to these changes. For instance, the API document of a framework that a team uses might update regularly, or stakeholders might have a different thought and change the requirement of the project that a team is working on. In this sense, applying empirical process control model and holding daily scrum meetings are considered as necessary and indispensable.\n\nChanges can mainly be categorized into three different areas: requirement changes, technology changes and organizational changes. Requirement changes mostly come from the client and stakeholders, who request for new or different requirements during the software development process. Technology changes include update of frameworks and codes, emergence of new alternative technologies and change of technology that is used during a software development process. Organizational changes describes the change in the organizational aspect, mainly the change of team members or superior personals or change to the software development plans, etc..",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263877,
      "meta": {},
      "text": "Die Anpassung in der Softwareentwicklung ist ein wichtiger Faktor, welcher berücksichtigt werden muss. \nHierbei können Gesetze der Regierungen oder der EU, die Anpassung der Software benötigen, unerwartete Anpassungsarbeit hervorrufen. Aber auch neue Trends oder Entwicklungen, welche Berücksichtigt werden müssen, um nicht von der Bildfläche zu verschwinden, können jederzeit aufkommen. Ein wichtiger Faktor ist zudem noch die Konkurrenz, die einen gewissen Maßstab legen kann, an dem man sich früh genug anpassen sollte. \n\nEin Beispiel einer Firma, denen es nicht gelungen ist, ist die Sozialmedia Plattform MySpace, welche noch 2009 eine der meist besuchten Internetseiten war, aber einfach nicht, im Gegensatz zur Konkurrenz (Facebook), neuer Entwicklungen und Maßstäbe gleich setzen konnte. Facebook brachte immer neue Features raus, wohingegen MySpace keine große Wandlung unternahm, was die Seite unattraktiver machte. \n\nRequirement Changes: Diese Änderungen werden oft durch Gesetzesänderung von Regierungen hervorgerufen. Ein Beispiel ist der letztes Jahr eingeführte Artikel 17, der Firmen dazu zwingt einen Uploadfilter zu besitzen, welche das Urheberrecht kontrollieren. Firmen die diesen davor nicht hatten, mussten sich Anpassen und diesen Entwickeln.\nTechnology Changes: Durch die Veröffentlichung neuer Hardware oder Möglichkeiten Medien zu Repräsentieren (z.B. Aufstieg des Handys) waren große Webseitenbetreiber gezwungen diese auf die Auflösung eines Handys zu skalieren oder gar neue Apps zu programmieren, um Marktrelevant zu bleiben. \n\nOrganizational Changes: Durch die Kündigung von Mitarbeitern schwindet die gesamte Arbeitszeit, die auf ein Projekt angewandt werden kann. Um das selbe Ergebnis zu erzielen muss jetzt die Organisation angepasst werden. Verschiebt man die Deadline oder mindert die Ansprüche? Solche spontanen Änderungen müssen im Team entschieden werden. \n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264861,
      "meta": {},
      "text": "Firms are actors in an environment and thus exposed to innovations and changes in the environment, such as technological, legal, or governmental changes. This also has an impact on software development as the software has to be aligned with the current standards and requirements. Since software development projects may take some to develop, the changes in the environment have to be considered. One example for change in the real world is Nokia: Nokia was the market leader of mobile phones for a long time, but when Apple launched its smartphone, Nokia was not able to respond with its own competitive smartphone at this time (since Nokia did not anticipate that there is a new category of mobile phones). Consequently, Nokia almost got bankrupt. \n\nRequirements in software development refer to the problems that have to be solved. Thus, requirement changes refer to changes in the problems that have to be solved. For example, at the beginning of the project, the requirements are discussed with the customer. However, after a while, the customer comes up with new requirements after aligning with other departments in the company.\n\nTechnology changes occur due to innovations that improve existing technologies and create new products in the market. For instance, with the market launch of the iPhone, Apple made a remarkable innovation in the mobile phone industry, leading to new technological standards.\n\nOrganizational change refers to changes that have an impact on the organization as a whole. One example of organizational change is a change in the organizational structure of the company (e.g. the introduction of a matrix structure).\n  ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264911,
      "meta": {},
      "text": "Wir befinden uns in einem kontinuierlichem Wandel, aus technologischer, wirtschaftlicher aber auch menschlicher Hinsicht. Und genau durch diese Veränderungen besteht die heutige Herausforderung der Softwareentwicklung darin sich permanent weiterzuentwickeln und der Zeit anzupassen, um auf dem Markt beständig zu bleiben.\n\nEin konkretes Thema, welches aktuell eine Weiterentwicklung fordert wäre beispielsweise Nachhaltigkeit.\nNachhaltigkeit wird von Tag zu Tag wichtiger, vor allem wenn es um die Anforderungen der Bevölkerung, aber auch neue und strengere Vorschriften geht. Somit ist es an den Unternehmen sich an diese Gegebenheiten anzupassen um weiterhin vorschriftsgemäß und attraktiv für die Kundschaft zu sein.\n\nAnforderungsänderung ist eine unvermeidbare Software-Entwicklungsaktivität und kann aufgrund veränderter Benutzeranforderungen oder der Verfügbarkeit neuer Technologien auftreten. Das zeitnahe Management dieser Änderungen ist für eine erfolgreiche Softwareentwicklung von entscheidender Bedeutung. \nBeispielsweise setzt die Bevölkerung wie anfangs erwähnt seit neuerem hohen Wert auf Nachhaltigkeit, sodass sich Unternehmen bemühen sollten sich an diese Anforderungen anzupassen.\n\nTechnologischer Wandel  bezeichnet die Idee, bestehende Technologien zu verbessern und neue zu entwickeln, um bestehende Produkte zu verbessern und neue Produkte auf den Markt zu bringen. Dieser gesamte Prozess trägt dazu bei, neue Märkte und Marktstrukturen zu schaffen und veraltete Märkte zu ersetzen.\nBeispielsweise die Entstehung der ersten Smartphones stellte die Technikwelt ordentlich auf den Kopf und fordert bis heute eine ständige Softwareentwicklung um nicht wie beispielsweise die Firma \"blackberry\" von den Konkurrenten zur Seite gedrängt zu werden.\n\nOrganisatorische Veränderung bezieht sich auf Handlungen, bei denen ein Unternehmen einen wesentlichen Bestandteil seiner Organisation oder Unternehmensstruktur verändert, z. B. seine Unternehmenskultur, die zugrunde liegenden Technologien, die Infrastruktur oder seine internen Prozesse. \nFür die Nutzung neuer Technologie, wie beispielsweise \"machine learning\" muss sich die Firmenstruktur anpassen um von den neu entstandenen Möglichkeiten zu profitieren. \n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1264929,
      "meta": {},
      "text": "Change happens in software development because the industry and the technology is always improving. There are always more problems to solve and there are always new ways to solve problems. That's the nature of mankind. Competitive and creative developers contribute to this change. Also, changes in other industries and their requirements of innovative software solutions force evolution in software development. Last but not least, there are some inevitable external factors that force software development to change. This might be government related and also natural too. For example, the Covid pandemic was an inevitable force of nature which led to changes not only in software development, but in every single aspect of our lives. Software development teams in commercial bussinesses had to adapt the businesses into the digital world with online services. Also remote working made businesses improve their internal software systems. \n\nOne example of organizational changes in software development is when a member of the team becomes unavailable to work on the project for some reason (quitting, health problems...) This forces the team to reorganize and arrange the workload. \n\nAn example of technology changes in software is when Apple decided to use its own M1 chips on MacBooks. Applications had to adapt to this technological change and convert their software accordingly. \n\nLastly, an example of requirements changes in software is when the customer requires extra functionalities to the product. Naturally this leads to changes in the development process.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265131,
      "meta": {},
      "text": "Why change happens in software development: Es kommt öfters zur Veränderung , daher die Bedürfnisse und die Technologie heutzutage sich sehr oft ändert und entsprechend angepasst werden muss. Zum Beispiel werden neue Features hinzugefügt, welche vorher nicht möglichen waren, aber durch die Veränderung möglich sind. \n(Softwareupdate beim Smartphone wodurch neue Funktionen hinzugefügt werden ).\nEs ändert sich aber auch durch um Fehler zu beheben. (Sicherheitslücken in einem System werden durch eine neue Software behoben).\n\nRequirement change: Beschreibt Veränderung der Software (software Development activity) und wird verwendet um das System an die Anforderungen der Nutzer anzupassen durch hinzufügen neuer Funktionen, beheben von Fehlern. Beispiel : Updates für Handy, Computer, etc.\n\nTechnology change: Technische Veränderungen werden durchgeführt um bestehende Technologien zu verbessern und an neue Gegebenheiten anzupassen. Beispiele: Autos, Smartphones, laptops wurden alle über die Jahre immer weiter verändert und verbessert, indem man die vorherige Technologie verbessert hat.\n\nOrganizational change: Veränderungen in der Organisation. Beispiel: Wenn eine Firma einen neuen Chef hat, muss die Firma neue Organisatorische Anpassungen durchführen, daher der neue Chef vielleicht ein neues Business Model anwenden möchte. Ein weiteres Beispiel ist die Anpassung an neue Technologien, welche implementiert wurden.  \n\nZwei Arten von Organizational changes:\nAdaptive Veränderungen: Update des Computer Systems von Windows 8 auf Windows 10.\nTransformative Veränderungen: Das übernehmen einer customer relationship management software (CRM), welches jede Abteilung einer Firma erlernen und bedienen muss.\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265347,
      "meta": {},
      "text": "Because software development is an iterative process per se. It lies within the nature of an iterative process that changes happen along the way because not every variable that is part of determining the outcome of the product can be predicted. \nRequirements change:\nSE is a customer-centric process meaning that the customer and their needs are determining how the product will look like. It is often the case tho, that customers themselves do not really know what their problems are. It is thus natural, that problems get redefined on the way, and in turn, the requirements of an MVP get reshaped by moving with the customer's needs. An example is the investment app \"Pigtie\": they initially started out by building a micro-investing service application for investing small amounts of money into ETFs (need: no easy way to start investing). They quickly realized that the actual problem was the lack of trusted resources for the customers to educate themselves about financial topics (need: no easy and trusted way to start learning about investing) and pivoted.\ntechnology change:\nOnce the needs change, of course, the technology deployed to provide an adequate solution for those needs also changes. Furthermore, as developers learn how to solve the needs identified, they improve things.\nAnother aspect of technological change is simply innovation. 10 years ago only a small group of developers deployed distributed ledger technology to build applications on it. Now nearly every smart talent tries to find a way to build their application around it.\norganizational change:\norganizational change has many facets that can cause a change in SE. A simple example is the growth of a company. Starting out as a startup with maybe a hand full of employees development cycles are fast, iterative, and agile. As soon as the company matures structures need to be set in place and processes streamlined which causes longer development cycles and bureaucratic changes and issues.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265730,
      "meta": {},
      "text": "Change happens in software development because of several factors. I want to elaborate on this topic in line with the changes in overall technology as well as within a scrum team. As the technologies improve rapidly due to market competition and new discoveries, companies need to utilize and adapt to new technologies in order to survive. For example, we can take the example of the iPhone, when it was newly introduced in the market, other tech giants such as Google started to develop and introduce the new smartphone software Android. Also, many different companies started to make major changes in their software development. Now, let's take a look at changes within a scrum team, to develop software there have to be developers, scrum masters, and product owners. The requirement changes mostly happen due to the product owner because the definition of the product might be changed bit by bit during the software development. Also, there can be a technological change because the developers need to make the codes that they have written work without failures and have to make it better with every team meeting. Last but not least, there is an organizational change because the scrum master has the duty to find better procedures and ideas to make the software development work better.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265894,
      "meta": {},
      "text": "Änderungen in der Softwareentwicklung passieren täglich, da die Softwareentwicklung ein sehr agiler Bereich ist. Fast jeden Tag werden z. B. neue Programmiersprachen, Frameworks, Softwareentwicklungsprogramme etc. beziehungsweise neue Versionen diesen vorgestellt, über die sich Softwareentwickler und Softwareteams bewusst sein müssen, um marktfähig zu bleiben.\nSolch eine Änderung kann zum Beispiel an den Versionskontrollprogrammen erkannt werden. Im Jahr 2005 ist das heutzutage sehr bekannte Versionskontrollprogramm Git erschienen als Konkurrent zu dem damals sehr populären SVN. Innerhalb der letzten 17 Jahren hat Git nun fast vollständig SVN abgelöst und wird nun fast ausschließlich in allen Softwareteams genutzt. Dadruch mussten sich auch Entwickler auf diese Umstellung einlassen und mit Git vertraut machen.\n\nAnforderungsänderungen entstehen zum Beispiel, wenn ein ein Product Owner oder ein Kunde neue Anforderungen an das Softwareprojekt hat. Wie zum Beispiel, dass neue Features implementiert werden sollen oder dass die bestehende Features angepasst werden sollen. Ein Beispiel hierfür ist, dass ein Kontaktformular auf einer Webseite angepasst werden soll und nun ein zusätzliches Feld für ein Datumsvorschlag beinhalten soll.\n\nTechnologieänderungen entstehen zum Beispiel, wenn Software auch auf neuerer Hardware verfügbar sein soll. Solch eine Änderung ist auch zurzeit bei den neuen Apple Laptop und Desktop-Rechnern zu erkennen. Diese basieren auf der ARM Architektur. Damit Programme, welche ursprünglich für die x86 Architektur gebaut wurden auch auf der ARM Architektur funktionieren, müssen diese angepasst werden.\n\nOrganisatorische Änderungen entstehen zum Beispiel, wenn die grundsätzliche Koordination wie Software im Team entwickelt wird, geändert wird. Ein Beispiel hierfür ist die Umstellung auf agile Softwareentwicklung und Scrum. Dadurch sind eine Reihe an neuen Meetings und Prozesse entstanden.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1261294,
      "meta": {},
      "text": "Just like many areas, information technology is evolving alongside technology and society. In order to keep up with these changes, it is important that software development adapts to new use cases, such as the increased use of mobile, connected and smart devices that complicate and enlarge system architectures, as well as taking advantage of technical possibilities, such as new data transmission technologies or increased processing power in accordance with Moore's Law. Software development must be able to react to these changes increasingly rapid and effective. \n\nWith  changes in society, technology and governmental institutions, the requirements for software are also constantly evolving. One example for this change is the software in an automotive vehicle, which is changing from primarily being a driving control system to a multimedia/entertainment system that must also increasingly include interfaces with smartphones and other devices. The requirements often correspond closely to changes in technology itself, such as the improvement of artificial intelligence, wireless communication and other technologies, which make it possible, for example, to program self-driving delivery robots via a central system in industrial production facilities. Organisations and structures such as those in large international companies are also changing and require new and different systems and interfaces. An example is the recent emergence of remote working structures, in which the cyber security system of an organisation must have the same security standards both at the regular workplace and all over the world.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262172,
      "meta": {},
      "text": "Change can occur in software development for several reasons. Some of them being - change in teams, change in technology, or even change in what the teams need. An example of the same would be the ban of TikTok in India, requiring companies like Facebook to develop and push reels at an exponentially fast rate to fill that void left by the lack of TikTok for creators in India and capture that market as quickly as possible.\n\nRequirement changes are the changes in what the teams are required to provide to the end-user. This can occur constantly during the development process. For example - in case the user does not like a certain feature, or iteration and wants some changes to be made.\n\nTechnology changes occur when the teams need to change the technologies currently in use. For example - if a problem occurs, that the currently-in-use technologies do not support a solution for, there will need to be a change in that technology, or a workaround for it.\n\nOrganizational changes occur when the current organization of the teams is not working efficiently enough. For example - one team member is not putting out good enough code, and is consistently slacking on their tasks, the team will have to remove this member and replace them, or distribute their workload amongst the rest of the team. Another example for this would be if the team is not communicating enough, which would need a change in the meeting schedule, where the team meets more often to let each other know, what they have done, and if anything else needs to be changed.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262401,
      "meta": {},
      "text": "In an ever changing world, where new technologies are being developed within days software plays an important part. Its widespread use in every field makes it subject to vast change. Change is happening simply because it is needed in order to fulfill the demand for software around the world. \nRequirement change is an inevitable software development activity that is occurring due to many different things. For one the requirements for software and its complexity is growing fast. If you compare for example space flight. Years ago only a few megabytes of computing power were needed in order to land a vessel on the moon. Nowadays even a smartphone is more powerful  by a huge factor. Of course the software plays a huge part in this. In fact change software was the driver of this development in the first place.\nTechnology change essentially means that for a given input you generate more output. To achieve this there are for one new technologies and their superiority but also, equally important software. It is the only thing that can even enable technologies to supersede their predecessors. \nWhen companies change their organizational structure e.g. underlying technologies, it is most often a change in software as it is an easy relatively cheap and risk free way to increase the efficiency or output of a company by for example automating or simplifying human tasks.\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263716,
      "meta": {},
      "text": "There are a lot of different types of changes, which are possible during the long period of the development phase. We live in a fast and changing world, so the software development also has to change a lot. For example the change in how people consume media today.  \n \nRequirements changes: \nCan occur due to changes in user requirements and technologies. Handling these kind of changes are very important for the software development project, so your final Product stays modern and fulfills all the new requirements and needs of your users.\nFor example:\nSecurity became more and more important over time due to mass use of the Media/Internet etc. \n\nTechnology changes:\nThese changes are very important for software development, because some developments take a long time to finish and during this time a lot of Technology changes can happen --> So its very important to adopt to these kind of changes (during development) to stay modern and to stay ahead of your competition\nFor example: \nGame development can take several years ( For example, the development of Cyberpunk which took 8 years.), during these years there are often many changes in terms of graphic card and Game-Engines.\n\nOrganizational changes:\nOrganizational changes can happen for example because one or more Team members are leaving/joing the Team. The challenge is to keep the development efficient and (more or less) independent of Team members --> So you will be able to work efficient without one specific Team-Member (for example if this Team-Member wrote a huge chunk of the code and only he can understand it due to missing comments)\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264226,
      "meta": {},
      "text": "Software engineering changes as technology is constantly evolving. When new technologies come up, the old code either needs to be changed or completely rewritten. There is a very strong need to adapt change in software engineering. In real life, you can still use an old bicycle, though you can often not use old software anymore.\nSoftware must evolve and fit to the user's needs, if the problems to be solved change, the software also needs to change.\nChange happens for improvements. That's why software is often frequently updated, so it gets better every time.\n\nTesla is a good example for change in the car industry. As its competitors saw the big demand for electric cars, they knew they had to adapt. Tesla challenged the norm and produced only electric cars, nowadays, it seems like all car companies will do so eventually.\nThis change was driven by technology changes, as it became possible to drive purely with electricity, but also by requirement changes as the awareness for climate change increased, and therefore the customers wanted something else than fuel driven cars.\nSo for older car companies, the requirements changed, as Tesla is a new market competitor.\n\nIf, for example, hardware evolves, that also means technology changes. Web3 and the whole aspect of decentralization is another aspect of technology changes. \n\nAn example for organizational changes is, when projects resources are cut, so the team has to deal with a smaller budget. Or if new team members are added. ",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265740,
      "meta": {},
      "text": "The best strategy for developing software is constantly changing and trying to increase productivity and efficiency. In the late 20th century, the main ideology for developing software was the model of defined process control. Before the process of software development began, everything had to be strictly planned. The entire process followed strict rules. This changed over the years. Another concept of software development came up, the so called Empirical process. It is more about only having a rough plan and constantly inspecting and adapting it. For example it is like sailing: you know the direction, but the details come up on its way due to unexpected things that might happen. Change in software development is something mandatory since the world is constantly developing. Every day people's requirements and needs change and therefore software has to be adapted according to it, e.g. more concern about privacy. Additionally technology is improving (quantum computing, 5G etc.) making more things possible. The software has to be adapted accordingly in order to stay up to date and competitive. Furthermore organizational change has to be made as well. E.g. Scrum is a relatively new approach, that appears to be really successful. But in the order to adapt to it, organizational structures have to be adapted according to it (development team is self organizing, scrum master -> responsible for the process, product owner -> responsible for results). ",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266181,
      "meta": {},
      "text": "Veränderungen geschehen häufig in der Software Entwicklung aufgrund vieler verschiedener Gründe. Zum Beispiel wenn ein Kunde einen Programmierer darum bittet, eine Software für ein gewisses Problem zu entwicklen, welches jedoch sehr kompliziert scheint, kann man versuchen etwas umzudenken und das Problem in kleinere Probleme unterteilen beziehungsweiße mit Modellen zu abstrahieren. Dadurch muss das Problem, womit der Kunde zu einem kommt, verändert werden beziehungsweiße muss auf einer komplett anderen Art nachgedacht werden.\n\nDabei gibt es grob drei häufige Arten von Veränderungen. \n\nZum einen die Veränderung der Anforderungen, die ein Kunde stellt beispielsweiße. Es kann sein, dass diese Anforderungen unmöglich zu programmieren sind, weshalb ein ähnliches programmierbares System entwickeln und das vorhandere verändert werden muss, welches auch das Problem des Kunden löst. \n\nAußerdem gibt es noch Veränderungen in der Technologie. Man sollte sich ständig darauf gefasst machen, dass es neue Technologien auf dem Markt gibt. Dadurch sollte man auch immer bereit dazu sein, neue Technologien zu benutzen. Dies fängt schon damit an, dass man als Software Entwickler nicht nur eine Programmierrsprache wie Java lernt, sondern sich immer weiter entwickelt und mit den neusten Trends mithält und neue Sprachen lernt.\n\nZum Schluss gibt es Veränderungen in der Organisation. Wenn man als Team arbeitet, ist es wichtig, dass man die Arbeit unterteilt und jeder mit seine Stärken am Projekt beteiligt ist. Eventuell merkt man mit der Zeit, dass der eine besser programmieren kann als der andere, während dieser besser im Leiten des Teams ist. So kann man die Rollen tauschen und es kommt zu weiteren Veränderungen.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1262228,
      "meta": {},
      "text": "Software development changes come from a multitude of reasons, most of which are due to one of three reasons (requirement changes, technological changes and organisational changes) in a specified form.\nA real-life example for a necessary change was the log4j incident: Many companies relied on this 3rd party software for their own programmes, which turned out had a critical security vulnerability. Due to that, a requirement was created to upgrade all software to new versions of log4j that no longer had this vulnerability.\n\nRequirement changes occur when the customers' demands for the ordered product changes, and the developer has to implement changes to the package to accommodate the new requirements. This, for example can happen if a piece of software that is integrated into a customer system has to be modified, as the customer system changes it's interfaces due to a system upgrade. It is also possible that the customer simply would like a piece of additional functionality in the integrated package.\n\nTechnological changes are based on the permanent progress and evolution of technology that enforces changes of standards, increased efforts for security and related topics. Well known examples are security algorithms that are no longer considered secure, and are replaced by others with a higher security level.\n\nOrganisational changes come from structural changes within the company, such as certain departments merging, or even entire company mergers. A concrete example is the merge of development and operations departments into a combined devop organisation, which requires a complete new setup of both development and operations.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263175,
      "meta": {},
      "text": "Deeping into the question of the rapid changing process in software development, it is to mention, to my mind, the main reasons for this adjustment:\n - firstly, technical progress presupposes the corresponding high-grade software adaptation and pushes the existing boundaries in the development technology-wise to a new level;\n- secondly, the global trend of digitalisation has to be mentioned as a starting point for software enhancement in new branches of a today human's life; \n- lastly, globalization and multinational skills' trade are starting to be instrumental in a modern developers labour market and enables software development teams from pole to pole share their expertise and provide a global service software.\n\nA vivid example of the crucial role of all these factors is a relatively modern trend for online banking. Earlier, 5-10 years ago, the primary target of the software developers in this sphere was to build a secure, optimized, but place-tied financial and identification instruments set, with the wide net of offline separate regional bank offices and the absence of probabilities to neither manage bank account settings, or ask for a service such as a monthly bank statements. With the changes in software development the main vector nowadays is to provide bank users with the high-quality online bank experience.\n\nDwelling on the question of exact areas of changes, I suppose the requirement changes mostly refer to the security aspects as a data safety (example: bank operations security check), whereas technology changes are related to code scaling and optimization (example: windows updates) and organizational changes are linked to the companies' structure (as an example here - outsourcing: many west companies use the benefits of the cheap labourers in Asia or CIS regions).\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263274,
      "meta": {},
      "text": "In software development change often happen due to the point that the problem changes and most of the time very ambiguous. Even when you think the hypotheses are fixed, they change quite quickly. Software systems are very complex where many people from different areas are involved in the development of the components. The requirements must be constantly updated because of complexity, mistakes or a better understanding of the system. This all leads to the fact that change occurs. An example could be a change in regulations because politics come up with new rules which everyone has to fulfill e.g. new security standard for cars. \n\nRequirements changes: \nRequirement changes can occur when for example the weight and size of the portable payment terminal is not suitable. In a small coffee or restaurant the waitress needs to carry the terminal, which must be light-weighted.\n\nTechnology changes: \nTechnology change comes in place when there is a new processor or batterie with a longer lifetime developed. The developer has to update their plans and implement these better \"solutions\".\n\nOrganizational changes: Lastly the organization change can have an impact for example when the target market has changed and now the requirements are different (legal, safety, etc.). Therefore, new people are hired into the organization and influence the development with their own new ideas. Other, new managers can initiate budget increases or decreases, which will result in a re-evaluation of the concept.\n\n*partly cited from my last years solution\n",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263612,
      "meta": {},
      "text": "A change happens, because with the time the IT industry faces more difficult systems, the cannot be developed by defined process. The variety of different system states is so big, that you cannot just take all the cases into consideration. Therefore the developing team has to create a solution, which can adjust to those changes, and not just simply follow the specific sequence of actions. \nExample: pedestrian recognition system in a car. The are millions of options, how the \"pedestrian\" could be defined. It can be a man or a women with long hair. He or she can carry a bag or not. There can be more than one person, who go along with each other. The system has to adjust the calculations to all of those and provide the same quality of service for all the cases.\n1) Requirements changes: as it has been stated, there is not just a defined number of cases, which have to be taken into account, but a class of unpredictable states. Therefore a system has to be deployed adjustable.\n2) Technology changes: the technological progress goes on. New technologies allow us to work with problems differently and to work with a wider spectrum of problems. For example: the more productive hardware allows us to work with the bigger amounts of data.\n3) Organisational changes: the bigger the problem, the more aspects it covers. Therefore the process has to be divided into smaller parts. In the end all those small parts have to be integrated into a larger system. To make this work, you have to use new ways for communication between different members of a team (for example GIT). ",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1263763,
      "meta": {},
      "text": "Change always happens in software development because the world is evolving thanks to the technology. Some functionalities are getting therefore old and the users (in general) are asking for more and more. \nAs an example, we can find Facebook which is doing regularly updates in order to fix the problems happening and also to answer to the users'needs and to stay up-to-date with the technology (by transforming it to the new technology\"Metaverse\").\n\n*Requirements change: a bug ( a not functioning page) require immediate change to fix that problem (e.g Apple Updates or Moodle page when we cannot subscribe to a course)\n*Technology change: technology forces us to stay up-to-date in order to stay more and more interesting and useful to the user and to facilitate his life. (e.g Facebook to Meta)\n*Organizational changes: this change is essential for a company to remain competitive and to keep its users.(e.g Microsoft  pushed for cultural change since 2014 by going \"simple\" by making new habits for all the employees in order to improve their skills.)\n",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264203,
      "meta": {},
      "text": "Changes may occur during software development, because a main part of software development is problem solving. Usually, the solution to the problem is not known in advance. Changes during the development process may be necessary due to requirements, technological or organizational changes. \nExample: The customer wants us to implement an internal inventory system. The system should cover all products that the company keeps in its warehouse. Within the company, the employees work with Windows computers. The software is to be implemented as a web application on windows.\n\n1. Requirement change: the requirements for the software are changed by the customer. E.g. the customer wants to extend the system with a supplier management tool.\n\n2. Technology change: the used systems, programming languages or other technical parts change. \nE.g. due to an update of Windows, it is no longer possible to implement the system as a web app. The developers switch to an Adroid app that can be used by tablets. \n\n3. Organizational change: the structure of the software development company changes. E.g., two members of the software development team change departments. ",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264661,
      "meta": {},
      "text": "For a long period of time the process of software development was thought to exist thought to be through organizational maturity, so that there would be a repeatable process that could be applied over and over to complete a project. But in the early 2000s the idea of software development through agility emerged which basically stated that large parts of this development are empirical in nature. They are subject to change by various factors and can therefore not be modeled with a defined process. \nGenerally speaking there area three main areas of changes that can occur during this process. The first one is a change in requirements for the project. For example when the team realizes that there has to be more entities than they have implemented so far they might have to change the structure of their ER-diagrams from the beginning and then implement the new entities into their current state of work.\nAnother big reason for change can be a change in technology. During the process a new software might be released that works much faster and efficient than the currently used apporach, hence the team decides to use this software instead and now has to implement much of their work into the new software. \nThe last major factor is a change in organization. Maybe the team realizes that two members are actually a lot better at the work the other one is doing and therefore they change their working roles.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264694,
      "meta": {},
      "text": "Es ist wichtig, dass Software immer wieder verbessert bzw. ersetzt wird. Nehmen wir an, man hat eine Software zur Verschlüsselung von wichtigen Bankdaten. Mit den technischen Möglichkeiten, die mittlerweile viele \"Angreifer\" haben, muss man die Verschlüsselung so sicher wie möglich machen und im besten Fall immer sicherer. Deswegen werden neue (bessere) Verfahren/Algorithmen als Ersatz für die Alten übernommen.\n\nRequirement changes sind zum Beispiel neue Funktionen, die zu einer Software hinzugefügt werden. So möchte eine Firma nicht nur Datensätze bearbeite und einsehen, sondern möchte auch Datensätze hinzufügen. Dann muss man diese Funktion noch hinzufügen.\n\nVon Technology changes spricht man, wenn zum Beispiel durch eine neue Technik schnellere Rechner zur Verfügung stehen und man seine Verschlüsselung komplexer machen kann, ohne dabei auf lange Wartezeiten am Rechner stößt.\n\nMit organizational changes sind Veränderungen gemeint, wie zum Beispiel das eine andere Firma eine bessere Software als ich entwickelt. Zum Beispiel werden die Rechner von Acer immer besser und damit ist der Rivale (z. B. HP) gezwungen auch seinen Rechner und die damit verbundene Software zu verbessern. Genauso wie andersherum. \n\n\n\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265023,
      "meta": {},
      "text": "Wie alles in der Welt bleibt Software development nicht verschont vom Fortschritt und damit Veränderungen. Diese Veränderungen können vielseitig sein und kommen in vielen unterschiedlichen Bereichen, wie der Veränderung der Anforderungen, der Technologien und des Organisatorischem. Sie sorgen für eine effizientere und bessere Bearbeitung der gegebenen Probleme. \n\nHeutzutage gibt es größere Ansprüche an die Sicherheit des zu liefernden Produkts. Das Produkt muss dem stetigen Angriffen von Dritten standhalten und die Benutzbarkeit weiterhin gewährleisten. Zudem wird es immer wichtiger, dass die Daten der User richtig gespeichert werden und nicht in die Hände der Falschen fallen oder für bösartige Zwecke misbraucht werden. \n\nIm Organisatorischem gab es große Änderungen was die Planung des Software Developments angeht. Es gibt einen Wandel von starren hierachischen Strukturen zu flexibleren und agilen Lösungen. Ein Beispiel hierfür ist scrum. Scrum ist ein epierischer Prozess und unterliegt stetigen Anpassungen. Ein Scrum Team besteht aus den Developern, dem Scrum Master und dem Product Owner. Scrum ist durch die zwei bis vier wöchigen Sprints sehr und die Unterstützung sehr effezient, weswegen es heutzutage weit verbreitet ist. \n\nTechnologischer Fortschritt ist maßgeblich beteiligt an der Besserungen unserer Zeit. Das (hoffentlich bald wirklich) weit verbreitete Glasfasernetz, oder vergleichbare Netze, bringen die Möglichkeit Inhalte vermehrt Serverseitig zu erzeugen und diese dann an die Endgeräte zu streamen. Vor allem im Gaming bieten Streaming Dieste eine gute Alternative zu den hohen Anschaffungskosten von Konsolen oder geeigneten PCs. \n\nAllgemein lässt sich konkludieren das die wachsenden Ansprüche an die Entwicklung auch die Art der Entwicklung maßgeblich verändert haben. ",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1265480,
      "meta": {},
      "text": "Ein Punkt der Veränderungen nötig macht wären beispielsweise Veränderungen die von Seiten der Regierungen ausgehen. Diese Gesetze können damit die Voraussetzungen ändern, mit denen die Programmierer umgehen müssen. Ein Beispiel dafür wären neue oder veränderte Datenschutzrechte, wie die Änderungen der DSGVO, die von den Entwicklern beachtet werden müssen, damit man keine rechtlichen Probleme bekommt. Diese Änderungen in den Voraussetzungen können ein Softwareprojekt selbst während dem laufenden Prozess treffen und die Entwickler zwingen schnell mit Lösungen zu reagieren.\nEine weitere Veränderung sieht man in der heute teilweise sehr schnell verändernden Technik. Um marktfähig zu bleiben muss ein Unternehmen diese technischen Veränderungen beachten und sich selbst verändern um am Zahn der Zeit zu bleiben. So kann heutzutage beispielsweise kaum ein Automobilhersteller es sich erlauben auf Computergesteuerte Hilfssysteme zu verzichten, die durch Verbesserungen in Bilderkennung und Kameratechnik zu heute festen Bestandteilen in der Ausstattung eines Autos gehören, während sie in der Vergangenheit in der noch nicht weit zurückliegenden Vergangenheit Luxusausstattung gewesen wären.\nUnd zuletzt ist heute die Organisation hinter Entwicklungsprozessen oftmals ein anderer. Durch die immer komplexeren und diverseren Probleme, um die man sich kümmern muss, benötigt man immer stärker vernetzter und stärker zusammenarbeitende Teams aus diverseren Gruppen. So wäre es ein großes Problem würden gewisse Personengruppen in der Entwicklung komplett vergessen werden. So kann es bei der fertigen Software bei einem wenig internationalen Team zu sprachlichen Problemen kommen. Dieses Problem existiert natürlich auch schon sehr lange, aber durch die erhöhte Globalisierung und weltweite Vernetzung sind diese heute sehr viel prominenter.",
      "score": 50,
      "language": "GERMAN"
    },
    {
      "id": 1265893,
      "meta": {},
      "text": "Veränderung in der Software-Entwicklung wird durch viele Faktoren bewirkt. Manche davon hängen von der Umwelt, die sich konstant verändert, ab. Andere hängen von den Ansprüchen der Menschen ab, die im Laufe der Zeit immer größer wurden. Zum Beispiel war Snake vor einigen Jahren das beliebteste Spiel, jedoch erleben wir zurzeit, dass Jugendliche an Virtual Reality Spielen interessiert sind also deutlich komplexer als das alte Snake-Spiel, das wir einmal gekannt haben. \nDabei basiert der Begriff ,,Requirements Changes\" auf bestimmte Voraussetzungen , welchen einen guten Software Development Team dazu veranlasst, immer auf dem Laufenden zu sein. Zum Beispiel braucht man für moderne und beliebte Websiten komplexe Server, die dafür sorgen, dass die jeweiligen Seiten nicht abstürzen. \nDiese Voraussetzungen können auch vom User verlangt werden. \nDer Begriff ,,Technology Changes\" bezieht sich auf die Tatsache, dass es immer neue Technologien geben werden sowie neue Errungenschaften zu denen man sich anpassen solle . Zum Beispiel wird die Sprache Kotlin als das moderne Java betrachtet und gilt in der letzten Zeit als beliebt in dem Bereich der Android-Entwicklung.\nDer Begriff ,,Organizational Changes\" bezieht sich auf die Veränderungen, die auf Organisierungsebene passieren.\nEin Beispiel dafür wäre das Einstellen eines neuen Mitarbeiters, um sich die Arbeit besser einteilen zu können. \nSomit könnte das jeweilige Software Development Team effizienter an dem dazugehörigen Projekt arbeiten.\nEin anderes Beispiel dafür bezieht sich auf die jeweiligen Aufgaben. Ein Team könnte feststellen, dass einer der Mitglieder mehr Erfahrung in einem bestimmten Bereich besitzt, so dass ihm die Aufgabe bezüglich dieses Bereiches zugeteilt wird. ",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266297,
      "meta": {},
      "text": "Due to vast innovations and constant development of technology, requirements to software performance and functionality has grown with it. Even while a Software is developed, it current functions might be outdated during the process. \nAs an example the software behind the drives support/partly automated driving of cars: Due to new technology and especially new laws, constant changes need to be done to reach an optimal feaseable solution and to be ahead of competition.\n\nSometimes the requirements to a software change as the consumer changes or expands its needs and companies want to gain profit of that. For example Check24 had to expand their search and comparing software as there costumers wanted to compare even more on their website, so they expended their core business of comparing phone contracts to also comparing flights and other thinks.\n\nA change in technology could mean that the software could solve the existing problems easier or has to face new problems due to new technology. For example when hybrid engines where introduced as a new standard and a good possibility to save fuel, the software managing the powerunit had to be adapted to the new power source.\n\n\nAn organizational change could mean a change in the development team composition. For example for some projects, experts need to be involved to reach the best possible result. ( Carenegenier -> carsoftware)\nDue to this there is a constant change in the software development.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266377,
      "meta": {},
      "text": "Software development, as a proccess that spanns a larger amount of time, by nature has to deal with a lot of complexity and change. Those changes are multifaceted and can occur in different areas as descirbed below. A first example for change in the real world, would be the new climate regulations currently being implemented in the EU.\n\n\nThe area of requirement change describes the need to listen to changes in the requirements and expectations of the market or the customer. A customer demanding an application for an impossible problem for example, would lead to all kinds of problems, when not addressed. This has to be communicated to the customer right away, trying to find a new and improved problem statement in agreement with both parties.\n\nTechnology change is another very critical area in sofware development. Companies have to always be ready to adapt new technologies in order to stay in line with needs and requirments of customers and keep their edge on competition. A large company selling cameras for example once was the market leader in selling analog cameras. However since they refused and therefore failed to successfully observe the market and their competition and adapt to the new innovation of digital cameras they quickly fell behind, losing their position as market leader.\n\nOrganizational change describes the need to have an agile software development process. Most of software development is now seen to be an empirical process, meaning it cant be planned to the last detail. We therefore have to look out and adapt to occuring changes, while seeing deviation as a chance to gain an advantage on competition. A change in regulations for example isnt seen as detrimental to the whole project, but the project is adapted in a way the company becomes a firstmover in a new sector.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262219,
      "meta": {},
      "text": "During the development cycle of a specific Project, many changes from the original plan can and often do occur. These Changes can be categorized into a few different categories, namely requirements changes, technology changes and organizational changes. Requirements changes are changes concerning the scope and final product of the Project. These changes are the requirements of the project that are mostly changed based on the wishes of the client who needs the project to change to better fulfill its purpose. Organizational changes are changes the team itself chooses to complete, mostly to be more effective during the process of the development. One example of that is the switch to agile development processes that help in completing a project faster. Scrum is such a technique that is focussed on a multi week repeating schedule designed to lead to a potentially shippable project after each cycle of development. These cycles also provide good opportunities for requirements changes to be implemented. Technology changes can be changes that can occur during the development of one particular project. For example, it might be necessary to change some underlying part of the technology due to changing requirements or the necessity to upgrade specific parts of the project. On a larger scale, technology changes can be changes that influence the whole process of software development, for example with the introduction of mobile phones the way programs need to work had to change to fit the new form factor.",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1262657,
      "meta": {},
      "text": "Software development has to be flexible because of a variety of influences, simply put the process of development has to constantly adapt to all the changes happening in the outside world, this includes budget changes, legal changes and changes on the market just to name a few. For example: If the legal constraints change during development u might have to limit or change the functionality of the software to still be able to sell it.\n\nrequirement changes:\nThis occurs when the customer expects a different outcome then original one,\nthis means u have to adapt your software to fulfill new functionalities for example.\nLets say you are developing a basic calculator (+ ,- ,*, /) but in the middle of development the customer wants additional functionality (log, x^2, %), now you not only have to find solutions for the new requirements but also have to integrate them into your existing software, which can mean you have to change up already existing things, for example the UI.\n\ntechnology changes:\nThis occurs when the technology evolves so fast, that you have to depending on the type, change your software so that it implements or is compatible with the new technology.\nFor example: Game Developers that have to implement a new technology to reduce the input lag (nvidia reflex)\nor to improve the visuals of the game (RTX).\n\norganizational changes:\nThis occurs when circumstances of the structure of development changes, this includes resizing of the Team, change in budget, deadline change and other things involving the company or the customer.\nFor example: If there was a budget increase this could mean u could afford more employees to work on the project, that would then have to to included in your project structure.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263195,
      "meta": {},
      "text": "Es verändern sich viele Dinge im Software development aufgrund von vielen Faktoren an die man sich anpassen muss. \n\nRequirement changes sind Änderungen am Produkt selbst. Es können z.B.  neue Wünsche oder Anforderungen  vom Auftraggeber sein. \nTechnology changes sind meist Weiterentwicklungen der Hardware. Also z.B. ein schnellerer Prozessor, mit dem neue Möglichkeiten aufkommen.\nOrganizational changes sind Veränderungen der Personen die am Projekt arbeiten. Hier können sich z.B. die Mitglieder des Scrum-Teams verändern.",
      "score": 66.7,
      "language": "GERMAN"
    },
    {
      "id": 1263369,
      "meta": {},
      "text": "\n\nWhy changes happen:\nAs the technology is constantly evolving and new innovations are coming up. \nThe most legendary examples are among the first Apple products such as the iPod, iPhone or iPad, which have set new trends and revolutionized the market.\n\nRequirement changes:\n- Competitors might have implemented new features/hardware, which need to be adapted, otherwise, this would lead to a lose of customers.\n- Misunderstandings between customer and developers could lead to requirement changes\n- Environmental changes, like the climate crises, which enforces a new environmental friendly thinking and developing. \n\n\nTechnology changes:\n- Introduction of machine learning, which enables a completely new way of programming and thus a completely different problem handling. \n- Quantum computing, which can handle a much larger amount of data and thus allows many optimisations.\n- Every year new processors and memory options are released that open up new possibilities in software development.\n\nOrganisational changes:\n- New legal constraints, as governments come up with new laws which require new departments, like the data protection law 2019.\n- With every new employee or changing roles and responsibilities the company, organisation, experience a change.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265008,
      "meta": {},
      "text": "Changes need to happen in order to remain useful, software needs to adapt to world’s changing needs and technologies, fix bugs and add new features. It constantly needs to improve and be tailored to specific situations. Developers cannot anticipate every rare occurrence, misuse or system error. So a certain amount of time and testing is always necessary to improve. For example, a calendar not taking leap years into account needs to be fixed. \n\nRequirements changes: project requirements are generally complex and need to be changed when errors are discovered or could be possibly updated to be more user or system-friendly. Client requesting new features can change the requirements. For example when designing a customer management system, client can expand its market during the development phase and ask another type of customer segment to be added to the system.\n\nTechnology changes: Introduction of new technologies can cause changes in software development. A long-term project can go over a time span of introduction of new technologies. For example a new version of Java coming out can make the existing project code be more streamlined with less code adjourning for more functionality.\n\nOrganizational changes: could occur both on clients side or on team's side. When occurred in team's side and for example one of the developers need to leave, the tasks should be divided between other members to prevent any delays.",
      "score": 75,
      "language": "ENGLISH"
    },
    {
      "id": 1266437,
      "meta": {},
      "text": "Our world is changing everyday and so is software development. For example, before the scrum methodology of teamwork was created, developers used to spent nearly all of the time and budget to finish the program with various results - the lack of organization and proper methodology costs these people sometimes even the whole careers. Every change has a purpose and in my opinion, according to software development, there are two main catalysators: time & money. Modern lifestyle doesn't allow people to have that much comfort like we used to do - that is why developers keep working over years on the most efficient work-style. Technology is changing everyday and that is why beginner developers have to adapt to the environment of actual IT stand. For example, in game-dev there are several examples of games (usually a very complicated software) which were started to be developed back in 3-5+ years ago and have never been finished due to the lack of budget (I will accord to the organization part later) and the competition on the market. One reason for such an outcome are the technology changes which simply add new tools or ways to create something and it can happen everyday. Some games from my example are using better game-engines or other creating tools which make them fluent, well-optimised and not that expensive to produce (in a macro-scale of course) - they exist and are so good because someone has adapted to the changes of technology on the market. Second reason are organizational changes about which I've already written in the beginning. People had to learn how to work efficiently and set up a budget in such way they could predict some technology changes and have resources (money and time) to adapt. That is why scrum work-style is a perfect example of working fast, efficient and not throwing away the budget. ",
      "score": 50,
      "language": "ENGLISH"
    },
    {
      "id": 1263128,
      "meta": {},
      "text": "Change happens usually to improve. Along the way softwaredeveloping teams might change sertain things to be faster, more efficient or to lower the costs.\nrequirement changes happen for example when the costumer wasnt clear enough in the first requirement, so it needs to be changed in order to really fullfill the requirement.\nwhen technology changes it can lead to software changes as well, to use the new technology in the best and fastest way possible. Sooner or later quantum computer will be on the market which will change our software.\norganizational changes need to be made when the previous isnt as efficient as it could be. For example in a 5 headed team, if there is one person with way to much work and one with alot of free time the group should probably overthink there organization.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263335,
      "meta": {},
      "text": "Change in Software development may happen due to a variety of reasons. Requirements changes may happen, since software and the needs of the customer can be very complex or specific. If errors or misinterpretations occur or are detected, the requirements have to change accordingly, especially since developing new software has a learning curve in which the developers may understand the product better the longer they work on it. On top of that, the higher the complexity of a product, the longer the duration of the entire development process. This may lead to changes. A team member may stop working on the project due to changing their job, promotion or death, and a new member will have to take their place leading to an organizational change. Last but not least, the technological landscape of the world is ever-changing. Systems which are commonplace now may fall out of fashion or are not understood by new developers (i.e. COBOL) this is the technology change and affects the software being developed and might force changes in the requirements, or the workflow or other areas. In the real world, a striking example of change would be the bankruptcy of a company, leading to a new economic and digital landscape, which might make some features or even parts of the system unusable or even the obsolescence of the product.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263346,
      "meta": {},
      "text": "Software development is essentially solving problems of the real world. As we are a rapidly changing society with new problems arising, software development has to adapt. \nAn example for that is the way we handle currency. State regulated currency is a safe, but outdate system and cryptocurrency is in the process of establishing a solution to the problems.\n\nRequirement change means companies have to adapt to customer needs. As Amazon was the first online retail service that focused only on customer well being with one day delivery and free returns, some companies followed, and some didn't. The ones that didn't are out of business today.\n\nTechnology changes for example is robotization of the workplace. Companies like BMW use robots at the assembly line to cut down on cost and save time, as well as increasing the quality of product in many areas. This gets them ahead of other companies as they can lower the prices on cars, while keeping the quality high.\n\nChanges in organizational structures means companies have to change internal structures to keep up with the market. To recap on the example of Amazon, as Amazon prime was introduced, the customer needs for human support grew immensely. Most returns have to be approved, so they have to hire many new people to build a quick and responsive support staff.",
      "score": 91.7,
      "language": "ENGLISH"
    },
    {
      "id": 1263594,
      "meta": {},
      "text": "Many internal and external factors can influence software development. The nature, politics, society, technology, security and organization all can bring changes to the development. For example, Apple improve the iOS System from time to time because users' requirements for more security and performance enhancement.\n\nLoopholes and mistakes can exist in the first requirements from Party A for their lack of thoughtfulness, which leads to not satisfying codes from Party B. The requirements changes arise in software development when they want to fix the loopholes and mistakes.\n\nAn exaggerated example for technology changes: A programming team used computers, which bought from ten years ago, to program for the lack of funds and the computers broke down from time to time. One day they have the enough money for new computers and use them to program. It improves their speed and the quality of the codes significantly, which brings positive changes to software development.\n\nOrganizational changes: For example, there may be 20 programmers responsible for a big project at the beginning. However, 5 of them quit the job in the middle of the project because of too low salary, then it brings negative changes to software development, because the whole process slows down and everyone is responsible for more work, which may lead to lower quality.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1263838,
      "meta": {},
      "text": "Gerade in der Informatik/Softwaredevelopment kann es häufig zu Änderungen kommen. Da die meisten Entwicklungen unter \"agile software developement\" laufen, muss nicht alles direkt am Anfang geplant werden - dies führt dazu, das Probleme erst später auftreten können, der Kunde noch Wünsche äußert oder Teile des Programmierteams wechseln. Durch regelmäßiges Durchlaufen von Zyklen (siehe Scrum) können Änderungen z.B. im Product Backlog schnell berücksichtigt und in die nächste Runde mitgenommen werden. Ein Bespiel für eine große Änderung war der Aufkauf von Mojang an Microsoft und die dadurch entstehende Einbindung des Spieles Minecraft ins Microsoft Ökosystem (Minecraft Bedrock oder auch das Benutzen eines Microsoft-Kontos anstatt eines Mojang Kontos -> vermutlich Änderung im Backlog). \n\nÄnderungen werden unterteilt in Vorraussetzungsänderungen (requirements changes), technologischen Änderungen (technology changes) und Oragnisationsänderungen (organizational changes).\n\nUnter Voraussetzungsänderungen versteht man Änderungen der Anforderungen, welche vom Kunden ausgehen - hat dieser zum Beispiel von einer neuen Bezahlungsmöglichkeitsoption gehört und möchte nun, dass diese auch auf seiner Website angeboten werden oder dass das angeforderte System auf anderer Hardware laufen soll als geplant und so der Entwicklungsstack angepasst werden muss.\n\nTechnologische Änderungen entstehen durch das stetige Voranschreiten der Technik - vielleicht kann durch einen neuen Algorithmus oder eine neue Library ein Problem nun weitaus effizienter gelöst werden oder ein Web Apps ermöglichen es nun, mit einer Website nun auch Apps für Mobilgeräte abzudecken. Diese technischen Änderungen sollten beachtet und auch adaptiert werden.\n\nAuch gibt es Organisationsänderungen, bzw. Firmenänderungen, welche Einfluss auf eine Entwicklung nehmen können. Durch das Verlassen von Programmierern muss Ersatz gesucht werden, durch Veränderungen und Verlagerungen der Ressourcen muss eventuell umstrukturiert werden. Auch die Firma ist ständig im Wandel und Änderungen dort sollten den Workflow nicht allzu stark behindern",
      "score": 83.3,
      "language": "GERMAN"
    },
    {
      "id": 1263970,
      "meta": {},
      "text": "In software development there are changes because the world around us does not stand still. The world is changing and so are the technology, the market, the processes and procedures. The businesses and the competitors are constantly evolving and new products are being developed all the time. All these changes have an impact on the software development. An example for change in the real world is the transition from basic cell phones to modern smartphones.\n\nRequirements changes are constantly taking place, as the name already implies, when the requirements (need and demand) evolve. An recent example was when the companies needed to adapt their working mode during the corona pandemic and the demand for new remote collaboration tools and for more videoconferencing software rose very quickly. \n\nTechnology changes are taking place because the technologies are continuously improving and also new technological innovations are being created. Examples are new applications or new versions of operating systems.\n\nOrganizational changes occur when a company remodels or changes an essential part of its organisation. For example if there is a new manager, who reorganizes the company structure, the distribution of work between the units might be impacted or new tasks might need to be executed.\n\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1264098,
      "meta": {},
      "text": "Change in software development happens because of changes in one of the following:\n- deadlines;\n- budget;\n- needed quality / goals.\n\nFor example, all the functions that streaming services (e.g. Netflix) add are the result of setting new goals or adapting to the market.\n\nRequirements changes - the changes which affect the product backlog and usually come from the client, the market or politics - e.g. new features which the client wants; keeping up with the features of the competitors; abiding new or changed laws in targeted countries.\n\nTechnology changes - the changes which affect the used technology, software or hardware - e.g. changing the used software for developing a product to better fit the new goal.\n\nOrganizational changes - the changes in the team - e.g. making it bigger/smaller or redistributing the tasks among the members",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264150,
      "meta": {},
      "text": "  Change happens in every aspect of life because we as humans always want to improve our current situations. That  is inevitable. And software development is no exception. We always strive for better conditions and thats why we always find a way to progress even further. With the sky rocketing technology, software development also changes and evolves. A very simple example for change in the real world is how we used to travel back in hundred years ago and now. Back then cars with engine was not even a dream noone could imagine such thing. But today human kind can not only travel all around the world but even outside the world. \n  For requirement changes, the main reason is usually the change of needs. When the customers needs changes, the requirements will automatically change. Outside factors that our customer can not control such govermental regulations, or a world-wide pandemic :) could also cause the change of requirements. And lastly changes in the market would automatically effect the needs of our customers and also the requirements.\n  All of the areas where change happens, also effect each other and cause more change. But technological changes effects every aspect of our lives. It would be completely normal living without a cellphone ten-twenty years ago but today people would call you crazy if you did not have one. It always develops, makes our lives easier and makes us lazier.\n  Lastly, organizational changes has many types. First and simplest is the personnel change. As a company grows or shrinks, it would adapt the number of the personnel accordingly. A company can also change its policies and strategies as an organizational change.\n  ",
      "score": 33.3,
      "language": "ENGLISH"
    },
    {
      "id": 1265076,
      "meta": {},
      "text": "Because software development is complex and not a sequential progress. Changes often happen in following areas:\n1. requirements changes: \nwhen errors are discovered or when the developers have a better understanding of the application, the requirements need to be updated and then change happens.\n2. organizational changes:\nIf the project lasts many years, the staff turn-around is high, requiring constant training. \nFor example: develop a vapourware\n3. technological changes:\nThe time between it is often shorter than the duration of the project. \nFor example: more and more software companies start to use the fifth-generation technology standard for broadband cellular networks (5G) instead of the old generations (4G, 3G, etc.), in order to provide better and safer service.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1265266,
      "meta": {},
      "text": "1. Changes in software development can happen because of multiple reasons, to list a few (including real-world examples):\n- Team set-up changes e.g. one of four developers in a team quits, so the scope of a sprint gets smaller/fewer story points can be reached in the new set-up\n- Budget changes e.g. the project loses priority in achieving the company's mission therefore less budget is provided\n- New stakeholders get involved e.g. requirements change because of new stakeholders and their interests and dependencies\n\n2. \n- Requirement changes refer to changes based on a better understanding of the client's wishes, new user requirements, or a changing demand in the market. For example, after a user test, the data showed that the user does not use a specific feature as expected.\n- Technology changes refer to changes because of the availability of new technological services, adoption of new technological infrastructure, or increased efficiency of specific technology. For example, switching from on-premise to cloud solutions.\n- Organizational changes refer to changes that affect the company itself. These changes can be for example changes in culture, processes, or the company's stakeholders which affect only small parts or even the whole organization. For example, new stakeholders get involved because the organizational structure changed from a silo to a matrix structure.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265865,
      "meta": {},
      "text": "Change in software development is very multifaceted. People's rising and changing expectations of the software or the improving technology are only two reasons change in software development is needed, to keep up with this walking environment. \nTo give an example, it used to be common to receive software updates in form of a CD or any other external medium in the past. Currently, however, updates can be easily downloaded and installed on the PC from the internet, without the need for an external storage medium. Nowadays there often are smaller updates within a shorter period, which for example makes it possible to react much quicker to security gaps within a software. \nThere are different areas of those changes.\nOn one hand, modern technology is constantly evolving. CPUs are getting more powerful, today more and more households have a computer with access to the internet. Bigger, resource-heavier programs which in the past the average computer wasn't able to handle are now running on almost any device.\nOn another hand the requirements for software change as well. With currently highly increasing power costs you may want to focus on lowering the power consumption instead of focusing on optimizing the runtime of a program. \nAnother area is the change in organizational structures, so the way the process of software development is organized. For example in the past, the waterfall methodology, where the developing process is split into different stages without the possibility to change the requirements once the development has started, was often used. Today the concept of agile software development, where the project is separated into several sprints, is often preferred.\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266403,
      "meta": {},
      "text": "Change is the one constant in the modern world we live in. If it is a new update of an existing smartphone or a  (at that time) completely new technology like vacuum cleaner robots, the software needs to adapt to the new environment and new interfaces between different technologies. \nEven during the software development before a first release the interfaces might change and the development team has to react in an agile manner to adapt to that change. So if that vacuum cleaner robot is steered by a mobile app and the phone has a software update, the software development team needs to adapt quickly.\n\nRequirement changes can happen due to a lot of reasons, for example if the customer didn't define the requirement well enough in the beginning or if the circumstances around the project change. In many cases it is the customer or shareholder that is responsible for shaping new project requirements and the software development team needs to adapt to it. It is always easier to have requirement changes early in a project.\n\nTechnology changes are caused by new inventions and/or new standards. The software update of a smartphone is a technological change, if the project is a mobile app.\n\nOrganisational changes are due to changes in the developing team or company and can lead to the need to reorganise areas of responsibility or team structures. This can happen for example if a person leaves the team or moves to another department.\n",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266435,
      "meta": {},
      "text": "In agile software development a lot of people are working with SCRUM. To to the iterative working process it comes to many changes. Main goal is to create a solution within a given budget and a given time, that fits the best to the customers expectations. For this the score master is always during the development process in close contact with the customer.\n\nRequirierment changes often happens due to the expectations of the customer. The costumer often changes his mind during the development because for example an unknown problem occurs or a problem becomes clearer. To avoid this a requirement elicitation and analysis is very important. As a company you always have to adapt to your competitors (e.g. they could have a new feature) which leads to changes during the process.\n\nOrganizational changes oft happens during the development because within the customer company the organisational structure or a given process changes and the developed software has to fit to the workflow of the company. Another reason could be that there is a change within the development team. \n\nTechnology changes often occurs during the development process because technology changes every day and the software is often only a part of a whole system. For example we develop a system that works with the data of the ERP system. Due to a change within the system we need to change for example interfaces that import data from the ERP system.",
      "score": 66.7,
      "language": "ENGLISH"
    },
    {
      "id": 1262080,
      "meta": {},
      "text": "Change is common in software development, because software development is a complex process, that involves many diffrent people and their different expectations. As a result when differences occur a solution has to be found, which may require a change in plan or in code.\nThese changes can be categorized in three areas. First, requirement changes, this occurs when the customer wants changes, because his nedds changed or he wanted a different implementation. For example the customer wanted an online software and now wants an special implementation for smart phones.\nSecond, technology change, this occurs when a diffrent software or a newer version has to be used. This occurs if a software that was integrated into the project gets an update and now the code has to be altered.\nThirdly, organizational changes, these are changes due to newer obligations or changes by law. For example when the european union introduced a law for privacy in the internet, many companies had to implement these changes.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262286,
      "meta": {},
      "text": "As is often stipulated our world changes a lot and fast and the speed of which these changes occurs at is increasing. These changes take place in a lot of areas including technology i.e. soft-and hardware. Software therefore needs to changeable and improvable!\nAn adequate example is the car, nowadays the software in a car is immensely advanced and extends beyond basic driver support systems. Hereby one can mention the advancements being made regarding autonomously driven cars, where the driver is actually enabled to let go of the steering wheel and the car reacting to its surroundings, even being able to automatically and safely switch lanes by itself. If the car manufacturer were to ignore these advances made, the company might lose relevance and market share, hence missing out on profits. \n\nRequirements change relates to possible changes regarding the desired makeup and capabilities of a product. A conventional supermarket could for example be challenged by a market competitor e.g. Gorillas/ Flink, there could also be differing regulations in the tech sector depending on the countries the company operates in.\n\nTechnology changes already alludes to what was mentioned in the beginning, new technological advances also create the need for companies to react and make use of superior tech. This can and often is compounded by increased customer demand once the product is a hit, see example of smartphones taking over the phone market. \n\nLastly organizational changes relate to changes in areas not directly connected to the end product, but to the process/ processes of how it is actually conceived. These could be changes in the team, changes of leadership or even bigger changes regarding the structuring of the organisation. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262723,
      "meta": {},
      "text": "Change happens, when the requirements the employer sets, change. \nWhen, for example, a new company was merged, the database software engineers have to change their database, to accompany the new firm.\nChange can also happen because of budget cuts. When you don't have the means, to make fancy animations on your website, that goal becomes unreachable and your pans change.\n\nRequirement changes. When the requirements of the software project change, in the middle of the software project.\nExample:\nWhen the investor changes and the new one has different requirements and a different vision for the project.\n\nTechnology changes: When the technology changes and new things become possible ore other things become unnecessary. \nWhen the square root can't be processed quickly by processors and then the next year, all processing power increased dramatically, so that the approximation of the square root becomes unnecessary.\n\nOrganisational changes: When the Organisation of your team changes. \nWhen people have to go because of budget cuts ore when a new bis with a new vision comes along.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262892,
      "meta": {},
      "text": "In my opinion, changes in software development are tightly linked with changes in the real world. Since every software is intended to make life easier. The most common reason for changes in software development is lack of communication between customers and engineers at the beginning of a project.\nFor example, during the development of a mobile app, several changes could occur.\nIf the customer changes his mind in the process of app developing, e.g. pushing videos to users instead of pictures, the development team must adjust their codes to fulfill the customers' needs.\nIf the Android system updated, as a mobile app the team must take software compatibility into account to make sure that the final product would not be a burden for users' device. Many previous apps without maintaince couldn't be installed in the current system any more because of technology rapidly developing.\nIf personnel transfer occurs in the team, for instance, to speed up the development process, there may be a need for a redistribution of work within the team. The code for the same function may not be done by the same person. As a result, each engineer should write their codes clearly and annotate properly.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263635,
      "meta": {},
      "text": "Change can happen because everyone wants the latest and greatest. This reason forces companies to come up with new and original ideas to make a huge impact on their own inventions. For instance, in 2013, Apple introduced a new feature called \"touch-id\" with the IPhone 5 and 5s. After the introduction, a great interest in these phones started and while the sales amount of Iphone 4 was 1 million, the sales amount of Iphone 5s and 5c increased to 13 million. This example can be given as an example that summarizes how much everyone wants to have the latest and greatest.\nRequirements change happen because of changing needs. For example, while everyone was wearing a mask during the pandemic, IPhone users could not use the \"face-id\" feature. Due to this lack of software, Apple rolled out a new software update to allow people to use face-id while wearing their masks.\nTechnology change can happen due to the competition between companies. For example, Iphone users could not listen to music and charge their batteries simultaneously. On the other hand, its biggest rival, \"Samsung\" company, made an advertisement showing that Galaxy users can do both features simultaneously, referring to Apple's lack of this feature. However, by launching its own wireless earphones called “Airpod”, Apple has given a new direction to technology and again enabled the sales of iPhone to exceed the Galaxy.\nOrganizational change is a change in the infrastructure or underlying technology of a company or business. The reason for the change may be the implementation of new technology. For example, a company which upgrades its computer operating systems from Windows 8 to Windows 10 makes an organizational change to have the latest implementation.\n",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1264427,
      "meta": {},
      "text": "Change in software development happens due to a lot of different factors. Requirements for the software are complex and constantly evolving depending on the customer and developer's needs. There are many sources of change in the real world: design and implementation faults discovered that need to be fixed, availability of newer and better technology, new business conditions and etc. A good example for change in the real world would be adapting software to a newer operating system.\n\nChange can be categorized in three areas:\n- Organisational changes: Whenever a company undergoes a drastic change regarding its organisation such as its infrastructure, its culture or its internal processes. Example for an organisational change could be the merging of two companies together.\n- Requirement changes: Consist of a variety of different factors such as customer's needs, market fluctuation and competition, laws and regulation changes. Example for a requirement change could be the following scenario: we are creating a payment software for a certain online store that accepts card and bank payments. After some time the store owners want to add coupons to the payment system so we have to integrate it in the software.\n- Technology changes: Changes due to the evolution of technology, whether it is better software or hardware. We are developers for a game company that makes games for the Nintendo Wii U. Sadly, this console is not very successful, but now a new game console is released: the Nintendo Switch. We would like to port our game to the newer console so it reaches a bigger audience.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1264721,
      "meta": {},
      "text": "Die Gründe für Wandel oder Veränderung in der Softwareentwicklung sind vielseitig. Zum einen ändert sich die Umwelt, in der die Entwicklung stattfindet. Diese externen Faktoren können zum Bespiel ein ausgeweitetes Update der zu Grunde liegenden Entwicklungsumgebung sein. Es kann sich aber auch im Laufe der Zeit die Relevanz der verwendeten Technik, bzw Hardware ändern. Zu diesen Punkten können sich dann auch noch interne Faktoren ändern. Zum Beispiel durch Mitarbeiterwechsel oder Änderungen in der Organisation.\nIm Alltag finden sich hierzu auch unzählige Bespiele. Vor 10 Jahren sah der Alltag noch ganz anders aus, Smartphones mit Touchscreen und hochauflösenden Kameras sind mittlerweile die Norm und die Wichtigkeit von social media hat sich auch stark gewandelt. Ziehen wir den Vergleich mit dem Leben vor 100 Jahren werden die Unterschiede noch drastischer.\nEin Beispiel für requirements changes wäre zum Beispiel dass sich das Projekt ungeahnt in die Länge zieht, da sich einige unvorhergesehene Probleme sich in den Weg stellen. Ein Mitarbeiterausfall oder Probleme mit der Programmiersprache können ein Projekt verlangsamen und den Bedarf von Zeit und Geld in die Höhe schießen lassen.\nTechnology changes hängen stark von anderen Entwicklern ab. Die Entwicklung einer neuen Generation der zu Grunde liegenden Hardware, könnte bedeuten einigen code anzupassen oder ihn neu schreiben zu müssen, um sich dem neuen Standard anzupassen. (Apple M1 Chip)\nOrganizational changes können, wie oben schon kurz angeschnitten, an Mitarbeiterwechseln oder einem Wechsel des Auftraggebers liegen.  Auch eine Neustrukturierung ist möglich, wenn das Projekt in falschen Bahnen läuft.\n",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1265601,
      "meta": {},
      "text": "Change in Software development happens, because gets more complex, there is a need for better and faster software development. Therefore, a higher automation has increased quality and predictability and new agile methods allow to keep track of work and are able to measure and improve productivity of a team. For example have text editors  been replaced by new IDE's and made coding much faster.\nThe first of three areas of requirements changes, is business. The business requirements drive a software project and define the goals for the project in business requirements document. If the productowner decides new goals, these have to be adjusted.\nThe second is user requirements, which reflect the needs and expectations of the software's customers. If the customers happen to want something different, you need to adapt the user requirements.\nAnd lastly there are software requrements. These identify features, funcional and nonfunctional requirements for the software. These define what a software system must do, usability, how the software should operate or expectations related to industry standards. So if any of these change, the software requirements have to be adapted.\nAdditionally to these requirement changes, there are also organizational changes and technology changes.\nOrganizational changes occur when a company or a team decide to adapt a different framework, for example Scrum. This change might happen because there is a need for a better organized and a more productive team.\nLastly there are technology changes, which occur due to the constantly changing technological landscape and market trends, for example open source software.",
      "score": 83.3,
      "language": "ENGLISH"
    },
    {
      "id": 1266071,
      "meta": {},
      "text": "Change happens in software development for several reasons\n1) current features no longer fit the clients' needs/requirements\n2) prior limitations are now no longer an issue due to advancements in the industry\n3) new leadership may want to restructure the development flow within the company.\n\nReal life example:\nWith leadership change under Ryan Cohen, GameStop - formerly a hardware/games retailer - now focuses on e-commerce and is beginning to develop an NFT marketplace. This kind of change may call for a revamped process control model to accommodate the larger amount of developers. (reasons 1,3)\n\nRequirement changes:\nReasons such as improvement of a company's image, change of target demographic, keeping up with design trends etc. may incite a client to change the needs/requirements in regards to their product. This change of needs in turn forces developers to adapt, to keep the client happy.\n(i.e. changes to YouTube's algorithms to promote videos with similar content compared to watch history to increase time spent on website, which boosts ad profits)\n\nTechnological changes:\nAlready planned features may finally be technologically feasible to implement; Even if no new features are needed, one may wish to keep up with increasing hardware capabilities to stay relevant.\n(Change from 32-bit OS to 64-bit OS may call for a rewrite of one's software suite)\n\nOrganizational changes:\nChange of workflow within a company may affect the types of issues, developers have to deal with, their time allocation etc.\n( COVID remote work)",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1261345,
      "meta": {},
      "text": "Today’s world is constantly changing. New programming languages become more important (e.g., previously people programmed in assembly, nowadays, there are new programming languages like Python, Rust, Java, etc.) and new technologies are developed (e.g., smartphones) which require adaption (e.g., smartphone screens much smaller -> websites less space). These constant changes need to be adapted by software engineers (otherwise their products are not demanded from customers anymore, e.g. Nokia). On top of that, customers can change their demanded specification during the project phase (especially in big projects), as e.g., something new came to the market. It is important for software engineers to inspect the change and adapt accordingly. This can be achieved by an empirical (agile) working process so that your software development team don’t have to act according to a strict plan but can adapt accordingly (in opposite to a defined process which was used in earlier days). \n-\tRequirements change:  Customers might change their requirements as there are new products of other brands which are already developed further and on a new technological level. The customer has to adapt accordingly. Sometimes, the communication between customer and software team fails and there are misunderstandings in the requirements. Then the predefined requirements can change, too. \n-\tTechnology Change: On the software side there might be new programming languages/database systems/… which are more efficient/fitting to use; on the hardware side, computers have e.g. more cores than previously so parallel programming is becoming even more important and a software team might have to adapt their software to these requirements.\n-\tOrganizational change: a new member might be added to the software team, or a member gets ill/gets a baby/…. That means that the organizational structure of the team has to change.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1262068,
      "meta": {},
      "text": "Budget and/or deadline changes, change in stakeholders' requests, changes in technology/stack/framework used by the developers might affect software development. \n\nRequirements Change:\nDuring development, due to stakeholders' feedbacks and requests, the requirements of the project can change to make it easier or harder to develop. Agile methods and Scrum can help the team keep up with the requirements change.\n\nTechnology Change:\nThere is always new technology being researched and developed all around the world. Developers need to adapt to a better framework or a piece of equipment when it's made available so that they can reduce costs or increase performance depending on the technology.\n\nOrganizational Change:\nFor example, if a company goes under a merger or a change in project manager, then the administration and management can change as well. A team using, for example Waterfall method, might change into using Scrum for development and vica versa. This change can also affect the project and its development positively or negatively.",
      "score": 58.3,
      "language": "ENGLISH"
    },
    {
      "id": 1262978,
      "meta": {},
      "text": "\tThe software development is a rather challenging process to control, so the different approaches are being created to make the team work more efficient, flexible and effective. (Why change happens in software development.) \n\tAlthough the “waterfall” is the traditional method, the newer “agile” approach is adapted by more and more projects. (Example for change in the real world.) In comparison to the “waterfall”, which is a completely linear flow of tasks, the “agile” is an iterative approach, that emphasises the rapid delivery of the software in complete components. \n\tThis is beneficial in a way, that the client has an opportunity to see the work being delivered, and the team can still make adjustments to throughout the development project, without significantly increasing the budget or postponing the deadlines. For instance, the client - an online store, decides to add another paying system to those included in the initial requirement. (Requirements changes + example.)\n\tFurthermore, while in the development process the team might discover new technological changes which could improve the project. An example of such are APIs, whose purpose is to hide the internal details of how a system works, exposing only those parts a programmer will find useful. (Technological changes + example.)\n\tAnother change that can affect the flow of work is organisational. For instance, an internal conflict within a team. Sometimes, members might be against the update taking place, because it does not fit into their current workload or they simply dislike the update. (Organisational changes + example.)\n\n:)\n\n1. https://www.bmc.com/blogs/artificial-intelligence-vs-machine-learning/\n2. https://eversoft.company/blog/4-steps-to-successful-change-management-in-software-dev-projects/ \n3. https://www.itechpost.com/articles/101651/20190920/4-important-changes-in-software-development.htm#:~:text=The%20automation%20of%20software%20development,streamlined%20by%20integrated%20development%20environments. \n4. https://adevait.com/software/change-management-software-development-projects\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1263398,
      "meta": {},
      "text": "1. Why do changes happen?\n\nBecause the requirement of customers is always changing, i.e., the problem statement is not static. The further reason could be that the macro environments (including political, economical, and societal environments, technological and legal environments) are always changing, leading to the change in the problem statement.  \n\n2. Example of changes:\n\nThe introduction of smartphones. The advancement in technology has facilitated the development of smartphones, replacing traditional mobile phones. Companies like Apple and Samsung have taken the place of the former giant Nokia. In terms of software engineering, mobile app development has become one of the mainstream.\n\n3. Three areas of changes:\n- Requirements changes: the requested feature of the project has changed. Example: add the dark mode for the mobile app.\n- Technology changes: the invention and adaptation of new technologies into products and projects. Example: the introduction of 4G network makes seamless video browsing possible.\n- Organizational changes:  the change of strategy, culture and/or structure within an organization. Example: Microsoft's change towards open source in 2014. Result: many famous open source software proposed by Microsoft, e.g. vscode. \n\n",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265223,
      "meta": {},
      "text": "It's absurd to talk about the verb \"to develop\" and not talk about the verb \"to change\". Change occurs for example because of the need for improvement of the product, for a quality upgrade in the market, because of the supply and demand and the changing general environment too. Did you notice how the human body evolve and develop through the centuries? That happened because of the change of environment. Why did Nokia stop selling the 3310 hit phones? Although they were a best seller once, they simply became old fashioned and outdated once the smartphones made surface in the market. Nokia now is still present in the market but as a smartphone manufacturer too. That's what keeping up with the trend and upgrading the quality means.\n\nRequirements changes result from presence of defects, internal issues and external pressure and include adding new features, functionalities that beat the older version (or a new competitor) to accomplish more success according to clients/sponsors who make such requests. \n\nOrganizational changes may be linked to clients changing their organizational structure, corporate politics, financial issues, the change of target users or the product representatives. All that has to do with organization and the need to adapt with that. \"Change of plan\" sort of...\n\nTechnology changes are very easy to predict and go in parallel with the rising scale of technology which never stops rising. The clients want more suffisticated products that can compete with other vendors. For example, phones used to have 3G then came 4G then 5G.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1265241,
      "meta": {},
      "text": "First of all, during the time new technologies become available on the market. So you need to develop your software, to still be competitive. Furthermore the preferences of the system are changing over time. There will be new requirements for the system, to make it for example more efficient or user-friendly. Also when the external laws are changing, you have to make adjustments. For example, during the pandemic, the state has lowered the VAT, so all the companies needed to make a small adjustment on their paying system. \n\n\nAnforderungsänderungen: Dabei geht es vor allem um das Änderungswesen von Projekten und dem daraus entstehenden Wunsch nach Veränderung bei bestimmten Produktmerkmalen. Dabei ist es wichtig, dass jede Änderungsanforderung in einem kontrollierten Prozess abgewickelt wird. Beispiel: Wenn in einer Firma das ganze EDV-System von Windows 7 auf Windows 10 geändert werden soll, dann ist es die Aufgabe der Entwicklern/Programmierern diese Umbruch durchzuführen. \n\nTechnological changes: It is all about improving existing technologies and developing new ones to improve the existing products and to create new products in the market. This process is a key feature in creating new market structures, and destroying obsolete markets. Example: Apple invented the iPod, which was a new technology. Because  of continues innovations, now it's one of the giants in the music industry.\n\nOrganisatorischer Wandel: Er bezieht sich auf die Aktionen, bei denen ein Unternehmen eine wichtige Komponente seiner Organisation verändert. Beispiel: Technologien oder Infrastruktur, die es für den Betrieb verwendet, oder seine internen Prozesse.",
      "score": 100,
      "language": "GERMAN"
    },
    {
      "id": 1266094,
      "meta": {},
      "text": "Reasons for change in software development include:\n- outdated tools (eg. frameworks), new technologies \n- change in requirements from user\n- change in legal requirements for software\n\nFor example, applications need to be updated to support newer phone models. \n",
      "score": 41.7,
      "language": "ENGLISH"
    },
    {
      "id": 1266378,
      "meta": {},
      "text": "During the development of a Software solution to a problem, many conditions surrounding the solution are bound to change. It is up tot the development team to deal with these changes, adapt their models, their team accordingly and continue. Change in software development can be caused by many things, first off parameters assembling the domain of the project can change. To explain with an example if you were developing an indoor tracing solution that would utilize cameras and computer vision to analyze customer behavior in shopping malls, and the data protection laws surrounding this method changed the solution has to be altered as well and the team is required to adapt to the new conditions, for example one answer could be to make the analysis anonymous. The change can also happen with the technologies used, for long term and older solutions, if the technologies used while developing in the early days are still being used and they are no longer being supported, those old technologies will hinder with and slow down the development process so the team might consider migrating from these technologies to newer ones. Another root of change is the team itself, team members can leave, new ones can come others responsibilities can be changed according to the new requirements discovered during the development process.\nChange is in the nature of any developmental process, even if none of the conditions like technology, requirements of the solution or the organization of the team itself change, software development is empirical by nature, during the development process the team will discover the intricacies and face problems that were not forseeable before and change plans accordingly.",
      "score": 100,
      "language": "ENGLISH"
    },
    {
      "id": 1266406,
      "meta": {},
      "text": "Due to the complexity of software systems, they must constantly evolve. Initial requirements of software development projects may not be as clear as one would desire. As a consequence, as the requirements for the software system become clearer, they may change. In addition, technical changes may occur over the course of a project. Therefore, a software project manager needs to be aware that changes are omnipresent in software development and, thus, need to be dealt with at all stages of the project.\n\nOne example would be a private health insurance company that offers online contracting services through its customer relationship management system, named InsuranceCompany. Users have to indicate, for instance, their date of birth, profession, as well as a plan modality. InsuranceCompany computes the price of the requested insurance policy based on the aforementioned variables. Its system must be able to handle several exceptions, such as customers who already have an existing illness.\n\nAccording to Bruegge and Dutoit (2009), “[r]equirements change as the client requests new features and as developers improve their understanding of the application domain.” In the above example, a requirements change could involve modifying, including, or excluding variables about the insurance policy customer, such as nationality. As previously mentioned, technology evolves constantly, so in the above example, artificial intelligence (AI), for instance, could bring upon major advances in predicting insurance risk and instantly adapting to it, which would have to be integrated into the software project as an own component to consider and manage. Organization change could involve changes in the project management budgets, deadlines, strategies, practices, or team.\n\nAnother example would be a private bank that offers online credit contracting services through its software system, PrivateBank. Users have to indicate, for instance, their credit score, which needs to be verified. PrivateBank computes the interest rate of the credit based on the verified credit score. It must be able to handle a wide array of exceptions, such as credit scores that are too low to receive a credit.\n\nIn the above example, a requirements change could involve modifying the extant credit verification system. In terms of technological change, big data analytics methods, for instance, could result in advances in predicting credit risk, which would have to be integrated into the software project. Moreover, organization change could involve changes in the project management, as mentioned in the previous example.\n\nReferences:\n•\tCourse Script to “Einführung in die Softwaretechnik (EIST).”\n•\tBruegge, B., & Dutoit, A. H. (2014). Object-Oriented Software Engineering. Using UML, Patterns, and Java. (3rd ed.). Essex: Pearson Education Limited.",
      "score": 100,
      "language": "ENGLISH"
    }
  ],
  "baseline_info": {
    "model": "azure_openai_gpt-4o",
    "approach": "basic",
    "generated_at": "2025-08-09T20:48:16.332303",
    "description": "Baseline feedbacks generated by GPT-4o using basic approach",
    "submission_ids_used": [
      1265409,
      1266343,
      1263721,
      1266538,
      1265422,
      1264912,
      1266386,
      1266418,
      1262589,
      1261983
    ]
  }
}