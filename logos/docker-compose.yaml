services:
  logos-server:
    restart: unless-stopped
    container_name: logos-server
    build:
      context: ../
      dockerfile: ./logos/Dockerfile
    depends_on:
      logos-db:
        condition: service_healthy
    volumes:
      -   data_volume:/src/logos
    environment:
      PROVIDER_NAME:
      BASE_URL:
    ports:
      - "8080"
      - "50051:50051"
    labels:
      - "traefik.enable=true"

      # === Route für /v1 ===
      - "traefik.http.routers.logos-server-v1.rule=PathPrefix(`/v1`)"
      - "traefik.http.routers.logos-server-v1.entrypoints=web"
      - "traefik.http.routers.logos-server-v1.service=logos-server"

      # === Route für /logosdb ===
      - "traefik.http.routers.logos-server-logosdb.rule=PathPrefix(`/logosdb`)"
      - "traefik.http.routers.logos-server-logosdb.entrypoints=web"
      - "traefik.http.routers.logos-server-logosdb.service=logos-server"

      # === Service-Port für beide ===
      - "traefik.http.services.logos-server.loadbalancer.server.port=8080"
    networks:
      - internal
  logos-db:
    image: postgres:17
    restart: unless-stopped
    container_name: logos-db
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: logosdb
      POSTGRES_HOST: logos.ase.cit.tum.de
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "--username=postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal
  logos-ui:
    build:
      context: ../
      dockerfile: ./logos/logos-ui/Dockerfile
    restart: unless-stopped
    container_name: logos-ui
    environment:
      - NODE_OPTIONS=--max-old-space-size=1024
    expose:
      - "80"
    ports:
      - "8081:80"    # host → container
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.logos-ui.rule=PathPrefix(`/`)"
      - "traefik.http.routers.logos-ui.entrypoints=web"
      - "traefik.http.services.logos-ui.loadbalancer.server.port=80"
    depends_on:
      - logos-server
    networks:
      - internal
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8080"
    ports:
      - "8080:8080"
      - "8082:8082" # Traefik-Dashboard (optional)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
volumes:
  data_volume:
  postgres_data:

networks:
  internal:
    driver: bridge